//
// Copyright (C) 2024 Harvey Mudd College & Oklahoma State University, Habib University, UET Lahore
//
// SPDX-License-Identifier: Apache-2.0 WITH SHL-2.1
///////////////////////////////////////////

#include "macros.h"

.section .text.init
.globl rvtest_entry_point

rvtest_entry_point:

# initialize signature pointer
la x4, begin_signature

    

// ******************
// Tests from: WALLY-COV-clz.S
// ******************


# initialize signature pointer
la x4, begin_signature

    
# Testcase cp_rs1 (Test source rs1 = x0)
li x0, 0x5b188328ac932537 # initialize rs1
clz x13, x0 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 0)

# Testcase cp_rs1 (Test source rs1 = x1)
li x1, 0xd09df23517ea3a4b # initialize rs1
clz x19, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 8)

# Testcase cp_rs1 (Test source rs1 = x2)
li x2, 0x05ab83e75ed8695f # initialize rs1
clz x21, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 16)

# Testcase cp_rs1 (Test source rs1 = x3)
li x3, 0x98241973fb7b4acf # initialize rs1
clz x14, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 24)

# Testcase cp_rs1 (Test source rs1 = x4)
mv x5, x4 # switch signature pointer register to avoid conflict with test
li x4, 0xcdb757fbeb4cd548 # initialize rs1
clz x1, x4 # perform operation
RVTEST_SIGUPD(x5, x0, x1, 32)

# Testcase cp_rs1 (Test source rs1 = x5)
mv x6, x5 # switch signature pointer register to avoid conflict with test
li x5, 0xd884af153f4765b6 # initialize rs1
clz x16, x5 # perform operation
RVTEST_SIGUPD(x6, x0, x16, 40)

# Testcase cp_rs1 (Test source rs1 = x6)
mv x7, x6 # switch signature pointer register to avoid conflict with test
li x6, 0xd8b5fd212d162d1b # initialize rs1
clz x3, x6 # perform operation
RVTEST_SIGUPD(x7, x0, x3, 48)

# Testcase cp_rs1 (Test source rs1 = x7)
mv x4, x7 # switch signature pointer register to avoid conflict with test
li x7, 0x474d342bc0063936 # initialize rs1
clz x26, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 56)

# Testcase cp_rs1 (Test source rs1 = x8)
li x8, 0x03df110404758254 # initialize rs1
clz x29, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 64)

# Testcase cp_rs1 (Test source rs1 = x9)
li x9, 0xe04800781bf8e1a1 # initialize rs1
clz x26, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 72)

# Testcase cp_rs1 (Test source rs1 = x10)
li x10, 0xea01e0c7daa0db83 # initialize rs1
clz x6, x10 # perform operation
RVTEST_SIGUPD(x4, x0, x6, 80)

# Testcase cp_rs1 (Test source rs1 = x11)
li x11, 0xb1bc4d7de35ec3e1 # initialize rs1
clz x30, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 88)

# Testcase cp_rs1 (Test source rs1 = x12)
li x12, 0x3edd2254c19198ce # initialize rs1
clz x3, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 96)

# Testcase cp_rs1 (Test source rs1 = x13)
li x13, 0xd962a28a9f9c2a80 # initialize rs1
clz x27, x13 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 104)

# Testcase cp_rs1 (Test source rs1 = x14)
li x14, 0xeec3325739b86f71 # initialize rs1
clz x28, x14 # perform operation
RVTEST_SIGUPD(x4, x0, x28, 112)

# Testcase cp_rs1 (Test source rs1 = x15)
li x15, 0xda20a0d98b087cf9 # initialize rs1
clz x2, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 120)

# Testcase cp_rs1 (Test source rs1 = x16)
li x16, 0xe3141d9fe342728a # initialize rs1
clz x25, x16 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 128)

# Testcase cp_rs1 (Test source rs1 = x17)
li x17, 0xf46e4184ba441572 # initialize rs1
clz x28, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x28, 136)

# Testcase cp_rs1 (Test source rs1 = x18)
li x18, 0x4bca09d438f34d8c # initialize rs1
clz x28, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x28, 144)

# Testcase cp_rs1 (Test source rs1 = x19)
li x19, 0x8f24052b30f8b455 # initialize rs1
clz x6, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x6, 152)

# Testcase cp_rs1 (Test source rs1 = x20)
li x20, 0x6e648a6d537ceaa8 # initialize rs1
clz x24, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 160)

# Testcase cp_rs1 (Test source rs1 = x21)
li x21, 0x916433197455b917 # initialize rs1
clz x13, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 168)

# Testcase cp_rs1 (Test source rs1 = x22)
li x22, 0xa25611f798492b75 # initialize rs1
clz x11, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 176)

# Testcase cp_rs1 (Test source rs1 = x23)
li x23, 0x688cfff74d8515fc # initialize rs1
clz x5, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x5, 184)

# Testcase cp_rs1 (Test source rs1 = x24)
li x24, 0xc98cbd41dcde4028 # initialize rs1
clz x13, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 192)

# Testcase cp_rs1 (Test source rs1 = x25)
li x25, 0x97241b579b606475 # initialize rs1
clz x28, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x28, 200)

# Testcase cp_rs1 (Test source rs1 = x26)
li x26, 0xadfa6011dae8f759 # initialize rs1
clz x6, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x6, 208)

# Testcase cp_rs1 (Test source rs1 = x27)
li x27, 0x7bf1de61c7ce976d # initialize rs1
clz x13, x27 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 216)

# Testcase cp_rs1 (Test source rs1 = x28)
li x28, 0xd163e6fe31a0241f # initialize rs1
clz x19, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 224)

# Testcase cp_rs1 (Test source rs1 = x29)
li x29, 0x2cd126f369aaafe7 # initialize rs1
clz x25, x29 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 232)

# Testcase cp_rs1 (Test source rs1 = x30)
li x30, 0x5029ececa251409c # initialize rs1
clz x1, x30 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 240)

# Testcase cp_rs1 (Test source rs1 = x31)
li x31, 0x4b8899f6de657cf3 # initialize rs1
clz x3, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 248)

# Testcase cp_rd (Test destination rd = x0)
li x13, 0x908fd0ab800ef854 # initialize rs1
clz x0, x13 # perform operation
RVTEST_SIGUPD(x4, x0, x0, 256)

# Testcase cp_rd (Test destination rd = x1)
li x11, 0x15cf5f72b717222d # initialize rs1
clz x1, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 264)

# Testcase cp_rd (Test destination rd = x2)
li x10, 0xf498be3364d9980e # initialize rs1
clz x2, x10 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 272)

# Testcase cp_rd (Test destination rd = x3)
li x5, 0x134ebc1bdbe47592 # initialize rs1
clz x3, x5 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 280)

# Testcase cp_rd (Test destination rd = x4)
mv x5, x4 # switch signature pointer register to avoid conflict with test
li x7, 0xc19f1c1c1659a0cf # initialize rs1
clz x4, x7 # perform operation
RVTEST_SIGUPD(x5, x0, x4, 288)

# Testcase cp_rd (Test destination rd = x5)
mv x6, x5 # switch signature pointer register to avoid conflict with test
li x28, 0xaa94503dadd48a7c # initialize rs1
clz x5, x28 # perform operation
RVTEST_SIGUPD(x6, x0, x5, 296)

# Testcase cp_rd (Test destination rd = x6)
mv x7, x6 # switch signature pointer register to avoid conflict with test
li x3, 0x229808db2a54dfa5 # initialize rs1
clz x6, x3 # perform operation
RVTEST_SIGUPD(x7, x0, x6, 304)

# Testcase cp_rd (Test destination rd = x7)
mv x4, x7 # switch signature pointer register to avoid conflict with test
li x24, 0xa6524f1f20bbed01 # initialize rs1
clz x7, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 312)

# Testcase cp_rd (Test destination rd = x8)
li x11, 0x0855aaf87d355175 # initialize rs1
clz x8, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 320)

# Testcase cp_rd (Test destination rd = x9)
li x14, 0x4819d51d6dcd4c2b # initialize rs1
clz x9, x14 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 328)

# Testcase cp_rd (Test destination rd = x10)
li x7, 0x5011cf44a3083615 # initialize rs1
clz x10, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 336)

# Testcase cp_rd (Test destination rd = x11)
li x26, 0xb88b89856c75e6df # initialize rs1
clz x11, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 344)

# Testcase cp_rd (Test destination rd = x12)
li x20, 0x7ad3b2c3fc568c2f # initialize rs1
clz x12, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 352)

# Testcase cp_rd (Test destination rd = x13)
li x6, 0xffbaa4802915d1f2 # initialize rs1
clz x13, x6 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 360)

# Testcase cp_rd (Test destination rd = x14)
li x13, 0xaa6c851ae68b900c # initialize rs1
clz x14, x13 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 368)

# Testcase cp_rd (Test destination rd = x15)
li x15, 0xec545f333d241753 # initialize rs1
clz x15, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 376)

# Testcase cp_rd (Test destination rd = x16)
li x31, 0x8f941ae628195e5e # initialize rs1
clz x16, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 384)

# Testcase cp_rd (Test destination rd = x17)
li x12, 0x3602abcd40272e41 # initialize rs1
clz x17, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 392)

# Testcase cp_rd (Test destination rd = x18)
li x10, 0xcd76754d432aa156 # initialize rs1
clz x18, x10 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 400)

# Testcase cp_rd (Test destination rd = x19)
li x31, 0xae80ec5c9f16b347 # initialize rs1
clz x19, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 408)

# Testcase cp_rd (Test destination rd = x20)
li x7, 0x3addf66f1a6f3602 # initialize rs1
clz x20, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 416)

# Testcase cp_rd (Test destination rd = x21)
li x3, 0x362f40b76b057538 # initialize rs1
clz x21, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 424)

# Testcase cp_rd (Test destination rd = x22)
li x6, 0x26f3d820b54749c6 # initialize rs1
clz x22, x6 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 432)

# Testcase cp_rd (Test destination rd = x23)
li x19, 0x37feb48431db73f9 # initialize rs1
clz x23, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 440)

# Testcase cp_rd (Test destination rd = x24)
li x26, 0x2a05c4444577cf1a # initialize rs1
clz x24, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 448)

# Testcase cp_rd (Test destination rd = x25)
li x6, 0xc841445bf286055b # initialize rs1
clz x25, x6 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 456)

# Testcase cp_rd (Test destination rd = x26)
li x21, 0x3b5c69f527703262 # initialize rs1
clz x26, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 464)

# Testcase cp_rd (Test destination rd = x27)
li x6, 0x108e13cda97e513a # initialize rs1
clz x27, x6 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 472)

# Testcase cp_rd (Test destination rd = x28)
li x18, 0x97d3e7f4bfdb48db # initialize rs1
clz x28, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x28, 480)

# Testcase cp_rd (Test destination rd = x29)
li x24, 0x075cdf6505ad4611 # initialize rs1
clz x29, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 488)

# Testcase cp_rd (Test destination rd = x30)
li x27, 0x5513af21e3806dcb # initialize rs1
clz x30, x27 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 496)

# Testcase cp_rd (Test destination rd = x31)
li x1, 0xd8ddc72d04c1e026 # initialize rs1
clz x31, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 504)

# Testcase cp_rs1_corners (Test source rs1 value = 0x0)
li x9, 0x0000000000000000 # initialize rs1
clz x13, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 512)

# Testcase cp_rs1_corners (Test source rs1 value = 0x1)
li x23, 0x0000000000000001 # initialize rs1
clz x24, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 520)

# Testcase cp_rs1_corners (Test source rs1 value = 0x2)
li x15, 0x0000000000000002 # initialize rs1
clz x5, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x5, 528)

# Testcase cp_rs1_corners (Test source rs1 value = 0x8000000000000000)
li x12, 0x8000000000000000 # initialize rs1
clz x2, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 536)

# Testcase cp_rs1_corners (Test source rs1 value = 0x8000000000000001)
li x15, 0x8000000000000001 # initialize rs1
clz x12, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 544)

# Testcase cp_rs1_corners (Test source rs1 value = 0x7fffffffffffffff)
li x27, 0x7fffffffffffffff # initialize rs1
clz x23, x27 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 552)

# Testcase cp_rs1_corners (Test source rs1 value = 0x7ffffffffffffffe)
li x12, 0x7ffffffffffffffe # initialize rs1
clz x3, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 560)

# Testcase cp_rs1_corners (Test source rs1 value = 0xffffffffffffffff)
li x15, 0xffffffffffffffff # initialize rs1
clz x19, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 568)

# Testcase cp_rs1_corners (Test source rs1 value = 0xfffffffffffffffe)
li x31, 0xfffffffffffffffe # initialize rs1
clz x21, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 576)

# Testcase cp_rs1_corners (Test source rs1 value = 0x5bbc887763ae86f2)
li x5, 0x5bbc887763ae86f2 # initialize rs1
clz x21, x5 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 584)

# Testcase cp_rs1_corners (Test source rs1 value = 0xaaaaaaaaaaaaaaaa)
li x26, 0xaaaaaaaaaaaaaaaa # initialize rs1
clz x19, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 592)

# Testcase cp_rs1_corners (Test source rs1 value = 0x5555555555555555)
li x10, 0x5555555555555555 # initialize rs1
clz x29, x10 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 600)

# Testcase cp_rs1_corners (Test source rs1 value = 0xffffffff)
li x15, 0x00000000ffffffff # initialize rs1
clz x18, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 608)

# Testcase cp_rs1_corners (Test source rs1 value = 0xfffffffe)
li x6, 0x00000000fffffffe # initialize rs1
clz x11, x6 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 616)

# Testcase cp_rs1_corners (Test source rs1 value = 0x100000000)
li x24, 0x0000000100000000 # initialize rs1
clz x25, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 624)

# Testcase cp_rs1_corners (Test source rs1 value = 0x100000001)
li x20, 0x0000000100000001 # initialize rs1
clz x15, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 632)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x0)
li x0, 0x49cf5a6f135ff974 # initialize rs1
clz x0, x0 # perform operation
RVTEST_SIGUPD(x4, x0, x0, 640)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x1)
li x1, 0x7ed9667460245b87 # initialize rs1
clz x1, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 648)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x2)
li x2, 0x61c4e1eda8055c75 # initialize rs1
clz x2, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 656)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x3)
li x3, 0x5fbf36ff85f5c9da # initialize rs1
clz x3, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 664)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x4)
mv x5, x4 # switch signature pointer register to avoid conflict with test
li x4, 0x5f8df71d8019ada5 # initialize rs1
clz x4, x4 # perform operation
RVTEST_SIGUPD(x5, x0, x4, 672)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x5)
mv x6, x5 # switch signature pointer register to avoid conflict with test
li x5, 0x3d3766008a427ed2 # initialize rs1
clz x5, x5 # perform operation
RVTEST_SIGUPD(x6, x0, x5, 680)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x6)
mv x7, x6 # switch signature pointer register to avoid conflict with test
li x6, 0xe225be38b87a48de # initialize rs1
clz x6, x6 # perform operation
RVTEST_SIGUPD(x7, x0, x6, 688)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x7)
mv x4, x7 # switch signature pointer register to avoid conflict with test
li x7, 0xe2814688b9499a1e # initialize rs1
clz x7, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 696)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x8)
li x8, 0x169e7478dcdf47c9 # initialize rs1
clz x8, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 704)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x9)
li x9, 0x3710dd7074a0206e # initialize rs1
clz x9, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 712)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x10)
li x10, 0x136c76640ae6c203 # initialize rs1
clz x10, x10 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 720)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x11)
li x11, 0xec1ef149e3345a6a # initialize rs1
clz x11, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 728)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x12)
li x12, 0x8f1679e62f398ac6 # initialize rs1
clz x12, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 736)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x13)
li x13, 0x7689dc4c8c408f9f # initialize rs1
clz x13, x13 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 744)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x14)
li x14, 0x96a5df60690ccf6e # initialize rs1
clz x14, x14 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 752)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x15)
li x15, 0x860a20e20f9fcf8b # initialize rs1
clz x15, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 760)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x16)
li x16, 0x790febdf21f360ee # initialize rs1
clz x16, x16 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 768)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x17)
li x17, 0xf22802537663eb45 # initialize rs1
clz x17, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 776)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x18)
li x18, 0xd03b9857aa601047 # initialize rs1
clz x18, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 784)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x19)
li x19, 0x7a762003fa0ff537 # initialize rs1
clz x19, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 792)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x20)
li x20, 0xd791ad6bf5e30383 # initialize rs1
clz x20, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 800)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x21)
li x21, 0x291047e0103bba5a # initialize rs1
clz x21, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 808)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x22)
li x22, 0xb10a0deecff5550d # initialize rs1
clz x22, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 816)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x23)
li x23, 0xeda93cebb12312f4 # initialize rs1
clz x23, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 824)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x24)
li x24, 0x7ee43be8c487d5f6 # initialize rs1
clz x24, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 832)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x25)
li x25, 0x165d4c25fb333a12 # initialize rs1
clz x25, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 840)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x26)
li x26, 0xc1d905417ccdc4f8 # initialize rs1
clz x26, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 848)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x27)
li x27, 0xecefbb4f06413aa0 # initialize rs1
clz x27, x27 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 856)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x28)
li x28, 0x0cf54672cc5977e2 # initialize rs1
clz x28, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x28, 864)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x29)
li x29, 0xcb22108d70cda308 # initialize rs1
clz x29, x29 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 872)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x30)
li x30, 0x4c5f77aecd39734b # initialize rs1
clz x30, x30 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 880)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x31)
li x31, 0xaac91c07787a968d # initialize rs1
clz x31, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 888)

# Testcase cp_gpr/fpr_hazard nohaz test
add x15, x25, x23 # perform first operation
clz x29, x9 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard nohaz test
add x28, x24, x23 # perform first operation
clz x5, x11 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard nohaz test
add x25, x16, x30 # perform first operation
clz x23, x9 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard raw test
add x18, x3, x6 # perform first operation
clz x18, x19 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard raw test
add x10, x29, x22 # perform first operation
clz x10, x26 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard raw test
add x19, x10, x29 # perform first operation
clz x19, x30 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard waw test
add x15, x31, x17 # perform first operation
clz x15, x22 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard waw test
add x14, x7, x17 # perform first operation
clz x14, x26 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard waw test
add x10, x22, x7 # perform first operation
clz x10, x19 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard war test
add x7, x5, x21 # perform first operation
clz x5, x18 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard war test
add x3, x25, x10 # perform first operation
clz x10, x8 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard war test
add x2, x20, x27 # perform first operation
clz x24, x16 # perform second (triggering) operation

#.EQU SIGSIZE,896


// ******************
// Tests from: WALLY-COV-max.S
// ******************


# initialize signature pointer
la x4, begin_signature

    
# Testcase cp_rs1 (Test source rs1 = x0)
li x0, 0x028886a6ea8f8fc8 # initialize rs1
li x8, 0x4a1b2ff46b480d98 # initialize rs2
max x11, x0, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 0)

# Testcase cp_rs1 (Test source rs1 = x1)
li x1, 0xe83773754b3311ef # initialize rs1
li x19, 0x303cbeb793367bc4 # initialize rs2
max x14, x1, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 8)

# Testcase cp_rs1 (Test source rs1 = x2)
li x2, 0x100f55a6b637a70c # initialize rs1
li x28, 0x8f8a597acf4800f9 # initialize rs2
max x5, x2, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x5, 16)

# Testcase cp_rs1 (Test source rs1 = x3)
li x3, 0xd51df8b5e7c5455a # initialize rs1
li x25, 0x376842179f6a5879 # initialize rs2
max x19, x3, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 24)

# Testcase cp_rs1 (Test source rs1 = x4)
mv x5, x4 # switch signature pointer register to avoid conflict with test
li x4, 0x100ba83a4e50286a # initialize rs1
li x29, 0x0294d5caef4abace # initialize rs2
max x25, x4, x29 # perform operation
RVTEST_SIGUPD(x5, x0, x25, 32)

# Testcase cp_rs1 (Test source rs1 = x5)
mv x6, x5 # switch signature pointer register to avoid conflict with test
li x5, 0x07fe44fc72c07b96 # initialize rs1
li x9, 0xcb3fcfd41d653504 # initialize rs2
max x28, x5, x9 # perform operation
RVTEST_SIGUPD(x6, x0, x28, 40)

# Testcase cp_rs1 (Test source rs1 = x6)
mv x7, x6 # switch signature pointer register to avoid conflict with test
li x6, 0x9245554e46439755 # initialize rs1
li x18, 0xb65419ec271baac9 # initialize rs2
max x3, x6, x18 # perform operation
RVTEST_SIGUPD(x7, x0, x3, 48)

# Testcase cp_rs1 (Test source rs1 = x7)
mv x4, x7 # switch signature pointer register to avoid conflict with test
li x7, 0x7abf978581ad681c # initialize rs1
li x31, 0xf31880662ec229b4 # initialize rs2
max x10, x7, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 56)

# Testcase cp_rs1 (Test source rs1 = x8)
li x8, 0xf8c46175b1acbfcd # initialize rs1
li x11, 0x074cdc440f5f8222 # initialize rs2
max x18, x8, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 64)

# Testcase cp_rs1 (Test source rs1 = x9)
li x9, 0x9d425cfeb4f4d550 # initialize rs1
li x13, 0xa2938350cb7d505a # initialize rs2
max x1, x9, x13 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 72)

# Testcase cp_rs1 (Test source rs1 = x10)
li x10, 0xd64e34d8161a5182 # initialize rs1
li x29, 0xeaae4bc14f5cba56 # initialize rs2
max x20, x10, x29 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 80)

# Testcase cp_rs1 (Test source rs1 = x11)
li x11, 0x13b2824ba7fa92ea # initialize rs1
li x22, 0x54c647be0c9ce220 # initialize rs2
max x2, x11, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 88)

# Testcase cp_rs1 (Test source rs1 = x12)
li x12, 0xa8facf445e365821 # initialize rs1
li x2, 0xd2c72624b48e66d5 # initialize rs2
max x7, x12, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 96)

# Testcase cp_rs1 (Test source rs1 = x13)
li x13, 0xb008b66e03bb824a # initialize rs1
li x7, 0x006bd7906dc9fc37 # initialize rs2
max x18, x13, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 104)

# Testcase cp_rs1 (Test source rs1 = x14)
li x14, 0x448991c87280a617 # initialize rs1
li x9, 0x3c8889e70ac3433b # initialize rs2
max x27, x14, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 112)

# Testcase cp_rs1 (Test source rs1 = x15)
li x15, 0xa1038e0a52b5a6f0 # initialize rs1
li x12, 0xce56b4ece35db21c # initialize rs2
max x17, x15, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 120)

# Testcase cp_rs1 (Test source rs1 = x16)
li x16, 0x56437d520bb7d430 # initialize rs1
li x25, 0xd625e9c977672cf8 # initialize rs2
max x5, x16, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x5, 128)

# Testcase cp_rs1 (Test source rs1 = x17)
li x17, 0x25250412ef5aafe8 # initialize rs1
li x1, 0x1a237dd1b119f2ef # initialize rs2
max x13, x17, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 136)

# Testcase cp_rs1 (Test source rs1 = x18)
li x18, 0x46a292ca86dc8fdd # initialize rs1
li x17, 0x722fcc13efbeb2aa # initialize rs2
max x22, x18, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 144)

# Testcase cp_rs1 (Test source rs1 = x19)
li x19, 0x075ea2c752e1656f # initialize rs1
li x31, 0x81226bd7b7e9e76b # initialize rs2
max x21, x19, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 152)

# Testcase cp_rs1 (Test source rs1 = x20)
li x20, 0xeded8d09420105df # initialize rs1
li x12, 0xfb64c2253e88877c # initialize rs2
max x5, x20, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x5, 160)

# Testcase cp_rs1 (Test source rs1 = x21)
li x21, 0xa542641cb6e7dc23 # initialize rs1
li x30, 0x1828637b214139f7 # initialize rs2
max x24, x21, x30 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 168)

# Testcase cp_rs1 (Test source rs1 = x22)
li x22, 0x4913904ebffc2ed0 # initialize rs1
li x8, 0x5eb0d7a39a9ccc21 # initialize rs2
max x30, x22, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 176)

# Testcase cp_rs1 (Test source rs1 = x23)
li x23, 0xebbe2b8b02e345eb # initialize rs1
li x26, 0x52e3fe36c836dde7 # initialize rs2
max x10, x23, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 184)

# Testcase cp_rs1 (Test source rs1 = x24)
li x24, 0x351b5ef37cfe7f9a # initialize rs1
li x19, 0xd29213cb9071ab83 # initialize rs2
max x11, x24, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 192)

# Testcase cp_rs1 (Test source rs1 = x25)
li x25, 0x18e5268fac74cd93 # initialize rs1
li x2, 0xab71835a188077d3 # initialize rs2
max x17, x25, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 200)

# Testcase cp_rs1 (Test source rs1 = x26)
li x26, 0x8ac03c21c6897073 # initialize rs1
li x7, 0xc85550911da570ca # initialize rs2
max x16, x26, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 208)

# Testcase cp_rs1 (Test source rs1 = x27)
li x27, 0x215303ef1c7a23a4 # initialize rs1
li x22, 0x41de049e64be1965 # initialize rs2
max x2, x27, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 216)

# Testcase cp_rs1 (Test source rs1 = x28)
li x28, 0x19f1737e113fd018 # initialize rs1
li x9, 0xa02222b3d1be7074 # initialize rs2
max x25, x28, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 224)

# Testcase cp_rs1 (Test source rs1 = x29)
li x29, 0x519a3c1644719699 # initialize rs1
li x11, 0xded24178bda1c03d # initialize rs2
max x28, x29, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x28, 232)

# Testcase cp_rs1 (Test source rs1 = x30)
li x30, 0xffff1bb2e9f65a2c # initialize rs1
li x22, 0xc1b041047893bd71 # initialize rs2
max x29, x30, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 240)

# Testcase cp_rs1 (Test source rs1 = x31)
li x31, 0xf5c9df9805ebd5c2 # initialize rs1
li x28, 0x3ed4fd1f0f7b8fb4 # initialize rs2
max x30, x31, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 248)

# Testcase cp_rs2 (Test source rs2 = x0)
li x14, 0x25919e0c8ee79406 # initialize rs1
li x0, 0x605efdd1a290cbf1 # initialize rs2
max x29, x14, x0 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 256)

# Testcase cp_rs2 (Test source rs2 = x1)
li x10, 0xaa3800aa270ba498 # initialize rs1
li x1, 0x09183a48e18d9dd4 # initialize rs2
max x23, x10, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 264)

# Testcase cp_rs2 (Test source rs2 = x2)
li x10, 0x7664448d4d95b99b # initialize rs1
li x2, 0x78a9ce6fa049e1ee # initialize rs2
max x7, x10, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 272)

# Testcase cp_rs2 (Test source rs2 = x3)
li x26, 0x45b33b3315ac5451 # initialize rs1
li x3, 0x701c71ca5fb69a56 # initialize rs2
max x18, x26, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 280)

# Testcase cp_rs2 (Test source rs2 = x4)
mv x5, x4 # switch signature pointer register to avoid conflict with test
li x16, 0x89148ff51283e92d # initialize rs1
li x4, 0x4697df668801673c # initialize rs2
max x27, x16, x4 # perform operation
RVTEST_SIGUPD(x5, x0, x27, 288)

# Testcase cp_rs2 (Test source rs2 = x5)
mv x6, x5 # switch signature pointer register to avoid conflict with test
li x11, 0xf26891db6729be28 # initialize rs1
li x5, 0xcb899356cf76c4e6 # initialize rs2
max x31, x11, x5 # perform operation
RVTEST_SIGUPD(x6, x0, x31, 296)

# Testcase cp_rs2 (Test source rs2 = x6)
mv x7, x6 # switch signature pointer register to avoid conflict with test
li x20, 0x5c55c5be93187f20 # initialize rs1
li x6, 0xdb912d2fad0a4bfa # initialize rs2
max x23, x20, x6 # perform operation
RVTEST_SIGUPD(x7, x0, x23, 304)

# Testcase cp_rs2 (Test source rs2 = x7)
mv x4, x7 # switch signature pointer register to avoid conflict with test
li x5, 0xfa8ce927eab67d02 # initialize rs1
li x7, 0xbe96f95781889052 # initialize rs2
max x16, x5, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 312)

# Testcase cp_rs2 (Test source rs2 = x8)
li x23, 0x28d4636b4d66cc89 # initialize rs1
li x8, 0x66a3ebf5470181bc # initialize rs2
max x13, x23, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 320)

# Testcase cp_rs2 (Test source rs2 = x9)
li x12, 0x32953684e9ed93a9 # initialize rs1
li x9, 0x7b79a2c819f42792 # initialize rs2
max x11, x12, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 328)

# Testcase cp_rs2 (Test source rs2 = x10)
li x18, 0x2ccb06102ac6a010 # initialize rs1
li x10, 0xa28cdb53f1fc04e5 # initialize rs2
max x15, x18, x10 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 336)

# Testcase cp_rs2 (Test source rs2 = x11)
li x14, 0x55a8aa3f24eecaeb # initialize rs1
li x11, 0xcb8e6d6b2160874c # initialize rs2
max x29, x14, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 344)

# Testcase cp_rs2 (Test source rs2 = x12)
li x30, 0x9722da74c61e4625 # initialize rs1
li x12, 0xde3a37215e283006 # initialize rs2
max x24, x30, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 352)

# Testcase cp_rs2 (Test source rs2 = x13)
li x1, 0x35fd3415a164cd95 # initialize rs1
li x13, 0xfc526ecefcdc8824 # initialize rs2
max x21, x1, x13 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 360)

# Testcase cp_rs2 (Test source rs2 = x14)
li x9, 0x3acfed1a597b45e7 # initialize rs1
li x14, 0x8d2be4bcb44128ce # initialize rs2
max x11, x9, x14 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 368)

# Testcase cp_rs2 (Test source rs2 = x15)
li x26, 0x4e29eb3921068139 # initialize rs1
li x15, 0xfd083104c5718559 # initialize rs2
max x27, x26, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 376)

# Testcase cp_rs2 (Test source rs2 = x16)
li x3, 0xde3a6ef8aaaf2b95 # initialize rs1
li x16, 0xb5382e4e27d87164 # initialize rs2
max x12, x3, x16 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 384)

# Testcase cp_rs2 (Test source rs2 = x17)
li x19, 0xbc07833863500454 # initialize rs1
li x17, 0x46e943059a11d7fa # initialize rs2
max x13, x19, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 392)

# Testcase cp_rs2 (Test source rs2 = x18)
li x12, 0x237698e124db9999 # initialize rs1
li x18, 0x1cadc5510525513d # initialize rs2
max x10, x12, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 400)

# Testcase cp_rs2 (Test source rs2 = x19)
li x11, 0xfb3e90a5d4411d77 # initialize rs1
li x19, 0xfae60424e7ff1264 # initialize rs2
max x3, x11, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 408)

# Testcase cp_rs2 (Test source rs2 = x20)
li x18, 0x7905a9ce02b51bb4 # initialize rs1
li x20, 0x893d97397d731771 # initialize rs2
max x11, x18, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 416)

# Testcase cp_rs2 (Test source rs2 = x21)
li x13, 0x5e613834be79490c # initialize rs1
li x21, 0x576b2b855b369cd7 # initialize rs2
max x2, x13, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 424)

# Testcase cp_rs2 (Test source rs2 = x22)
li x5, 0xa6cf136a458827f9 # initialize rs1
li x22, 0x3caab5cdcea050ec # initialize rs2
max x30, x5, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 432)

# Testcase cp_rs2 (Test source rs2 = x23)
li x13, 0xeb20f2e849195944 # initialize rs1
li x23, 0x645ce441e7d27531 # initialize rs2
max x28, x13, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x28, 440)

# Testcase cp_rs2 (Test source rs2 = x24)
li x22, 0x87f82ae9af9b0ed5 # initialize rs1
li x24, 0x500eabbabcf03cb0 # initialize rs2
max x28, x22, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x28, 448)

# Testcase cp_rs2 (Test source rs2 = x25)
li x17, 0x255f02a2f229053f # initialize rs1
li x25, 0x0871de2b94bd00a1 # initialize rs2
max x5, x17, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x5, 456)

# Testcase cp_rs2 (Test source rs2 = x26)
li x16, 0x7763fad6e54b74b4 # initialize rs1
li x26, 0x5035d03917ae1a64 # initialize rs2
max x13, x16, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 464)

# Testcase cp_rs2 (Test source rs2 = x27)
li x14, 0x71ea1626cd92f8cc # initialize rs1
li x27, 0x95899b05304d542a # initialize rs2
max x1, x14, x27 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 472)

# Testcase cp_rs2 (Test source rs2 = x28)
li x14, 0x8b8986a750477bd7 # initialize rs1
li x28, 0x7a05704c3c664088 # initialize rs2
max x13, x14, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 480)

# Testcase cp_rs2 (Test source rs2 = x29)
li x12, 0x625a1ff8445a61b8 # initialize rs1
li x29, 0xefab851b5e17ae84 # initialize rs2
max x9, x12, x29 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 488)

# Testcase cp_rs2 (Test source rs2 = x30)
li x12, 0x16561f185f38bf1d # initialize rs1
li x30, 0x99d01501b70a095e # initialize rs2
max x23, x12, x30 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 496)

# Testcase cp_rs2 (Test source rs2 = x31)
li x9, 0xfd62d03668fadd47 # initialize rs1
li x31, 0xfa4d7c559f4b1b62 # initialize rs2
max x12, x9, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 504)

# Testcase cp_rd (Test destination rd = x0)
li x24, 0x0324015d913185c8 # initialize rs1
li x12, 0x154c8d7b4126db62 # initialize rs2
max x0, x24, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x0, 512)

# Testcase cp_rd (Test destination rd = x1)
li x16, 0x918185533065ef7a # initialize rs1
li x15, 0x0a119f1c9424952b # initialize rs2
max x1, x16, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 520)

# Testcase cp_rd (Test destination rd = x2)
li x15, 0x2d4ad1f759a4c261 # initialize rs1
li x12, 0x0751be879d914fea # initialize rs2
max x2, x15, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 528)

# Testcase cp_rd (Test destination rd = x3)
li x26, 0x58c5ef527a8d0bc3 # initialize rs1
li x7, 0x00f8d6b5b80f98b6 # initialize rs2
max x3, x26, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 536)

# Testcase cp_rd (Test destination rd = x4)
mv x5, x4 # switch signature pointer register to avoid conflict with test
li x29, 0xd1cb9c8b09ad6421 # initialize rs1
li x27, 0x36cd89b3f338d6d1 # initialize rs2
max x4, x29, x27 # perform operation
RVTEST_SIGUPD(x5, x0, x4, 544)

# Testcase cp_rd (Test destination rd = x5)
mv x6, x5 # switch signature pointer register to avoid conflict with test
li x9, 0x3e1640cd1d4a60f4 # initialize rs1
li x30, 0xe249b3331daccd52 # initialize rs2
max x5, x9, x30 # perform operation
RVTEST_SIGUPD(x6, x0, x5, 552)

# Testcase cp_rd (Test destination rd = x6)
mv x7, x6 # switch signature pointer register to avoid conflict with test
li x2, 0xab77708c8d5b226b # initialize rs1
li x11, 0x85537baac8240e94 # initialize rs2
max x6, x2, x11 # perform operation
RVTEST_SIGUPD(x7, x0, x6, 560)

# Testcase cp_rd (Test destination rd = x7)
mv x4, x7 # switch signature pointer register to avoid conflict with test
li x14, 0x54bdfaf991b4a024 # initialize rs1
li x16, 0x5e645ad3f50b46a7 # initialize rs2
max x7, x14, x16 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 568)

# Testcase cp_rd (Test destination rd = x8)
li x27, 0x67fa6f5ef88cf0ff # initialize rs1
li x8, 0xd73e31d8c12bbaac # initialize rs2
max x8, x27, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 576)

# Testcase cp_rd (Test destination rd = x9)
li x21, 0xb53606faa41d3cb4 # initialize rs1
li x16, 0x352a500a7c8b09d0 # initialize rs2
max x9, x21, x16 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 584)

# Testcase cp_rd (Test destination rd = x10)
li x21, 0x4881b0680bcc34fa # initialize rs1
li x3, 0x7797ab724c8b6f63 # initialize rs2
max x10, x21, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 592)

# Testcase cp_rd (Test destination rd = x11)
li x16, 0xb21599694e897d8d # initialize rs1
li x31, 0x91b24061728c4c6b # initialize rs2
max x11, x16, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 600)

# Testcase cp_rd (Test destination rd = x12)
li x11, 0x06d70b8bdf4eb79d # initialize rs1
li x27, 0xa37f4d416642dbe8 # initialize rs2
max x12, x11, x27 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 608)

# Testcase cp_rd (Test destination rd = x13)
li x12, 0x829bfe2b71c4aae8 # initialize rs1
li x7, 0x017b26e0e4459512 # initialize rs2
max x13, x12, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 616)

# Testcase cp_rd (Test destination rd = x14)
li x14, 0x8633e9fafd320789 # initialize rs1
li x24, 0x6d039bc49aa958d5 # initialize rs2
max x14, x14, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 624)

# Testcase cp_rd (Test destination rd = x15)
li x29, 0x3e5daee2a4920b03 # initialize rs1
li x31, 0xb43264e54da8454f # initialize rs2
max x15, x29, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 632)

# Testcase cp_rd (Test destination rd = x16)
li x13, 0x89302ce3dbe8c195 # initialize rs1
li x9, 0x1343fa041baca7b5 # initialize rs2
max x16, x13, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 640)

# Testcase cp_rd (Test destination rd = x17)
li x23, 0x865cb73aafcc22dc # initialize rs1
li x6, 0xf6e9df2c56658786 # initialize rs2
max x17, x23, x6 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 648)

# Testcase cp_rd (Test destination rd = x18)
li x7, 0xa6a5a659861e1619 # initialize rs1
li x30, 0xd010d87a15b3d938 # initialize rs2
max x18, x7, x30 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 656)

# Testcase cp_rd (Test destination rd = x19)
li x2, 0x363654ece5e7af77 # initialize rs1
li x6, 0xbb92fa998b6cfd50 # initialize rs2
max x19, x2, x6 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 664)

# Testcase cp_rd (Test destination rd = x20)
li x6, 0x84e2bf2b65b6a7a1 # initialize rs1
li x22, 0x762c49e2117ad702 # initialize rs2
max x20, x6, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 672)

# Testcase cp_rd (Test destination rd = x21)
li x20, 0x89788a6c71556ab8 # initialize rs1
li x29, 0x29ad72546f7a4614 # initialize rs2
max x21, x20, x29 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 680)

# Testcase cp_rd (Test destination rd = x22)
li x25, 0x7bca234c2b9f73b2 # initialize rs1
li x28, 0x8d7b44080c8a0d7b # initialize rs2
max x22, x25, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 688)

# Testcase cp_rd (Test destination rd = x23)
li x18, 0x8d4ef4073d13278d # initialize rs1
li x7, 0x40b56f585928cfa5 # initialize rs2
max x23, x18, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 696)

# Testcase cp_rd (Test destination rd = x24)
li x6, 0x90638a96d96353ae # initialize rs1
li x5, 0xff4822221b06756a # initialize rs2
max x24, x6, x5 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 704)

# Testcase cp_rd (Test destination rd = x25)
li x31, 0x489c5981e9ccb66b # initialize rs1
li x13, 0x739ed976346460ef # initialize rs2
max x25, x31, x13 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 712)

# Testcase cp_rd (Test destination rd = x26)
li x15, 0x7eaae51c8fafd945 # initialize rs1
li x26, 0x7a6af299999a180f # initialize rs2
max x26, x15, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 720)

# Testcase cp_rd (Test destination rd = x27)
li x15, 0x71d39f260df9b5b0 # initialize rs1
li x21, 0xb7c3fdc2be209d9d # initialize rs2
max x27, x15, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 728)

# Testcase cp_rd (Test destination rd = x28)
li x5, 0x4dd69d5ba743a56b # initialize rs1
li x26, 0x3b8df5596c9c379a # initialize rs2
max x28, x5, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x28, 736)

# Testcase cp_rd (Test destination rd = x29)
li x20, 0xde546e2c52d12d3b # initialize rs1
li x23, 0xa3e3e9537a599df1 # initialize rs2
max x29, x20, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 744)

# Testcase cp_rd (Test destination rd = x30)
li x15, 0x8cba1f35e3b6441b # initialize rs1
li x25, 0xd887de51f21291b9 # initialize rs2
max x30, x15, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 752)

# Testcase cp_rd (Test destination rd = x31)
li x27, 0x0873e1b2ea8d8164 # initialize rs1
li x19, 0x325050c11ba8baf8 # initialize rs2
max x31, x27, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 760)

# Testcase cp_rs1_corners (Test source rs1 value = 0x0)
li x21, 0x0000000000000000 # initialize rs1
li x5, 0x8afe32bc4f0f4a20 # initialize rs2
max x19, x21, x5 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 768)

# Testcase cp_rs1_corners (Test source rs1 value = 0x1)
li x11, 0x0000000000000001 # initialize rs1
li x10, 0x34dd4943beae25a9 # initialize rs2
max x5, x11, x10 # perform operation
RVTEST_SIGUPD(x4, x0, x5, 776)

# Testcase cp_rs1_corners (Test source rs1 value = 0x2)
li x18, 0x0000000000000002 # initialize rs1
li x23, 0x54d23095bf551ec1 # initialize rs2
max x21, x18, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 784)

# Testcase cp_rs1_corners (Test source rs1 value = 0x8000000000000000)
li x1, 0x8000000000000000 # initialize rs1
li x15, 0x33b73a5ef998d8bc # initialize rs2
max x20, x1, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 792)

# Testcase cp_rs1_corners (Test source rs1 value = 0x8000000000000001)
li x23, 0x8000000000000001 # initialize rs1
li x12, 0x53ac341495390074 # initialize rs2
max x20, x23, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 800)

# Testcase cp_rs1_corners (Test source rs1 value = 0x7fffffffffffffff)
li x25, 0x7fffffffffffffff # initialize rs1
li x10, 0xe0a9d96fc1e26ac4 # initialize rs2
max x30, x25, x10 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 808)

# Testcase cp_rs1_corners (Test source rs1 value = 0x7ffffffffffffffe)
li x2, 0x7ffffffffffffffe # initialize rs1
li x7, 0xe49fd25249b22e13 # initialize rs2
max x31, x2, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 816)

# Testcase cp_rs1_corners (Test source rs1 value = 0xffffffffffffffff)
li x10, 0xffffffffffffffff # initialize rs1
li x8, 0x0a53ea9c2d1f9c28 # initialize rs2
max x20, x10, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 824)

# Testcase cp_rs1_corners (Test source rs1 value = 0xfffffffffffffffe)
li x26, 0xfffffffffffffffe # initialize rs1
li x18, 0xdd87d67aad60942e # initialize rs2
max x30, x26, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 832)

# Testcase cp_rs1_corners (Test source rs1 value = 0x5bbc887763ae86f2)
li x1, 0x5bbc887763ae86f2 # initialize rs1
li x17, 0xa795160fbe8ae6f5 # initialize rs2
max x16, x1, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 840)

# Testcase cp_rs1_corners (Test source rs1 value = 0xaaaaaaaaaaaaaaaa)
li x15, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x26, 0x71fad93f39ef21f9 # initialize rs2
max x20, x15, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 848)

# Testcase cp_rs1_corners (Test source rs1 value = 0x5555555555555555)
li x25, 0x5555555555555555 # initialize rs1
li x6, 0x1602cb3aaa4340b5 # initialize rs2
max x31, x25, x6 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 856)

# Testcase cp_rs1_corners (Test source rs1 value = 0xffffffff)
li x6, 0x00000000ffffffff # initialize rs1
li x19, 0x6b1cb48da7cf3fb3 # initialize rs2
max x31, x6, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 864)

# Testcase cp_rs1_corners (Test source rs1 value = 0xfffffffe)
li x31, 0x00000000fffffffe # initialize rs1
li x21, 0xa03445e286c4fb94 # initialize rs2
max x23, x31, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 872)

# Testcase cp_rs1_corners (Test source rs1 value = 0x100000000)
li x12, 0x0000000100000000 # initialize rs1
li x21, 0xae147c2d78ca21ff # initialize rs2
max x8, x12, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 880)

# Testcase cp_rs1_corners (Test source rs1 value = 0x100000001)
li x20, 0x0000000100000001 # initialize rs1
li x24, 0x8380e7ea14f04f97 # initialize rs2
max x27, x20, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 888)

# Testcase cp_rs2_corners (Test source rs2 value = 0x0)
li x19, 0x7349eb327ab2169a # initialize rs1
li x2, 0x0000000000000000 # initialize rs2
max x25, x19, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 896)

# Testcase cp_rs2_corners (Test source rs2 value = 0x1)
li x24, 0xd6f9af18374604bb # initialize rs1
li x23, 0x0000000000000001 # initialize rs2
max x30, x24, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 904)

# Testcase cp_rs2_corners (Test source rs2 value = 0x2)
li x17, 0x07b29e65b7c927cd # initialize rs1
li x28, 0x0000000000000002 # initialize rs2
max x23, x17, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 912)

# Testcase cp_rs2_corners (Test source rs2 value = 0x8000000000000000)
li x11, 0xf1a125952dc32db0 # initialize rs1
li x18, 0x8000000000000000 # initialize rs2
max x15, x11, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 920)

# Testcase cp_rs2_corners (Test source rs2 value = 0x8000000000000001)
li x24, 0x785dc1abec5d73a0 # initialize rs1
li x11, 0x8000000000000001 # initialize rs2
max x28, x24, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x28, 928)

# Testcase cp_rs2_corners (Test source rs2 value = 0x7fffffffffffffff)
li x5, 0xf4335e3e8de44647 # initialize rs1
li x21, 0x7fffffffffffffff # initialize rs2
max x23, x5, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 936)

# Testcase cp_rs2_corners (Test source rs2 value = 0x7ffffffffffffffe)
li x13, 0x98d19e9949c527d2 # initialize rs1
li x27, 0x7ffffffffffffffe # initialize rs2
max x6, x13, x27 # perform operation
RVTEST_SIGUPD(x4, x0, x6, 944)

# Testcase cp_rs2_corners (Test source rs2 value = 0xffffffffffffffff)
li x6, 0x7fd7b655496700b7 # initialize rs1
li x25, 0xffffffffffffffff # initialize rs2
max x26, x6, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 952)

# Testcase cp_rs2_corners (Test source rs2 value = 0xfffffffffffffffe)
li x26, 0xd7cb0da6c2e491c8 # initialize rs1
li x22, 0xfffffffffffffffe # initialize rs2
max x3, x26, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 960)

# Testcase cp_rs2_corners (Test source rs2 value = 0x5bbc887763ae86f2)
li x13, 0x76fe002b22667bce # initialize rs1
li x14, 0x5bbc887763ae86f2 # initialize rs2
max x18, x13, x14 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 968)

# Testcase cp_rs2_corners (Test source rs2 value = 0xaaaaaaaaaaaaaaaa)
li x20, 0x5918956aaa10caf2 # initialize rs1
li x15, 0xaaaaaaaaaaaaaaaa # initialize rs2
max x18, x20, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 976)

# Testcase cp_rs2_corners (Test source rs2 value = 0x5555555555555555)
li x19, 0xe09117bcc2d1db04 # initialize rs1
li x23, 0x5555555555555555 # initialize rs2
max x12, x19, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 984)

# Testcase cp_rs2_corners (Test source rs2 value = 0xffffffff)
li x23, 0xeded998abddfa633 # initialize rs1
li x27, 0x00000000ffffffff # initialize rs2
max x31, x23, x27 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 992)

# Testcase cp_rs2_corners (Test source rs2 value = 0xfffffffe)
li x16, 0x2fe9a86ca35c5584 # initialize rs1
li x11, 0x00000000fffffffe # initialize rs2
max x18, x16, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 1000)

# Testcase cp_rs2_corners (Test source rs2 value = 0x100000000)
li x22, 0x029018da81023aad # initialize rs1
li x2, 0x0000000100000000 # initialize rs2
max x17, x22, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 1008)

# Testcase cp_rs2_corners (Test source rs2 value = 0x100000001)
li x19, 0x0dab7536c822f0fd # initialize rs1
li x9, 0x0000000100000001 # initialize rs2
max x26, x19, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 1016)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0x0)
li x13, 0x0000000000000000 # initialize rs1
li x27, 0x0000000000000000 # initialize rs2
max x10, x13, x27 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 1024)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0x1)
li x16, 0x0000000000000000 # initialize rs1
li x11, 0x0000000000000001 # initialize rs2
max x26, x16, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 1032)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0x2)
li x21, 0x0000000000000000 # initialize rs1
li x29, 0x0000000000000002 # initialize rs2
max x11, x21, x29 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 1040)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0x8000000000000000)
li x31, 0x0000000000000000 # initialize rs1
li x13, 0x8000000000000000 # initialize rs2
max x14, x31, x13 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 1048)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0x8000000000000001)
li x28, 0x0000000000000000 # initialize rs1
li x31, 0x8000000000000001 # initialize rs2
max x10, x28, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 1056)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0x7fffffffffffffff)
li x8, 0x0000000000000000 # initialize rs1
li x21, 0x7fffffffffffffff # initialize rs2
max x29, x8, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 1064)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0x7ffffffffffffffe)
li x31, 0x0000000000000000 # initialize rs1
li x6, 0x7ffffffffffffffe # initialize rs2
max x24, x31, x6 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 1072)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0xffffffffffffffff)
li x24, 0x0000000000000000 # initialize rs1
li x7, 0xffffffffffffffff # initialize rs2
max x1, x24, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 1080)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0xfffffffffffffffe)
li x14, 0x0000000000000000 # initialize rs1
li x23, 0xfffffffffffffffe # initialize rs2
max x22, x14, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 1088)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0x5bbc887763ae86f2)
li x27, 0x0000000000000000 # initialize rs1
li x22, 0x5bbc887763ae86f2 # initialize rs2
max x8, x27, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 1096)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0xaaaaaaaaaaaaaaaa)
li x1, 0x0000000000000000 # initialize rs1
li x7, 0xaaaaaaaaaaaaaaaa # initialize rs2
max x5, x1, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x5, 1104)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0x5555555555555555)
li x6, 0x0000000000000000 # initialize rs1
li x9, 0x5555555555555555 # initialize rs2
max x19, x6, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 1112)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0xffffffff)
li x17, 0x0000000000000000 # initialize rs1
li x29, 0x00000000ffffffff # initialize rs2
max x20, x17, x29 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 1120)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0xfffffffe)
li x27, 0x0000000000000000 # initialize rs1
li x14, 0x00000000fffffffe # initialize rs2
max x1, x27, x14 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 1128)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0x100000000)
li x27, 0x0000000000000000 # initialize rs1
li x22, 0x0000000100000000 # initialize rs2
max x31, x27, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 1136)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0x100000001)
li x29, 0x0000000000000000 # initialize rs1
li x18, 0x0000000100000001 # initialize rs2
max x5, x29, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x5, 1144)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0x0)
li x27, 0x0000000000000001 # initialize rs1
li x8, 0x0000000000000000 # initialize rs2
max x26, x27, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 1152)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0x1)
li x25, 0x0000000000000001 # initialize rs1
li x1, 0x0000000000000001 # initialize rs2
max x19, x25, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 1160)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0x2)
li x18, 0x0000000000000001 # initialize rs1
li x31, 0x0000000000000002 # initialize rs2
max x16, x18, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 1168)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0x8000000000000000)
li x31, 0x0000000000000001 # initialize rs1
li x16, 0x8000000000000000 # initialize rs2
max x17, x31, x16 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 1176)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0x8000000000000001)
li x6, 0x0000000000000001 # initialize rs1
li x25, 0x8000000000000001 # initialize rs2
max x15, x6, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 1184)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0x7fffffffffffffff)
li x8, 0x0000000000000001 # initialize rs1
li x16, 0x7fffffffffffffff # initialize rs2
max x30, x8, x16 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 1192)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0x7ffffffffffffffe)
li x30, 0x0000000000000001 # initialize rs1
li x8, 0x7ffffffffffffffe # initialize rs2
max x25, x30, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 1200)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0xffffffffffffffff)
li x1, 0x0000000000000001 # initialize rs1
li x20, 0xffffffffffffffff # initialize rs2
max x27, x1, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 1208)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0xfffffffffffffffe)
li x7, 0x0000000000000001 # initialize rs1
li x14, 0xfffffffffffffffe # initialize rs2
max x15, x7, x14 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 1216)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0x5bbc887763ae86f2)
li x29, 0x0000000000000001 # initialize rs1
li x2, 0x5bbc887763ae86f2 # initialize rs2
max x23, x29, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 1224)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0xaaaaaaaaaaaaaaaa)
li x5, 0x0000000000000001 # initialize rs1
li x19, 0xaaaaaaaaaaaaaaaa # initialize rs2
max x7, x5, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 1232)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0x5555555555555555)
li x21, 0x0000000000000001 # initialize rs1
li x18, 0x5555555555555555 # initialize rs2
max x9, x21, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 1240)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0xffffffff)
li x18, 0x0000000000000001 # initialize rs1
li x23, 0x00000000ffffffff # initialize rs2
max x20, x18, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 1248)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0xfffffffe)
li x31, 0x0000000000000001 # initialize rs1
li x21, 0x00000000fffffffe # initialize rs2
max x5, x31, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x5, 1256)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0x100000000)
li x7, 0x0000000000000001 # initialize rs1
li x27, 0x0000000100000000 # initialize rs2
max x12, x7, x27 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 1264)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0x100000001)
li x25, 0x0000000000000001 # initialize rs1
li x16, 0x0000000100000001 # initialize rs2
max x6, x25, x16 # perform operation
RVTEST_SIGUPD(x4, x0, x6, 1272)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0x0)
li x31, 0x0000000000000002 # initialize rs1
li x18, 0x0000000000000000 # initialize rs2
max x5, x31, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x5, 1280)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0x1)
li x2, 0x0000000000000002 # initialize rs1
li x23, 0x0000000000000001 # initialize rs2
max x26, x2, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 1288)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0x2)
li x28, 0x0000000000000002 # initialize rs1
li x8, 0x0000000000000002 # initialize rs2
max x18, x28, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 1296)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0x8000000000000000)
li x30, 0x0000000000000002 # initialize rs1
li x18, 0x8000000000000000 # initialize rs2
max x21, x30, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 1304)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0x8000000000000001)
li x27, 0x0000000000000002 # initialize rs1
li x9, 0x8000000000000001 # initialize rs2
max x20, x27, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 1312)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0x7fffffffffffffff)
li x19, 0x0000000000000002 # initialize rs1
li x9, 0x7fffffffffffffff # initialize rs2
max x11, x19, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 1320)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0x7ffffffffffffffe)
li x24, 0x0000000000000002 # initialize rs1
li x20, 0x7ffffffffffffffe # initialize rs2
max x12, x24, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 1328)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0xffffffffffffffff)
li x27, 0x0000000000000002 # initialize rs1
li x13, 0xffffffffffffffff # initialize rs2
max x6, x27, x13 # perform operation
RVTEST_SIGUPD(x4, x0, x6, 1336)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0xfffffffffffffffe)
li x10, 0x0000000000000002 # initialize rs1
li x29, 0xfffffffffffffffe # initialize rs2
max x25, x10, x29 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 1344)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0x5bbc887763ae86f2)
li x9, 0x0000000000000002 # initialize rs1
li x5, 0x5bbc887763ae86f2 # initialize rs2
max x11, x9, x5 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 1352)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0xaaaaaaaaaaaaaaaa)
li x14, 0x0000000000000002 # initialize rs1
li x12, 0xaaaaaaaaaaaaaaaa # initialize rs2
max x19, x14, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 1360)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0x5555555555555555)
li x8, 0x0000000000000002 # initialize rs1
li x6, 0x5555555555555555 # initialize rs2
max x24, x8, x6 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 1368)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0xffffffff)
li x15, 0x0000000000000002 # initialize rs1
li x9, 0x00000000ffffffff # initialize rs2
max x16, x15, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 1376)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0xfffffffe)
li x8, 0x0000000000000002 # initialize rs1
li x20, 0x00000000fffffffe # initialize rs2
max x7, x8, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 1384)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0x100000000)
li x31, 0x0000000000000002 # initialize rs1
li x26, 0x0000000100000000 # initialize rs2
max x13, x31, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 1392)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0x100000001)
li x30, 0x0000000000000002 # initialize rs1
li x29, 0x0000000100000001 # initialize rs2
max x12, x30, x29 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 1400)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0x0)
li x21, 0x8000000000000000 # initialize rs1
li x25, 0x0000000000000000 # initialize rs2
max x19, x21, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 1408)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0x1)
li x5, 0x8000000000000000 # initialize rs1
li x29, 0x0000000000000001 # initialize rs2
max x9, x5, x29 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 1416)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0x2)
li x10, 0x8000000000000000 # initialize rs1
li x25, 0x0000000000000002 # initialize rs2
max x23, x10, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 1424)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0x8000000000000000)
li x27, 0x8000000000000000 # initialize rs1
li x2, 0x8000000000000000 # initialize rs2
max x14, x27, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 1432)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0x8000000000000001)
li x7, 0x8000000000000000 # initialize rs1
li x1, 0x8000000000000001 # initialize rs2
max x16, x7, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 1440)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0x7fffffffffffffff)
li x16, 0x8000000000000000 # initialize rs1
li x9, 0x7fffffffffffffff # initialize rs2
max x23, x16, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 1448)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0x7ffffffffffffffe)
li x18, 0x8000000000000000 # initialize rs1
li x11, 0x7ffffffffffffffe # initialize rs2
max x20, x18, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 1456)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0xffffffffffffffff)
li x15, 0x8000000000000000 # initialize rs1
li x10, 0xffffffffffffffff # initialize rs2
max x24, x15, x10 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 1464)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0xfffffffffffffffe)
li x21, 0x8000000000000000 # initialize rs1
li x16, 0xfffffffffffffffe # initialize rs2
max x3, x21, x16 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 1472)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0x5bbc887763ae86f2)
li x22, 0x8000000000000000 # initialize rs1
li x1, 0x5bbc887763ae86f2 # initialize rs2
max x17, x22, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 1480)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0xaaaaaaaaaaaaaaaa)
li x21, 0x8000000000000000 # initialize rs1
li x9, 0xaaaaaaaaaaaaaaaa # initialize rs2
max x8, x21, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 1488)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0x5555555555555555)
li x12, 0x8000000000000000 # initialize rs1
li x21, 0x5555555555555555 # initialize rs2
max x6, x12, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x6, 1496)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0xffffffff)
li x25, 0x8000000000000000 # initialize rs1
li x8, 0x00000000ffffffff # initialize rs2
max x6, x25, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x6, 1504)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0xfffffffe)
li x26, 0x8000000000000000 # initialize rs1
li x17, 0x00000000fffffffe # initialize rs2
max x10, x26, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 1512)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0x100000000)
li x30, 0x8000000000000000 # initialize rs1
li x28, 0x0000000100000000 # initialize rs2
max x8, x30, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 1520)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0x100000001)
li x7, 0x8000000000000000 # initialize rs1
li x26, 0x0000000100000001 # initialize rs2
max x22, x7, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 1528)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0x0)
li x26, 0x8000000000000001 # initialize rs1
li x31, 0x0000000000000000 # initialize rs2
max x24, x26, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 1536)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0x1)
li x18, 0x8000000000000001 # initialize rs1
li x23, 0x0000000000000001 # initialize rs2
max x9, x18, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 1544)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0x2)
li x21, 0x8000000000000001 # initialize rs1
li x11, 0x0000000000000002 # initialize rs2
max x31, x21, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 1552)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0x8000000000000000)
li x17, 0x8000000000000001 # initialize rs1
li x26, 0x8000000000000000 # initialize rs2
max x19, x17, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 1560)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0x8000000000000001)
li x9, 0x8000000000000001 # initialize rs1
li x5, 0x8000000000000001 # initialize rs2
max x23, x9, x5 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 1568)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0x7fffffffffffffff)
li x14, 0x8000000000000001 # initialize rs1
li x24, 0x7fffffffffffffff # initialize rs2
max x11, x14, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 1576)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0x7ffffffffffffffe)
li x20, 0x8000000000000001 # initialize rs1
li x23, 0x7ffffffffffffffe # initialize rs2
max x2, x20, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 1584)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0xffffffffffffffff)
li x11, 0x8000000000000001 # initialize rs1
li x15, 0xffffffffffffffff # initialize rs2
max x10, x11, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 1592)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0xfffffffffffffffe)
li x31, 0x8000000000000001 # initialize rs1
li x20, 0xfffffffffffffffe # initialize rs2
max x3, x31, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 1600)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0x5bbc887763ae86f2)
li x10, 0x8000000000000001 # initialize rs1
li x26, 0x5bbc887763ae86f2 # initialize rs2
max x14, x10, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 1608)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0xaaaaaaaaaaaaaaaa)
li x7, 0x8000000000000001 # initialize rs1
li x6, 0xaaaaaaaaaaaaaaaa # initialize rs2
max x28, x7, x6 # perform operation
RVTEST_SIGUPD(x4, x0, x28, 1616)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0x5555555555555555)
li x15, 0x8000000000000001 # initialize rs1
li x8, 0x5555555555555555 # initialize rs2
max x30, x15, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 1624)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0xffffffff)
li x15, 0x8000000000000001 # initialize rs1
li x18, 0x00000000ffffffff # initialize rs2
max x24, x15, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 1632)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0xfffffffe)
li x31, 0x8000000000000001 # initialize rs1
li x25, 0x00000000fffffffe # initialize rs2
max x29, x31, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 1640)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0x100000000)
li x27, 0x8000000000000001 # initialize rs1
li x14, 0x0000000100000000 # initialize rs2
max x1, x27, x14 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 1648)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0x100000001)
li x3, 0x8000000000000001 # initialize rs1
li x1, 0x0000000100000001 # initialize rs2
max x26, x3, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 1656)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0x0)
li x30, 0x7fffffffffffffff # initialize rs1
li x23, 0x0000000000000000 # initialize rs2
max x29, x30, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 1664)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0x1)
li x19, 0x7fffffffffffffff # initialize rs1
li x15, 0x0000000000000001 # initialize rs2
max x23, x19, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 1672)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0x2)
li x30, 0x7fffffffffffffff # initialize rs1
li x21, 0x0000000000000002 # initialize rs2
max x12, x30, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 1680)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0x8000000000000000)
li x18, 0x7fffffffffffffff # initialize rs1
li x21, 0x8000000000000000 # initialize rs2
max x25, x18, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 1688)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0x8000000000000001)
li x21, 0x7fffffffffffffff # initialize rs1
li x29, 0x8000000000000001 # initialize rs2
max x17, x21, x29 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 1696)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0x7fffffffffffffff)
li x10, 0x7fffffffffffffff # initialize rs1
li x2, 0x7fffffffffffffff # initialize rs2
max x17, x10, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 1704)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0x7ffffffffffffffe)
li x31, 0x7fffffffffffffff # initialize rs1
li x23, 0x7ffffffffffffffe # initialize rs2
max x24, x31, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 1712)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0xffffffffffffffff)
li x18, 0x7fffffffffffffff # initialize rs1
li x27, 0xffffffffffffffff # initialize rs2
max x12, x18, x27 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 1720)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0xfffffffffffffffe)
li x6, 0x7fffffffffffffff # initialize rs1
li x13, 0xfffffffffffffffe # initialize rs2
max x3, x6, x13 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 1728)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0x5bbc887763ae86f2)
li x27, 0x7fffffffffffffff # initialize rs1
li x7, 0x5bbc887763ae86f2 # initialize rs2
max x8, x27, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 1736)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0xaaaaaaaaaaaaaaaa)
li x2, 0x7fffffffffffffff # initialize rs1
li x25, 0xaaaaaaaaaaaaaaaa # initialize rs2
max x24, x2, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 1744)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0x5555555555555555)
li x16, 0x7fffffffffffffff # initialize rs1
li x19, 0x5555555555555555 # initialize rs2
max x21, x16, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 1752)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0xffffffff)
li x2, 0x7fffffffffffffff # initialize rs1
li x19, 0x00000000ffffffff # initialize rs2
max x12, x2, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 1760)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0xfffffffe)
li x26, 0x7fffffffffffffff # initialize rs1
li x2, 0x00000000fffffffe # initialize rs2
max x11, x26, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 1768)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0x100000000)
li x13, 0x7fffffffffffffff # initialize rs1
li x1, 0x0000000100000000 # initialize rs2
max x22, x13, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 1776)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0x100000001)
li x18, 0x7fffffffffffffff # initialize rs1
li x27, 0x0000000100000001 # initialize rs2
max x19, x18, x27 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 1784)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0x0)
li x7, 0x7ffffffffffffffe # initialize rs1
li x14, 0x0000000000000000 # initialize rs2
max x29, x7, x14 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 1792)
addi x4, x4, 1800 # increment signature pointer and reset offset

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0x1)
li x16, 0x7ffffffffffffffe # initialize rs1
li x24, 0x0000000000000001 # initialize rs2
max x13, x16, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 0)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0x2)
li x13, 0x7ffffffffffffffe # initialize rs1
li x27, 0x0000000000000002 # initialize rs2
max x5, x13, x27 # perform operation
RVTEST_SIGUPD(x4, x0, x5, 8)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0x8000000000000000)
li x29, 0x7ffffffffffffffe # initialize rs1
li x20, 0x8000000000000000 # initialize rs2
max x17, x29, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 16)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0x8000000000000001)
li x14, 0x7ffffffffffffffe # initialize rs1
li x6, 0x8000000000000001 # initialize rs2
max x7, x14, x6 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 24)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0x7fffffffffffffff)
li x12, 0x7ffffffffffffffe # initialize rs1
li x11, 0x7fffffffffffffff # initialize rs2
max x24, x12, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 32)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0x7ffffffffffffffe)
li x31, 0x7ffffffffffffffe # initialize rs1
li x15, 0x7ffffffffffffffe # initialize rs2
max x24, x31, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 40)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0xffffffffffffffff)
li x23, 0x7ffffffffffffffe # initialize rs1
li x18, 0xffffffffffffffff # initialize rs2
max x17, x23, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 48)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0xfffffffffffffffe)
li x8, 0x7ffffffffffffffe # initialize rs1
li x18, 0xfffffffffffffffe # initialize rs2
max x26, x8, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 56)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0x5bbc887763ae86f2)
li x14, 0x7ffffffffffffffe # initialize rs1
li x9, 0x5bbc887763ae86f2 # initialize rs2
max x24, x14, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 64)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0xaaaaaaaaaaaaaaaa)
li x23, 0x7ffffffffffffffe # initialize rs1
li x28, 0xaaaaaaaaaaaaaaaa # initialize rs2
max x16, x23, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 72)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0x5555555555555555)
li x19, 0x7ffffffffffffffe # initialize rs1
li x10, 0x5555555555555555 # initialize rs2
max x26, x19, x10 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 80)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0xffffffff)
li x1, 0x7ffffffffffffffe # initialize rs1
li x12, 0x00000000ffffffff # initialize rs2
max x18, x1, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 88)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0xfffffffe)
li x2, 0x7ffffffffffffffe # initialize rs1
li x10, 0x00000000fffffffe # initialize rs2
max x13, x2, x10 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 96)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0x100000000)
li x1, 0x7ffffffffffffffe # initialize rs1
li x25, 0x0000000100000000 # initialize rs2
max x6, x1, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x6, 104)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0x100000001)
li x29, 0x7ffffffffffffffe # initialize rs1
li x18, 0x0000000100000001 # initialize rs2
max x14, x29, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 112)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0x0)
li x29, 0xffffffffffffffff # initialize rs1
li x22, 0x0000000000000000 # initialize rs2
max x1, x29, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 120)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0x1)
li x24, 0xffffffffffffffff # initialize rs1
li x12, 0x0000000000000001 # initialize rs2
max x8, x24, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 128)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0x2)
li x20, 0xffffffffffffffff # initialize rs1
li x6, 0x0000000000000002 # initialize rs2
max x12, x20, x6 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 136)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0x8000000000000000)
li x24, 0xffffffffffffffff # initialize rs1
li x13, 0x8000000000000000 # initialize rs2
max x26, x24, x13 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 144)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0x8000000000000001)
li x8, 0xffffffffffffffff # initialize rs1
li x31, 0x8000000000000001 # initialize rs2
max x24, x8, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 152)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0x7fffffffffffffff)
li x9, 0xffffffffffffffff # initialize rs1
li x31, 0x7fffffffffffffff # initialize rs2
max x17, x9, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 160)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0x7ffffffffffffffe)
li x1, 0xffffffffffffffff # initialize rs1
li x25, 0x7ffffffffffffffe # initialize rs2
max x2, x1, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 168)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0xffffffffffffffff)
li x7, 0xffffffffffffffff # initialize rs1
li x1, 0xffffffffffffffff # initialize rs2
max x23, x7, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 176)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0xfffffffffffffffe)
li x20, 0xffffffffffffffff # initialize rs1
li x27, 0xfffffffffffffffe # initialize rs2
max x2, x20, x27 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 184)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0x5bbc887763ae86f2)
li x11, 0xffffffffffffffff # initialize rs1
li x19, 0x5bbc887763ae86f2 # initialize rs2
max x5, x11, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x5, 192)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0xaaaaaaaaaaaaaaaa)
li x20, 0xffffffffffffffff # initialize rs1
li x2, 0xaaaaaaaaaaaaaaaa # initialize rs2
max x10, x20, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 200)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0x5555555555555555)
li x28, 0xffffffffffffffff # initialize rs1
li x22, 0x5555555555555555 # initialize rs2
max x21, x28, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 208)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0xffffffff)
li x27, 0xffffffffffffffff # initialize rs1
li x23, 0x00000000ffffffff # initialize rs2
max x1, x27, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 216)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0xfffffffe)
li x2, 0xffffffffffffffff # initialize rs1
li x3, 0x00000000fffffffe # initialize rs2
max x23, x2, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 224)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0x100000000)
li x31, 0xffffffffffffffff # initialize rs1
li x29, 0x0000000100000000 # initialize rs2
max x15, x31, x29 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 232)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0x100000001)
li x6, 0xffffffffffffffff # initialize rs1
li x12, 0x0000000100000001 # initialize rs2
max x21, x6, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 240)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0x0)
li x8, 0xfffffffffffffffe # initialize rs1
li x25, 0x0000000000000000 # initialize rs2
max x10, x8, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 248)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0x1)
li x3, 0xfffffffffffffffe # initialize rs1
li x26, 0x0000000000000001 # initialize rs2
max x23, x3, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 256)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0x2)
li x17, 0xfffffffffffffffe # initialize rs1
li x2, 0x0000000000000002 # initialize rs2
max x11, x17, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 264)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0x8000000000000000)
li x23, 0xfffffffffffffffe # initialize rs1
li x28, 0x8000000000000000 # initialize rs2
max x18, x23, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 272)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0x8000000000000001)
li x28, 0xfffffffffffffffe # initialize rs1
li x1, 0x8000000000000001 # initialize rs2
max x10, x28, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 280)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0x7fffffffffffffff)
li x28, 0xfffffffffffffffe # initialize rs1
li x17, 0x7fffffffffffffff # initialize rs2
max x10, x28, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 288)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0x7ffffffffffffffe)
li x20, 0xfffffffffffffffe # initialize rs1
li x29, 0x7ffffffffffffffe # initialize rs2
max x3, x20, x29 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 296)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0xffffffffffffffff)
li x31, 0xfffffffffffffffe # initialize rs1
li x23, 0xffffffffffffffff # initialize rs2
max x21, x31, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 304)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0xfffffffffffffffe)
li x31, 0xfffffffffffffffe # initialize rs1
li x15, 0xfffffffffffffffe # initialize rs2
max x2, x31, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 312)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0x5bbc887763ae86f2)
li x30, 0xfffffffffffffffe # initialize rs1
li x24, 0x5bbc887763ae86f2 # initialize rs2
max x17, x30, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 320)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0xaaaaaaaaaaaaaaaa)
li x2, 0xfffffffffffffffe # initialize rs1
li x22, 0xaaaaaaaaaaaaaaaa # initialize rs2
max x31, x2, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 328)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0x5555555555555555)
li x24, 0xfffffffffffffffe # initialize rs1
li x3, 0x5555555555555555 # initialize rs2
max x15, x24, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 336)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0xffffffff)
li x19, 0xfffffffffffffffe # initialize rs1
li x12, 0x00000000ffffffff # initialize rs2
max x2, x19, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 344)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0xfffffffe)
li x2, 0xfffffffffffffffe # initialize rs1
li x18, 0x00000000fffffffe # initialize rs2
max x10, x2, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 352)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0x100000000)
li x23, 0xfffffffffffffffe # initialize rs1
li x5, 0x0000000100000000 # initialize rs2
max x20, x23, x5 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 360)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0x100000001)
li x8, 0xfffffffffffffffe # initialize rs1
li x21, 0x0000000100000001 # initialize rs2
max x22, x8, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 368)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0x0)
li x6, 0x5bbc887763ae86f2 # initialize rs1
li x1, 0x0000000000000000 # initialize rs2
max x22, x6, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 376)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0x1)
li x29, 0x5bbc887763ae86f2 # initialize rs1
li x15, 0x0000000000000001 # initialize rs2
max x27, x29, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 384)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0x2)
li x25, 0x5bbc887763ae86f2 # initialize rs1
li x7, 0x0000000000000002 # initialize rs2
max x21, x25, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 392)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0x8000000000000000)
li x17, 0x5bbc887763ae86f2 # initialize rs1
li x28, 0x8000000000000000 # initialize rs2
max x27, x17, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 400)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0x8000000000000001)
li x2, 0x5bbc887763ae86f2 # initialize rs1
li x28, 0x8000000000000001 # initialize rs2
max x1, x2, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 408)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0x7fffffffffffffff)
li x20, 0x5bbc887763ae86f2 # initialize rs1
li x13, 0x7fffffffffffffff # initialize rs2
max x10, x20, x13 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 416)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0x7ffffffffffffffe)
li x23, 0x5bbc887763ae86f2 # initialize rs1
li x10, 0x7ffffffffffffffe # initialize rs2
max x7, x23, x10 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 424)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0xffffffffffffffff)
li x16, 0x5bbc887763ae86f2 # initialize rs1
li x5, 0xffffffffffffffff # initialize rs2
max x28, x16, x5 # perform operation
RVTEST_SIGUPD(x4, x0, x28, 432)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0xfffffffffffffffe)
li x10, 0x5bbc887763ae86f2 # initialize rs1
li x25, 0xfffffffffffffffe # initialize rs2
max x27, x10, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 440)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0x5bbc887763ae86f2)
li x5, 0x5bbc887763ae86f2 # initialize rs1
li x22, 0x5bbc887763ae86f2 # initialize rs2
max x23, x5, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 448)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0xaaaaaaaaaaaaaaaa)
li x30, 0x5bbc887763ae86f2 # initialize rs1
li x6, 0xaaaaaaaaaaaaaaaa # initialize rs2
max x21, x30, x6 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 456)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0x5555555555555555)
li x12, 0x5bbc887763ae86f2 # initialize rs1
li x13, 0x5555555555555555 # initialize rs2
max x1, x12, x13 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 464)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0xffffffff)
li x24, 0x5bbc887763ae86f2 # initialize rs1
li x22, 0x00000000ffffffff # initialize rs2
max x25, x24, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 472)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0xfffffffe)
li x17, 0x5bbc887763ae86f2 # initialize rs1
li x15, 0x00000000fffffffe # initialize rs2
max x24, x17, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 480)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0x100000000)
li x13, 0x5bbc887763ae86f2 # initialize rs1
li x30, 0x0000000100000000 # initialize rs2
max x6, x13, x30 # perform operation
RVTEST_SIGUPD(x4, x0, x6, 488)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0x100000001)
li x2, 0x5bbc887763ae86f2 # initialize rs1
li x29, 0x0000000100000001 # initialize rs2
max x3, x2, x29 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 496)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0x0)
li x1, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x3, 0x0000000000000000 # initialize rs2
max x5, x1, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x5, 504)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0x1)
li x25, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x9, 0x0000000000000001 # initialize rs2
max x20, x25, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 512)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0x2)
li x10, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x21, 0x0000000000000002 # initialize rs2
max x26, x10, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 520)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0x8000000000000000)
li x31, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x20, 0x8000000000000000 # initialize rs2
max x7, x31, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 528)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0x8000000000000001)
li x8, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x27, 0x8000000000000001 # initialize rs2
max x18, x8, x27 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 536)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0x7fffffffffffffff)
li x23, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x28, 0x7fffffffffffffff # initialize rs2
max x6, x23, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x6, 544)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0x7ffffffffffffffe)
li x1, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x31, 0x7ffffffffffffffe # initialize rs2
max x14, x1, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 552)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0xffffffffffffffff)
li x31, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x12, 0xffffffffffffffff # initialize rs2
max x26, x31, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 560)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0xfffffffffffffffe)
li x6, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x30, 0xfffffffffffffffe # initialize rs2
max x11, x6, x30 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 568)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0x5bbc887763ae86f2)
li x31, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x7, 0x5bbc887763ae86f2 # initialize rs2
max x15, x31, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 576)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0xaaaaaaaaaaaaaaaa)
li x16, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x10, 0xaaaaaaaaaaaaaaaa # initialize rs2
max x8, x16, x10 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 584)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0x5555555555555555)
li x18, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x8, 0x5555555555555555 # initialize rs2
max x3, x18, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 592)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0xffffffff)
li x12, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x18, 0x00000000ffffffff # initialize rs2
max x11, x12, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 600)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0xfffffffe)
li x17, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x20, 0x00000000fffffffe # initialize rs2
max x1, x17, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 608)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0x100000000)
li x17, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x6, 0x0000000100000000 # initialize rs2
max x9, x17, x6 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 616)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0x100000001)
li x1, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x11, 0x0000000100000001 # initialize rs2
max x10, x1, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 624)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0x0)
li x26, 0x5555555555555555 # initialize rs1
li x12, 0x0000000000000000 # initialize rs2
max x25, x26, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 632)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0x1)
li x30, 0x5555555555555555 # initialize rs1
li x25, 0x0000000000000001 # initialize rs2
max x14, x30, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 640)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0x2)
li x16, 0x5555555555555555 # initialize rs1
li x6, 0x0000000000000002 # initialize rs2
max x11, x16, x6 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 648)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0x8000000000000000)
li x19, 0x5555555555555555 # initialize rs1
li x8, 0x8000000000000000 # initialize rs2
max x29, x19, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 656)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0x8000000000000001)
li x17, 0x5555555555555555 # initialize rs1
li x23, 0x8000000000000001 # initialize rs2
max x6, x17, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x6, 664)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0x7fffffffffffffff)
li x7, 0x5555555555555555 # initialize rs1
li x22, 0x7fffffffffffffff # initialize rs2
max x26, x7, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 672)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0x7ffffffffffffffe)
li x17, 0x5555555555555555 # initialize rs1
li x1, 0x7ffffffffffffffe # initialize rs2
max x18, x17, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 680)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0xffffffffffffffff)
li x3, 0x5555555555555555 # initialize rs1
li x11, 0xffffffffffffffff # initialize rs2
max x18, x3, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 688)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0xfffffffffffffffe)
li x9, 0x5555555555555555 # initialize rs1
li x19, 0xfffffffffffffffe # initialize rs2
max x11, x9, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 696)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0x5bbc887763ae86f2)
li x23, 0x5555555555555555 # initialize rs1
li x8, 0x5bbc887763ae86f2 # initialize rs2
max x13, x23, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 704)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0xaaaaaaaaaaaaaaaa)
li x9, 0x5555555555555555 # initialize rs1
li x24, 0xaaaaaaaaaaaaaaaa # initialize rs2
max x21, x9, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 712)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0x5555555555555555)
li x14, 0x5555555555555555 # initialize rs1
li x8, 0x5555555555555555 # initialize rs2
max x24, x14, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 720)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0xffffffff)
li x24, 0x5555555555555555 # initialize rs1
li x9, 0x00000000ffffffff # initialize rs2
max x7, x24, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 728)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0xfffffffe)
li x21, 0x5555555555555555 # initialize rs1
li x29, 0x00000000fffffffe # initialize rs2
max x25, x21, x29 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 736)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0x100000000)
li x5, 0x5555555555555555 # initialize rs1
li x29, 0x0000000100000000 # initialize rs2
max x9, x5, x29 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 744)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0x100000001)
li x14, 0x5555555555555555 # initialize rs1
li x3, 0x0000000100000001 # initialize rs2
max x5, x14, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x5, 752)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0x0)
li x11, 0x00000000ffffffff # initialize rs1
li x14, 0x0000000000000000 # initialize rs2
max x27, x11, x14 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 760)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0x1)
li x3, 0x00000000ffffffff # initialize rs1
li x20, 0x0000000000000001 # initialize rs2
max x15, x3, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 768)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0x2)
li x16, 0x00000000ffffffff # initialize rs1
li x3, 0x0000000000000002 # initialize rs2
max x19, x16, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 776)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0x8000000000000000)
li x30, 0x00000000ffffffff # initialize rs1
li x24, 0x8000000000000000 # initialize rs2
max x27, x30, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 784)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0x8000000000000001)
li x24, 0x00000000ffffffff # initialize rs1
li x22, 0x8000000000000001 # initialize rs2
max x7, x24, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 792)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0x7fffffffffffffff)
li x29, 0x00000000ffffffff # initialize rs1
li x20, 0x7fffffffffffffff # initialize rs2
max x26, x29, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 800)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0x7ffffffffffffffe)
li x18, 0x00000000ffffffff # initialize rs1
li x2, 0x7ffffffffffffffe # initialize rs2
max x9, x18, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 808)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0xffffffffffffffff)
li x7, 0x00000000ffffffff # initialize rs1
li x3, 0xffffffffffffffff # initialize rs2
max x22, x7, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 816)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0xfffffffffffffffe)
li x8, 0x00000000ffffffff # initialize rs1
li x1, 0xfffffffffffffffe # initialize rs2
max x17, x8, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 824)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0x5bbc887763ae86f2)
li x23, 0x00000000ffffffff # initialize rs1
li x12, 0x5bbc887763ae86f2 # initialize rs2
max x6, x23, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x6, 832)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0xaaaaaaaaaaaaaaaa)
li x10, 0x00000000ffffffff # initialize rs1
li x5, 0xaaaaaaaaaaaaaaaa # initialize rs2
max x28, x10, x5 # perform operation
RVTEST_SIGUPD(x4, x0, x28, 840)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0x5555555555555555)
li x14, 0x00000000ffffffff # initialize rs1
li x23, 0x5555555555555555 # initialize rs2
max x29, x14, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 848)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0xffffffff)
li x15, 0x00000000ffffffff # initialize rs1
li x1, 0x00000000ffffffff # initialize rs2
max x22, x15, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 856)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0xfffffffe)
li x10, 0x00000000ffffffff # initialize rs1
li x19, 0x00000000fffffffe # initialize rs2
max x14, x10, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 864)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0x100000000)
li x14, 0x00000000ffffffff # initialize rs1
li x26, 0x0000000100000000 # initialize rs2
max x29, x14, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 872)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0x100000001)
li x16, 0x00000000ffffffff # initialize rs1
li x25, 0x0000000100000001 # initialize rs2
max x9, x16, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 880)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0x0)
li x10, 0x00000000fffffffe # initialize rs1
li x30, 0x0000000000000000 # initialize rs2
max x13, x10, x30 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 888)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0x1)
li x20, 0x00000000fffffffe # initialize rs1
li x1, 0x0000000000000001 # initialize rs2
max x8, x20, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 896)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0x2)
li x16, 0x00000000fffffffe # initialize rs1
li x7, 0x0000000000000002 # initialize rs2
max x11, x16, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 904)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0x8000000000000000)
li x30, 0x00000000fffffffe # initialize rs1
li x27, 0x8000000000000000 # initialize rs2
max x13, x30, x27 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 912)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0x8000000000000001)
li x22, 0x00000000fffffffe # initialize rs1
li x8, 0x8000000000000001 # initialize rs2
max x9, x22, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 920)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0x7fffffffffffffff)
li x23, 0x00000000fffffffe # initialize rs1
li x19, 0x7fffffffffffffff # initialize rs2
max x17, x23, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 928)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0x7ffffffffffffffe)
li x15, 0x00000000fffffffe # initialize rs1
li x17, 0x7ffffffffffffffe # initialize rs2
max x12, x15, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 936)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0xffffffffffffffff)
li x12, 0x00000000fffffffe # initialize rs1
li x14, 0xffffffffffffffff # initialize rs2
max x13, x12, x14 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 944)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0xfffffffffffffffe)
li x23, 0x00000000fffffffe # initialize rs1
li x28, 0xfffffffffffffffe # initialize rs2
max x2, x23, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 952)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0x5bbc887763ae86f2)
li x13, 0x00000000fffffffe # initialize rs1
li x9, 0x5bbc887763ae86f2 # initialize rs2
max x30, x13, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 960)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0xaaaaaaaaaaaaaaaa)
li x27, 0x00000000fffffffe # initialize rs1
li x26, 0xaaaaaaaaaaaaaaaa # initialize rs2
max x8, x27, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 968)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0x5555555555555555)
li x5, 0x00000000fffffffe # initialize rs1
li x1, 0x5555555555555555 # initialize rs2
max x19, x5, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 976)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0xffffffff)
li x9, 0x00000000fffffffe # initialize rs1
li x23, 0x00000000ffffffff # initialize rs2
max x31, x9, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 984)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0xfffffffe)
li x19, 0x00000000fffffffe # initialize rs1
li x18, 0x00000000fffffffe # initialize rs2
max x30, x19, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 992)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0x100000000)
li x13, 0x00000000fffffffe # initialize rs1
li x19, 0x0000000100000000 # initialize rs2
max x14, x13, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 1000)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0x100000001)
li x20, 0x00000000fffffffe # initialize rs1
li x29, 0x0000000100000001 # initialize rs2
max x12, x20, x29 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 1008)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0x0)
li x24, 0x0000000100000000 # initialize rs1
li x12, 0x0000000000000000 # initialize rs2
max x25, x24, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 1016)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0x1)
li x12, 0x0000000100000000 # initialize rs1
li x26, 0x0000000000000001 # initialize rs2
max x16, x12, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 1024)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0x2)
li x14, 0x0000000100000000 # initialize rs1
li x12, 0x0000000000000002 # initialize rs2
max x27, x14, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 1032)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0x8000000000000000)
li x8, 0x0000000100000000 # initialize rs1
li x21, 0x8000000000000000 # initialize rs2
max x14, x8, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 1040)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0x8000000000000001)
li x22, 0x0000000100000000 # initialize rs1
li x12, 0x8000000000000001 # initialize rs2
max x9, x22, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 1048)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0x7fffffffffffffff)
li x10, 0x0000000100000000 # initialize rs1
li x26, 0x7fffffffffffffff # initialize rs2
max x27, x10, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 1056)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0x7ffffffffffffffe)
li x24, 0x0000000100000000 # initialize rs1
li x25, 0x7ffffffffffffffe # initialize rs2
max x19, x24, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 1064)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0xffffffffffffffff)
li x28, 0x0000000100000000 # initialize rs1
li x25, 0xffffffffffffffff # initialize rs2
max x15, x28, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 1072)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0xfffffffffffffffe)
li x13, 0x0000000100000000 # initialize rs1
li x5, 0xfffffffffffffffe # initialize rs2
max x20, x13, x5 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 1080)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0x5bbc887763ae86f2)
li x21, 0x0000000100000000 # initialize rs1
li x9, 0x5bbc887763ae86f2 # initialize rs2
max x5, x21, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x5, 1088)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0xaaaaaaaaaaaaaaaa)
li x7, 0x0000000100000000 # initialize rs1
li x19, 0xaaaaaaaaaaaaaaaa # initialize rs2
max x14, x7, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 1096)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0x5555555555555555)
li x20, 0x0000000100000000 # initialize rs1
li x18, 0x5555555555555555 # initialize rs2
max x14, x20, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 1104)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0xffffffff)
li x2, 0x0000000100000000 # initialize rs1
li x20, 0x00000000ffffffff # initialize rs2
max x27, x2, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 1112)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0xfffffffe)
li x21, 0x0000000100000000 # initialize rs1
li x10, 0x00000000fffffffe # initialize rs2
max x1, x21, x10 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 1120)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0x100000000)
li x14, 0x0000000100000000 # initialize rs1
li x1, 0x0000000100000000 # initialize rs2
max x24, x14, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 1128)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0x100000001)
li x25, 0x0000000100000000 # initialize rs1
li x3, 0x0000000100000001 # initialize rs2
max x27, x25, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 1136)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0x0)
li x24, 0x0000000100000001 # initialize rs1
li x8, 0x0000000000000000 # initialize rs2
max x11, x24, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 1144)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0x1)
li x12, 0x0000000100000001 # initialize rs1
li x11, 0x0000000000000001 # initialize rs2
max x28, x12, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x28, 1152)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0x2)
li x17, 0x0000000100000001 # initialize rs1
li x8, 0x0000000000000002 # initialize rs2
max x28, x17, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x28, 1160)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0x8000000000000000)
li x23, 0x0000000100000001 # initialize rs1
li x29, 0x8000000000000000 # initialize rs2
max x17, x23, x29 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 1168)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0x8000000000000001)
li x2, 0x0000000100000001 # initialize rs1
li x1, 0x8000000000000001 # initialize rs2
max x21, x2, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 1176)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0x7fffffffffffffff)
li x19, 0x0000000100000001 # initialize rs1
li x20, 0x7fffffffffffffff # initialize rs2
max x17, x19, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 1184)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0x7ffffffffffffffe)
li x13, 0x0000000100000001 # initialize rs1
li x15, 0x7ffffffffffffffe # initialize rs2
max x31, x13, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 1192)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0xffffffffffffffff)
li x23, 0x0000000100000001 # initialize rs1
li x18, 0xffffffffffffffff # initialize rs2
max x25, x23, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 1200)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0xfffffffffffffffe)
li x26, 0x0000000100000001 # initialize rs1
li x15, 0xfffffffffffffffe # initialize rs2
max x5, x26, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x5, 1208)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0x5bbc887763ae86f2)
li x23, 0x0000000100000001 # initialize rs1
li x18, 0x5bbc887763ae86f2 # initialize rs2
max x13, x23, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 1216)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0xaaaaaaaaaaaaaaaa)
li x21, 0x0000000100000001 # initialize rs1
li x18, 0xaaaaaaaaaaaaaaaa # initialize rs2
max x22, x21, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 1224)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0x5555555555555555)
li x3, 0x0000000100000001 # initialize rs1
li x30, 0x5555555555555555 # initialize rs2
max x16, x3, x30 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 1232)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0xffffffff)
li x29, 0x0000000100000001 # initialize rs1
li x19, 0x00000000ffffffff # initialize rs2
max x22, x29, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 1240)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0xfffffffe)
li x9, 0x0000000100000001 # initialize rs1
li x29, 0x00000000fffffffe # initialize rs2
max x31, x9, x29 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 1248)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0x100000000)
li x1, 0x0000000100000001 # initialize rs1
li x25, 0x0000000100000000 # initialize rs2
max x17, x1, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 1256)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0x100000001)
li x30, 0x0000000100000001 # initialize rs1
li x11, 0x0000000100000001 # initialize rs2
max x31, x30, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 1264)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x0)
li x0, 0x2e97e01cb39a7930 # initialize rs1
li x0, 0x4878c403387e4563 # initialize rs2
max x8, x0, x0 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 1272)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x1)
li x1, 0x9bcdaf323c747d7c # initialize rs1
li x1, 0xa2439cf5aef08e0d # initialize rs2
max x22, x1, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 1280)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x2)
li x2, 0x9c69ce0d91a46f68 # initialize rs1
li x2, 0x6d24c632e01806f5 # initialize rs2
max x24, x2, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 1288)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x3)
li x3, 0xbbab0f1494f6f7d8 # initialize rs1
li x3, 0x26ced29d69441d8b # initialize rs2
max x5, x3, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x5, 1296)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x4)
mv x5, x4 # switch signature pointer register to avoid conflict with test
li x4, 0x8e91d3c3bba52aaa # initialize rs1
li x4, 0x7bab1f36a2af42d1 # initialize rs2
max x29, x4, x4 # perform operation
RVTEST_SIGUPD(x5, x0, x29, 1304)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x5)
mv x6, x5 # switch signature pointer register to avoid conflict with test
li x5, 0x461b545372d7e56a # initialize rs1
li x5, 0xbc19123c9b28057f # initialize rs2
max x26, x5, x5 # perform operation
RVTEST_SIGUPD(x6, x0, x26, 1312)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x6)
mv x7, x6 # switch signature pointer register to avoid conflict with test
li x6, 0x2a7c59f8ca926952 # initialize rs1
li x6, 0x25e929b08a216742 # initialize rs2
max x27, x6, x6 # perform operation
RVTEST_SIGUPD(x7, x0, x27, 1320)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x7)
mv x4, x7 # switch signature pointer register to avoid conflict with test
li x7, 0xa57a895fbad3b99f # initialize rs1
li x7, 0x5026d80a3c8ddca3 # initialize rs2
max x26, x7, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 1328)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x8)
li x8, 0x9da7958c2566acf7 # initialize rs1
li x8, 0x704170539ef9e218 # initialize rs2
max x26, x8, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 1336)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x9)
li x9, 0xa72dfc933be5e8de # initialize rs1
li x9, 0x600d04965e525827 # initialize rs2
max x29, x9, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 1344)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x10)
li x10, 0x36d5513045184e8f # initialize rs1
li x10, 0x2a6296961285aead # initialize rs2
max x21, x10, x10 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 1352)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x11)
li x11, 0x45968d825a6a6243 # initialize rs1
li x11, 0x508c595c2fa0df8a # initialize rs2
max x6, x11, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x6, 1360)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x12)
li x12, 0xefd5a57de000874a # initialize rs1
li x12, 0x7f0a3f4294892369 # initialize rs2
max x15, x12, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 1368)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x13)
li x13, 0x5f0d8a596ff0d9ec # initialize rs1
li x13, 0xd66ca7253619cb6b # initialize rs2
max x26, x13, x13 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 1376)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x14)
li x14, 0x162416e5d3488fbd # initialize rs1
li x14, 0x3e5ef71a660fd34f # initialize rs2
max x31, x14, x14 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 1384)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x15)
li x15, 0x2e36ddf2664f2f98 # initialize rs1
li x15, 0x490ea17b0cac514b # initialize rs2
max x23, x15, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 1392)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x16)
li x16, 0x4c68be88262941dc # initialize rs1
li x16, 0x9a8b87a145380e2c # initialize rs2
max x9, x16, x16 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 1400)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x17)
li x17, 0xa867bc113369ba69 # initialize rs1
li x17, 0x2946c7c34041c907 # initialize rs2
max x26, x17, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 1408)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x18)
li x18, 0x54e13979b9996375 # initialize rs1
li x18, 0x9811f7de470d5d59 # initialize rs2
max x7, x18, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 1416)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x19)
li x19, 0xf2e94e879c397b13 # initialize rs1
li x19, 0x651ec5f1195893d7 # initialize rs2
max x24, x19, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 1424)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x20)
li x20, 0x48cc80d916d48381 # initialize rs1
li x20, 0x5b54b1ec27d2a68c # initialize rs2
max x27, x20, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 1432)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x21)
li x21, 0xde6e4b51f967bc4d # initialize rs1
li x21, 0x1b6b3860f2be11e4 # initialize rs2
max x19, x21, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 1440)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x22)
li x22, 0x9a6ba727e117aea7 # initialize rs1
li x22, 0x04c065379278cd34 # initialize rs2
max x8, x22, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 1448)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x23)
li x23, 0x73eb86d248fadb0e # initialize rs1
li x23, 0xdf2b8923d209ea9a # initialize rs2
max x8, x23, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 1456)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x24)
li x24, 0xefeae4697200db35 # initialize rs1
li x24, 0x437111f3dab3e257 # initialize rs2
max x9, x24, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 1464)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x25)
li x25, 0xf612b98b3aa35583 # initialize rs1
li x25, 0x54962613079e5f4d # initialize rs2
max x31, x25, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 1472)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x26)
li x26, 0x0b9128068a59dcf3 # initialize rs1
li x26, 0xfb3a26cefe5a9bd5 # initialize rs2
max x10, x26, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 1480)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x27)
li x27, 0xb8339b5b6175c790 # initialize rs1
li x27, 0x8f4356b5e674f0bb # initialize rs2
max x16, x27, x27 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 1488)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x28)
li x28, 0x2fbdd6943d2c224a # initialize rs1
li x28, 0xce55a9eaa4c19dd7 # initialize rs2
max x23, x28, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 1496)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x29)
li x29, 0xdc07435b8a21d587 # initialize rs1
li x29, 0xe237ae77c3cfc4a2 # initialize rs2
max x9, x29, x29 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 1504)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x30)
li x30, 0x8d2a0ad2a0772373 # initialize rs1
li x30, 0xa7c238c86d8a3e76 # initialize rs2
max x25, x30, x30 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 1512)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x31)
li x31, 0x705d78dfbfedf535 # initialize rs1
li x31, 0xfe364dedcc94a79c # initialize rs2
max x12, x31, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 1520)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x0)
li x0, 0x6efc0c92b848b1fd # initialize rs1
li x8, 0x1a10068d614cb469 # initialize rs2
max x0, x0, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x0, 1528)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x1)
li x1, 0xb04aa2ec68224568 # initialize rs1
li x16, 0x52699270aec7e6c1 # initialize rs2
max x1, x1, x16 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 1536)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x2)
li x2, 0x6199550ad7a44276 # initialize rs1
li x8, 0xaf16cff4bc86f25c # initialize rs2
max x2, x2, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 1544)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x3)
li x3, 0x8bdf5d0940c1da24 # initialize rs1
li x5, 0xd31a62bc011302c3 # initialize rs2
max x3, x3, x5 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 1552)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x4)
mv x5, x4 # switch signature pointer register to avoid conflict with test
li x4, 0x0f813a32d2a03ad5 # initialize rs1
li x13, 0xf31bcdb84608c8e6 # initialize rs2
max x4, x4, x13 # perform operation
RVTEST_SIGUPD(x5, x0, x4, 1560)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x5)
mv x6, x5 # switch signature pointer register to avoid conflict with test
li x5, 0xf5cb12672474c95f # initialize rs1
li x19, 0xfe465339dd038d2f # initialize rs2
max x5, x5, x19 # perform operation
RVTEST_SIGUPD(x6, x0, x5, 1568)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x6)
mv x7, x6 # switch signature pointer register to avoid conflict with test
li x6, 0xa0ab747438c74783 # initialize rs1
li x18, 0x0b58c175bc9922e4 # initialize rs2
max x6, x6, x18 # perform operation
RVTEST_SIGUPD(x7, x0, x6, 1576)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x7)
mv x4, x7 # switch signature pointer register to avoid conflict with test
li x7, 0x89d33c34fae8da71 # initialize rs1
li x21, 0x95eb561c85ee0731 # initialize rs2
max x7, x7, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 1584)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x8)
li x8, 0xb73ae94881061bb1 # initialize rs1
li x31, 0xc9c3d23b56eb2841 # initialize rs2
max x8, x8, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 1592)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x9)
li x9, 0xd77207e92c48fb17 # initialize rs1
li x23, 0x729bdfe6d8a01cbd # initialize rs2
max x9, x9, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 1600)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x10)
li x10, 0x7262f562ab687308 # initialize rs1
li x10, 0xcc6f6bae3588d9e3 # initialize rs2
max x10, x10, x10 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 1608)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x11)
li x11, 0x587f5e260c05122b # initialize rs1
li x20, 0x09363181679ea2ce # initialize rs2
max x11, x11, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 1616)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x12)
li x12, 0x6fa061e738acbd92 # initialize rs1
li x27, 0x2a8fd2846db3f3bd # initialize rs2
max x12, x12, x27 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 1624)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x13)
li x13, 0x5f8ba68648b1615a # initialize rs1
li x18, 0x18eeead14f3f8a4f # initialize rs2
max x13, x13, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 1632)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x14)
li x14, 0x02f906e5c7287c57 # initialize rs1
li x25, 0x62be542004dd1c07 # initialize rs2
max x14, x14, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 1640)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x15)
li x15, 0x512cc7b4068e0c5a # initialize rs1
li x26, 0x76ca1f3fa01dcb78 # initialize rs2
max x15, x15, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 1648)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x16)
li x16, 0x0181b122a3655213 # initialize rs1
li x31, 0x82ce4e560a4e79e3 # initialize rs2
max x16, x16, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 1656)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x17)
li x17, 0x5cb242376d57ea6b # initialize rs1
li x21, 0xa9cd7f05012d2b85 # initialize rs2
max x17, x17, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 1664)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x18)
li x18, 0x348c382b3046f90f # initialize rs1
li x30, 0x34fa1e4f412cd9f4 # initialize rs2
max x18, x18, x30 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 1672)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x19)
li x19, 0x2e9d4ad19ffe4081 # initialize rs1
li x15, 0x13a5636be2cb314d # initialize rs2
max x19, x19, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 1680)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x20)
li x20, 0x5804472873af97aa # initialize rs1
li x19, 0xde4decbf3b44ff9a # initialize rs2
max x20, x20, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 1688)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x21)
li x21, 0x01904ee1873ee1ee # initialize rs1
li x31, 0xe15bc9213936f8cc # initialize rs2
max x21, x21, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 1696)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x22)
li x22, 0x0aa4862e9ba90f7a # initialize rs1
li x9, 0x7a7f7a7c826581e0 # initialize rs2
max x22, x22, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 1704)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x23)
li x23, 0x7e0f7586c3b42223 # initialize rs1
li x17, 0x872edaa5ceb7e38b # initialize rs2
max x23, x23, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 1712)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x24)
li x24, 0x6fabfe670048d8aa # initialize rs1
li x21, 0xd9a0bda832852a31 # initialize rs2
max x24, x24, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 1720)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x25)
li x25, 0x81003c095c8279a5 # initialize rs1
li x10, 0x33b7f6049c2cca6c # initialize rs2
max x25, x25, x10 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 1728)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x26)
li x26, 0x5f5c7ace632f551b # initialize rs1
li x29, 0xd121fcf4a4ba1cf5 # initialize rs2
max x26, x26, x29 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 1736)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x27)
li x27, 0x1853e0f2c6a2dcb2 # initialize rs1
li x27, 0x8995ee1d35bf3f8c # initialize rs2
max x27, x27, x27 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 1744)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x28)
li x28, 0xa85e6c08abbcb0cf # initialize rs1
li x27, 0x41a3545576ac8dbe # initialize rs2
max x28, x28, x27 # perform operation
RVTEST_SIGUPD(x4, x0, x28, 1752)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x29)
li x29, 0x6f2e89ecff0f7199 # initialize rs1
li x30, 0x5a0a6ef187a9538e # initialize rs2
max x29, x29, x30 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 1760)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x30)
li x30, 0xd2d7d9ac29001eb0 # initialize rs1
li x3, 0xbffdcbf9aea30175 # initialize rs2
max x30, x30, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 1768)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x31)
li x31, 0xb5fac5ea930c7e46 # initialize rs1
li x14, 0x1fb9e2d6079aa895 # initialize rs2
max x31, x31, x14 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 1776)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x0)
li x19, 0x1850683fe9c6a9e9 # initialize rs1
li x0, 0x9c0c2558391894fe # initialize rs2
max x0, x19, x0 # perform operation
RVTEST_SIGUPD(x4, x0, x0, 1784)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x1)
li x28, 0x1d1cc5a28ace5544 # initialize rs1
li x1, 0x317e899883e2d521 # initialize rs2
max x1, x28, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 1792)
addi x4, x4, 1800 # increment signature pointer and reset offset

# Testcase cmp_rd_rs2 (Test rd = rs2 = x2)
li x3, 0x171bb25f1facc951 # initialize rs1
li x2, 0x35e041a0bb19ea75 # initialize rs2
max x2, x3, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 0)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x3)
li x2, 0x700e61b822549597 # initialize rs1
li x3, 0xad94a2550bfa260e # initialize rs2
max x3, x2, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 8)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x4)
mv x5, x4 # switch signature pointer register to avoid conflict with test
li x16, 0x730b3c274090226b # initialize rs1
li x4, 0xe3c4f709130f303e # initialize rs2
max x4, x16, x4 # perform operation
RVTEST_SIGUPD(x5, x0, x4, 16)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x5)
mv x6, x5 # switch signature pointer register to avoid conflict with test
li x19, 0xfb9bf339caf8f9ac # initialize rs1
li x5, 0xe663ca71e5108af7 # initialize rs2
max x5, x19, x5 # perform operation
RVTEST_SIGUPD(x6, x0, x5, 24)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x6)
mv x7, x6 # switch signature pointer register to avoid conflict with test
li x18, 0x6d4a7c0c5ff536b8 # initialize rs1
li x6, 0x55327fd2088503b1 # initialize rs2
max x6, x18, x6 # perform operation
RVTEST_SIGUPD(x7, x0, x6, 32)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x7)
mv x4, x7 # switch signature pointer register to avoid conflict with test
li x2, 0xa8f5d53f8d7b2e3b # initialize rs1
li x7, 0x173c66ea063d7112 # initialize rs2
max x7, x2, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 40)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x8)
li x18, 0x6083709367ddc68d # initialize rs1
li x8, 0xdf0461719289df11 # initialize rs2
max x8, x18, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 48)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x9)
li x2, 0x4b78934214b854a0 # initialize rs1
li x9, 0xa9c3fdae23185ef1 # initialize rs2
max x9, x2, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 56)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x10)
li x3, 0xc8f19b2180031408 # initialize rs1
li x10, 0x716f56ed928ea51e # initialize rs2
max x10, x3, x10 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 64)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x11)
li x29, 0xa67494294e6b7013 # initialize rs1
li x11, 0xe77fdff4a005c856 # initialize rs2
max x11, x29, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 72)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x12)
li x22, 0xd2d9839cbeb01cd7 # initialize rs1
li x12, 0xf95a530cdaf81d67 # initialize rs2
max x12, x22, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 80)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x13)
li x19, 0x380f07575ede96d7 # initialize rs1
li x13, 0x0e8b679a1f9ca44a # initialize rs2
max x13, x19, x13 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 88)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x14)
li x31, 0x21085f6c89a39442 # initialize rs1
li x14, 0xa8f9c813b389125b # initialize rs2
max x14, x31, x14 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 96)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x15)
li x22, 0x92d9150b345fcccd # initialize rs1
li x15, 0xdd29e550967daa93 # initialize rs2
max x15, x22, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 104)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x16)
li x24, 0xe7f33e0f69a2929c # initialize rs1
li x16, 0x1f487a23c123d458 # initialize rs2
max x16, x24, x16 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 112)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x17)
li x25, 0x976ca704df07f45d # initialize rs1
li x17, 0xe636d3c8c9f4ec39 # initialize rs2
max x17, x25, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 120)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x18)
li x27, 0x0d4d5fe6b75edfcf # initialize rs1
li x18, 0xb115a01348a24bbc # initialize rs2
max x18, x27, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 128)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x19)
li x26, 0x7598656a80805d35 # initialize rs1
li x19, 0x6bf51bd0cdba0fed # initialize rs2
max x19, x26, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 136)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x20)
li x14, 0xe9912b0fb5522b84 # initialize rs1
li x20, 0x71cb16d2cdc2a478 # initialize rs2
max x20, x14, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 144)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x21)
li x18, 0x57e1adb7ad88e85c # initialize rs1
li x21, 0x508c024b6cbe1700 # initialize rs2
max x21, x18, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 152)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x22)
li x27, 0xd3ff65344bbdee61 # initialize rs1
li x22, 0x618f17242b4fa248 # initialize rs2
max x22, x27, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 160)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x23)
li x9, 0x18a164caf645b25e # initialize rs1
li x23, 0x4c12f1e8c6bcfc69 # initialize rs2
max x23, x9, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 168)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x24)
li x27, 0x66ca864d7eea131c # initialize rs1
li x24, 0x32b0f2b443ef2933 # initialize rs2
max x24, x27, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 176)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x25)
li x24, 0x66a3078f0c377e44 # initialize rs1
li x25, 0x2d2c02259e06ed8d # initialize rs2
max x25, x24, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 184)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x26)
li x10, 0xc588f9ee97ed3863 # initialize rs1
li x26, 0x24338aa328fe6926 # initialize rs2
max x26, x10, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 192)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x27)
li x22, 0xea305d582b059109 # initialize rs1
li x27, 0xe315f55356a8689d # initialize rs2
max x27, x22, x27 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 200)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x28)
li x11, 0x7023bf94373ad461 # initialize rs1
li x28, 0x20ee1601566b912e # initialize rs2
max x28, x11, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x28, 208)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x29)
li x27, 0x2b40fec49f902e21 # initialize rs1
li x29, 0xec9f4a032cda91d9 # initialize rs2
max x29, x27, x29 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 216)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x30)
li x24, 0x4fc00a3e5ef9f42f # initialize rs1
li x30, 0x115798507302298a # initialize rs2
max x30, x24, x30 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 224)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x31)
li x27, 0x8b3bb9e28bf96e24 # initialize rs1
li x31, 0x831cbbb2f955b9f6 # initialize rs2
max x31, x27, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 232)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x0)
li x0, 0xe3e0d62aea0d845f # initialize rs1
li x0, 0xba8a28b1e7073ad4 # initialize rs2
max x0, x0, x0 # perform operation
RVTEST_SIGUPD(x4, x0, x0, 240)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x1)
li x1, 0xc02a65348712a85a # initialize rs1
li x1, 0xd8c429d2ff4cda87 # initialize rs2
max x1, x1, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 248)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x2)
li x2, 0x0e1c290c0548219d # initialize rs1
li x2, 0xee6ab0cd67e1ef50 # initialize rs2
max x2, x2, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 256)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x3)
li x3, 0xa3e89e17147daa42 # initialize rs1
li x3, 0x22d9e6c518b1bf8e # initialize rs2
max x3, x3, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 264)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x4)
mv x5, x4 # switch signature pointer register to avoid conflict with test
li x4, 0xf7502126d2c6ff74 # initialize rs1
li x4, 0xebf4a1123e8835db # initialize rs2
max x4, x4, x4 # perform operation
RVTEST_SIGUPD(x5, x0, x4, 272)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x5)
mv x6, x5 # switch signature pointer register to avoid conflict with test
li x5, 0x774ef6ba2ad04c7e # initialize rs1
li x5, 0x7899ef86ac1d5907 # initialize rs2
max x5, x5, x5 # perform operation
RVTEST_SIGUPD(x6, x0, x5, 280)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x6)
mv x7, x6 # switch signature pointer register to avoid conflict with test
li x6, 0x47a64c639d05805b # initialize rs1
li x6, 0x1a644f12dd6b4531 # initialize rs2
max x6, x6, x6 # perform operation
RVTEST_SIGUPD(x7, x0, x6, 288)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x7)
mv x4, x7 # switch signature pointer register to avoid conflict with test
li x7, 0x6fc0336f9e5334ac # initialize rs1
li x7, 0x51009d2d6f85b15b # initialize rs2
max x7, x7, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 296)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x8)
li x8, 0x2971298c743c0e05 # initialize rs1
li x8, 0x21f4275c0ab29897 # initialize rs2
max x8, x8, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 304)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x9)
li x9, 0xc63892f289081356 # initialize rs1
li x9, 0xf55b9b1661c9de48 # initialize rs2
max x9, x9, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 312)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x10)
li x10, 0x95f1b0981581e6d7 # initialize rs1
li x10, 0xefcb6306642a71ab # initialize rs2
max x10, x10, x10 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 320)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x11)
li x11, 0x5c5e0c082abe69a5 # initialize rs1
li x11, 0xc7a20deaf5b09da7 # initialize rs2
max x11, x11, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 328)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x12)
li x12, 0x189dae1309b64752 # initialize rs1
li x12, 0xedb9806c3de35eef # initialize rs2
max x12, x12, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 336)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x13)
li x13, 0x4df113617dd13c06 # initialize rs1
li x13, 0x1978caa6fc8762b7 # initialize rs2
max x13, x13, x13 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 344)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x14)
li x14, 0xf91c38824060593f # initialize rs1
li x14, 0x69f6850435aea9bf # initialize rs2
max x14, x14, x14 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 352)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x15)
li x15, 0x35b83e6ca1ddd02e # initialize rs1
li x15, 0x6c6b7c72fd0036ad # initialize rs2
max x15, x15, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 360)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x16)
li x16, 0x4c52e5863fdd66d6 # initialize rs1
li x16, 0x9b1ac6fc45f001d5 # initialize rs2
max x16, x16, x16 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 368)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x17)
li x17, 0x00e8cfb9182f36dd # initialize rs1
li x17, 0x6cc614dae848c676 # initialize rs2
max x17, x17, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 376)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x18)
li x18, 0x6637886095bf1813 # initialize rs1
li x18, 0x9aa9faa13c42afa6 # initialize rs2
max x18, x18, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 384)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x19)
li x19, 0xd6ebb83468e2af4f # initialize rs1
li x19, 0x0266c8829bc60a02 # initialize rs2
max x19, x19, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 392)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x20)
li x20, 0xc5d84a92cfc7f2dc # initialize rs1
li x20, 0xb72f6a54a0797df9 # initialize rs2
max x20, x20, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 400)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x21)
li x21, 0xf4e7208c0552cd86 # initialize rs1
li x21, 0x280fcdb3fd5b2a85 # initialize rs2
max x21, x21, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 408)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x22)
li x22, 0x7b29737ef0b06500 # initialize rs1
li x22, 0x99cb1fc3e6da2afd # initialize rs2
max x22, x22, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 416)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x23)
li x23, 0x55902de07c0434de # initialize rs1
li x23, 0x57349f350659d1f1 # initialize rs2
max x23, x23, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 424)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x24)
li x24, 0x65488cebc453cc1a # initialize rs1
li x24, 0x8083014893eebd3d # initialize rs2
max x24, x24, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 432)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x25)
li x25, 0xba8d861a0af660e1 # initialize rs1
li x25, 0xb56efc5d14efae10 # initialize rs2
max x25, x25, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 440)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x26)
li x26, 0xf938f23b0368c984 # initialize rs1
li x26, 0x1279ec0bc9f3ec6f # initialize rs2
max x26, x26, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 448)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x27)
li x27, 0x64c30463fa84a17e # initialize rs1
li x27, 0x24e345d5e319d913 # initialize rs2
max x27, x27, x27 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 456)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x28)
li x28, 0x0d3fb3daebeb9308 # initialize rs1
li x28, 0xaed7789427cd5fe8 # initialize rs2
max x28, x28, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x28, 464)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x29)
li x29, 0xf5096f0f144c6805 # initialize rs1
li x29, 0x2caa93a37d4869c1 # initialize rs2
max x29, x29, x29 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 472)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x30)
li x30, 0x3010493705b74443 # initialize rs1
li x30, 0xcd87c22715f8e899 # initialize rs2
max x30, x30, x30 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 480)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x31)
li x31, 0xf3f97521bcca31ce # initialize rs1
li x31, 0x38b97831576f5fed # initialize rs2
max x31, x31, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 488)

# Testcase cp_gpr/fpr_hazard nohaz test
add x3, x18, x20 # perform first operation
max x13, x22, x11 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard nohaz test
add x10, x28, x8 # perform first operation
max x18, x16, x26 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard nohaz test
add x17, x2, x23 # perform first operation
max x30, x21, x26 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard raw test
add x26, x6, x16 # perform first operation
max x6, x26, x10 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard raw test
add x1, x22, x13 # perform first operation
max x1, x27, x26 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard raw test
add x15, x6, x2 # perform first operation
max x12, x2, x7 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard waw test
add x29, x3, x13 # perform first operation
max x29, x23, x25 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard waw test
add x30, x8, x11 # perform first operation
max x30, x12, x26 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard waw test
add x29, x5, x26 # perform first operation
max x29, x20, x25 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard war test
add x18, x20, x16 # perform first operation
max x20, x22, x10 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard war test
add x19, x28, x6 # perform first operation
max x6, x23, x21 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard war test
add x3, x10, x13 # perform first operation
max x5, x21, x1 # perform second (triggering) operation

#.EQU SIGSIZE,4096


// ******************
// Tests from: WALLY-COV-sext.h.S
// ******************


# initialize signature pointer
la x4, begin_signature

    
# Testcase cp_rs1 (Test source rs1 = x0)
li x0, 0xd21cbcc889b9c76b # initialize rs1
sext.h x8, x0 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 0)

# Testcase cp_rs1 (Test source rs1 = x1)
li x1, 0x50d99c91bc592772 # initialize rs1
sext.h x9, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 8)

# Testcase cp_rs1 (Test source rs1 = x2)
li x2, 0xc14e17bd1f8b111d # initialize rs1
sext.h x12, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 16)

# Testcase cp_rs1 (Test source rs1 = x3)
li x3, 0x1dde2d701acdbd73 # initialize rs1
sext.h x18, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 24)

# Testcase cp_rs1 (Test source rs1 = x4)
mv x5, x4 # switch signature pointer register to avoid conflict with test
li x4, 0x72e0474fc4265e3a # initialize rs1
sext.h x14, x4 # perform operation
RVTEST_SIGUPD(x5, x0, x14, 32)

# Testcase cp_rs1 (Test source rs1 = x5)
mv x6, x5 # switch signature pointer register to avoid conflict with test
li x5, 0x0d47edcce49ccb95 # initialize rs1
sext.h x7, x5 # perform operation
RVTEST_SIGUPD(x6, x0, x7, 40)

# Testcase cp_rs1 (Test source rs1 = x6)
mv x7, x6 # switch signature pointer register to avoid conflict with test
li x6, 0x3e1580b7fe8425e2 # initialize rs1
sext.h x4, x6 # perform operation
RVTEST_SIGUPD(x7, x0, x4, 48)

# Testcase cp_rs1 (Test source rs1 = x7)
mv x4, x7 # switch signature pointer register to avoid conflict with test
li x7, 0x52e1697a5ce3507d # initialize rs1
sext.h x1, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 56)

# Testcase cp_rs1 (Test source rs1 = x8)
li x8, 0x29531583e2d9d9ef # initialize rs1
sext.h x16, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 64)

# Testcase cp_rs1 (Test source rs1 = x9)
li x9, 0xf2fb3f28dd20ed50 # initialize rs1
sext.h x13, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 72)

# Testcase cp_rs1 (Test source rs1 = x10)
li x10, 0x8f8e20d5a89f4045 # initialize rs1
sext.h x6, x10 # perform operation
RVTEST_SIGUPD(x4, x0, x6, 80)

# Testcase cp_rs1 (Test source rs1 = x11)
li x11, 0xaf6ca7627506a653 # initialize rs1
sext.h x27, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 88)

# Testcase cp_rs1 (Test source rs1 = x12)
li x12, 0xf9100b380d3b3444 # initialize rs1
sext.h x10, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 96)

# Testcase cp_rs1 (Test source rs1 = x13)
li x13, 0x2f74483d8be9df51 # initialize rs1
sext.h x22, x13 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 104)

# Testcase cp_rs1 (Test source rs1 = x14)
li x14, 0x42abd3c6714537f9 # initialize rs1
sext.h x2, x14 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 112)

# Testcase cp_rs1 (Test source rs1 = x15)
li x15, 0xbfcd319c191a6573 # initialize rs1
sext.h x19, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 120)

# Testcase cp_rs1 (Test source rs1 = x16)
li x16, 0x52e0df1124c34231 # initialize rs1
sext.h x17, x16 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 128)

# Testcase cp_rs1 (Test source rs1 = x17)
li x17, 0x95e303195e26cfe9 # initialize rs1
sext.h x29, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 136)

# Testcase cp_rs1 (Test source rs1 = x18)
li x18, 0x4ae99339e2a851d3 # initialize rs1
sext.h x25, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 144)

# Testcase cp_rs1 (Test source rs1 = x19)
li x19, 0x8094cff13e875563 # initialize rs1
sext.h x29, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 152)

# Testcase cp_rs1 (Test source rs1 = x20)
li x20, 0x8b4b92a3706bad03 # initialize rs1
sext.h x12, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 160)

# Testcase cp_rs1 (Test source rs1 = x21)
li x21, 0x9eb3097c77ce22cf # initialize rs1
sext.h x30, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 168)

# Testcase cp_rs1 (Test source rs1 = x22)
li x22, 0xdd8ea3e4b2ba615f # initialize rs1
sext.h x16, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 176)

# Testcase cp_rs1 (Test source rs1 = x23)
li x23, 0xac8c8ec4dcb87cb3 # initialize rs1
sext.h x27, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 184)

# Testcase cp_rs1 (Test source rs1 = x24)
li x24, 0xe59e39073a7e7d3f # initialize rs1
sext.h x22, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 192)

# Testcase cp_rs1 (Test source rs1 = x25)
li x25, 0x79eb75ed7ea89e67 # initialize rs1
sext.h x5, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x5, 200)

# Testcase cp_rs1 (Test source rs1 = x26)
li x26, 0x79561cbf32adc603 # initialize rs1
sext.h x6, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x6, 208)

# Testcase cp_rs1 (Test source rs1 = x27)
li x27, 0x7e3f08d7a75b70b6 # initialize rs1
sext.h x19, x27 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 216)

# Testcase cp_rs1 (Test source rs1 = x28)
li x28, 0x051e66187ccb514b # initialize rs1
sext.h x10, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 224)

# Testcase cp_rs1 (Test source rs1 = x29)
li x29, 0xc0bd5621de31b8e3 # initialize rs1
sext.h x24, x29 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 232)

# Testcase cp_rs1 (Test source rs1 = x30)
li x30, 0xc4947d1499e96d1f # initialize rs1
sext.h x25, x30 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 240)

# Testcase cp_rs1 (Test source rs1 = x31)
li x31, 0x82af670ab6ab57e0 # initialize rs1
sext.h x7, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 248)

# Testcase cp_rd (Test destination rd = x0)
li x30, 0x2d3eb72e542a570a # initialize rs1
sext.h x0, x30 # perform operation
RVTEST_SIGUPD(x4, x0, x0, 256)

# Testcase cp_rd (Test destination rd = x1)
li x16, 0x29ccc0b9960d3517 # initialize rs1
sext.h x1, x16 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 264)

# Testcase cp_rd (Test destination rd = x2)
li x20, 0x2d0c7dba9cc114d7 # initialize rs1
sext.h x2, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 272)

# Testcase cp_rd (Test destination rd = x3)
li x12, 0x213872c6d2c492df # initialize rs1
sext.h x3, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 280)

# Testcase cp_rd (Test destination rd = x4)
mv x5, x4 # switch signature pointer register to avoid conflict with test
li x12, 0x0c0b71a4aa8837a6 # initialize rs1
sext.h x4, x12 # perform operation
RVTEST_SIGUPD(x5, x0, x4, 288)

# Testcase cp_rd (Test destination rd = x5)
mv x6, x5 # switch signature pointer register to avoid conflict with test
li x29, 0x503c43ffc43f1ef7 # initialize rs1
sext.h x5, x29 # perform operation
RVTEST_SIGUPD(x6, x0, x5, 296)

# Testcase cp_rd (Test destination rd = x6)
mv x4, x6 # switch signature pointer register to avoid conflict with test
li x7, 0x429d7c01ebd7a9e3 # initialize rs1
sext.h x6, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x6, 304)

# Testcase cp_rd (Test destination rd = x7)
li x7, 0x5f07280a24d879c4 # initialize rs1
sext.h x7, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 312)

# Testcase cp_rd (Test destination rd = x8)
li x26, 0x4bc0a2dc6f516547 # initialize rs1
sext.h x8, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 320)

# Testcase cp_rd (Test destination rd = x9)
li x16, 0xd52ad89cb66424fc # initialize rs1
sext.h x9, x16 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 328)

# Testcase cp_rd (Test destination rd = x10)
li x13, 0x1b212a621471620a # initialize rs1
sext.h x10, x13 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 336)

# Testcase cp_rd (Test destination rd = x11)
li x13, 0x903b92e5efafbd7c # initialize rs1
sext.h x11, x13 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 344)

# Testcase cp_rd (Test destination rd = x12)
li x18, 0x01677590b1555322 # initialize rs1
sext.h x12, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 352)

# Testcase cp_rd (Test destination rd = x13)
li x18, 0x4520b8357632fead # initialize rs1
sext.h x13, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 360)

# Testcase cp_rd (Test destination rd = x14)
li x17, 0x2ca79b18412e4a8a # initialize rs1
sext.h x14, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 368)

# Testcase cp_rd (Test destination rd = x15)
li x7, 0xda5265243e0ee954 # initialize rs1
sext.h x15, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 376)

# Testcase cp_rd (Test destination rd = x16)
li x9, 0x5ec7c60bbaf66a99 # initialize rs1
sext.h x16, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 384)

# Testcase cp_rd (Test destination rd = x17)
li x6, 0x19afebe8a09baa5b # initialize rs1
sext.h x17, x6 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 392)

# Testcase cp_rd (Test destination rd = x18)
li x9, 0x85da84e8968d60af # initialize rs1
sext.h x18, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 400)

# Testcase cp_rd (Test destination rd = x19)
li x31, 0xa04ff22e5a8d1fb5 # initialize rs1
sext.h x19, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 408)

# Testcase cp_rd (Test destination rd = x20)
li x28, 0xe21610b605085cb2 # initialize rs1
sext.h x20, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 416)

# Testcase cp_rd (Test destination rd = x21)
li x19, 0xef52bd9e8e87f2e5 # initialize rs1
sext.h x21, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 424)

# Testcase cp_rd (Test destination rd = x22)
li x20, 0x8708283ea276a77c # initialize rs1
sext.h x22, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 432)

# Testcase cp_rd (Test destination rd = x23)
li x7, 0x840ac03c73330c31 # initialize rs1
sext.h x23, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 440)

# Testcase cp_rd (Test destination rd = x24)
li x21, 0xba69afb49080d356 # initialize rs1
sext.h x24, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 448)

# Testcase cp_rd (Test destination rd = x25)
li x5, 0x2aba90029721684e # initialize rs1
sext.h x25, x5 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 456)

# Testcase cp_rd (Test destination rd = x26)
li x21, 0xab9f3c60eff97978 # initialize rs1
sext.h x26, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 464)

# Testcase cp_rd (Test destination rd = x27)
li x27, 0x74c99f129e90aa29 # initialize rs1
sext.h x27, x27 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 472)

# Testcase cp_rd (Test destination rd = x28)
li x11, 0x2b9558bf2550b88c # initialize rs1
sext.h x28, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x28, 480)

# Testcase cp_rd (Test destination rd = x29)
li x9, 0x9e777a496246916c # initialize rs1
sext.h x29, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 488)

# Testcase cp_rd (Test destination rd = x30)
li x14, 0xfec0fad1875c760c # initialize rs1
sext.h x30, x14 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 496)

# Testcase cp_rd (Test destination rd = x31)
li x19, 0x820584dc7a3c63c7 # initialize rs1
sext.h x31, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 504)

# Testcase cp_rs1_corners (Test source rs1 value = 0x0)
li x26, 0x0000000000000000 # initialize rs1
sext.h x19, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 512)

# Testcase cp_rs1_corners (Test source rs1 value = 0x1)
li x24, 0x0000000000000001 # initialize rs1
sext.h x7, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 520)

# Testcase cp_rs1_corners (Test source rs1 value = 0x2)
li x26, 0x0000000000000002 # initialize rs1
sext.h x11, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 528)

# Testcase cp_rs1_corners (Test source rs1 value = 0x8000000000000000)
li x29, 0x8000000000000000 # initialize rs1
sext.h x9, x29 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 536)

# Testcase cp_rs1_corners (Test source rs1 value = 0x8000000000000001)
li x30, 0x8000000000000001 # initialize rs1
sext.h x27, x30 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 544)

# Testcase cp_rs1_corners (Test source rs1 value = 0x7fffffffffffffff)
li x27, 0x7fffffffffffffff # initialize rs1
sext.h x26, x27 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 552)

# Testcase cp_rs1_corners (Test source rs1 value = 0x7ffffffffffffffe)
li x7, 0x7ffffffffffffffe # initialize rs1
sext.h x18, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 560)

# Testcase cp_rs1_corners (Test source rs1 value = 0xffffffffffffffff)
li x12, 0xffffffffffffffff # initialize rs1
sext.h x14, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 568)

# Testcase cp_rs1_corners (Test source rs1 value = 0xfffffffffffffffe)
li x18, 0xfffffffffffffffe # initialize rs1
sext.h x27, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 576)

# Testcase cp_rs1_corners (Test source rs1 value = 0x5bbc887763ae86f2)
li x22, 0x5bbc887763ae86f2 # initialize rs1
sext.h x7, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 584)

# Testcase cp_rs1_corners (Test source rs1 value = 0xaaaaaaaaaaaaaaaa)
li x22, 0xaaaaaaaaaaaaaaaa # initialize rs1
sext.h x8, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 592)

# Testcase cp_rs1_corners (Test source rs1 value = 0x5555555555555555)
li x24, 0x5555555555555555 # initialize rs1
sext.h x16, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 600)

# Testcase cp_rs1_corners (Test source rs1 value = 0xffffffff)
li x28, 0x00000000ffffffff # initialize rs1
sext.h x22, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 608)

# Testcase cp_rs1_corners (Test source rs1 value = 0xfffffffe)
li x10, 0x00000000fffffffe # initialize rs1
sext.h x27, x10 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 616)

# Testcase cp_rs1_corners (Test source rs1 value = 0x100000000)
li x16, 0x0000000100000000 # initialize rs1
sext.h x8, x16 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 624)

# Testcase cp_rs1_corners (Test source rs1 value = 0x100000001)
li x31, 0x0000000100000001 # initialize rs1
sext.h x5, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x5, 632)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x0)
li x0, 0xaf1ca4b3d258a5d5 # initialize rs1
sext.h x0, x0 # perform operation
RVTEST_SIGUPD(x4, x0, x0, 640)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x1)
li x1, 0x52c786b673b5505d # initialize rs1
sext.h x1, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 648)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x2)
li x2, 0xd06d10c38c84b9f8 # initialize rs1
sext.h x2, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 656)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x3)
li x3, 0x66338c1db7b2449e # initialize rs1
sext.h x3, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 664)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x4)
mv x5, x4 # switch signature pointer register to avoid conflict with test
li x4, 0x2d0f4602ff044b80 # initialize rs1
sext.h x4, x4 # perform operation
RVTEST_SIGUPD(x5, x0, x4, 672)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x5)
mv x6, x5 # switch signature pointer register to avoid conflict with test
li x5, 0xb78d6b4138b682db # initialize rs1
sext.h x5, x5 # perform operation
RVTEST_SIGUPD(x6, x0, x5, 680)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x6)
mv x7, x6 # switch signature pointer register to avoid conflict with test
li x6, 0x44f56415bcd6c177 # initialize rs1
sext.h x6, x6 # perform operation
RVTEST_SIGUPD(x7, x0, x6, 688)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x7)
mv x4, x7 # switch signature pointer register to avoid conflict with test
li x7, 0xaa9d54131b2825ba # initialize rs1
sext.h x7, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 696)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x8)
li x8, 0x0dc05bc56f880d7b # initialize rs1
sext.h x8, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 704)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x9)
li x9, 0x1dc7017daefc74b2 # initialize rs1
sext.h x9, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 712)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x10)
li x10, 0x63ea665b0eaa1d28 # initialize rs1
sext.h x10, x10 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 720)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x11)
li x11, 0x079f378c1f623748 # initialize rs1
sext.h x11, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 728)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x12)
li x12, 0x1645a403ca4a4416 # initialize rs1
sext.h x12, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 736)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x13)
li x13, 0x0a806d98afa40516 # initialize rs1
sext.h x13, x13 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 744)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x14)
li x14, 0x8c319908e5ccc6d6 # initialize rs1
sext.h x14, x14 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 752)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x15)
li x15, 0x9cf2b27cca55e5fa # initialize rs1
sext.h x15, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 760)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x16)
li x16, 0x9fc06c6a85b3aada # initialize rs1
sext.h x16, x16 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 768)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x17)
li x17, 0x2452da0dd49fc177 # initialize rs1
sext.h x17, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 776)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x18)
li x18, 0x02c899082b22e018 # initialize rs1
sext.h x18, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 784)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x19)
li x19, 0xfb45cc4d7bb7ba88 # initialize rs1
sext.h x19, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 792)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x20)
li x20, 0x8311b9377efca480 # initialize rs1
sext.h x20, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 800)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x21)
li x21, 0x8844cd5ce562e526 # initialize rs1
sext.h x21, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 808)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x22)
li x22, 0x49fecf4924196d29 # initialize rs1
sext.h x22, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 816)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x23)
li x23, 0x8539c95498a924b0 # initialize rs1
sext.h x23, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 824)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x24)
li x24, 0x27cf39ce71ccb50d # initialize rs1
sext.h x24, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 832)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x25)
li x25, 0x55f654eee3a75e91 # initialize rs1
sext.h x25, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 840)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x26)
li x26, 0x1641b5167c49502f # initialize rs1
sext.h x26, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 848)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x27)
li x27, 0xa5259725fb4954b1 # initialize rs1
sext.h x27, x27 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 856)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x28)
li x28, 0x6fbe36eb841eaa61 # initialize rs1
sext.h x28, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x28, 864)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x29)
li x29, 0x97cfe1192eeb4bec # initialize rs1
sext.h x29, x29 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 872)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x30)
li x30, 0xb6c917edaca4cb68 # initialize rs1
sext.h x30, x30 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 880)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x31)
li x31, 0xb5deb334847f8b16 # initialize rs1
sext.h x31, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 888)

# Testcase cp_gpr/fpr_hazard nohaz test
add x1, x5, x12 # perform first operation
sext.h x31, x11 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard nohaz test
add x24, x28, x25 # perform first operation
sext.h x1, x23 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard nohaz test
add x16, x30, x20 # perform first operation
sext.h x25, x31 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard raw test
add x15, x20, x18 # perform first operation
sext.h x15, x3 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard raw test
add x23, x26, x31 # perform first operation
sext.h x31, x12 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard raw test
add x31, x22, x1 # perform first operation
sext.h x22, x30 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard waw test
add x22, x14, x9 # perform first operation
sext.h x22, x10 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard waw test
add x7, x1, x11 # perform first operation
sext.h x7, x14 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard waw test
add x1, x9, x11 # perform first operation
sext.h x1, x2 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard war test
add x30, x1, x22 # perform first operation
sext.h x1, x31 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard war test
add x6, x18, x12 # perform first operation
sext.h x12, x31 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard war test
add x6, x23, x7 # perform first operation
sext.h x22, x8 # perform second (triggering) operation

#.EQU SIGSIZE,896


// ******************
// Tests from: WALLY-COV-cpopw.S
// ******************


# initialize signature pointer
la x4, begin_signature

    
# Testcase cp_rs1 (Test source rs1 = x0)
li x0, 0x1527207a4baf0c56 # initialize rs1
cpopw x20, x0 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 0)

# Testcase cp_rs1 (Test source rs1 = x1)
li x1, 0x5d8ac365e043e315 # initialize rs1
cpopw x9, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 8)

# Testcase cp_rs1 (Test source rs1 = x2)
li x2, 0x11a8c2dabcaa98b3 # initialize rs1
cpopw x31, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 16)

# Testcase cp_rs1 (Test source rs1 = x3)
li x3, 0xc1c20d52b28332a3 # initialize rs1
cpopw x29, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 24)

# Testcase cp_rs1 (Test source rs1 = x4)
mv x5, x4 # switch signature pointer register to avoid conflict with test
li x4, 0xaed3735c7484a700 # initialize rs1
cpopw x26, x4 # perform operation
RVTEST_SIGUPD(x5, x0, x26, 32)

# Testcase cp_rs1 (Test source rs1 = x5)
mv x6, x5 # switch signature pointer register to avoid conflict with test
li x5, 0xcee1aac6dd2e3ca3 # initialize rs1
cpopw x20, x5 # perform operation
RVTEST_SIGUPD(x6, x0, x20, 40)

# Testcase cp_rs1 (Test source rs1 = x6)
mv x7, x6 # switch signature pointer register to avoid conflict with test
li x6, 0x9357e85776240f7b # initialize rs1
cpopw x2, x6 # perform operation
RVTEST_SIGUPD(x7, x0, x2, 48)

# Testcase cp_rs1 (Test source rs1 = x7)
mv x4, x7 # switch signature pointer register to avoid conflict with test
li x7, 0x256dc891c2b56873 # initialize rs1
cpopw x29, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 56)

# Testcase cp_rs1 (Test source rs1 = x8)
li x8, 0x03890f6b26a13db7 # initialize rs1
cpopw x9, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 64)

# Testcase cp_rs1 (Test source rs1 = x9)
li x9, 0x8a910ff5ff8cfee6 # initialize rs1
cpopw x8, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 72)

# Testcase cp_rs1 (Test source rs1 = x10)
li x10, 0x6cf01d39ec4fbbb5 # initialize rs1
cpopw x26, x10 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 80)

# Testcase cp_rs1 (Test source rs1 = x11)
li x11, 0xfb6204da0918df01 # initialize rs1
cpopw x27, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 88)

# Testcase cp_rs1 (Test source rs1 = x12)
li x12, 0x33c7e1452bfc30b3 # initialize rs1
cpopw x20, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 96)

# Testcase cp_rs1 (Test source rs1 = x13)
li x13, 0xb2806fe570efb558 # initialize rs1
cpopw x14, x13 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 104)

# Testcase cp_rs1 (Test source rs1 = x14)
li x14, 0x06112b01061b9ace # initialize rs1
cpopw x29, x14 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 112)

# Testcase cp_rs1 (Test source rs1 = x15)
li x15, 0xfd362356b1a0421f # initialize rs1
cpopw x2, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 120)

# Testcase cp_rs1 (Test source rs1 = x16)
li x16, 0x263cfd0c5a2dd349 # initialize rs1
cpopw x10, x16 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 128)

# Testcase cp_rs1 (Test source rs1 = x17)
li x17, 0x297e928584aabfca # initialize rs1
cpopw x9, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 136)

# Testcase cp_rs1 (Test source rs1 = x18)
li x18, 0x5ebdbda8f8bd46e1 # initialize rs1
cpopw x24, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 144)

# Testcase cp_rs1 (Test source rs1 = x19)
li x19, 0xf6724b41dea4c97c # initialize rs1
cpopw x20, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 152)

# Testcase cp_rs1 (Test source rs1 = x20)
li x20, 0x214ec2186fa69a0c # initialize rs1
cpopw x10, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 160)

# Testcase cp_rs1 (Test source rs1 = x21)
li x21, 0xcf8e7e69b525d748 # initialize rs1
cpopw x7, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 168)

# Testcase cp_rs1 (Test source rs1 = x22)
li x22, 0x202de18cf116c9dc # initialize rs1
cpopw x29, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 176)

# Testcase cp_rs1 (Test source rs1 = x23)
li x23, 0x7d96ddf9bf057cf6 # initialize rs1
cpopw x19, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 184)

# Testcase cp_rs1 (Test source rs1 = x24)
li x24, 0x5d1765d01e251db9 # initialize rs1
cpopw x18, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 192)

# Testcase cp_rs1 (Test source rs1 = x25)
li x25, 0x6d5f27a92e7197c4 # initialize rs1
cpopw x14, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 200)

# Testcase cp_rs1 (Test source rs1 = x26)
li x26, 0x25e8457532fb455d # initialize rs1
cpopw x10, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 208)

# Testcase cp_rs1 (Test source rs1 = x27)
li x27, 0x961600d557aa7996 # initialize rs1
cpopw x21, x27 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 216)

# Testcase cp_rs1 (Test source rs1 = x28)
li x28, 0x8589f9835a776bcf # initialize rs1
cpopw x31, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 224)

# Testcase cp_rs1 (Test source rs1 = x29)
li x29, 0x3bc56ee47357f8a0 # initialize rs1
cpopw x14, x29 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 232)

# Testcase cp_rs1 (Test source rs1 = x30)
li x30, 0x1767be6d7cadd413 # initialize rs1
cpopw x6, x30 # perform operation
RVTEST_SIGUPD(x4, x0, x6, 240)

# Testcase cp_rs1 (Test source rs1 = x31)
li x31, 0xadbe7d3436af5b05 # initialize rs1
cpopw x24, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 248)

# Testcase cp_rd (Test destination rd = x0)
li x15, 0x83af2d0e9207c367 # initialize rs1
cpopw x0, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x0, 256)

# Testcase cp_rd (Test destination rd = x1)
li x17, 0xb74afab5840e75df # initialize rs1
cpopw x1, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 264)

# Testcase cp_rd (Test destination rd = x2)
li x16, 0x6ff98795238b6f58 # initialize rs1
cpopw x2, x16 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 272)

# Testcase cp_rd (Test destination rd = x3)
li x3, 0x8f3bdae7b46bdb2b # initialize rs1
cpopw x3, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 280)

# Testcase cp_rd (Test destination rd = x4)
mv x5, x4 # switch signature pointer register to avoid conflict with test
li x7, 0xd201e133cb34d1da # initialize rs1
cpopw x4, x7 # perform operation
RVTEST_SIGUPD(x5, x0, x4, 288)

# Testcase cp_rd (Test destination rd = x5)
mv x6, x5 # switch signature pointer register to avoid conflict with test
li x14, 0xbf7db0c9833560f0 # initialize rs1
cpopw x5, x14 # perform operation
RVTEST_SIGUPD(x6, x0, x5, 296)

# Testcase cp_rd (Test destination rd = x6)
mv x7, x6 # switch signature pointer register to avoid conflict with test
li x31, 0xebfd6097ff2d5643 # initialize rs1
cpopw x6, x31 # perform operation
RVTEST_SIGUPD(x7, x0, x6, 304)

# Testcase cp_rd (Test destination rd = x7)
mv x4, x7 # switch signature pointer register to avoid conflict with test
li x26, 0xe406a487a5b03e16 # initialize rs1
cpopw x7, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 312)

# Testcase cp_rd (Test destination rd = x8)
li x1, 0x660601fddcec7872 # initialize rs1
cpopw x8, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 320)

# Testcase cp_rd (Test destination rd = x9)
li x5, 0x165921b632146a58 # initialize rs1
cpopw x9, x5 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 328)

# Testcase cp_rd (Test destination rd = x10)
li x5, 0xdf0cbbcfaca7b848 # initialize rs1
cpopw x10, x5 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 336)

# Testcase cp_rd (Test destination rd = x11)
li x19, 0x5d90f3e589febffd # initialize rs1
cpopw x11, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 344)

# Testcase cp_rd (Test destination rd = x12)
li x8, 0x80e753a5acef0a15 # initialize rs1
cpopw x12, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 352)

# Testcase cp_rd (Test destination rd = x13)
li x15, 0x5e6cdf37bfb2f4b6 # initialize rs1
cpopw x13, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 360)

# Testcase cp_rd (Test destination rd = x14)
li x2, 0x35cba7280de4ab20 # initialize rs1
cpopw x14, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 368)

# Testcase cp_rd (Test destination rd = x15)
li x28, 0x34b24df591de9583 # initialize rs1
cpopw x15, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 376)

# Testcase cp_rd (Test destination rd = x16)
li x1, 0x38221231019009d7 # initialize rs1
cpopw x16, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 384)

# Testcase cp_rd (Test destination rd = x17)
li x7, 0xb5d4f0ef01494d24 # initialize rs1
cpopw x17, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 392)

# Testcase cp_rd (Test destination rd = x18)
li x14, 0x25ee541224566517 # initialize rs1
cpopw x18, x14 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 400)

# Testcase cp_rd (Test destination rd = x19)
li x20, 0x41bc1714a4b363d6 # initialize rs1
cpopw x19, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 408)

# Testcase cp_rd (Test destination rd = x20)
li x23, 0x46de8980da1efb63 # initialize rs1
cpopw x20, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 416)

# Testcase cp_rd (Test destination rd = x21)
li x30, 0x14529f1be55fdea3 # initialize rs1
cpopw x21, x30 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 424)

# Testcase cp_rd (Test destination rd = x22)
li x21, 0x442552572753b05e # initialize rs1
cpopw x22, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 432)

# Testcase cp_rd (Test destination rd = x23)
li x21, 0x535fedce80918bed # initialize rs1
cpopw x23, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 440)

# Testcase cp_rd (Test destination rd = x24)
li x13, 0xd2d9e4205ac3b376 # initialize rs1
cpopw x24, x13 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 448)

# Testcase cp_rd (Test destination rd = x25)
li x9, 0xbc83587a821d2c29 # initialize rs1
cpopw x25, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 456)

# Testcase cp_rd (Test destination rd = x26)
li x10, 0x46fecedcc15ea41d # initialize rs1
cpopw x26, x10 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 464)

# Testcase cp_rd (Test destination rd = x27)
li x26, 0x492aa3733b1d397f # initialize rs1
cpopw x27, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 472)

# Testcase cp_rd (Test destination rd = x28)
li x19, 0x2a13043b07ee5a40 # initialize rs1
cpopw x28, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x28, 480)

# Testcase cp_rd (Test destination rd = x29)
li x13, 0xc69b9dbdda9a0f72 # initialize rs1
cpopw x29, x13 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 488)

# Testcase cp_rd (Test destination rd = x30)
li x19, 0x1c933bf682136449 # initialize rs1
cpopw x30, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 496)

# Testcase cp_rd (Test destination rd = x31)
li x10, 0x74aad14f008846c6 # initialize rs1
cpopw x31, x10 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 504)

# Testcase cp_rs1_corners (Test source rs1 value = 0x0)
li x19, 0x0000000000000000 # initialize rs1
cpopw x3, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 512)

# Testcase cp_rs1_corners (Test source rs1 value = 0x1)
li x22, 0x0000000000000001 # initialize rs1
cpopw x27, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 520)

# Testcase cp_rs1_corners (Test source rs1 value = 0x2)
li x29, 0x0000000000000002 # initialize rs1
cpopw x20, x29 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 528)

# Testcase cp_rs1_corners (Test source rs1 value = 0x8000000000000000)
li x26, 0x8000000000000000 # initialize rs1
cpopw x20, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 536)

# Testcase cp_rs1_corners (Test source rs1 value = 0x8000000000000001)
li x16, 0x8000000000000001 # initialize rs1
cpopw x12, x16 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 544)

# Testcase cp_rs1_corners (Test source rs1 value = 0x7fffffffffffffff)
li x8, 0x7fffffffffffffff # initialize rs1
cpopw x14, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 552)

# Testcase cp_rs1_corners (Test source rs1 value = 0x7ffffffffffffffe)
li x5, 0x7ffffffffffffffe # initialize rs1
cpopw x3, x5 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 560)

# Testcase cp_rs1_corners (Test source rs1 value = 0xffffffffffffffff)
li x28, 0xffffffffffffffff # initialize rs1
cpopw x25, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 568)

# Testcase cp_rs1_corners (Test source rs1 value = 0xfffffffffffffffe)
li x12, 0xfffffffffffffffe # initialize rs1
cpopw x20, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 576)

# Testcase cp_rs1_corners (Test source rs1 value = 0x5bbc887763ae86f2)
li x10, 0x5bbc887763ae86f2 # initialize rs1
cpopw x14, x10 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 584)

# Testcase cp_rs1_corners (Test source rs1 value = 0xaaaaaaaaaaaaaaaa)
li x23, 0xaaaaaaaaaaaaaaaa # initialize rs1
cpopw x15, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 592)

# Testcase cp_rs1_corners (Test source rs1 value = 0x5555555555555555)
li x19, 0x5555555555555555 # initialize rs1
cpopw x20, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 600)

# Testcase cp_rs1_corners (Test source rs1 value = 0xffffffff)
li x17, 0x00000000ffffffff # initialize rs1
cpopw x12, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 608)

# Testcase cp_rs1_corners (Test source rs1 value = 0xfffffffe)
li x13, 0x00000000fffffffe # initialize rs1
cpopw x26, x13 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 616)

# Testcase cp_rs1_corners (Test source rs1 value = 0x100000000)
li x28, 0x0000000100000000 # initialize rs1
cpopw x27, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 624)

# Testcase cp_rs1_corners (Test source rs1 value = 0x100000001)
li x22, 0x0000000100000001 # initialize rs1
cpopw x30, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 632)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x0)
li x0, 0xa191b8d98bfe4371 # initialize rs1
cpopw x0, x0 # perform operation
RVTEST_SIGUPD(x4, x0, x0, 640)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x1)
li x1, 0xb0f8e9bf188f1851 # initialize rs1
cpopw x1, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 648)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x2)
li x2, 0xc2072ed25394d2e8 # initialize rs1
cpopw x2, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 656)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x3)
li x3, 0x015499fce13e122d # initialize rs1
cpopw x3, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 664)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x4)
mv x5, x4 # switch signature pointer register to avoid conflict with test
li x4, 0xa75c4c01ce3a7483 # initialize rs1
cpopw x4, x4 # perform operation
RVTEST_SIGUPD(x5, x0, x4, 672)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x5)
mv x6, x5 # switch signature pointer register to avoid conflict with test
li x5, 0xdf0ef2d73acf3741 # initialize rs1
cpopw x5, x5 # perform operation
RVTEST_SIGUPD(x6, x0, x5, 680)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x6)
mv x7, x6 # switch signature pointer register to avoid conflict with test
li x6, 0x63f7d948e7e9a7d9 # initialize rs1
cpopw x6, x6 # perform operation
RVTEST_SIGUPD(x7, x0, x6, 688)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x7)
mv x4, x7 # switch signature pointer register to avoid conflict with test
li x7, 0x37fa523c15ce6e75 # initialize rs1
cpopw x7, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 696)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x8)
li x8, 0xbfed7f987b6ec02b # initialize rs1
cpopw x8, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 704)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x9)
li x9, 0x09633f22ed33e906 # initialize rs1
cpopw x9, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 712)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x10)
li x10, 0xb6d3f5efb12b6eaa # initialize rs1
cpopw x10, x10 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 720)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x11)
li x11, 0x3e97ffbc293efc1b # initialize rs1
cpopw x11, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 728)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x12)
li x12, 0x0296849e61b57939 # initialize rs1
cpopw x12, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 736)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x13)
li x13, 0x2f826afece68c831 # initialize rs1
cpopw x13, x13 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 744)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x14)
li x14, 0x0dd59fecebd93c6d # initialize rs1
cpopw x14, x14 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 752)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x15)
li x15, 0x907d1fca7c453da0 # initialize rs1
cpopw x15, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 760)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x16)
li x16, 0xb2daf88b42b79bfe # initialize rs1
cpopw x16, x16 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 768)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x17)
li x17, 0x9ecac4c2f9ce6d21 # initialize rs1
cpopw x17, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 776)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x18)
li x18, 0xb28d2c5acf728713 # initialize rs1
cpopw x18, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 784)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x19)
li x19, 0xc1cf86cf412b1472 # initialize rs1
cpopw x19, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 792)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x20)
li x20, 0x25a1d94e848662fe # initialize rs1
cpopw x20, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 800)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x21)
li x21, 0x7b2a87f520c4d8f6 # initialize rs1
cpopw x21, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 808)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x22)
li x22, 0x2a7e33f908ed8972 # initialize rs1
cpopw x22, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 816)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x23)
li x23, 0x244e48b49670a308 # initialize rs1
cpopw x23, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 824)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x24)
li x24, 0x95d096d35bf95ea0 # initialize rs1
cpopw x24, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 832)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x25)
li x25, 0xa52960347a0e65ac # initialize rs1
cpopw x25, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 840)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x26)
li x26, 0x636049086c5418a6 # initialize rs1
cpopw x26, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 848)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x27)
li x27, 0x1d0af407e6ccd621 # initialize rs1
cpopw x27, x27 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 856)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x28)
li x28, 0x2de88bae18e40503 # initialize rs1
cpopw x28, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x28, 864)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x29)
li x29, 0xcd46edb729b16148 # initialize rs1
cpopw x29, x29 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 872)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x30)
li x30, 0xfaaa196299bba362 # initialize rs1
cpopw x30, x30 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 880)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x31)
li x31, 0x5c0a3bf331574b07 # initialize rs1
cpopw x31, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 888)

# Testcase cp_gpr/fpr_hazard nohaz test
add x26, x16, x23 # perform first operation
cpopw x25, x15 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard nohaz test
add x1, x21, x9 # perform first operation
cpopw x2, x30 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard nohaz test
add x24, x2, x17 # perform first operation
cpopw x6, x23 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard raw test
add x18, x20, x9 # perform first operation
cpopw x5, x18 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard raw test
add x27, x5, x29 # perform first operation
cpopw x29, x5 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard raw test
add x11, x17, x2 # perform first operation
cpopw x20, x5 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard waw test
add x24, x11, x29 # perform first operation
cpopw x24, x22 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard waw test
add x1, x12, x17 # perform first operation
cpopw x1, x16 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard waw test
add x13, x30, x15 # perform first operation
cpopw x13, x11 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard war test
add x3, x22, x20 # perform first operation
cpopw x22, x12 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard war test
add x25, x21, x14 # perform first operation
cpopw x14, x12 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard war test
add x8, x19, x10 # perform first operation
cpopw x11, x29 # perform second (triggering) operation

#.EQU SIGSIZE,896


// ******************
// Tests from: WALLY-COV-xnor.S
// ******************


# initialize signature pointer
la x4, begin_signature

    
# Testcase cp_rs1 (Test source rs1 = x0)
li x0, 0x5c82f1ccc7baffc0 # initialize rs1
li x3, 0xad3814791b97ac06 # initialize rs2
xnor x1, x0, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 0)

# Testcase cp_rs1 (Test source rs1 = x1)
li x1, 0x2b8e1f931a39b402 # initialize rs1
li x26, 0x39150fd83fb126ab # initialize rs2
xnor x30, x1, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 8)

# Testcase cp_rs1 (Test source rs1 = x2)
li x2, 0xd6fb386d93316946 # initialize rs1
li x6, 0xd54d62d7bd49b10c # initialize rs2
xnor x12, x2, x6 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 16)

# Testcase cp_rs1 (Test source rs1 = x3)
li x3, 0x61b1047a02c0a162 # initialize rs1
li x15, 0x363fc73eae9d4e1c # initialize rs2
xnor x19, x3, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 24)

# Testcase cp_rs1 (Test source rs1 = x4)
mv x5, x4 # switch signature pointer register to avoid conflict with test
li x4, 0x388351d3bfadc73d # initialize rs1
li x9, 0xb0c5604c1747770f # initialize rs2
xnor x16, x4, x9 # perform operation
RVTEST_SIGUPD(x5, x0, x16, 32)

# Testcase cp_rs1 (Test source rs1 = x5)
mv x6, x5 # switch signature pointer register to avoid conflict with test
li x5, 0x57ef9e946b84f15d # initialize rs1
li x15, 0xfa8446f1ba16df8b # initialize rs2
xnor x3, x5, x15 # perform operation
RVTEST_SIGUPD(x6, x0, x3, 40)

# Testcase cp_rs1 (Test source rs1 = x6)
mv x7, x6 # switch signature pointer register to avoid conflict with test
li x6, 0x70174b6ff0397234 # initialize rs1
li x22, 0xb44c42b6cc6c699a # initialize rs2
xnor x23, x6, x22 # perform operation
RVTEST_SIGUPD(x7, x0, x23, 48)

# Testcase cp_rs1 (Test source rs1 = x7)
mv x4, x7 # switch signature pointer register to avoid conflict with test
li x7, 0x5db66f5d5a4e2984 # initialize rs1
li x12, 0x063971aa126a8d5f # initialize rs2
xnor x6, x7, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x6, 56)

# Testcase cp_rs1 (Test source rs1 = x8)
li x8, 0x9b9ce8458a1ce232 # initialize rs1
li x11, 0xcda2a5baaf802c46 # initialize rs2
xnor x26, x8, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 64)

# Testcase cp_rs1 (Test source rs1 = x9)
li x9, 0xde9ea395fa70d5ea # initialize rs1
li x24, 0x80c3e1d20a50779b # initialize rs2
xnor x6, x9, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x6, 72)

# Testcase cp_rs1 (Test source rs1 = x10)
li x10, 0x7f9dbc16783759a7 # initialize rs1
li x30, 0x3abe4ada0204e0f7 # initialize rs2
xnor x29, x10, x30 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 80)

# Testcase cp_rs1 (Test source rs1 = x11)
li x11, 0xa7b7bedd677e3d3f # initialize rs1
li x25, 0x9af65411201b29ad # initialize rs2
xnor x30, x11, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 88)

# Testcase cp_rs1 (Test source rs1 = x12)
li x12, 0xbf60494f2eee8377 # initialize rs1
li x3, 0x865887e0fa2bcb92 # initialize rs2
xnor x29, x12, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 96)

# Testcase cp_rs1 (Test source rs1 = x13)
li x13, 0x7dc34c5efcc17018 # initialize rs1
li x29, 0x77bdbe8f345c24ea # initialize rs2
xnor x23, x13, x29 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 104)

# Testcase cp_rs1 (Test source rs1 = x14)
li x14, 0xfcd2693d80eebead # initialize rs1
li x17, 0xdc6e542b59241a60 # initialize rs2
xnor x28, x14, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x28, 112)

# Testcase cp_rs1 (Test source rs1 = x15)
li x15, 0x25ddfa35f1f16b8f # initialize rs1
li x3, 0xb870526f3fe5cbfa # initialize rs2
xnor x20, x15, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 120)

# Testcase cp_rs1 (Test source rs1 = x16)
li x16, 0x35276c62a49ee5a7 # initialize rs1
li x19, 0x379dfa302b48ae6b # initialize rs2
xnor x18, x16, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 128)

# Testcase cp_rs1 (Test source rs1 = x17)
li x17, 0xeb542194c37441fb # initialize rs1
li x1, 0xcddba2bf3792bc4d # initialize rs2
xnor x12, x17, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 136)

# Testcase cp_rs1 (Test source rs1 = x18)
li x18, 0xb26b95afa1ea49cc # initialize rs1
li x20, 0x00aad9690c860cfd # initialize rs2
xnor x13, x18, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 144)

# Testcase cp_rs1 (Test source rs1 = x19)
li x19, 0xe376b4681c14a3c9 # initialize rs1
li x25, 0xfd8b9f335d6903f3 # initialize rs2
xnor x15, x19, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 152)

# Testcase cp_rs1 (Test source rs1 = x20)
li x20, 0x3a4236954021bb0a # initialize rs1
li x29, 0xf713eeaa2344c4b4 # initialize rs2
xnor x24, x20, x29 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 160)

# Testcase cp_rs1 (Test source rs1 = x21)
li x21, 0xac577fdaca62327e # initialize rs1
li x27, 0x11c7c8eaae4be077 # initialize rs2
xnor x6, x21, x27 # perform operation
RVTEST_SIGUPD(x4, x0, x6, 168)

# Testcase cp_rs1 (Test source rs1 = x22)
li x22, 0x039757009c95e7ae # initialize rs1
li x7, 0xa2936e2627a2214d # initialize rs2
xnor x26, x22, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 176)

# Testcase cp_rs1 (Test source rs1 = x23)
li x23, 0x7357ebbd815d5834 # initialize rs1
li x10, 0x5ab62c4f443a0eeb # initialize rs2
xnor x5, x23, x10 # perform operation
RVTEST_SIGUPD(x4, x0, x5, 184)

# Testcase cp_rs1 (Test source rs1 = x24)
li x24, 0x8cac60fa9c9bd94c # initialize rs1
li x13, 0xaea6484fdafe8246 # initialize rs2
xnor x9, x24, x13 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 192)

# Testcase cp_rs1 (Test source rs1 = x25)
li x25, 0xacd7998b85bc539c # initialize rs1
li x14, 0x58d879989daefd5a # initialize rs2
xnor x8, x25, x14 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 200)

# Testcase cp_rs1 (Test source rs1 = x26)
li x26, 0x57427729f9e2c5de # initialize rs1
li x6, 0x2c195fe48275ba46 # initialize rs2
xnor x24, x26, x6 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 208)

# Testcase cp_rs1 (Test source rs1 = x27)
li x27, 0x5f439154c9fba8cf # initialize rs1
li x11, 0x25ad046e458e9dff # initialize rs2
xnor x3, x27, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 216)

# Testcase cp_rs1 (Test source rs1 = x28)
li x28, 0xba9da73dbf001fb3 # initialize rs1
li x10, 0x0920f264f55f8016 # initialize rs2
xnor x1, x28, x10 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 224)

# Testcase cp_rs1 (Test source rs1 = x29)
li x29, 0xbcf168515d409e9c # initialize rs1
li x21, 0x549aa1ba6f81499b # initialize rs2
xnor x6, x29, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x6, 232)

# Testcase cp_rs1 (Test source rs1 = x30)
li x30, 0x504924e2a38a4ea2 # initialize rs1
li x5, 0xc0d3f751016132a6 # initialize rs2
xnor x20, x30, x5 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 240)

# Testcase cp_rs1 (Test source rs1 = x31)
li x31, 0x2d1c5a55c0a657a2 # initialize rs1
li x14, 0x42e8153defabde05 # initialize rs2
xnor x24, x31, x14 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 248)

# Testcase cp_rs2 (Test source rs2 = x0)
li x10, 0x7eecdb16799e8247 # initialize rs1
li x0, 0x5805599fefe8be50 # initialize rs2
xnor x1, x10, x0 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 256)

# Testcase cp_rs2 (Test source rs2 = x1)
li x18, 0x429defba8d0f0516 # initialize rs1
li x1, 0xc26802f7e598ccfe # initialize rs2
xnor x8, x18, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 264)

# Testcase cp_rs2 (Test source rs2 = x2)
li x31, 0x551769ff223f26ec # initialize rs1
li x2, 0xe5fc0afbcfb39e4a # initialize rs2
xnor x29, x31, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 272)

# Testcase cp_rs2 (Test source rs2 = x3)
li x20, 0x9ba962a7f0fd4104 # initialize rs1
li x3, 0x42a6be3a83a899eb # initialize rs2
xnor x10, x20, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 280)

# Testcase cp_rs2 (Test source rs2 = x4)
mv x5, x4 # switch signature pointer register to avoid conflict with test
li x7, 0x09527ec35dabdb63 # initialize rs1
li x4, 0x91325eef48d1be5b # initialize rs2
xnor x12, x7, x4 # perform operation
RVTEST_SIGUPD(x5, x0, x12, 288)

# Testcase cp_rs2 (Test source rs2 = x5)
mv x6, x5 # switch signature pointer register to avoid conflict with test
li x31, 0xdfaf1b2382c0a6af # initialize rs1
li x5, 0x7a67e593f76cad80 # initialize rs2
xnor x16, x31, x5 # perform operation
RVTEST_SIGUPD(x6, x0, x16, 296)

# Testcase cp_rs2 (Test source rs2 = x6)
mv x7, x6 # switch signature pointer register to avoid conflict with test
li x23, 0xf497255fe8ce9b24 # initialize rs1
li x6, 0x946c26f47555bf2c # initialize rs2
xnor x26, x23, x6 # perform operation
RVTEST_SIGUPD(x7, x0, x26, 304)

# Testcase cp_rs2 (Test source rs2 = x7)
mv x4, x7 # switch signature pointer register to avoid conflict with test
li x27, 0x4ab2cb5c3ee7a57b # initialize rs1
li x7, 0x7af9d7b643e35110 # initialize rs2
xnor x20, x27, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 312)

# Testcase cp_rs2 (Test source rs2 = x8)
li x30, 0x29996c7fbe4c32d3 # initialize rs1
li x8, 0x8e37f41c04dc9dad # initialize rs2
xnor x22, x30, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 320)

# Testcase cp_rs2 (Test source rs2 = x9)
li x15, 0x869ad9da90b631e8 # initialize rs1
li x9, 0x71bf2fea8ee391b0 # initialize rs2
xnor x24, x15, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 328)

# Testcase cp_rs2 (Test source rs2 = x10)
li x27, 0xf7970f231d749bc9 # initialize rs1
li x10, 0x590d7278ec612d6c # initialize rs2
xnor x18, x27, x10 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 336)

# Testcase cp_rs2 (Test source rs2 = x11)
li x20, 0xe45f33a3c7c8a9f7 # initialize rs1
li x11, 0x964d48ce0b3331d3 # initialize rs2
xnor x7, x20, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 344)

# Testcase cp_rs2 (Test source rs2 = x12)
li x30, 0x5c1f628d2519eca9 # initialize rs1
li x12, 0xc01e3386f30b1e68 # initialize rs2
xnor x17, x30, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 352)

# Testcase cp_rs2 (Test source rs2 = x13)
li x16, 0x87cc1f23f16e060b # initialize rs1
li x13, 0xff31cf92108ac4d3 # initialize rs2
xnor x22, x16, x13 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 360)

# Testcase cp_rs2 (Test source rs2 = x14)
li x2, 0x8044cb83017d2453 # initialize rs1
li x14, 0x45a5b21cc74f9510 # initialize rs2
xnor x6, x2, x14 # perform operation
RVTEST_SIGUPD(x4, x0, x6, 368)

# Testcase cp_rs2 (Test source rs2 = x15)
li x27, 0x0a187865e9220dd5 # initialize rs1
li x15, 0x7312831da0d8f7d6 # initialize rs2
xnor x23, x27, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 376)

# Testcase cp_rs2 (Test source rs2 = x16)
li x21, 0x776edc58253c2501 # initialize rs1
li x16, 0x01317d36a82c44c8 # initialize rs2
xnor x6, x21, x16 # perform operation
RVTEST_SIGUPD(x4, x0, x6, 384)

# Testcase cp_rs2 (Test source rs2 = x17)
li x2, 0x558fb5eeaf6ca63f # initialize rs1
li x17, 0xff9cf049d5eccfd0 # initialize rs2
xnor x22, x2, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 392)

# Testcase cp_rs2 (Test source rs2 = x18)
li x10, 0xa9ece83accac6e8c # initialize rs1
li x18, 0x1c4ed382e73c6b5e # initialize rs2
xnor x17, x10, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 400)

# Testcase cp_rs2 (Test source rs2 = x19)
li x30, 0x78ec0bbfe8d60aa4 # initialize rs1
li x19, 0x6fe9463b6ad4440c # initialize rs2
xnor x1, x30, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 408)

# Testcase cp_rs2 (Test source rs2 = x20)
li x27, 0x5ad0259ed054ddc9 # initialize rs1
li x20, 0xb45f4000ba89d3a2 # initialize rs2
xnor x29, x27, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 416)

# Testcase cp_rs2 (Test source rs2 = x21)
li x11, 0xd497ea739a078be4 # initialize rs1
li x21, 0xd91527a48b487dcf # initialize rs2
xnor x19, x11, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 424)

# Testcase cp_rs2 (Test source rs2 = x22)
li x5, 0xe805e03f706cbf9e # initialize rs1
li x22, 0x31fb0dac05387281 # initialize rs2
xnor x27, x5, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 432)

# Testcase cp_rs2 (Test source rs2 = x23)
li x5, 0x27821109296bdbd7 # initialize rs1
li x23, 0x772b1757cd7694f7 # initialize rs2
xnor x31, x5, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 440)

# Testcase cp_rs2 (Test source rs2 = x24)
li x7, 0x7d9fde1a154cc78a # initialize rs1
li x24, 0x1ac9f790692e0c10 # initialize rs2
xnor x5, x7, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x5, 448)

# Testcase cp_rs2 (Test source rs2 = x25)
li x5, 0xd55e1d723287c535 # initialize rs1
li x25, 0x2804a09c62716947 # initialize rs2
xnor x6, x5, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x6, 456)

# Testcase cp_rs2 (Test source rs2 = x26)
li x14, 0x4082d817ff42a919 # initialize rs1
li x26, 0x083e4fa1d1b43290 # initialize rs2
xnor x3, x14, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 464)

# Testcase cp_rs2 (Test source rs2 = x27)
li x17, 0xfea4d64ff4239382 # initialize rs1
li x27, 0x9aa93f78ccbc643a # initialize rs2
xnor x26, x17, x27 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 472)

# Testcase cp_rs2 (Test source rs2 = x28)
li x13, 0x7effba30c5ab5c49 # initialize rs1
li x28, 0x92e729f7f9f40573 # initialize rs2
xnor x25, x13, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 480)

# Testcase cp_rs2 (Test source rs2 = x29)
li x23, 0x9c68c828177f1f8c # initialize rs1
li x29, 0x69d2b64da441807c # initialize rs2
xnor x2, x23, x29 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 488)

# Testcase cp_rs2 (Test source rs2 = x30)
li x27, 0x275d33c67f448a86 # initialize rs1
li x30, 0x8e08b9b743d06c2d # initialize rs2
xnor x29, x27, x30 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 496)

# Testcase cp_rs2 (Test source rs2 = x31)
li x20, 0xf9447cf7f878e7bd # initialize rs1
li x31, 0xc628e1bec73db83f # initialize rs2
xnor x6, x20, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x6, 504)

# Testcase cp_rd (Test destination rd = x0)
li x28, 0x5952a4cbafa9b23b # initialize rs1
li x23, 0x99c0d3c3a5817a17 # initialize rs2
xnor x0, x28, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x0, 512)

# Testcase cp_rd (Test destination rd = x1)
li x20, 0xc8bf57d9cb5d312b # initialize rs1
li x2, 0xc3b7dff91547226f # initialize rs2
xnor x1, x20, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 520)

# Testcase cp_rd (Test destination rd = x2)
li x3, 0xc57cc46e8ff1d3b9 # initialize rs1
li x1, 0xcb4c34b9b60521a4 # initialize rs2
xnor x2, x3, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 528)

# Testcase cp_rd (Test destination rd = x3)
li x7, 0x9a929fd1f808a811 # initialize rs1
li x16, 0x558a7f916a281de5 # initialize rs2
xnor x3, x7, x16 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 536)

# Testcase cp_rd (Test destination rd = x4)
mv x5, x4 # switch signature pointer register to avoid conflict with test
li x28, 0xa67fe76715b0871f # initialize rs1
li x3, 0xb644acb46ad39725 # initialize rs2
xnor x4, x28, x3 # perform operation
RVTEST_SIGUPD(x5, x0, x4, 544)

# Testcase cp_rd (Test destination rd = x5)
mv x6, x5 # switch signature pointer register to avoid conflict with test
li x28, 0xe68ef501b928901e # initialize rs1
li x13, 0x50ea7bcc81b9f08e # initialize rs2
xnor x5, x28, x13 # perform operation
RVTEST_SIGUPD(x6, x0, x5, 552)

# Testcase cp_rd (Test destination rd = x6)
mv x7, x6 # switch signature pointer register to avoid conflict with test
li x10, 0x1eb3abe71f9f6b39 # initialize rs1
li x11, 0x412b97f1cff939a7 # initialize rs2
xnor x6, x10, x11 # perform operation
RVTEST_SIGUPD(x7, x0, x6, 560)

# Testcase cp_rd (Test destination rd = x7)
mv x5, x7 # switch signature pointer register to avoid conflict with test
li x4, 0xcbf6c2834c9c72ee # initialize rs1
li x18, 0x215ec8203732320e # initialize rs2
xnor x7, x4, x18 # perform operation
RVTEST_SIGUPD(x5, x0, x7, 568)

# Testcase cp_rd (Test destination rd = x8)
li x16, 0x9a6e51bdbb7d7f1d # initialize rs1
li x25, 0xa8327f21fc7b8c24 # initialize rs2
xnor x8, x16, x25 # perform operation
RVTEST_SIGUPD(x5, x0, x8, 576)

# Testcase cp_rd (Test destination rd = x9)
li x3, 0x71161a9521cdc521 # initialize rs1
li x27, 0xdaf7f5fbd0117e5a # initialize rs2
xnor x9, x3, x27 # perform operation
RVTEST_SIGUPD(x5, x0, x9, 584)

# Testcase cp_rd (Test destination rd = x10)
li x1, 0x445b615940cd1117 # initialize rs1
li x25, 0xe4e66c7a4287882b # initialize rs2
xnor x10, x1, x25 # perform operation
RVTEST_SIGUPD(x5, x0, x10, 592)

# Testcase cp_rd (Test destination rd = x11)
li x23, 0xeaefd749390b68fe # initialize rs1
li x12, 0x082352c38dbe6c6c # initialize rs2
xnor x11, x23, x12 # perform operation
RVTEST_SIGUPD(x5, x0, x11, 600)

# Testcase cp_rd (Test destination rd = x12)
li x29, 0xb0ac3edc5b7c0af1 # initialize rs1
li x17, 0xa72528f9f5a2a6cc # initialize rs2
xnor x12, x29, x17 # perform operation
RVTEST_SIGUPD(x5, x0, x12, 608)

# Testcase cp_rd (Test destination rd = x13)
li x3, 0xa5afb16311c30476 # initialize rs1
li x30, 0x2892ae2ded18d687 # initialize rs2
xnor x13, x3, x30 # perform operation
RVTEST_SIGUPD(x5, x0, x13, 616)

# Testcase cp_rd (Test destination rd = x14)
li x28, 0x84410b7ef97b67db # initialize rs1
li x14, 0xaed0ec97fa0fceb3 # initialize rs2
xnor x14, x28, x14 # perform operation
RVTEST_SIGUPD(x5, x0, x14, 624)

# Testcase cp_rd (Test destination rd = x15)
li x17, 0x352bf06e13a7ee93 # initialize rs1
li x24, 0xf1e8da14277dd8cd # initialize rs2
xnor x15, x17, x24 # perform operation
RVTEST_SIGUPD(x5, x0, x15, 632)

# Testcase cp_rd (Test destination rd = x16)
li x6, 0x77620183eb4f7700 # initialize rs1
li x9, 0xaeff80a640f8bd07 # initialize rs2
xnor x16, x6, x9 # perform operation
RVTEST_SIGUPD(x5, x0, x16, 640)

# Testcase cp_rd (Test destination rd = x17)
li x15, 0x950a9a1fcd731542 # initialize rs1
li x13, 0xa1529bd18296ae88 # initialize rs2
xnor x17, x15, x13 # perform operation
RVTEST_SIGUPD(x5, x0, x17, 648)

# Testcase cp_rd (Test destination rd = x18)
li x13, 0x60556ca10b08e465 # initialize rs1
li x26, 0x4b53085bfa82c734 # initialize rs2
xnor x18, x13, x26 # perform operation
RVTEST_SIGUPD(x5, x0, x18, 656)

# Testcase cp_rd (Test destination rd = x19)
li x27, 0x93c71b31fdac64f5 # initialize rs1
li x10, 0x6faf5cad5ddd47f2 # initialize rs2
xnor x19, x27, x10 # perform operation
RVTEST_SIGUPD(x5, x0, x19, 664)

# Testcase cp_rd (Test destination rd = x20)
li x14, 0x7a5255604de18781 # initialize rs1
li x21, 0xb54fd22817db7e03 # initialize rs2
xnor x20, x14, x21 # perform operation
RVTEST_SIGUPD(x5, x0, x20, 672)

# Testcase cp_rd (Test destination rd = x21)
li x14, 0x8df61adedef69e34 # initialize rs1
li x1, 0xb7047ab19a3a4b2d # initialize rs2
xnor x21, x14, x1 # perform operation
RVTEST_SIGUPD(x5, x0, x21, 680)

# Testcase cp_rd (Test destination rd = x22)
li x24, 0x60c0160368c75ba4 # initialize rs1
li x13, 0x8ba69db646d90f5d # initialize rs2
xnor x22, x24, x13 # perform operation
RVTEST_SIGUPD(x5, x0, x22, 688)

# Testcase cp_rd (Test destination rd = x23)
li x18, 0xe3f05248217c92aa # initialize rs1
li x24, 0x0f482d09e7139527 # initialize rs2
xnor x23, x18, x24 # perform operation
RVTEST_SIGUPD(x5, x0, x23, 696)

# Testcase cp_rd (Test destination rd = x24)
li x6, 0x862bbc823d2f94bf # initialize rs1
li x21, 0x2e2a4ce0332c6789 # initialize rs2
xnor x24, x6, x21 # perform operation
RVTEST_SIGUPD(x5, x0, x24, 704)

# Testcase cp_rd (Test destination rd = x25)
li x14, 0x4826d3d29af404e9 # initialize rs1
li x10, 0xefc9c9193783f9d8 # initialize rs2
xnor x25, x14, x10 # perform operation
RVTEST_SIGUPD(x5, x0, x25, 712)

# Testcase cp_rd (Test destination rd = x26)
li x14, 0xa641e6f51b4f2eea # initialize rs1
li x29, 0x49810ab44eabc038 # initialize rs2
xnor x26, x14, x29 # perform operation
RVTEST_SIGUPD(x5, x0, x26, 720)

# Testcase cp_rd (Test destination rd = x27)
li x6, 0x21a4f39d7f9571c1 # initialize rs1
li x7, 0x5e8160bd85c08032 # initialize rs2
xnor x27, x6, x7 # perform operation
RVTEST_SIGUPD(x5, x0, x27, 728)

# Testcase cp_rd (Test destination rd = x28)
li x7, 0xcca30208bbf7f30d # initialize rs1
li x20, 0xffa71c3d2e1bd245 # initialize rs2
xnor x28, x7, x20 # perform operation
RVTEST_SIGUPD(x5, x0, x28, 736)

# Testcase cp_rd (Test destination rd = x29)
li x30, 0x256e179e52fa4bf7 # initialize rs1
li x21, 0xab4b5d48163878a3 # initialize rs2
xnor x29, x30, x21 # perform operation
RVTEST_SIGUPD(x5, x0, x29, 744)

# Testcase cp_rd (Test destination rd = x30)
li x1, 0x1a37861508656db9 # initialize rs1
li x4, 0x39ab3554eb87f148 # initialize rs2
xnor x30, x1, x4 # perform operation
RVTEST_SIGUPD(x5, x0, x30, 752)

# Testcase cp_rd (Test destination rd = x31)
li x27, 0x33f09cfc109ddda5 # initialize rs1
li x7, 0xaff44aa7c1d7f3f3 # initialize rs2
xnor x31, x27, x7 # perform operation
RVTEST_SIGUPD(x5, x0, x31, 760)

# Testcase cp_rs1_corners (Test source rs1 value = 0x0)
li x10, 0x0000000000000000 # initialize rs1
li x24, 0x0e3ee785c15f7320 # initialize rs2
xnor x17, x10, x24 # perform operation
RVTEST_SIGUPD(x5, x0, x17, 768)

# Testcase cp_rs1_corners (Test source rs1 value = 0x1)
li x16, 0x0000000000000001 # initialize rs1
li x12, 0x24babaad0fa24a24 # initialize rs2
xnor x20, x16, x12 # perform operation
RVTEST_SIGUPD(x5, x0, x20, 776)

# Testcase cp_rs1_corners (Test source rs1 value = 0x2)
li x6, 0x0000000000000002 # initialize rs1
li x31, 0x9b2853d41aff1985 # initialize rs2
xnor x15, x6, x31 # perform operation
RVTEST_SIGUPD(x5, x0, x15, 784)

# Testcase cp_rs1_corners (Test source rs1 value = 0x8000000000000000)
li x15, 0x8000000000000000 # initialize rs1
li x14, 0xb7ba988728f5c337 # initialize rs2
xnor x12, x15, x14 # perform operation
RVTEST_SIGUPD(x5, x0, x12, 792)

# Testcase cp_rs1_corners (Test source rs1 value = 0x8000000000000001)
li x2, 0x8000000000000001 # initialize rs1
li x27, 0x087490070628a5c9 # initialize rs2
xnor x16, x2, x27 # perform operation
RVTEST_SIGUPD(x5, x0, x16, 800)

# Testcase cp_rs1_corners (Test source rs1 value = 0x7fffffffffffffff)
li x27, 0x7fffffffffffffff # initialize rs1
li x21, 0xb9cce7ca927240b6 # initialize rs2
xnor x4, x27, x21 # perform operation
RVTEST_SIGUPD(x5, x0, x4, 808)

# Testcase cp_rs1_corners (Test source rs1 value = 0x7ffffffffffffffe)
li x6, 0x7ffffffffffffffe # initialize rs1
li x18, 0x79c85937906d4b88 # initialize rs2
xnor x31, x6, x18 # perform operation
RVTEST_SIGUPD(x5, x0, x31, 816)

# Testcase cp_rs1_corners (Test source rs1 value = 0xffffffffffffffff)
li x24, 0xffffffffffffffff # initialize rs1
li x14, 0x3fbbd8c5cdd9f332 # initialize rs2
xnor x6, x24, x14 # perform operation
RVTEST_SIGUPD(x5, x0, x6, 824)

# Testcase cp_rs1_corners (Test source rs1 value = 0xfffffffffffffffe)
li x21, 0xfffffffffffffffe # initialize rs1
li x25, 0x43861b2680862d41 # initialize rs2
xnor x18, x21, x25 # perform operation
RVTEST_SIGUPD(x5, x0, x18, 832)

# Testcase cp_rs1_corners (Test source rs1 value = 0x5bbc887763ae86f2)
li x20, 0x5bbc887763ae86f2 # initialize rs1
li x16, 0x1f3e216345d7534d # initialize rs2
xnor x10, x20, x16 # perform operation
RVTEST_SIGUPD(x5, x0, x10, 840)

# Testcase cp_rs1_corners (Test source rs1 value = 0xaaaaaaaaaaaaaaaa)
li x17, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x14, 0xb38a9ab450b60f11 # initialize rs2
xnor x24, x17, x14 # perform operation
RVTEST_SIGUPD(x5, x0, x24, 848)

# Testcase cp_rs1_corners (Test source rs1 value = 0x5555555555555555)
li x19, 0x5555555555555555 # initialize rs1
li x6, 0xf302aaa99159f04e # initialize rs2
xnor x12, x19, x6 # perform operation
RVTEST_SIGUPD(x5, x0, x12, 856)

# Testcase cp_rs1_corners (Test source rs1 value = 0xffffffff)
li x1, 0x00000000ffffffff # initialize rs1
li x12, 0x75a14f2718720124 # initialize rs2
xnor x23, x1, x12 # perform operation
RVTEST_SIGUPD(x5, x0, x23, 864)

# Testcase cp_rs1_corners (Test source rs1 value = 0xfffffffe)
li x19, 0x00000000fffffffe # initialize rs1
li x23, 0x0dd09b97cd41cc66 # initialize rs2
xnor x12, x19, x23 # perform operation
RVTEST_SIGUPD(x5, x0, x12, 872)

# Testcase cp_rs1_corners (Test source rs1 value = 0x100000000)
li x27, 0x0000000100000000 # initialize rs1
li x26, 0x660fa711cc6154a9 # initialize rs2
xnor x18, x27, x26 # perform operation
RVTEST_SIGUPD(x5, x0, x18, 880)

# Testcase cp_rs1_corners (Test source rs1 value = 0x100000001)
li x8, 0x0000000100000001 # initialize rs1
li x11, 0xc0f846c30047fc0f # initialize rs2
xnor x1, x8, x11 # perform operation
RVTEST_SIGUPD(x5, x0, x1, 888)

# Testcase cp_rs2_corners (Test source rs2 value = 0x0)
li x14, 0x8eafcf6a58b148ea # initialize rs1
li x4, 0x0000000000000000 # initialize rs2
xnor x13, x14, x4 # perform operation
RVTEST_SIGUPD(x5, x0, x13, 896)

# Testcase cp_rs2_corners (Test source rs2 value = 0x1)
li x24, 0x62954c1407f339e0 # initialize rs1
li x29, 0x0000000000000001 # initialize rs2
xnor x7, x24, x29 # perform operation
RVTEST_SIGUPD(x5, x0, x7, 904)

# Testcase cp_rs2_corners (Test source rs2 value = 0x2)
li x7, 0x02f718cf30e5f35c # initialize rs1
li x31, 0x0000000000000002 # initialize rs2
xnor x9, x7, x31 # perform operation
RVTEST_SIGUPD(x5, x0, x9, 912)

# Testcase cp_rs2_corners (Test source rs2 value = 0x8000000000000000)
li x22, 0x3500b4ccac95a79b # initialize rs1
li x12, 0x8000000000000000 # initialize rs2
xnor x25, x22, x12 # perform operation
RVTEST_SIGUPD(x5, x0, x25, 920)

# Testcase cp_rs2_corners (Test source rs2 value = 0x8000000000000001)
li x12, 0xcac0dda34ec28cca # initialize rs1
li x2, 0x8000000000000001 # initialize rs2
xnor x31, x12, x2 # perform operation
RVTEST_SIGUPD(x5, x0, x31, 928)

# Testcase cp_rs2_corners (Test source rs2 value = 0x7fffffffffffffff)
li x2, 0xd2687a046273166d # initialize rs1
li x3, 0x7fffffffffffffff # initialize rs2
xnor x13, x2, x3 # perform operation
RVTEST_SIGUPD(x5, x0, x13, 936)

# Testcase cp_rs2_corners (Test source rs2 value = 0x7ffffffffffffffe)
li x25, 0x15f435b93c1ac6c8 # initialize rs1
li x27, 0x7ffffffffffffffe # initialize rs2
xnor x15, x25, x27 # perform operation
RVTEST_SIGUPD(x5, x0, x15, 944)

# Testcase cp_rs2_corners (Test source rs2 value = 0xffffffffffffffff)
li x8, 0x4f87cd79f0948672 # initialize rs1
li x6, 0xffffffffffffffff # initialize rs2
xnor x30, x8, x6 # perform operation
RVTEST_SIGUPD(x5, x0, x30, 952)

# Testcase cp_rs2_corners (Test source rs2 value = 0xfffffffffffffffe)
li x13, 0xad3ae3016d4e8ab8 # initialize rs1
li x19, 0xfffffffffffffffe # initialize rs2
xnor x11, x13, x19 # perform operation
RVTEST_SIGUPD(x5, x0, x11, 960)

# Testcase cp_rs2_corners (Test source rs2 value = 0x5bbc887763ae86f2)
li x9, 0x2ea7d5940aa2dce6 # initialize rs1
li x15, 0x5bbc887763ae86f2 # initialize rs2
xnor x13, x9, x15 # perform operation
RVTEST_SIGUPD(x5, x0, x13, 968)

# Testcase cp_rs2_corners (Test source rs2 value = 0xaaaaaaaaaaaaaaaa)
li x26, 0x932b7188e3fa6bd2 # initialize rs1
li x15, 0xaaaaaaaaaaaaaaaa # initialize rs2
xnor x7, x26, x15 # perform operation
RVTEST_SIGUPD(x5, x0, x7, 976)

# Testcase cp_rs2_corners (Test source rs2 value = 0x5555555555555555)
li x1, 0x1a2a8ad931da667f # initialize rs1
li x4, 0x5555555555555555 # initialize rs2
xnor x18, x1, x4 # perform operation
RVTEST_SIGUPD(x5, x0, x18, 984)

# Testcase cp_rs2_corners (Test source rs2 value = 0xffffffff)
li x31, 0xc4ca672b0e7932e9 # initialize rs1
li x27, 0x00000000ffffffff # initialize rs2
xnor x29, x31, x27 # perform operation
RVTEST_SIGUPD(x5, x0, x29, 992)

# Testcase cp_rs2_corners (Test source rs2 value = 0xfffffffe)
li x2, 0x4db0a3bd8cc42ffd # initialize rs1
li x4, 0x00000000fffffffe # initialize rs2
xnor x24, x2, x4 # perform operation
RVTEST_SIGUPD(x5, x0, x24, 1000)

# Testcase cp_rs2_corners (Test source rs2 value = 0x100000000)
li x28, 0xd250baee879a4a5c # initialize rs1
li x14, 0x0000000100000000 # initialize rs2
xnor x31, x28, x14 # perform operation
RVTEST_SIGUPD(x5, x0, x31, 1008)

# Testcase cp_rs2_corners (Test source rs2 value = 0x100000001)
li x10, 0x587d27ed164b9130 # initialize rs1
li x11, 0x0000000100000001 # initialize rs2
xnor x9, x10, x11 # perform operation
RVTEST_SIGUPD(x5, x0, x9, 1016)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0x0)
li x3, 0x0000000000000000 # initialize rs1
li x6, 0x0000000000000000 # initialize rs2
xnor x15, x3, x6 # perform operation
RVTEST_SIGUPD(x5, x0, x15, 1024)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0x1)
li x11, 0x0000000000000000 # initialize rs1
li x1, 0x0000000000000001 # initialize rs2
xnor x20, x11, x1 # perform operation
RVTEST_SIGUPD(x5, x0, x20, 1032)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0x2)
li x28, 0x0000000000000000 # initialize rs1
li x12, 0x0000000000000002 # initialize rs2
xnor x7, x28, x12 # perform operation
RVTEST_SIGUPD(x5, x0, x7, 1040)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0x8000000000000000)
li x10, 0x0000000000000000 # initialize rs1
li x3, 0x8000000000000000 # initialize rs2
xnor x12, x10, x3 # perform operation
RVTEST_SIGUPD(x5, x0, x12, 1048)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0x8000000000000001)
li x11, 0x0000000000000000 # initialize rs1
li x22, 0x8000000000000001 # initialize rs2
xnor x27, x11, x22 # perform operation
RVTEST_SIGUPD(x5, x0, x27, 1056)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0x7fffffffffffffff)
li x24, 0x0000000000000000 # initialize rs1
li x2, 0x7fffffffffffffff # initialize rs2
xnor x29, x24, x2 # perform operation
RVTEST_SIGUPD(x5, x0, x29, 1064)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0x7ffffffffffffffe)
li x16, 0x0000000000000000 # initialize rs1
li x17, 0x7ffffffffffffffe # initialize rs2
xnor x15, x16, x17 # perform operation
RVTEST_SIGUPD(x5, x0, x15, 1072)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0xffffffffffffffff)
li x31, 0x0000000000000000 # initialize rs1
li x15, 0xffffffffffffffff # initialize rs2
xnor x14, x31, x15 # perform operation
RVTEST_SIGUPD(x5, x0, x14, 1080)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0xfffffffffffffffe)
li x26, 0x0000000000000000 # initialize rs1
li x4, 0xfffffffffffffffe # initialize rs2
xnor x16, x26, x4 # perform operation
RVTEST_SIGUPD(x5, x0, x16, 1088)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0x5bbc887763ae86f2)
li x22, 0x0000000000000000 # initialize rs1
li x13, 0x5bbc887763ae86f2 # initialize rs2
xnor x18, x22, x13 # perform operation
RVTEST_SIGUPD(x5, x0, x18, 1096)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0xaaaaaaaaaaaaaaaa)
li x8, 0x0000000000000000 # initialize rs1
li x22, 0xaaaaaaaaaaaaaaaa # initialize rs2
xnor x25, x8, x22 # perform operation
RVTEST_SIGUPD(x5, x0, x25, 1104)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0x5555555555555555)
li x28, 0x0000000000000000 # initialize rs1
li x1, 0x5555555555555555 # initialize rs2
xnor x12, x28, x1 # perform operation
RVTEST_SIGUPD(x5, x0, x12, 1112)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0xffffffff)
li x7, 0x0000000000000000 # initialize rs1
li x3, 0x00000000ffffffff # initialize rs2
xnor x10, x7, x3 # perform operation
RVTEST_SIGUPD(x5, x0, x10, 1120)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0xfffffffe)
li x3, 0x0000000000000000 # initialize rs1
li x29, 0x00000000fffffffe # initialize rs2
xnor x20, x3, x29 # perform operation
RVTEST_SIGUPD(x5, x0, x20, 1128)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0x100000000)
li x6, 0x0000000000000000 # initialize rs1
li x7, 0x0000000100000000 # initialize rs2
xnor x17, x6, x7 # perform operation
RVTEST_SIGUPD(x5, x0, x17, 1136)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0x100000001)
li x19, 0x0000000000000000 # initialize rs1
li x3, 0x0000000100000001 # initialize rs2
xnor x16, x19, x3 # perform operation
RVTEST_SIGUPD(x5, x0, x16, 1144)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0x0)
li x12, 0x0000000000000001 # initialize rs1
li x15, 0x0000000000000000 # initialize rs2
xnor x13, x12, x15 # perform operation
RVTEST_SIGUPD(x5, x0, x13, 1152)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0x1)
li x24, 0x0000000000000001 # initialize rs1
li x27, 0x0000000000000001 # initialize rs2
xnor x12, x24, x27 # perform operation
RVTEST_SIGUPD(x5, x0, x12, 1160)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0x2)
li x16, 0x0000000000000001 # initialize rs1
li x25, 0x0000000000000002 # initialize rs2
xnor x28, x16, x25 # perform operation
RVTEST_SIGUPD(x5, x0, x28, 1168)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0x8000000000000000)
li x8, 0x0000000000000001 # initialize rs1
li x24, 0x8000000000000000 # initialize rs2
xnor x7, x8, x24 # perform operation
RVTEST_SIGUPD(x5, x0, x7, 1176)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0x8000000000000001)
li x9, 0x0000000000000001 # initialize rs1
li x2, 0x8000000000000001 # initialize rs2
xnor x8, x9, x2 # perform operation
RVTEST_SIGUPD(x5, x0, x8, 1184)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0x7fffffffffffffff)
li x4, 0x0000000000000001 # initialize rs1
li x6, 0x7fffffffffffffff # initialize rs2
xnor x25, x4, x6 # perform operation
RVTEST_SIGUPD(x5, x0, x25, 1192)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0x7ffffffffffffffe)
li x23, 0x0000000000000001 # initialize rs1
li x15, 0x7ffffffffffffffe # initialize rs2
xnor x18, x23, x15 # perform operation
RVTEST_SIGUPD(x5, x0, x18, 1200)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0xffffffffffffffff)
li x20, 0x0000000000000001 # initialize rs1
li x28, 0xffffffffffffffff # initialize rs2
xnor x19, x20, x28 # perform operation
RVTEST_SIGUPD(x5, x0, x19, 1208)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0xfffffffffffffffe)
li x16, 0x0000000000000001 # initialize rs1
li x30, 0xfffffffffffffffe # initialize rs2
xnor x18, x16, x30 # perform operation
RVTEST_SIGUPD(x5, x0, x18, 1216)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0x5bbc887763ae86f2)
li x9, 0x0000000000000001 # initialize rs1
li x19, 0x5bbc887763ae86f2 # initialize rs2
xnor x16, x9, x19 # perform operation
RVTEST_SIGUPD(x5, x0, x16, 1224)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0xaaaaaaaaaaaaaaaa)
li x29, 0x0000000000000001 # initialize rs1
li x14, 0xaaaaaaaaaaaaaaaa # initialize rs2
xnor x3, x29, x14 # perform operation
RVTEST_SIGUPD(x5, x0, x3, 1232)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0x5555555555555555)
li x3, 0x0000000000000001 # initialize rs1
li x1, 0x5555555555555555 # initialize rs2
xnor x7, x3, x1 # perform operation
RVTEST_SIGUPD(x5, x0, x7, 1240)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0xffffffff)
li x15, 0x0000000000000001 # initialize rs1
li x6, 0x00000000ffffffff # initialize rs2
xnor x20, x15, x6 # perform operation
RVTEST_SIGUPD(x5, x0, x20, 1248)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0xfffffffe)
li x20, 0x0000000000000001 # initialize rs1
li x23, 0x00000000fffffffe # initialize rs2
xnor x31, x20, x23 # perform operation
RVTEST_SIGUPD(x5, x0, x31, 1256)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0x100000000)
li x3, 0x0000000000000001 # initialize rs1
li x24, 0x0000000100000000 # initialize rs2
xnor x15, x3, x24 # perform operation
RVTEST_SIGUPD(x5, x0, x15, 1264)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0x100000001)
li x29, 0x0000000000000001 # initialize rs1
li x21, 0x0000000100000001 # initialize rs2
xnor x20, x29, x21 # perform operation
RVTEST_SIGUPD(x5, x0, x20, 1272)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0x0)
li x29, 0x0000000000000002 # initialize rs1
li x28, 0x0000000000000000 # initialize rs2
xnor x12, x29, x28 # perform operation
RVTEST_SIGUPD(x5, x0, x12, 1280)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0x1)
li x18, 0x0000000000000002 # initialize rs1
li x20, 0x0000000000000001 # initialize rs2
xnor x24, x18, x20 # perform operation
RVTEST_SIGUPD(x5, x0, x24, 1288)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0x2)
li x3, 0x0000000000000002 # initialize rs1
li x13, 0x0000000000000002 # initialize rs2
xnor x6, x3, x13 # perform operation
RVTEST_SIGUPD(x5, x0, x6, 1296)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0x8000000000000000)
li x3, 0x0000000000000002 # initialize rs1
li x18, 0x8000000000000000 # initialize rs2
xnor x26, x3, x18 # perform operation
RVTEST_SIGUPD(x5, x0, x26, 1304)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0x8000000000000001)
li x13, 0x0000000000000002 # initialize rs1
li x8, 0x8000000000000001 # initialize rs2
xnor x21, x13, x8 # perform operation
RVTEST_SIGUPD(x5, x0, x21, 1312)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0x7fffffffffffffff)
li x11, 0x0000000000000002 # initialize rs1
li x14, 0x7fffffffffffffff # initialize rs2
xnor x27, x11, x14 # perform operation
RVTEST_SIGUPD(x5, x0, x27, 1320)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0x7ffffffffffffffe)
li x17, 0x0000000000000002 # initialize rs1
li x16, 0x7ffffffffffffffe # initialize rs2
xnor x7, x17, x16 # perform operation
RVTEST_SIGUPD(x5, x0, x7, 1328)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0xffffffffffffffff)
li x30, 0x0000000000000002 # initialize rs1
li x21, 0xffffffffffffffff # initialize rs2
xnor x26, x30, x21 # perform operation
RVTEST_SIGUPD(x5, x0, x26, 1336)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0xfffffffffffffffe)
li x29, 0x0000000000000002 # initialize rs1
li x25, 0xfffffffffffffffe # initialize rs2
xnor x10, x29, x25 # perform operation
RVTEST_SIGUPD(x5, x0, x10, 1344)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0x5bbc887763ae86f2)
li x1, 0x0000000000000002 # initialize rs1
li x23, 0x5bbc887763ae86f2 # initialize rs2
xnor x3, x1, x23 # perform operation
RVTEST_SIGUPD(x5, x0, x3, 1352)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0xaaaaaaaaaaaaaaaa)
li x13, 0x0000000000000002 # initialize rs1
li x28, 0xaaaaaaaaaaaaaaaa # initialize rs2
xnor x29, x13, x28 # perform operation
RVTEST_SIGUPD(x5, x0, x29, 1360)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0x5555555555555555)
li x29, 0x0000000000000002 # initialize rs1
li x13, 0x5555555555555555 # initialize rs2
xnor x15, x29, x13 # perform operation
RVTEST_SIGUPD(x5, x0, x15, 1368)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0xffffffff)
li x17, 0x0000000000000002 # initialize rs1
li x10, 0x00000000ffffffff # initialize rs2
xnor x21, x17, x10 # perform operation
RVTEST_SIGUPD(x5, x0, x21, 1376)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0xfffffffe)
li x19, 0x0000000000000002 # initialize rs1
li x17, 0x00000000fffffffe # initialize rs2
xnor x10, x19, x17 # perform operation
RVTEST_SIGUPD(x5, x0, x10, 1384)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0x100000000)
li x30, 0x0000000000000002 # initialize rs1
li x24, 0x0000000100000000 # initialize rs2
xnor x3, x30, x24 # perform operation
RVTEST_SIGUPD(x5, x0, x3, 1392)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0x100000001)
li x2, 0x0000000000000002 # initialize rs1
li x22, 0x0000000100000001 # initialize rs2
xnor x8, x2, x22 # perform operation
RVTEST_SIGUPD(x5, x0, x8, 1400)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0x0)
li x7, 0x8000000000000000 # initialize rs1
li x9, 0x0000000000000000 # initialize rs2
xnor x30, x7, x9 # perform operation
RVTEST_SIGUPD(x5, x0, x30, 1408)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0x1)
li x17, 0x8000000000000000 # initialize rs1
li x13, 0x0000000000000001 # initialize rs2
xnor x4, x17, x13 # perform operation
RVTEST_SIGUPD(x5, x0, x4, 1416)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0x2)
li x14, 0x8000000000000000 # initialize rs1
li x16, 0x0000000000000002 # initialize rs2
xnor x25, x14, x16 # perform operation
RVTEST_SIGUPD(x5, x0, x25, 1424)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0x8000000000000000)
li x23, 0x8000000000000000 # initialize rs1
li x7, 0x8000000000000000 # initialize rs2
xnor x26, x23, x7 # perform operation
RVTEST_SIGUPD(x5, x0, x26, 1432)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0x8000000000000001)
li x1, 0x8000000000000000 # initialize rs1
li x20, 0x8000000000000001 # initialize rs2
xnor x7, x1, x20 # perform operation
RVTEST_SIGUPD(x5, x0, x7, 1440)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0x7fffffffffffffff)
li x2, 0x8000000000000000 # initialize rs1
li x7, 0x7fffffffffffffff # initialize rs2
xnor x26, x2, x7 # perform operation
RVTEST_SIGUPD(x5, x0, x26, 1448)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0x7ffffffffffffffe)
li x30, 0x8000000000000000 # initialize rs1
li x20, 0x7ffffffffffffffe # initialize rs2
xnor x25, x30, x20 # perform operation
RVTEST_SIGUPD(x5, x0, x25, 1456)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0xffffffffffffffff)
li x21, 0x8000000000000000 # initialize rs1
li x2, 0xffffffffffffffff # initialize rs2
xnor x26, x21, x2 # perform operation
RVTEST_SIGUPD(x5, x0, x26, 1464)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0xfffffffffffffffe)
li x4, 0x8000000000000000 # initialize rs1
li x10, 0xfffffffffffffffe # initialize rs2
xnor x9, x4, x10 # perform operation
RVTEST_SIGUPD(x5, x0, x9, 1472)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0x5bbc887763ae86f2)
li x8, 0x8000000000000000 # initialize rs1
li x23, 0x5bbc887763ae86f2 # initialize rs2
xnor x21, x8, x23 # perform operation
RVTEST_SIGUPD(x5, x0, x21, 1480)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0xaaaaaaaaaaaaaaaa)
li x16, 0x8000000000000000 # initialize rs1
li x25, 0xaaaaaaaaaaaaaaaa # initialize rs2
xnor x8, x16, x25 # perform operation
RVTEST_SIGUPD(x5, x0, x8, 1488)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0x5555555555555555)
li x19, 0x8000000000000000 # initialize rs1
li x17, 0x5555555555555555 # initialize rs2
xnor x14, x19, x17 # perform operation
RVTEST_SIGUPD(x5, x0, x14, 1496)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0xffffffff)
li x13, 0x8000000000000000 # initialize rs1
li x29, 0x00000000ffffffff # initialize rs2
xnor x9, x13, x29 # perform operation
RVTEST_SIGUPD(x5, x0, x9, 1504)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0xfffffffe)
li x10, 0x8000000000000000 # initialize rs1
li x25, 0x00000000fffffffe # initialize rs2
xnor x19, x10, x25 # perform operation
RVTEST_SIGUPD(x5, x0, x19, 1512)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0x100000000)
li x27, 0x8000000000000000 # initialize rs1
li x24, 0x0000000100000000 # initialize rs2
xnor x21, x27, x24 # perform operation
RVTEST_SIGUPD(x5, x0, x21, 1520)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0x100000001)
li x12, 0x8000000000000000 # initialize rs1
li x2, 0x0000000100000001 # initialize rs2
xnor x6, x12, x2 # perform operation
RVTEST_SIGUPD(x5, x0, x6, 1528)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0x0)
li x24, 0x8000000000000001 # initialize rs1
li x7, 0x0000000000000000 # initialize rs2
xnor x28, x24, x7 # perform operation
RVTEST_SIGUPD(x5, x0, x28, 1536)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0x1)
li x6, 0x8000000000000001 # initialize rs1
li x16, 0x0000000000000001 # initialize rs2
xnor x7, x6, x16 # perform operation
RVTEST_SIGUPD(x5, x0, x7, 1544)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0x2)
li x6, 0x8000000000000001 # initialize rs1
li x9, 0x0000000000000002 # initialize rs2
xnor x20, x6, x9 # perform operation
RVTEST_SIGUPD(x5, x0, x20, 1552)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0x8000000000000000)
li x28, 0x8000000000000001 # initialize rs1
li x2, 0x8000000000000000 # initialize rs2
xnor x1, x28, x2 # perform operation
RVTEST_SIGUPD(x5, x0, x1, 1560)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0x8000000000000001)
li x18, 0x8000000000000001 # initialize rs1
li x20, 0x8000000000000001 # initialize rs2
xnor x22, x18, x20 # perform operation
RVTEST_SIGUPD(x5, x0, x22, 1568)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0x7fffffffffffffff)
li x3, 0x8000000000000001 # initialize rs1
li x11, 0x7fffffffffffffff # initialize rs2
xnor x4, x3, x11 # perform operation
RVTEST_SIGUPD(x5, x0, x4, 1576)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0x7ffffffffffffffe)
li x8, 0x8000000000000001 # initialize rs1
li x22, 0x7ffffffffffffffe # initialize rs2
xnor x17, x8, x22 # perform operation
RVTEST_SIGUPD(x5, x0, x17, 1584)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0xffffffffffffffff)
li x16, 0x8000000000000001 # initialize rs1
li x6, 0xffffffffffffffff # initialize rs2
xnor x15, x16, x6 # perform operation
RVTEST_SIGUPD(x5, x0, x15, 1592)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0xfffffffffffffffe)
li x2, 0x8000000000000001 # initialize rs1
li x13, 0xfffffffffffffffe # initialize rs2
xnor x18, x2, x13 # perform operation
RVTEST_SIGUPD(x5, x0, x18, 1600)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0x5bbc887763ae86f2)
li x21, 0x8000000000000001 # initialize rs1
li x18, 0x5bbc887763ae86f2 # initialize rs2
xnor x31, x21, x18 # perform operation
RVTEST_SIGUPD(x5, x0, x31, 1608)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0xaaaaaaaaaaaaaaaa)
li x20, 0x8000000000000001 # initialize rs1
li x15, 0xaaaaaaaaaaaaaaaa # initialize rs2
xnor x22, x20, x15 # perform operation
RVTEST_SIGUPD(x5, x0, x22, 1616)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0x5555555555555555)
li x1, 0x8000000000000001 # initialize rs1
li x27, 0x5555555555555555 # initialize rs2
xnor x14, x1, x27 # perform operation
RVTEST_SIGUPD(x5, x0, x14, 1624)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0xffffffff)
li x1, 0x8000000000000001 # initialize rs1
li x21, 0x00000000ffffffff # initialize rs2
xnor x18, x1, x21 # perform operation
RVTEST_SIGUPD(x5, x0, x18, 1632)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0xfffffffe)
li x15, 0x8000000000000001 # initialize rs1
li x13, 0x00000000fffffffe # initialize rs2
xnor x10, x15, x13 # perform operation
RVTEST_SIGUPD(x5, x0, x10, 1640)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0x100000000)
li x11, 0x8000000000000001 # initialize rs1
li x9, 0x0000000100000000 # initialize rs2
xnor x14, x11, x9 # perform operation
RVTEST_SIGUPD(x5, x0, x14, 1648)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0x100000001)
li x11, 0x8000000000000001 # initialize rs1
li x31, 0x0000000100000001 # initialize rs2
xnor x14, x11, x31 # perform operation
RVTEST_SIGUPD(x5, x0, x14, 1656)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0x0)
li x6, 0x7fffffffffffffff # initialize rs1
li x30, 0x0000000000000000 # initialize rs2
xnor x13, x6, x30 # perform operation
RVTEST_SIGUPD(x5, x0, x13, 1664)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0x1)
li x30, 0x7fffffffffffffff # initialize rs1
li x20, 0x0000000000000001 # initialize rs2
xnor x27, x30, x20 # perform operation
RVTEST_SIGUPD(x5, x0, x27, 1672)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0x2)
li x7, 0x7fffffffffffffff # initialize rs1
li x8, 0x0000000000000002 # initialize rs2
xnor x28, x7, x8 # perform operation
RVTEST_SIGUPD(x5, x0, x28, 1680)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0x8000000000000000)
li x11, 0x7fffffffffffffff # initialize rs1
li x13, 0x8000000000000000 # initialize rs2
xnor x23, x11, x13 # perform operation
RVTEST_SIGUPD(x5, x0, x23, 1688)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0x8000000000000001)
li x6, 0x7fffffffffffffff # initialize rs1
li x20, 0x8000000000000001 # initialize rs2
xnor x28, x6, x20 # perform operation
RVTEST_SIGUPD(x5, x0, x28, 1696)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0x7fffffffffffffff)
li x21, 0x7fffffffffffffff # initialize rs1
li x18, 0x7fffffffffffffff # initialize rs2
xnor x25, x21, x18 # perform operation
RVTEST_SIGUPD(x5, x0, x25, 1704)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0x7ffffffffffffffe)
li x17, 0x7fffffffffffffff # initialize rs1
li x26, 0x7ffffffffffffffe # initialize rs2
xnor x11, x17, x26 # perform operation
RVTEST_SIGUPD(x5, x0, x11, 1712)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0xffffffffffffffff)
li x17, 0x7fffffffffffffff # initialize rs1
li x6, 0xffffffffffffffff # initialize rs2
xnor x2, x17, x6 # perform operation
RVTEST_SIGUPD(x5, x0, x2, 1720)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0xfffffffffffffffe)
li x6, 0x7fffffffffffffff # initialize rs1
li x21, 0xfffffffffffffffe # initialize rs2
xnor x30, x6, x21 # perform operation
RVTEST_SIGUPD(x5, x0, x30, 1728)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0x5bbc887763ae86f2)
li x8, 0x7fffffffffffffff # initialize rs1
li x14, 0x5bbc887763ae86f2 # initialize rs2
xnor x21, x8, x14 # perform operation
RVTEST_SIGUPD(x5, x0, x21, 1736)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0xaaaaaaaaaaaaaaaa)
li x25, 0x7fffffffffffffff # initialize rs1
li x22, 0xaaaaaaaaaaaaaaaa # initialize rs2
xnor x15, x25, x22 # perform operation
RVTEST_SIGUPD(x5, x0, x15, 1744)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0x5555555555555555)
li x21, 0x7fffffffffffffff # initialize rs1
li x11, 0x5555555555555555 # initialize rs2
xnor x16, x21, x11 # perform operation
RVTEST_SIGUPD(x5, x0, x16, 1752)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0xffffffff)
li x20, 0x7fffffffffffffff # initialize rs1
li x19, 0x00000000ffffffff # initialize rs2
xnor x22, x20, x19 # perform operation
RVTEST_SIGUPD(x5, x0, x22, 1760)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0xfffffffe)
li x1, 0x7fffffffffffffff # initialize rs1
li x12, 0x00000000fffffffe # initialize rs2
xnor x10, x1, x12 # perform operation
RVTEST_SIGUPD(x5, x0, x10, 1768)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0x100000000)
li x27, 0x7fffffffffffffff # initialize rs1
li x8, 0x0000000100000000 # initialize rs2
xnor x13, x27, x8 # perform operation
RVTEST_SIGUPD(x5, x0, x13, 1776)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0x100000001)
li x10, 0x7fffffffffffffff # initialize rs1
li x21, 0x0000000100000001 # initialize rs2
xnor x27, x10, x21 # perform operation
RVTEST_SIGUPD(x5, x0, x27, 1784)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0x0)
li x3, 0x7ffffffffffffffe # initialize rs1
li x14, 0x0000000000000000 # initialize rs2
xnor x22, x3, x14 # perform operation
RVTEST_SIGUPD(x5, x0, x22, 1792)
addi x5, x5, 1800 # increment signature pointer and reset offset

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0x1)
li x15, 0x7ffffffffffffffe # initialize rs1
li x6, 0x0000000000000001 # initialize rs2
xnor x7, x15, x6 # perform operation
RVTEST_SIGUPD(x5, x0, x7, 0)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0x2)
li x30, 0x7ffffffffffffffe # initialize rs1
li x1, 0x0000000000000002 # initialize rs2
xnor x6, x30, x1 # perform operation
RVTEST_SIGUPD(x5, x0, x6, 8)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0x8000000000000000)
li x21, 0x7ffffffffffffffe # initialize rs1
li x15, 0x8000000000000000 # initialize rs2
xnor x14, x21, x15 # perform operation
RVTEST_SIGUPD(x5, x0, x14, 16)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0x8000000000000001)
li x31, 0x7ffffffffffffffe # initialize rs1
li x4, 0x8000000000000001 # initialize rs2
xnor x30, x31, x4 # perform operation
RVTEST_SIGUPD(x5, x0, x30, 24)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0x7fffffffffffffff)
li x19, 0x7ffffffffffffffe # initialize rs1
li x26, 0x7fffffffffffffff # initialize rs2
xnor x4, x19, x26 # perform operation
RVTEST_SIGUPD(x5, x0, x4, 32)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0x7ffffffffffffffe)
li x22, 0x7ffffffffffffffe # initialize rs1
li x10, 0x7ffffffffffffffe # initialize rs2
xnor x8, x22, x10 # perform operation
RVTEST_SIGUPD(x5, x0, x8, 40)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0xffffffffffffffff)
li x12, 0x7ffffffffffffffe # initialize rs1
li x25, 0xffffffffffffffff # initialize rs2
xnor x28, x12, x25 # perform operation
RVTEST_SIGUPD(x5, x0, x28, 48)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0xfffffffffffffffe)
li x29, 0x7ffffffffffffffe # initialize rs1
li x31, 0xfffffffffffffffe # initialize rs2
xnor x23, x29, x31 # perform operation
RVTEST_SIGUPD(x5, x0, x23, 56)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0x5bbc887763ae86f2)
li x7, 0x7ffffffffffffffe # initialize rs1
li x28, 0x5bbc887763ae86f2 # initialize rs2
xnor x29, x7, x28 # perform operation
RVTEST_SIGUPD(x5, x0, x29, 64)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0xaaaaaaaaaaaaaaaa)
li x25, 0x7ffffffffffffffe # initialize rs1
li x18, 0xaaaaaaaaaaaaaaaa # initialize rs2
xnor x12, x25, x18 # perform operation
RVTEST_SIGUPD(x5, x0, x12, 72)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0x5555555555555555)
li x3, 0x7ffffffffffffffe # initialize rs1
li x20, 0x5555555555555555 # initialize rs2
xnor x17, x3, x20 # perform operation
RVTEST_SIGUPD(x5, x0, x17, 80)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0xffffffff)
li x12, 0x7ffffffffffffffe # initialize rs1
li x10, 0x00000000ffffffff # initialize rs2
xnor x31, x12, x10 # perform operation
RVTEST_SIGUPD(x5, x0, x31, 88)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0xfffffffe)
li x7, 0x7ffffffffffffffe # initialize rs1
li x15, 0x00000000fffffffe # initialize rs2
xnor x26, x7, x15 # perform operation
RVTEST_SIGUPD(x5, x0, x26, 96)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0x100000000)
li x15, 0x7ffffffffffffffe # initialize rs1
li x13, 0x0000000100000000 # initialize rs2
xnor x4, x15, x13 # perform operation
RVTEST_SIGUPD(x5, x0, x4, 104)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0x100000001)
li x28, 0x7ffffffffffffffe # initialize rs1
li x27, 0x0000000100000001 # initialize rs2
xnor x31, x28, x27 # perform operation
RVTEST_SIGUPD(x5, x0, x31, 112)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0x0)
li x19, 0xffffffffffffffff # initialize rs1
li x31, 0x0000000000000000 # initialize rs2
xnor x17, x19, x31 # perform operation
RVTEST_SIGUPD(x5, x0, x17, 120)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0x1)
li x28, 0xffffffffffffffff # initialize rs1
li x9, 0x0000000000000001 # initialize rs2
xnor x25, x28, x9 # perform operation
RVTEST_SIGUPD(x5, x0, x25, 128)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0x2)
li x6, 0xffffffffffffffff # initialize rs1
li x16, 0x0000000000000002 # initialize rs2
xnor x21, x6, x16 # perform operation
RVTEST_SIGUPD(x5, x0, x21, 136)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0x8000000000000000)
li x2, 0xffffffffffffffff # initialize rs1
li x10, 0x8000000000000000 # initialize rs2
xnor x16, x2, x10 # perform operation
RVTEST_SIGUPD(x5, x0, x16, 144)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0x8000000000000001)
li x29, 0xffffffffffffffff # initialize rs1
li x8, 0x8000000000000001 # initialize rs2
xnor x6, x29, x8 # perform operation
RVTEST_SIGUPD(x5, x0, x6, 152)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0x7fffffffffffffff)
li x26, 0xffffffffffffffff # initialize rs1
li x3, 0x7fffffffffffffff # initialize rs2
xnor x8, x26, x3 # perform operation
RVTEST_SIGUPD(x5, x0, x8, 160)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0x7ffffffffffffffe)
li x31, 0xffffffffffffffff # initialize rs1
li x15, 0x7ffffffffffffffe # initialize rs2
xnor x3, x31, x15 # perform operation
RVTEST_SIGUPD(x5, x0, x3, 168)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0xffffffffffffffff)
li x15, 0xffffffffffffffff # initialize rs1
li x8, 0xffffffffffffffff # initialize rs2
xnor x19, x15, x8 # perform operation
RVTEST_SIGUPD(x5, x0, x19, 176)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0xfffffffffffffffe)
li x4, 0xffffffffffffffff # initialize rs1
li x8, 0xfffffffffffffffe # initialize rs2
xnor x15, x4, x8 # perform operation
RVTEST_SIGUPD(x5, x0, x15, 184)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0x5bbc887763ae86f2)
li x26, 0xffffffffffffffff # initialize rs1
li x10, 0x5bbc887763ae86f2 # initialize rs2
xnor x23, x26, x10 # perform operation
RVTEST_SIGUPD(x5, x0, x23, 192)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0xaaaaaaaaaaaaaaaa)
li x18, 0xffffffffffffffff # initialize rs1
li x11, 0xaaaaaaaaaaaaaaaa # initialize rs2
xnor x29, x18, x11 # perform operation
RVTEST_SIGUPD(x5, x0, x29, 200)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0x5555555555555555)
li x24, 0xffffffffffffffff # initialize rs1
li x12, 0x5555555555555555 # initialize rs2
xnor x13, x24, x12 # perform operation
RVTEST_SIGUPD(x5, x0, x13, 208)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0xffffffff)
li x14, 0xffffffffffffffff # initialize rs1
li x21, 0x00000000ffffffff # initialize rs2
xnor x6, x14, x21 # perform operation
RVTEST_SIGUPD(x5, x0, x6, 216)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0xfffffffe)
li x10, 0xffffffffffffffff # initialize rs1
li x4, 0x00000000fffffffe # initialize rs2
xnor x18, x10, x4 # perform operation
RVTEST_SIGUPD(x5, x0, x18, 224)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0x100000000)
li x13, 0xffffffffffffffff # initialize rs1
li x27, 0x0000000100000000 # initialize rs2
xnor x10, x13, x27 # perform operation
RVTEST_SIGUPD(x5, x0, x10, 232)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0x100000001)
li x27, 0xffffffffffffffff # initialize rs1
li x8, 0x0000000100000001 # initialize rs2
xnor x10, x27, x8 # perform operation
RVTEST_SIGUPD(x5, x0, x10, 240)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0x0)
li x9, 0xfffffffffffffffe # initialize rs1
li x29, 0x0000000000000000 # initialize rs2
xnor x28, x9, x29 # perform operation
RVTEST_SIGUPD(x5, x0, x28, 248)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0x1)
li x20, 0xfffffffffffffffe # initialize rs1
li x27, 0x0000000000000001 # initialize rs2
xnor x17, x20, x27 # perform operation
RVTEST_SIGUPD(x5, x0, x17, 256)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0x2)
li x27, 0xfffffffffffffffe # initialize rs1
li x31, 0x0000000000000002 # initialize rs2
xnor x9, x27, x31 # perform operation
RVTEST_SIGUPD(x5, x0, x9, 264)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0x8000000000000000)
li x7, 0xfffffffffffffffe # initialize rs1
li x31, 0x8000000000000000 # initialize rs2
xnor x21, x7, x31 # perform operation
RVTEST_SIGUPD(x5, x0, x21, 272)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0x8000000000000001)
li x3, 0xfffffffffffffffe # initialize rs1
li x27, 0x8000000000000001 # initialize rs2
xnor x25, x3, x27 # perform operation
RVTEST_SIGUPD(x5, x0, x25, 280)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0x7fffffffffffffff)
li x28, 0xfffffffffffffffe # initialize rs1
li x20, 0x7fffffffffffffff # initialize rs2
xnor x15, x28, x20 # perform operation
RVTEST_SIGUPD(x5, x0, x15, 288)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0x7ffffffffffffffe)
li x28, 0xfffffffffffffffe # initialize rs1
li x11, 0x7ffffffffffffffe # initialize rs2
xnor x31, x28, x11 # perform operation
RVTEST_SIGUPD(x5, x0, x31, 296)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0xffffffffffffffff)
li x15, 0xfffffffffffffffe # initialize rs1
li x18, 0xffffffffffffffff # initialize rs2
xnor x10, x15, x18 # perform operation
RVTEST_SIGUPD(x5, x0, x10, 304)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0xfffffffffffffffe)
li x27, 0xfffffffffffffffe # initialize rs1
li x24, 0xfffffffffffffffe # initialize rs2
xnor x16, x27, x24 # perform operation
RVTEST_SIGUPD(x5, x0, x16, 312)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0x5bbc887763ae86f2)
li x30, 0xfffffffffffffffe # initialize rs1
li x13, 0x5bbc887763ae86f2 # initialize rs2
xnor x15, x30, x13 # perform operation
RVTEST_SIGUPD(x5, x0, x15, 320)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0xaaaaaaaaaaaaaaaa)
li x19, 0xfffffffffffffffe # initialize rs1
li x7, 0xaaaaaaaaaaaaaaaa # initialize rs2
xnor x18, x19, x7 # perform operation
RVTEST_SIGUPD(x5, x0, x18, 328)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0x5555555555555555)
li x30, 0xfffffffffffffffe # initialize rs1
li x1, 0x5555555555555555 # initialize rs2
xnor x8, x30, x1 # perform operation
RVTEST_SIGUPD(x5, x0, x8, 336)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0xffffffff)
li x12, 0xfffffffffffffffe # initialize rs1
li x21, 0x00000000ffffffff # initialize rs2
xnor x11, x12, x21 # perform operation
RVTEST_SIGUPD(x5, x0, x11, 344)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0xfffffffe)
li x13, 0xfffffffffffffffe # initialize rs1
li x11, 0x00000000fffffffe # initialize rs2
xnor x19, x13, x11 # perform operation
RVTEST_SIGUPD(x5, x0, x19, 352)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0x100000000)
li x31, 0xfffffffffffffffe # initialize rs1
li x20, 0x0000000100000000 # initialize rs2
xnor x6, x31, x20 # perform operation
RVTEST_SIGUPD(x5, x0, x6, 360)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0x100000001)
li x4, 0xfffffffffffffffe # initialize rs1
li x21, 0x0000000100000001 # initialize rs2
xnor x27, x4, x21 # perform operation
RVTEST_SIGUPD(x5, x0, x27, 368)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0x0)
li x26, 0x5bbc887763ae86f2 # initialize rs1
li x9, 0x0000000000000000 # initialize rs2
xnor x7, x26, x9 # perform operation
RVTEST_SIGUPD(x5, x0, x7, 376)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0x1)
li x21, 0x5bbc887763ae86f2 # initialize rs1
li x20, 0x0000000000000001 # initialize rs2
xnor x25, x21, x20 # perform operation
RVTEST_SIGUPD(x5, x0, x25, 384)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0x2)
li x28, 0x5bbc887763ae86f2 # initialize rs1
li x30, 0x0000000000000002 # initialize rs2
xnor x21, x28, x30 # perform operation
RVTEST_SIGUPD(x5, x0, x21, 392)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0x8000000000000000)
li x15, 0x5bbc887763ae86f2 # initialize rs1
li x28, 0x8000000000000000 # initialize rs2
xnor x19, x15, x28 # perform operation
RVTEST_SIGUPD(x5, x0, x19, 400)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0x8000000000000001)
li x4, 0x5bbc887763ae86f2 # initialize rs1
li x14, 0x8000000000000001 # initialize rs2
xnor x10, x4, x14 # perform operation
RVTEST_SIGUPD(x5, x0, x10, 408)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0x7fffffffffffffff)
li x27, 0x5bbc887763ae86f2 # initialize rs1
li x2, 0x7fffffffffffffff # initialize rs2
xnor x24, x27, x2 # perform operation
RVTEST_SIGUPD(x5, x0, x24, 416)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0x7ffffffffffffffe)
li x17, 0x5bbc887763ae86f2 # initialize rs1
li x6, 0x7ffffffffffffffe # initialize rs2
xnor x19, x17, x6 # perform operation
RVTEST_SIGUPD(x5, x0, x19, 424)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0xffffffffffffffff)
li x31, 0x5bbc887763ae86f2 # initialize rs1
li x24, 0xffffffffffffffff # initialize rs2
xnor x28, x31, x24 # perform operation
RVTEST_SIGUPD(x5, x0, x28, 432)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0xfffffffffffffffe)
li x13, 0x5bbc887763ae86f2 # initialize rs1
li x1, 0xfffffffffffffffe # initialize rs2
xnor x30, x13, x1 # perform operation
RVTEST_SIGUPD(x5, x0, x30, 440)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0x5bbc887763ae86f2)
li x16, 0x5bbc887763ae86f2 # initialize rs1
li x7, 0x5bbc887763ae86f2 # initialize rs2
xnor x20, x16, x7 # perform operation
RVTEST_SIGUPD(x5, x0, x20, 448)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0xaaaaaaaaaaaaaaaa)
li x21, 0x5bbc887763ae86f2 # initialize rs1
li x12, 0xaaaaaaaaaaaaaaaa # initialize rs2
xnor x23, x21, x12 # perform operation
RVTEST_SIGUPD(x5, x0, x23, 456)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0x5555555555555555)
li x20, 0x5bbc887763ae86f2 # initialize rs1
li x2, 0x5555555555555555 # initialize rs2
xnor x13, x20, x2 # perform operation
RVTEST_SIGUPD(x5, x0, x13, 464)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0xffffffff)
li x12, 0x5bbc887763ae86f2 # initialize rs1
li x26, 0x00000000ffffffff # initialize rs2
xnor x22, x12, x26 # perform operation
RVTEST_SIGUPD(x5, x0, x22, 472)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0xfffffffe)
li x7, 0x5bbc887763ae86f2 # initialize rs1
li x29, 0x00000000fffffffe # initialize rs2
xnor x23, x7, x29 # perform operation
RVTEST_SIGUPD(x5, x0, x23, 480)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0x100000000)
li x2, 0x5bbc887763ae86f2 # initialize rs1
li x14, 0x0000000100000000 # initialize rs2
xnor x28, x2, x14 # perform operation
RVTEST_SIGUPD(x5, x0, x28, 488)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0x100000001)
li x9, 0x5bbc887763ae86f2 # initialize rs1
li x31, 0x0000000100000001 # initialize rs2
xnor x7, x9, x31 # perform operation
RVTEST_SIGUPD(x5, x0, x7, 496)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0x0)
li x3, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x23, 0x0000000000000000 # initialize rs2
xnor x31, x3, x23 # perform operation
RVTEST_SIGUPD(x5, x0, x31, 504)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0x1)
li x25, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x31, 0x0000000000000001 # initialize rs2
xnor x27, x25, x31 # perform operation
RVTEST_SIGUPD(x5, x0, x27, 512)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0x2)
li x17, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x20, 0x0000000000000002 # initialize rs2
xnor x1, x17, x20 # perform operation
RVTEST_SIGUPD(x5, x0, x1, 520)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0x8000000000000000)
li x3, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x27, 0x8000000000000000 # initialize rs2
xnor x30, x3, x27 # perform operation
RVTEST_SIGUPD(x5, x0, x30, 528)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0x8000000000000001)
li x20, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x31, 0x8000000000000001 # initialize rs2
xnor x27, x20, x31 # perform operation
RVTEST_SIGUPD(x5, x0, x27, 536)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0x7fffffffffffffff)
li x9, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x19, 0x7fffffffffffffff # initialize rs2
xnor x2, x9, x19 # perform operation
RVTEST_SIGUPD(x5, x0, x2, 544)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0x7ffffffffffffffe)
li x14, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x17, 0x7ffffffffffffffe # initialize rs2
xnor x26, x14, x17 # perform operation
RVTEST_SIGUPD(x5, x0, x26, 552)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0xffffffffffffffff)
li x4, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x10, 0xffffffffffffffff # initialize rs2
xnor x18, x4, x10 # perform operation
RVTEST_SIGUPD(x5, x0, x18, 560)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0xfffffffffffffffe)
li x3, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x23, 0xfffffffffffffffe # initialize rs2
xnor x29, x3, x23 # perform operation
RVTEST_SIGUPD(x5, x0, x29, 568)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0x5bbc887763ae86f2)
li x6, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x19, 0x5bbc887763ae86f2 # initialize rs2
xnor x27, x6, x19 # perform operation
RVTEST_SIGUPD(x5, x0, x27, 576)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0xaaaaaaaaaaaaaaaa)
li x17, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x8, 0xaaaaaaaaaaaaaaaa # initialize rs2
xnor x22, x17, x8 # perform operation
RVTEST_SIGUPD(x5, x0, x22, 584)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0x5555555555555555)
li x31, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x11, 0x5555555555555555 # initialize rs2
xnor x18, x31, x11 # perform operation
RVTEST_SIGUPD(x5, x0, x18, 592)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0xffffffff)
li x6, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x25, 0x00000000ffffffff # initialize rs2
xnor x1, x6, x25 # perform operation
RVTEST_SIGUPD(x5, x0, x1, 600)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0xfffffffe)
li x11, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x7, 0x00000000fffffffe # initialize rs2
xnor x25, x11, x7 # perform operation
RVTEST_SIGUPD(x5, x0, x25, 608)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0x100000000)
li x1, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x11, 0x0000000100000000 # initialize rs2
xnor x26, x1, x11 # perform operation
RVTEST_SIGUPD(x5, x0, x26, 616)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0x100000001)
li x3, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x1, 0x0000000100000001 # initialize rs2
xnor x8, x3, x1 # perform operation
RVTEST_SIGUPD(x5, x0, x8, 624)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0x0)
li x1, 0x5555555555555555 # initialize rs1
li x15, 0x0000000000000000 # initialize rs2
xnor x31, x1, x15 # perform operation
RVTEST_SIGUPD(x5, x0, x31, 632)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0x1)
li x20, 0x5555555555555555 # initialize rs1
li x13, 0x0000000000000001 # initialize rs2
xnor x26, x20, x13 # perform operation
RVTEST_SIGUPD(x5, x0, x26, 640)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0x2)
li x2, 0x5555555555555555 # initialize rs1
li x21, 0x0000000000000002 # initialize rs2
xnor x22, x2, x21 # perform operation
RVTEST_SIGUPD(x5, x0, x22, 648)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0x8000000000000000)
li x20, 0x5555555555555555 # initialize rs1
li x3, 0x8000000000000000 # initialize rs2
xnor x31, x20, x3 # perform operation
RVTEST_SIGUPD(x5, x0, x31, 656)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0x8000000000000001)
li x16, 0x5555555555555555 # initialize rs1
li x12, 0x8000000000000001 # initialize rs2
xnor x22, x16, x12 # perform operation
RVTEST_SIGUPD(x5, x0, x22, 664)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0x7fffffffffffffff)
li x8, 0x5555555555555555 # initialize rs1
li x6, 0x7fffffffffffffff # initialize rs2
xnor x13, x8, x6 # perform operation
RVTEST_SIGUPD(x5, x0, x13, 672)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0x7ffffffffffffffe)
li x6, 0x5555555555555555 # initialize rs1
li x25, 0x7ffffffffffffffe # initialize rs2
xnor x21, x6, x25 # perform operation
RVTEST_SIGUPD(x5, x0, x21, 680)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0xffffffffffffffff)
li x12, 0x5555555555555555 # initialize rs1
li x26, 0xffffffffffffffff # initialize rs2
xnor x31, x12, x26 # perform operation
RVTEST_SIGUPD(x5, x0, x31, 688)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0xfffffffffffffffe)
li x30, 0x5555555555555555 # initialize rs1
li x29, 0xfffffffffffffffe # initialize rs2
xnor x16, x30, x29 # perform operation
RVTEST_SIGUPD(x5, x0, x16, 696)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0x5bbc887763ae86f2)
li x17, 0x5555555555555555 # initialize rs1
li x6, 0x5bbc887763ae86f2 # initialize rs2
xnor x8, x17, x6 # perform operation
RVTEST_SIGUPD(x5, x0, x8, 704)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0xaaaaaaaaaaaaaaaa)
li x22, 0x5555555555555555 # initialize rs1
li x18, 0xaaaaaaaaaaaaaaaa # initialize rs2
xnor x29, x22, x18 # perform operation
RVTEST_SIGUPD(x5, x0, x29, 712)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0x5555555555555555)
li x31, 0x5555555555555555 # initialize rs1
li x27, 0x5555555555555555 # initialize rs2
xnor x22, x31, x27 # perform operation
RVTEST_SIGUPD(x5, x0, x22, 720)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0xffffffff)
li x20, 0x5555555555555555 # initialize rs1
li x28, 0x00000000ffffffff # initialize rs2
xnor x27, x20, x28 # perform operation
RVTEST_SIGUPD(x5, x0, x27, 728)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0xfffffffe)
li x10, 0x5555555555555555 # initialize rs1
li x11, 0x00000000fffffffe # initialize rs2
xnor x4, x10, x11 # perform operation
RVTEST_SIGUPD(x5, x0, x4, 736)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0x100000000)
li x15, 0x5555555555555555 # initialize rs1
li x24, 0x0000000100000000 # initialize rs2
xnor x17, x15, x24 # perform operation
RVTEST_SIGUPD(x5, x0, x17, 744)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0x100000001)
li x3, 0x5555555555555555 # initialize rs1
li x13, 0x0000000100000001 # initialize rs2
xnor x14, x3, x13 # perform operation
RVTEST_SIGUPD(x5, x0, x14, 752)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0x0)
li x2, 0x00000000ffffffff # initialize rs1
li x29, 0x0000000000000000 # initialize rs2
xnor x30, x2, x29 # perform operation
RVTEST_SIGUPD(x5, x0, x30, 760)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0x1)
li x31, 0x00000000ffffffff # initialize rs1
li x15, 0x0000000000000001 # initialize rs2
xnor x26, x31, x15 # perform operation
RVTEST_SIGUPD(x5, x0, x26, 768)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0x2)
li x9, 0x00000000ffffffff # initialize rs1
li x29, 0x0000000000000002 # initialize rs2
xnor x15, x9, x29 # perform operation
RVTEST_SIGUPD(x5, x0, x15, 776)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0x8000000000000000)
li x12, 0x00000000ffffffff # initialize rs1
li x19, 0x8000000000000000 # initialize rs2
xnor x23, x12, x19 # perform operation
RVTEST_SIGUPD(x5, x0, x23, 784)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0x8000000000000001)
li x16, 0x00000000ffffffff # initialize rs1
li x20, 0x8000000000000001 # initialize rs2
xnor x2, x16, x20 # perform operation
RVTEST_SIGUPD(x5, x0, x2, 792)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0x7fffffffffffffff)
li x31, 0x00000000ffffffff # initialize rs1
li x28, 0x7fffffffffffffff # initialize rs2
xnor x16, x31, x28 # perform operation
RVTEST_SIGUPD(x5, x0, x16, 800)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0x7ffffffffffffffe)
li x11, 0x00000000ffffffff # initialize rs1
li x12, 0x7ffffffffffffffe # initialize rs2
xnor x19, x11, x12 # perform operation
RVTEST_SIGUPD(x5, x0, x19, 808)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0xffffffffffffffff)
li x18, 0x00000000ffffffff # initialize rs1
li x31, 0xffffffffffffffff # initialize rs2
xnor x6, x18, x31 # perform operation
RVTEST_SIGUPD(x5, x0, x6, 816)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0xfffffffffffffffe)
li x22, 0x00000000ffffffff # initialize rs1
li x18, 0xfffffffffffffffe # initialize rs2
xnor x9, x22, x18 # perform operation
RVTEST_SIGUPD(x5, x0, x9, 824)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0x5bbc887763ae86f2)
li x29, 0x00000000ffffffff # initialize rs1
li x7, 0x5bbc887763ae86f2 # initialize rs2
xnor x19, x29, x7 # perform operation
RVTEST_SIGUPD(x5, x0, x19, 832)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0xaaaaaaaaaaaaaaaa)
li x8, 0x00000000ffffffff # initialize rs1
li x17, 0xaaaaaaaaaaaaaaaa # initialize rs2
xnor x2, x8, x17 # perform operation
RVTEST_SIGUPD(x5, x0, x2, 840)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0x5555555555555555)
li x2, 0x00000000ffffffff # initialize rs1
li x12, 0x5555555555555555 # initialize rs2
xnor x1, x2, x12 # perform operation
RVTEST_SIGUPD(x5, x0, x1, 848)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0xffffffff)
li x30, 0x00000000ffffffff # initialize rs1
li x19, 0x00000000ffffffff # initialize rs2
xnor x15, x30, x19 # perform operation
RVTEST_SIGUPD(x5, x0, x15, 856)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0xfffffffe)
li x20, 0x00000000ffffffff # initialize rs1
li x6, 0x00000000fffffffe # initialize rs2
xnor x2, x20, x6 # perform operation
RVTEST_SIGUPD(x5, x0, x2, 864)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0x100000000)
li x20, 0x00000000ffffffff # initialize rs1
li x19, 0x0000000100000000 # initialize rs2
xnor x27, x20, x19 # perform operation
RVTEST_SIGUPD(x5, x0, x27, 872)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0x100000001)
li x13, 0x00000000ffffffff # initialize rs1
li x21, 0x0000000100000001 # initialize rs2
xnor x26, x13, x21 # perform operation
RVTEST_SIGUPD(x5, x0, x26, 880)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0x0)
li x3, 0x00000000fffffffe # initialize rs1
li x16, 0x0000000000000000 # initialize rs2
xnor x24, x3, x16 # perform operation
RVTEST_SIGUPD(x5, x0, x24, 888)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0x1)
li x7, 0x00000000fffffffe # initialize rs1
li x28, 0x0000000000000001 # initialize rs2
xnor x1, x7, x28 # perform operation
RVTEST_SIGUPD(x5, x0, x1, 896)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0x2)
li x17, 0x00000000fffffffe # initialize rs1
li x30, 0x0000000000000002 # initialize rs2
xnor x28, x17, x30 # perform operation
RVTEST_SIGUPD(x5, x0, x28, 904)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0x8000000000000000)
li x14, 0x00000000fffffffe # initialize rs1
li x13, 0x8000000000000000 # initialize rs2
xnor x25, x14, x13 # perform operation
RVTEST_SIGUPD(x5, x0, x25, 912)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0x8000000000000001)
li x19, 0x00000000fffffffe # initialize rs1
li x25, 0x8000000000000001 # initialize rs2
xnor x29, x19, x25 # perform operation
RVTEST_SIGUPD(x5, x0, x29, 920)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0x7fffffffffffffff)
li x15, 0x00000000fffffffe # initialize rs1
li x19, 0x7fffffffffffffff # initialize rs2
xnor x21, x15, x19 # perform operation
RVTEST_SIGUPD(x5, x0, x21, 928)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0x7ffffffffffffffe)
li x16, 0x00000000fffffffe # initialize rs1
li x18, 0x7ffffffffffffffe # initialize rs2
xnor x4, x16, x18 # perform operation
RVTEST_SIGUPD(x5, x0, x4, 936)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0xffffffffffffffff)
li x3, 0x00000000fffffffe # initialize rs1
li x25, 0xffffffffffffffff # initialize rs2
xnor x30, x3, x25 # perform operation
RVTEST_SIGUPD(x5, x0, x30, 944)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0xfffffffffffffffe)
li x3, 0x00000000fffffffe # initialize rs1
li x8, 0xfffffffffffffffe # initialize rs2
xnor x23, x3, x8 # perform operation
RVTEST_SIGUPD(x5, x0, x23, 952)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0x5bbc887763ae86f2)
li x23, 0x00000000fffffffe # initialize rs1
li x9, 0x5bbc887763ae86f2 # initialize rs2
xnor x15, x23, x9 # perform operation
RVTEST_SIGUPD(x5, x0, x15, 960)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0xaaaaaaaaaaaaaaaa)
li x18, 0x00000000fffffffe # initialize rs1
li x14, 0xaaaaaaaaaaaaaaaa # initialize rs2
xnor x7, x18, x14 # perform operation
RVTEST_SIGUPD(x5, x0, x7, 968)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0x5555555555555555)
li x20, 0x00000000fffffffe # initialize rs1
li x17, 0x5555555555555555 # initialize rs2
xnor x15, x20, x17 # perform operation
RVTEST_SIGUPD(x5, x0, x15, 976)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0xffffffff)
li x7, 0x00000000fffffffe # initialize rs1
li x9, 0x00000000ffffffff # initialize rs2
xnor x3, x7, x9 # perform operation
RVTEST_SIGUPD(x5, x0, x3, 984)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0xfffffffe)
li x7, 0x00000000fffffffe # initialize rs1
li x31, 0x00000000fffffffe # initialize rs2
xnor x21, x7, x31 # perform operation
RVTEST_SIGUPD(x5, x0, x21, 992)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0x100000000)
li x11, 0x00000000fffffffe # initialize rs1
li x28, 0x0000000100000000 # initialize rs2
xnor x29, x11, x28 # perform operation
RVTEST_SIGUPD(x5, x0, x29, 1000)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0x100000001)
li x13, 0x00000000fffffffe # initialize rs1
li x14, 0x0000000100000001 # initialize rs2
xnor x21, x13, x14 # perform operation
RVTEST_SIGUPD(x5, x0, x21, 1008)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0x0)
li x11, 0x0000000100000000 # initialize rs1
li x16, 0x0000000000000000 # initialize rs2
xnor x22, x11, x16 # perform operation
RVTEST_SIGUPD(x5, x0, x22, 1016)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0x1)
li x28, 0x0000000100000000 # initialize rs1
li x23, 0x0000000000000001 # initialize rs2
xnor x1, x28, x23 # perform operation
RVTEST_SIGUPD(x5, x0, x1, 1024)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0x2)
li x16, 0x0000000100000000 # initialize rs1
li x8, 0x0000000000000002 # initialize rs2
xnor x19, x16, x8 # perform operation
RVTEST_SIGUPD(x5, x0, x19, 1032)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0x8000000000000000)
li x24, 0x0000000100000000 # initialize rs1
li x11, 0x8000000000000000 # initialize rs2
xnor x14, x24, x11 # perform operation
RVTEST_SIGUPD(x5, x0, x14, 1040)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0x8000000000000001)
li x23, 0x0000000100000000 # initialize rs1
li x7, 0x8000000000000001 # initialize rs2
xnor x20, x23, x7 # perform operation
RVTEST_SIGUPD(x5, x0, x20, 1048)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0x7fffffffffffffff)
li x16, 0x0000000100000000 # initialize rs1
li x28, 0x7fffffffffffffff # initialize rs2
xnor x4, x16, x28 # perform operation
RVTEST_SIGUPD(x5, x0, x4, 1056)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0x7ffffffffffffffe)
li x12, 0x0000000100000000 # initialize rs1
li x8, 0x7ffffffffffffffe # initialize rs2
xnor x6, x12, x8 # perform operation
RVTEST_SIGUPD(x5, x0, x6, 1064)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0xffffffffffffffff)
li x25, 0x0000000100000000 # initialize rs1
li x26, 0xffffffffffffffff # initialize rs2
xnor x13, x25, x26 # perform operation
RVTEST_SIGUPD(x5, x0, x13, 1072)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0xfffffffffffffffe)
li x27, 0x0000000100000000 # initialize rs1
li x31, 0xfffffffffffffffe # initialize rs2
xnor x3, x27, x31 # perform operation
RVTEST_SIGUPD(x5, x0, x3, 1080)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0x5bbc887763ae86f2)
li x25, 0x0000000100000000 # initialize rs1
li x29, 0x5bbc887763ae86f2 # initialize rs2
xnor x14, x25, x29 # perform operation
RVTEST_SIGUPD(x5, x0, x14, 1088)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0xaaaaaaaaaaaaaaaa)
li x7, 0x0000000100000000 # initialize rs1
li x3, 0xaaaaaaaaaaaaaaaa # initialize rs2
xnor x30, x7, x3 # perform operation
RVTEST_SIGUPD(x5, x0, x30, 1096)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0x5555555555555555)
li x19, 0x0000000100000000 # initialize rs1
li x16, 0x5555555555555555 # initialize rs2
xnor x18, x19, x16 # perform operation
RVTEST_SIGUPD(x5, x0, x18, 1104)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0xffffffff)
li x17, 0x0000000100000000 # initialize rs1
li x6, 0x00000000ffffffff # initialize rs2
xnor x10, x17, x6 # perform operation
RVTEST_SIGUPD(x5, x0, x10, 1112)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0xfffffffe)
li x28, 0x0000000100000000 # initialize rs1
li x24, 0x00000000fffffffe # initialize rs2
xnor x10, x28, x24 # perform operation
RVTEST_SIGUPD(x5, x0, x10, 1120)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0x100000000)
li x27, 0x0000000100000000 # initialize rs1
li x1, 0x0000000100000000 # initialize rs2
xnor x30, x27, x1 # perform operation
RVTEST_SIGUPD(x5, x0, x30, 1128)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0x100000001)
li x20, 0x0000000100000000 # initialize rs1
li x3, 0x0000000100000001 # initialize rs2
xnor x13, x20, x3 # perform operation
RVTEST_SIGUPD(x5, x0, x13, 1136)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0x0)
li x10, 0x0000000100000001 # initialize rs1
li x17, 0x0000000000000000 # initialize rs2
xnor x30, x10, x17 # perform operation
RVTEST_SIGUPD(x5, x0, x30, 1144)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0x1)
li x14, 0x0000000100000001 # initialize rs1
li x19, 0x0000000000000001 # initialize rs2
xnor x7, x14, x19 # perform operation
RVTEST_SIGUPD(x5, x0, x7, 1152)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0x2)
li x11, 0x0000000100000001 # initialize rs1
li x30, 0x0000000000000002 # initialize rs2
xnor x12, x11, x30 # perform operation
RVTEST_SIGUPD(x5, x0, x12, 1160)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0x8000000000000000)
li x14, 0x0000000100000001 # initialize rs1
li x22, 0x8000000000000000 # initialize rs2
xnor x9, x14, x22 # perform operation
RVTEST_SIGUPD(x5, x0, x9, 1168)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0x8000000000000001)
li x1, 0x0000000100000001 # initialize rs1
li x10, 0x8000000000000001 # initialize rs2
xnor x8, x1, x10 # perform operation
RVTEST_SIGUPD(x5, x0, x8, 1176)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0x7fffffffffffffff)
li x6, 0x0000000100000001 # initialize rs1
li x23, 0x7fffffffffffffff # initialize rs2
xnor x27, x6, x23 # perform operation
RVTEST_SIGUPD(x5, x0, x27, 1184)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0x7ffffffffffffffe)
li x9, 0x0000000100000001 # initialize rs1
li x21, 0x7ffffffffffffffe # initialize rs2
xnor x18, x9, x21 # perform operation
RVTEST_SIGUPD(x5, x0, x18, 1192)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0xffffffffffffffff)
li x26, 0x0000000100000001 # initialize rs1
li x6, 0xffffffffffffffff # initialize rs2
xnor x15, x26, x6 # perform operation
RVTEST_SIGUPD(x5, x0, x15, 1200)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0xfffffffffffffffe)
li x6, 0x0000000100000001 # initialize rs1
li x27, 0xfffffffffffffffe # initialize rs2
xnor x14, x6, x27 # perform operation
RVTEST_SIGUPD(x5, x0, x14, 1208)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0x5bbc887763ae86f2)
li x4, 0x0000000100000001 # initialize rs1
li x24, 0x5bbc887763ae86f2 # initialize rs2
xnor x16, x4, x24 # perform operation
RVTEST_SIGUPD(x5, x0, x16, 1216)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0xaaaaaaaaaaaaaaaa)
li x4, 0x0000000100000001 # initialize rs1
li x22, 0xaaaaaaaaaaaaaaaa # initialize rs2
xnor x8, x4, x22 # perform operation
RVTEST_SIGUPD(x5, x0, x8, 1224)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0x5555555555555555)
li x16, 0x0000000100000001 # initialize rs1
li x31, 0x5555555555555555 # initialize rs2
xnor x2, x16, x31 # perform operation
RVTEST_SIGUPD(x5, x0, x2, 1232)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0xffffffff)
li x20, 0x0000000100000001 # initialize rs1
li x9, 0x00000000ffffffff # initialize rs2
xnor x19, x20, x9 # perform operation
RVTEST_SIGUPD(x5, x0, x19, 1240)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0xfffffffe)
li x31, 0x0000000100000001 # initialize rs1
li x22, 0x00000000fffffffe # initialize rs2
xnor x14, x31, x22 # perform operation
RVTEST_SIGUPD(x5, x0, x14, 1248)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0x100000000)
li x13, 0x0000000100000001 # initialize rs1
li x29, 0x0000000100000000 # initialize rs2
xnor x19, x13, x29 # perform operation
RVTEST_SIGUPD(x5, x0, x19, 1256)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0x100000001)
li x19, 0x0000000100000001 # initialize rs1
li x14, 0x0000000100000001 # initialize rs2
xnor x7, x19, x14 # perform operation
RVTEST_SIGUPD(x5, x0, x7, 1264)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x0)
li x0, 0x857ff315c51ed256 # initialize rs1
li x0, 0x59b18549bec5b3e0 # initialize rs2
xnor x10, x0, x0 # perform operation
RVTEST_SIGUPD(x5, x0, x10, 1272)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x1)
li x1, 0x065254108e84a4e4 # initialize rs1
li x1, 0x402b9ab675290f4d # initialize rs2
xnor x4, x1, x1 # perform operation
RVTEST_SIGUPD(x5, x0, x4, 1280)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x2)
li x2, 0x21b69fa88749d37d # initialize rs1
li x2, 0x177303c82f608091 # initialize rs2
xnor x4, x2, x2 # perform operation
RVTEST_SIGUPD(x5, x0, x4, 1288)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x3)
li x3, 0xb508cf103f847b63 # initialize rs1
li x3, 0xaeb1d040829ff905 # initialize rs2
xnor x13, x3, x3 # perform operation
RVTEST_SIGUPD(x5, x0, x13, 1296)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x4)
li x4, 0x73725e957d214a10 # initialize rs1
li x4, 0xc006fff86c1e8006 # initialize rs2
xnor x6, x4, x4 # perform operation
RVTEST_SIGUPD(x5, x0, x6, 1304)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x5)
mv x6, x5 # switch signature pointer register to avoid conflict with test
li x5, 0x9dbd744a01e260ac # initialize rs1
li x5, 0x46194f6aee1c35f7 # initialize rs2
xnor x13, x5, x5 # perform operation
RVTEST_SIGUPD(x6, x0, x13, 1312)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x6)
mv x7, x6 # switch signature pointer register to avoid conflict with test
li x6, 0x228a51e0229cdcbf # initialize rs1
li x6, 0x1b3f5663948c59f1 # initialize rs2
xnor x29, x6, x6 # perform operation
RVTEST_SIGUPD(x7, x0, x29, 1320)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x7)
mv x4, x7 # switch signature pointer register to avoid conflict with test
li x7, 0x1fc03462ae9cdcc5 # initialize rs1
li x7, 0xafb41b1c132ef748 # initialize rs2
xnor x5, x7, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x5, 1328)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x8)
li x8, 0x24ac27112c6d5299 # initialize rs1
li x8, 0xa7c1b59e35e42faa # initialize rs2
xnor x11, x8, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 1336)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x9)
li x9, 0xe543a98909fb18d1 # initialize rs1
li x9, 0x79c60135e7b665c9 # initialize rs2
xnor x5, x9, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x5, 1344)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x10)
li x10, 0xf309c06848223a97 # initialize rs1
li x10, 0x0f31f8af6d9bab0e # initialize rs2
xnor x15, x10, x10 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 1352)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x11)
li x11, 0x75faf06e6156ebf1 # initialize rs1
li x11, 0x5721073fa8352f15 # initialize rs2
xnor x22, x11, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 1360)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x12)
li x12, 0x86128a8a533b1e83 # initialize rs1
li x12, 0xfe1accb6e9e9f7b8 # initialize rs2
xnor x27, x12, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 1368)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x13)
li x13, 0x88fb29985d418771 # initialize rs1
li x13, 0x28d2778725fe4097 # initialize rs2
xnor x11, x13, x13 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 1376)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x14)
li x14, 0x7a86d2a652718c21 # initialize rs1
li x14, 0x760d3a3e1ce2407b # initialize rs2
xnor x1, x14, x14 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 1384)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x15)
li x15, 0xc4eb20d5832ece97 # initialize rs1
li x15, 0x8f392e1f9eb94ff0 # initialize rs2
xnor x2, x15, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 1392)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x16)
li x16, 0x0b2ed549f75b7aef # initialize rs1
li x16, 0xe914597d49612078 # initialize rs2
xnor x12, x16, x16 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 1400)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x17)
li x17, 0x55f685c81924db84 # initialize rs1
li x17, 0xde2bb3d13ab59601 # initialize rs2
xnor x17, x17, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 1408)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x18)
li x18, 0x79e1776e619fc581 # initialize rs1
li x18, 0x2f4075fc6aa2154b # initialize rs2
xnor x31, x18, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 1416)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x19)
li x19, 0xb4c12a1b11ac3647 # initialize rs1
li x19, 0x067052b569f153b0 # initialize rs2
xnor x12, x19, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 1424)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x20)
li x20, 0x16ed72813dfe9576 # initialize rs1
li x20, 0x7c8f8cfa52c34875 # initialize rs2
xnor x11, x20, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 1432)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x21)
li x21, 0xe5508d57136905ee # initialize rs1
li x21, 0x72bf647d0b1212e4 # initialize rs2
xnor x23, x21, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 1440)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x22)
li x22, 0x4fe02a8182eb41a4 # initialize rs1
li x22, 0x9a7092bed228d781 # initialize rs2
xnor x27, x22, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 1448)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x23)
li x23, 0x9f55c086c15a1e03 # initialize rs1
li x23, 0xcbf2a2fd64c2168f # initialize rs2
xnor x8, x23, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 1456)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x24)
li x24, 0x9d3fc29dc603d149 # initialize rs1
li x24, 0x608905f63cdd3f0b # initialize rs2
xnor x29, x24, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 1464)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x25)
li x25, 0x9d65a80c7be143dc # initialize rs1
li x25, 0xf329fe9ca9ccb155 # initialize rs2
xnor x3, x25, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 1472)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x26)
li x26, 0x807776718f842a89 # initialize rs1
li x26, 0x6344f623a3b079a9 # initialize rs2
xnor x22, x26, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 1480)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x27)
li x27, 0xaa935ae99f0a4bd3 # initialize rs1
li x27, 0x87ebcc4db42d264f # initialize rs2
xnor x16, x27, x27 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 1488)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x28)
li x28, 0x7ac430b49bbba95e # initialize rs1
li x28, 0xb29cf480002cf701 # initialize rs2
xnor x26, x28, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 1496)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x29)
li x29, 0xf84178e11ad90f7d # initialize rs1
li x29, 0xb89bdaf13a57a358 # initialize rs2
xnor x28, x29, x29 # perform operation
RVTEST_SIGUPD(x4, x0, x28, 1504)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x30)
li x30, 0xfa89a9759ac7b8bc # initialize rs1
li x30, 0xb8ca58e632305b74 # initialize rs2
xnor x7, x30, x30 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 1512)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x31)
li x31, 0xa0e064a7cd0e83c0 # initialize rs1
li x31, 0xa70ad0522691950d # initialize rs2
xnor x5, x31, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x5, 1520)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x0)
li x0, 0xa3d2a0e892a9fc8f # initialize rs1
li x17, 0xa6f10688104af547 # initialize rs2
xnor x0, x0, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x0, 1528)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x1)
li x1, 0x21349e4669a63039 # initialize rs1
li x29, 0x25ca70f77be6bdc1 # initialize rs2
xnor x1, x1, x29 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 1536)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x2)
li x2, 0xaeeb2ed1051e1d65 # initialize rs1
li x9, 0x678548d4e087b94d # initialize rs2
xnor x2, x2, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 1544)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x3)
li x3, 0x07c4695bcdbb947e # initialize rs1
li x2, 0x200d914d9470ade8 # initialize rs2
xnor x3, x3, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 1552)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x4)
mv x5, x4 # switch signature pointer register to avoid conflict with test
li x4, 0x7c8d440b81b83bb1 # initialize rs1
li x27, 0x9852ae0094c172ee # initialize rs2
xnor x4, x4, x27 # perform operation
RVTEST_SIGUPD(x5, x0, x4, 1560)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x5)
mv x6, x5 # switch signature pointer register to avoid conflict with test
li x5, 0xa63e51e88509273d # initialize rs1
li x9, 0x1425c4894e0a7767 # initialize rs2
xnor x5, x5, x9 # perform operation
RVTEST_SIGUPD(x6, x0, x5, 1568)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x6)
mv x7, x6 # switch signature pointer register to avoid conflict with test
li x6, 0x321487e1e15ed230 # initialize rs1
li x11, 0x2324440ab668b999 # initialize rs2
xnor x6, x6, x11 # perform operation
RVTEST_SIGUPD(x7, x0, x6, 1576)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x7)
mv x4, x7 # switch signature pointer register to avoid conflict with test
li x7, 0xfa91eeeec49a1ee2 # initialize rs1
li x3, 0xd13e071486456723 # initialize rs2
xnor x7, x7, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 1584)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x8)
li x8, 0x909274c91c32c985 # initialize rs1
li x8, 0xcb8a29f211ded4f1 # initialize rs2
xnor x8, x8, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 1592)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x9)
li x9, 0x8c1a1d8e481bc224 # initialize rs1
li x30, 0xe992907dc5d5a68a # initialize rs2
xnor x9, x9, x30 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 1600)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x10)
li x10, 0xc36178f6c452d455 # initialize rs1
li x26, 0x33326ed2a717c2aa # initialize rs2
xnor x10, x10, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 1608)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x11)
li x11, 0xc5a849218e26f3b8 # initialize rs1
li x25, 0xe70d21b5045e05c4 # initialize rs2
xnor x11, x11, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 1616)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x12)
li x12, 0x1a2b60a9efc9b601 # initialize rs1
li x22, 0xd5271668dda70803 # initialize rs2
xnor x12, x12, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 1624)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x13)
li x13, 0xf7e7443438694940 # initialize rs1
li x26, 0xe48463ebbb028aee # initialize rs2
xnor x13, x13, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 1632)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x14)
li x14, 0x0973a61784e651d3 # initialize rs1
li x8, 0xa8c8e669476e6069 # initialize rs2
xnor x14, x14, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 1640)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x15)
li x15, 0x16eb4de6dbc00d21 # initialize rs1
li x22, 0x2af1d747cedf909c # initialize rs2
xnor x15, x15, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 1648)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x16)
li x16, 0xda60199c2c57f499 # initialize rs1
li x31, 0x3914735d27d53441 # initialize rs2
xnor x16, x16, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 1656)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x17)
li x17, 0x43b23a6a3c138d67 # initialize rs1
li x21, 0x22ca19d9d33b4678 # initialize rs2
xnor x17, x17, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 1664)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x18)
li x18, 0x8b3a137eefebd72b # initialize rs1
li x8, 0xd723113ebc5fab99 # initialize rs2
xnor x18, x18, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 1672)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x19)
li x19, 0x3224920938fc0d99 # initialize rs1
li x16, 0x9e53e6c975f1b5df # initialize rs2
xnor x19, x19, x16 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 1680)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x20)
li x20, 0xda1707b630348cf6 # initialize rs1
li x1, 0x94fc3a2c1278e71a # initialize rs2
xnor x20, x20, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 1688)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x21)
li x21, 0x72ea76a151dd5f18 # initialize rs1
li x1, 0xae81cab9ce50851e # initialize rs2
xnor x21, x21, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 1696)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x22)
li x22, 0x4555545ea4875fd5 # initialize rs1
li x21, 0x5cff21ffb43f2413 # initialize rs2
xnor x22, x22, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 1704)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x23)
li x23, 0x967a46929562656b # initialize rs1
li x11, 0xba89a53cea2358e6 # initialize rs2
xnor x23, x23, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 1712)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x24)
li x24, 0x04e19b8e95b880ca # initialize rs1
li x7, 0xa20c8b493aec7ace # initialize rs2
xnor x24, x24, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 1720)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x25)
li x25, 0xce0d1bab33c500a1 # initialize rs1
li x26, 0x2d08f29dec727730 # initialize rs2
xnor x25, x25, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 1728)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x26)
li x26, 0xb872cc4fd9ad4aac # initialize rs1
li x18, 0x851219580efb72d2 # initialize rs2
xnor x26, x26, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 1736)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x27)
li x27, 0x463f9cc85beb43af # initialize rs1
li x29, 0xed0765bac2f35ef7 # initialize rs2
xnor x27, x27, x29 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 1744)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x28)
li x28, 0xa7c916bee95756e7 # initialize rs1
li x12, 0x87e99da7c58c767d # initialize rs2
xnor x28, x28, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x28, 1752)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x29)
li x29, 0x03166186dde3cc4b # initialize rs1
li x13, 0x68030d859d16ff9d # initialize rs2
xnor x29, x29, x13 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 1760)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x30)
li x30, 0xa37d500e773fc9b8 # initialize rs1
li x11, 0x4768b778ab7376dc # initialize rs2
xnor x30, x30, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 1768)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x31)
li x31, 0x96bab988f359c8de # initialize rs1
li x12, 0x2245a4fea30491af # initialize rs2
xnor x31, x31, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 1776)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x0)
li x7, 0x3cfa5dfd63c2cbf7 # initialize rs1
li x0, 0x26e1c28c15ac110e # initialize rs2
xnor x0, x7, x0 # perform operation
RVTEST_SIGUPD(x4, x0, x0, 1784)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x1)
li x3, 0xee7816f1e6f1fcad # initialize rs1
li x1, 0x0c701d417082d100 # initialize rs2
xnor x1, x3, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 1792)
addi x4, x4, 1800 # increment signature pointer and reset offset

# Testcase cmp_rd_rs2 (Test rd = rs2 = x2)
li x8, 0x68bffc9a293386be # initialize rs1
li x2, 0x9e5ba0b110a575a4 # initialize rs2
xnor x2, x8, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 0)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x3)
li x29, 0x7224305befcbafe7 # initialize rs1
li x3, 0xd9cdac91e93bc7da # initialize rs2
xnor x3, x29, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 8)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x4)
mv x5, x4 # switch signature pointer register to avoid conflict with test
li x24, 0x05e993b19bb7799b # initialize rs1
li x4, 0xef4c28b7e5e5c26f # initialize rs2
xnor x4, x24, x4 # perform operation
RVTEST_SIGUPD(x5, x0, x4, 16)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x5)
mv x6, x5 # switch signature pointer register to avoid conflict with test
li x25, 0x62fbb45fb6b22e0d # initialize rs1
li x5, 0x77d6505a355eecff # initialize rs2
xnor x5, x25, x5 # perform operation
RVTEST_SIGUPD(x6, x0, x5, 24)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x6)
mv x7, x6 # switch signature pointer register to avoid conflict with test
li x12, 0x535371c186181f5a # initialize rs1
li x6, 0x6f2f524b016b8865 # initialize rs2
xnor x6, x12, x6 # perform operation
RVTEST_SIGUPD(x7, x0, x6, 32)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x7)
mv x4, x7 # switch signature pointer register to avoid conflict with test
li x20, 0x48dd81fc92f4ea2f # initialize rs1
li x7, 0x3c2f8886aa6dee14 # initialize rs2
xnor x7, x20, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 40)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x8)
li x16, 0x446e7799508500e0 # initialize rs1
li x8, 0xfb5281187ba77bc1 # initialize rs2
xnor x8, x16, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 48)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x9)
li x30, 0xa87984387dfddf56 # initialize rs1
li x9, 0x662310fb72561485 # initialize rs2
xnor x9, x30, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 56)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x10)
li x23, 0x2e9a1331b2fd1cfd # initialize rs1
li x10, 0x38dac5f344659838 # initialize rs2
xnor x10, x23, x10 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 64)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x11)
li x10, 0x7ee4e2be89c2eb13 # initialize rs1
li x11, 0xe53121f07b25bb65 # initialize rs2
xnor x11, x10, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 72)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x12)
li x5, 0x880e266b8cf2948c # initialize rs1
li x12, 0x178fb98ce32afcc6 # initialize rs2
xnor x12, x5, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 80)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x13)
li x20, 0x309707b99159667b # initialize rs1
li x13, 0x71727a080e4a1c2b # initialize rs2
xnor x13, x20, x13 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 88)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x14)
li x22, 0xdc4418046fc3d974 # initialize rs1
li x14, 0x7b9a1cd163d44b18 # initialize rs2
xnor x14, x22, x14 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 96)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x15)
li x9, 0x6679f8841494b92f # initialize rs1
li x15, 0x8aeb0ab7f9a6fbd5 # initialize rs2
xnor x15, x9, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 104)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x16)
li x2, 0x22660a08a55bea8d # initialize rs1
li x16, 0xe95064c73346efed # initialize rs2
xnor x16, x2, x16 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 112)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x17)
li x31, 0x23b6a27101e6f2df # initialize rs1
li x17, 0x278432661b0782ac # initialize rs2
xnor x17, x31, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 120)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x18)
li x2, 0x651e57a80f8dc0f3 # initialize rs1
li x18, 0x76fc033f9a049bac # initialize rs2
xnor x18, x2, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 128)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x19)
li x14, 0xac8d5134c08df571 # initialize rs1
li x19, 0x1db67628c39ca2fc # initialize rs2
xnor x19, x14, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 136)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x20)
li x22, 0xa7947f4586ba10bd # initialize rs1
li x20, 0x747c1c9a10dbce5d # initialize rs2
xnor x20, x22, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 144)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x21)
li x26, 0xec471e24c8fdd9e9 # initialize rs1
li x21, 0x434370b4b3b6a595 # initialize rs2
xnor x21, x26, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 152)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x22)
li x20, 0x81ff6b7e21d5a094 # initialize rs1
li x22, 0x984b7639dd15e21a # initialize rs2
xnor x22, x20, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 160)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x23)
li x1, 0xb8ff6ba9188f177d # initialize rs1
li x23, 0xe588e13b1827ed29 # initialize rs2
xnor x23, x1, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 168)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x24)
li x2, 0x6276abea9fe59a1c # initialize rs1
li x24, 0x67d8d7184c6d0e35 # initialize rs2
xnor x24, x2, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 176)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x25)
li x11, 0x8130e7c427555651 # initialize rs1
li x25, 0x439c7ea0b8ac449a # initialize rs2
xnor x25, x11, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 184)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x26)
li x28, 0x7d7e95737c5038ce # initialize rs1
li x26, 0xc1ccd1abd08d2660 # initialize rs2
xnor x26, x28, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 192)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x27)
li x21, 0xbb8e5ef88e886747 # initialize rs1
li x27, 0xb57e53e5f64c0192 # initialize rs2
xnor x27, x21, x27 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 200)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x28)
li x20, 0x3e127707e7a6ec04 # initialize rs1
li x28, 0xf81ccc8540ac4a63 # initialize rs2
xnor x28, x20, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x28, 208)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x29)
li x5, 0xe96dce4b22199702 # initialize rs1
li x29, 0x7f02afd4f924cdbc # initialize rs2
xnor x29, x5, x29 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 216)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x30)
li x9, 0x5df9e423f021c64c # initialize rs1
li x30, 0x09f418a59ee21859 # initialize rs2
xnor x30, x9, x30 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 224)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x31)
li x31, 0x0a937f06ccd5bbec # initialize rs1
li x31, 0xa66dbca044a40a40 # initialize rs2
xnor x31, x31, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 232)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x0)
li x0, 0xa8526e0a3aea2639 # initialize rs1
li x0, 0x710d0a303cd86cba # initialize rs2
xnor x0, x0, x0 # perform operation
RVTEST_SIGUPD(x4, x0, x0, 240)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x1)
li x1, 0xea538b0f994eae60 # initialize rs1
li x1, 0x15345e58ca3f79c9 # initialize rs2
xnor x1, x1, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 248)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x2)
li x2, 0x9338a460de0ae10e # initialize rs1
li x2, 0xfd509dc9d1e7f576 # initialize rs2
xnor x2, x2, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 256)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x3)
li x3, 0x10f4032de1fbe28d # initialize rs1
li x3, 0x790de0739ace8261 # initialize rs2
xnor x3, x3, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 264)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x4)
mv x5, x4 # switch signature pointer register to avoid conflict with test
li x4, 0x7f65da7a07d281be # initialize rs1
li x4, 0xd2354891a2dc6c67 # initialize rs2
xnor x4, x4, x4 # perform operation
RVTEST_SIGUPD(x5, x0, x4, 272)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x5)
mv x6, x5 # switch signature pointer register to avoid conflict with test
li x5, 0x15a496905985bdbc # initialize rs1
li x5, 0xe545c52706ce98a3 # initialize rs2
xnor x5, x5, x5 # perform operation
RVTEST_SIGUPD(x6, x0, x5, 280)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x6)
mv x7, x6 # switch signature pointer register to avoid conflict with test
li x6, 0xed5c1581a7e2a481 # initialize rs1
li x6, 0x6202c4d3dd022ea8 # initialize rs2
xnor x6, x6, x6 # perform operation
RVTEST_SIGUPD(x7, x0, x6, 288)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x7)
mv x4, x7 # switch signature pointer register to avoid conflict with test
li x7, 0x33f2491ee93a2300 # initialize rs1
li x7, 0x1ebc8cfa6ab179ad # initialize rs2
xnor x7, x7, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 296)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x8)
li x8, 0x1e1a3d279de3b393 # initialize rs1
li x8, 0x257ec6d309c4c2a0 # initialize rs2
xnor x8, x8, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 304)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x9)
li x9, 0x4b8dbc18f3351eea # initialize rs1
li x9, 0xb963e7c635d2e297 # initialize rs2
xnor x9, x9, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 312)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x10)
li x10, 0x536a498617b1e38a # initialize rs1
li x10, 0x20d0ff4776511a9d # initialize rs2
xnor x10, x10, x10 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 320)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x11)
li x11, 0x7954205ca51697de # initialize rs1
li x11, 0xf2b141a63c5823e4 # initialize rs2
xnor x11, x11, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 328)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x12)
li x12, 0xae81561eda1eb4ce # initialize rs1
li x12, 0x98562939e2bc0ef0 # initialize rs2
xnor x12, x12, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 336)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x13)
li x13, 0x21ac270cd8ea210d # initialize rs1
li x13, 0xf71d2e5d69da4815 # initialize rs2
xnor x13, x13, x13 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 344)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x14)
li x14, 0xf26cfa644465acad # initialize rs1
li x14, 0x60ad042e26c402e1 # initialize rs2
xnor x14, x14, x14 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 352)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x15)
li x15, 0x58137a75e1bf8c15 # initialize rs1
li x15, 0x7b9c87e902e82e35 # initialize rs2
xnor x15, x15, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 360)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x16)
li x16, 0x99c3456ca202006a # initialize rs1
li x16, 0x1e332d916054eb2c # initialize rs2
xnor x16, x16, x16 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 368)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x17)
li x17, 0x9208acea8881c415 # initialize rs1
li x17, 0xbe92f69e2964cd3e # initialize rs2
xnor x17, x17, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 376)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x18)
li x18, 0x3ed31712db9c395d # initialize rs1
li x18, 0x3b81da29f0b941c1 # initialize rs2
xnor x18, x18, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 384)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x19)
li x19, 0xc3d9545764d533e5 # initialize rs1
li x19, 0x4b0e3ef64e14fd2b # initialize rs2
xnor x19, x19, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 392)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x20)
li x20, 0x6996b7bd76bf4cee # initialize rs1
li x20, 0xe2467dbf0257921f # initialize rs2
xnor x20, x20, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 400)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x21)
li x21, 0x791eaa13f2d4e31d # initialize rs1
li x21, 0xe6bc695824222921 # initialize rs2
xnor x21, x21, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 408)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x22)
li x22, 0x2484bf42f15e6faf # initialize rs1
li x22, 0x2ab1b686f575e947 # initialize rs2
xnor x22, x22, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 416)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x23)
li x23, 0x5ee5f181614e55a3 # initialize rs1
li x23, 0x6c613d10fb74d9b0 # initialize rs2
xnor x23, x23, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 424)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x24)
li x24, 0x037b2a0616aee167 # initialize rs1
li x24, 0xf1d31b069135bbd4 # initialize rs2
xnor x24, x24, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 432)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x25)
li x25, 0x7c8e50d121286f5c # initialize rs1
li x25, 0xb27c10b01a978388 # initialize rs2
xnor x25, x25, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 440)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x26)
li x26, 0x95b21c8abd1fdb0c # initialize rs1
li x26, 0xeda177d7e0e97268 # initialize rs2
xnor x26, x26, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 448)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x27)
li x27, 0xb707b6c345d747be # initialize rs1
li x27, 0xc6f2cde22efaf4a9 # initialize rs2
xnor x27, x27, x27 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 456)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x28)
li x28, 0x5bdbf54f394226bc # initialize rs1
li x28, 0xe2572c1ee20fcf77 # initialize rs2
xnor x28, x28, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x28, 464)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x29)
li x29, 0x02bda9278e8ffcfc # initialize rs1
li x29, 0xf7e8819f8fbef9b2 # initialize rs2
xnor x29, x29, x29 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 472)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x30)
li x30, 0x8cd6509532a1e9ad # initialize rs1
li x30, 0xd4908073c8adf278 # initialize rs2
xnor x30, x30, x30 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 480)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x31)
li x31, 0xf703ba6c3f5b8ba1 # initialize rs1
li x31, 0xed593ef14a931699 # initialize rs2
xnor x31, x31, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 488)

# Testcase cp_gpr/fpr_hazard nohaz test
add x3, x14, x18 # perform first operation
xnor x1, x27, x23 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard nohaz test
add x19, x1, x10 # perform first operation
xnor x3, x20, x6 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard nohaz test
add x5, x19, x22 # perform first operation
xnor x11, x24, x3 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard raw test
add x26, x30, x13 # perform first operation
xnor x30, x8, x12 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard raw test
add x21, x2, x3 # perform first operation
xnor x2, x6, x21 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard raw test
add x19, x11, x1 # perform first operation
xnor x19, x13, x24 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard waw test
add x8, x24, x12 # perform first operation
xnor x8, x20, x16 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard waw test
add x2, x30, x17 # perform first operation
xnor x2, x10, x24 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard waw test
add x2, x26, x9 # perform first operation
xnor x2, x19, x27 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard war test
add x7, x29, x9 # perform first operation
xnor x29, x31, x27 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard war test
add x14, x13, x27 # perform first operation
xnor x27, x26, x9 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard war test
add x20, x25, x7 # perform first operation
xnor x19, x10, x16 # perform second (triggering) operation

#.EQU SIGSIZE,4096


// ******************
// Tests from: WALLY-COV-cpop.S
// ******************


# initialize signature pointer
la x4, begin_signature

    
# Testcase cp_rs1 (Test source rs1 = x0)
li x0, 0xd7471886c8787ddd # initialize rs1
cpop x17, x0 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 0)

# Testcase cp_rs1 (Test source rs1 = x1)
li x1, 0x41a586c2a6638e11 # initialize rs1
cpop x18, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 8)

# Testcase cp_rs1 (Test source rs1 = x2)
li x2, 0xabf867120b0b0f5e # initialize rs1
cpop x21, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 16)

# Testcase cp_rs1 (Test source rs1 = x3)
li x3, 0xb976aef168e6ae41 # initialize rs1
cpop x10, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 24)

# Testcase cp_rs1 (Test source rs1 = x4)
mv x5, x4 # switch signature pointer register to avoid conflict with test
li x4, 0xccdc58c8e1bb7ae6 # initialize rs1
cpop x31, x4 # perform operation
RVTEST_SIGUPD(x5, x0, x31, 32)

# Testcase cp_rs1 (Test source rs1 = x5)
mv x6, x5 # switch signature pointer register to avoid conflict with test
li x5, 0xdf58f3aa23500050 # initialize rs1
cpop x25, x5 # perform operation
RVTEST_SIGUPD(x6, x0, x25, 40)

# Testcase cp_rs1 (Test source rs1 = x6)
mv x7, x6 # switch signature pointer register to avoid conflict with test
li x6, 0x55d1f0fe4e6f2555 # initialize rs1
cpop x3, x6 # perform operation
RVTEST_SIGUPD(x7, x0, x3, 48)

# Testcase cp_rs1 (Test source rs1 = x7)
mv x4, x7 # switch signature pointer register to avoid conflict with test
li x7, 0x49a14d35b3583c2d # initialize rs1
cpop x18, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 56)

# Testcase cp_rs1 (Test source rs1 = x8)
li x8, 0x45de3980d5604584 # initialize rs1
cpop x20, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 64)

# Testcase cp_rs1 (Test source rs1 = x9)
li x9, 0xd5eceb3adf0e6f01 # initialize rs1
cpop x13, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 72)

# Testcase cp_rs1 (Test source rs1 = x10)
li x10, 0x4fcc0c9f1ea18046 # initialize rs1
cpop x1, x10 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 80)

# Testcase cp_rs1 (Test source rs1 = x11)
li x11, 0xd25308fcad269356 # initialize rs1
cpop x18, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 88)

# Testcase cp_rs1 (Test source rs1 = x12)
li x12, 0x3f24ac596118a12b # initialize rs1
cpop x20, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 96)

# Testcase cp_rs1 (Test source rs1 = x13)
li x13, 0x91820e376fa35db4 # initialize rs1
cpop x7, x13 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 104)

# Testcase cp_rs1 (Test source rs1 = x14)
li x14, 0x1c02f78fcb3ae1b5 # initialize rs1
cpop x3, x14 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 112)

# Testcase cp_rs1 (Test source rs1 = x15)
li x15, 0xd1ee9c7b67be60af # initialize rs1
cpop x18, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 120)

# Testcase cp_rs1 (Test source rs1 = x16)
li x16, 0x236f91762af87fb1 # initialize rs1
cpop x6, x16 # perform operation
RVTEST_SIGUPD(x4, x0, x6, 128)

# Testcase cp_rs1 (Test source rs1 = x17)
li x17, 0xe19c1c5696164429 # initialize rs1
cpop x24, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 136)

# Testcase cp_rs1 (Test source rs1 = x18)
li x18, 0x98148c7f72aa0c17 # initialize rs1
cpop x1, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 144)

# Testcase cp_rs1 (Test source rs1 = x19)
li x19, 0xd720582a13d3373a # initialize rs1
cpop x22, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 152)

# Testcase cp_rs1 (Test source rs1 = x20)
li x20, 0x69480a9ec78feed0 # initialize rs1
cpop x9, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 160)

# Testcase cp_rs1 (Test source rs1 = x21)
li x21, 0x3426c1c3e91e6338 # initialize rs1
cpop x1, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 168)

# Testcase cp_rs1 (Test source rs1 = x22)
li x22, 0x46df7b386fcb4884 # initialize rs1
cpop x8, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 176)

# Testcase cp_rs1 (Test source rs1 = x23)
li x23, 0xb4c3ef118af37377 # initialize rs1
cpop x31, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 184)

# Testcase cp_rs1 (Test source rs1 = x24)
li x24, 0x111a47ee6762b336 # initialize rs1
cpop x21, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 192)

# Testcase cp_rs1 (Test source rs1 = x25)
li x25, 0x5a07cbc221f31371 # initialize rs1
cpop x29, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 200)

# Testcase cp_rs1 (Test source rs1 = x26)
li x26, 0x18a5f144ac5204b6 # initialize rs1
cpop x3, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 208)

# Testcase cp_rs1 (Test source rs1 = x27)
li x27, 0xeeeb64934e785db6 # initialize rs1
cpop x17, x27 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 216)

# Testcase cp_rs1 (Test source rs1 = x28)
li x28, 0x993eeec557e677ea # initialize rs1
cpop x23, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 224)

# Testcase cp_rs1 (Test source rs1 = x29)
li x29, 0x4c7406c3932c3ec5 # initialize rs1
cpop x21, x29 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 232)

# Testcase cp_rs1 (Test source rs1 = x30)
li x30, 0x0334791e95b38080 # initialize rs1
cpop x12, x30 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 240)

# Testcase cp_rs1 (Test source rs1 = x31)
li x31, 0xe5ab765e56d68239 # initialize rs1
cpop x11, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 248)

# Testcase cp_rd (Test destination rd = x0)
li x18, 0x8bdb579f1815ae89 # initialize rs1
cpop x0, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x0, 256)

# Testcase cp_rd (Test destination rd = x1)
li x28, 0x39b68c66c7f381d5 # initialize rs1
cpop x1, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 264)

# Testcase cp_rd (Test destination rd = x2)
li x7, 0x50a36cb54737eb36 # initialize rs1
cpop x2, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 272)

# Testcase cp_rd (Test destination rd = x3)
li x23, 0x62aa7cee2d69e518 # initialize rs1
cpop x3, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 280)

# Testcase cp_rd (Test destination rd = x4)
mv x5, x4 # switch signature pointer register to avoid conflict with test
li x18, 0x2803eb065161611e # initialize rs1
cpop x4, x18 # perform operation
RVTEST_SIGUPD(x5, x0, x4, 288)

# Testcase cp_rd (Test destination rd = x5)
mv x6, x5 # switch signature pointer register to avoid conflict with test
li x19, 0x17cb4a1c1a0046f2 # initialize rs1
cpop x5, x19 # perform operation
RVTEST_SIGUPD(x6, x0, x5, 296)

# Testcase cp_rd (Test destination rd = x6)
mv x7, x6 # switch signature pointer register to avoid conflict with test
li x22, 0x4fdb6bfd4d6ab6f2 # initialize rs1
cpop x6, x22 # perform operation
RVTEST_SIGUPD(x7, x0, x6, 304)

# Testcase cp_rd (Test destination rd = x7)
mv x5, x7 # switch signature pointer register to avoid conflict with test
li x4, 0xb47509172d589e02 # initialize rs1
cpop x7, x4 # perform operation
RVTEST_SIGUPD(x5, x0, x7, 312)

# Testcase cp_rd (Test destination rd = x8)
li x19, 0x8d47f71f1f9dbf6f # initialize rs1
cpop x8, x19 # perform operation
RVTEST_SIGUPD(x5, x0, x8, 320)

# Testcase cp_rd (Test destination rd = x9)
li x28, 0xd38af92236e0b521 # initialize rs1
cpop x9, x28 # perform operation
RVTEST_SIGUPD(x5, x0, x9, 328)

# Testcase cp_rd (Test destination rd = x10)
li x8, 0x1d05ff0d55b9d183 # initialize rs1
cpop x10, x8 # perform operation
RVTEST_SIGUPD(x5, x0, x10, 336)

# Testcase cp_rd (Test destination rd = x11)
li x6, 0xb18be37670a6eeed # initialize rs1
cpop x11, x6 # perform operation
RVTEST_SIGUPD(x5, x0, x11, 344)

# Testcase cp_rd (Test destination rd = x12)
li x25, 0x8e91203c48ef743f # initialize rs1
cpop x12, x25 # perform operation
RVTEST_SIGUPD(x5, x0, x12, 352)

# Testcase cp_rd (Test destination rd = x13)
li x8, 0x1e49d716a5437208 # initialize rs1
cpop x13, x8 # perform operation
RVTEST_SIGUPD(x5, x0, x13, 360)

# Testcase cp_rd (Test destination rd = x14)
li x17, 0x2deaf3a6a8adae19 # initialize rs1
cpop x14, x17 # perform operation
RVTEST_SIGUPD(x5, x0, x14, 368)

# Testcase cp_rd (Test destination rd = x15)
li x2, 0x5ab9791474a88f1f # initialize rs1
cpop x15, x2 # perform operation
RVTEST_SIGUPD(x5, x0, x15, 376)

# Testcase cp_rd (Test destination rd = x16)
li x30, 0x7d87b86b45ccda3e # initialize rs1
cpop x16, x30 # perform operation
RVTEST_SIGUPD(x5, x0, x16, 384)

# Testcase cp_rd (Test destination rd = x17)
li x22, 0x3a7fa4befbced48b # initialize rs1
cpop x17, x22 # perform operation
RVTEST_SIGUPD(x5, x0, x17, 392)

# Testcase cp_rd (Test destination rd = x18)
li x29, 0xe8482228d3aef5bb # initialize rs1
cpop x18, x29 # perform operation
RVTEST_SIGUPD(x5, x0, x18, 400)

# Testcase cp_rd (Test destination rd = x19)
li x8, 0x3c6da7a65bb2cb7c # initialize rs1
cpop x19, x8 # perform operation
RVTEST_SIGUPD(x5, x0, x19, 408)

# Testcase cp_rd (Test destination rd = x20)
li x13, 0x0909c7b39830410f # initialize rs1
cpop x20, x13 # perform operation
RVTEST_SIGUPD(x5, x0, x20, 416)

# Testcase cp_rd (Test destination rd = x21)
li x2, 0x4118d41ab844daf4 # initialize rs1
cpop x21, x2 # perform operation
RVTEST_SIGUPD(x5, x0, x21, 424)

# Testcase cp_rd (Test destination rd = x22)
li x15, 0x1738b846793a4c2d # initialize rs1
cpop x22, x15 # perform operation
RVTEST_SIGUPD(x5, x0, x22, 432)

# Testcase cp_rd (Test destination rd = x23)
li x18, 0xcc17afc6fa3cb87c # initialize rs1
cpop x23, x18 # perform operation
RVTEST_SIGUPD(x5, x0, x23, 440)

# Testcase cp_rd (Test destination rd = x24)
li x30, 0xd445bf4595f5457d # initialize rs1
cpop x24, x30 # perform operation
RVTEST_SIGUPD(x5, x0, x24, 448)

# Testcase cp_rd (Test destination rd = x25)
li x16, 0x78e0f54fa8880f5f # initialize rs1
cpop x25, x16 # perform operation
RVTEST_SIGUPD(x5, x0, x25, 456)

# Testcase cp_rd (Test destination rd = x26)
li x20, 0xc2266fea09278b78 # initialize rs1
cpop x26, x20 # perform operation
RVTEST_SIGUPD(x5, x0, x26, 464)

# Testcase cp_rd (Test destination rd = x27)
li x12, 0x52cf3ef9caa9bbf1 # initialize rs1
cpop x27, x12 # perform operation
RVTEST_SIGUPD(x5, x0, x27, 472)

# Testcase cp_rd (Test destination rd = x28)
li x17, 0x5712cf05e8308ed1 # initialize rs1
cpop x28, x17 # perform operation
RVTEST_SIGUPD(x5, x0, x28, 480)

# Testcase cp_rd (Test destination rd = x29)
li x7, 0xa65ef12772d54ac5 # initialize rs1
cpop x29, x7 # perform operation
RVTEST_SIGUPD(x5, x0, x29, 488)

# Testcase cp_rd (Test destination rd = x30)
li x22, 0xaece0d05e359aafb # initialize rs1
cpop x30, x22 # perform operation
RVTEST_SIGUPD(x5, x0, x30, 496)

# Testcase cp_rd (Test destination rd = x31)
li x27, 0xbc9ec26108202ee1 # initialize rs1
cpop x31, x27 # perform operation
RVTEST_SIGUPD(x5, x0, x31, 504)

# Testcase cp_rs1_corners (Test source rs1 value = 0x0)
li x2, 0x0000000000000000 # initialize rs1
cpop x7, x2 # perform operation
RVTEST_SIGUPD(x5, x0, x7, 512)

# Testcase cp_rs1_corners (Test source rs1 value = 0x1)
li x31, 0x0000000000000001 # initialize rs1
cpop x4, x31 # perform operation
RVTEST_SIGUPD(x5, x0, x4, 520)

# Testcase cp_rs1_corners (Test source rs1 value = 0x2)
li x30, 0x0000000000000002 # initialize rs1
cpop x29, x30 # perform operation
RVTEST_SIGUPD(x5, x0, x29, 528)

# Testcase cp_rs1_corners (Test source rs1 value = 0x8000000000000000)
li x13, 0x8000000000000000 # initialize rs1
cpop x16, x13 # perform operation
RVTEST_SIGUPD(x5, x0, x16, 536)

# Testcase cp_rs1_corners (Test source rs1 value = 0x8000000000000001)
li x6, 0x8000000000000001 # initialize rs1
cpop x8, x6 # perform operation
RVTEST_SIGUPD(x5, x0, x8, 544)

# Testcase cp_rs1_corners (Test source rs1 value = 0x7fffffffffffffff)
li x27, 0x7fffffffffffffff # initialize rs1
cpop x17, x27 # perform operation
RVTEST_SIGUPD(x5, x0, x17, 552)

# Testcase cp_rs1_corners (Test source rs1 value = 0x7ffffffffffffffe)
li x21, 0x7ffffffffffffffe # initialize rs1
cpop x2, x21 # perform operation
RVTEST_SIGUPD(x5, x0, x2, 560)

# Testcase cp_rs1_corners (Test source rs1 value = 0xffffffffffffffff)
li x12, 0xffffffffffffffff # initialize rs1
cpop x11, x12 # perform operation
RVTEST_SIGUPD(x5, x0, x11, 568)

# Testcase cp_rs1_corners (Test source rs1 value = 0xfffffffffffffffe)
li x10, 0xfffffffffffffffe # initialize rs1
cpop x2, x10 # perform operation
RVTEST_SIGUPD(x5, x0, x2, 576)

# Testcase cp_rs1_corners (Test source rs1 value = 0x5bbc887763ae86f2)
li x20, 0x5bbc887763ae86f2 # initialize rs1
cpop x22, x20 # perform operation
RVTEST_SIGUPD(x5, x0, x22, 584)

# Testcase cp_rs1_corners (Test source rs1 value = 0xaaaaaaaaaaaaaaaa)
li x31, 0xaaaaaaaaaaaaaaaa # initialize rs1
cpop x15, x31 # perform operation
RVTEST_SIGUPD(x5, x0, x15, 592)

# Testcase cp_rs1_corners (Test source rs1 value = 0x5555555555555555)
li x2, 0x5555555555555555 # initialize rs1
cpop x6, x2 # perform operation
RVTEST_SIGUPD(x5, x0, x6, 600)

# Testcase cp_rs1_corners (Test source rs1 value = 0xffffffff)
li x23, 0x00000000ffffffff # initialize rs1
cpop x21, x23 # perform operation
RVTEST_SIGUPD(x5, x0, x21, 608)

# Testcase cp_rs1_corners (Test source rs1 value = 0xfffffffe)
li x9, 0x00000000fffffffe # initialize rs1
cpop x26, x9 # perform operation
RVTEST_SIGUPD(x5, x0, x26, 616)

# Testcase cp_rs1_corners (Test source rs1 value = 0x100000000)
li x14, 0x0000000100000000 # initialize rs1
cpop x26, x14 # perform operation
RVTEST_SIGUPD(x5, x0, x26, 624)

# Testcase cp_rs1_corners (Test source rs1 value = 0x100000001)
li x23, 0x0000000100000001 # initialize rs1
cpop x30, x23 # perform operation
RVTEST_SIGUPD(x5, x0, x30, 632)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x0)
li x0, 0x8b64355c807f5280 # initialize rs1
cpop x0, x0 # perform operation
RVTEST_SIGUPD(x5, x0, x0, 640)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x1)
li x1, 0x86a5e6ee9f52286f # initialize rs1
cpop x1, x1 # perform operation
RVTEST_SIGUPD(x5, x0, x1, 648)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x2)
li x2, 0x9835e5e0b584baaa # initialize rs1
cpop x2, x2 # perform operation
RVTEST_SIGUPD(x5, x0, x2, 656)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x3)
li x3, 0x423c3951e87a8423 # initialize rs1
cpop x3, x3 # perform operation
RVTEST_SIGUPD(x5, x0, x3, 664)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x4)
li x4, 0x6f7d9010c0024fcc # initialize rs1
cpop x4, x4 # perform operation
RVTEST_SIGUPD(x5, x0, x4, 672)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x5)
mv x6, x5 # switch signature pointer register to avoid conflict with test
li x5, 0xa871d894050d8b3b # initialize rs1
cpop x5, x5 # perform operation
RVTEST_SIGUPD(x6, x0, x5, 680)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x6)
mv x7, x6 # switch signature pointer register to avoid conflict with test
li x6, 0xa4b73e550d67bea7 # initialize rs1
cpop x6, x6 # perform operation
RVTEST_SIGUPD(x7, x0, x6, 688)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x7)
mv x4, x7 # switch signature pointer register to avoid conflict with test
li x7, 0xbb06822a7d40457c # initialize rs1
cpop x7, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 696)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x8)
li x8, 0x069b0c3c37217a66 # initialize rs1
cpop x8, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 704)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x9)
li x9, 0x0ae48735a2f12d7d # initialize rs1
cpop x9, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 712)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x10)
li x10, 0xfc588edd72f4c995 # initialize rs1
cpop x10, x10 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 720)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x11)
li x11, 0xb38d7a800ca31118 # initialize rs1
cpop x11, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 728)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x12)
li x12, 0xb2b412b6033971ce # initialize rs1
cpop x12, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 736)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x13)
li x13, 0xcb91c2f69850f0ce # initialize rs1
cpop x13, x13 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 744)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x14)
li x14, 0xd0988a66b1bbaa66 # initialize rs1
cpop x14, x14 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 752)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x15)
li x15, 0x71204f587b56c3c7 # initialize rs1
cpop x15, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 760)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x16)
li x16, 0x80639c24040532a8 # initialize rs1
cpop x16, x16 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 768)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x17)
li x17, 0x5c8729d3f5270abc # initialize rs1
cpop x17, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 776)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x18)
li x18, 0x35ba0a3168875e7b # initialize rs1
cpop x18, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 784)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x19)
li x19, 0x83fb979d49832074 # initialize rs1
cpop x19, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 792)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x20)
li x20, 0x7836ab3a556c4845 # initialize rs1
cpop x20, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 800)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x21)
li x21, 0x536e5531b1bc873a # initialize rs1
cpop x21, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 808)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x22)
li x22, 0x01e4dd86f633c230 # initialize rs1
cpop x22, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 816)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x23)
li x23, 0x9c110eb3ac07ceb2 # initialize rs1
cpop x23, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 824)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x24)
li x24, 0xf8afc1a21e6c4617 # initialize rs1
cpop x24, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 832)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x25)
li x25, 0x2fcdccb477b9bb18 # initialize rs1
cpop x25, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 840)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x26)
li x26, 0x808936aa253bca31 # initialize rs1
cpop x26, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 848)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x27)
li x27, 0xb00ae0aacc2dfca5 # initialize rs1
cpop x27, x27 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 856)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x28)
li x28, 0xfdfc604fea73fe6b # initialize rs1
cpop x28, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x28, 864)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x29)
li x29, 0x019e098d7bfe78e1 # initialize rs1
cpop x29, x29 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 872)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x30)
li x30, 0x3c32fee61660b76d # initialize rs1
cpop x30, x30 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 880)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x31)
li x31, 0x88c460a2ad2d8cc3 # initialize rs1
cpop x31, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 888)

# Testcase cp_gpr/fpr_hazard nohaz test
add x18, x29, x13 # perform first operation
cpop x27, x19 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard nohaz test
add x12, x2, x22 # perform first operation
cpop x27, x18 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard nohaz test
add x15, x27, x6 # perform first operation
cpop x5, x1 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard raw test
add x18, x2, x19 # perform first operation
cpop x18, x18 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard raw test
add x11, x15, x12 # perform first operation
cpop x11, x29 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard raw test
add x18, x17, x21 # perform first operation
cpop x17, x23 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard waw test
add x30, x22, x27 # perform first operation
cpop x30, x8 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard waw test
add x17, x10, x26 # perform first operation
cpop x17, x27 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard waw test
add x21, x20, x15 # perform first operation
cpop x21, x7 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard war test
add x8, x20, x12 # perform first operation
cpop x20, x30 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard war test
add x10, x5, x26 # perform first operation
cpop x26, x25 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard war test
add x13, x21, x24 # perform first operation
cpop x26, x20 # perform second (triggering) operation

#.EQU SIGSIZE,896


// ******************
// Tests from: WALLY-COV-rol.S
// ******************


# initialize signature pointer
la x4, begin_signature

    
# Testcase cp_rs1 (Test source rs1 = x0)
li x0, 0x750717fb3d81421c # initialize rs1
li x5, 0x766fc36daeba9655 # initialize rs2
rol x25, x0, x5 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 0)

# Testcase cp_rs1 (Test source rs1 = x1)
li x1, 0x5f411278b82e7449 # initialize rs1
li x19, 0x833a5356f414b925 # initialize rs2
rol x14, x1, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 8)

# Testcase cp_rs1 (Test source rs1 = x2)
li x2, 0xcc79bcb1ae70e896 # initialize rs1
li x7, 0xab60ee60a9970b00 # initialize rs2
rol x5, x2, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x5, 16)

# Testcase cp_rs1 (Test source rs1 = x3)
li x3, 0xb4c086b263f8e100 # initialize rs1
li x20, 0x9dab9650385195fd # initialize rs2
rol x8, x3, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 24)

# Testcase cp_rs1 (Test source rs1 = x4)
mv x5, x4 # switch signature pointer register to avoid conflict with test
li x4, 0x3b6e9f7361af0eea # initialize rs1
li x22, 0x88fa4b72083c69f0 # initialize rs2
rol x12, x4, x22 # perform operation
RVTEST_SIGUPD(x5, x0, x12, 32)

# Testcase cp_rs1 (Test source rs1 = x5)
mv x6, x5 # switch signature pointer register to avoid conflict with test
li x5, 0xcae94555cc8eb5d7 # initialize rs1
li x4, 0xe499a1a5db62f092 # initialize rs2
rol x30, x5, x4 # perform operation
RVTEST_SIGUPD(x6, x0, x30, 40)

# Testcase cp_rs1 (Test source rs1 = x6)
mv x4, x6 # switch signature pointer register to avoid conflict with test
li x6, 0x365b18dcfa45b4e5 # initialize rs1
li x15, 0xaafd7b165b6a17e2 # initialize rs2
rol x7, x6, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 48)

# Testcase cp_rs1 (Test source rs1 = x7)
li x7, 0xcd5013992be790ec # initialize rs1
li x31, 0xee5d4aeb185c51c0 # initialize rs2
rol x12, x7, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 56)

# Testcase cp_rs1 (Test source rs1 = x8)
li x8, 0xf9cf6c79448ab370 # initialize rs1
li x9, 0x0cd6306c0a99e421 # initialize rs2
rol x25, x8, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 64)

# Testcase cp_rs1 (Test source rs1 = x9)
li x9, 0xb7c5951084f43bd7 # initialize rs1
li x17, 0xd56dddf56254bce8 # initialize rs2
rol x25, x9, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 72)

# Testcase cp_rs1 (Test source rs1 = x10)
li x10, 0x45e282c5953e658c # initialize rs1
li x25, 0x8097e20274888436 # initialize rs2
rol x12, x10, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 80)

# Testcase cp_rs1 (Test source rs1 = x11)
li x11, 0x603a7cce49c465d1 # initialize rs1
li x6, 0xd46a60ddb7f7cbe4 # initialize rs2
rol x27, x11, x6 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 88)

# Testcase cp_rs1 (Test source rs1 = x12)
li x12, 0xc1781469ad77b9ee # initialize rs1
li x6, 0x7c364435ae765a06 # initialize rs2
rol x27, x12, x6 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 96)

# Testcase cp_rs1 (Test source rs1 = x13)
li x13, 0x97cdbdb3cd5a20da # initialize rs1
li x23, 0xc97efcffab1d9e5e # initialize rs2
rol x19, x13, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 104)

# Testcase cp_rs1 (Test source rs1 = x14)
li x14, 0x44f89c1dd72eb7bd # initialize rs1
li x6, 0x0288f22f1e399174 # initialize rs2
rol x31, x14, x6 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 112)

# Testcase cp_rs1 (Test source rs1 = x15)
li x15, 0x6e5079f7b90bbc7e # initialize rs1
li x30, 0xfaaf58bfedace1fb # initialize rs2
rol x9, x15, x30 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 120)

# Testcase cp_rs1 (Test source rs1 = x16)
li x16, 0x86630d897280817c # initialize rs1
li x1, 0x72dd4d88fd380e95 # initialize rs2
rol x22, x16, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 128)

# Testcase cp_rs1 (Test source rs1 = x17)
li x17, 0xbb4018360e413260 # initialize rs1
li x23, 0x28f2b6dea7f47351 # initialize rs2
rol x28, x17, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x28, 136)

# Testcase cp_rs1 (Test source rs1 = x18)
li x18, 0xcfb9ed015960ad49 # initialize rs1
li x15, 0x3a663a85eb03465f # initialize rs2
rol x28, x18, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x28, 144)

# Testcase cp_rs1 (Test source rs1 = x19)
li x19, 0x39c67cc83cbcd519 # initialize rs1
li x7, 0xa2412c87e843a076 # initialize rs2
rol x17, x19, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 152)

# Testcase cp_rs1 (Test source rs1 = x20)
li x20, 0xf4b06a72717b42ab # initialize rs1
li x18, 0xea407c7338971b1c # initialize rs2
rol x8, x20, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 160)

# Testcase cp_rs1 (Test source rs1 = x21)
li x21, 0xc326c10febc02150 # initialize rs1
li x24, 0xf2a72bdf2f6eebf7 # initialize rs2
rol x5, x21, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x5, 168)

# Testcase cp_rs1 (Test source rs1 = x22)
li x22, 0x6bc660c9caed698a # initialize rs1
li x15, 0x9d614f561f7eb7b1 # initialize rs2
rol x1, x22, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 176)

# Testcase cp_rs1 (Test source rs1 = x23)
li x23, 0x2ef0887bf18787b3 # initialize rs1
li x22, 0x60c4f0ac110a5b88 # initialize rs2
rol x21, x23, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 184)

# Testcase cp_rs1 (Test source rs1 = x24)
li x24, 0x5a7cf9c53ada2771 # initialize rs1
li x1, 0xad21a5a8e18c53f4 # initialize rs2
rol x20, x24, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 192)

# Testcase cp_rs1 (Test source rs1 = x25)
li x25, 0xea85d8b89b890b15 # initialize rs1
li x13, 0x7ab068fb00785350 # initialize rs2
rol x5, x25, x13 # perform operation
RVTEST_SIGUPD(x4, x0, x5, 200)

# Testcase cp_rs1 (Test source rs1 = x26)
li x26, 0xcbd309950128c99f # initialize rs1
li x6, 0xec2745279f1f8bb5 # initialize rs2
rol x14, x26, x6 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 208)

# Testcase cp_rs1 (Test source rs1 = x27)
li x27, 0x5362835add37f284 # initialize rs1
li x30, 0xe866b3ada47a781c # initialize rs2
rol x14, x27, x30 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 216)

# Testcase cp_rs1 (Test source rs1 = x28)
li x28, 0xb763ff04af3c6298 # initialize rs1
li x21, 0x7f0508a13792b0c0 # initialize rs2
rol x26, x28, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 224)

# Testcase cp_rs1 (Test source rs1 = x29)
li x29, 0x3e19ed8d58d0d91a # initialize rs1
li x20, 0xb6e7d7a3a3427569 # initialize rs2
rol x17, x29, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 232)

# Testcase cp_rs1 (Test source rs1 = x30)
li x30, 0x193db8038fae53d0 # initialize rs1
li x19, 0x742a5a4da7709298 # initialize rs2
rol x6, x30, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x6, 240)

# Testcase cp_rs1 (Test source rs1 = x31)
li x31, 0x6f9e1e05906b66f7 # initialize rs1
li x5, 0x1bf4cb3b75884270 # initialize rs2
rol x6, x31, x5 # perform operation
RVTEST_SIGUPD(x4, x0, x6, 248)

# Testcase cp_rs2 (Test source rs2 = x0)
li x6, 0x39fe612f85991955 # initialize rs1
li x0, 0x5a29a208e1462da7 # initialize rs2
rol x22, x6, x0 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 256)

# Testcase cp_rs2 (Test source rs2 = x1)
li x7, 0x6b2a23667d92f2bd # initialize rs1
li x1, 0x62bea4dc8590c05a # initialize rs2
rol x26, x7, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 264)

# Testcase cp_rs2 (Test source rs2 = x2)
li x18, 0xe18976ca96d1f035 # initialize rs1
li x2, 0xdce9122c7e2697cc # initialize rs2
rol x22, x18, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 272)

# Testcase cp_rs2 (Test source rs2 = x3)
li x22, 0x0ca5a6c4e2301b48 # initialize rs1
li x3, 0x5bf642bce15fcefe # initialize rs2
rol x8, x22, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 280)

# Testcase cp_rs2 (Test source rs2 = x4)
mv x5, x4 # switch signature pointer register to avoid conflict with test
li x6, 0x6caa35b5a1fa463f # initialize rs1
li x4, 0x2758729b1621c3c3 # initialize rs2
rol x29, x6, x4 # perform operation
RVTEST_SIGUPD(x5, x0, x29, 288)

# Testcase cp_rs2 (Test source rs2 = x5)
mv x6, x5 # switch signature pointer register to avoid conflict with test
li x18, 0x3aa03fb4031b8012 # initialize rs1
li x5, 0x1bf1dae7d2b75115 # initialize rs2
rol x3, x18, x5 # perform operation
RVTEST_SIGUPD(x6, x0, x3, 296)

# Testcase cp_rs2 (Test source rs2 = x6)
mv x7, x6 # switch signature pointer register to avoid conflict with test
li x9, 0x46ee678a812de3a5 # initialize rs1
li x6, 0x8b4b449e3e3fb2b3 # initialize rs2
rol x20, x9, x6 # perform operation
RVTEST_SIGUPD(x7, x0, x20, 304)

# Testcase cp_rs2 (Test source rs2 = x7)
mv x4, x7 # switch signature pointer register to avoid conflict with test
li x5, 0x7845804b3163ccd5 # initialize rs1
li x7, 0x822f3b279f177e9e # initialize rs2
rol x26, x5, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 312)

# Testcase cp_rs2 (Test source rs2 = x8)
li x22, 0xa5a4372be337308c # initialize rs1
li x8, 0x18a9f3237d12fcd7 # initialize rs2
rol x24, x22, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 320)

# Testcase cp_rs2 (Test source rs2 = x9)
li x20, 0xf56cee6ee2f345cd # initialize rs1
li x9, 0xba83f04dc87da6bf # initialize rs2
rol x14, x20, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 328)

# Testcase cp_rs2 (Test source rs2 = x10)
li x11, 0xcec50d36353dea52 # initialize rs1
li x10, 0x9a37a101f4709285 # initialize rs2
rol x2, x11, x10 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 336)

# Testcase cp_rs2 (Test source rs2 = x11)
li x6, 0x6353b154c8ce742f # initialize rs1
li x11, 0x2e216180c55e921e # initialize rs2
rol x7, x6, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 344)

# Testcase cp_rs2 (Test source rs2 = x12)
li x28, 0x517cac5adbd1b79f # initialize rs1
li x12, 0x98a33289305aed72 # initialize rs2
rol x8, x28, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 352)

# Testcase cp_rs2 (Test source rs2 = x13)
li x3, 0x43406404b54d5b80 # initialize rs1
li x13, 0xfb57f2ab0060364d # initialize rs2
rol x18, x3, x13 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 360)

# Testcase cp_rs2 (Test source rs2 = x14)
li x13, 0x275da8ba9c38e29f # initialize rs1
li x14, 0xd88912a79c14e26e # initialize rs2
rol x25, x13, x14 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 368)

# Testcase cp_rs2 (Test source rs2 = x15)
li x23, 0xd0cd968ff3161b32 # initialize rs1
li x15, 0x81c08608415bdf66 # initialize rs2
rol x28, x23, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x28, 376)

# Testcase cp_rs2 (Test source rs2 = x16)
li x12, 0x64d56b431e3ae0c4 # initialize rs1
li x16, 0x0d382c0c67bb86b1 # initialize rs2
rol x5, x12, x16 # perform operation
RVTEST_SIGUPD(x4, x0, x5, 384)

# Testcase cp_rs2 (Test source rs2 = x17)
li x1, 0x2f0c31cee276ffbb # initialize rs1
li x17, 0x18f1c0dde11b877c # initialize rs2
rol x11, x1, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 392)

# Testcase cp_rs2 (Test source rs2 = x18)
li x23, 0x92dc209a8015a8b6 # initialize rs1
li x18, 0xf301e9adf67933b2 # initialize rs2
rol x26, x23, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 400)

# Testcase cp_rs2 (Test source rs2 = x19)
li x9, 0x926a047fc891ff1b # initialize rs1
li x19, 0xe2c6e61d755ea3ac # initialize rs2
rol x1, x9, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 408)

# Testcase cp_rs2 (Test source rs2 = x20)
li x15, 0x655e6b0ad9eaf8ce # initialize rs1
li x20, 0x1a59a915f7e99487 # initialize rs2
rol x13, x15, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 416)

# Testcase cp_rs2 (Test source rs2 = x21)
li x15, 0xf2c1cc9578942341 # initialize rs1
li x21, 0xc92b321cae84bdbd # initialize rs2
rol x3, x15, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 424)

# Testcase cp_rs2 (Test source rs2 = x22)
li x23, 0x95490778703190f4 # initialize rs1
li x22, 0x89aa9cb509189079 # initialize rs2
rol x24, x23, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 432)

# Testcase cp_rs2 (Test source rs2 = x23)
li x20, 0xbac6129329c20bc5 # initialize rs1
li x23, 0x27bee55916da1984 # initialize rs2
rol x16, x20, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 440)

# Testcase cp_rs2 (Test source rs2 = x24)
li x21, 0xce0c0ca8901f5272 # initialize rs1
li x24, 0x8f26f7aaf6f88192 # initialize rs2
rol x18, x21, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 448)

# Testcase cp_rs2 (Test source rs2 = x25)
li x16, 0x2de502c9f1907261 # initialize rs1
li x25, 0x55c9181942397223 # initialize rs2
rol x26, x16, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 456)

# Testcase cp_rs2 (Test source rs2 = x26)
li x30, 0xfc562dbec1515e90 # initialize rs1
li x26, 0xba242900e6bc15e9 # initialize rs2
rol x23, x30, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 464)

# Testcase cp_rs2 (Test source rs2 = x27)
li x25, 0xeee2da520f102640 # initialize rs1
li x27, 0xe48794af829cc93e # initialize rs2
rol x1, x25, x27 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 472)

# Testcase cp_rs2 (Test source rs2 = x28)
li x19, 0xd6afb7f835e63709 # initialize rs1
li x28, 0xb78f2270f2f2bb70 # initialize rs2
rol x25, x19, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 480)

# Testcase cp_rs2 (Test source rs2 = x29)
li x28, 0x64b0b2734ef29ff9 # initialize rs1
li x29, 0x97ccdfe07916d70c # initialize rs2
rol x18, x28, x29 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 488)

# Testcase cp_rs2 (Test source rs2 = x30)
li x2, 0xfeaa86ebd6330295 # initialize rs1
li x30, 0x2271c95a108ec495 # initialize rs2
rol x21, x2, x30 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 496)

# Testcase cp_rs2 (Test source rs2 = x31)
li x24, 0xa3cc2f34982d63ac # initialize rs1
li x31, 0x8650a89d5a66fbbd # initialize rs2
rol x28, x24, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x28, 504)

# Testcase cp_rd (Test destination rd = x0)
li x10, 0x49867546befb3d54 # initialize rs1
li x7, 0xb91a266a74553a8f # initialize rs2
rol x0, x10, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x0, 512)

# Testcase cp_rd (Test destination rd = x1)
li x5, 0x8d7cd2621eff9235 # initialize rs1
li x28, 0xb409d46003646fcc # initialize rs2
rol x1, x5, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 520)

# Testcase cp_rd (Test destination rd = x2)
li x3, 0xcf397bde28ff2b2d # initialize rs1
li x22, 0xcbd8e3de64227ac0 # initialize rs2
rol x2, x3, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 528)

# Testcase cp_rd (Test destination rd = x3)
li x16, 0xd0ade9e792569773 # initialize rs1
li x6, 0xd1acb307cd8dd946 # initialize rs2
rol x3, x16, x6 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 536)

# Testcase cp_rd (Test destination rd = x4)
mv x5, x4 # switch signature pointer register to avoid conflict with test
li x21, 0x49d280227a1be1e5 # initialize rs1
li x16, 0xd87297a1e354d07b # initialize rs2
rol x4, x21, x16 # perform operation
RVTEST_SIGUPD(x5, x0, x4, 544)

# Testcase cp_rd (Test destination rd = x5)
mv x6, x5 # switch signature pointer register to avoid conflict with test
li x13, 0x78a6b41bbb190981 # initialize rs1
li x11, 0x98eff22bbc3dca87 # initialize rs2
rol x5, x13, x11 # perform operation
RVTEST_SIGUPD(x6, x0, x5, 552)

# Testcase cp_rd (Test destination rd = x6)
mv x7, x6 # switch signature pointer register to avoid conflict with test
li x2, 0x4b3c21a59b4b326e # initialize rs1
li x26, 0x8979e8e17c5d37c9 # initialize rs2
rol x6, x2, x26 # perform operation
RVTEST_SIGUPD(x7, x0, x6, 560)

# Testcase cp_rd (Test destination rd = x7)
mv x4, x7 # switch signature pointer register to avoid conflict with test
li x13, 0xb83e2950131f2e1a # initialize rs1
li x28, 0x29a1b7929e8dfabf # initialize rs2
rol x7, x13, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 568)

# Testcase cp_rd (Test destination rd = x8)
li x22, 0x391de803b9f2acc3 # initialize rs1
li x6, 0xd6cd46f982794c0c # initialize rs2
rol x8, x22, x6 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 576)

# Testcase cp_rd (Test destination rd = x9)
li x8, 0x2c03df3456c244d7 # initialize rs1
li x3, 0x2d9d21da8b16853f # initialize rs2
rol x9, x8, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 584)

# Testcase cp_rd (Test destination rd = x10)
li x2, 0x4508773b6c6d4c44 # initialize rs1
li x8, 0xa0ddbc77f0136c82 # initialize rs2
rol x10, x2, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 592)

# Testcase cp_rd (Test destination rd = x11)
li x18, 0x7c6b26796b9241ae # initialize rs1
li x3, 0xa1655fb2c6bddf70 # initialize rs2
rol x11, x18, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 600)

# Testcase cp_rd (Test destination rd = x12)
li x10, 0x2b9b8496ce6625bc # initialize rs1
li x20, 0x297b1a7a0228a1bd # initialize rs2
rol x12, x10, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 608)

# Testcase cp_rd (Test destination rd = x13)
li x21, 0x94022cd586b76a0c # initialize rs1
li x3, 0x06bb956ff29711e6 # initialize rs2
rol x13, x21, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 616)

# Testcase cp_rd (Test destination rd = x14)
li x16, 0xe5d06425ac4cf950 # initialize rs1
li x6, 0x3f91ba2035b5e0d1 # initialize rs2
rol x14, x16, x6 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 624)

# Testcase cp_rd (Test destination rd = x15)
li x7, 0x402433853a95b30d # initialize rs1
li x1, 0x7d6534c7c48e998e # initialize rs2
rol x15, x7, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 632)

# Testcase cp_rd (Test destination rd = x16)
li x17, 0x3311acafa52f1ba6 # initialize rs1
li x29, 0x7ff5f04f41fe110a # initialize rs2
rol x16, x17, x29 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 640)

# Testcase cp_rd (Test destination rd = x17)
li x23, 0x4a610dcafc7ad5ec # initialize rs1
li x2, 0x3ed141a2af22cb18 # initialize rs2
rol x17, x23, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 648)

# Testcase cp_rd (Test destination rd = x18)
li x30, 0x18f1a2889a52c044 # initialize rs1
li x31, 0x5994316700a9d3d8 # initialize rs2
rol x18, x30, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 656)

# Testcase cp_rd (Test destination rd = x19)
li x26, 0xc48d067768980051 # initialize rs1
li x31, 0xff3761ef03e7ef3c # initialize rs2
rol x19, x26, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 664)

# Testcase cp_rd (Test destination rd = x20)
li x7, 0x9fa9ba939d8880b6 # initialize rs1
li x1, 0xaf1d34f0cc510cc7 # initialize rs2
rol x20, x7, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 672)

# Testcase cp_rd (Test destination rd = x21)
li x3, 0xf1690a020e7b1152 # initialize rs1
li x9, 0x86661420a837c5f7 # initialize rs2
rol x21, x3, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 680)

# Testcase cp_rd (Test destination rd = x22)
li x31, 0x76457c5e484d9658 # initialize rs1
li x13, 0x2d9d8ea4f75dd03a # initialize rs2
rol x22, x31, x13 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 688)

# Testcase cp_rd (Test destination rd = x23)
li x11, 0x6156e150a8fc250d # initialize rs1
li x8, 0x89d81b150ee71d16 # initialize rs2
rol x23, x11, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 696)

# Testcase cp_rd (Test destination rd = x24)
li x20, 0xdb0d56373fa811c0 # initialize rs1
li x27, 0x6291bd0f8e58cebb # initialize rs2
rol x24, x20, x27 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 704)

# Testcase cp_rd (Test destination rd = x25)
li x19, 0xcae622491dc2f8ed # initialize rs1
li x14, 0xb1010430da871b83 # initialize rs2
rol x25, x19, x14 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 712)

# Testcase cp_rd (Test destination rd = x26)
li x7, 0x312cc832f3b297eb # initialize rs1
li x21, 0x3feafcb6edaaf5da # initialize rs2
rol x26, x7, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 720)

# Testcase cp_rd (Test destination rd = x27)
li x24, 0xa49fe45dcaa84927 # initialize rs1
li x2, 0xbbad5fde601bed90 # initialize rs2
rol x27, x24, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 728)

# Testcase cp_rd (Test destination rd = x28)
li x14, 0x05020d562b0a243b # initialize rs1
li x1, 0x18c5e84e06da52d3 # initialize rs2
rol x28, x14, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x28, 736)

# Testcase cp_rd (Test destination rd = x29)
li x19, 0xc9c42a6191d36392 # initialize rs1
li x7, 0xacd05a9687318f08 # initialize rs2
rol x29, x19, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 744)

# Testcase cp_rd (Test destination rd = x30)
li x8, 0x710e3be9d8c5dfd9 # initialize rs1
li x31, 0x1deb1b42008ab3e6 # initialize rs2
rol x30, x8, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 752)

# Testcase cp_rd (Test destination rd = x31)
li x25, 0x840193e88b5f8aab # initialize rs1
li x22, 0xcf93fb7a80afa8f5 # initialize rs2
rol x31, x25, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 760)

# Testcase cp_rs1_corners (Test source rs1 value = 0x0)
li x25, 0x0000000000000000 # initialize rs1
li x30, 0xf4c909579be209f6 # initialize rs2
rol x16, x25, x30 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 768)

# Testcase cp_rs1_corners (Test source rs1 value = 0x1)
li x12, 0x0000000000000001 # initialize rs1
li x16, 0x108badf59831d468 # initialize rs2
rol x25, x12, x16 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 776)

# Testcase cp_rs1_corners (Test source rs1 value = 0x2)
li x3, 0x0000000000000002 # initialize rs1
li x2, 0xde034e5f70b03a3d # initialize rs2
rol x27, x3, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 784)

# Testcase cp_rs1_corners (Test source rs1 value = 0x8000000000000000)
li x30, 0x8000000000000000 # initialize rs1
li x23, 0xa17f687f367ef240 # initialize rs2
rol x19, x30, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 792)

# Testcase cp_rs1_corners (Test source rs1 value = 0x8000000000000001)
li x15, 0x8000000000000001 # initialize rs1
li x8, 0x2d75690cd3d6ccdf # initialize rs2
rol x10, x15, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 800)

# Testcase cp_rs1_corners (Test source rs1 value = 0x7fffffffffffffff)
li x8, 0x7fffffffffffffff # initialize rs1
li x16, 0x5d2a65854956a03e # initialize rs2
rol x22, x8, x16 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 808)

# Testcase cp_rs1_corners (Test source rs1 value = 0x7ffffffffffffffe)
li x26, 0x7ffffffffffffffe # initialize rs1
li x9, 0x2b5f9e1abd5b5a3f # initialize rs2
rol x31, x26, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 816)

# Testcase cp_rs1_corners (Test source rs1 value = 0xffffffffffffffff)
li x17, 0xffffffffffffffff # initialize rs1
li x15, 0x7eee246ab9698ef8 # initialize rs2
rol x2, x17, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 824)

# Testcase cp_rs1_corners (Test source rs1 value = 0xfffffffffffffffe)
li x25, 0xfffffffffffffffe # initialize rs1
li x12, 0x475df3bb2fbc5b14 # initialize rs2
rol x19, x25, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 832)

# Testcase cp_rs1_corners (Test source rs1 value = 0x5bbc887763ae86f2)
li x12, 0x5bbc887763ae86f2 # initialize rs1
li x20, 0xbd1010bf5f0e3fae # initialize rs2
rol x8, x12, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 840)

# Testcase cp_rs1_corners (Test source rs1 value = 0xaaaaaaaaaaaaaaaa)
li x5, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x8, 0xadc75c0feda3b106 # initialize rs2
rol x28, x5, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x28, 848)

# Testcase cp_rs1_corners (Test source rs1 value = 0x5555555555555555)
li x25, 0x5555555555555555 # initialize rs1
li x17, 0x3ff7b622e6592159 # initialize rs2
rol x5, x25, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x5, 856)

# Testcase cp_rs1_corners (Test source rs1 value = 0xffffffff)
li x20, 0x00000000ffffffff # initialize rs1
li x28, 0x0f962414bc364a0e # initialize rs2
rol x31, x20, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 864)

# Testcase cp_rs1_corners (Test source rs1 value = 0xfffffffe)
li x25, 0x00000000fffffffe # initialize rs1
li x12, 0x518a5bc277c5d1c7 # initialize rs2
rol x29, x25, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 872)

# Testcase cp_rs1_corners (Test source rs1 value = 0x100000000)
li x30, 0x0000000100000000 # initialize rs1
li x23, 0x6a837fc564cc4715 # initialize rs2
rol x8, x30, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 880)

# Testcase cp_rs1_corners (Test source rs1 value = 0x100000001)
li x21, 0x0000000100000001 # initialize rs1
li x3, 0x24483046878b54dd # initialize rs2
rol x11, x21, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 888)

# Testcase cp_rs2_corners (Test source rs2 value = 0x0)
li x19, 0x2313e034f53f568b # initialize rs1
li x25, 0x0000000000000000 # initialize rs2
rol x24, x19, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 896)

# Testcase cp_rs2_corners (Test source rs2 value = 0x1)
li x30, 0xaa3b044822aa0265 # initialize rs1
li x6, 0x0000000000000001 # initialize rs2
rol x5, x30, x6 # perform operation
RVTEST_SIGUPD(x4, x0, x5, 904)

# Testcase cp_rs2_corners (Test source rs2 value = 0x2)
li x31, 0x6e57eb7c822297eb # initialize rs1
li x14, 0x0000000000000002 # initialize rs2
rol x15, x31, x14 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 912)

# Testcase cp_rs2_corners (Test source rs2 value = 0x8000000000000000)
li x10, 0xd7dc7f1894ec9fec # initialize rs1
li x23, 0x8000000000000000 # initialize rs2
rol x3, x10, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 920)

# Testcase cp_rs2_corners (Test source rs2 value = 0x8000000000000001)
li x26, 0xc7f6333b067070b8 # initialize rs1
li x8, 0x8000000000000001 # initialize rs2
rol x10, x26, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 928)

# Testcase cp_rs2_corners (Test source rs2 value = 0x7fffffffffffffff)
li x2, 0x551d9e2284b137b8 # initialize rs1
li x18, 0x7fffffffffffffff # initialize rs2
rol x12, x2, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 936)

# Testcase cp_rs2_corners (Test source rs2 value = 0x7ffffffffffffffe)
li x10, 0xb30620d5f53e3790 # initialize rs1
li x28, 0x7ffffffffffffffe # initialize rs2
rol x30, x10, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 944)

# Testcase cp_rs2_corners (Test source rs2 value = 0xffffffffffffffff)
li x15, 0x6d5aaf1452d716f6 # initialize rs1
li x3, 0xffffffffffffffff # initialize rs2
rol x28, x15, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x28, 952)

# Testcase cp_rs2_corners (Test source rs2 value = 0xfffffffffffffffe)
li x25, 0xeacc46f03dc6af72 # initialize rs1
li x13, 0xfffffffffffffffe # initialize rs2
rol x2, x25, x13 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 960)

# Testcase cp_rs2_corners (Test source rs2 value = 0x5bbc887763ae86f2)
li x28, 0x4dabae7ca91315c2 # initialize rs1
li x30, 0x5bbc887763ae86f2 # initialize rs2
rol x2, x28, x30 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 968)

# Testcase cp_rs2_corners (Test source rs2 value = 0xaaaaaaaaaaaaaaaa)
li x16, 0xceeb20207fac4305 # initialize rs1
li x14, 0xaaaaaaaaaaaaaaaa # initialize rs2
rol x27, x16, x14 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 976)

# Testcase cp_rs2_corners (Test source rs2 value = 0x5555555555555555)
li x11, 0x8c5c5cc1578472e1 # initialize rs1
li x8, 0x5555555555555555 # initialize rs2
rol x31, x11, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 984)

# Testcase cp_rs2_corners (Test source rs2 value = 0xffffffff)
li x11, 0xf4c5fcee92ccbfeb # initialize rs1
li x27, 0x00000000ffffffff # initialize rs2
rol x12, x11, x27 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 992)

# Testcase cp_rs2_corners (Test source rs2 value = 0xfffffffe)
li x20, 0x84f160e8e0b9e89e # initialize rs1
li x13, 0x00000000fffffffe # initialize rs2
rol x17, x20, x13 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 1000)

# Testcase cp_rs2_corners (Test source rs2 value = 0x100000000)
li x20, 0xea0575cde7e775ff # initialize rs1
li x19, 0x0000000100000000 # initialize rs2
rol x17, x20, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 1008)

# Testcase cp_rs2_corners (Test source rs2 value = 0x100000001)
li x17, 0xe74f9489153e0478 # initialize rs1
li x31, 0x0000000100000001 # initialize rs2
rol x24, x17, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 1016)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0x0)
li x20, 0x0000000000000000 # initialize rs1
li x25, 0x0000000000000000 # initialize rs2
rol x5, x20, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x5, 1024)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0x1)
li x11, 0x0000000000000000 # initialize rs1
li x27, 0x0000000000000001 # initialize rs2
rol x16, x11, x27 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 1032)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0x2)
li x7, 0x0000000000000000 # initialize rs1
li x5, 0x0000000000000002 # initialize rs2
rol x18, x7, x5 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 1040)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0x8000000000000000)
li x12, 0x0000000000000000 # initialize rs1
li x29, 0x8000000000000000 # initialize rs2
rol x15, x12, x29 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 1048)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0x8000000000000001)
li x23, 0x0000000000000000 # initialize rs1
li x22, 0x8000000000000001 # initialize rs2
rol x24, x23, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 1056)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0x7fffffffffffffff)
li x17, 0x0000000000000000 # initialize rs1
li x31, 0x7fffffffffffffff # initialize rs2
rol x1, x17, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 1064)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0x7ffffffffffffffe)
li x13, 0x0000000000000000 # initialize rs1
li x28, 0x7ffffffffffffffe # initialize rs2
rol x29, x13, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 1072)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0xffffffffffffffff)
li x28, 0x0000000000000000 # initialize rs1
li x9, 0xffffffffffffffff # initialize rs2
rol x8, x28, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 1080)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0xfffffffffffffffe)
li x25, 0x0000000000000000 # initialize rs1
li x19, 0xfffffffffffffffe # initialize rs2
rol x30, x25, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 1088)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0x5bbc887763ae86f2)
li x20, 0x0000000000000000 # initialize rs1
li x21, 0x5bbc887763ae86f2 # initialize rs2
rol x2, x20, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 1096)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0xaaaaaaaaaaaaaaaa)
li x25, 0x0000000000000000 # initialize rs1
li x20, 0xaaaaaaaaaaaaaaaa # initialize rs2
rol x27, x25, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 1104)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0x5555555555555555)
li x5, 0x0000000000000000 # initialize rs1
li x8, 0x5555555555555555 # initialize rs2
rol x14, x5, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 1112)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0xffffffff)
li x10, 0x0000000000000000 # initialize rs1
li x8, 0x00000000ffffffff # initialize rs2
rol x11, x10, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 1120)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0xfffffffe)
li x29, 0x0000000000000000 # initialize rs1
li x25, 0x00000000fffffffe # initialize rs2
rol x24, x29, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 1128)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0x100000000)
li x8, 0x0000000000000000 # initialize rs1
li x26, 0x0000000100000000 # initialize rs2
rol x6, x8, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x6, 1136)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0x100000001)
li x31, 0x0000000000000000 # initialize rs1
li x29, 0x0000000100000001 # initialize rs2
rol x13, x31, x29 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 1144)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0x0)
li x10, 0x0000000000000001 # initialize rs1
li x31, 0x0000000000000000 # initialize rs2
rol x6, x10, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x6, 1152)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0x1)
li x22, 0x0000000000000001 # initialize rs1
li x20, 0x0000000000000001 # initialize rs2
rol x10, x22, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 1160)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0x2)
li x21, 0x0000000000000001 # initialize rs1
li x10, 0x0000000000000002 # initialize rs2
rol x1, x21, x10 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 1168)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0x8000000000000000)
li x3, 0x0000000000000001 # initialize rs1
li x24, 0x8000000000000000 # initialize rs2
rol x19, x3, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 1176)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0x8000000000000001)
li x24, 0x0000000000000001 # initialize rs1
li x2, 0x8000000000000001 # initialize rs2
rol x28, x24, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x28, 1184)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0x7fffffffffffffff)
li x25, 0x0000000000000001 # initialize rs1
li x26, 0x7fffffffffffffff # initialize rs2
rol x31, x25, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 1192)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0x7ffffffffffffffe)
li x6, 0x0000000000000001 # initialize rs1
li x19, 0x7ffffffffffffffe # initialize rs2
rol x16, x6, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 1200)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0xffffffffffffffff)
li x5, 0x0000000000000001 # initialize rs1
li x1, 0xffffffffffffffff # initialize rs2
rol x23, x5, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 1208)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0xfffffffffffffffe)
li x29, 0x0000000000000001 # initialize rs1
li x18, 0xfffffffffffffffe # initialize rs2
rol x6, x29, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x6, 1216)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0x5bbc887763ae86f2)
li x24, 0x0000000000000001 # initialize rs1
li x5, 0x5bbc887763ae86f2 # initialize rs2
rol x7, x24, x5 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 1224)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0xaaaaaaaaaaaaaaaa)
li x9, 0x0000000000000001 # initialize rs1
li x11, 0xaaaaaaaaaaaaaaaa # initialize rs2
rol x13, x9, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 1232)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0x5555555555555555)
li x18, 0x0000000000000001 # initialize rs1
li x12, 0x5555555555555555 # initialize rs2
rol x20, x18, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 1240)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0xffffffff)
li x10, 0x0000000000000001 # initialize rs1
li x28, 0x00000000ffffffff # initialize rs2
rol x31, x10, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 1248)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0xfffffffe)
li x29, 0x0000000000000001 # initialize rs1
li x6, 0x00000000fffffffe # initialize rs2
rol x7, x29, x6 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 1256)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0x100000000)
li x16, 0x0000000000000001 # initialize rs1
li x10, 0x0000000100000000 # initialize rs2
rol x22, x16, x10 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 1264)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0x100000001)
li x19, 0x0000000000000001 # initialize rs1
li x22, 0x0000000100000001 # initialize rs2
rol x12, x19, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 1272)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0x0)
li x1, 0x0000000000000002 # initialize rs1
li x24, 0x0000000000000000 # initialize rs2
rol x7, x1, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 1280)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0x1)
li x13, 0x0000000000000002 # initialize rs1
li x25, 0x0000000000000001 # initialize rs2
rol x28, x13, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x28, 1288)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0x2)
li x26, 0x0000000000000002 # initialize rs1
li x1, 0x0000000000000002 # initialize rs2
rol x18, x26, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 1296)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0x8000000000000000)
li x14, 0x0000000000000002 # initialize rs1
li x25, 0x8000000000000000 # initialize rs2
rol x18, x14, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 1304)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0x8000000000000001)
li x5, 0x0000000000000002 # initialize rs1
li x12, 0x8000000000000001 # initialize rs2
rol x13, x5, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 1312)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0x7fffffffffffffff)
li x25, 0x0000000000000002 # initialize rs1
li x20, 0x7fffffffffffffff # initialize rs2
rol x13, x25, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 1320)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0x7ffffffffffffffe)
li x21, 0x0000000000000002 # initialize rs1
li x19, 0x7ffffffffffffffe # initialize rs2
rol x16, x21, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 1328)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0xffffffffffffffff)
li x5, 0x0000000000000002 # initialize rs1
li x2, 0xffffffffffffffff # initialize rs2
rol x23, x5, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 1336)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0xfffffffffffffffe)
li x29, 0x0000000000000002 # initialize rs1
li x13, 0xfffffffffffffffe # initialize rs2
rol x1, x29, x13 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 1344)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0x5bbc887763ae86f2)
li x16, 0x0000000000000002 # initialize rs1
li x13, 0x5bbc887763ae86f2 # initialize rs2
rol x15, x16, x13 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 1352)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0xaaaaaaaaaaaaaaaa)
li x19, 0x0000000000000002 # initialize rs1
li x26, 0xaaaaaaaaaaaaaaaa # initialize rs2
rol x3, x19, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 1360)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0x5555555555555555)
li x7, 0x0000000000000002 # initialize rs1
li x9, 0x5555555555555555 # initialize rs2
rol x21, x7, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 1368)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0xffffffff)
li x25, 0x0000000000000002 # initialize rs1
li x15, 0x00000000ffffffff # initialize rs2
rol x31, x25, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 1376)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0xfffffffe)
li x12, 0x0000000000000002 # initialize rs1
li x15, 0x00000000fffffffe # initialize rs2
rol x10, x12, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 1384)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0x100000000)
li x5, 0x0000000000000002 # initialize rs1
li x22, 0x0000000100000000 # initialize rs2
rol x13, x5, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 1392)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0x100000001)
li x8, 0x0000000000000002 # initialize rs1
li x31, 0x0000000100000001 # initialize rs2
rol x3, x8, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 1400)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0x0)
li x16, 0x8000000000000000 # initialize rs1
li x28, 0x0000000000000000 # initialize rs2
rol x17, x16, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 1408)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0x1)
li x3, 0x8000000000000000 # initialize rs1
li x26, 0x0000000000000001 # initialize rs2
rol x6, x3, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x6, 1416)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0x2)
li x27, 0x8000000000000000 # initialize rs1
li x2, 0x0000000000000002 # initialize rs2
rol x22, x27, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 1424)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0x8000000000000000)
li x26, 0x8000000000000000 # initialize rs1
li x2, 0x8000000000000000 # initialize rs2
rol x15, x26, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 1432)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0x8000000000000001)
li x29, 0x8000000000000000 # initialize rs1
li x28, 0x8000000000000001 # initialize rs2
rol x3, x29, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 1440)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0x7fffffffffffffff)
li x21, 0x8000000000000000 # initialize rs1
li x15, 0x7fffffffffffffff # initialize rs2
rol x10, x21, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 1448)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0x7ffffffffffffffe)
li x31, 0x8000000000000000 # initialize rs1
li x5, 0x7ffffffffffffffe # initialize rs2
rol x10, x31, x5 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 1456)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0xffffffffffffffff)
li x9, 0x8000000000000000 # initialize rs1
li x12, 0xffffffffffffffff # initialize rs2
rol x8, x9, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 1464)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0xfffffffffffffffe)
li x29, 0x8000000000000000 # initialize rs1
li x7, 0xfffffffffffffffe # initialize rs2
rol x5, x29, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x5, 1472)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0x5bbc887763ae86f2)
li x8, 0x8000000000000000 # initialize rs1
li x25, 0x5bbc887763ae86f2 # initialize rs2
rol x29, x8, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 1480)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0xaaaaaaaaaaaaaaaa)
li x10, 0x8000000000000000 # initialize rs1
li x6, 0xaaaaaaaaaaaaaaaa # initialize rs2
rol x27, x10, x6 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 1488)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0x5555555555555555)
li x29, 0x8000000000000000 # initialize rs1
li x6, 0x5555555555555555 # initialize rs2
rol x24, x29, x6 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 1496)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0xffffffff)
li x16, 0x8000000000000000 # initialize rs1
li x25, 0x00000000ffffffff # initialize rs2
rol x8, x16, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 1504)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0xfffffffe)
li x22, 0x8000000000000000 # initialize rs1
li x21, 0x00000000fffffffe # initialize rs2
rol x30, x22, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 1512)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0x100000000)
li x15, 0x8000000000000000 # initialize rs1
li x13, 0x0000000100000000 # initialize rs2
rol x21, x15, x13 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 1520)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0x100000001)
li x3, 0x8000000000000000 # initialize rs1
li x30, 0x0000000100000001 # initialize rs2
rol x27, x3, x30 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 1528)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0x0)
li x11, 0x8000000000000001 # initialize rs1
li x24, 0x0000000000000000 # initialize rs2
rol x2, x11, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 1536)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0x1)
li x28, 0x8000000000000001 # initialize rs1
li x15, 0x0000000000000001 # initialize rs2
rol x16, x28, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 1544)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0x2)
li x2, 0x8000000000000001 # initialize rs1
li x24, 0x0000000000000002 # initialize rs2
rol x17, x2, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 1552)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0x8000000000000000)
li x25, 0x8000000000000001 # initialize rs1
li x31, 0x8000000000000000 # initialize rs2
rol x23, x25, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 1560)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0x8000000000000001)
li x28, 0x8000000000000001 # initialize rs1
li x24, 0x8000000000000001 # initialize rs2
rol x26, x28, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 1568)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0x7fffffffffffffff)
li x29, 0x8000000000000001 # initialize rs1
li x1, 0x7fffffffffffffff # initialize rs2
rol x12, x29, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 1576)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0x7ffffffffffffffe)
li x16, 0x8000000000000001 # initialize rs1
li x17, 0x7ffffffffffffffe # initialize rs2
rol x12, x16, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 1584)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0xffffffffffffffff)
li x11, 0x8000000000000001 # initialize rs1
li x9, 0xffffffffffffffff # initialize rs2
rol x18, x11, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 1592)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0xfffffffffffffffe)
li x9, 0x8000000000000001 # initialize rs1
li x7, 0xfffffffffffffffe # initialize rs2
rol x1, x9, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 1600)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0x5bbc887763ae86f2)
li x31, 0x8000000000000001 # initialize rs1
li x23, 0x5bbc887763ae86f2 # initialize rs2
rol x29, x31, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 1608)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0xaaaaaaaaaaaaaaaa)
li x3, 0x8000000000000001 # initialize rs1
li x19, 0xaaaaaaaaaaaaaaaa # initialize rs2
rol x22, x3, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 1616)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0x5555555555555555)
li x23, 0x8000000000000001 # initialize rs1
li x8, 0x5555555555555555 # initialize rs2
rol x10, x23, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 1624)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0xffffffff)
li x29, 0x8000000000000001 # initialize rs1
li x5, 0x00000000ffffffff # initialize rs2
rol x15, x29, x5 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 1632)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0xfffffffe)
li x27, 0x8000000000000001 # initialize rs1
li x5, 0x00000000fffffffe # initialize rs2
rol x24, x27, x5 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 1640)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0x100000000)
li x2, 0x8000000000000001 # initialize rs1
li x23, 0x0000000100000000 # initialize rs2
rol x7, x2, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 1648)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0x100000001)
li x31, 0x8000000000000001 # initialize rs1
li x7, 0x0000000100000001 # initialize rs2
rol x16, x31, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 1656)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0x0)
li x7, 0x7fffffffffffffff # initialize rs1
li x29, 0x0000000000000000 # initialize rs2
rol x16, x7, x29 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 1664)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0x1)
li x29, 0x7fffffffffffffff # initialize rs1
li x16, 0x0000000000000001 # initialize rs2
rol x3, x29, x16 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 1672)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0x2)
li x16, 0x7fffffffffffffff # initialize rs1
li x27, 0x0000000000000002 # initialize rs2
rol x13, x16, x27 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 1680)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0x8000000000000000)
li x11, 0x7fffffffffffffff # initialize rs1
li x6, 0x8000000000000000 # initialize rs2
rol x31, x11, x6 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 1688)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0x8000000000000001)
li x7, 0x7fffffffffffffff # initialize rs1
li x3, 0x8000000000000001 # initialize rs2
rol x17, x7, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 1696)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0x7fffffffffffffff)
li x20, 0x7fffffffffffffff # initialize rs1
li x10, 0x7fffffffffffffff # initialize rs2
rol x13, x20, x10 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 1704)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0x7ffffffffffffffe)
li x24, 0x7fffffffffffffff # initialize rs1
li x5, 0x7ffffffffffffffe # initialize rs2
rol x28, x24, x5 # perform operation
RVTEST_SIGUPD(x4, x0, x28, 1712)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0xffffffffffffffff)
li x8, 0x7fffffffffffffff # initialize rs1
li x21, 0xffffffffffffffff # initialize rs2
rol x9, x8, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 1720)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0xfffffffffffffffe)
li x2, 0x7fffffffffffffff # initialize rs1
li x18, 0xfffffffffffffffe # initialize rs2
rol x9, x2, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 1728)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0x5bbc887763ae86f2)
li x29, 0x7fffffffffffffff # initialize rs1
li x19, 0x5bbc887763ae86f2 # initialize rs2
rol x25, x29, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 1736)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0xaaaaaaaaaaaaaaaa)
li x9, 0x7fffffffffffffff # initialize rs1
li x2, 0xaaaaaaaaaaaaaaaa # initialize rs2
rol x31, x9, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 1744)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0x5555555555555555)
li x30, 0x7fffffffffffffff # initialize rs1
li x22, 0x5555555555555555 # initialize rs2
rol x8, x30, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 1752)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0xffffffff)
li x12, 0x7fffffffffffffff # initialize rs1
li x7, 0x00000000ffffffff # initialize rs2
rol x11, x12, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 1760)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0xfffffffe)
li x14, 0x7fffffffffffffff # initialize rs1
li x21, 0x00000000fffffffe # initialize rs2
rol x6, x14, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x6, 1768)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0x100000000)
li x14, 0x7fffffffffffffff # initialize rs1
li x9, 0x0000000100000000 # initialize rs2
rol x18, x14, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 1776)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0x100000001)
li x9, 0x7fffffffffffffff # initialize rs1
li x20, 0x0000000100000001 # initialize rs2
rol x24, x9, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 1784)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0x0)
li x27, 0x7ffffffffffffffe # initialize rs1
li x2, 0x0000000000000000 # initialize rs2
rol x21, x27, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 1792)
addi x4, x4, 1800 # increment signature pointer and reset offset

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0x1)
li x22, 0x7ffffffffffffffe # initialize rs1
li x10, 0x0000000000000001 # initialize rs2
rol x29, x22, x10 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 0)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0x2)
li x27, 0x7ffffffffffffffe # initialize rs1
li x18, 0x0000000000000002 # initialize rs2
rol x30, x27, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 8)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0x8000000000000000)
li x24, 0x7ffffffffffffffe # initialize rs1
li x27, 0x8000000000000000 # initialize rs2
rol x12, x24, x27 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 16)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0x8000000000000001)
li x16, 0x7ffffffffffffffe # initialize rs1
li x2, 0x8000000000000001 # initialize rs2
rol x3, x16, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 24)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0x7fffffffffffffff)
li x23, 0x7ffffffffffffffe # initialize rs1
li x6, 0x7fffffffffffffff # initialize rs2
rol x24, x23, x6 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 32)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0x7ffffffffffffffe)
li x16, 0x7ffffffffffffffe # initialize rs1
li x23, 0x7ffffffffffffffe # initialize rs2
rol x18, x16, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 40)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0xffffffffffffffff)
li x28, 0x7ffffffffffffffe # initialize rs1
li x13, 0xffffffffffffffff # initialize rs2
rol x29, x28, x13 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 48)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0xfffffffffffffffe)
li x23, 0x7ffffffffffffffe # initialize rs1
li x17, 0xfffffffffffffffe # initialize rs2
rol x16, x23, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 56)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0x5bbc887763ae86f2)
li x13, 0x7ffffffffffffffe # initialize rs1
li x6, 0x5bbc887763ae86f2 # initialize rs2
rol x22, x13, x6 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 64)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0xaaaaaaaaaaaaaaaa)
li x16, 0x7ffffffffffffffe # initialize rs1
li x14, 0xaaaaaaaaaaaaaaaa # initialize rs2
rol x15, x16, x14 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 72)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0x5555555555555555)
li x26, 0x7ffffffffffffffe # initialize rs1
li x22, 0x5555555555555555 # initialize rs2
rol x3, x26, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 80)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0xffffffff)
li x13, 0x7ffffffffffffffe # initialize rs1
li x17, 0x00000000ffffffff # initialize rs2
rol x7, x13, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 88)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0xfffffffe)
li x27, 0x7ffffffffffffffe # initialize rs1
li x10, 0x00000000fffffffe # initialize rs2
rol x14, x27, x10 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 96)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0x100000000)
li x30, 0x7ffffffffffffffe # initialize rs1
li x17, 0x0000000100000000 # initialize rs2
rol x13, x30, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 104)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0x100000001)
li x28, 0x7ffffffffffffffe # initialize rs1
li x7, 0x0000000100000001 # initialize rs2
rol x29, x28, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 112)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0x0)
li x23, 0xffffffffffffffff # initialize rs1
li x7, 0x0000000000000000 # initialize rs2
rol x14, x23, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 120)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0x1)
li x9, 0xffffffffffffffff # initialize rs1
li x29, 0x0000000000000001 # initialize rs2
rol x18, x9, x29 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 128)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0x2)
li x3, 0xffffffffffffffff # initialize rs1
li x14, 0x0000000000000002 # initialize rs2
rol x26, x3, x14 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 136)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0x8000000000000000)
li x6, 0xffffffffffffffff # initialize rs1
li x30, 0x8000000000000000 # initialize rs2
rol x11, x6, x30 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 144)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0x8000000000000001)
li x14, 0xffffffffffffffff # initialize rs1
li x28, 0x8000000000000001 # initialize rs2
rol x23, x14, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 152)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0x7fffffffffffffff)
li x20, 0xffffffffffffffff # initialize rs1
li x17, 0x7fffffffffffffff # initialize rs2
rol x6, x20, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x6, 160)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0x7ffffffffffffffe)
li x17, 0xffffffffffffffff # initialize rs1
li x20, 0x7ffffffffffffffe # initialize rs2
rol x9, x17, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 168)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0xffffffffffffffff)
li x17, 0xffffffffffffffff # initialize rs1
li x2, 0xffffffffffffffff # initialize rs2
rol x12, x17, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 176)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0xfffffffffffffffe)
li x16, 0xffffffffffffffff # initialize rs1
li x23, 0xfffffffffffffffe # initialize rs2
rol x5, x16, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x5, 184)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0x5bbc887763ae86f2)
li x25, 0xffffffffffffffff # initialize rs1
li x28, 0x5bbc887763ae86f2 # initialize rs2
rol x6, x25, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x6, 192)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0xaaaaaaaaaaaaaaaa)
li x27, 0xffffffffffffffff # initialize rs1
li x11, 0xaaaaaaaaaaaaaaaa # initialize rs2
rol x26, x27, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 200)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0x5555555555555555)
li x25, 0xffffffffffffffff # initialize rs1
li x5, 0x5555555555555555 # initialize rs2
rol x3, x25, x5 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 208)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0xffffffff)
li x23, 0xffffffffffffffff # initialize rs1
li x1, 0x00000000ffffffff # initialize rs2
rol x14, x23, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 216)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0xfffffffe)
li x11, 0xffffffffffffffff # initialize rs1
li x28, 0x00000000fffffffe # initialize rs2
rol x13, x11, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 224)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0x100000000)
li x20, 0xffffffffffffffff # initialize rs1
li x19, 0x0000000100000000 # initialize rs2
rol x21, x20, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 232)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0x100000001)
li x5, 0xffffffffffffffff # initialize rs1
li x29, 0x0000000100000001 # initialize rs2
rol x30, x5, x29 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 240)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0x0)
li x5, 0xfffffffffffffffe # initialize rs1
li x15, 0x0000000000000000 # initialize rs2
rol x24, x5, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 248)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0x1)
li x10, 0xfffffffffffffffe # initialize rs1
li x31, 0x0000000000000001 # initialize rs2
rol x2, x10, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 256)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0x2)
li x12, 0xfffffffffffffffe # initialize rs1
li x22, 0x0000000000000002 # initialize rs2
rol x28, x12, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x28, 264)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0x8000000000000000)
li x12, 0xfffffffffffffffe # initialize rs1
li x5, 0x8000000000000000 # initialize rs2
rol x6, x12, x5 # perform operation
RVTEST_SIGUPD(x4, x0, x6, 272)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0x8000000000000001)
li x16, 0xfffffffffffffffe # initialize rs1
li x29, 0x8000000000000001 # initialize rs2
rol x26, x16, x29 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 280)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0x7fffffffffffffff)
li x2, 0xfffffffffffffffe # initialize rs1
li x31, 0x7fffffffffffffff # initialize rs2
rol x8, x2, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 288)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0x7ffffffffffffffe)
li x24, 0xfffffffffffffffe # initialize rs1
li x26, 0x7ffffffffffffffe # initialize rs2
rol x19, x24, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 296)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0xffffffffffffffff)
li x14, 0xfffffffffffffffe # initialize rs1
li x17, 0xffffffffffffffff # initialize rs2
rol x22, x14, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 304)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0xfffffffffffffffe)
li x30, 0xfffffffffffffffe # initialize rs1
li x5, 0xfffffffffffffffe # initialize rs2
rol x21, x30, x5 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 312)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0x5bbc887763ae86f2)
li x20, 0xfffffffffffffffe # initialize rs1
li x10, 0x5bbc887763ae86f2 # initialize rs2
rol x16, x20, x10 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 320)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0xaaaaaaaaaaaaaaaa)
li x9, 0xfffffffffffffffe # initialize rs1
li x28, 0xaaaaaaaaaaaaaaaa # initialize rs2
rol x20, x9, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 328)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0x5555555555555555)
li x9, 0xfffffffffffffffe # initialize rs1
li x23, 0x5555555555555555 # initialize rs2
rol x30, x9, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 336)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0xffffffff)
li x3, 0xfffffffffffffffe # initialize rs1
li x11, 0x00000000ffffffff # initialize rs2
rol x27, x3, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 344)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0xfffffffe)
li x26, 0xfffffffffffffffe # initialize rs1
li x17, 0x00000000fffffffe # initialize rs2
rol x10, x26, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 352)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0x100000000)
li x13, 0xfffffffffffffffe # initialize rs1
li x7, 0x0000000100000000 # initialize rs2
rol x2, x13, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 360)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0x100000001)
li x8, 0xfffffffffffffffe # initialize rs1
li x11, 0x0000000100000001 # initialize rs2
rol x20, x8, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 368)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0x0)
li x23, 0x5bbc887763ae86f2 # initialize rs1
li x26, 0x0000000000000000 # initialize rs2
rol x24, x23, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 376)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0x1)
li x14, 0x5bbc887763ae86f2 # initialize rs1
li x19, 0x0000000000000001 # initialize rs2
rol x27, x14, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 384)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0x2)
li x8, 0x5bbc887763ae86f2 # initialize rs1
li x15, 0x0000000000000002 # initialize rs2
rol x2, x8, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 392)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0x8000000000000000)
li x26, 0x5bbc887763ae86f2 # initialize rs1
li x23, 0x8000000000000000 # initialize rs2
rol x22, x26, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 400)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0x8000000000000001)
li x30, 0x5bbc887763ae86f2 # initialize rs1
li x25, 0x8000000000000001 # initialize rs2
rol x8, x30, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 408)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0x7fffffffffffffff)
li x19, 0x5bbc887763ae86f2 # initialize rs1
li x12, 0x7fffffffffffffff # initialize rs2
rol x26, x19, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 416)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0x7ffffffffffffffe)
li x27, 0x5bbc887763ae86f2 # initialize rs1
li x29, 0x7ffffffffffffffe # initialize rs2
rol x28, x27, x29 # perform operation
RVTEST_SIGUPD(x4, x0, x28, 424)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0xffffffffffffffff)
li x30, 0x5bbc887763ae86f2 # initialize rs1
li x15, 0xffffffffffffffff # initialize rs2
rol x24, x30, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 432)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0xfffffffffffffffe)
li x25, 0x5bbc887763ae86f2 # initialize rs1
li x22, 0xfffffffffffffffe # initialize rs2
rol x11, x25, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 440)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0x5bbc887763ae86f2)
li x10, 0x5bbc887763ae86f2 # initialize rs1
li x22, 0x5bbc887763ae86f2 # initialize rs2
rol x12, x10, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 448)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0xaaaaaaaaaaaaaaaa)
li x20, 0x5bbc887763ae86f2 # initialize rs1
li x6, 0xaaaaaaaaaaaaaaaa # initialize rs2
rol x12, x20, x6 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 456)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0x5555555555555555)
li x25, 0x5bbc887763ae86f2 # initialize rs1
li x21, 0x5555555555555555 # initialize rs2
rol x6, x25, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x6, 464)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0xffffffff)
li x14, 0x5bbc887763ae86f2 # initialize rs1
li x17, 0x00000000ffffffff # initialize rs2
rol x16, x14, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 472)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0xfffffffe)
li x10, 0x5bbc887763ae86f2 # initialize rs1
li x27, 0x00000000fffffffe # initialize rs2
rol x14, x10, x27 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 480)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0x100000000)
li x20, 0x5bbc887763ae86f2 # initialize rs1
li x11, 0x0000000100000000 # initialize rs2
rol x28, x20, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x28, 488)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0x100000001)
li x8, 0x5bbc887763ae86f2 # initialize rs1
li x2, 0x0000000100000001 # initialize rs2
rol x27, x8, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 496)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0x0)
li x25, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x12, 0x0000000000000000 # initialize rs2
rol x15, x25, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 504)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0x1)
li x17, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x19, 0x0000000000000001 # initialize rs2
rol x14, x17, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 512)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0x2)
li x6, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x24, 0x0000000000000002 # initialize rs2
rol x31, x6, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 520)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0x8000000000000000)
li x25, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x28, 0x8000000000000000 # initialize rs2
rol x2, x25, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 528)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0x8000000000000001)
li x2, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x25, 0x8000000000000001 # initialize rs2
rol x11, x2, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 536)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0x7fffffffffffffff)
li x14, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x13, 0x7fffffffffffffff # initialize rs2
rol x10, x14, x13 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 544)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0x7ffffffffffffffe)
li x18, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x13, 0x7ffffffffffffffe # initialize rs2
rol x3, x18, x13 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 552)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0xffffffffffffffff)
li x9, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x27, 0xffffffffffffffff # initialize rs2
rol x28, x9, x27 # perform operation
RVTEST_SIGUPD(x4, x0, x28, 560)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0xfffffffffffffffe)
li x16, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x19, 0xfffffffffffffffe # initialize rs2
rol x22, x16, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 568)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0x5bbc887763ae86f2)
li x22, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x13, 0x5bbc887763ae86f2 # initialize rs2
rol x18, x22, x13 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 576)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0xaaaaaaaaaaaaaaaa)
li x19, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x23, 0xaaaaaaaaaaaaaaaa # initialize rs2
rol x20, x19, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 584)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0x5555555555555555)
li x15, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x28, 0x5555555555555555 # initialize rs2
rol x27, x15, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 592)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0xffffffff)
li x13, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x19, 0x00000000ffffffff # initialize rs2
rol x17, x13, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 600)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0xfffffffe)
li x23, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x13, 0x00000000fffffffe # initialize rs2
rol x3, x23, x13 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 608)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0x100000000)
li x24, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x20, 0x0000000100000000 # initialize rs2
rol x6, x24, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x6, 616)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0x100000001)
li x3, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x27, 0x0000000100000001 # initialize rs2
rol x1, x3, x27 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 624)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0x0)
li x29, 0x5555555555555555 # initialize rs1
li x10, 0x0000000000000000 # initialize rs2
rol x30, x29, x10 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 632)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0x1)
li x21, 0x5555555555555555 # initialize rs1
li x25, 0x0000000000000001 # initialize rs2
rol x31, x21, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 640)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0x2)
li x7, 0x5555555555555555 # initialize rs1
li x10, 0x0000000000000002 # initialize rs2
rol x17, x7, x10 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 648)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0x8000000000000000)
li x10, 0x5555555555555555 # initialize rs1
li x1, 0x8000000000000000 # initialize rs2
rol x23, x10, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 656)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0x8000000000000001)
li x27, 0x5555555555555555 # initialize rs1
li x9, 0x8000000000000001 # initialize rs2
rol x24, x27, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 664)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0x7fffffffffffffff)
li x23, 0x5555555555555555 # initialize rs1
li x31, 0x7fffffffffffffff # initialize rs2
rol x2, x23, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 672)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0x7ffffffffffffffe)
li x31, 0x5555555555555555 # initialize rs1
li x9, 0x7ffffffffffffffe # initialize rs2
rol x8, x31, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 680)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0xffffffffffffffff)
li x5, 0x5555555555555555 # initialize rs1
li x9, 0xffffffffffffffff # initialize rs2
rol x19, x5, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 688)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0xfffffffffffffffe)
li x13, 0x5555555555555555 # initialize rs1
li x11, 0xfffffffffffffffe # initialize rs2
rol x1, x13, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 696)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0x5bbc887763ae86f2)
li x30, 0x5555555555555555 # initialize rs1
li x16, 0x5bbc887763ae86f2 # initialize rs2
rol x3, x30, x16 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 704)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0xaaaaaaaaaaaaaaaa)
li x28, 0x5555555555555555 # initialize rs1
li x26, 0xaaaaaaaaaaaaaaaa # initialize rs2
rol x12, x28, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 712)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0x5555555555555555)
li x30, 0x5555555555555555 # initialize rs1
li x1, 0x5555555555555555 # initialize rs2
rol x5, x30, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x5, 720)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0xffffffff)
li x14, 0x5555555555555555 # initialize rs1
li x24, 0x00000000ffffffff # initialize rs2
rol x2, x14, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 728)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0xfffffffe)
li x19, 0x5555555555555555 # initialize rs1
li x20, 0x00000000fffffffe # initialize rs2
rol x3, x19, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 736)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0x100000000)
li x16, 0x5555555555555555 # initialize rs1
li x2, 0x0000000100000000 # initialize rs2
rol x9, x16, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 744)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0x100000001)
li x23, 0x5555555555555555 # initialize rs1
li x16, 0x0000000100000001 # initialize rs2
rol x18, x23, x16 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 752)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0x0)
li x20, 0x00000000ffffffff # initialize rs1
li x3, 0x0000000000000000 # initialize rs2
rol x30, x20, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 760)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0x1)
li x9, 0x00000000ffffffff # initialize rs1
li x21, 0x0000000000000001 # initialize rs2
rol x11, x9, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 768)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0x2)
li x1, 0x00000000ffffffff # initialize rs1
li x16, 0x0000000000000002 # initialize rs2
rol x20, x1, x16 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 776)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0x8000000000000000)
li x21, 0x00000000ffffffff # initialize rs1
li x28, 0x8000000000000000 # initialize rs2
rol x18, x21, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 784)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0x8000000000000001)
li x3, 0x00000000ffffffff # initialize rs1
li x17, 0x8000000000000001 # initialize rs2
rol x25, x3, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 792)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0x7fffffffffffffff)
li x24, 0x00000000ffffffff # initialize rs1
li x8, 0x7fffffffffffffff # initialize rs2
rol x27, x24, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 800)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0x7ffffffffffffffe)
li x15, 0x00000000ffffffff # initialize rs1
li x19, 0x7ffffffffffffffe # initialize rs2
rol x20, x15, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 808)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0xffffffffffffffff)
li x7, 0x00000000ffffffff # initialize rs1
li x30, 0xffffffffffffffff # initialize rs2
rol x20, x7, x30 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 816)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0xfffffffffffffffe)
li x14, 0x00000000ffffffff # initialize rs1
li x13, 0xfffffffffffffffe # initialize rs2
rol x31, x14, x13 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 824)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0x5bbc887763ae86f2)
li x15, 0x00000000ffffffff # initialize rs1
li x23, 0x5bbc887763ae86f2 # initialize rs2
rol x3, x15, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 832)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0xaaaaaaaaaaaaaaaa)
li x7, 0x00000000ffffffff # initialize rs1
li x15, 0xaaaaaaaaaaaaaaaa # initialize rs2
rol x25, x7, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 840)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0x5555555555555555)
li x24, 0x00000000ffffffff # initialize rs1
li x26, 0x5555555555555555 # initialize rs2
rol x28, x24, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x28, 848)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0xffffffff)
li x5, 0x00000000ffffffff # initialize rs1
li x10, 0x00000000ffffffff # initialize rs2
rol x25, x5, x10 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 856)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0xfffffffe)
li x28, 0x00000000ffffffff # initialize rs1
li x26, 0x00000000fffffffe # initialize rs2
rol x27, x28, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 864)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0x100000000)
li x22, 0x00000000ffffffff # initialize rs1
li x15, 0x0000000100000000 # initialize rs2
rol x31, x22, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 872)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0x100000001)
li x2, 0x00000000ffffffff # initialize rs1
li x9, 0x0000000100000001 # initialize rs2
rol x5, x2, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x5, 880)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0x0)
li x31, 0x00000000fffffffe # initialize rs1
li x1, 0x0000000000000000 # initialize rs2
rol x21, x31, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 888)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0x1)
li x16, 0x00000000fffffffe # initialize rs1
li x9, 0x0000000000000001 # initialize rs2
rol x21, x16, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 896)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0x2)
li x17, 0x00000000fffffffe # initialize rs1
li x26, 0x0000000000000002 # initialize rs2
rol x31, x17, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 904)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0x8000000000000000)
li x10, 0x00000000fffffffe # initialize rs1
li x22, 0x8000000000000000 # initialize rs2
rol x3, x10, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 912)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0x8000000000000001)
li x3, 0x00000000fffffffe # initialize rs1
li x16, 0x8000000000000001 # initialize rs2
rol x31, x3, x16 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 920)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0x7fffffffffffffff)
li x23, 0x00000000fffffffe # initialize rs1
li x19, 0x7fffffffffffffff # initialize rs2
rol x15, x23, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 928)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0x7ffffffffffffffe)
li x24, 0x00000000fffffffe # initialize rs1
li x8, 0x7ffffffffffffffe # initialize rs2
rol x22, x24, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 936)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0xffffffffffffffff)
li x17, 0x00000000fffffffe # initialize rs1
li x25, 0xffffffffffffffff # initialize rs2
rol x28, x17, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x28, 944)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0xfffffffffffffffe)
li x14, 0x00000000fffffffe # initialize rs1
li x19, 0xfffffffffffffffe # initialize rs2
rol x13, x14, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 952)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0x5bbc887763ae86f2)
li x29, 0x00000000fffffffe # initialize rs1
li x30, 0x5bbc887763ae86f2 # initialize rs2
rol x2, x29, x30 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 960)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0xaaaaaaaaaaaaaaaa)
li x3, 0x00000000fffffffe # initialize rs1
li x26, 0xaaaaaaaaaaaaaaaa # initialize rs2
rol x19, x3, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 968)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0x5555555555555555)
li x15, 0x00000000fffffffe # initialize rs1
li x14, 0x5555555555555555 # initialize rs2
rol x28, x15, x14 # perform operation
RVTEST_SIGUPD(x4, x0, x28, 976)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0xffffffff)
li x6, 0x00000000fffffffe # initialize rs1
li x7, 0x00000000ffffffff # initialize rs2
rol x15, x6, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 984)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0xfffffffe)
li x1, 0x00000000fffffffe # initialize rs1
li x23, 0x00000000fffffffe # initialize rs2
rol x18, x1, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 992)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0x100000000)
li x15, 0x00000000fffffffe # initialize rs1
li x10, 0x0000000100000000 # initialize rs2
rol x22, x15, x10 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 1000)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0x100000001)
li x14, 0x00000000fffffffe # initialize rs1
li x3, 0x0000000100000001 # initialize rs2
rol x1, x14, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 1008)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0x0)
li x26, 0x0000000100000000 # initialize rs1
li x30, 0x0000000000000000 # initialize rs2
rol x24, x26, x30 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 1016)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0x1)
li x12, 0x0000000100000000 # initialize rs1
li x29, 0x0000000000000001 # initialize rs2
rol x8, x12, x29 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 1024)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0x2)
li x6, 0x0000000100000000 # initialize rs1
li x3, 0x0000000000000002 # initialize rs2
rol x8, x6, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 1032)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0x8000000000000000)
li x19, 0x0000000100000000 # initialize rs1
li x11, 0x8000000000000000 # initialize rs2
rol x29, x19, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 1040)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0x8000000000000001)
li x6, 0x0000000100000000 # initialize rs1
li x20, 0x8000000000000001 # initialize rs2
rol x11, x6, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 1048)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0x7fffffffffffffff)
li x30, 0x0000000100000000 # initialize rs1
li x20, 0x7fffffffffffffff # initialize rs2
rol x8, x30, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 1056)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0x7ffffffffffffffe)
li x25, 0x0000000100000000 # initialize rs1
li x6, 0x7ffffffffffffffe # initialize rs2
rol x2, x25, x6 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 1064)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0xffffffffffffffff)
li x11, 0x0000000100000000 # initialize rs1
li x27, 0xffffffffffffffff # initialize rs2
rol x24, x11, x27 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 1072)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0xfffffffffffffffe)
li x2, 0x0000000100000000 # initialize rs1
li x16, 0xfffffffffffffffe # initialize rs2
rol x24, x2, x16 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 1080)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0x5bbc887763ae86f2)
li x18, 0x0000000100000000 # initialize rs1
li x22, 0x5bbc887763ae86f2 # initialize rs2
rol x31, x18, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 1088)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0xaaaaaaaaaaaaaaaa)
li x24, 0x0000000100000000 # initialize rs1
li x12, 0xaaaaaaaaaaaaaaaa # initialize rs2
rol x10, x24, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 1096)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0x5555555555555555)
li x28, 0x0000000100000000 # initialize rs1
li x3, 0x5555555555555555 # initialize rs2
rol x1, x28, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 1104)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0xffffffff)
li x13, 0x0000000100000000 # initialize rs1
li x9, 0x00000000ffffffff # initialize rs2
rol x17, x13, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 1112)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0xfffffffe)
li x30, 0x0000000100000000 # initialize rs1
li x21, 0x00000000fffffffe # initialize rs2
rol x17, x30, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 1120)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0x100000000)
li x13, 0x0000000100000000 # initialize rs1
li x8, 0x0000000100000000 # initialize rs2
rol x11, x13, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 1128)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0x100000001)
li x18, 0x0000000100000000 # initialize rs1
li x26, 0x0000000100000001 # initialize rs2
rol x20, x18, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 1136)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0x0)
li x28, 0x0000000100000001 # initialize rs1
li x31, 0x0000000000000000 # initialize rs2
rol x29, x28, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 1144)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0x1)
li x9, 0x0000000100000001 # initialize rs1
li x16, 0x0000000000000001 # initialize rs2
rol x6, x9, x16 # perform operation
RVTEST_SIGUPD(x4, x0, x6, 1152)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0x2)
li x11, 0x0000000100000001 # initialize rs1
li x12, 0x0000000000000002 # initialize rs2
rol x30, x11, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 1160)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0x8000000000000000)
li x31, 0x0000000100000001 # initialize rs1
li x16, 0x8000000000000000 # initialize rs2
rol x2, x31, x16 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 1168)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0x8000000000000001)
li x12, 0x0000000100000001 # initialize rs1
li x21, 0x8000000000000001 # initialize rs2
rol x11, x12, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 1176)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0x7fffffffffffffff)
li x2, 0x0000000100000001 # initialize rs1
li x24, 0x7fffffffffffffff # initialize rs2
rol x9, x2, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 1184)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0x7ffffffffffffffe)
li x13, 0x0000000100000001 # initialize rs1
li x14, 0x7ffffffffffffffe # initialize rs2
rol x11, x13, x14 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 1192)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0xffffffffffffffff)
li x27, 0x0000000100000001 # initialize rs1
li x12, 0xffffffffffffffff # initialize rs2
rol x21, x27, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 1200)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0xfffffffffffffffe)
li x31, 0x0000000100000001 # initialize rs1
li x28, 0xfffffffffffffffe # initialize rs2
rol x10, x31, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 1208)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0x5bbc887763ae86f2)
li x22, 0x0000000100000001 # initialize rs1
li x17, 0x5bbc887763ae86f2 # initialize rs2
rol x13, x22, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 1216)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0xaaaaaaaaaaaaaaaa)
li x6, 0x0000000100000001 # initialize rs1
li x5, 0xaaaaaaaaaaaaaaaa # initialize rs2
rol x24, x6, x5 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 1224)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0x5555555555555555)
li x14, 0x0000000100000001 # initialize rs1
li x21, 0x5555555555555555 # initialize rs2
rol x22, x14, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 1232)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0xffffffff)
li x2, 0x0000000100000001 # initialize rs1
li x5, 0x00000000ffffffff # initialize rs2
rol x7, x2, x5 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 1240)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0xfffffffe)
li x28, 0x0000000100000001 # initialize rs1
li x11, 0x00000000fffffffe # initialize rs2
rol x13, x28, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 1248)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0x100000000)
li x9, 0x0000000100000001 # initialize rs1
li x17, 0x0000000100000000 # initialize rs2
rol x22, x9, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 1256)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0x100000001)
li x21, 0x0000000100000001 # initialize rs1
li x12, 0x0000000100000001 # initialize rs2
rol x5, x21, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x5, 1264)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x0)
li x0, 0xd37fb57d858bb801 # initialize rs1
li x0, 0xe908377ce7a52196 # initialize rs2
rol x7, x0, x0 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 1272)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x1)
li x1, 0x55ab893db58d7bf8 # initialize rs1
li x1, 0x384e48945a24796d # initialize rs2
rol x16, x1, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 1280)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x2)
li x2, 0xff6eb8365748511f # initialize rs1
li x2, 0x73ada09284ff83be # initialize rs2
rol x26, x2, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 1288)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x3)
li x3, 0x2804036377d693f1 # initialize rs1
li x3, 0x763f0282c4fd1184 # initialize rs2
rol x20, x3, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 1296)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x4)
mv x5, x4 # switch signature pointer register to avoid conflict with test
li x4, 0xe6620ffb5181acb3 # initialize rs1
li x4, 0x0178c2de79ff2013 # initialize rs2
rol x3, x4, x4 # perform operation
RVTEST_SIGUPD(x5, x0, x3, 1304)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x5)
mv x6, x5 # switch signature pointer register to avoid conflict with test
li x5, 0x2d32601c03e54a1a # initialize rs1
li x5, 0xa3b1e1276af0c539 # initialize rs2
rol x28, x5, x5 # perform operation
RVTEST_SIGUPD(x6, x0, x28, 1312)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x6)
mv x7, x6 # switch signature pointer register to avoid conflict with test
li x6, 0x438b00dd96e007b9 # initialize rs1
li x6, 0x2739469cb62574d7 # initialize rs2
rol x30, x6, x6 # perform operation
RVTEST_SIGUPD(x7, x0, x30, 1320)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x7)
mv x4, x7 # switch signature pointer register to avoid conflict with test
li x7, 0xec7a75e725d8a8e9 # initialize rs1
li x7, 0xd502e801ee490766 # initialize rs2
rol x8, x7, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 1328)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x8)
li x8, 0x17d1a75e9c0f3162 # initialize rs1
li x8, 0xce6511e2b16eaca9 # initialize rs2
rol x10, x8, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 1336)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x9)
li x9, 0x4422d5fcb9736a4d # initialize rs1
li x9, 0x51bd6d8569e41e64 # initialize rs2
rol x19, x9, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 1344)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x10)
li x10, 0xb31acb59d1f2b4eb # initialize rs1
li x10, 0x2344a95528500e2d # initialize rs2
rol x23, x10, x10 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 1352)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x11)
li x11, 0xbc7e41c84f025ea5 # initialize rs1
li x11, 0x9dd2a11215de0454 # initialize rs2
rol x30, x11, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 1360)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x12)
li x12, 0x53654c1ec4bc2e70 # initialize rs1
li x12, 0x6d3895f3465bd2a9 # initialize rs2
rol x24, x12, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 1368)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x13)
li x13, 0x1916d29679bf2c3c # initialize rs1
li x13, 0x3b05acb370b0ca17 # initialize rs2
rol x14, x13, x13 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 1376)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x14)
li x14, 0xe70bd9d1f11d2c0b # initialize rs1
li x14, 0xfd63e1b801741de0 # initialize rs2
rol x10, x14, x14 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 1384)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x15)
li x15, 0xd444ccdbf978bce2 # initialize rs1
li x15, 0xe21c03ccbb0b8590 # initialize rs2
rol x22, x15, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 1392)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x16)
li x16, 0xaa93fc6ac75fa8e1 # initialize rs1
li x16, 0x68eadaa0214882af # initialize rs2
rol x25, x16, x16 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 1400)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x17)
li x17, 0xe85d57cdddbf52ff # initialize rs1
li x17, 0x1d68ae63d68ab154 # initialize rs2
rol x7, x17, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 1408)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x18)
li x18, 0xa8805a48eb997c1a # initialize rs1
li x18, 0xad77a0c64881f8ca # initialize rs2
rol x9, x18, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 1416)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x19)
li x19, 0x5932e8b02175da03 # initialize rs1
li x19, 0x0a4eb475efa748bd # initialize rs2
rol x1, x19, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 1424)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x20)
li x20, 0xd7750f2bff4773c3 # initialize rs1
li x20, 0x00da049fbb4a4fa8 # initialize rs2
rol x28, x20, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x28, 1432)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x21)
li x21, 0x1c8efb2d7c4f3996 # initialize rs1
li x21, 0x694cbfba217b09a3 # initialize rs2
rol x19, x21, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 1440)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x22)
li x22, 0x62588327323e4c7a # initialize rs1
li x22, 0x10cd9633c34106b3 # initialize rs2
rol x30, x22, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 1448)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x23)
li x23, 0x5c92a28e3f1c4dda # initialize rs1
li x23, 0xbd5a238c93e68f9d # initialize rs2
rol x7, x23, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 1456)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x24)
li x24, 0xcae15dc18d1c6b7a # initialize rs1
li x24, 0xe75814d844126b64 # initialize rs2
rol x11, x24, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 1464)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x25)
li x25, 0x4d9b82fdef9010d6 # initialize rs1
li x25, 0x286124b18bece440 # initialize rs2
rol x14, x25, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 1472)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x26)
li x26, 0x759bdfc4e709d9bd # initialize rs1
li x26, 0x3e0704a5962084fb # initialize rs2
rol x1, x26, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 1480)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x27)
li x27, 0x607c8310747c0403 # initialize rs1
li x27, 0x8c080df4d3cc36cb # initialize rs2
rol x12, x27, x27 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 1488)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x28)
li x28, 0xe4b0213caf7ca118 # initialize rs1
li x28, 0x227ec33a2ff315a9 # initialize rs2
rol x11, x28, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 1496)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x29)
li x29, 0xa6850a23f72c2adf # initialize rs1
li x29, 0x491e6bb3d15bc741 # initialize rs2
rol x2, x29, x29 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 1504)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x30)
li x30, 0x0c4f2258f10dfed2 # initialize rs1
li x30, 0x348b226635e7dce2 # initialize rs2
rol x20, x30, x30 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 1512)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x31)
li x31, 0x819ef2dc0b77b5fc # initialize rs1
li x31, 0x2ac1098d051efba1 # initialize rs2
rol x15, x31, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 1520)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x0)
li x0, 0xde53ae2f8ff6b164 # initialize rs1
li x25, 0x84389744449683ad # initialize rs2
rol x0, x0, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x0, 1528)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x1)
li x1, 0x8c26e626e011c968 # initialize rs1
li x28, 0x6b8a337426964a41 # initialize rs2
rol x1, x1, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 1536)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x2)
li x2, 0x7487a5ecb4ce0b30 # initialize rs1
li x15, 0x65b042768e213f23 # initialize rs2
rol x2, x2, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 1544)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x3)
li x3, 0x8bff50b3d693c3b8 # initialize rs1
li x20, 0x522c7d186e0e837c # initialize rs2
rol x3, x3, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 1552)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x4)
mv x5, x4 # switch signature pointer register to avoid conflict with test
li x4, 0x812ba33282e96362 # initialize rs1
li x30, 0x92a50dd7944e3a40 # initialize rs2
rol x4, x4, x30 # perform operation
RVTEST_SIGUPD(x5, x0, x4, 1560)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x5)
mv x6, x5 # switch signature pointer register to avoid conflict with test
li x5, 0x6152b0cdb37d0cca # initialize rs1
li x3, 0x68654822f17872e6 # initialize rs2
rol x5, x5, x3 # perform operation
RVTEST_SIGUPD(x6, x0, x5, 1568)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x6)
mv x4, x6 # switch signature pointer register to avoid conflict with test
li x6, 0x8854dec001fda3c6 # initialize rs1
li x7, 0x1b4768c2b50d435f # initialize rs2
rol x6, x6, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x6, 1576)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x7)
li x7, 0xd779f5aed563235e # initialize rs1
li x11, 0xc8118652fed5a49e # initialize rs2
rol x7, x7, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 1584)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x8)
li x8, 0x053a5b949c7054e9 # initialize rs1
li x5, 0xd7afb7237a6c6a3b # initialize rs2
rol x8, x8, x5 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 1592)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x9)
li x9, 0x17750e3e94081701 # initialize rs1
li x30, 0x44d3f42366cb6880 # initialize rs2
rol x9, x9, x30 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 1600)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x10)
li x10, 0x6d137c1e426be509 # initialize rs1
li x21, 0xb139aeb9537ecba2 # initialize rs2
rol x10, x10, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 1608)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x11)
li x11, 0x94557bf1da862b8d # initialize rs1
li x11, 0x2b43e429406c5b71 # initialize rs2
rol x11, x11, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 1616)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x12)
li x12, 0x002e020c1be08874 # initialize rs1
li x17, 0xddec4a6d799dbc30 # initialize rs2
rol x12, x12, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 1624)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x13)
li x13, 0x1aca9059b420ce27 # initialize rs1
li x1, 0x9ed77ca2da101867 # initialize rs2
rol x13, x13, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 1632)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x14)
li x14, 0x70e4fc1426c605f1 # initialize rs1
li x9, 0x567c85ca8ed5291a # initialize rs2
rol x14, x14, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 1640)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x15)
li x15, 0x1fbadba3c08b3a31 # initialize rs1
li x31, 0x0120baabb2047aad # initialize rs2
rol x15, x15, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 1648)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x16)
li x16, 0x809a8d3e9e52ee21 # initialize rs1
li x19, 0xfa3bf159d52054c3 # initialize rs2
rol x16, x16, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 1656)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x17)
li x17, 0xec3335548ba63727 # initialize rs1
li x20, 0x04d0bae2ae79a2e5 # initialize rs2
rol x17, x17, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 1664)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x18)
li x18, 0x991750023df74f65 # initialize rs1
li x6, 0x7870784ebaebb9a3 # initialize rs2
rol x18, x18, x6 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 1672)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x19)
li x19, 0x631c64e639b57bd8 # initialize rs1
li x26, 0x00efedabac231a26 # initialize rs2
rol x19, x19, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 1680)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x20)
li x20, 0x3bbac340eaed6c02 # initialize rs1
li x9, 0xa540381deee26152 # initialize rs2
rol x20, x20, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 1688)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x21)
li x21, 0xe3242c8073c46035 # initialize rs1
li x14, 0x9d877397c59f89f9 # initialize rs2
rol x21, x21, x14 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 1696)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x22)
li x22, 0x5cafb1ed449d9350 # initialize rs1
li x8, 0xa0143556b9eb41cf # initialize rs2
rol x22, x22, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 1704)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x23)
li x23, 0x9a36abe9fa349716 # initialize rs1
li x2, 0x1539a80525cb40df # initialize rs2
rol x23, x23, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 1712)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x24)
li x24, 0x39f7657db10c626e # initialize rs1
li x31, 0x6027c0ae1db21f85 # initialize rs2
rol x24, x24, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 1720)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x25)
li x25, 0xd9165ee59ea8ead2 # initialize rs1
li x20, 0x7e11d5e56be532c7 # initialize rs2
rol x25, x25, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 1728)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x26)
li x26, 0xdfbad0472bf351a3 # initialize rs1
li x21, 0xffb7b57bfd4abb1e # initialize rs2
rol x26, x26, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 1736)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x27)
li x27, 0x34ed2fab21dfb13a # initialize rs1
li x21, 0xce98e62a73be811c # initialize rs2
rol x27, x27, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 1744)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x28)
li x28, 0x74ae43cd0cf9f67a # initialize rs1
li x13, 0xaaa7ad719cf7e24c # initialize rs2
rol x28, x28, x13 # perform operation
RVTEST_SIGUPD(x4, x0, x28, 1752)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x29)
li x29, 0xfa94d5548e87bffc # initialize rs1
li x24, 0x095cb4ece3f1c053 # initialize rs2
rol x29, x29, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 1760)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x30)
li x30, 0x20c8745a99daa876 # initialize rs1
li x19, 0xffd5cc281fad6f5a # initialize rs2
rol x30, x30, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 1768)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x31)
li x31, 0xe03796c09adc303c # initialize rs1
li x21, 0x2093130642e7c55c # initialize rs2
rol x31, x31, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 1776)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x0)
li x3, 0x48189ea4754d7e5e # initialize rs1
li x0, 0x897e1b7521ef0615 # initialize rs2
rol x0, x3, x0 # perform operation
RVTEST_SIGUPD(x4, x0, x0, 1784)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x1)
li x23, 0xf92f288e4b01beea # initialize rs1
li x1, 0xeb4b0c0328236588 # initialize rs2
rol x1, x23, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 1792)
addi x4, x4, 1800 # increment signature pointer and reset offset

# Testcase cmp_rd_rs2 (Test rd = rs2 = x2)
li x29, 0x60226d827d0dfd06 # initialize rs1
li x2, 0xf75f8ffbe0864f2a # initialize rs2
rol x2, x29, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 0)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x3)
li x12, 0xcd383d733b1e5e25 # initialize rs1
li x3, 0x66f9ac6b3e4988c8 # initialize rs2
rol x3, x12, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 8)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x4)
mv x5, x4 # switch signature pointer register to avoid conflict with test
li x31, 0x757c5298f867860d # initialize rs1
li x4, 0xabcd9f2560295d5b # initialize rs2
rol x4, x31, x4 # perform operation
RVTEST_SIGUPD(x5, x0, x4, 16)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x5)
mv x6, x5 # switch signature pointer register to avoid conflict with test
li x10, 0x936d3d443dc4b03b # initialize rs1
li x5, 0xc194256ba05fd496 # initialize rs2
rol x5, x10, x5 # perform operation
RVTEST_SIGUPD(x6, x0, x5, 24)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x6)
mv x7, x6 # switch signature pointer register to avoid conflict with test
li x4, 0x5a7565f4eabdbfc5 # initialize rs1
li x6, 0x054cb52724202aa8 # initialize rs2
rol x6, x4, x6 # perform operation
RVTEST_SIGUPD(x7, x0, x6, 32)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x7)
mv x4, x7 # switch signature pointer register to avoid conflict with test
li x16, 0x169e53616b10530e # initialize rs1
li x7, 0x4b00d8fb0fe61c06 # initialize rs2
rol x7, x16, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 40)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x8)
li x22, 0x8a288a213d11f783 # initialize rs1
li x8, 0xe0fffa3d8d041bfc # initialize rs2
rol x8, x22, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 48)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x9)
li x31, 0x760779ab6ed7a6dd # initialize rs1
li x9, 0x9e15d681c4dd099e # initialize rs2
rol x9, x31, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 56)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x10)
li x19, 0x2f4c49ad49cbf7af # initialize rs1
li x10, 0x8c1a1f80f886a4b2 # initialize rs2
rol x10, x19, x10 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 64)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x11)
li x6, 0x97948a670ee35934 # initialize rs1
li x11, 0x09666724c480310f # initialize rs2
rol x11, x6, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 72)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x12)
li x13, 0xae6506a2d941a281 # initialize rs1
li x12, 0x5dc12f7b989b495e # initialize rs2
rol x12, x13, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 80)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x13)
li x16, 0x406215f6feb1ec27 # initialize rs1
li x13, 0x6f1b6acea26255f6 # initialize rs2
rol x13, x16, x13 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 88)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x14)
li x1, 0xae7ba052190299f4 # initialize rs1
li x14, 0xd879b3a95629f467 # initialize rs2
rol x14, x1, x14 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 96)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x15)
li x27, 0x1b05c541a0a98a05 # initialize rs1
li x15, 0x45e57b54ad180c9a # initialize rs2
rol x15, x27, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 104)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x16)
li x16, 0xafb9a5d8ffd87737 # initialize rs1
li x16, 0x4b6bd3daa5994a6a # initialize rs2
rol x16, x16, x16 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 112)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x17)
li x2, 0xd6fafeaba81d0de3 # initialize rs1
li x17, 0xde3dac3ea800a9e3 # initialize rs2
rol x17, x2, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 120)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x18)
li x22, 0x7ed410562e78af20 # initialize rs1
li x18, 0x0bdcdce97aacb8c9 # initialize rs2
rol x18, x22, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 128)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x19)
li x28, 0x0a2020c4edf6787a # initialize rs1
li x19, 0x34e67b8fa425d5a8 # initialize rs2
rol x19, x28, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 136)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x20)
li x31, 0x7ab33396d132b700 # initialize rs1
li x20, 0x7a56e7bffa556860 # initialize rs2
rol x20, x31, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 144)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x21)
li x13, 0x17bb21957b07d6c5 # initialize rs1
li x21, 0xf97843382595f135 # initialize rs2
rol x21, x13, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 152)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x22)
li x22, 0xfb6339964cfe1f88 # initialize rs1
li x22, 0x1a70a9bd6005fcbe # initialize rs2
rol x22, x22, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 160)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x23)
li x13, 0x13ef3d21bed72f78 # initialize rs1
li x23, 0x6e65cef05635b776 # initialize rs2
rol x23, x13, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 168)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x24)
li x27, 0x49c175fb83d1bc08 # initialize rs1
li x24, 0x510bf5c3e2773a74 # initialize rs2
rol x24, x27, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 176)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x25)
li x28, 0xba054ef8956585af # initialize rs1
li x25, 0x0f02d7f0afad1f11 # initialize rs2
rol x25, x28, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 184)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x26)
li x13, 0x986be665aa199159 # initialize rs1
li x26, 0x9f76905fd249c373 # initialize rs2
rol x26, x13, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 192)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x27)
li x26, 0xf391573a1fcd4bad # initialize rs1
li x27, 0xf736138b4821f714 # initialize rs2
rol x27, x26, x27 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 200)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x28)
li x7, 0x9921fed84efa4d32 # initialize rs1
li x28, 0x18b3f88c71f769c2 # initialize rs2
rol x28, x7, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x28, 208)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x29)
li x10, 0x5d08e35650e2ce9e # initialize rs1
li x29, 0x5859c22e3be5da9c # initialize rs2
rol x29, x10, x29 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 216)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x30)
li x15, 0xf1d1e9c8780a2571 # initialize rs1
li x30, 0x54e25bd6c3b4158c # initialize rs2
rol x30, x15, x30 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 224)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x31)
li x11, 0x103e5932f78134c3 # initialize rs1
li x31, 0x2bbc4a89c6afe6cd # initialize rs2
rol x31, x11, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 232)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x0)
li x0, 0xe7fc3c0d69e240b5 # initialize rs1
li x0, 0x133dd57ae433ec70 # initialize rs2
rol x0, x0, x0 # perform operation
RVTEST_SIGUPD(x4, x0, x0, 240)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x1)
li x1, 0x660d6d38f1d5c5d3 # initialize rs1
li x1, 0x220259103c503bb7 # initialize rs2
rol x1, x1, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 248)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x2)
li x2, 0x549c9d499ae58354 # initialize rs1
li x2, 0x68413d81d0beccb7 # initialize rs2
rol x2, x2, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 256)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x3)
li x3, 0x1c22221d68eca56d # initialize rs1
li x3, 0xc4a193000cc463ce # initialize rs2
rol x3, x3, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 264)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x4)
mv x5, x4 # switch signature pointer register to avoid conflict with test
li x4, 0xe89b32f4b90fb8a8 # initialize rs1
li x4, 0x4f62b457016f9cbd # initialize rs2
rol x4, x4, x4 # perform operation
RVTEST_SIGUPD(x5, x0, x4, 272)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x5)
mv x6, x5 # switch signature pointer register to avoid conflict with test
li x5, 0xb65e948b1453de37 # initialize rs1
li x5, 0x4ad9219a9f33c64d # initialize rs2
rol x5, x5, x5 # perform operation
RVTEST_SIGUPD(x6, x0, x5, 280)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x6)
mv x7, x6 # switch signature pointer register to avoid conflict with test
li x6, 0x17d60a8d9bd2af3c # initialize rs1
li x6, 0x442cb3f4a6fce777 # initialize rs2
rol x6, x6, x6 # perform operation
RVTEST_SIGUPD(x7, x0, x6, 288)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x7)
mv x4, x7 # switch signature pointer register to avoid conflict with test
li x7, 0xc6ddc2b94c22fe47 # initialize rs1
li x7, 0xa28a290aff3873f4 # initialize rs2
rol x7, x7, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 296)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x8)
li x8, 0x5b39232bc2206f4b # initialize rs1
li x8, 0xbdd91fb709033829 # initialize rs2
rol x8, x8, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 304)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x9)
li x9, 0x22c5ed2349048a2b # initialize rs1
li x9, 0xf6eec6a31cbfaaee # initialize rs2
rol x9, x9, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 312)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x10)
li x10, 0x848eadb6b7075b1d # initialize rs1
li x10, 0xff0c93f1327e3e36 # initialize rs2
rol x10, x10, x10 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 320)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x11)
li x11, 0xdcd9d25a1ba6e173 # initialize rs1
li x11, 0xda50e478b49d1009 # initialize rs2
rol x11, x11, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 328)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x12)
li x12, 0x4511182c453c92d6 # initialize rs1
li x12, 0xd8612d766991b670 # initialize rs2
rol x12, x12, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 336)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x13)
li x13, 0xfafddb027e55a04e # initialize rs1
li x13, 0x409e5761165af0b9 # initialize rs2
rol x13, x13, x13 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 344)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x14)
li x14, 0xd3a9368916910d56 # initialize rs1
li x14, 0x552fee7a973ec117 # initialize rs2
rol x14, x14, x14 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 352)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x15)
li x15, 0x2c41c2ad82a940f1 # initialize rs1
li x15, 0xc8e388cc72f79a66 # initialize rs2
rol x15, x15, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 360)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x16)
li x16, 0xc5d24040887d4f99 # initialize rs1
li x16, 0xc87219ad5023b6e1 # initialize rs2
rol x16, x16, x16 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 368)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x17)
li x17, 0x860a3ad7c369020e # initialize rs1
li x17, 0xc366fa4b0619f74d # initialize rs2
rol x17, x17, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 376)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x18)
li x18, 0x7aaffd39f5f4359c # initialize rs1
li x18, 0x60e872c7a0b47fed # initialize rs2
rol x18, x18, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 384)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x19)
li x19, 0x2162c99081beb00c # initialize rs1
li x19, 0x3b20fc39b368afda # initialize rs2
rol x19, x19, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 392)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x20)
li x20, 0x12b01f1672c494b2 # initialize rs1
li x20, 0xa2f1f58dbf117ba3 # initialize rs2
rol x20, x20, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 400)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x21)
li x21, 0xd4018a1cce60727a # initialize rs1
li x21, 0x53e41637f56620eb # initialize rs2
rol x21, x21, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 408)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x22)
li x22, 0x0e3ae018bbc3a46f # initialize rs1
li x22, 0x44569623686e7f08 # initialize rs2
rol x22, x22, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 416)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x23)
li x23, 0x54cf8dde7ad27fba # initialize rs1
li x23, 0x672c900f9fdd8dca # initialize rs2
rol x23, x23, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 424)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x24)
li x24, 0xb8f209fe72c7b2eb # initialize rs1
li x24, 0x56ffe894cf56534e # initialize rs2
rol x24, x24, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 432)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x25)
li x25, 0xd95f9a5240d7c8d8 # initialize rs1
li x25, 0xb3fbcd954d2de7bd # initialize rs2
rol x25, x25, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 440)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x26)
li x26, 0x0b775a5de1161d7e # initialize rs1
li x26, 0x81e5f42a7e784a36 # initialize rs2
rol x26, x26, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 448)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x27)
li x27, 0xe5f677a6e1eb1c3a # initialize rs1
li x27, 0x6e079394c60286ea # initialize rs2
rol x27, x27, x27 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 456)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x28)
li x28, 0x4c362afbee5900b7 # initialize rs1
li x28, 0x68f70dc3e1bf23b7 # initialize rs2
rol x28, x28, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x28, 464)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x29)
li x29, 0x1e227ed2957f5e20 # initialize rs1
li x29, 0x114aa1994510de60 # initialize rs2
rol x29, x29, x29 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 472)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x30)
li x30, 0x6d59c3872d946236 # initialize rs1
li x30, 0x756a28b578c2ec7f # initialize rs2
rol x30, x30, x30 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 480)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x31)
li x31, 0xdc4bbf4f38121062 # initialize rs1
li x31, 0xc5f4bcdea8142a8e # initialize rs2
rol x31, x31, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 488)

# Testcase cp_gpr/fpr_hazard nohaz test
add x15, x5, x2 # perform first operation
rol x30, x22, x25 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard nohaz test
add x6, x16, x2 # perform first operation
rol x10, x19, x22 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard nohaz test
add x5, x2, x13 # perform first operation
rol x12, x6, x23 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard raw test
add x19, x31, x10 # perform first operation
rol x31, x19, x6 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard raw test
add x5, x19, x11 # perform first operation
rol x11, x29, x5 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard raw test
add x6, x24, x2 # perform first operation
rol x16, x1, x14 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard waw test
add x7, x12, x23 # perform first operation
rol x7, x11, x16 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard waw test
add x30, x16, x10 # perform first operation
rol x30, x31, x25 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard waw test
add x23, x2, x27 # perform first operation
rol x23, x29, x16 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard war test
add x22, x25, x23 # perform first operation
rol x25, x19, x2 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard war test
add x27, x8, x1 # perform first operation
rol x1, x22, x16 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard war test
add x10, x25, x21 # perform first operation
rol x31, x18, x29 # perform second (triggering) operation

#.EQU SIGSIZE,4096


// ******************
// Tests from: WALLY-COV-ror.S
// ******************


# initialize signature pointer
la x4, begin_signature

    
# Testcase cp_rs1 (Test source rs1 = x0)
li x0, 0x811beef5e22ba3c7 # initialize rs1
li x24, 0xecdc9c20a32102d9 # initialize rs2
ror x14, x0, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 0)

# Testcase cp_rs1 (Test source rs1 = x1)
li x1, 0x47b47434453e0ec4 # initialize rs1
li x5, 0x6264859a2b1fec7b # initialize rs2
ror x27, x1, x5 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 8)

# Testcase cp_rs1 (Test source rs1 = x2)
li x2, 0x616d738920fd5c17 # initialize rs1
li x15, 0x4d8f09ac6e4aa68d # initialize rs2
ror x31, x2, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 16)

# Testcase cp_rs1 (Test source rs1 = x3)
li x3, 0x749539b14067b3db # initialize rs1
li x18, 0xa4e382128b365974 # initialize rs2
ror x20, x3, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 24)

# Testcase cp_rs1 (Test source rs1 = x4)
mv x5, x4 # switch signature pointer register to avoid conflict with test
li x4, 0x39afc4c45537e6ca # initialize rs1
li x22, 0x27cacf864e7831a4 # initialize rs2
ror x31, x4, x22 # perform operation
RVTEST_SIGUPD(x5, x0, x31, 32)

# Testcase cp_rs1 (Test source rs1 = x5)
mv x6, x5 # switch signature pointer register to avoid conflict with test
li x5, 0x4f26febddbd8a83b # initialize rs1
li x8, 0xb770dc2a025056cd # initialize rs2
ror x16, x5, x8 # perform operation
RVTEST_SIGUPD(x6, x0, x16, 40)

# Testcase cp_rs1 (Test source rs1 = x6)
mv x7, x6 # switch signature pointer register to avoid conflict with test
li x6, 0x511b1d6627a5de7c # initialize rs1
li x27, 0xb53836e0d742a07a # initialize rs2
ror x2, x6, x27 # perform operation
RVTEST_SIGUPD(x7, x0, x2, 48)

# Testcase cp_rs1 (Test source rs1 = x7)
mv x4, x7 # switch signature pointer register to avoid conflict with test
li x7, 0x99858ec4d0df8a1e # initialize rs1
li x17, 0xb2ee310b58d525df # initialize rs2
ror x31, x7, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 56)

# Testcase cp_rs1 (Test source rs1 = x8)
li x8, 0x6475253089b492a7 # initialize rs1
li x31, 0x6cb9739e3e145bf4 # initialize rs2
ror x22, x8, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 64)

# Testcase cp_rs1 (Test source rs1 = x9)
li x9, 0x20c51c6ff40f1610 # initialize rs1
li x29, 0x5dedbf9aef12f35f # initialize rs2
ror x31, x9, x29 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 72)

# Testcase cp_rs1 (Test source rs1 = x10)
li x10, 0x2d58cb4fa413d7c7 # initialize rs1
li x5, 0x35b038e753762a6b # initialize rs2
ror x15, x10, x5 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 80)

# Testcase cp_rs1 (Test source rs1 = x11)
li x11, 0xe8691b8565ca4a7f # initialize rs1
li x25, 0x2c16bda05aaa88ef # initialize rs2
ror x17, x11, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 88)

# Testcase cp_rs1 (Test source rs1 = x12)
li x12, 0x1b7e604bb69e28b5 # initialize rs1
li x26, 0xa2d6282d61795cbc # initialize rs2
ror x21, x12, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 96)

# Testcase cp_rs1 (Test source rs1 = x13)
li x13, 0xfcd22acfdfac3f4c # initialize rs1
li x29, 0x6a5bb9890c561f10 # initialize rs2
ror x23, x13, x29 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 104)

# Testcase cp_rs1 (Test source rs1 = x14)
li x14, 0xc7cb28d37c217ba9 # initialize rs1
li x10, 0x186a8bc8d5862539 # initialize rs2
ror x3, x14, x10 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 112)

# Testcase cp_rs1 (Test source rs1 = x15)
li x15, 0x438ce9e77b3ec713 # initialize rs1
li x16, 0xe7a3027d27ef241c # initialize rs2
ror x31, x15, x16 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 120)

# Testcase cp_rs1 (Test source rs1 = x16)
li x16, 0xff787e0c5ae5ff03 # initialize rs1
li x24, 0xbff77f13d75ff3d5 # initialize rs2
ror x2, x16, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 128)

# Testcase cp_rs1 (Test source rs1 = x17)
li x17, 0xc90a8e22d1622d30 # initialize rs1
li x8, 0x81084f49f52fe589 # initialize rs2
ror x6, x17, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x6, 136)

# Testcase cp_rs1 (Test source rs1 = x18)
li x18, 0x573ceccf9c634132 # initialize rs1
li x14, 0xd5c721c0f9a9d2f4 # initialize rs2
ror x17, x18, x14 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 144)

# Testcase cp_rs1 (Test source rs1 = x19)
li x19, 0xd5c09f1c79228ebb # initialize rs1
li x30, 0x44966b2ea6a4c1a0 # initialize rs2
ror x31, x19, x30 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 152)

# Testcase cp_rs1 (Test source rs1 = x20)
li x20, 0xecede474dd3f0601 # initialize rs1
li x1, 0x0d15d61ecc0b71fb # initialize rs2
ror x9, x20, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 160)

# Testcase cp_rs1 (Test source rs1 = x21)
li x21, 0x1af6ba400577494d # initialize rs1
li x18, 0xf10e499572cef1fd # initialize rs2
ror x22, x21, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 168)

# Testcase cp_rs1 (Test source rs1 = x22)
li x22, 0x84a236da3f08ea75 # initialize rs1
li x12, 0xe16b70eb2dceb34e # initialize rs2
ror x16, x22, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 176)

# Testcase cp_rs1 (Test source rs1 = x23)
li x23, 0xc71fb8010f49fa78 # initialize rs1
li x20, 0xdd72771c2b90bb63 # initialize rs2
ror x10, x23, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 184)

# Testcase cp_rs1 (Test source rs1 = x24)
li x24, 0xfb7052a45dd47bd7 # initialize rs1
li x25, 0xdef444e28e61c770 # initialize rs2
ror x13, x24, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 192)

# Testcase cp_rs1 (Test source rs1 = x25)
li x25, 0x4d9c40dbe703199c # initialize rs1
li x29, 0xa329ffa0241c5bbb # initialize rs2
ror x5, x25, x29 # perform operation
RVTEST_SIGUPD(x4, x0, x5, 200)

# Testcase cp_rs1 (Test source rs1 = x26)
li x26, 0x5a8791a8c1b67888 # initialize rs1
li x12, 0xd108bae130bcb2a4 # initialize rs2
ror x27, x26, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 208)

# Testcase cp_rs1 (Test source rs1 = x27)
li x27, 0x8a55171666cb848f # initialize rs1
li x29, 0x2a29438ab3de07f5 # initialize rs2
ror x10, x27, x29 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 216)

# Testcase cp_rs1 (Test source rs1 = x28)
li x28, 0xcb9a2d0e83f3d0c7 # initialize rs1
li x7, 0x3a7701de6a67e9f1 # initialize rs2
ror x26, x28, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 224)

# Testcase cp_rs1 (Test source rs1 = x29)
li x29, 0x574fdb007acc89d1 # initialize rs1
li x17, 0x16def10b3a5791ad # initialize rs2
ror x1, x29, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 232)

# Testcase cp_rs1 (Test source rs1 = x30)
li x30, 0x1f6b124c2c8e3475 # initialize rs1
li x7, 0xf4ab577e03b5e266 # initialize rs2
ror x28, x30, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x28, 240)

# Testcase cp_rs1 (Test source rs1 = x31)
li x31, 0xc67627bf325f0fab # initialize rs1
li x20, 0x0971cf0d8b984b0b # initialize rs2
ror x15, x31, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 248)

# Testcase cp_rs2 (Test source rs2 = x0)
li x27, 0x70877e2d3a2a2c4b # initialize rs1
li x0, 0x7d17be56bbc51f67 # initialize rs2
ror x3, x27, x0 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 256)

# Testcase cp_rs2 (Test source rs2 = x1)
li x21, 0x3a9ae8aa2acfe943 # initialize rs1
li x1, 0x3b367afa7db219d9 # initialize rs2
ror x31, x21, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 264)

# Testcase cp_rs2 (Test source rs2 = x2)
li x3, 0x7a86bb0cfeed7025 # initialize rs1
li x2, 0xb2b82754b892b1a1 # initialize rs2
ror x16, x3, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 272)

# Testcase cp_rs2 (Test source rs2 = x3)
li x25, 0x8e8881fe04d86a83 # initialize rs1
li x3, 0x55c486d28d4922be # initialize rs2
ror x22, x25, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 280)

# Testcase cp_rs2 (Test source rs2 = x4)
mv x5, x4 # switch signature pointer register to avoid conflict with test
li x16, 0xad88db717b832d5e # initialize rs1
li x4, 0x48a9ef603442a46a # initialize rs2
ror x20, x16, x4 # perform operation
RVTEST_SIGUPD(x5, x0, x20, 288)

# Testcase cp_rs2 (Test source rs2 = x5)
mv x6, x5 # switch signature pointer register to avoid conflict with test
li x21, 0xdb178b73bc53a008 # initialize rs1
li x5, 0x6f3ba13c6e8b0a7f # initialize rs2
ror x10, x21, x5 # perform operation
RVTEST_SIGUPD(x6, x0, x10, 296)

# Testcase cp_rs2 (Test source rs2 = x6)
mv x7, x6 # switch signature pointer register to avoid conflict with test
li x31, 0x69b65d0a58b066d6 # initialize rs1
li x6, 0xefc663f0d2842334 # initialize rs2
ror x11, x31, x6 # perform operation
RVTEST_SIGUPD(x7, x0, x11, 304)

# Testcase cp_rs2 (Test source rs2 = x7)
mv x4, x7 # switch signature pointer register to avoid conflict with test
li x25, 0x930fa7ea5d76339c # initialize rs1
li x7, 0xca82e82c4b45c145 # initialize rs2
ror x24, x25, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 312)

# Testcase cp_rs2 (Test source rs2 = x8)
li x20, 0x73431c79a2cccc92 # initialize rs1
li x8, 0x778d0b528e032c7c # initialize rs2
ror x26, x20, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 320)

# Testcase cp_rs2 (Test source rs2 = x9)
li x30, 0xcc507aae9c0e7f8b # initialize rs1
li x9, 0x85240fb6c57a2cc0 # initialize rs2
ror x3, x30, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 328)

# Testcase cp_rs2 (Test source rs2 = x10)
li x27, 0xebb7e3602db29fa6 # initialize rs1
li x10, 0x8acdd40432c7db01 # initialize rs2
ror x17, x27, x10 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 336)

# Testcase cp_rs2 (Test source rs2 = x11)
li x8, 0x9261170195af7bde # initialize rs1
li x11, 0x13ba42c985a063e1 # initialize rs2
ror x24, x8, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 344)

# Testcase cp_rs2 (Test source rs2 = x12)
li x17, 0xaef5010486a2be91 # initialize rs1
li x12, 0xd56ddf7c24fa197a # initialize rs2
ror x14, x17, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 352)

# Testcase cp_rs2 (Test source rs2 = x13)
li x5, 0xa7348c985c146176 # initialize rs1
li x13, 0x1b79a58bd6ce1abf # initialize rs2
ror x21, x5, x13 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 360)

# Testcase cp_rs2 (Test source rs2 = x14)
li x21, 0xda59c2e2ed8ad3ba # initialize rs1
li x14, 0xa458a2c13bf161ee # initialize rs2
ror x6, x21, x14 # perform operation
RVTEST_SIGUPD(x4, x0, x6, 368)

# Testcase cp_rs2 (Test source rs2 = x15)
li x3, 0x2fba46cf515abc30 # initialize rs1
li x15, 0x8fe247fcfa95a629 # initialize rs2
ror x24, x3, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 376)

# Testcase cp_rs2 (Test source rs2 = x16)
li x3, 0xdf5bdb3118904df6 # initialize rs1
li x16, 0x67dc95ea022ffe1d # initialize rs2
ror x25, x3, x16 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 384)

# Testcase cp_rs2 (Test source rs2 = x17)
li x24, 0xf21fff3855c258e1 # initialize rs1
li x17, 0xa7d543c0c11913f8 # initialize rs2
ror x1, x24, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 392)

# Testcase cp_rs2 (Test source rs2 = x18)
li x17, 0xaaf5cf9225d9a9dc # initialize rs1
li x18, 0xf0fb87b3920373d2 # initialize rs2
ror x19, x17, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 400)

# Testcase cp_rs2 (Test source rs2 = x19)
li x24, 0xa2cfbeb4aa1726b6 # initialize rs1
li x19, 0xfe4cf8fe8820b684 # initialize rs2
ror x12, x24, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 408)

# Testcase cp_rs2 (Test source rs2 = x20)
li x24, 0x1b1b9fd174158213 # initialize rs1
li x20, 0xe23941584a089d11 # initialize rs2
ror x2, x24, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 416)

# Testcase cp_rs2 (Test source rs2 = x21)
li x20, 0xfa1365812619c50c # initialize rs1
li x21, 0xd95663ff5bff9dc3 # initialize rs2
ror x17, x20, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 424)

# Testcase cp_rs2 (Test source rs2 = x22)
li x24, 0xf11a468def900390 # initialize rs1
li x22, 0xfc0da72f2c67cddd # initialize rs2
ror x18, x24, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 432)

# Testcase cp_rs2 (Test source rs2 = x23)
li x26, 0x186a7232379fd2f9 # initialize rs1
li x23, 0x51b24b07c483c802 # initialize rs2
ror x11, x26, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 440)

# Testcase cp_rs2 (Test source rs2 = x24)
li x16, 0x32b80f7352be776e # initialize rs1
li x24, 0x9b80309612601b35 # initialize rs2
ror x5, x16, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x5, 448)

# Testcase cp_rs2 (Test source rs2 = x25)
li x9, 0x390d1d0bae567d59 # initialize rs1
li x25, 0xdba178396396a6bb # initialize rs2
ror x16, x9, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 456)

# Testcase cp_rs2 (Test source rs2 = x26)
li x13, 0x507b5cb5466b1eb9 # initialize rs1
li x26, 0x9a9ddb0ebd0931f7 # initialize rs2
ror x11, x13, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 464)

# Testcase cp_rs2 (Test source rs2 = x27)
li x7, 0x377cf21d18725d3c # initialize rs1
li x27, 0x45487a01500467fa # initialize rs2
ror x19, x7, x27 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 472)

# Testcase cp_rs2 (Test source rs2 = x28)
li x6, 0xa37b9974ccd15af0 # initialize rs1
li x28, 0xd7fcb3017184baa1 # initialize rs2
ror x18, x6, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 480)

# Testcase cp_rs2 (Test source rs2 = x29)
li x8, 0xc51ae99d7b45ff82 # initialize rs1
li x29, 0x3688fe92482137e8 # initialize rs2
ror x20, x8, x29 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 488)

# Testcase cp_rs2 (Test source rs2 = x30)
li x27, 0xf7a098da786ab95e # initialize rs1
li x30, 0x82d2e50b7e690494 # initialize rs2
ror x7, x27, x30 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 496)

# Testcase cp_rs2 (Test source rs2 = x31)
li x3, 0x660008bef5e2574c # initialize rs1
li x31, 0x053f6e57e4d5a929 # initialize rs2
ror x22, x3, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 504)

# Testcase cp_rd (Test destination rd = x0)
li x19, 0x5766e2aa315e4dee # initialize rs1
li x23, 0x449176d48a1e1ad9 # initialize rs2
ror x0, x19, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x0, 512)

# Testcase cp_rd (Test destination rd = x1)
li x28, 0xabdd914b09771454 # initialize rs1
li x24, 0x0088aab837574137 # initialize rs2
ror x1, x28, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 520)

# Testcase cp_rd (Test destination rd = x2)
li x8, 0xb2a119203cdb651d # initialize rs1
li x27, 0xe87ac4a6f026aa26 # initialize rs2
ror x2, x8, x27 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 528)

# Testcase cp_rd (Test destination rd = x3)
li x25, 0x8667ef37d7bb406d # initialize rs1
li x20, 0xb922dc5c00eab5e3 # initialize rs2
ror x3, x25, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 536)

# Testcase cp_rd (Test destination rd = x4)
mv x6, x4 # switch signature pointer register to avoid conflict with test
li x27, 0xe9660ff2aa4e07b5 # initialize rs1
li x5, 0x53ffabc62c81a6ac # initialize rs2
ror x4, x27, x5 # perform operation
RVTEST_SIGUPD(x6, x0, x4, 544)

# Testcase cp_rd (Test destination rd = x5)
li x14, 0x2207b8b928d4670b # initialize rs1
li x3, 0x68f2620192688c3c # initialize rs2
ror x5, x14, x3 # perform operation
RVTEST_SIGUPD(x6, x0, x5, 552)

# Testcase cp_rd (Test destination rd = x6)
mv x7, x6 # switch signature pointer register to avoid conflict with test
li x24, 0x63234651a0a52925 # initialize rs1
li x25, 0x7eab9250f022c2d2 # initialize rs2
ror x6, x24, x25 # perform operation
RVTEST_SIGUPD(x7, x0, x6, 560)

# Testcase cp_rd (Test destination rd = x7)
mv x4, x7 # switch signature pointer register to avoid conflict with test
li x11, 0xc1675876ec53e0ab # initialize rs1
li x6, 0x83ba5000e868a9ab # initialize rs2
ror x7, x11, x6 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 568)

# Testcase cp_rd (Test destination rd = x8)
li x13, 0x37dff12e2873201c # initialize rs1
li x8, 0x92c4f7864d46b630 # initialize rs2
ror x8, x13, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 576)

# Testcase cp_rd (Test destination rd = x9)
li x8, 0x401a944d032eddb8 # initialize rs1
li x26, 0x64239889d84a9b46 # initialize rs2
ror x9, x8, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 584)

# Testcase cp_rd (Test destination rd = x10)
li x3, 0xeb875d65394b7705 # initialize rs1
li x25, 0x4e382275e7482cf6 # initialize rs2
ror x10, x3, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 592)

# Testcase cp_rd (Test destination rd = x11)
li x2, 0x38be9010b8415c21 # initialize rs1
li x22, 0xa99fa22d224265c7 # initialize rs2
ror x11, x2, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 600)

# Testcase cp_rd (Test destination rd = x12)
li x27, 0x109a59fb17d5651b # initialize rs1
li x7, 0x3dac0244341da013 # initialize rs2
ror x12, x27, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 608)

# Testcase cp_rd (Test destination rd = x13)
li x10, 0x712d46f68eee05e0 # initialize rs1
li x1, 0x250b370c8184dc1e # initialize rs2
ror x13, x10, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 616)

# Testcase cp_rd (Test destination rd = x14)
li x24, 0xef794a2eba62882c # initialize rs1
li x23, 0x2f1ac68250b1cb21 # initialize rs2
ror x14, x24, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 624)

# Testcase cp_rd (Test destination rd = x15)
li x7, 0x6860cb4651d66c1f # initialize rs1
li x28, 0x844c5ce85fb58fb8 # initialize rs2
ror x15, x7, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 632)

# Testcase cp_rd (Test destination rd = x16)
li x16, 0x8829f24fc04809b6 # initialize rs1
li x30, 0xdd6a71b38b8daf6f # initialize rs2
ror x16, x16, x30 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 640)

# Testcase cp_rd (Test destination rd = x17)
li x21, 0xaca3d9a2bc433a27 # initialize rs1
li x15, 0xdd64fd239a104108 # initialize rs2
ror x17, x21, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 648)

# Testcase cp_rd (Test destination rd = x18)
li x21, 0xd2edf53920e22a25 # initialize rs1
li x8, 0xa30674167a878db2 # initialize rs2
ror x18, x21, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 656)

# Testcase cp_rd (Test destination rd = x19)
li x14, 0x18dafcf0f74b559e # initialize rs1
li x1, 0x04f6f62e7316b794 # initialize rs2
ror x19, x14, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 664)

# Testcase cp_rd (Test destination rd = x20)
li x26, 0x2b8b167ea301451f # initialize rs1
li x8, 0xc078a3b5da41549b # initialize rs2
ror x20, x26, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 672)

# Testcase cp_rd (Test destination rd = x21)
li x22, 0x2adb54fed9bcceb3 # initialize rs1
li x27, 0xe16cfa67b5e8d7ca # initialize rs2
ror x21, x22, x27 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 680)

# Testcase cp_rd (Test destination rd = x22)
li x6, 0x28903f2416a123ae # initialize rs1
li x9, 0x6012c07aef0664c1 # initialize rs2
ror x22, x6, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 688)

# Testcase cp_rd (Test destination rd = x23)
li x18, 0x01360fdb1d3dfbee # initialize rs1
li x10, 0x252e5a523c4590ec # initialize rs2
ror x23, x18, x10 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 696)

# Testcase cp_rd (Test destination rd = x24)
li x14, 0x20c5560bdd077e71 # initialize rs1
li x12, 0x7fea2af3176731e5 # initialize rs2
ror x24, x14, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 704)

# Testcase cp_rd (Test destination rd = x25)
li x5, 0xd16c939e69f84039 # initialize rs1
li x12, 0x027ba0a18acd4b77 # initialize rs2
ror x25, x5, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 712)

# Testcase cp_rd (Test destination rd = x26)
li x27, 0xf4b6954d2404da9b # initialize rs1
li x16, 0xc1fbd084a0adc024 # initialize rs2
ror x26, x27, x16 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 720)

# Testcase cp_rd (Test destination rd = x27)
li x6, 0x7065a670ba0b52bc # initialize rs1
li x18, 0x80be6219bb3f1ae5 # initialize rs2
ror x27, x6, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 728)

# Testcase cp_rd (Test destination rd = x28)
li x27, 0x41f7c7dcb26fb062 # initialize rs1
li x6, 0x759cc5b8c1bd7091 # initialize rs2
ror x28, x27, x6 # perform operation
RVTEST_SIGUPD(x4, x0, x28, 736)

# Testcase cp_rd (Test destination rd = x29)
li x8, 0xb85529802ef67a09 # initialize rs1
li x11, 0x54da2fe8b78e23d7 # initialize rs2
ror x29, x8, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 744)

# Testcase cp_rd (Test destination rd = x30)
li x7, 0x4ffdac3c00024145 # initialize rs1
li x26, 0x6b81f3affd55936e # initialize rs2
ror x30, x7, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 752)

# Testcase cp_rd (Test destination rd = x31)
li x1, 0x75eb76b0d442fbcc # initialize rs1
li x27, 0xe9f3c1b910dbdbac # initialize rs2
ror x31, x1, x27 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 760)

# Testcase cp_rs1_corners (Test source rs1 value = 0x0)
li x24, 0x0000000000000000 # initialize rs1
li x5, 0xd39bb4089f88b48c # initialize rs2
ror x25, x24, x5 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 768)

# Testcase cp_rs1_corners (Test source rs1 value = 0x1)
li x31, 0x0000000000000001 # initialize rs1
li x20, 0x56dae833f0cdd394 # initialize rs2
ror x21, x31, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 776)

# Testcase cp_rs1_corners (Test source rs1 value = 0x2)
li x15, 0x0000000000000002 # initialize rs1
li x12, 0x9d10d6c0b7649c81 # initialize rs2
ror x9, x15, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 784)

# Testcase cp_rs1_corners (Test source rs1 value = 0x8000000000000000)
li x13, 0x8000000000000000 # initialize rs1
li x25, 0xc1c89b5dfc48ce24 # initialize rs2
ror x27, x13, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 792)

# Testcase cp_rs1_corners (Test source rs1 value = 0x8000000000000001)
li x18, 0x8000000000000001 # initialize rs1
li x5, 0xc508accd7d502958 # initialize rs2
ror x10, x18, x5 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 800)

# Testcase cp_rs1_corners (Test source rs1 value = 0x7fffffffffffffff)
li x15, 0x7fffffffffffffff # initialize rs1
li x8, 0x74d87836fec5b295 # initialize rs2
ror x29, x15, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 808)

# Testcase cp_rs1_corners (Test source rs1 value = 0x7ffffffffffffffe)
li x26, 0x7ffffffffffffffe # initialize rs1
li x5, 0x71f243b5ab3c4827 # initialize rs2
ror x30, x26, x5 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 816)

# Testcase cp_rs1_corners (Test source rs1 value = 0xffffffffffffffff)
li x10, 0xffffffffffffffff # initialize rs1
li x9, 0xcbd4368ed3ffe9b8 # initialize rs2
ror x22, x10, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 824)

# Testcase cp_rs1_corners (Test source rs1 value = 0xfffffffffffffffe)
li x30, 0xfffffffffffffffe # initialize rs1
li x26, 0xfa66d8bdbba0af4f # initialize rs2
ror x17, x30, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 832)

# Testcase cp_rs1_corners (Test source rs1 value = 0x5bbc887763ae86f2)
li x12, 0x5bbc887763ae86f2 # initialize rs1
li x3, 0x20c9007086b4a6f1 # initialize rs2
ror x24, x12, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 840)

# Testcase cp_rs1_corners (Test source rs1 value = 0xaaaaaaaaaaaaaaaa)
li x23, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x31, 0x538391a0cff47697 # initialize rs2
ror x12, x23, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 848)

# Testcase cp_rs1_corners (Test source rs1 value = 0x5555555555555555)
li x25, 0x5555555555555555 # initialize rs1
li x7, 0x34dbf7ca360e86d5 # initialize rs2
ror x5, x25, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x5, 856)

# Testcase cp_rs1_corners (Test source rs1 value = 0xffffffff)
li x14, 0x00000000ffffffff # initialize rs1
li x21, 0x306b6c71cc72f089 # initialize rs2
ror x22, x14, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 864)

# Testcase cp_rs1_corners (Test source rs1 value = 0xfffffffe)
li x28, 0x00000000fffffffe # initialize rs1
li x9, 0x1a48d9ba0a0288db # initialize rs2
ror x11, x28, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 872)

# Testcase cp_rs1_corners (Test source rs1 value = 0x100000000)
li x9, 0x0000000100000000 # initialize rs1
li x27, 0xce345e15f7c8bd79 # initialize rs2
ror x31, x9, x27 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 880)

# Testcase cp_rs1_corners (Test source rs1 value = 0x100000001)
li x6, 0x0000000100000001 # initialize rs1
li x27, 0x3cb1074dd25b8158 # initialize rs2
ror x12, x6, x27 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 888)

# Testcase cp_rs2_corners (Test source rs2 value = 0x0)
li x16, 0x9edd4d9e185a5294 # initialize rs1
li x19, 0x0000000000000000 # initialize rs2
ror x25, x16, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 896)

# Testcase cp_rs2_corners (Test source rs2 value = 0x1)
li x1, 0x6a05489cfde67438 # initialize rs1
li x13, 0x0000000000000001 # initialize rs2
ror x17, x1, x13 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 904)

# Testcase cp_rs2_corners (Test source rs2 value = 0x2)
li x27, 0x040c6b16c779d988 # initialize rs1
li x3, 0x0000000000000002 # initialize rs2
ror x10, x27, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 912)

# Testcase cp_rs2_corners (Test source rs2 value = 0x8000000000000000)
li x24, 0xaf703efaf2e3ee4b # initialize rs1
li x26, 0x8000000000000000 # initialize rs2
ror x16, x24, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 920)

# Testcase cp_rs2_corners (Test source rs2 value = 0x8000000000000001)
li x16, 0xc1fe0912059fb4cd # initialize rs1
li x23, 0x8000000000000001 # initialize rs2
ror x17, x16, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 928)

# Testcase cp_rs2_corners (Test source rs2 value = 0x7fffffffffffffff)
li x2, 0xa8cc4e9da114aea5 # initialize rs1
li x24, 0x7fffffffffffffff # initialize rs2
ror x18, x2, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 936)

# Testcase cp_rs2_corners (Test source rs2 value = 0x7ffffffffffffffe)
li x13, 0x6bd951ef2f4d322d # initialize rs1
li x28, 0x7ffffffffffffffe # initialize rs2
ror x10, x13, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 944)

# Testcase cp_rs2_corners (Test source rs2 value = 0xffffffffffffffff)
li x14, 0x17e45de430c9ef1b # initialize rs1
li x30, 0xffffffffffffffff # initialize rs2
ror x1, x14, x30 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 952)

# Testcase cp_rs2_corners (Test source rs2 value = 0xfffffffffffffffe)
li x18, 0x7b8a2d6b3e58b83f # initialize rs1
li x3, 0xfffffffffffffffe # initialize rs2
ror x27, x18, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 960)

# Testcase cp_rs2_corners (Test source rs2 value = 0x5bbc887763ae86f2)
li x5, 0x34a7f91b8d756151 # initialize rs1
li x25, 0x5bbc887763ae86f2 # initialize rs2
ror x26, x5, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 968)

# Testcase cp_rs2_corners (Test source rs2 value = 0xaaaaaaaaaaaaaaaa)
li x3, 0x08f6538b4fb90e77 # initialize rs1
li x30, 0xaaaaaaaaaaaaaaaa # initialize rs2
ror x7, x3, x30 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 976)

# Testcase cp_rs2_corners (Test source rs2 value = 0x5555555555555555)
li x18, 0x6373badc45cd7034 # initialize rs1
li x25, 0x5555555555555555 # initialize rs2
ror x17, x18, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 984)

# Testcase cp_rs2_corners (Test source rs2 value = 0xffffffff)
li x16, 0x9a3c8d6e1a01689e # initialize rs1
li x5, 0x00000000ffffffff # initialize rs2
ror x12, x16, x5 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 992)

# Testcase cp_rs2_corners (Test source rs2 value = 0xfffffffe)
li x24, 0x8084e65188457294 # initialize rs1
li x30, 0x00000000fffffffe # initialize rs2
ror x8, x24, x30 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 1000)

# Testcase cp_rs2_corners (Test source rs2 value = 0x100000000)
li x11, 0xd69a8b466c3525dc # initialize rs1
li x19, 0x0000000100000000 # initialize rs2
ror x1, x11, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 1008)

# Testcase cp_rs2_corners (Test source rs2 value = 0x100000001)
li x8, 0xf637d48127c89621 # initialize rs1
li x6, 0x0000000100000001 # initialize rs2
ror x9, x8, x6 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 1016)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0x0)
li x21, 0x0000000000000000 # initialize rs1
li x18, 0x0000000000000000 # initialize rs2
ror x5, x21, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x5, 1024)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0x1)
li x22, 0x0000000000000000 # initialize rs1
li x16, 0x0000000000000001 # initialize rs2
ror x12, x22, x16 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 1032)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0x2)
li x22, 0x0000000000000000 # initialize rs1
li x8, 0x0000000000000002 # initialize rs2
ror x28, x22, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x28, 1040)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0x8000000000000000)
li x31, 0x0000000000000000 # initialize rs1
li x10, 0x8000000000000000 # initialize rs2
ror x24, x31, x10 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 1048)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0x8000000000000001)
li x8, 0x0000000000000000 # initialize rs1
li x13, 0x8000000000000001 # initialize rs2
ror x27, x8, x13 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 1056)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0x7fffffffffffffff)
li x20, 0x0000000000000000 # initialize rs1
li x5, 0x7fffffffffffffff # initialize rs2
ror x19, x20, x5 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 1064)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0x7ffffffffffffffe)
li x21, 0x0000000000000000 # initialize rs1
li x8, 0x7ffffffffffffffe # initialize rs2
ror x24, x21, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 1072)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0xffffffffffffffff)
li x8, 0x0000000000000000 # initialize rs1
li x3, 0xffffffffffffffff # initialize rs2
ror x7, x8, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 1080)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0xfffffffffffffffe)
li x17, 0x0000000000000000 # initialize rs1
li x8, 0xfffffffffffffffe # initialize rs2
ror x19, x17, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 1088)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0x5bbc887763ae86f2)
li x16, 0x0000000000000000 # initialize rs1
li x11, 0x5bbc887763ae86f2 # initialize rs2
ror x29, x16, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 1096)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0xaaaaaaaaaaaaaaaa)
li x16, 0x0000000000000000 # initialize rs1
li x26, 0xaaaaaaaaaaaaaaaa # initialize rs2
ror x9, x16, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 1104)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0x5555555555555555)
li x21, 0x0000000000000000 # initialize rs1
li x31, 0x5555555555555555 # initialize rs2
ror x5, x21, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x5, 1112)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0xffffffff)
li x14, 0x0000000000000000 # initialize rs1
li x29, 0x00000000ffffffff # initialize rs2
ror x24, x14, x29 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 1120)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0xfffffffe)
li x18, 0x0000000000000000 # initialize rs1
li x16, 0x00000000fffffffe # initialize rs2
ror x21, x18, x16 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 1128)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0x100000000)
li x31, 0x0000000000000000 # initialize rs1
li x7, 0x0000000100000000 # initialize rs2
ror x3, x31, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 1136)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0x100000001)
li x20, 0x0000000000000000 # initialize rs1
li x12, 0x0000000100000001 # initialize rs2
ror x5, x20, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x5, 1144)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0x0)
li x21, 0x0000000000000001 # initialize rs1
li x8, 0x0000000000000000 # initialize rs2
ror x20, x21, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 1152)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0x1)
li x14, 0x0000000000000001 # initialize rs1
li x20, 0x0000000000000001 # initialize rs2
ror x29, x14, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 1160)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0x2)
li x1, 0x0000000000000001 # initialize rs1
li x27, 0x0000000000000002 # initialize rs2
ror x15, x1, x27 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 1168)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0x8000000000000000)
li x6, 0x0000000000000001 # initialize rs1
li x7, 0x8000000000000000 # initialize rs2
ror x20, x6, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 1176)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0x8000000000000001)
li x10, 0x0000000000000001 # initialize rs1
li x7, 0x8000000000000001 # initialize rs2
ror x2, x10, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 1184)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0x7fffffffffffffff)
li x22, 0x0000000000000001 # initialize rs1
li x25, 0x7fffffffffffffff # initialize rs2
ror x11, x22, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 1192)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0x7ffffffffffffffe)
li x21, 0x0000000000000001 # initialize rs1
li x11, 0x7ffffffffffffffe # initialize rs2
ror x12, x21, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 1200)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0xffffffffffffffff)
li x24, 0x0000000000000001 # initialize rs1
li x2, 0xffffffffffffffff # initialize rs2
ror x23, x24, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 1208)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0xfffffffffffffffe)
li x23, 0x0000000000000001 # initialize rs1
li x22, 0xfffffffffffffffe # initialize rs2
ror x20, x23, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 1216)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0x5bbc887763ae86f2)
li x16, 0x0000000000000001 # initialize rs1
li x29, 0x5bbc887763ae86f2 # initialize rs2
ror x10, x16, x29 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 1224)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0xaaaaaaaaaaaaaaaa)
li x5, 0x0000000000000001 # initialize rs1
li x9, 0xaaaaaaaaaaaaaaaa # initialize rs2
ror x22, x5, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 1232)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0x5555555555555555)
li x30, 0x0000000000000001 # initialize rs1
li x13, 0x5555555555555555 # initialize rs2
ror x11, x30, x13 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 1240)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0xffffffff)
li x15, 0x0000000000000001 # initialize rs1
li x14, 0x00000000ffffffff # initialize rs2
ror x21, x15, x14 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 1248)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0xfffffffe)
li x3, 0x0000000000000001 # initialize rs1
li x15, 0x00000000fffffffe # initialize rs2
ror x16, x3, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 1256)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0x100000000)
li x15, 0x0000000000000001 # initialize rs1
li x3, 0x0000000100000000 # initialize rs2
ror x11, x15, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 1264)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0x100000001)
li x28, 0x0000000000000001 # initialize rs1
li x1, 0x0000000100000001 # initialize rs2
ror x16, x28, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 1272)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0x0)
li x19, 0x0000000000000002 # initialize rs1
li x24, 0x0000000000000000 # initialize rs2
ror x15, x19, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 1280)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0x1)
li x10, 0x0000000000000002 # initialize rs1
li x3, 0x0000000000000001 # initialize rs2
ror x31, x10, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 1288)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0x2)
li x1, 0x0000000000000002 # initialize rs1
li x9, 0x0000000000000002 # initialize rs2
ror x10, x1, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 1296)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0x8000000000000000)
li x30, 0x0000000000000002 # initialize rs1
li x27, 0x8000000000000000 # initialize rs2
ror x6, x30, x27 # perform operation
RVTEST_SIGUPD(x4, x0, x6, 1304)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0x8000000000000001)
li x13, 0x0000000000000002 # initialize rs1
li x11, 0x8000000000000001 # initialize rs2
ror x30, x13, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 1312)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0x7fffffffffffffff)
li x29, 0x0000000000000002 # initialize rs1
li x30, 0x7fffffffffffffff # initialize rs2
ror x10, x29, x30 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 1320)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0x7ffffffffffffffe)
li x8, 0x0000000000000002 # initialize rs1
li x28, 0x7ffffffffffffffe # initialize rs2
ror x10, x8, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 1328)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0xffffffffffffffff)
li x22, 0x0000000000000002 # initialize rs1
li x13, 0xffffffffffffffff # initialize rs2
ror x29, x22, x13 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 1336)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0xfffffffffffffffe)
li x19, 0x0000000000000002 # initialize rs1
li x2, 0xfffffffffffffffe # initialize rs2
ror x15, x19, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 1344)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0x5bbc887763ae86f2)
li x21, 0x0000000000000002 # initialize rs1
li x17, 0x5bbc887763ae86f2 # initialize rs2
ror x12, x21, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 1352)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0xaaaaaaaaaaaaaaaa)
li x7, 0x0000000000000002 # initialize rs1
li x17, 0xaaaaaaaaaaaaaaaa # initialize rs2
ror x2, x7, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 1360)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0x5555555555555555)
li x12, 0x0000000000000002 # initialize rs1
li x8, 0x5555555555555555 # initialize rs2
ror x3, x12, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 1368)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0xffffffff)
li x1, 0x0000000000000002 # initialize rs1
li x12, 0x00000000ffffffff # initialize rs2
ror x11, x1, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 1376)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0xfffffffe)
li x29, 0x0000000000000002 # initialize rs1
li x13, 0x00000000fffffffe # initialize rs2
ror x6, x29, x13 # perform operation
RVTEST_SIGUPD(x4, x0, x6, 1384)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0x100000000)
li x26, 0x0000000000000002 # initialize rs1
li x13, 0x0000000100000000 # initialize rs2
ror x14, x26, x13 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 1392)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0x100000001)
li x2, 0x0000000000000002 # initialize rs1
li x30, 0x0000000100000001 # initialize rs2
ror x17, x2, x30 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 1400)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0x0)
li x3, 0x8000000000000000 # initialize rs1
li x18, 0x0000000000000000 # initialize rs2
ror x27, x3, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 1408)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0x1)
li x25, 0x8000000000000000 # initialize rs1
li x1, 0x0000000000000001 # initialize rs2
ror x7, x25, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 1416)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0x2)
li x30, 0x8000000000000000 # initialize rs1
li x21, 0x0000000000000002 # initialize rs2
ror x24, x30, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 1424)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0x8000000000000000)
li x6, 0x8000000000000000 # initialize rs1
li x27, 0x8000000000000000 # initialize rs2
ror x22, x6, x27 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 1432)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0x8000000000000001)
li x10, 0x8000000000000000 # initialize rs1
li x9, 0x8000000000000001 # initialize rs2
ror x7, x10, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 1440)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0x7fffffffffffffff)
li x20, 0x8000000000000000 # initialize rs1
li x24, 0x7fffffffffffffff # initialize rs2
ror x29, x20, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 1448)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0x7ffffffffffffffe)
li x31, 0x8000000000000000 # initialize rs1
li x1, 0x7ffffffffffffffe # initialize rs2
ror x9, x31, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 1456)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0xffffffffffffffff)
li x1, 0x8000000000000000 # initialize rs1
li x13, 0xffffffffffffffff # initialize rs2
ror x12, x1, x13 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 1464)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0xfffffffffffffffe)
li x31, 0x8000000000000000 # initialize rs1
li x26, 0xfffffffffffffffe # initialize rs2
ror x11, x31, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 1472)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0x5bbc887763ae86f2)
li x1, 0x8000000000000000 # initialize rs1
li x8, 0x5bbc887763ae86f2 # initialize rs2
ror x24, x1, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 1480)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0xaaaaaaaaaaaaaaaa)
li x24, 0x8000000000000000 # initialize rs1
li x8, 0xaaaaaaaaaaaaaaaa # initialize rs2
ror x27, x24, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 1488)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0x5555555555555555)
li x16, 0x8000000000000000 # initialize rs1
li x15, 0x5555555555555555 # initialize rs2
ror x24, x16, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 1496)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0xffffffff)
li x6, 0x8000000000000000 # initialize rs1
li x1, 0x00000000ffffffff # initialize rs2
ror x9, x6, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 1504)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0xfffffffe)
li x11, 0x8000000000000000 # initialize rs1
li x18, 0x00000000fffffffe # initialize rs2
ror x24, x11, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 1512)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0x100000000)
li x24, 0x8000000000000000 # initialize rs1
li x26, 0x0000000100000000 # initialize rs2
ror x11, x24, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 1520)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0x100000001)
li x23, 0x8000000000000000 # initialize rs1
li x29, 0x0000000100000001 # initialize rs2
ror x28, x23, x29 # perform operation
RVTEST_SIGUPD(x4, x0, x28, 1528)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0x0)
li x28, 0x8000000000000001 # initialize rs1
li x8, 0x0000000000000000 # initialize rs2
ror x31, x28, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 1536)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0x1)
li x14, 0x8000000000000001 # initialize rs1
li x16, 0x0000000000000001 # initialize rs2
ror x31, x14, x16 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 1544)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0x2)
li x6, 0x8000000000000001 # initialize rs1
li x27, 0x0000000000000002 # initialize rs2
ror x5, x6, x27 # perform operation
RVTEST_SIGUPD(x4, x0, x5, 1552)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0x8000000000000000)
li x13, 0x8000000000000001 # initialize rs1
li x24, 0x8000000000000000 # initialize rs2
ror x16, x13, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 1560)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0x8000000000000001)
li x23, 0x8000000000000001 # initialize rs1
li x24, 0x8000000000000001 # initialize rs2
ror x31, x23, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 1568)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0x7fffffffffffffff)
li x12, 0x8000000000000001 # initialize rs1
li x10, 0x7fffffffffffffff # initialize rs2
ror x30, x12, x10 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 1576)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0x7ffffffffffffffe)
li x7, 0x8000000000000001 # initialize rs1
li x18, 0x7ffffffffffffffe # initialize rs2
ror x12, x7, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 1584)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0xffffffffffffffff)
li x13, 0x8000000000000001 # initialize rs1
li x3, 0xffffffffffffffff # initialize rs2
ror x21, x13, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 1592)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0xfffffffffffffffe)
li x17, 0x8000000000000001 # initialize rs1
li x9, 0xfffffffffffffffe # initialize rs2
ror x14, x17, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 1600)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0x5bbc887763ae86f2)
li x12, 0x8000000000000001 # initialize rs1
li x1, 0x5bbc887763ae86f2 # initialize rs2
ror x31, x12, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 1608)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0xaaaaaaaaaaaaaaaa)
li x26, 0x8000000000000001 # initialize rs1
li x30, 0xaaaaaaaaaaaaaaaa # initialize rs2
ror x7, x26, x30 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 1616)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0x5555555555555555)
li x10, 0x8000000000000001 # initialize rs1
li x18, 0x5555555555555555 # initialize rs2
ror x23, x10, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 1624)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0xffffffff)
li x10, 0x8000000000000001 # initialize rs1
li x17, 0x00000000ffffffff # initialize rs2
ror x23, x10, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 1632)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0xfffffffe)
li x29, 0x8000000000000001 # initialize rs1
li x14, 0x00000000fffffffe # initialize rs2
ror x11, x29, x14 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 1640)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0x100000000)
li x26, 0x8000000000000001 # initialize rs1
li x29, 0x0000000100000000 # initialize rs2
ror x18, x26, x29 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 1648)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0x100000001)
li x6, 0x8000000000000001 # initialize rs1
li x17, 0x0000000100000001 # initialize rs2
ror x8, x6, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 1656)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0x0)
li x30, 0x7fffffffffffffff # initialize rs1
li x21, 0x0000000000000000 # initialize rs2
ror x7, x30, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 1664)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0x1)
li x16, 0x7fffffffffffffff # initialize rs1
li x6, 0x0000000000000001 # initialize rs2
ror x20, x16, x6 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 1672)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0x2)
li x29, 0x7fffffffffffffff # initialize rs1
li x13, 0x0000000000000002 # initialize rs2
ror x27, x29, x13 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 1680)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0x8000000000000000)
li x30, 0x7fffffffffffffff # initialize rs1
li x5, 0x8000000000000000 # initialize rs2
ror x21, x30, x5 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 1688)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0x8000000000000001)
li x7, 0x7fffffffffffffff # initialize rs1
li x17, 0x8000000000000001 # initialize rs2
ror x26, x7, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 1696)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0x7fffffffffffffff)
li x19, 0x7fffffffffffffff # initialize rs1
li x7, 0x7fffffffffffffff # initialize rs2
ror x9, x19, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 1704)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0x7ffffffffffffffe)
li x21, 0x7fffffffffffffff # initialize rs1
li x20, 0x7ffffffffffffffe # initialize rs2
ror x22, x21, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 1712)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0xffffffffffffffff)
li x30, 0x7fffffffffffffff # initialize rs1
li x8, 0xffffffffffffffff # initialize rs2
ror x21, x30, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 1720)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0xfffffffffffffffe)
li x12, 0x7fffffffffffffff # initialize rs1
li x20, 0xfffffffffffffffe # initialize rs2
ror x9, x12, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 1728)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0x5bbc887763ae86f2)
li x6, 0x7fffffffffffffff # initialize rs1
li x17, 0x5bbc887763ae86f2 # initialize rs2
ror x18, x6, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 1736)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0xaaaaaaaaaaaaaaaa)
li x5, 0x7fffffffffffffff # initialize rs1
li x3, 0xaaaaaaaaaaaaaaaa # initialize rs2
ror x12, x5, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 1744)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0x5555555555555555)
li x1, 0x7fffffffffffffff # initialize rs1
li x6, 0x5555555555555555 # initialize rs2
ror x24, x1, x6 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 1752)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0xffffffff)
li x9, 0x7fffffffffffffff # initialize rs1
li x30, 0x00000000ffffffff # initialize rs2
ror x12, x9, x30 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 1760)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0xfffffffe)
li x12, 0x7fffffffffffffff # initialize rs1
li x30, 0x00000000fffffffe # initialize rs2
ror x23, x12, x30 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 1768)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0x100000000)
li x22, 0x7fffffffffffffff # initialize rs1
li x9, 0x0000000100000000 # initialize rs2
ror x25, x22, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 1776)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0x100000001)
li x25, 0x7fffffffffffffff # initialize rs1
li x9, 0x0000000100000001 # initialize rs2
ror x8, x25, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 1784)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0x0)
li x19, 0x7ffffffffffffffe # initialize rs1
li x14, 0x0000000000000000 # initialize rs2
ror x13, x19, x14 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 1792)
addi x4, x4, 1800 # increment signature pointer and reset offset

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0x1)
li x3, 0x7ffffffffffffffe # initialize rs1
li x25, 0x0000000000000001 # initialize rs2
ror x6, x3, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x6, 0)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0x2)
li x20, 0x7ffffffffffffffe # initialize rs1
li x25, 0x0000000000000002 # initialize rs2
ror x9, x20, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 8)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0x8000000000000000)
li x22, 0x7ffffffffffffffe # initialize rs1
li x21, 0x8000000000000000 # initialize rs2
ror x26, x22, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 16)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0x8000000000000001)
li x12, 0x7ffffffffffffffe # initialize rs1
li x27, 0x8000000000000001 # initialize rs2
ror x24, x12, x27 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 24)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0x7fffffffffffffff)
li x30, 0x7ffffffffffffffe # initialize rs1
li x11, 0x7fffffffffffffff # initialize rs2
ror x8, x30, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 32)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0x7ffffffffffffffe)
li x6, 0x7ffffffffffffffe # initialize rs1
li x31, 0x7ffffffffffffffe # initialize rs2
ror x3, x6, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 40)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0xffffffffffffffff)
li x21, 0x7ffffffffffffffe # initialize rs1
li x8, 0xffffffffffffffff # initialize rs2
ror x30, x21, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 48)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0xfffffffffffffffe)
li x5, 0x7ffffffffffffffe # initialize rs1
li x24, 0xfffffffffffffffe # initialize rs2
ror x21, x5, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 56)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0x5bbc887763ae86f2)
li x26, 0x7ffffffffffffffe # initialize rs1
li x16, 0x5bbc887763ae86f2 # initialize rs2
ror x9, x26, x16 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 64)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0xaaaaaaaaaaaaaaaa)
li x7, 0x7ffffffffffffffe # initialize rs1
li x28, 0xaaaaaaaaaaaaaaaa # initialize rs2
ror x9, x7, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 72)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0x5555555555555555)
li x18, 0x7ffffffffffffffe # initialize rs1
li x20, 0x5555555555555555 # initialize rs2
ror x22, x18, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 80)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0xffffffff)
li x17, 0x7ffffffffffffffe # initialize rs1
li x1, 0x00000000ffffffff # initialize rs2
ror x24, x17, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 88)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0xfffffffe)
li x29, 0x7ffffffffffffffe # initialize rs1
li x11, 0x00000000fffffffe # initialize rs2
ror x18, x29, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 96)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0x100000000)
li x7, 0x7ffffffffffffffe # initialize rs1
li x27, 0x0000000100000000 # initialize rs2
ror x8, x7, x27 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 104)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0x100000001)
li x27, 0x7ffffffffffffffe # initialize rs1
li x23, 0x0000000100000001 # initialize rs2
ror x20, x27, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 112)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0x0)
li x17, 0xffffffffffffffff # initialize rs1
li x9, 0x0000000000000000 # initialize rs2
ror x7, x17, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 120)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0x1)
li x30, 0xffffffffffffffff # initialize rs1
li x21, 0x0000000000000001 # initialize rs2
ror x29, x30, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 128)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0x2)
li x22, 0xffffffffffffffff # initialize rs1
li x17, 0x0000000000000002 # initialize rs2
ror x10, x22, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 136)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0x8000000000000000)
li x22, 0xffffffffffffffff # initialize rs1
li x2, 0x8000000000000000 # initialize rs2
ror x1, x22, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 144)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0x8000000000000001)
li x12, 0xffffffffffffffff # initialize rs1
li x17, 0x8000000000000001 # initialize rs2
ror x22, x12, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 152)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0x7fffffffffffffff)
li x30, 0xffffffffffffffff # initialize rs1
li x12, 0x7fffffffffffffff # initialize rs2
ror x5, x30, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x5, 160)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0x7ffffffffffffffe)
li x9, 0xffffffffffffffff # initialize rs1
li x1, 0x7ffffffffffffffe # initialize rs2
ror x21, x9, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 168)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0xffffffffffffffff)
li x9, 0xffffffffffffffff # initialize rs1
li x8, 0xffffffffffffffff # initialize rs2
ror x12, x9, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 176)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0xfffffffffffffffe)
li x3, 0xffffffffffffffff # initialize rs1
li x18, 0xfffffffffffffffe # initialize rs2
ror x9, x3, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 184)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0x5bbc887763ae86f2)
li x22, 0xffffffffffffffff # initialize rs1
li x19, 0x5bbc887763ae86f2 # initialize rs2
ror x30, x22, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 192)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0xaaaaaaaaaaaaaaaa)
li x1, 0xffffffffffffffff # initialize rs1
li x27, 0xaaaaaaaaaaaaaaaa # initialize rs2
ror x6, x1, x27 # perform operation
RVTEST_SIGUPD(x4, x0, x6, 200)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0x5555555555555555)
li x31, 0xffffffffffffffff # initialize rs1
li x24, 0x5555555555555555 # initialize rs2
ror x1, x31, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 208)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0xffffffff)
li x11, 0xffffffffffffffff # initialize rs1
li x8, 0x00000000ffffffff # initialize rs2
ror x23, x11, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 216)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0xfffffffe)
li x18, 0xffffffffffffffff # initialize rs1
li x17, 0x00000000fffffffe # initialize rs2
ror x6, x18, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x6, 224)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0x100000000)
li x30, 0xffffffffffffffff # initialize rs1
li x29, 0x0000000100000000 # initialize rs2
ror x3, x30, x29 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 232)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0x100000001)
li x26, 0xffffffffffffffff # initialize rs1
li x15, 0x0000000100000001 # initialize rs2
ror x8, x26, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 240)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0x0)
li x11, 0xfffffffffffffffe # initialize rs1
li x13, 0x0000000000000000 # initialize rs2
ror x29, x11, x13 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 248)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0x1)
li x31, 0xfffffffffffffffe # initialize rs1
li x10, 0x0000000000000001 # initialize rs2
ror x13, x31, x10 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 256)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0x2)
li x22, 0xfffffffffffffffe # initialize rs1
li x27, 0x0000000000000002 # initialize rs2
ror x28, x22, x27 # perform operation
RVTEST_SIGUPD(x4, x0, x28, 264)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0x8000000000000000)
li x18, 0xfffffffffffffffe # initialize rs1
li x8, 0x8000000000000000 # initialize rs2
ror x11, x18, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 272)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0x8000000000000001)
li x26, 0xfffffffffffffffe # initialize rs1
li x22, 0x8000000000000001 # initialize rs2
ror x5, x26, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x5, 280)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0x7fffffffffffffff)
li x22, 0xfffffffffffffffe # initialize rs1
li x24, 0x7fffffffffffffff # initialize rs2
ror x30, x22, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 288)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0x7ffffffffffffffe)
li x17, 0xfffffffffffffffe # initialize rs1
li x24, 0x7ffffffffffffffe # initialize rs2
ror x18, x17, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 296)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0xffffffffffffffff)
li x23, 0xfffffffffffffffe # initialize rs1
li x20, 0xffffffffffffffff # initialize rs2
ror x22, x23, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 304)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0xfffffffffffffffe)
li x25, 0xfffffffffffffffe # initialize rs1
li x26, 0xfffffffffffffffe # initialize rs2
ror x17, x25, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 312)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0x5bbc887763ae86f2)
li x5, 0xfffffffffffffffe # initialize rs1
li x17, 0x5bbc887763ae86f2 # initialize rs2
ror x25, x5, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 320)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0xaaaaaaaaaaaaaaaa)
li x12, 0xfffffffffffffffe # initialize rs1
li x16, 0xaaaaaaaaaaaaaaaa # initialize rs2
ror x8, x12, x16 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 328)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0x5555555555555555)
li x31, 0xfffffffffffffffe # initialize rs1
li x22, 0x5555555555555555 # initialize rs2
ror x14, x31, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 336)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0xffffffff)
li x12, 0xfffffffffffffffe # initialize rs1
li x20, 0x00000000ffffffff # initialize rs2
ror x8, x12, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 344)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0xfffffffe)
li x28, 0xfffffffffffffffe # initialize rs1
li x24, 0x00000000fffffffe # initialize rs2
ror x22, x28, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 352)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0x100000000)
li x17, 0xfffffffffffffffe # initialize rs1
li x22, 0x0000000100000000 # initialize rs2
ror x12, x17, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 360)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0x100000001)
li x27, 0xfffffffffffffffe # initialize rs1
li x14, 0x0000000100000001 # initialize rs2
ror x1, x27, x14 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 368)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0x0)
li x11, 0x5bbc887763ae86f2 # initialize rs1
li x14, 0x0000000000000000 # initialize rs2
ror x27, x11, x14 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 376)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0x1)
li x16, 0x5bbc887763ae86f2 # initialize rs1
li x13, 0x0000000000000001 # initialize rs2
ror x8, x16, x13 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 384)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0x2)
li x5, 0x5bbc887763ae86f2 # initialize rs1
li x1, 0x0000000000000002 # initialize rs2
ror x21, x5, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 392)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0x8000000000000000)
li x26, 0x5bbc887763ae86f2 # initialize rs1
li x10, 0x8000000000000000 # initialize rs2
ror x30, x26, x10 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 400)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0x8000000000000001)
li x12, 0x5bbc887763ae86f2 # initialize rs1
li x17, 0x8000000000000001 # initialize rs2
ror x9, x12, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 408)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0x7fffffffffffffff)
li x22, 0x5bbc887763ae86f2 # initialize rs1
li x19, 0x7fffffffffffffff # initialize rs2
ror x21, x22, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 416)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0x7ffffffffffffffe)
li x16, 0x5bbc887763ae86f2 # initialize rs1
li x24, 0x7ffffffffffffffe # initialize rs2
ror x17, x16, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 424)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0xffffffffffffffff)
li x11, 0x5bbc887763ae86f2 # initialize rs1
li x2, 0xffffffffffffffff # initialize rs2
ror x27, x11, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 432)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0xfffffffffffffffe)
li x26, 0x5bbc887763ae86f2 # initialize rs1
li x20, 0xfffffffffffffffe # initialize rs2
ror x15, x26, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 440)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0x5bbc887763ae86f2)
li x15, 0x5bbc887763ae86f2 # initialize rs1
li x3, 0x5bbc887763ae86f2 # initialize rs2
ror x11, x15, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 448)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0xaaaaaaaaaaaaaaaa)
li x2, 0x5bbc887763ae86f2 # initialize rs1
li x12, 0xaaaaaaaaaaaaaaaa # initialize rs2
ror x7, x2, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 456)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0x5555555555555555)
li x6, 0x5bbc887763ae86f2 # initialize rs1
li x1, 0x5555555555555555 # initialize rs2
ror x30, x6, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 464)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0xffffffff)
li x2, 0x5bbc887763ae86f2 # initialize rs1
li x8, 0x00000000ffffffff # initialize rs2
ror x9, x2, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 472)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0xfffffffe)
li x7, 0x5bbc887763ae86f2 # initialize rs1
li x27, 0x00000000fffffffe # initialize rs2
ror x17, x7, x27 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 480)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0x100000000)
li x10, 0x5bbc887763ae86f2 # initialize rs1
li x2, 0x0000000100000000 # initialize rs2
ror x14, x10, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 488)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0x100000001)
li x7, 0x5bbc887763ae86f2 # initialize rs1
li x18, 0x0000000100000001 # initialize rs2
ror x10, x7, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 496)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0x0)
li x19, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x29, 0x0000000000000000 # initialize rs2
ror x14, x19, x29 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 504)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0x1)
li x18, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x5, 0x0000000000000001 # initialize rs2
ror x23, x18, x5 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 512)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0x2)
li x5, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x24, 0x0000000000000002 # initialize rs2
ror x16, x5, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 520)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0x8000000000000000)
li x1, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x14, 0x8000000000000000 # initialize rs2
ror x21, x1, x14 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 528)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0x8000000000000001)
li x16, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x20, 0x8000000000000001 # initialize rs2
ror x3, x16, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 536)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0x7fffffffffffffff)
li x12, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x22, 0x7fffffffffffffff # initialize rs2
ror x26, x12, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 544)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0x7ffffffffffffffe)
li x3, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x1, 0x7ffffffffffffffe # initialize rs2
ror x25, x3, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 552)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0xffffffffffffffff)
li x9, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x8, 0xffffffffffffffff # initialize rs2
ror x18, x9, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 560)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0xfffffffffffffffe)
li x17, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x13, 0xfffffffffffffffe # initialize rs2
ror x26, x17, x13 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 568)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0x5bbc887763ae86f2)
li x15, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x25, 0x5bbc887763ae86f2 # initialize rs2
ror x22, x15, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 576)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0xaaaaaaaaaaaaaaaa)
li x24, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x12, 0xaaaaaaaaaaaaaaaa # initialize rs2
ror x8, x24, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 584)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0x5555555555555555)
li x22, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x26, 0x5555555555555555 # initialize rs2
ror x7, x22, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 592)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0xffffffff)
li x22, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x26, 0x00000000ffffffff # initialize rs2
ror x8, x22, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 600)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0xfffffffe)
li x12, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x8, 0x00000000fffffffe # initialize rs2
ror x15, x12, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 608)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0x100000000)
li x8, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x23, 0x0000000100000000 # initialize rs2
ror x3, x8, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 616)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0x100000001)
li x1, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x12, 0x0000000100000001 # initialize rs2
ror x15, x1, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 624)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0x0)
li x7, 0x5555555555555555 # initialize rs1
li x1, 0x0000000000000000 # initialize rs2
ror x16, x7, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 632)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0x1)
li x6, 0x5555555555555555 # initialize rs1
li x11, 0x0000000000000001 # initialize rs2
ror x15, x6, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 640)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0x2)
li x22, 0x5555555555555555 # initialize rs1
li x9, 0x0000000000000002 # initialize rs2
ror x10, x22, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 648)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0x8000000000000000)
li x13, 0x5555555555555555 # initialize rs1
li x22, 0x8000000000000000 # initialize rs2
ror x23, x13, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 656)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0x8000000000000001)
li x2, 0x5555555555555555 # initialize rs1
li x7, 0x8000000000000001 # initialize rs2
ror x17, x2, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 664)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0x7fffffffffffffff)
li x12, 0x5555555555555555 # initialize rs1
li x9, 0x7fffffffffffffff # initialize rs2
ror x14, x12, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 672)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0x7ffffffffffffffe)
li x6, 0x5555555555555555 # initialize rs1
li x16, 0x7ffffffffffffffe # initialize rs2
ror x20, x6, x16 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 680)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0xffffffffffffffff)
li x20, 0x5555555555555555 # initialize rs1
li x21, 0xffffffffffffffff # initialize rs2
ror x1, x20, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 688)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0xfffffffffffffffe)
li x2, 0x5555555555555555 # initialize rs1
li x5, 0xfffffffffffffffe # initialize rs2
ror x28, x2, x5 # perform operation
RVTEST_SIGUPD(x4, x0, x28, 696)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0x5bbc887763ae86f2)
li x11, 0x5555555555555555 # initialize rs1
li x19, 0x5bbc887763ae86f2 # initialize rs2
ror x28, x11, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x28, 704)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0xaaaaaaaaaaaaaaaa)
li x9, 0x5555555555555555 # initialize rs1
li x5, 0xaaaaaaaaaaaaaaaa # initialize rs2
ror x23, x9, x5 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 712)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0x5555555555555555)
li x30, 0x5555555555555555 # initialize rs1
li x2, 0x5555555555555555 # initialize rs2
ror x22, x30, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 720)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0xffffffff)
li x21, 0x5555555555555555 # initialize rs1
li x26, 0x00000000ffffffff # initialize rs2
ror x8, x21, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 728)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0xfffffffe)
li x3, 0x5555555555555555 # initialize rs1
li x16, 0x00000000fffffffe # initialize rs2
ror x25, x3, x16 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 736)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0x100000000)
li x28, 0x5555555555555555 # initialize rs1
li x24, 0x0000000100000000 # initialize rs2
ror x7, x28, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 744)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0x100000001)
li x14, 0x5555555555555555 # initialize rs1
li x31, 0x0000000100000001 # initialize rs2
ror x21, x14, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 752)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0x0)
li x12, 0x00000000ffffffff # initialize rs1
li x1, 0x0000000000000000 # initialize rs2
ror x21, x12, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 760)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0x1)
li x7, 0x00000000ffffffff # initialize rs1
li x27, 0x0000000000000001 # initialize rs2
ror x24, x7, x27 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 768)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0x2)
li x13, 0x00000000ffffffff # initialize rs1
li x28, 0x0000000000000002 # initialize rs2
ror x23, x13, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 776)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0x8000000000000000)
li x6, 0x00000000ffffffff # initialize rs1
li x22, 0x8000000000000000 # initialize rs2
ror x7, x6, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 784)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0x8000000000000001)
li x23, 0x00000000ffffffff # initialize rs1
li x31, 0x8000000000000001 # initialize rs2
ror x24, x23, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 792)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0x7fffffffffffffff)
li x18, 0x00000000ffffffff # initialize rs1
li x5, 0x7fffffffffffffff # initialize rs2
ror x2, x18, x5 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 800)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0x7ffffffffffffffe)
li x10, 0x00000000ffffffff # initialize rs1
li x9, 0x7ffffffffffffffe # initialize rs2
ror x24, x10, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 808)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0xffffffffffffffff)
li x14, 0x00000000ffffffff # initialize rs1
li x5, 0xffffffffffffffff # initialize rs2
ror x27, x14, x5 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 816)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0xfffffffffffffffe)
li x31, 0x00000000ffffffff # initialize rs1
li x11, 0xfffffffffffffffe # initialize rs2
ror x17, x31, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 824)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0x5bbc887763ae86f2)
li x28, 0x00000000ffffffff # initialize rs1
li x11, 0x5bbc887763ae86f2 # initialize rs2
ror x18, x28, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 832)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0xaaaaaaaaaaaaaaaa)
li x14, 0x00000000ffffffff # initialize rs1
li x8, 0xaaaaaaaaaaaaaaaa # initialize rs2
ror x13, x14, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 840)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0x5555555555555555)
li x16, 0x00000000ffffffff # initialize rs1
li x1, 0x5555555555555555 # initialize rs2
ror x20, x16, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 848)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0xffffffff)
li x20, 0x00000000ffffffff # initialize rs1
li x22, 0x00000000ffffffff # initialize rs2
ror x14, x20, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 856)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0xfffffffe)
li x13, 0x00000000ffffffff # initialize rs1
li x7, 0x00000000fffffffe # initialize rs2
ror x11, x13, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 864)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0x100000000)
li x2, 0x00000000ffffffff # initialize rs1
li x3, 0x0000000100000000 # initialize rs2
ror x6, x2, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x6, 872)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0x100000001)
li x9, 0x00000000ffffffff # initialize rs1
li x7, 0x0000000100000001 # initialize rs2
ror x11, x9, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 880)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0x0)
li x10, 0x00000000fffffffe # initialize rs1
li x22, 0x0000000000000000 # initialize rs2
ror x6, x10, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x6, 888)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0x1)
li x31, 0x00000000fffffffe # initialize rs1
li x8, 0x0000000000000001 # initialize rs2
ror x10, x31, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 896)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0x2)
li x9, 0x00000000fffffffe # initialize rs1
li x18, 0x0000000000000002 # initialize rs2
ror x14, x9, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 904)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0x8000000000000000)
li x28, 0x00000000fffffffe # initialize rs1
li x16, 0x8000000000000000 # initialize rs2
ror x8, x28, x16 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 912)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0x8000000000000001)
li x29, 0x00000000fffffffe # initialize rs1
li x20, 0x8000000000000001 # initialize rs2
ror x3, x29, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 920)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0x7fffffffffffffff)
li x10, 0x00000000fffffffe # initialize rs1
li x8, 0x7fffffffffffffff # initialize rs2
ror x3, x10, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 928)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0x7ffffffffffffffe)
li x22, 0x00000000fffffffe # initialize rs1
li x27, 0x7ffffffffffffffe # initialize rs2
ror x12, x22, x27 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 936)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0xffffffffffffffff)
li x14, 0x00000000fffffffe # initialize rs1
li x23, 0xffffffffffffffff # initialize rs2
ror x28, x14, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x28, 944)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0xfffffffffffffffe)
li x5, 0x00000000fffffffe # initialize rs1
li x8, 0xfffffffffffffffe # initialize rs2
ror x29, x5, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 952)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0x5bbc887763ae86f2)
li x8, 0x00000000fffffffe # initialize rs1
li x30, 0x5bbc887763ae86f2 # initialize rs2
ror x27, x8, x30 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 960)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0xaaaaaaaaaaaaaaaa)
li x5, 0x00000000fffffffe # initialize rs1
li x27, 0xaaaaaaaaaaaaaaaa # initialize rs2
ror x14, x5, x27 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 968)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0x5555555555555555)
li x24, 0x00000000fffffffe # initialize rs1
li x23, 0x5555555555555555 # initialize rs2
ror x26, x24, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 976)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0xffffffff)
li x23, 0x00000000fffffffe # initialize rs1
li x13, 0x00000000ffffffff # initialize rs2
ror x26, x23, x13 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 984)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0xfffffffe)
li x14, 0x00000000fffffffe # initialize rs1
li x25, 0x00000000fffffffe # initialize rs2
ror x29, x14, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 992)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0x100000000)
li x12, 0x00000000fffffffe # initialize rs1
li x6, 0x0000000100000000 # initialize rs2
ror x26, x12, x6 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 1000)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0x100000001)
li x26, 0x00000000fffffffe # initialize rs1
li x13, 0x0000000100000001 # initialize rs2
ror x3, x26, x13 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 1008)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0x0)
li x24, 0x0000000100000000 # initialize rs1
li x18, 0x0000000000000000 # initialize rs2
ror x23, x24, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 1016)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0x1)
li x13, 0x0000000100000000 # initialize rs1
li x15, 0x0000000000000001 # initialize rs2
ror x25, x13, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 1024)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0x2)
li x7, 0x0000000100000000 # initialize rs1
li x31, 0x0000000000000002 # initialize rs2
ror x21, x7, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 1032)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0x8000000000000000)
li x2, 0x0000000100000000 # initialize rs1
li x6, 0x8000000000000000 # initialize rs2
ror x22, x2, x6 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 1040)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0x8000000000000001)
li x5, 0x0000000100000000 # initialize rs1
li x15, 0x8000000000000001 # initialize rs2
ror x26, x5, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 1048)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0x7fffffffffffffff)
li x21, 0x0000000100000000 # initialize rs1
li x14, 0x7fffffffffffffff # initialize rs2
ror x10, x21, x14 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 1056)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0x7ffffffffffffffe)
li x8, 0x0000000100000000 # initialize rs1
li x27, 0x7ffffffffffffffe # initialize rs2
ror x24, x8, x27 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 1064)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0xffffffffffffffff)
li x29, 0x0000000100000000 # initialize rs1
li x28, 0xffffffffffffffff # initialize rs2
ror x5, x29, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x5, 1072)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0xfffffffffffffffe)
li x11, 0x0000000100000000 # initialize rs1
li x2, 0xfffffffffffffffe # initialize rs2
ror x24, x11, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 1080)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0x5bbc887763ae86f2)
li x10, 0x0000000100000000 # initialize rs1
li x9, 0x5bbc887763ae86f2 # initialize rs2
ror x2, x10, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 1088)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0xaaaaaaaaaaaaaaaa)
li x1, 0x0000000100000000 # initialize rs1
li x12, 0xaaaaaaaaaaaaaaaa # initialize rs2
ror x30, x1, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 1096)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0x5555555555555555)
li x15, 0x0000000100000000 # initialize rs1
li x17, 0x5555555555555555 # initialize rs2
ror x10, x15, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 1104)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0xffffffff)
li x28, 0x0000000100000000 # initialize rs1
li x13, 0x00000000ffffffff # initialize rs2
ror x20, x28, x13 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 1112)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0xfffffffe)
li x7, 0x0000000100000000 # initialize rs1
li x30, 0x00000000fffffffe # initialize rs2
ror x29, x7, x30 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 1120)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0x100000000)
li x9, 0x0000000100000000 # initialize rs1
li x23, 0x0000000100000000 # initialize rs2
ror x26, x9, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 1128)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0x100000001)
li x12, 0x0000000100000000 # initialize rs1
li x13, 0x0000000100000001 # initialize rs2
ror x28, x12, x13 # perform operation
RVTEST_SIGUPD(x4, x0, x28, 1136)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0x0)
li x8, 0x0000000100000001 # initialize rs1
li x15, 0x0000000000000000 # initialize rs2
ror x30, x8, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 1144)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0x1)
li x26, 0x0000000100000001 # initialize rs1
li x14, 0x0000000000000001 # initialize rs2
ror x21, x26, x14 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 1152)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0x2)
li x16, 0x0000000100000001 # initialize rs1
li x20, 0x0000000000000002 # initialize rs2
ror x2, x16, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 1160)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0x8000000000000000)
li x17, 0x0000000100000001 # initialize rs1
li x19, 0x8000000000000000 # initialize rs2
ror x31, x17, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 1168)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0x8000000000000001)
li x14, 0x0000000100000001 # initialize rs1
li x29, 0x8000000000000001 # initialize rs2
ror x23, x14, x29 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 1176)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0x7fffffffffffffff)
li x26, 0x0000000100000001 # initialize rs1
li x31, 0x7fffffffffffffff # initialize rs2
ror x1, x26, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 1184)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0x7ffffffffffffffe)
li x21, 0x0000000100000001 # initialize rs1
li x18, 0x7ffffffffffffffe # initialize rs2
ror x17, x21, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 1192)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0xffffffffffffffff)
li x1, 0x0000000100000001 # initialize rs1
li x30, 0xffffffffffffffff # initialize rs2
ror x10, x1, x30 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 1200)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0xfffffffffffffffe)
li x3, 0x0000000100000001 # initialize rs1
li x16, 0xfffffffffffffffe # initialize rs2
ror x30, x3, x16 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 1208)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0x5bbc887763ae86f2)
li x21, 0x0000000100000001 # initialize rs1
li x2, 0x5bbc887763ae86f2 # initialize rs2
ror x25, x21, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 1216)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0xaaaaaaaaaaaaaaaa)
li x12, 0x0000000100000001 # initialize rs1
li x29, 0xaaaaaaaaaaaaaaaa # initialize rs2
ror x15, x12, x29 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 1224)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0x5555555555555555)
li x5, 0x0000000100000001 # initialize rs1
li x28, 0x5555555555555555 # initialize rs2
ror x21, x5, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 1232)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0xffffffff)
li x24, 0x0000000100000001 # initialize rs1
li x3, 0x00000000ffffffff # initialize rs2
ror x5, x24, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x5, 1240)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0xfffffffe)
li x7, 0x0000000100000001 # initialize rs1
li x17, 0x00000000fffffffe # initialize rs2
ror x1, x7, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 1248)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0x100000000)
li x1, 0x0000000100000001 # initialize rs1
li x3, 0x0000000100000000 # initialize rs2
ror x11, x1, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 1256)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0x100000001)
li x25, 0x0000000100000001 # initialize rs1
li x29, 0x0000000100000001 # initialize rs2
ror x18, x25, x29 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 1264)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x0)
li x0, 0x908473a32596996f # initialize rs1
li x0, 0xf9dc2b910a8fe36e # initialize rs2
ror x18, x0, x0 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 1272)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x1)
li x1, 0x26c3ca12df5ae525 # initialize rs1
li x1, 0x26077e165c36f8a1 # initialize rs2
ror x21, x1, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 1280)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x2)
li x2, 0x34e08a93f68efcb1 # initialize rs1
li x2, 0x1ddba94a55e19922 # initialize rs2
ror x16, x2, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 1288)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x3)
li x3, 0x71368bde1cb0c8dd # initialize rs1
li x3, 0x2a97713f20dbf7c8 # initialize rs2
ror x12, x3, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 1296)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x4)
mv x5, x4 # switch signature pointer register to avoid conflict with test
li x4, 0xa7abdd05c4c30029 # initialize rs1
li x4, 0x6a234efb952de020 # initialize rs2
ror x9, x4, x4 # perform operation
RVTEST_SIGUPD(x5, x0, x9, 1304)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x5)
mv x6, x5 # switch signature pointer register to avoid conflict with test
li x5, 0x5417d21350baef9e # initialize rs1
li x5, 0x8a6e507bd3d18877 # initialize rs2
ror x31, x5, x5 # perform operation
RVTEST_SIGUPD(x6, x0, x31, 1312)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x6)
mv x7, x6 # switch signature pointer register to avoid conflict with test
li x6, 0xd10e96ec30d0bab2 # initialize rs1
li x6, 0x443705ded66d50f1 # initialize rs2
ror x2, x6, x6 # perform operation
RVTEST_SIGUPD(x7, x0, x2, 1320)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x7)
mv x4, x7 # switch signature pointer register to avoid conflict with test
li x7, 0x8fe8d6526938e261 # initialize rs1
li x7, 0x4d29dca68fa08f32 # initialize rs2
ror x8, x7, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 1328)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x8)
li x8, 0xc16cd661db0cf555 # initialize rs1
li x8, 0xa039dddc4693b24b # initialize rs2
ror x17, x8, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 1336)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x9)
li x9, 0xa9cbaeae8c727e40 # initialize rs1
li x9, 0x35dd400b4b97797a # initialize rs2
ror x19, x9, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 1344)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x10)
li x10, 0x781cdb65627ce160 # initialize rs1
li x10, 0x2dcd62e8a913f21d # initialize rs2
ror x15, x10, x10 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 1352)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x11)
li x11, 0x35066170cfcf4ac2 # initialize rs1
li x11, 0x6d9efc94479b18fa # initialize rs2
ror x13, x11, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 1360)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x12)
li x12, 0x3594d743055b0e89 # initialize rs1
li x12, 0x3350a40d796ac671 # initialize rs2
ror x30, x12, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 1368)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x13)
li x13, 0x4122ba0dfc898903 # initialize rs1
li x13, 0xe3d3d97f5b199e3e # initialize rs2
ror x12, x13, x13 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 1376)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x14)
li x14, 0xc5bfb5e420650b0d # initialize rs1
li x14, 0xc68942217481c347 # initialize rs2
ror x29, x14, x14 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 1384)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x15)
li x15, 0xa9db4755f2feedcd # initialize rs1
li x15, 0x80aec6e9119657c9 # initialize rs2
ror x24, x15, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 1392)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x16)
li x16, 0x5f4867f3b1039372 # initialize rs1
li x16, 0x73cb1b616d066faa # initialize rs2
ror x1, x16, x16 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 1400)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x17)
li x17, 0xc1944cddb7385338 # initialize rs1
li x17, 0x60b1814b477e987a # initialize rs2
ror x27, x17, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 1408)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x18)
li x18, 0x699dcd15472b0288 # initialize rs1
li x18, 0xdd7d4b713d229580 # initialize rs2
ror x21, x18, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 1416)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x19)
li x19, 0xffd3dd6d0cd35f5c # initialize rs1
li x19, 0x7a05547306d121df # initialize rs2
ror x16, x19, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 1424)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x20)
li x20, 0xaf99ba26108c47e3 # initialize rs1
li x20, 0xa8af1826912329d1 # initialize rs2
ror x11, x20, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 1432)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x21)
li x21, 0x9ec5783faf8f6f34 # initialize rs1
li x21, 0x898826d1bb7b69f3 # initialize rs2
ror x20, x21, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 1440)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x22)
li x22, 0xc1849e977d918f99 # initialize rs1
li x22, 0x2175bf420f90c185 # initialize rs2
ror x1, x22, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 1448)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x23)
li x23, 0x10c9d255cea7a16d # initialize rs1
li x23, 0x3c8e32976d542fd0 # initialize rs2
ror x9, x23, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 1456)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x24)
li x24, 0x14ea7a5ced21d456 # initialize rs1
li x24, 0x7f27b895a8908176 # initialize rs2
ror x12, x24, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 1464)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x25)
li x25, 0xf7949fcc97117831 # initialize rs1
li x25, 0x4ecc2d3958ee1254 # initialize rs2
ror x31, x25, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 1472)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x26)
li x26, 0x507c6e7a3df4d03d # initialize rs1
li x26, 0xfecd433bc16a8f19 # initialize rs2
ror x8, x26, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 1480)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x27)
li x27, 0x776ea3f89855277a # initialize rs1
li x27, 0x49225beae06eae36 # initialize rs2
ror x14, x27, x27 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 1488)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x28)
li x28, 0x48d5b8d97f3535ec # initialize rs1
li x28, 0xd74b723191ec812b # initialize rs2
ror x3, x28, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 1496)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x29)
li x29, 0x57d1d276d06808e5 # initialize rs1
li x29, 0x2b90c2d050c0c796 # initialize rs2
ror x9, x29, x29 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 1504)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x30)
li x30, 0xa33ec620cf1da49e # initialize rs1
li x30, 0xdde14f0a39ea4cb2 # initialize rs2
ror x15, x30, x30 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 1512)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x31)
li x31, 0x789efafbadabdc07 # initialize rs1
li x31, 0x2b11eb0b2206c8b7 # initialize rs2
ror x27, x31, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 1520)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x0)
li x0, 0x0d8c700f0370f81b # initialize rs1
li x16, 0x7f80b71c70e19b3b # initialize rs2
ror x0, x0, x16 # perform operation
RVTEST_SIGUPD(x4, x0, x0, 1528)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x1)
li x1, 0x7e454d14bd9085b3 # initialize rs1
li x15, 0x09305d74b7d34929 # initialize rs2
ror x1, x1, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 1536)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x2)
li x2, 0x37a02e0d10d0e330 # initialize rs1
li x17, 0xfb5822f1c1a3286b # initialize rs2
ror x2, x2, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 1544)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x3)
li x3, 0x9bd50f46343d530f # initialize rs1
li x25, 0x4e68a22699bb1b46 # initialize rs2
ror x3, x3, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 1552)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x4)
mv x5, x4 # switch signature pointer register to avoid conflict with test
li x4, 0x27bf5ff32668eb9e # initialize rs1
li x12, 0xa907cbc48d1567be # initialize rs2
ror x4, x4, x12 # perform operation
RVTEST_SIGUPD(x5, x0, x4, 1560)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x5)
mv x6, x5 # switch signature pointer register to avoid conflict with test
li x5, 0x2e0acd133992aee5 # initialize rs1
li x25, 0x8b30f66f011ec1b4 # initialize rs2
ror x5, x5, x25 # perform operation
RVTEST_SIGUPD(x6, x0, x5, 1568)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x6)
mv x7, x6 # switch signature pointer register to avoid conflict with test
li x6, 0x3c04134f6375e5ce # initialize rs1
li x23, 0x95e9aa4083d7c8e6 # initialize rs2
ror x6, x6, x23 # perform operation
RVTEST_SIGUPD(x7, x0, x6, 1576)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x7)
mv x4, x7 # switch signature pointer register to avoid conflict with test
li x7, 0xa8960229f6770fcd # initialize rs1
li x9, 0xc21d4564c338e7e2 # initialize rs2
ror x7, x7, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 1584)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x8)
li x8, 0xe169a21ed16bbe1d # initialize rs1
li x9, 0x07f47ee265e0191b # initialize rs2
ror x8, x8, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 1592)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x9)
li x9, 0xfdd83c56a952149e # initialize rs1
li x31, 0x8ec9d0406151dc61 # initialize rs2
ror x9, x9, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 1600)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x10)
li x10, 0x21720bf7608e693c # initialize rs1
li x24, 0x4e343799229c811e # initialize rs2
ror x10, x10, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 1608)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x11)
li x11, 0x41d197939652c393 # initialize rs1
li x2, 0x7c676aabd34431e1 # initialize rs2
ror x11, x11, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 1616)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x12)
li x12, 0x0f1c68f719ea2299 # initialize rs1
li x22, 0x930c15ab3b6e0aab # initialize rs2
ror x12, x12, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 1624)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x13)
li x13, 0x4fef05c7edb0ae4f # initialize rs1
li x22, 0xb44d2d0c53039560 # initialize rs2
ror x13, x13, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 1632)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x14)
li x14, 0x7e94b4c9d3779103 # initialize rs1
li x19, 0xa9353e4d5592f84f # initialize rs2
ror x14, x14, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 1640)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x15)
li x15, 0x905a3e24e020e048 # initialize rs1
li x29, 0x49dfc49f1424b543 # initialize rs2
ror x15, x15, x29 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 1648)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x16)
li x16, 0x924a2822184cc8f4 # initialize rs1
li x30, 0xc2af05f3d5197419 # initialize rs2
ror x16, x16, x30 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 1656)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x17)
li x17, 0x1f2e45a0f1d1d334 # initialize rs1
li x14, 0x2d12efd67e2af1a2 # initialize rs2
ror x17, x17, x14 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 1664)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x18)
li x18, 0x5aafce5643e301e6 # initialize rs1
li x7, 0x240fa6aaea4e3655 # initialize rs2
ror x18, x18, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 1672)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x19)
li x19, 0x5421a183c919e249 # initialize rs1
li x16, 0x920951161820c1ab # initialize rs2
ror x19, x19, x16 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 1680)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x20)
li x20, 0x4449ebb1608ec87a # initialize rs1
li x25, 0xe0e6d6956a32a2b2 # initialize rs2
ror x20, x20, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 1688)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x21)
li x21, 0xf87d815f6d329bbf # initialize rs1
li x19, 0x90f87bec47e7ef87 # initialize rs2
ror x21, x21, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 1696)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x22)
li x22, 0x107f04fdd4bab89b # initialize rs1
li x25, 0x2fbd55a84ad4f50a # initialize rs2
ror x22, x22, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 1704)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x23)
li x23, 0x6f09f5aba1971202 # initialize rs1
li x2, 0x89541faf216f72b7 # initialize rs2
ror x23, x23, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 1712)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x24)
li x24, 0x29ef04e9dbbfbb87 # initialize rs1
li x7, 0x1362ae7f95f47e29 # initialize rs2
ror x24, x24, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 1720)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x25)
li x25, 0xbf38266453da1a85 # initialize rs1
li x8, 0x56ad4672e1469133 # initialize rs2
ror x25, x25, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 1728)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x26)
li x26, 0x580f7767ae0f7c55 # initialize rs1
li x5, 0x92db48b7d24154a0 # initialize rs2
ror x26, x26, x5 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 1736)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x27)
li x27, 0x6fddf96e243f5641 # initialize rs1
li x22, 0xe5d557267fd1bd8b # initialize rs2
ror x27, x27, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 1744)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x28)
li x28, 0x55ce6e237604b568 # initialize rs1
li x1, 0x8a2dd6bda5c25d89 # initialize rs2
ror x28, x28, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x28, 1752)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x29)
li x29, 0x65a068376a4978f9 # initialize rs1
li x13, 0xafff157d66ef55a7 # initialize rs2
ror x29, x29, x13 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 1760)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x30)
li x30, 0xa5d90e5b9108964c # initialize rs1
li x20, 0x6e38777e850c7d40 # initialize rs2
ror x30, x30, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 1768)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x31)
li x31, 0x2278995927d1de4e # initialize rs1
li x5, 0xabda964382a6cfbb # initialize rs2
ror x31, x31, x5 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 1776)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x0)
li x9, 0x3b8f7af08d33d99f # initialize rs1
li x0, 0xb27fb6b87a8aa11e # initialize rs2
ror x0, x9, x0 # perform operation
RVTEST_SIGUPD(x4, x0, x0, 1784)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x1)
li x17, 0x15f1553871e52b98 # initialize rs1
li x1, 0x9a57f8db69bcb7ea # initialize rs2
ror x1, x17, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 1792)
addi x4, x4, 1800 # increment signature pointer and reset offset

# Testcase cmp_rd_rs2 (Test rd = rs2 = x2)
li x26, 0x6030f9ffc1f94aac # initialize rs1
li x2, 0xc5cfbed14e4e75c1 # initialize rs2
ror x2, x26, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 0)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x3)
li x13, 0xbfd17e625ca52ca4 # initialize rs1
li x3, 0xb678731341cd6e8c # initialize rs2
ror x3, x13, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 8)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x4)
mv x5, x4 # switch signature pointer register to avoid conflict with test
li x18, 0x2107e5c94cd4e112 # initialize rs1
li x4, 0x7e9f26fac1ff2fb8 # initialize rs2
ror x4, x18, x4 # perform operation
RVTEST_SIGUPD(x5, x0, x4, 16)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x5)
mv x6, x5 # switch signature pointer register to avoid conflict with test
li x18, 0x75757523d7921911 # initialize rs1
li x5, 0x3b10c715b3f48975 # initialize rs2
ror x5, x18, x5 # perform operation
RVTEST_SIGUPD(x6, x0, x5, 24)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x6)
mv x7, x6 # switch signature pointer register to avoid conflict with test
li x29, 0x472ed954e67cb880 # initialize rs1
li x6, 0x93f619a99e62dd9a # initialize rs2
ror x6, x29, x6 # perform operation
RVTEST_SIGUPD(x7, x0, x6, 32)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x7)
mv x4, x7 # switch signature pointer register to avoid conflict with test
li x24, 0xfc057ef3572be101 # initialize rs1
li x7, 0xd2842ef0481bac9d # initialize rs2
ror x7, x24, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 40)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x8)
li x17, 0xcb3ade5f31711acb # initialize rs1
li x8, 0xbe9838db45ae3e18 # initialize rs2
ror x8, x17, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 48)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x9)
li x24, 0x31df0a443ce5b619 # initialize rs1
li x9, 0xc29161a0a363c027 # initialize rs2
ror x9, x24, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 56)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x10)
li x18, 0x7be7f8f0d9ea924d # initialize rs1
li x10, 0x628c4a7106490729 # initialize rs2
ror x10, x18, x10 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 64)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x11)
li x31, 0xce298b25923bbd38 # initialize rs1
li x11, 0x992b08080364ee4f # initialize rs2
ror x11, x31, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 72)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x12)
li x26, 0xc7c8eba8699b0832 # initialize rs1
li x12, 0xfdd4f68cf9de7058 # initialize rs2
ror x12, x26, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 80)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x13)
li x16, 0xe2acca75c86ab5bd # initialize rs1
li x13, 0x4a5daa61abdcc32a # initialize rs2
ror x13, x16, x13 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 88)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x14)
li x11, 0x4ec199f1062e5661 # initialize rs1
li x14, 0x05a5d18e0989e583 # initialize rs2
ror x14, x11, x14 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 96)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x15)
li x7, 0x0541ff3207077c18 # initialize rs1
li x15, 0x880553e6bb5a1d17 # initialize rs2
ror x15, x7, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 104)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x16)
li x29, 0xc2c885fbdd72f64b # initialize rs1
li x16, 0x5df0256fe7b417ff # initialize rs2
ror x16, x29, x16 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 112)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x17)
li x29, 0x840018ccf0fef60c # initialize rs1
li x17, 0xa4ca4e1f7fe53165 # initialize rs2
ror x17, x29, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 120)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x18)
li x5, 0x3df9c798bddaa92a # initialize rs1
li x18, 0x22ececca31424fe6 # initialize rs2
ror x18, x5, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 128)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x19)
li x26, 0xf99032e37a70cfcb # initialize rs1
li x19, 0x738729ccd8deb8a6 # initialize rs2
ror x19, x26, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 136)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x20)
li x21, 0x894ff1a55170f066 # initialize rs1
li x20, 0xcdbc415424574651 # initialize rs2
ror x20, x21, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 144)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x21)
li x29, 0xca75c38dfd29b598 # initialize rs1
li x21, 0x51faa3d9eae55e23 # initialize rs2
ror x21, x29, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 152)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x22)
li x30, 0xcd260578be4942af # initialize rs1
li x22, 0xc6206a25b6ae770e # initialize rs2
ror x22, x30, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 160)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x23)
li x13, 0x681495270d3acdf5 # initialize rs1
li x23, 0xaa7b87ada764ca47 # initialize rs2
ror x23, x13, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 168)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x24)
li x9, 0xea363a92da2bceb4 # initialize rs1
li x24, 0xd1c4bcdf8523a69c # initialize rs2
ror x24, x9, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 176)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x25)
li x28, 0xdbaf16ea09a75e2b # initialize rs1
li x25, 0x88d1b17990e192e4 # initialize rs2
ror x25, x28, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 184)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x26)
li x18, 0x8c8ada14c755ed7a # initialize rs1
li x26, 0x54a5d34784fcb986 # initialize rs2
ror x26, x18, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 192)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x27)
li x12, 0xfec7c53e4974fe29 # initialize rs1
li x27, 0xd38876535209811f # initialize rs2
ror x27, x12, x27 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 200)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x28)
li x17, 0x48f70bb03a5f3177 # initialize rs1
li x28, 0x0ced8bfc8424c769 # initialize rs2
ror x28, x17, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x28, 208)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x29)
li x10, 0xf78bc3447c88e4a0 # initialize rs1
li x29, 0x92c9b0a5e7a1cb1a # initialize rs2
ror x29, x10, x29 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 216)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x30)
li x19, 0xd9c73480719f076e # initialize rs1
li x30, 0x9af6da9523a8f4b3 # initialize rs2
ror x30, x19, x30 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 224)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x31)
li x6, 0xda67595c3c775218 # initialize rs1
li x31, 0xcae6b9b740d82559 # initialize rs2
ror x31, x6, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 232)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x0)
li x0, 0xe17728397e33ce73 # initialize rs1
li x0, 0x43f5ad5ede52f9c7 # initialize rs2
ror x0, x0, x0 # perform operation
RVTEST_SIGUPD(x4, x0, x0, 240)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x1)
li x1, 0xab700fd99e347713 # initialize rs1
li x1, 0xe89c5bf1531ee977 # initialize rs2
ror x1, x1, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 248)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x2)
li x2, 0x1d64dd79a2449549 # initialize rs1
li x2, 0x92fc9589c806d5b3 # initialize rs2
ror x2, x2, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 256)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x3)
li x3, 0x1e700ad17945bc83 # initialize rs1
li x3, 0x6e4912d42149ca73 # initialize rs2
ror x3, x3, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 264)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x4)
mv x5, x4 # switch signature pointer register to avoid conflict with test
li x4, 0x7ec855633aee4bc6 # initialize rs1
li x4, 0xe2cc5ddc493fc7be # initialize rs2
ror x4, x4, x4 # perform operation
RVTEST_SIGUPD(x5, x0, x4, 272)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x5)
mv x6, x5 # switch signature pointer register to avoid conflict with test
li x5, 0xff9c059de92bb936 # initialize rs1
li x5, 0x17e0e1fd7d321a92 # initialize rs2
ror x5, x5, x5 # perform operation
RVTEST_SIGUPD(x6, x0, x5, 280)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x6)
mv x7, x6 # switch signature pointer register to avoid conflict with test
li x6, 0x0251cbdc833ef554 # initialize rs1
li x6, 0x99efd1e685b35f0a # initialize rs2
ror x6, x6, x6 # perform operation
RVTEST_SIGUPD(x7, x0, x6, 288)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x7)
mv x4, x7 # switch signature pointer register to avoid conflict with test
li x7, 0x4af786460ea4c78c # initialize rs1
li x7, 0x10815f8bad06537f # initialize rs2
ror x7, x7, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 296)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x8)
li x8, 0xfa173fd6125aa2c7 # initialize rs1
li x8, 0xf49730845da02010 # initialize rs2
ror x8, x8, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 304)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x9)
li x9, 0x937e0a954b02cacb # initialize rs1
li x9, 0x87b0196026ab3890 # initialize rs2
ror x9, x9, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 312)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x10)
li x10, 0x5e61c4ba15990b54 # initialize rs1
li x10, 0x6e7f63732745d290 # initialize rs2
ror x10, x10, x10 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 320)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x11)
li x11, 0x17a283cf74b35c5f # initialize rs1
li x11, 0x38db3bb567575e0b # initialize rs2
ror x11, x11, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 328)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x12)
li x12, 0x26ef93ac77152d09 # initialize rs1
li x12, 0xedfe74e8f166e925 # initialize rs2
ror x12, x12, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 336)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x13)
li x13, 0x079f6cb556ed4825 # initialize rs1
li x13, 0xc4485e6e800ff1e2 # initialize rs2
ror x13, x13, x13 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 344)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x14)
li x14, 0x61ea523f53715d47 # initialize rs1
li x14, 0x0eb637c0ffef02f6 # initialize rs2
ror x14, x14, x14 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 352)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x15)
li x15, 0xf4914da9bc6e033f # initialize rs1
li x15, 0xd51193a3883be9c8 # initialize rs2
ror x15, x15, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 360)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x16)
li x16, 0xee57fd3ccb975c49 # initialize rs1
li x16, 0x2e25a1629a5a26bf # initialize rs2
ror x16, x16, x16 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 368)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x17)
li x17, 0x4bfff2881b7603ba # initialize rs1
li x17, 0x20e49e9d520c76b5 # initialize rs2
ror x17, x17, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 376)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x18)
li x18, 0xf23a0b4692353d39 # initialize rs1
li x18, 0xbfa7be71e56662a9 # initialize rs2
ror x18, x18, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 384)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x19)
li x19, 0xe3ff6a51ca918f69 # initialize rs1
li x19, 0xf66497ea0ad78b65 # initialize rs2
ror x19, x19, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 392)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x20)
li x20, 0x76f31d446601b995 # initialize rs1
li x20, 0x39374becf970b986 # initialize rs2
ror x20, x20, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 400)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x21)
li x21, 0x797d12e05c69639a # initialize rs1
li x21, 0xafdc7302a2fb1c89 # initialize rs2
ror x21, x21, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 408)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x22)
li x22, 0x752279541099b937 # initialize rs1
li x22, 0x5e3fd12b08ac31af # initialize rs2
ror x22, x22, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 416)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x23)
li x23, 0xcc63e1eb3af57f48 # initialize rs1
li x23, 0x92b2776317f6f37b # initialize rs2
ror x23, x23, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 424)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x24)
li x24, 0xe8ddbf16f7db8680 # initialize rs1
li x24, 0x31f5f838665879cb # initialize rs2
ror x24, x24, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 432)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x25)
li x25, 0xa7bd16ce51c34629 # initialize rs1
li x25, 0xcd4c94fbf68e64c7 # initialize rs2
ror x25, x25, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 440)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x26)
li x26, 0x84880b79e7df525b # initialize rs1
li x26, 0xe1e60f40c5f7a73c # initialize rs2
ror x26, x26, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 448)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x27)
li x27, 0x08bc01bd5736c3e2 # initialize rs1
li x27, 0x7d0ff76a3ccca2fe # initialize rs2
ror x27, x27, x27 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 456)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x28)
li x28, 0x6b4ea1d33824e321 # initialize rs1
li x28, 0x1a971c9e4a6f09f0 # initialize rs2
ror x28, x28, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x28, 464)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x29)
li x29, 0x6fe09da0c026d1ab # initialize rs1
li x29, 0x93f57d8fd163b764 # initialize rs2
ror x29, x29, x29 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 472)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x30)
li x30, 0xd90c3f8d66a443ad # initialize rs1
li x30, 0x72040f4f57998742 # initialize rs2
ror x30, x30, x30 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 480)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x31)
li x31, 0x6106ad925f7af537 # initialize rs1
li x31, 0x012692f55ec84575 # initialize rs2
ror x31, x31, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 488)

# Testcase cp_gpr/fpr_hazard nohaz test
add x27, x16, x28 # perform first operation
ror x12, x24, x18 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard nohaz test
add x7, x18, x31 # perform first operation
ror x21, x28, x24 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard nohaz test
add x15, x5, x8 # perform first operation
ror x22, x7, x16 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard raw test
add x19, x26, x9 # perform first operation
ror x19, x19, x2 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard raw test
add x25, x24, x22 # perform first operation
ror x22, x7, x25 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard raw test
add x21, x6, x16 # perform first operation
ror x30, x16, x1 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard waw test
add x17, x26, x31 # perform first operation
ror x17, x19, x13 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard waw test
add x13, x11, x16 # perform first operation
ror x13, x17, x30 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard waw test
add x16, x6, x21 # perform first operation
ror x16, x30, x9 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard war test
add x24, x16, x29 # perform first operation
ror x16, x20, x5 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard war test
add x20, x28, x5 # perform first operation
ror x5, x6, x11 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard war test
add x8, x24, x27 # perform first operation
ror x22, x26, x20 # perform second (triggering) operation

#.EQU SIGSIZE,4096


// ******************
// Tests from: WALLY-COV-ctzw.S
// ******************


# initialize signature pointer
la x4, begin_signature

    
# Testcase cp_rs1 (Test source rs1 = x0)
li x0, 0xbfb882676de0f55c # initialize rs1
ctzw x12, x0 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 0)

# Testcase cp_rs1 (Test source rs1 = x1)
li x1, 0xb40172b0ed9f002b # initialize rs1
ctzw x25, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 8)

# Testcase cp_rs1 (Test source rs1 = x2)
li x2, 0xddec668239043b89 # initialize rs1
ctzw x17, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 16)

# Testcase cp_rs1 (Test source rs1 = x3)
li x3, 0xb14ba10f31616de6 # initialize rs1
ctzw x7, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 24)

# Testcase cp_rs1 (Test source rs1 = x4)
mv x5, x4 # switch signature pointer register to avoid conflict with test
li x4, 0xe6d2c36fa50d7080 # initialize rs1
ctzw x24, x4 # perform operation
RVTEST_SIGUPD(x5, x0, x24, 32)

# Testcase cp_rs1 (Test source rs1 = x5)
mv x6, x5 # switch signature pointer register to avoid conflict with test
li x5, 0x3875c5014615e4fd # initialize rs1
ctzw x10, x5 # perform operation
RVTEST_SIGUPD(x6, x0, x10, 40)

# Testcase cp_rs1 (Test source rs1 = x6)
mv x7, x6 # switch signature pointer register to avoid conflict with test
li x6, 0x14a3916361176f37 # initialize rs1
ctzw x17, x6 # perform operation
RVTEST_SIGUPD(x7, x0, x17, 48)

# Testcase cp_rs1 (Test source rs1 = x7)
mv x4, x7 # switch signature pointer register to avoid conflict with test
li x7, 0xb0a3905c6906fc49 # initialize rs1
ctzw x30, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 56)

# Testcase cp_rs1 (Test source rs1 = x8)
li x8, 0xb8794762732d3aaf # initialize rs1
ctzw x2, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 64)

# Testcase cp_rs1 (Test source rs1 = x9)
li x9, 0x46679692c9f37930 # initialize rs1
ctzw x31, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 72)

# Testcase cp_rs1 (Test source rs1 = x10)
li x10, 0xf8a300eb79ee3294 # initialize rs1
ctzw x9, x10 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 80)

# Testcase cp_rs1 (Test source rs1 = x11)
li x11, 0x0d3a835a083ba0f9 # initialize rs1
ctzw x2, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 88)

# Testcase cp_rs1 (Test source rs1 = x12)
li x12, 0x6d7cf25fc9940569 # initialize rs1
ctzw x17, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 96)

# Testcase cp_rs1 (Test source rs1 = x13)
li x13, 0x2880629cab134d76 # initialize rs1
ctzw x18, x13 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 104)

# Testcase cp_rs1 (Test source rs1 = x14)
li x14, 0xc5b461b6e1a31adf # initialize rs1
ctzw x2, x14 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 112)

# Testcase cp_rs1 (Test source rs1 = x15)
li x15, 0x082a62a6f4d301fa # initialize rs1
ctzw x3, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 120)

# Testcase cp_rs1 (Test source rs1 = x16)
li x16, 0xcb14a419e7915bd3 # initialize rs1
ctzw x3, x16 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 128)

# Testcase cp_rs1 (Test source rs1 = x17)
li x17, 0xd112b8cacf507b86 # initialize rs1
ctzw x2, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 136)

# Testcase cp_rs1 (Test source rs1 = x18)
li x18, 0xe9b4258ba570e3d4 # initialize rs1
ctzw x19, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 144)

# Testcase cp_rs1 (Test source rs1 = x19)
li x19, 0xe70a9c5c6023e438 # initialize rs1
ctzw x10, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 152)

# Testcase cp_rs1 (Test source rs1 = x20)
li x20, 0x662ba64a32cb9cab # initialize rs1
ctzw x9, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 160)

# Testcase cp_rs1 (Test source rs1 = x21)
li x21, 0x6c49086aa69a9b32 # initialize rs1
ctzw x18, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 168)

# Testcase cp_rs1 (Test source rs1 = x22)
li x22, 0xf2d9d39ec90f951d # initialize rs1
ctzw x15, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 176)

# Testcase cp_rs1 (Test source rs1 = x23)
li x23, 0x6c3381611d8d3cbb # initialize rs1
ctzw x3, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 184)

# Testcase cp_rs1 (Test source rs1 = x24)
li x24, 0x2a9229ec85f6220c # initialize rs1
ctzw x25, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 192)

# Testcase cp_rs1 (Test source rs1 = x25)
li x25, 0xb7900b742bb3b1c0 # initialize rs1
ctzw x5, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x5, 200)

# Testcase cp_rs1 (Test source rs1 = x26)
li x26, 0x82f0f5d1e62a52d7 # initialize rs1
ctzw x27, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 208)

# Testcase cp_rs1 (Test source rs1 = x27)
li x27, 0xb47848514c2e961d # initialize rs1
ctzw x7, x27 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 216)

# Testcase cp_rs1 (Test source rs1 = x28)
li x28, 0x2bf8cb4e308de6ea # initialize rs1
ctzw x30, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 224)

# Testcase cp_rs1 (Test source rs1 = x29)
li x29, 0xd77e2b87219fe11a # initialize rs1
ctzw x27, x29 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 232)

# Testcase cp_rs1 (Test source rs1 = x30)
li x30, 0xeed2b9ac30ee0dd2 # initialize rs1
ctzw x12, x30 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 240)

# Testcase cp_rs1 (Test source rs1 = x31)
li x31, 0x09ba4bbb05023880 # initialize rs1
ctzw x17, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 248)

# Testcase cp_rd (Test destination rd = x0)
li x26, 0x24d01aea6f0bfac4 # initialize rs1
ctzw x0, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x0, 256)

# Testcase cp_rd (Test destination rd = x1)
li x19, 0xb80e4acb57a82702 # initialize rs1
ctzw x1, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 264)

# Testcase cp_rd (Test destination rd = x2)
li x24, 0xb00f4101966537f2 # initialize rs1
ctzw x2, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 272)

# Testcase cp_rd (Test destination rd = x3)
li x23, 0x07da921ddc0b9f25 # initialize rs1
ctzw x3, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 280)

# Testcase cp_rd (Test destination rd = x4)
mv x5, x4 # switch signature pointer register to avoid conflict with test
li x10, 0x172d3edd2672da70 # initialize rs1
ctzw x4, x10 # perform operation
RVTEST_SIGUPD(x5, x0, x4, 288)

# Testcase cp_rd (Test destination rd = x5)
mv x6, x5 # switch signature pointer register to avoid conflict with test
li x29, 0xede939da7c3d971d # initialize rs1
ctzw x5, x29 # perform operation
RVTEST_SIGUPD(x6, x0, x5, 296)

# Testcase cp_rd (Test destination rd = x6)
mv x4, x6 # switch signature pointer register to avoid conflict with test
li x7, 0xfc2a8e11e4b8d599 # initialize rs1
ctzw x6, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x6, 304)

# Testcase cp_rd (Test destination rd = x7)
li x29, 0x736a9321574c1f00 # initialize rs1
ctzw x7, x29 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 312)

# Testcase cp_rd (Test destination rd = x8)
li x18, 0x2e0582f06c714884 # initialize rs1
ctzw x8, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 320)

# Testcase cp_rd (Test destination rd = x9)
li x17, 0x4bb749b812225ce1 # initialize rs1
ctzw x9, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 328)

# Testcase cp_rd (Test destination rd = x10)
li x31, 0x5cc4e465947e6db6 # initialize rs1
ctzw x10, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 336)

# Testcase cp_rd (Test destination rd = x11)
li x1, 0xb7f565f62420babb # initialize rs1
ctzw x11, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 344)

# Testcase cp_rd (Test destination rd = x12)
li x15, 0xe8740270771997eb # initialize rs1
ctzw x12, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 352)

# Testcase cp_rd (Test destination rd = x13)
li x3, 0xa626200eaa916149 # initialize rs1
ctzw x13, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 360)

# Testcase cp_rd (Test destination rd = x14)
li x29, 0x08ea62e0e0d8283a # initialize rs1
ctzw x14, x29 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 368)

# Testcase cp_rd (Test destination rd = x15)
li x5, 0x0a68e27f91850c88 # initialize rs1
ctzw x15, x5 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 376)

# Testcase cp_rd (Test destination rd = x16)
li x1, 0xcfe23c218036ddae # initialize rs1
ctzw x16, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 384)

# Testcase cp_rd (Test destination rd = x17)
li x15, 0xa0dc618abde54843 # initialize rs1
ctzw x17, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 392)

# Testcase cp_rd (Test destination rd = x18)
li x20, 0x1f3dda5ab6948fcf # initialize rs1
ctzw x18, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 400)

# Testcase cp_rd (Test destination rd = x19)
li x11, 0x4ba7a3aff53492b6 # initialize rs1
ctzw x19, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 408)

# Testcase cp_rd (Test destination rd = x20)
li x2, 0x3e620b3237693e4a # initialize rs1
ctzw x20, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 416)

# Testcase cp_rd (Test destination rd = x21)
li x21, 0x53ee87dcb911b696 # initialize rs1
ctzw x21, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 424)

# Testcase cp_rd (Test destination rd = x22)
li x13, 0x76451d8894e51a37 # initialize rs1
ctzw x22, x13 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 432)

# Testcase cp_rd (Test destination rd = x23)
li x12, 0x8d5eb902e712f6d8 # initialize rs1
ctzw x23, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 440)

# Testcase cp_rd (Test destination rd = x24)
li x16, 0xa2504c3afe1850e2 # initialize rs1
ctzw x24, x16 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 448)

# Testcase cp_rd (Test destination rd = x25)
li x30, 0x826b514f04680223 # initialize rs1
ctzw x25, x30 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 456)

# Testcase cp_rd (Test destination rd = x26)
li x7, 0xfe8a8a93942f8448 # initialize rs1
ctzw x26, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 464)

# Testcase cp_rd (Test destination rd = x27)
li x26, 0xdb0b8fd39be94a3a # initialize rs1
ctzw x27, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 472)

# Testcase cp_rd (Test destination rd = x28)
li x8, 0x713d2977e476566b # initialize rs1
ctzw x28, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x28, 480)

# Testcase cp_rd (Test destination rd = x29)
li x30, 0x5b79aec5e0a548f7 # initialize rs1
ctzw x29, x30 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 488)

# Testcase cp_rd (Test destination rd = x30)
li x18, 0x4a87116f3a4fbdd7 # initialize rs1
ctzw x30, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 496)

# Testcase cp_rd (Test destination rd = x31)
li x17, 0xe179dffd86b1fa53 # initialize rs1
ctzw x31, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 504)

# Testcase cp_rs1_corners (Test source rs1 value = 0x0)
li x3, 0x0000000000000000 # initialize rs1
ctzw x22, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 512)

# Testcase cp_rs1_corners (Test source rs1 value = 0x1)
li x7, 0x0000000000000001 # initialize rs1
ctzw x6, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x6, 520)

# Testcase cp_rs1_corners (Test source rs1 value = 0x2)
li x6, 0x0000000000000002 # initialize rs1
ctzw x18, x6 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 528)

# Testcase cp_rs1_corners (Test source rs1 value = 0x8000000000000000)
li x2, 0x8000000000000000 # initialize rs1
ctzw x12, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 536)

# Testcase cp_rs1_corners (Test source rs1 value = 0x8000000000000001)
li x26, 0x8000000000000001 # initialize rs1
ctzw x1, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 544)

# Testcase cp_rs1_corners (Test source rs1 value = 0x7fffffffffffffff)
li x8, 0x7fffffffffffffff # initialize rs1
ctzw x24, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 552)

# Testcase cp_rs1_corners (Test source rs1 value = 0x7ffffffffffffffe)
li x26, 0x7ffffffffffffffe # initialize rs1
ctzw x30, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 560)

# Testcase cp_rs1_corners (Test source rs1 value = 0xffffffffffffffff)
li x22, 0xffffffffffffffff # initialize rs1
ctzw x17, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 568)

# Testcase cp_rs1_corners (Test source rs1 value = 0xfffffffffffffffe)
li x30, 0xfffffffffffffffe # initialize rs1
ctzw x28, x30 # perform operation
RVTEST_SIGUPD(x4, x0, x28, 576)

# Testcase cp_rs1_corners (Test source rs1 value = 0x5bbc887763ae86f2)
li x16, 0x5bbc887763ae86f2 # initialize rs1
ctzw x17, x16 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 584)

# Testcase cp_rs1_corners (Test source rs1 value = 0xaaaaaaaaaaaaaaaa)
li x10, 0xaaaaaaaaaaaaaaaa # initialize rs1
ctzw x8, x10 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 592)

# Testcase cp_rs1_corners (Test source rs1 value = 0x5555555555555555)
li x20, 0x5555555555555555 # initialize rs1
ctzw x31, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 600)

# Testcase cp_rs1_corners (Test source rs1 value = 0xffffffff)
li x16, 0x00000000ffffffff # initialize rs1
ctzw x17, x16 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 608)

# Testcase cp_rs1_corners (Test source rs1 value = 0xfffffffe)
li x17, 0x00000000fffffffe # initialize rs1
ctzw x28, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x28, 616)

# Testcase cp_rs1_corners (Test source rs1 value = 0x100000000)
li x26, 0x0000000100000000 # initialize rs1
ctzw x22, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 624)

# Testcase cp_rs1_corners (Test source rs1 value = 0x100000001)
li x7, 0x0000000100000001 # initialize rs1
ctzw x11, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 632)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x0)
li x0, 0xa2e308188790c024 # initialize rs1
ctzw x0, x0 # perform operation
RVTEST_SIGUPD(x4, x0, x0, 640)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x1)
li x1, 0xb6afa06c4d30fe7c # initialize rs1
ctzw x1, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 648)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x2)
li x2, 0x7c712a38819e4a72 # initialize rs1
ctzw x2, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 656)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x3)
li x3, 0x2f1274c6a45d927c # initialize rs1
ctzw x3, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 664)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x4)
mv x5, x4 # switch signature pointer register to avoid conflict with test
li x4, 0x76c6ff9a205bbdbf # initialize rs1
ctzw x4, x4 # perform operation
RVTEST_SIGUPD(x5, x0, x4, 672)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x5)
mv x6, x5 # switch signature pointer register to avoid conflict with test
li x5, 0x69bfb4224d2d6a5b # initialize rs1
ctzw x5, x5 # perform operation
RVTEST_SIGUPD(x6, x0, x5, 680)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x6)
mv x7, x6 # switch signature pointer register to avoid conflict with test
li x6, 0x1fe7cc9de38f29af # initialize rs1
ctzw x6, x6 # perform operation
RVTEST_SIGUPD(x7, x0, x6, 688)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x7)
mv x4, x7 # switch signature pointer register to avoid conflict with test
li x7, 0x4458ba9392751e73 # initialize rs1
ctzw x7, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 696)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x8)
li x8, 0xd78249047bf56221 # initialize rs1
ctzw x8, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 704)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x9)
li x9, 0x12c7359775373017 # initialize rs1
ctzw x9, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 712)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x10)
li x10, 0xca858806efe1c024 # initialize rs1
ctzw x10, x10 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 720)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x11)
li x11, 0x9d84ba361c16a8ef # initialize rs1
ctzw x11, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 728)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x12)
li x12, 0x1d159638e9615a14 # initialize rs1
ctzw x12, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 736)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x13)
li x13, 0x4b07aa8b15325c43 # initialize rs1
ctzw x13, x13 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 744)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x14)
li x14, 0x1705e498b00a4d7a # initialize rs1
ctzw x14, x14 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 752)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x15)
li x15, 0x4249d2256f22e8b9 # initialize rs1
ctzw x15, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 760)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x16)
li x16, 0x3592333c791c0757 # initialize rs1
ctzw x16, x16 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 768)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x17)
li x17, 0x12da7a289d16e476 # initialize rs1
ctzw x17, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 776)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x18)
li x18, 0x5549da809ee10f1b # initialize rs1
ctzw x18, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 784)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x19)
li x19, 0xc5e447df0c25703b # initialize rs1
ctzw x19, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 792)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x20)
li x20, 0x1f1bcae3643eb927 # initialize rs1
ctzw x20, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 800)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x21)
li x21, 0x5d7da732fe46249d # initialize rs1
ctzw x21, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 808)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x22)
li x22, 0x57c81c44e3314d26 # initialize rs1
ctzw x22, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 816)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x23)
li x23, 0x3bba914236e26e0c # initialize rs1
ctzw x23, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 824)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x24)
li x24, 0x7023c06ab7455213 # initialize rs1
ctzw x24, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 832)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x25)
li x25, 0xaf876978f2bf456d # initialize rs1
ctzw x25, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 840)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x26)
li x26, 0xcd3f6b418020b705 # initialize rs1
ctzw x26, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 848)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x27)
li x27, 0xe860bd64005465fd # initialize rs1
ctzw x27, x27 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 856)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x28)
li x28, 0x061fa38c350be2e9 # initialize rs1
ctzw x28, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x28, 864)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x29)
li x29, 0xbcaf9c6c4476c1ef # initialize rs1
ctzw x29, x29 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 872)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x30)
li x30, 0x036c3d6ab9d3505d # initialize rs1
ctzw x30, x30 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 880)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x31)
li x31, 0xde66a6fc177fd975 # initialize rs1
ctzw x31, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 888)

# Testcase cp_gpr/fpr_hazard nohaz test
add x3, x19, x15 # perform first operation
ctzw x21, x9 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard nohaz test
add x14, x9, x18 # perform first operation
ctzw x15, x23 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard nohaz test
add x15, x5, x11 # perform first operation
ctzw x21, x9 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard raw test
add x20, x13, x8 # perform first operation
ctzw x20, x28 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard raw test
add x13, x1, x21 # perform first operation
ctzw x13, x28 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard raw test
add x21, x20, x25 # perform first operation
ctzw x21, x30 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard waw test
add x27, x30, x31 # perform first operation
ctzw x27, x29 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard waw test
add x12, x18, x30 # perform first operation
ctzw x12, x8 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard waw test
add x7, x30, x23 # perform first operation
ctzw x7, x10 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard war test
add x10, x30, x29 # perform first operation
ctzw x30, x6 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard war test
add x1, x24, x2 # perform first operation
ctzw x2, x14 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard war test
add x20, x9, x22 # perform first operation
ctzw x11, x24 # perform second (triggering) operation

#.EQU SIGSIZE,896


// ******************
// Tests from: WALLY-COV-rorw.S
// ******************


# initialize signature pointer
la x4, begin_signature

    
# Testcase cp_rs1 (Test source rs1 = x0)
li x0, 0xdc9a37cbbd87e5c1 # initialize rs1
li x20, 0x9bb8f83dbc20ee74 # initialize rs2
rorw x26, x0, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 0)

# Testcase cp_rs1 (Test source rs1 = x1)
li x1, 0xb29a6df26fea98c0 # initialize rs1
li x20, 0x2b87d028b7947b90 # initialize rs2
rorw x21, x1, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 8)

# Testcase cp_rs1 (Test source rs1 = x2)
li x2, 0x2b48803952d38fd0 # initialize rs1
li x22, 0xe9060f8c749133e4 # initialize rs2
rorw x25, x2, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 16)

# Testcase cp_rs1 (Test source rs1 = x3)
li x3, 0xb4179805080dc0d3 # initialize rs1
li x1, 0xce27038e4df8e73a # initialize rs2
rorw x30, x3, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 24)

# Testcase cp_rs1 (Test source rs1 = x4)
mv x6, x4 # switch signature pointer register to avoid conflict with test
li x4, 0x05dd2e7673a1466e # initialize rs1
li x5, 0x607551cbb8174007 # initialize rs2
rorw x18, x4, x5 # perform operation
RVTEST_SIGUPD(x6, x0, x18, 32)

# Testcase cp_rs1 (Test source rs1 = x5)
li x5, 0xc94031864ca5e7b2 # initialize rs1
li x25, 0xa7fad0002065208d # initialize rs2
rorw x16, x5, x25 # perform operation
RVTEST_SIGUPD(x6, x0, x16, 40)

# Testcase cp_rs1 (Test source rs1 = x6)
mv x7, x6 # switch signature pointer register to avoid conflict with test
li x6, 0xfc64879032436923 # initialize rs1
li x5, 0x95196d85d50cda34 # initialize rs2
rorw x28, x6, x5 # perform operation
RVTEST_SIGUPD(x7, x0, x28, 48)

# Testcase cp_rs1 (Test source rs1 = x7)
mv x4, x7 # switch signature pointer register to avoid conflict with test
li x7, 0x363de5efe47a57b6 # initialize rs1
li x18, 0x4e0132ac4b2b9980 # initialize rs2
rorw x8, x7, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 56)

# Testcase cp_rs1 (Test source rs1 = x8)
li x8, 0x20eb5e66c59e639d # initialize rs1
li x18, 0xdeec988070bd822e # initialize rs2
rorw x2, x8, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 64)

# Testcase cp_rs1 (Test source rs1 = x9)
li x9, 0x03bd77e9a1c1c544 # initialize rs1
li x21, 0xca6a1ac070ba5fcb # initialize rs2
rorw x7, x9, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 72)

# Testcase cp_rs1 (Test source rs1 = x10)
li x10, 0x3eacfa3f5adf23dc # initialize rs1
li x28, 0x70c89afa93c85372 # initialize rs2
rorw x1, x10, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 80)

# Testcase cp_rs1 (Test source rs1 = x11)
li x11, 0x83d8fe4c1ebd301c # initialize rs1
li x5, 0x80e7244cde915e53 # initialize rs2
rorw x10, x11, x5 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 88)

# Testcase cp_rs1 (Test source rs1 = x12)
li x12, 0x91c873a326f3f73e # initialize rs1
li x23, 0xe47232f740ee9d9a # initialize rs2
rorw x29, x12, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 96)

# Testcase cp_rs1 (Test source rs1 = x13)
li x13, 0x4673ff0884d55528 # initialize rs1
li x28, 0xdcb4d2530ed7c058 # initialize rs2
rorw x26, x13, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 104)

# Testcase cp_rs1 (Test source rs1 = x14)
li x14, 0x5193057ecea0fccc # initialize rs1
li x26, 0xbf38481804d898ed # initialize rs2
rorw x25, x14, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 112)

# Testcase cp_rs1 (Test source rs1 = x15)
li x15, 0x6a511d02d2dc50d3 # initialize rs1
li x8, 0xdd22af35cf3b382a # initialize rs2
rorw x9, x15, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 120)

# Testcase cp_rs1 (Test source rs1 = x16)
li x16, 0x5dc7b0e46fe9a3c2 # initialize rs1
li x10, 0xd71e481da75e1225 # initialize rs2
rorw x6, x16, x10 # perform operation
RVTEST_SIGUPD(x4, x0, x6, 128)

# Testcase cp_rs1 (Test source rs1 = x17)
li x17, 0x3ff4a0610b573b17 # initialize rs1
li x29, 0xaec9ed9ec962532c # initialize rs2
rorw x7, x17, x29 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 136)

# Testcase cp_rs1 (Test source rs1 = x18)
li x18, 0x896ff7eb34ccb133 # initialize rs1
li x27, 0x38dc2bf6f056b0cc # initialize rs2
rorw x24, x18, x27 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 144)

# Testcase cp_rs1 (Test source rs1 = x19)
li x19, 0xe4bd65b81f7f6106 # initialize rs1
li x20, 0x23f6921b6b58070a # initialize rs2
rorw x15, x19, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 152)

# Testcase cp_rs1 (Test source rs1 = x20)
li x20, 0xfde4ccc4cdbbcb81 # initialize rs1
li x28, 0x59f43dc809806fd2 # initialize rs2
rorw x19, x20, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 160)

# Testcase cp_rs1 (Test source rs1 = x21)
li x21, 0x5c944f1e1310d7dd # initialize rs1
li x15, 0xbc5909fe89d822bc # initialize rs2
rorw x19, x21, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 168)

# Testcase cp_rs1 (Test source rs1 = x22)
li x22, 0x04941db178afcfd5 # initialize rs1
li x25, 0x3abe225f8f8a55cf # initialize rs2
rorw x19, x22, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 176)

# Testcase cp_rs1 (Test source rs1 = x23)
li x23, 0xeee189dcfd2e48dd # initialize rs1
li x11, 0xb6f67ee073d2a1db # initialize rs2
rorw x20, x23, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 184)

# Testcase cp_rs1 (Test source rs1 = x24)
li x24, 0x65f6eaaea0cda763 # initialize rs1
li x22, 0x42b9df715c66dbd2 # initialize rs2
rorw x10, x24, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 192)

# Testcase cp_rs1 (Test source rs1 = x25)
li x25, 0xc9e9136af87ee4d2 # initialize rs1
li x22, 0x9b409f04ad57b476 # initialize rs2
rorw x13, x25, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 200)

# Testcase cp_rs1 (Test source rs1 = x26)
li x26, 0x37461e3373ae71f9 # initialize rs1
li x18, 0xfdb3930e6e82cdc0 # initialize rs2
rorw x3, x26, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 208)

# Testcase cp_rs1 (Test source rs1 = x27)
li x27, 0x02e3cda578e85aee # initialize rs1
li x6, 0xc10bb8de1c95fbb6 # initialize rs2
rorw x26, x27, x6 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 216)

# Testcase cp_rs1 (Test source rs1 = x28)
li x28, 0x0e2ba2cfb9b3dc48 # initialize rs1
li x12, 0x87bf8d2601c1c019 # initialize rs2
rorw x15, x28, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 224)

# Testcase cp_rs1 (Test source rs1 = x29)
li x29, 0xc1b32e50390d645a # initialize rs1
li x5, 0xbf03997c1c77568c # initialize rs2
rorw x20, x29, x5 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 232)

# Testcase cp_rs1 (Test source rs1 = x30)
li x30, 0xd767c9db181e0e0c # initialize rs1
li x29, 0xcaba47e64df8212b # initialize rs2
rorw x7, x30, x29 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 240)

# Testcase cp_rs1 (Test source rs1 = x31)
li x31, 0x54d7305b81df6d6f # initialize rs1
li x10, 0x4459e8cffc64fdcb # initialize rs2
rorw x27, x31, x10 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 248)

# Testcase cp_rs2 (Test source rs2 = x0)
li x7, 0x9113f4448a955eed # initialize rs1
li x0, 0xfa1016b1e529c670 # initialize rs2
rorw x21, x7, x0 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 256)

# Testcase cp_rs2 (Test source rs2 = x1)
li x19, 0x4325a43bed0ea78c # initialize rs1
li x1, 0xfd38275bf6345f44 # initialize rs2
rorw x20, x19, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 264)

# Testcase cp_rs2 (Test source rs2 = x2)
li x21, 0x24b7c90319c857a3 # initialize rs1
li x2, 0x6454abbfa635a87f # initialize rs2
rorw x27, x21, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 272)

# Testcase cp_rs2 (Test source rs2 = x3)
li x13, 0x3c606d6ddc09de31 # initialize rs1
li x3, 0xd790f7f9c5c189de # initialize rs2
rorw x9, x13, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 280)

# Testcase cp_rs2 (Test source rs2 = x4)
mv x5, x4 # switch signature pointer register to avoid conflict with test
li x8, 0x3f1473a0472bafdd # initialize rs1
li x4, 0x07dafabb130802ea # initialize rs2
rorw x28, x8, x4 # perform operation
RVTEST_SIGUPD(x5, x0, x28, 288)

# Testcase cp_rs2 (Test source rs2 = x5)
mv x6, x5 # switch signature pointer register to avoid conflict with test
li x24, 0xb3d221d219c86391 # initialize rs1
li x5, 0x17e307f428330052 # initialize rs2
rorw x1, x24, x5 # perform operation
RVTEST_SIGUPD(x6, x0, x1, 296)

# Testcase cp_rs2 (Test source rs2 = x6)
mv x4, x6 # switch signature pointer register to avoid conflict with test
li x7, 0xf2788041921cc9ac # initialize rs1
li x6, 0x10fc1d2e9045c124 # initialize rs2
rorw x18, x7, x6 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 304)

# Testcase cp_rs2 (Test source rs2 = x7)
li x23, 0xc164d21c331ba8a3 # initialize rs1
li x7, 0x3ee783c14bc622de # initialize rs2
rorw x27, x23, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 312)

# Testcase cp_rs2 (Test source rs2 = x8)
li x24, 0xda1f148d38378986 # initialize rs1
li x8, 0xd9df6785628bd946 # initialize rs2
rorw x29, x24, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 320)

# Testcase cp_rs2 (Test source rs2 = x9)
li x27, 0x1dccc8b0d559b1c3 # initialize rs1
li x9, 0x4a3ac7f578bd62e3 # initialize rs2
rorw x20, x27, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 328)

# Testcase cp_rs2 (Test source rs2 = x10)
li x13, 0x9f83cdde3a15ae64 # initialize rs1
li x10, 0xe1aede1051972b1f # initialize rs2
rorw x11, x13, x10 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 336)

# Testcase cp_rs2 (Test source rs2 = x11)
li x13, 0x7421c98cb80faa09 # initialize rs1
li x11, 0x45d037ff35b300c2 # initialize rs2
rorw x1, x13, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 344)

# Testcase cp_rs2 (Test source rs2 = x12)
li x3, 0xd760105e59c3111f # initialize rs1
li x12, 0x71e64d3a35cb8cac # initialize rs2
rorw x6, x3, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x6, 352)

# Testcase cp_rs2 (Test source rs2 = x13)
li x14, 0x3885278f7c871c3e # initialize rs1
li x13, 0x4aaad514d352e89b # initialize rs2
rorw x20, x14, x13 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 360)

# Testcase cp_rs2 (Test source rs2 = x14)
li x7, 0xb82b45da9bfbedd3 # initialize rs1
li x14, 0xad7e61ab225f08fc # initialize rs2
rorw x15, x7, x14 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 368)

# Testcase cp_rs2 (Test source rs2 = x15)
li x5, 0xe49838f8d52ef80f # initialize rs1
li x15, 0x96676802aa4c3536 # initialize rs2
rorw x6, x5, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x6, 376)

# Testcase cp_rs2 (Test source rs2 = x16)
li x19, 0x19c4d798d44818b3 # initialize rs1
li x16, 0x3cace090ea5e37f3 # initialize rs2
rorw x3, x19, x16 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 384)

# Testcase cp_rs2 (Test source rs2 = x17)
li x18, 0x484892efe2de80c3 # initialize rs1
li x17, 0xefd995a10714a2c2 # initialize rs2
rorw x19, x18, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 392)

# Testcase cp_rs2 (Test source rs2 = x18)
li x30, 0x10c064ffad2bb9a7 # initialize rs1
li x18, 0xd635388222719fba # initialize rs2
rorw x5, x30, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x5, 400)

# Testcase cp_rs2 (Test source rs2 = x19)
li x18, 0x4034b9f0ee63210b # initialize rs1
li x19, 0xfbd544cde06e1ca0 # initialize rs2
rorw x31, x18, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 408)

# Testcase cp_rs2 (Test source rs2 = x20)
li x28, 0xa6d6156b0b2095fa # initialize rs1
li x20, 0x180f96e185cef7c4 # initialize rs2
rorw x16, x28, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 416)

# Testcase cp_rs2 (Test source rs2 = x21)
li x6, 0x809153b9d5612c7f # initialize rs1
li x21, 0x396d73ea65d3c0e4 # initialize rs2
rorw x14, x6, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 424)

# Testcase cp_rs2 (Test source rs2 = x22)
li x11, 0x100d9ef2c338a32a # initialize rs1
li x22, 0x4324ecf31b910bcd # initialize rs2
rorw x5, x11, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x5, 432)

# Testcase cp_rs2 (Test source rs2 = x23)
li x16, 0x3b01e25bdb9932cf # initialize rs1
li x23, 0x589c0df424fc3704 # initialize rs2
rorw x13, x16, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 440)

# Testcase cp_rs2 (Test source rs2 = x24)
li x12, 0x4241abbce9919bfe # initialize rs1
li x24, 0xba3441452e47a8ab # initialize rs2
rorw x16, x12, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 448)

# Testcase cp_rs2 (Test source rs2 = x25)
li x1, 0x76d5335a1d1c61df # initialize rs1
li x25, 0x245852d16b51193e # initialize rs2
rorw x27, x1, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 456)

# Testcase cp_rs2 (Test source rs2 = x26)
li x5, 0x1fa39abb4a20af97 # initialize rs1
li x26, 0x5e24436b3b3ff9a3 # initialize rs2
rorw x17, x5, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 464)

# Testcase cp_rs2 (Test source rs2 = x27)
li x11, 0x2285997da4c49107 # initialize rs1
li x27, 0xf67fde38981a98ed # initialize rs2
rorw x16, x11, x27 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 472)

# Testcase cp_rs2 (Test source rs2 = x28)
li x18, 0x0be34c11ab9a7b42 # initialize rs1
li x28, 0x886b3c1472171da4 # initialize rs2
rorw x2, x18, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 480)

# Testcase cp_rs2 (Test source rs2 = x29)
li x17, 0x052aa1f9af6c8ca9 # initialize rs1
li x29, 0x0bffecae826a2179 # initialize rs2
rorw x9, x17, x29 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 488)

# Testcase cp_rs2 (Test source rs2 = x30)
li x24, 0x2a881f9d6178ee13 # initialize rs1
li x30, 0xb8641d221f446fff # initialize rs2
rorw x11, x24, x30 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 496)

# Testcase cp_rs2 (Test source rs2 = x31)
li x8, 0xbd5a9d1571f7f61f # initialize rs1
li x31, 0x9ad2d7c5bba099eb # initialize rs2
rorw x11, x8, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 504)

# Testcase cp_rd (Test destination rd = x0)
li x8, 0x5184072317241ec5 # initialize rs1
li x22, 0xc82fbcd265bc57d7 # initialize rs2
rorw x0, x8, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x0, 512)

# Testcase cp_rd (Test destination rd = x1)
li x13, 0x97c67c9dddb48cd2 # initialize rs1
li x22, 0x4ffdc78afbc5acbe # initialize rs2
rorw x1, x13, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 520)

# Testcase cp_rd (Test destination rd = x2)
li x21, 0x982361c9f60818a2 # initialize rs1
li x27, 0x0cac2bec0d154966 # initialize rs2
rorw x2, x21, x27 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 528)

# Testcase cp_rd (Test destination rd = x3)
li x15, 0x7e9ef854da737dfe # initialize rs1
li x9, 0x8416131c5d078560 # initialize rs2
rorw x3, x15, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 536)

# Testcase cp_rd (Test destination rd = x4)
mv x5, x4 # switch signature pointer register to avoid conflict with test
li x6, 0x4fb78fca5a84dec9 # initialize rs1
li x9, 0xa9fcb994ef4afbad # initialize rs2
rorw x4, x6, x9 # perform operation
RVTEST_SIGUPD(x5, x0, x4, 544)

# Testcase cp_rd (Test destination rd = x5)
mv x6, x5 # switch signature pointer register to avoid conflict with test
li x30, 0x0d9ded030cc1f3fa # initialize rs1
li x29, 0xc498641c32805fbb # initialize rs2
rorw x5, x30, x29 # perform operation
RVTEST_SIGUPD(x6, x0, x5, 552)

# Testcase cp_rd (Test destination rd = x6)
mv x4, x6 # switch signature pointer register to avoid conflict with test
li x7, 0xad282a0fe0526bd2 # initialize rs1
li x14, 0xa474e771cae012ba # initialize rs2
rorw x6, x7, x14 # perform operation
RVTEST_SIGUPD(x4, x0, x6, 560)

# Testcase cp_rd (Test destination rd = x7)
li x7, 0x92b1bd529fc5c1f7 # initialize rs1
li x27, 0x6943eb890819ea6d # initialize rs2
rorw x7, x7, x27 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 568)

# Testcase cp_rd (Test destination rd = x8)
li x29, 0x8938b8648ba41ae1 # initialize rs1
li x7, 0x4d381af8dbbec4dd # initialize rs2
rorw x8, x29, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 576)

# Testcase cp_rd (Test destination rd = x9)
li x14, 0x6df74e22b93569e3 # initialize rs1
li x3, 0x7d2e101ac062cc0c # initialize rs2
rorw x9, x14, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 584)

# Testcase cp_rd (Test destination rd = x10)
li x28, 0x44905f98f0120dd5 # initialize rs1
li x13, 0x25141d1b284d0073 # initialize rs2
rorw x10, x28, x13 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 592)

# Testcase cp_rd (Test destination rd = x11)
li x1, 0xa7eaf0472432ad42 # initialize rs1
li x29, 0x558a64774a49a732 # initialize rs2
rorw x11, x1, x29 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 600)

# Testcase cp_rd (Test destination rd = x12)
li x7, 0xd1e36a72cdabc732 # initialize rs1
li x31, 0x29e88169c862a5e1 # initialize rs2
rorw x12, x7, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 608)

# Testcase cp_rd (Test destination rd = x13)
li x22, 0xb6f38e3adee0c364 # initialize rs1
li x13, 0x82f90ac793e5f673 # initialize rs2
rorw x13, x22, x13 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 616)

# Testcase cp_rd (Test destination rd = x14)
li x15, 0x3e67a476bcb4922d # initialize rs1
li x5, 0xd9b072d19ab436f3 # initialize rs2
rorw x14, x15, x5 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 624)

# Testcase cp_rd (Test destination rd = x15)
li x30, 0xc4a6203b3c7ff993 # initialize rs1
li x2, 0x56827583ee1d0757 # initialize rs2
rorw x15, x30, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 632)

# Testcase cp_rd (Test destination rd = x16)
li x13, 0x3244017d2d4aa6b1 # initialize rs1
li x2, 0x997b110e9a55041d # initialize rs2
rorw x16, x13, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 640)

# Testcase cp_rd (Test destination rd = x17)
li x15, 0xd14fc9325964a4bb # initialize rs1
li x7, 0x7d838db5bd524f3a # initialize rs2
rorw x17, x15, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 648)

# Testcase cp_rd (Test destination rd = x18)
li x2, 0xd792ff2a93df3682 # initialize rs1
li x13, 0x7706b728f842bf3f # initialize rs2
rorw x18, x2, x13 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 656)

# Testcase cp_rd (Test destination rd = x19)
li x3, 0x08a0639df82c5377 # initialize rs1
li x30, 0x05680592a1f8259c # initialize rs2
rorw x19, x3, x30 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 664)

# Testcase cp_rd (Test destination rd = x20)
li x24, 0x83458e51b5a4fd86 # initialize rs1
li x16, 0x74e9c830e74a3b9d # initialize rs2
rorw x20, x24, x16 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 672)

# Testcase cp_rd (Test destination rd = x21)
li x24, 0x01a1f6602feadace # initialize rs1
li x2, 0xd15b1bcd61bbc082 # initialize rs2
rorw x21, x24, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 680)

# Testcase cp_rd (Test destination rd = x22)
li x9, 0x591cfcc15b42c8a1 # initialize rs1
li x31, 0x805ef206ad998b0b # initialize rs2
rorw x22, x9, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 688)

# Testcase cp_rd (Test destination rd = x23)
li x15, 0xc7adf8f87f15735c # initialize rs1
li x3, 0x57840f7c0c512fc7 # initialize rs2
rorw x23, x15, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 696)

# Testcase cp_rd (Test destination rd = x24)
li x18, 0xa5ddf5010f1eabff # initialize rs1
li x5, 0x8429ba8768da0e14 # initialize rs2
rorw x24, x18, x5 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 704)

# Testcase cp_rd (Test destination rd = x25)
li x6, 0xc553d37dd897eb21 # initialize rs1
li x14, 0x1a4f2c7993751844 # initialize rs2
rorw x25, x6, x14 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 712)

# Testcase cp_rd (Test destination rd = x26)
li x12, 0x869ecbc96fc81d23 # initialize rs1
li x29, 0x1e13a32b88c65fd3 # initialize rs2
rorw x26, x12, x29 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 720)

# Testcase cp_rd (Test destination rd = x27)
li x22, 0xee660a2bb7d114a3 # initialize rs1
li x1, 0x7e930b4ec3fe0552 # initialize rs2
rorw x27, x22, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 728)

# Testcase cp_rd (Test destination rd = x28)
li x1, 0x91612f4d82b4afb1 # initialize rs1
li x12, 0x806e03f9c9114545 # initialize rs2
rorw x28, x1, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x28, 736)

# Testcase cp_rd (Test destination rd = x29)
li x10, 0x3cb4d269a328c240 # initialize rs1
li x19, 0x499224fd94818563 # initialize rs2
rorw x29, x10, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 744)

# Testcase cp_rd (Test destination rd = x30)
li x22, 0x5161e6194b88680e # initialize rs1
li x25, 0x353ea7df62ce1c0f # initialize rs2
rorw x30, x22, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 752)

# Testcase cp_rd (Test destination rd = x31)
li x31, 0x039ff3ad173e4c48 # initialize rs1
li x8, 0x064ba1d53b0f7acc # initialize rs2
rorw x31, x31, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 760)

# Testcase cp_rs1_corners (Test source rs1 value = 0x0)
li x9, 0x0000000000000000 # initialize rs1
li x17, 0x469e2474859b01bf # initialize rs2
rorw x22, x9, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 768)

# Testcase cp_rs1_corners (Test source rs1 value = 0x1)
li x23, 0x0000000000000001 # initialize rs1
li x7, 0x0547fc12440f1114 # initialize rs2
rorw x9, x23, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 776)

# Testcase cp_rs1_corners (Test source rs1 value = 0x2)
li x16, 0x0000000000000002 # initialize rs1
li x1, 0xb0c5f3b04725f2fc # initialize rs2
rorw x26, x16, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 784)

# Testcase cp_rs1_corners (Test source rs1 value = 0x8000000000000000)
li x5, 0x8000000000000000 # initialize rs1
li x11, 0xb464ce3f9af5c2e7 # initialize rs2
rorw x17, x5, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 792)

# Testcase cp_rs1_corners (Test source rs1 value = 0x8000000000000001)
li x11, 0x8000000000000001 # initialize rs1
li x17, 0xff7ab61e1fffaab8 # initialize rs2
rorw x14, x11, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 800)

# Testcase cp_rs1_corners (Test source rs1 value = 0x7fffffffffffffff)
li x9, 0x7fffffffffffffff # initialize rs1
li x27, 0x65a7267c3c224f1d # initialize rs2
rorw x8, x9, x27 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 808)

# Testcase cp_rs1_corners (Test source rs1 value = 0x7ffffffffffffffe)
li x27, 0x7ffffffffffffffe # initialize rs1
li x18, 0x5930f34b51106e3e # initialize rs2
rorw x30, x27, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 816)

# Testcase cp_rs1_corners (Test source rs1 value = 0xffffffffffffffff)
li x28, 0xffffffffffffffff # initialize rs1
li x23, 0xa9bac2f9accf1c25 # initialize rs2
rorw x9, x28, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 824)

# Testcase cp_rs1_corners (Test source rs1 value = 0xfffffffffffffffe)
li x2, 0xfffffffffffffffe # initialize rs1
li x14, 0x46a03f64fb7fe566 # initialize rs2
rorw x5, x2, x14 # perform operation
RVTEST_SIGUPD(x4, x0, x5, 832)

# Testcase cp_rs1_corners (Test source rs1 value = 0x5bbc887763ae86f2)
li x10, 0x5bbc887763ae86f2 # initialize rs1
li x19, 0x1205113c306d35b8 # initialize rs2
rorw x30, x10, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 840)

# Testcase cp_rs1_corners (Test source rs1 value = 0xaaaaaaaaaaaaaaaa)
li x3, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x15, 0xcae683c5fe67a088 # initialize rs2
rorw x14, x3, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 848)

# Testcase cp_rs1_corners (Test source rs1 value = 0x5555555555555555)
li x17, 0x5555555555555555 # initialize rs1
li x31, 0xb0bc216427aebac5 # initialize rs2
rorw x11, x17, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 856)

# Testcase cp_rs1_corners (Test source rs1 value = 0xffffffff)
li x22, 0x00000000ffffffff # initialize rs1
li x1, 0xe76ed9d68138ce28 # initialize rs2
rorw x3, x22, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 864)

# Testcase cp_rs1_corners (Test source rs1 value = 0xfffffffe)
li x21, 0x00000000fffffffe # initialize rs1
li x11, 0x53b277bcfc53eb09 # initialize rs2
rorw x10, x21, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 872)

# Testcase cp_rs1_corners (Test source rs1 value = 0x100000000)
li x30, 0x0000000100000000 # initialize rs1
li x10, 0xf8134d136eb89f93 # initialize rs2
rorw x22, x30, x10 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 880)

# Testcase cp_rs1_corners (Test source rs1 value = 0x100000001)
li x19, 0x0000000100000001 # initialize rs1
li x9, 0x57e55bca0c1d6ae3 # initialize rs2
rorw x15, x19, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 888)

# Testcase cp_rs2_corners (Test source rs2 value = 0x0)
li x8, 0x14ef085e78c519a0 # initialize rs1
li x10, 0x0000000000000000 # initialize rs2
rorw x3, x8, x10 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 896)

# Testcase cp_rs2_corners (Test source rs2 value = 0x1)
li x19, 0xa50492f3d90f4306 # initialize rs1
li x20, 0x0000000000000001 # initialize rs2
rorw x29, x19, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 904)

# Testcase cp_rs2_corners (Test source rs2 value = 0x2)
li x13, 0x47bc38cb4fa875e1 # initialize rs1
li x31, 0x0000000000000002 # initialize rs2
rorw x7, x13, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 912)

# Testcase cp_rs2_corners (Test source rs2 value = 0x8000000000000000)
li x19, 0xf5f42b66244f18a2 # initialize rs1
li x23, 0x8000000000000000 # initialize rs2
rorw x20, x19, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 920)

# Testcase cp_rs2_corners (Test source rs2 value = 0x8000000000000001)
li x17, 0x7fb11abf77ef510f # initialize rs1
li x9, 0x8000000000000001 # initialize rs2
rorw x23, x17, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 928)

# Testcase cp_rs2_corners (Test source rs2 value = 0x7fffffffffffffff)
li x22, 0x3049e10fb64103a1 # initialize rs1
li x29, 0x7fffffffffffffff # initialize rs2
rorw x31, x22, x29 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 936)

# Testcase cp_rs2_corners (Test source rs2 value = 0x7ffffffffffffffe)
li x30, 0xf6bed91e9288711e # initialize rs1
li x2, 0x7ffffffffffffffe # initialize rs2
rorw x11, x30, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 944)

# Testcase cp_rs2_corners (Test source rs2 value = 0xffffffffffffffff)
li x10, 0x931ea528ce5a2989 # initialize rs1
li x19, 0xffffffffffffffff # initialize rs2
rorw x27, x10, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 952)

# Testcase cp_rs2_corners (Test source rs2 value = 0xfffffffffffffffe)
li x20, 0x748f406939707538 # initialize rs1
li x16, 0xfffffffffffffffe # initialize rs2
rorw x3, x20, x16 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 960)

# Testcase cp_rs2_corners (Test source rs2 value = 0x5bbc887763ae86f2)
li x24, 0xa8a2140c1ea237c3 # initialize rs1
li x3, 0x5bbc887763ae86f2 # initialize rs2
rorw x30, x24, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 968)

# Testcase cp_rs2_corners (Test source rs2 value = 0xaaaaaaaaaaaaaaaa)
li x26, 0xf488839e00b134d7 # initialize rs1
li x12, 0xaaaaaaaaaaaaaaaa # initialize rs2
rorw x7, x26, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 976)

# Testcase cp_rs2_corners (Test source rs2 value = 0x5555555555555555)
li x13, 0x3ee7cf6c10be6a64 # initialize rs1
li x17, 0x5555555555555555 # initialize rs2
rorw x9, x13, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 984)

# Testcase cp_rs2_corners (Test source rs2 value = 0xffffffff)
li x16, 0xf18254b5fd41807f # initialize rs1
li x9, 0x00000000ffffffff # initialize rs2
rorw x12, x16, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 992)

# Testcase cp_rs2_corners (Test source rs2 value = 0xfffffffe)
li x17, 0xc7b34233b68e1a98 # initialize rs1
li x23, 0x00000000fffffffe # initialize rs2
rorw x7, x17, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 1000)

# Testcase cp_rs2_corners (Test source rs2 value = 0x100000000)
li x6, 0x1d2a6afcdfdaec3c # initialize rs1
li x1, 0x0000000100000000 # initialize rs2
rorw x28, x6, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x28, 1008)

# Testcase cp_rs2_corners (Test source rs2 value = 0x100000001)
li x12, 0x95ae9bec28e2190b # initialize rs1
li x16, 0x0000000100000001 # initialize rs2
rorw x9, x12, x16 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 1016)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0x0)
li x16, 0x0000000000000000 # initialize rs1
li x28, 0x0000000000000000 # initialize rs2
rorw x5, x16, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x5, 1024)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0x1)
li x30, 0x0000000000000000 # initialize rs1
li x24, 0x0000000000000001 # initialize rs2
rorw x16, x30, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 1032)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0x2)
li x16, 0x0000000000000000 # initialize rs1
li x28, 0x0000000000000002 # initialize rs2
rorw x1, x16, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 1040)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0x8000000000000000)
li x21, 0x0000000000000000 # initialize rs1
li x29, 0x8000000000000000 # initialize rs2
rorw x25, x21, x29 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 1048)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0x8000000000000001)
li x27, 0x0000000000000000 # initialize rs1
li x28, 0x8000000000000001 # initialize rs2
rorw x6, x27, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x6, 1056)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0x7fffffffffffffff)
li x16, 0x0000000000000000 # initialize rs1
li x27, 0x7fffffffffffffff # initialize rs2
rorw x6, x16, x27 # perform operation
RVTEST_SIGUPD(x4, x0, x6, 1064)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0x7ffffffffffffffe)
li x17, 0x0000000000000000 # initialize rs1
li x21, 0x7ffffffffffffffe # initialize rs2
rorw x28, x17, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x28, 1072)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0xffffffffffffffff)
li x7, 0x0000000000000000 # initialize rs1
li x13, 0xffffffffffffffff # initialize rs2
rorw x12, x7, x13 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 1080)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0xfffffffffffffffe)
li x15, 0x0000000000000000 # initialize rs1
li x16, 0xfffffffffffffffe # initialize rs2
rorw x28, x15, x16 # perform operation
RVTEST_SIGUPD(x4, x0, x28, 1088)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0x5bbc887763ae86f2)
li x18, 0x0000000000000000 # initialize rs1
li x16, 0x5bbc887763ae86f2 # initialize rs2
rorw x28, x18, x16 # perform operation
RVTEST_SIGUPD(x4, x0, x28, 1096)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0xaaaaaaaaaaaaaaaa)
li x18, 0x0000000000000000 # initialize rs1
li x22, 0xaaaaaaaaaaaaaaaa # initialize rs2
rorw x20, x18, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 1104)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0x5555555555555555)
li x23, 0x0000000000000000 # initialize rs1
li x18, 0x5555555555555555 # initialize rs2
rorw x8, x23, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 1112)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0xffffffff)
li x7, 0x0000000000000000 # initialize rs1
li x22, 0x00000000ffffffff # initialize rs2
rorw x14, x7, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 1120)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0xfffffffe)
li x31, 0x0000000000000000 # initialize rs1
li x14, 0x00000000fffffffe # initialize rs2
rorw x21, x31, x14 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 1128)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0x100000000)
li x13, 0x0000000000000000 # initialize rs1
li x2, 0x0000000100000000 # initialize rs2
rorw x31, x13, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 1136)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0x100000001)
li x9, 0x0000000000000000 # initialize rs1
li x15, 0x0000000100000001 # initialize rs2
rorw x12, x9, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 1144)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0x0)
li x17, 0x0000000000000001 # initialize rs1
li x12, 0x0000000000000000 # initialize rs2
rorw x5, x17, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x5, 1152)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0x1)
li x14, 0x0000000000000001 # initialize rs1
li x21, 0x0000000000000001 # initialize rs2
rorw x28, x14, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x28, 1160)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0x2)
li x8, 0x0000000000000001 # initialize rs1
li x26, 0x0000000000000002 # initialize rs2
rorw x5, x8, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x5, 1168)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0x8000000000000000)
li x3, 0x0000000000000001 # initialize rs1
li x27, 0x8000000000000000 # initialize rs2
rorw x18, x3, x27 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 1176)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0x8000000000000001)
li x22, 0x0000000000000001 # initialize rs1
li x15, 0x8000000000000001 # initialize rs2
rorw x8, x22, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 1184)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0x7fffffffffffffff)
li x3, 0x0000000000000001 # initialize rs1
li x2, 0x7fffffffffffffff # initialize rs2
rorw x19, x3, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 1192)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0x7ffffffffffffffe)
li x29, 0x0000000000000001 # initialize rs1
li x2, 0x7ffffffffffffffe # initialize rs2
rorw x21, x29, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 1200)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0xffffffffffffffff)
li x3, 0x0000000000000001 # initialize rs1
li x26, 0xffffffffffffffff # initialize rs2
rorw x18, x3, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 1208)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0xfffffffffffffffe)
li x25, 0x0000000000000001 # initialize rs1
li x31, 0xfffffffffffffffe # initialize rs2
rorw x3, x25, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 1216)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0x5bbc887763ae86f2)
li x11, 0x0000000000000001 # initialize rs1
li x31, 0x5bbc887763ae86f2 # initialize rs2
rorw x9, x11, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 1224)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0xaaaaaaaaaaaaaaaa)
li x16, 0x0000000000000001 # initialize rs1
li x10, 0xaaaaaaaaaaaaaaaa # initialize rs2
rorw x21, x16, x10 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 1232)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0x5555555555555555)
li x6, 0x0000000000000001 # initialize rs1
li x28, 0x5555555555555555 # initialize rs2
rorw x7, x6, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 1240)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0xffffffff)
li x30, 0x0000000000000001 # initialize rs1
li x13, 0x00000000ffffffff # initialize rs2
rorw x7, x30, x13 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 1248)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0xfffffffe)
li x27, 0x0000000000000001 # initialize rs1
li x22, 0x00000000fffffffe # initialize rs2
rorw x20, x27, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 1256)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0x100000000)
li x28, 0x0000000000000001 # initialize rs1
li x9, 0x0000000100000000 # initialize rs2
rorw x25, x28, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 1264)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0x100000001)
li x15, 0x0000000000000001 # initialize rs1
li x31, 0x0000000100000001 # initialize rs2
rorw x17, x15, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 1272)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0x0)
li x14, 0x0000000000000002 # initialize rs1
li x8, 0x0000000000000000 # initialize rs2
rorw x16, x14, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 1280)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0x1)
li x28, 0x0000000000000002 # initialize rs1
li x25, 0x0000000000000001 # initialize rs2
rorw x22, x28, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 1288)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0x2)
li x11, 0x0000000000000002 # initialize rs1
li x27, 0x0000000000000002 # initialize rs2
rorw x10, x11, x27 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 1296)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0x8000000000000000)
li x18, 0x0000000000000002 # initialize rs1
li x15, 0x8000000000000000 # initialize rs2
rorw x20, x18, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 1304)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0x8000000000000001)
li x15, 0x0000000000000002 # initialize rs1
li x8, 0x8000000000000001 # initialize rs2
rorw x27, x15, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 1312)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0x7fffffffffffffff)
li x25, 0x0000000000000002 # initialize rs1
li x31, 0x7fffffffffffffff # initialize rs2
rorw x21, x25, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 1320)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0x7ffffffffffffffe)
li x23, 0x0000000000000002 # initialize rs1
li x28, 0x7ffffffffffffffe # initialize rs2
rorw x6, x23, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x6, 1328)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0xffffffffffffffff)
li x2, 0x0000000000000002 # initialize rs1
li x13, 0xffffffffffffffff # initialize rs2
rorw x24, x2, x13 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 1336)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0xfffffffffffffffe)
li x29, 0x0000000000000002 # initialize rs1
li x1, 0xfffffffffffffffe # initialize rs2
rorw x18, x29, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 1344)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0x5bbc887763ae86f2)
li x3, 0x0000000000000002 # initialize rs1
li x22, 0x5bbc887763ae86f2 # initialize rs2
rorw x29, x3, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 1352)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0xaaaaaaaaaaaaaaaa)
li x7, 0x0000000000000002 # initialize rs1
li x19, 0xaaaaaaaaaaaaaaaa # initialize rs2
rorw x17, x7, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 1360)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0x5555555555555555)
li x28, 0x0000000000000002 # initialize rs1
li x1, 0x5555555555555555 # initialize rs2
rorw x11, x28, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 1368)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0xffffffff)
li x7, 0x0000000000000002 # initialize rs1
li x10, 0x00000000ffffffff # initialize rs2
rorw x5, x7, x10 # perform operation
RVTEST_SIGUPD(x4, x0, x5, 1376)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0xfffffffe)
li x31, 0x0000000000000002 # initialize rs1
li x16, 0x00000000fffffffe # initialize rs2
rorw x13, x31, x16 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 1384)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0x100000000)
li x22, 0x0000000000000002 # initialize rs1
li x1, 0x0000000100000000 # initialize rs2
rorw x5, x22, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x5, 1392)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0x100000001)
li x23, 0x0000000000000002 # initialize rs1
li x16, 0x0000000100000001 # initialize rs2
rorw x25, x23, x16 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 1400)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0x0)
li x22, 0x8000000000000000 # initialize rs1
li x3, 0x0000000000000000 # initialize rs2
rorw x26, x22, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 1408)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0x1)
li x3, 0x8000000000000000 # initialize rs1
li x1, 0x0000000000000001 # initialize rs2
rorw x25, x3, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 1416)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0x2)
li x24, 0x8000000000000000 # initialize rs1
li x28, 0x0000000000000002 # initialize rs2
rorw x6, x24, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x6, 1424)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0x8000000000000000)
li x18, 0x8000000000000000 # initialize rs1
li x19, 0x8000000000000000 # initialize rs2
rorw x28, x18, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x28, 1432)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0x8000000000000001)
li x9, 0x8000000000000000 # initialize rs1
li x12, 0x8000000000000001 # initialize rs2
rorw x8, x9, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 1440)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0x7fffffffffffffff)
li x13, 0x8000000000000000 # initialize rs1
li x18, 0x7fffffffffffffff # initialize rs2
rorw x12, x13, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 1448)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0x7ffffffffffffffe)
li x21, 0x8000000000000000 # initialize rs1
li x11, 0x7ffffffffffffffe # initialize rs2
rorw x22, x21, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 1456)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0xffffffffffffffff)
li x25, 0x8000000000000000 # initialize rs1
li x1, 0xffffffffffffffff # initialize rs2
rorw x20, x25, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 1464)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0xfffffffffffffffe)
li x5, 0x8000000000000000 # initialize rs1
li x18, 0xfffffffffffffffe # initialize rs2
rorw x27, x5, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 1472)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0x5bbc887763ae86f2)
li x22, 0x8000000000000000 # initialize rs1
li x21, 0x5bbc887763ae86f2 # initialize rs2
rorw x10, x22, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 1480)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0xaaaaaaaaaaaaaaaa)
li x19, 0x8000000000000000 # initialize rs1
li x29, 0xaaaaaaaaaaaaaaaa # initialize rs2
rorw x28, x19, x29 # perform operation
RVTEST_SIGUPD(x4, x0, x28, 1488)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0x5555555555555555)
li x25, 0x8000000000000000 # initialize rs1
li x30, 0x5555555555555555 # initialize rs2
rorw x12, x25, x30 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 1496)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0xffffffff)
li x12, 0x8000000000000000 # initialize rs1
li x15, 0x00000000ffffffff # initialize rs2
rorw x22, x12, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 1504)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0xfffffffe)
li x1, 0x8000000000000000 # initialize rs1
li x7, 0x00000000fffffffe # initialize rs2
rorw x19, x1, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 1512)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0x100000000)
li x31, 0x8000000000000000 # initialize rs1
li x6, 0x0000000100000000 # initialize rs2
rorw x19, x31, x6 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 1520)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0x100000001)
li x10, 0x8000000000000000 # initialize rs1
li x3, 0x0000000100000001 # initialize rs2
rorw x31, x10, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 1528)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0x0)
li x11, 0x8000000000000001 # initialize rs1
li x22, 0x0000000000000000 # initialize rs2
rorw x26, x11, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 1536)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0x1)
li x19, 0x8000000000000001 # initialize rs1
li x16, 0x0000000000000001 # initialize rs2
rorw x31, x19, x16 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 1544)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0x2)
li x2, 0x8000000000000001 # initialize rs1
li x12, 0x0000000000000002 # initialize rs2
rorw x14, x2, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 1552)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0x8000000000000000)
li x2, 0x8000000000000001 # initialize rs1
li x6, 0x8000000000000000 # initialize rs2
rorw x23, x2, x6 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 1560)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0x8000000000000001)
li x18, 0x8000000000000001 # initialize rs1
li x25, 0x8000000000000001 # initialize rs2
rorw x3, x18, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 1568)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0x7fffffffffffffff)
li x11, 0x8000000000000001 # initialize rs1
li x5, 0x7fffffffffffffff # initialize rs2
rorw x31, x11, x5 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 1576)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0x7ffffffffffffffe)
li x15, 0x8000000000000001 # initialize rs1
li x31, 0x7ffffffffffffffe # initialize rs2
rorw x25, x15, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 1584)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0xffffffffffffffff)
li x23, 0x8000000000000001 # initialize rs1
li x5, 0xffffffffffffffff # initialize rs2
rorw x1, x23, x5 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 1592)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0xfffffffffffffffe)
li x23, 0x8000000000000001 # initialize rs1
li x7, 0xfffffffffffffffe # initialize rs2
rorw x20, x23, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 1600)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0x5bbc887763ae86f2)
li x29, 0x8000000000000001 # initialize rs1
li x8, 0x5bbc887763ae86f2 # initialize rs2
rorw x31, x29, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 1608)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0xaaaaaaaaaaaaaaaa)
li x6, 0x8000000000000001 # initialize rs1
li x12, 0xaaaaaaaaaaaaaaaa # initialize rs2
rorw x1, x6, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 1616)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0x5555555555555555)
li x27, 0x8000000000000001 # initialize rs1
li x2, 0x5555555555555555 # initialize rs2
rorw x20, x27, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 1624)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0xffffffff)
li x16, 0x8000000000000001 # initialize rs1
li x21, 0x00000000ffffffff # initialize rs2
rorw x2, x16, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 1632)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0xfffffffe)
li x19, 0x8000000000000001 # initialize rs1
li x28, 0x00000000fffffffe # initialize rs2
rorw x24, x19, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 1640)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0x100000000)
li x31, 0x8000000000000001 # initialize rs1
li x9, 0x0000000100000000 # initialize rs2
rorw x24, x31, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 1648)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0x100000001)
li x2, 0x8000000000000001 # initialize rs1
li x22, 0x0000000100000001 # initialize rs2
rorw x13, x2, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 1656)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0x0)
li x9, 0x7fffffffffffffff # initialize rs1
li x26, 0x0000000000000000 # initialize rs2
rorw x23, x9, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 1664)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0x1)
li x22, 0x7fffffffffffffff # initialize rs1
li x31, 0x0000000000000001 # initialize rs2
rorw x5, x22, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x5, 1672)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0x2)
li x1, 0x7fffffffffffffff # initialize rs1
li x5, 0x0000000000000002 # initialize rs2
rorw x24, x1, x5 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 1680)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0x8000000000000000)
li x28, 0x7fffffffffffffff # initialize rs1
li x10, 0x8000000000000000 # initialize rs2
rorw x27, x28, x10 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 1688)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0x8000000000000001)
li x25, 0x7fffffffffffffff # initialize rs1
li x22, 0x8000000000000001 # initialize rs2
rorw x3, x25, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 1696)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0x7fffffffffffffff)
li x27, 0x7fffffffffffffff # initialize rs1
li x18, 0x7fffffffffffffff # initialize rs2
rorw x3, x27, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 1704)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0x7ffffffffffffffe)
li x14, 0x7fffffffffffffff # initialize rs1
li x28, 0x7ffffffffffffffe # initialize rs2
rorw x7, x14, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 1712)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0xffffffffffffffff)
li x18, 0x7fffffffffffffff # initialize rs1
li x25, 0xffffffffffffffff # initialize rs2
rorw x20, x18, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 1720)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0xfffffffffffffffe)
li x21, 0x7fffffffffffffff # initialize rs1
li x8, 0xfffffffffffffffe # initialize rs2
rorw x18, x21, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 1728)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0x5bbc887763ae86f2)
li x18, 0x7fffffffffffffff # initialize rs1
li x10, 0x5bbc887763ae86f2 # initialize rs2
rorw x24, x18, x10 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 1736)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0xaaaaaaaaaaaaaaaa)
li x17, 0x7fffffffffffffff # initialize rs1
li x15, 0xaaaaaaaaaaaaaaaa # initialize rs2
rorw x5, x17, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x5, 1744)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0x5555555555555555)
li x26, 0x7fffffffffffffff # initialize rs1
li x24, 0x5555555555555555 # initialize rs2
rorw x23, x26, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 1752)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0xffffffff)
li x16, 0x7fffffffffffffff # initialize rs1
li x31, 0x00000000ffffffff # initialize rs2
rorw x13, x16, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 1760)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0xfffffffe)
li x28, 0x7fffffffffffffff # initialize rs1
li x24, 0x00000000fffffffe # initialize rs2
rorw x31, x28, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 1768)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0x100000000)
li x9, 0x7fffffffffffffff # initialize rs1
li x28, 0x0000000100000000 # initialize rs2
rorw x14, x9, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 1776)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0x100000001)
li x25, 0x7fffffffffffffff # initialize rs1
li x18, 0x0000000100000001 # initialize rs2
rorw x12, x25, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 1784)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0x0)
li x7, 0x7ffffffffffffffe # initialize rs1
li x18, 0x0000000000000000 # initialize rs2
rorw x15, x7, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 1792)
addi x4, x4, 1800 # increment signature pointer and reset offset

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0x1)
li x7, 0x7ffffffffffffffe # initialize rs1
li x13, 0x0000000000000001 # initialize rs2
rorw x25, x7, x13 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 0)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0x2)
li x15, 0x7ffffffffffffffe # initialize rs1
li x18, 0x0000000000000002 # initialize rs2
rorw x24, x15, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 8)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0x8000000000000000)
li x30, 0x7ffffffffffffffe # initialize rs1
li x7, 0x8000000000000000 # initialize rs2
rorw x23, x30, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 16)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0x8000000000000001)
li x3, 0x7ffffffffffffffe # initialize rs1
li x16, 0x8000000000000001 # initialize rs2
rorw x15, x3, x16 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 24)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0x7fffffffffffffff)
li x18, 0x7ffffffffffffffe # initialize rs1
li x5, 0x7fffffffffffffff # initialize rs2
rorw x24, x18, x5 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 32)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0x7ffffffffffffffe)
li x16, 0x7ffffffffffffffe # initialize rs1
li x22, 0x7ffffffffffffffe # initialize rs2
rorw x27, x16, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 40)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0xffffffffffffffff)
li x23, 0x7ffffffffffffffe # initialize rs1
li x8, 0xffffffffffffffff # initialize rs2
rorw x3, x23, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 48)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0xfffffffffffffffe)
li x1, 0x7ffffffffffffffe # initialize rs1
li x25, 0xfffffffffffffffe # initialize rs2
rorw x3, x1, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 56)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0x5bbc887763ae86f2)
li x25, 0x7ffffffffffffffe # initialize rs1
li x26, 0x5bbc887763ae86f2 # initialize rs2
rorw x24, x25, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 64)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0xaaaaaaaaaaaaaaaa)
li x13, 0x7ffffffffffffffe # initialize rs1
li x12, 0xaaaaaaaaaaaaaaaa # initialize rs2
rorw x25, x13, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 72)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0x5555555555555555)
li x16, 0x7ffffffffffffffe # initialize rs1
li x19, 0x5555555555555555 # initialize rs2
rorw x31, x16, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 80)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0xffffffff)
li x27, 0x7ffffffffffffffe # initialize rs1
li x12, 0x00000000ffffffff # initialize rs2
rorw x25, x27, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 88)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0xfffffffe)
li x8, 0x7ffffffffffffffe # initialize rs1
li x29, 0x00000000fffffffe # initialize rs2
rorw x11, x8, x29 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 96)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0x100000000)
li x19, 0x7ffffffffffffffe # initialize rs1
li x30, 0x0000000100000000 # initialize rs2
rorw x27, x19, x30 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 104)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0x100000001)
li x10, 0x7ffffffffffffffe # initialize rs1
li x24, 0x0000000100000001 # initialize rs2
rorw x15, x10, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 112)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0x0)
li x2, 0xffffffffffffffff # initialize rs1
li x12, 0x0000000000000000 # initialize rs2
rorw x25, x2, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 120)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0x1)
li x17, 0xffffffffffffffff # initialize rs1
li x12, 0x0000000000000001 # initialize rs2
rorw x2, x17, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 128)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0x2)
li x19, 0xffffffffffffffff # initialize rs1
li x7, 0x0000000000000002 # initialize rs2
rorw x5, x19, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x5, 136)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0x8000000000000000)
li x26, 0xffffffffffffffff # initialize rs1
li x19, 0x8000000000000000 # initialize rs2
rorw x24, x26, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 144)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0x8000000000000001)
li x1, 0xffffffffffffffff # initialize rs1
li x16, 0x8000000000000001 # initialize rs2
rorw x17, x1, x16 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 152)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0x7fffffffffffffff)
li x23, 0xffffffffffffffff # initialize rs1
li x11, 0x7fffffffffffffff # initialize rs2
rorw x20, x23, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 160)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0x7ffffffffffffffe)
li x29, 0xffffffffffffffff # initialize rs1
li x3, 0x7ffffffffffffffe # initialize rs2
rorw x16, x29, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 168)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0xffffffffffffffff)
li x1, 0xffffffffffffffff # initialize rs1
li x6, 0xffffffffffffffff # initialize rs2
rorw x8, x1, x6 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 176)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0xfffffffffffffffe)
li x26, 0xffffffffffffffff # initialize rs1
li x13, 0xfffffffffffffffe # initialize rs2
rorw x27, x26, x13 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 184)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0x5bbc887763ae86f2)
li x13, 0xffffffffffffffff # initialize rs1
li x29, 0x5bbc887763ae86f2 # initialize rs2
rorw x18, x13, x29 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 192)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0xaaaaaaaaaaaaaaaa)
li x20, 0xffffffffffffffff # initialize rs1
li x10, 0xaaaaaaaaaaaaaaaa # initialize rs2
rorw x30, x20, x10 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 200)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0x5555555555555555)
li x12, 0xffffffffffffffff # initialize rs1
li x15, 0x5555555555555555 # initialize rs2
rorw x9, x12, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 208)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0xffffffff)
li x20, 0xffffffffffffffff # initialize rs1
li x24, 0x00000000ffffffff # initialize rs2
rorw x11, x20, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 216)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0xfffffffe)
li x16, 0xffffffffffffffff # initialize rs1
li x19, 0x00000000fffffffe # initialize rs2
rorw x8, x16, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 224)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0x100000000)
li x16, 0xffffffffffffffff # initialize rs1
li x8, 0x0000000100000000 # initialize rs2
rorw x18, x16, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 232)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0x100000001)
li x19, 0xffffffffffffffff # initialize rs1
li x27, 0x0000000100000001 # initialize rs2
rorw x31, x19, x27 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 240)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0x0)
li x5, 0xfffffffffffffffe # initialize rs1
li x1, 0x0000000000000000 # initialize rs2
rorw x27, x5, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 248)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0x1)
li x2, 0xfffffffffffffffe # initialize rs1
li x5, 0x0000000000000001 # initialize rs2
rorw x22, x2, x5 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 256)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0x2)
li x17, 0xfffffffffffffffe # initialize rs1
li x25, 0x0000000000000002 # initialize rs2
rorw x19, x17, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 264)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0x8000000000000000)
li x12, 0xfffffffffffffffe # initialize rs1
li x5, 0x8000000000000000 # initialize rs2
rorw x13, x12, x5 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 272)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0x8000000000000001)
li x14, 0xfffffffffffffffe # initialize rs1
li x20, 0x8000000000000001 # initialize rs2
rorw x17, x14, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 280)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0x7fffffffffffffff)
li x25, 0xfffffffffffffffe # initialize rs1
li x22, 0x7fffffffffffffff # initialize rs2
rorw x12, x25, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 288)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0x7ffffffffffffffe)
li x8, 0xfffffffffffffffe # initialize rs1
li x23, 0x7ffffffffffffffe # initialize rs2
rorw x10, x8, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 296)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0xffffffffffffffff)
li x26, 0xfffffffffffffffe # initialize rs1
li x11, 0xffffffffffffffff # initialize rs2
rorw x5, x26, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x5, 304)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0xfffffffffffffffe)
li x13, 0xfffffffffffffffe # initialize rs1
li x29, 0xfffffffffffffffe # initialize rs2
rorw x8, x13, x29 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 312)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0x5bbc887763ae86f2)
li x23, 0xfffffffffffffffe # initialize rs1
li x3, 0x5bbc887763ae86f2 # initialize rs2
rorw x18, x23, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 320)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0xaaaaaaaaaaaaaaaa)
li x17, 0xfffffffffffffffe # initialize rs1
li x12, 0xaaaaaaaaaaaaaaaa # initialize rs2
rorw x23, x17, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 328)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0x5555555555555555)
li x31, 0xfffffffffffffffe # initialize rs1
li x1, 0x5555555555555555 # initialize rs2
rorw x6, x31, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x6, 336)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0xffffffff)
li x17, 0xfffffffffffffffe # initialize rs1
li x2, 0x00000000ffffffff # initialize rs2
rorw x20, x17, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 344)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0xfffffffe)
li x11, 0xfffffffffffffffe # initialize rs1
li x27, 0x00000000fffffffe # initialize rs2
rorw x29, x11, x27 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 352)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0x100000000)
li x14, 0xfffffffffffffffe # initialize rs1
li x30, 0x0000000100000000 # initialize rs2
rorw x10, x14, x30 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 360)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0x100000001)
li x31, 0xfffffffffffffffe # initialize rs1
li x8, 0x0000000100000001 # initialize rs2
rorw x13, x31, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 368)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0x0)
li x1, 0x5bbc887763ae86f2 # initialize rs1
li x5, 0x0000000000000000 # initialize rs2
rorw x27, x1, x5 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 376)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0x1)
li x27, 0x5bbc887763ae86f2 # initialize rs1
li x30, 0x0000000000000001 # initialize rs2
rorw x28, x27, x30 # perform operation
RVTEST_SIGUPD(x4, x0, x28, 384)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0x2)
li x25, 0x5bbc887763ae86f2 # initialize rs1
li x24, 0x0000000000000002 # initialize rs2
rorw x22, x25, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 392)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0x8000000000000000)
li x29, 0x5bbc887763ae86f2 # initialize rs1
li x11, 0x8000000000000000 # initialize rs2
rorw x6, x29, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x6, 400)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0x8000000000000001)
li x26, 0x5bbc887763ae86f2 # initialize rs1
li x25, 0x8000000000000001 # initialize rs2
rorw x1, x26, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 408)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0x7fffffffffffffff)
li x9, 0x5bbc887763ae86f2 # initialize rs1
li x29, 0x7fffffffffffffff # initialize rs2
rorw x5, x9, x29 # perform operation
RVTEST_SIGUPD(x4, x0, x5, 416)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0x7ffffffffffffffe)
li x6, 0x5bbc887763ae86f2 # initialize rs1
li x15, 0x7ffffffffffffffe # initialize rs2
rorw x9, x6, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 424)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0xffffffffffffffff)
li x27, 0x5bbc887763ae86f2 # initialize rs1
li x29, 0xffffffffffffffff # initialize rs2
rorw x11, x27, x29 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 432)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0xfffffffffffffffe)
li x1, 0x5bbc887763ae86f2 # initialize rs1
li x13, 0xfffffffffffffffe # initialize rs2
rorw x9, x1, x13 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 440)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0x5bbc887763ae86f2)
li x21, 0x5bbc887763ae86f2 # initialize rs1
li x7, 0x5bbc887763ae86f2 # initialize rs2
rorw x1, x21, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 448)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0xaaaaaaaaaaaaaaaa)
li x6, 0x5bbc887763ae86f2 # initialize rs1
li x14, 0xaaaaaaaaaaaaaaaa # initialize rs2
rorw x12, x6, x14 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 456)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0x5555555555555555)
li x5, 0x5bbc887763ae86f2 # initialize rs1
li x21, 0x5555555555555555 # initialize rs2
rorw x19, x5, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 464)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0xffffffff)
li x20, 0x5bbc887763ae86f2 # initialize rs1
li x8, 0x00000000ffffffff # initialize rs2
rorw x18, x20, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 472)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0xfffffffe)
li x23, 0x5bbc887763ae86f2 # initialize rs1
li x9, 0x00000000fffffffe # initialize rs2
rorw x25, x23, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 480)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0x100000000)
li x5, 0x5bbc887763ae86f2 # initialize rs1
li x15, 0x0000000100000000 # initialize rs2
rorw x13, x5, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 488)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0x100000001)
li x6, 0x5bbc887763ae86f2 # initialize rs1
li x21, 0x0000000100000001 # initialize rs2
rorw x22, x6, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 496)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0x0)
li x5, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x3, 0x0000000000000000 # initialize rs2
rorw x9, x5, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 504)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0x1)
li x6, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x25, 0x0000000000000001 # initialize rs2
rorw x21, x6, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 512)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0x2)
li x7, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x23, 0x0000000000000002 # initialize rs2
rorw x18, x7, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 520)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0x8000000000000000)
li x13, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x14, 0x8000000000000000 # initialize rs2
rorw x1, x13, x14 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 528)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0x8000000000000001)
li x29, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x23, 0x8000000000000001 # initialize rs2
rorw x27, x29, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 536)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0x7fffffffffffffff)
li x17, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x23, 0x7fffffffffffffff # initialize rs2
rorw x13, x17, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 544)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0x7ffffffffffffffe)
li x12, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x29, 0x7ffffffffffffffe # initialize rs2
rorw x1, x12, x29 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 552)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0xffffffffffffffff)
li x16, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x19, 0xffffffffffffffff # initialize rs2
rorw x27, x16, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 560)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0xfffffffffffffffe)
li x31, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x30, 0xfffffffffffffffe # initialize rs2
rorw x22, x31, x30 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 568)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0x5bbc887763ae86f2)
li x3, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x29, 0x5bbc887763ae86f2 # initialize rs2
rorw x27, x3, x29 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 576)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0xaaaaaaaaaaaaaaaa)
li x3, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x17, 0xaaaaaaaaaaaaaaaa # initialize rs2
rorw x18, x3, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 584)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0x5555555555555555)
li x20, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x13, 0x5555555555555555 # initialize rs2
rorw x3, x20, x13 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 592)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0xffffffff)
li x29, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x18, 0x00000000ffffffff # initialize rs2
rorw x17, x29, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 600)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0xfffffffe)
li x22, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x30, 0x00000000fffffffe # initialize rs2
rorw x17, x22, x30 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 608)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0x100000000)
li x31, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x23, 0x0000000100000000 # initialize rs2
rorw x3, x31, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 616)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0x100000001)
li x11, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x2, 0x0000000100000001 # initialize rs2
rorw x23, x11, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 624)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0x0)
li x19, 0x5555555555555555 # initialize rs1
li x10, 0x0000000000000000 # initialize rs2
rorw x6, x19, x10 # perform operation
RVTEST_SIGUPD(x4, x0, x6, 632)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0x1)
li x19, 0x5555555555555555 # initialize rs1
li x23, 0x0000000000000001 # initialize rs2
rorw x22, x19, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 640)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0x2)
li x29, 0x5555555555555555 # initialize rs1
li x30, 0x0000000000000002 # initialize rs2
rorw x22, x29, x30 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 648)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0x8000000000000000)
li x27, 0x5555555555555555 # initialize rs1
li x25, 0x8000000000000000 # initialize rs2
rorw x9, x27, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 656)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0x8000000000000001)
li x15, 0x5555555555555555 # initialize rs1
li x7, 0x8000000000000001 # initialize rs2
rorw x19, x15, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 664)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0x7fffffffffffffff)
li x11, 0x5555555555555555 # initialize rs1
li x16, 0x7fffffffffffffff # initialize rs2
rorw x30, x11, x16 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 672)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0x7ffffffffffffffe)
li x29, 0x5555555555555555 # initialize rs1
li x25, 0x7ffffffffffffffe # initialize rs2
rorw x30, x29, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 680)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0xffffffffffffffff)
li x14, 0x5555555555555555 # initialize rs1
li x5, 0xffffffffffffffff # initialize rs2
rorw x28, x14, x5 # perform operation
RVTEST_SIGUPD(x4, x0, x28, 688)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0xfffffffffffffffe)
li x28, 0x5555555555555555 # initialize rs1
li x5, 0xfffffffffffffffe # initialize rs2
rorw x8, x28, x5 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 696)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0x5bbc887763ae86f2)
li x17, 0x5555555555555555 # initialize rs1
li x27, 0x5bbc887763ae86f2 # initialize rs2
rorw x3, x17, x27 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 704)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0xaaaaaaaaaaaaaaaa)
li x11, 0x5555555555555555 # initialize rs1
li x30, 0xaaaaaaaaaaaaaaaa # initialize rs2
rorw x21, x11, x30 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 712)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0x5555555555555555)
li x28, 0x5555555555555555 # initialize rs1
li x26, 0x5555555555555555 # initialize rs2
rorw x19, x28, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 720)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0xffffffff)
li x8, 0x5555555555555555 # initialize rs1
li x28, 0x00000000ffffffff # initialize rs2
rorw x10, x8, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 728)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0xfffffffe)
li x9, 0x5555555555555555 # initialize rs1
li x28, 0x00000000fffffffe # initialize rs2
rorw x1, x9, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 736)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0x100000000)
li x29, 0x5555555555555555 # initialize rs1
li x16, 0x0000000100000000 # initialize rs2
rorw x21, x29, x16 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 744)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0x100000001)
li x29, 0x5555555555555555 # initialize rs1
li x22, 0x0000000100000001 # initialize rs2
rorw x6, x29, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x6, 752)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0x0)
li x20, 0x00000000ffffffff # initialize rs1
li x18, 0x0000000000000000 # initialize rs2
rorw x15, x20, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 760)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0x1)
li x17, 0x00000000ffffffff # initialize rs1
li x3, 0x0000000000000001 # initialize rs2
rorw x28, x17, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x28, 768)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0x2)
li x6, 0x00000000ffffffff # initialize rs1
li x19, 0x0000000000000002 # initialize rs2
rorw x1, x6, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 776)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0x8000000000000000)
li x18, 0x00000000ffffffff # initialize rs1
li x26, 0x8000000000000000 # initialize rs2
rorw x6, x18, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x6, 784)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0x8000000000000001)
li x12, 0x00000000ffffffff # initialize rs1
li x24, 0x8000000000000001 # initialize rs2
rorw x5, x12, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x5, 792)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0x7fffffffffffffff)
li x5, 0x00000000ffffffff # initialize rs1
li x10, 0x7fffffffffffffff # initialize rs2
rorw x3, x5, x10 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 800)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0x7ffffffffffffffe)
li x21, 0x00000000ffffffff # initialize rs1
li x27, 0x7ffffffffffffffe # initialize rs2
rorw x5, x21, x27 # perform operation
RVTEST_SIGUPD(x4, x0, x5, 808)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0xffffffffffffffff)
li x17, 0x00000000ffffffff # initialize rs1
li x5, 0xffffffffffffffff # initialize rs2
rorw x6, x17, x5 # perform operation
RVTEST_SIGUPD(x4, x0, x6, 816)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0xfffffffffffffffe)
li x8, 0x00000000ffffffff # initialize rs1
li x27, 0xfffffffffffffffe # initialize rs2
rorw x31, x8, x27 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 824)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0x5bbc887763ae86f2)
li x1, 0x00000000ffffffff # initialize rs1
li x8, 0x5bbc887763ae86f2 # initialize rs2
rorw x31, x1, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 832)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0xaaaaaaaaaaaaaaaa)
li x9, 0x00000000ffffffff # initialize rs1
li x28, 0xaaaaaaaaaaaaaaaa # initialize rs2
rorw x13, x9, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 840)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0x5555555555555555)
li x31, 0x00000000ffffffff # initialize rs1
li x29, 0x5555555555555555 # initialize rs2
rorw x6, x31, x29 # perform operation
RVTEST_SIGUPD(x4, x0, x6, 848)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0xffffffff)
li x10, 0x00000000ffffffff # initialize rs1
li x30, 0x00000000ffffffff # initialize rs2
rorw x22, x10, x30 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 856)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0xfffffffe)
li x12, 0x00000000ffffffff # initialize rs1
li x1, 0x00000000fffffffe # initialize rs2
rorw x26, x12, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 864)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0x100000000)
li x10, 0x00000000ffffffff # initialize rs1
li x7, 0x0000000100000000 # initialize rs2
rorw x29, x10, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 872)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0x100000001)
li x16, 0x00000000ffffffff # initialize rs1
li x2, 0x0000000100000001 # initialize rs2
rorw x31, x16, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 880)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0x0)
li x16, 0x00000000fffffffe # initialize rs1
li x9, 0x0000000000000000 # initialize rs2
rorw x22, x16, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 888)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0x1)
li x16, 0x00000000fffffffe # initialize rs1
li x31, 0x0000000000000001 # initialize rs2
rorw x18, x16, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 896)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0x2)
li x28, 0x00000000fffffffe # initialize rs1
li x26, 0x0000000000000002 # initialize rs2
rorw x6, x28, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x6, 904)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0x8000000000000000)
li x8, 0x00000000fffffffe # initialize rs1
li x18, 0x8000000000000000 # initialize rs2
rorw x11, x8, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 912)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0x8000000000000001)
li x22, 0x00000000fffffffe # initialize rs1
li x16, 0x8000000000000001 # initialize rs2
rorw x3, x22, x16 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 920)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0x7fffffffffffffff)
li x27, 0x00000000fffffffe # initialize rs1
li x6, 0x7fffffffffffffff # initialize rs2
rorw x5, x27, x6 # perform operation
RVTEST_SIGUPD(x4, x0, x5, 928)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0x7ffffffffffffffe)
li x15, 0x00000000fffffffe # initialize rs1
li x30, 0x7ffffffffffffffe # initialize rs2
rorw x5, x15, x30 # perform operation
RVTEST_SIGUPD(x4, x0, x5, 936)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0xffffffffffffffff)
li x17, 0x00000000fffffffe # initialize rs1
li x25, 0xffffffffffffffff # initialize rs2
rorw x22, x17, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 944)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0xfffffffffffffffe)
li x14, 0x00000000fffffffe # initialize rs1
li x11, 0xfffffffffffffffe # initialize rs2
rorw x3, x14, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 952)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0x5bbc887763ae86f2)
li x23, 0x00000000fffffffe # initialize rs1
li x20, 0x5bbc887763ae86f2 # initialize rs2
rorw x10, x23, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 960)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0xaaaaaaaaaaaaaaaa)
li x31, 0x00000000fffffffe # initialize rs1
li x22, 0xaaaaaaaaaaaaaaaa # initialize rs2
rorw x23, x31, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 968)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0x5555555555555555)
li x25, 0x00000000fffffffe # initialize rs1
li x8, 0x5555555555555555 # initialize rs2
rorw x31, x25, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 976)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0xffffffff)
li x13, 0x00000000fffffffe # initialize rs1
li x12, 0x00000000ffffffff # initialize rs2
rorw x24, x13, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 984)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0xfffffffe)
li x10, 0x00000000fffffffe # initialize rs1
li x1, 0x00000000fffffffe # initialize rs2
rorw x22, x10, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 992)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0x100000000)
li x22, 0x00000000fffffffe # initialize rs1
li x25, 0x0000000100000000 # initialize rs2
rorw x21, x22, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 1000)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0x100000001)
li x12, 0x00000000fffffffe # initialize rs1
li x18, 0x0000000100000001 # initialize rs2
rorw x15, x12, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 1008)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0x0)
li x25, 0x0000000100000000 # initialize rs1
li x14, 0x0000000000000000 # initialize rs2
rorw x22, x25, x14 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 1016)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0x1)
li x23, 0x0000000100000000 # initialize rs1
li x1, 0x0000000000000001 # initialize rs2
rorw x29, x23, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 1024)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0x2)
li x23, 0x0000000100000000 # initialize rs1
li x21, 0x0000000000000002 # initialize rs2
rorw x16, x23, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 1032)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0x8000000000000000)
li x20, 0x0000000100000000 # initialize rs1
li x11, 0x8000000000000000 # initialize rs2
rorw x10, x20, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 1040)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0x8000000000000001)
li x22, 0x0000000100000000 # initialize rs1
li x12, 0x8000000000000001 # initialize rs2
rorw x13, x22, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 1048)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0x7fffffffffffffff)
li x14, 0x0000000100000000 # initialize rs1
li x11, 0x7fffffffffffffff # initialize rs2
rorw x6, x14, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x6, 1056)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0x7ffffffffffffffe)
li x12, 0x0000000100000000 # initialize rs1
li x15, 0x7ffffffffffffffe # initialize rs2
rorw x19, x12, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 1064)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0xffffffffffffffff)
li x30, 0x0000000100000000 # initialize rs1
li x20, 0xffffffffffffffff # initialize rs2
rorw x19, x30, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 1072)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0xfffffffffffffffe)
li x14, 0x0000000100000000 # initialize rs1
li x21, 0xfffffffffffffffe # initialize rs2
rorw x13, x14, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 1080)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0x5bbc887763ae86f2)
li x28, 0x0000000100000000 # initialize rs1
li x30, 0x5bbc887763ae86f2 # initialize rs2
rorw x17, x28, x30 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 1088)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0xaaaaaaaaaaaaaaaa)
li x3, 0x0000000100000000 # initialize rs1
li x10, 0xaaaaaaaaaaaaaaaa # initialize rs2
rorw x24, x3, x10 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 1096)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0x5555555555555555)
li x18, 0x0000000100000000 # initialize rs1
li x22, 0x5555555555555555 # initialize rs2
rorw x20, x18, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 1104)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0xffffffff)
li x27, 0x0000000100000000 # initialize rs1
li x5, 0x00000000ffffffff # initialize rs2
rorw x19, x27, x5 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 1112)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0xfffffffe)
li x24, 0x0000000100000000 # initialize rs1
li x18, 0x00000000fffffffe # initialize rs2
rorw x13, x24, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 1120)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0x100000000)
li x20, 0x0000000100000000 # initialize rs1
li x15, 0x0000000100000000 # initialize rs2
rorw x3, x20, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 1128)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0x100000001)
li x30, 0x0000000100000000 # initialize rs1
li x29, 0x0000000100000001 # initialize rs2
rorw x16, x30, x29 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 1136)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0x0)
li x10, 0x0000000100000001 # initialize rs1
li x13, 0x0000000000000000 # initialize rs2
rorw x8, x10, x13 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 1144)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0x1)
li x22, 0x0000000100000001 # initialize rs1
li x30, 0x0000000000000001 # initialize rs2
rorw x31, x22, x30 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 1152)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0x2)
li x21, 0x0000000100000001 # initialize rs1
li x13, 0x0000000000000002 # initialize rs2
rorw x30, x21, x13 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 1160)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0x8000000000000000)
li x17, 0x0000000100000001 # initialize rs1
li x12, 0x8000000000000000 # initialize rs2
rorw x25, x17, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 1168)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0x8000000000000001)
li x24, 0x0000000100000001 # initialize rs1
li x22, 0x8000000000000001 # initialize rs2
rorw x2, x24, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 1176)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0x7fffffffffffffff)
li x20, 0x0000000100000001 # initialize rs1
li x18, 0x7fffffffffffffff # initialize rs2
rorw x13, x20, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 1184)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0x7ffffffffffffffe)
li x13, 0x0000000100000001 # initialize rs1
li x2, 0x7ffffffffffffffe # initialize rs2
rorw x3, x13, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 1192)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0xffffffffffffffff)
li x23, 0x0000000100000001 # initialize rs1
li x2, 0xffffffffffffffff # initialize rs2
rorw x21, x23, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 1200)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0xfffffffffffffffe)
li x12, 0x0000000100000001 # initialize rs1
li x5, 0xfffffffffffffffe # initialize rs2
rorw x8, x12, x5 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 1208)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0x5bbc887763ae86f2)
li x8, 0x0000000100000001 # initialize rs1
li x3, 0x5bbc887763ae86f2 # initialize rs2
rorw x12, x8, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 1216)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0xaaaaaaaaaaaaaaaa)
li x6, 0x0000000100000001 # initialize rs1
li x19, 0xaaaaaaaaaaaaaaaa # initialize rs2
rorw x16, x6, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 1224)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0x5555555555555555)
li x31, 0x0000000100000001 # initialize rs1
li x29, 0x5555555555555555 # initialize rs2
rorw x20, x31, x29 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 1232)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0xffffffff)
li x6, 0x0000000100000001 # initialize rs1
li x13, 0x00000000ffffffff # initialize rs2
rorw x29, x6, x13 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 1240)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0xfffffffe)
li x28, 0x0000000100000001 # initialize rs1
li x26, 0x00000000fffffffe # initialize rs2
rorw x24, x28, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 1248)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0x100000000)
li x29, 0x0000000100000001 # initialize rs1
li x16, 0x0000000100000000 # initialize rs2
rorw x9, x29, x16 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 1256)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0x100000001)
li x24, 0x0000000100000001 # initialize rs1
li x20, 0x0000000100000001 # initialize rs2
rorw x11, x24, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 1264)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x0)
li x0, 0xa1b945882ba384bf # initialize rs1
li x0, 0x7318689a6b658e9f # initialize rs2
rorw x16, x0, x0 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 1272)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x1)
li x1, 0x94547b0712a9cbcd # initialize rs1
li x1, 0xa113d8ef7cf9560b # initialize rs2
rorw x29, x1, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 1280)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x2)
li x2, 0xc2164cacbae1ada7 # initialize rs1
li x2, 0xb622c87808da9d79 # initialize rs2
rorw x5, x2, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x5, 1288)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x3)
li x3, 0x490d64ba976c9c4d # initialize rs1
li x3, 0x02680514d4dd7dda # initialize rs2
rorw x20, x3, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 1296)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x4)
mv x5, x4 # switch signature pointer register to avoid conflict with test
li x4, 0xe482d718d5d0650b # initialize rs1
li x4, 0x36389920b5dfd78e # initialize rs2
rorw x27, x4, x4 # perform operation
RVTEST_SIGUPD(x5, x0, x27, 1304)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x5)
mv x6, x5 # switch signature pointer register to avoid conflict with test
li x5, 0x3bc72c5315367377 # initialize rs1
li x5, 0xe6b0db35e88c7685 # initialize rs2
rorw x12, x5, x5 # perform operation
RVTEST_SIGUPD(x6, x0, x12, 1312)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x6)
mv x7, x6 # switch signature pointer register to avoid conflict with test
li x6, 0x462261b9db69cda6 # initialize rs1
li x6, 0xa1de8b34d801461c # initialize rs2
rorw x8, x6, x6 # perform operation
RVTEST_SIGUPD(x7, x0, x8, 1320)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x7)
mv x4, x7 # switch signature pointer register to avoid conflict with test
li x7, 0xa9c01e2c38278beb # initialize rs1
li x7, 0x480ac32b46889a59 # initialize rs2
rorw x6, x7, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x6, 1328)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x8)
li x8, 0x059e11f9b3494dd4 # initialize rs1
li x8, 0x5fc7c5639dc63922 # initialize rs2
rorw x14, x8, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 1336)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x9)
li x9, 0x8caf8800eda711bb # initialize rs1
li x9, 0xdcda3901f2672cdb # initialize rs2
rorw x5, x9, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x5, 1344)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x10)
li x10, 0x5b24d6320a6d1100 # initialize rs1
li x10, 0xb04c6eae2b6e299c # initialize rs2
rorw x29, x10, x10 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 1352)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x11)
li x11, 0xa6a87de9bb68059a # initialize rs1
li x11, 0x4e63dd5c07f5d17c # initialize rs2
rorw x7, x11, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 1360)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x12)
li x12, 0xcb03148d583c19c2 # initialize rs1
li x12, 0x63a88e3ca5c162d3 # initialize rs2
rorw x5, x12, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x5, 1368)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x13)
li x13, 0xc4fa4a3b851591a9 # initialize rs1
li x13, 0x9b3317179bb69137 # initialize rs2
rorw x2, x13, x13 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 1376)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x14)
li x14, 0x39e171674c22d36d # initialize rs1
li x14, 0x5c3365db00d626e6 # initialize rs2
rorw x11, x14, x14 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 1384)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x15)
li x15, 0x5cbf38a9a4edd16a # initialize rs1
li x15, 0xc5625186eacef768 # initialize rs2
rorw x18, x15, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 1392)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x16)
li x16, 0x29e998d16b3ec536 # initialize rs1
li x16, 0x050b3b3c8448fe96 # initialize rs2
rorw x26, x16, x16 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 1400)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x17)
li x17, 0xc28c1b601aa6c605 # initialize rs1
li x17, 0xadb02b576e06ac0a # initialize rs2
rorw x8, x17, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 1408)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x18)
li x18, 0xc80f05af061d95b9 # initialize rs1
li x18, 0x61490ea94388b0ce # initialize rs2
rorw x17, x18, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 1416)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x19)
li x19, 0x50da4b6ddceb036a # initialize rs1
li x19, 0x393829ba18bea9a8 # initialize rs2
rorw x28, x19, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x28, 1424)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x20)
li x20, 0xce683b3c92daafb1 # initialize rs1
li x20, 0x8cab08e735380cfd # initialize rs2
rorw x9, x20, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 1432)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x21)
li x21, 0x463a43d46ad5252d # initialize rs1
li x21, 0xa160fd35691d01d5 # initialize rs2
rorw x26, x21, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 1440)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x22)
li x22, 0x21a58d1d8e97e2de # initialize rs1
li x22, 0x1d5529ed6bad16d7 # initialize rs2
rorw x3, x22, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 1448)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x23)
li x23, 0x55d4fa233c027eaa # initialize rs1
li x23, 0x82716e2560c964e2 # initialize rs2
rorw x3, x23, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 1456)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x24)
li x24, 0x68732cae0512f333 # initialize rs1
li x24, 0xd0a8301b8fa8cd4c # initialize rs2
rorw x6, x24, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x6, 1464)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x25)
li x25, 0x24edf7ac539688ec # initialize rs1
li x25, 0xe8e1c958e066ebb0 # initialize rs2
rorw x26, x25, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 1472)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x26)
li x26, 0x02fde5d7ee744dc7 # initialize rs1
li x26, 0xb9e2c0757131bb18 # initialize rs2
rorw x22, x26, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 1480)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x27)
li x27, 0x686efe330f091b76 # initialize rs1
li x27, 0x5e83926981c429d4 # initialize rs2
rorw x10, x27, x27 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 1488)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x28)
li x28, 0x0f235307598486e2 # initialize rs1
li x28, 0x4e1cafe8ca9ade2d # initialize rs2
rorw x26, x28, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 1496)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x29)
li x29, 0x767717d90fc737b5 # initialize rs1
li x29, 0x0fa1e93478bbbf23 # initialize rs2
rorw x9, x29, x29 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 1504)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x30)
li x30, 0x67606b70c53b6f48 # initialize rs1
li x30, 0x7611b32271f0c51a # initialize rs2
rorw x7, x30, x30 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 1512)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x31)
li x31, 0x1e42f1900be6b461 # initialize rs1
li x31, 0xb9b40985679a2f6d # initialize rs2
rorw x6, x31, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x6, 1520)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x0)
li x0, 0x1573bfc7a5008799 # initialize rs1
li x27, 0xb12c3fd97a195a60 # initialize rs2
rorw x0, x0, x27 # perform operation
RVTEST_SIGUPD(x4, x0, x0, 1528)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x1)
li x1, 0x0fa4569d94eaf709 # initialize rs1
li x22, 0x8cd73b77f9f226fb # initialize rs2
rorw x1, x1, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 1536)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x2)
li x2, 0x478fb29e75a117a2 # initialize rs1
li x10, 0x927951eb1a77bddd # initialize rs2
rorw x2, x2, x10 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 1544)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x3)
li x3, 0x2583dca2979ece78 # initialize rs1
li x2, 0xd5e14f14f3cda887 # initialize rs2
rorw x3, x3, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 1552)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x4)
mv x5, x4 # switch signature pointer register to avoid conflict with test
li x4, 0x885dd45a101f64fc # initialize rs1
li x29, 0x5f1b6006ed050c12 # initialize rs2
rorw x4, x4, x29 # perform operation
RVTEST_SIGUPD(x5, x0, x4, 1560)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x5)
mv x6, x5 # switch signature pointer register to avoid conflict with test
li x5, 0x170bbcf343bb0dc2 # initialize rs1
li x1, 0x1016dfc020c7a073 # initialize rs2
rorw x5, x5, x1 # perform operation
RVTEST_SIGUPD(x6, x0, x5, 1568)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x6)
mv x7, x6 # switch signature pointer register to avoid conflict with test
li x6, 0x03f0cbed9313f70f # initialize rs1
li x17, 0x74b59b5397c8bd40 # initialize rs2
rorw x6, x6, x17 # perform operation
RVTEST_SIGUPD(x7, x0, x6, 1576)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x7)
mv x4, x7 # switch signature pointer register to avoid conflict with test
li x7, 0x1a823d8a51462c4c # initialize rs1
li x24, 0x4656db209eea6686 # initialize rs2
rorw x7, x7, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 1584)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x8)
li x8, 0x99f6e3b0c1487678 # initialize rs1
li x28, 0x30c66ca2a28ee741 # initialize rs2
rorw x8, x8, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 1592)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x9)
li x9, 0x6a805e537e96957b # initialize rs1
li x8, 0xf3e7e8df07b6b435 # initialize rs2
rorw x9, x9, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 1600)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x10)
li x10, 0xf5c38d3b3179bf2e # initialize rs1
li x10, 0x995febbe89c66c6c # initialize rs2
rorw x10, x10, x10 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 1608)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x11)
li x11, 0x645d9c7f86f545fe # initialize rs1
li x20, 0x4f064cf9ca7df57e # initialize rs2
rorw x11, x11, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 1616)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x12)
li x12, 0x877731c3dae2618c # initialize rs1
li x2, 0xa0cdf12ce216c872 # initialize rs2
rorw x12, x12, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 1624)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x13)
li x13, 0xa4b2dfb758b4d86c # initialize rs1
li x31, 0x84f2a578ba805aaa # initialize rs2
rorw x13, x13, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 1632)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x14)
li x14, 0xa5bde8f7028fa30a # initialize rs1
li x3, 0x8e082cb7766c4891 # initialize rs2
rorw x14, x14, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 1640)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x15)
li x15, 0x4f699f8e82bfb5d5 # initialize rs1
li x20, 0xa3b15e2eedb6d888 # initialize rs2
rorw x15, x15, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 1648)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x16)
li x16, 0x9a3c3a603a366f48 # initialize rs1
li x5, 0xfd03411d3321c256 # initialize rs2
rorw x16, x16, x5 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 1656)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x17)
li x17, 0x2d78d9f21d11c23b # initialize rs1
li x20, 0x365faf76b185be4c # initialize rs2
rorw x17, x17, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 1664)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x18)
li x18, 0x8a3c25bbd469d1aa # initialize rs1
li x25, 0x7ef1317d0021c78a # initialize rs2
rorw x18, x18, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 1672)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x19)
li x19, 0x05e3b284da2c4659 # initialize rs1
li x20, 0xcf12e7e054e79e8c # initialize rs2
rorw x19, x19, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 1680)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x20)
li x20, 0xca5c89e5f29970a9 # initialize rs1
li x3, 0x70caece40624284b # initialize rs2
rorw x20, x20, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 1688)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x21)
li x21, 0x8cc68c2332c0d198 # initialize rs1
li x28, 0x93b043abbaf3360a # initialize rs2
rorw x21, x21, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 1696)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x22)
li x22, 0xd35425b641ec8380 # initialize rs1
li x19, 0xcfb99bf5fae9a0d3 # initialize rs2
rorw x22, x22, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 1704)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x23)
li x23, 0xacccbe65b8f45da8 # initialize rs1
li x18, 0x8ab35c36d8a34d69 # initialize rs2
rorw x23, x23, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 1712)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x24)
li x24, 0x7b25fd6f98b96e3f # initialize rs1
li x10, 0xb53b7d81a5adb824 # initialize rs2
rorw x24, x24, x10 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 1720)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x25)
li x25, 0xb4633cee9abed9f6 # initialize rs1
li x18, 0x61478797691f6204 # initialize rs2
rorw x25, x25, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 1728)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x26)
li x26, 0x3da9c339f0dd6122 # initialize rs1
li x27, 0xa82bf0c78bff67b4 # initialize rs2
rorw x26, x26, x27 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 1736)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x27)
li x27, 0xeefa54c60313130b # initialize rs1
li x1, 0x007c15514413ded8 # initialize rs2
rorw x27, x27, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 1744)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x28)
li x28, 0xbd09cc7f09b4867a # initialize rs1
li x6, 0x63b21235396a5a9a # initialize rs2
rorw x28, x28, x6 # perform operation
RVTEST_SIGUPD(x4, x0, x28, 1752)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x29)
li x29, 0x406860fda01e2324 # initialize rs1
li x19, 0xf6f08dd6f2bf76fd # initialize rs2
rorw x29, x29, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 1760)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x30)
li x30, 0x78a72755cf1910e2 # initialize rs1
li x19, 0x3b68cc096002ce39 # initialize rs2
rorw x30, x30, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 1768)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x31)
li x31, 0x3dad1ad0f9011f0f # initialize rs1
li x29, 0x54ceb1da4d8af806 # initialize rs2
rorw x31, x31, x29 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 1776)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x0)
li x13, 0xeeb7fedaa6fb53ff # initialize rs1
li x0, 0x7846e889b52639e9 # initialize rs2
rorw x0, x13, x0 # perform operation
RVTEST_SIGUPD(x4, x0, x0, 1784)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x1)
li x8, 0x1a2162b6b9afa649 # initialize rs1
li x1, 0xa9033bb15ae0c8d4 # initialize rs2
rorw x1, x8, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 1792)
addi x4, x4, 1800 # increment signature pointer and reset offset

# Testcase cmp_rd_rs2 (Test rd = rs2 = x2)
li x30, 0x2c6c99758a6bfd37 # initialize rs1
li x2, 0xe785e5df2321318d # initialize rs2
rorw x2, x30, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 0)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x3)
li x26, 0x64f265c89c76da1c # initialize rs1
li x3, 0x166890dde5cebd54 # initialize rs2
rorw x3, x26, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 8)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x4)
mv x5, x4 # switch signature pointer register to avoid conflict with test
li x19, 0x5894ece82a8253a3 # initialize rs1
li x4, 0xf3317e511d709254 # initialize rs2
rorw x4, x19, x4 # perform operation
RVTEST_SIGUPD(x5, x0, x4, 16)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x5)
mv x6, x5 # switch signature pointer register to avoid conflict with test
li x22, 0xc45dc7e9ea4f9d10 # initialize rs1
li x5, 0xf758c2ce2df77247 # initialize rs2
rorw x5, x22, x5 # perform operation
RVTEST_SIGUPD(x6, x0, x5, 24)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x6)
mv x7, x6 # switch signature pointer register to avoid conflict with test
li x19, 0x874fee83b5a4f022 # initialize rs1
li x6, 0xb01c921886dd72ed # initialize rs2
rorw x6, x19, x6 # perform operation
RVTEST_SIGUPD(x7, x0, x6, 32)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x7)
mv x4, x7 # switch signature pointer register to avoid conflict with test
li x1, 0x1c15b044730f3e88 # initialize rs1
li x7, 0x1e55129c7937d4a9 # initialize rs2
rorw x7, x1, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 40)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x8)
li x5, 0xf63d232e905847c3 # initialize rs1
li x8, 0x46a8e6ef246421e0 # initialize rs2
rorw x8, x5, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 48)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x9)
li x10, 0x1000d977e57c494c # initialize rs1
li x9, 0x8f7659aecf52c8d3 # initialize rs2
rorw x9, x10, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 56)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x10)
li x2, 0xe15aac1684b1a19c # initialize rs1
li x10, 0x5247c02382ead99d # initialize rs2
rorw x10, x2, x10 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 64)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x11)
li x3, 0xf60360ab9aaf2e51 # initialize rs1
li x11, 0xeea3f91ec82a5a31 # initialize rs2
rorw x11, x3, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 72)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x12)
li x24, 0x6994909d7d17b37c # initialize rs1
li x12, 0xcaf26e4864905ae0 # initialize rs2
rorw x12, x24, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 80)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x13)
li x13, 0x3f68bf936a7a009f # initialize rs1
li x13, 0xe5abe82e95d8e9fe # initialize rs2
rorw x13, x13, x13 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 88)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x14)
li x19, 0xf9ea881e28118a3e # initialize rs1
li x14, 0x7a63e7b7e5e6c59d # initialize rs2
rorw x14, x19, x14 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 96)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x15)
li x11, 0xb073b451d262b905 # initialize rs1
li x15, 0x7552e5bbbcc39b63 # initialize rs2
rorw x15, x11, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 104)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x16)
li x21, 0x15cf7cfac7684d5b # initialize rs1
li x16, 0xc085a7040e9248f7 # initialize rs2
rorw x16, x21, x16 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 112)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x17)
li x15, 0xa41a3af003364906 # initialize rs1
li x17, 0x1bab0173d16614ca # initialize rs2
rorw x17, x15, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 120)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x18)
li x15, 0x24e9ef99c81bf1e5 # initialize rs1
li x18, 0x46a740ccf03b3ecc # initialize rs2
rorw x18, x15, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 128)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x19)
li x30, 0xa4ad3c864919ab0f # initialize rs1
li x19, 0x6109616e2d11e72b # initialize rs2
rorw x19, x30, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 136)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x20)
li x5, 0x6699bbf34a0af563 # initialize rs1
li x20, 0x2f79fe372aad3ce8 # initialize rs2
rorw x20, x5, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 144)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x21)
li x26, 0x45e5f41e7acd3781 # initialize rs1
li x21, 0x36714ed71aca0201 # initialize rs2
rorw x21, x26, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 152)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x22)
li x31, 0x30e0466a3cf06686 # initialize rs1
li x22, 0x433ec32ef7f321e7 # initialize rs2
rorw x22, x31, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 160)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x23)
li x6, 0xf84b15d839c43e5a # initialize rs1
li x23, 0xf579b8ea7e42df7b # initialize rs2
rorw x23, x6, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 168)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x24)
li x29, 0x9ed912a0da043048 # initialize rs1
li x24, 0xffe6eb1fde69863a # initialize rs2
rorw x24, x29, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 176)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x25)
li x31, 0x2acac3c9e805ef9c # initialize rs1
li x25, 0x46442bc2a5d7ca6c # initialize rs2
rorw x25, x31, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 184)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x26)
li x15, 0xd1ca633a86834145 # initialize rs1
li x26, 0xeff8b521abdcf230 # initialize rs2
rorw x26, x15, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 192)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x27)
li x19, 0xc6dcd251337cdf24 # initialize rs1
li x27, 0x0a03d7cdab09efea # initialize rs2
rorw x27, x19, x27 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 200)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x28)
li x15, 0x146bb79dc70bff6f # initialize rs1
li x28, 0x98e8a0af3cb71439 # initialize rs2
rorw x28, x15, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x28, 208)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x29)
li x22, 0x7812259764a66c3c # initialize rs1
li x29, 0x636763e4c6d0ba94 # initialize rs2
rorw x29, x22, x29 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 216)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x30)
li x14, 0xdcbb43c53e19a9a1 # initialize rs1
li x30, 0x3203f3fbad868e8f # initialize rs2
rorw x30, x14, x30 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 224)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x31)
li x28, 0xb1e16cdfcacc07ea # initialize rs1
li x31, 0xc248288cc9c8ae76 # initialize rs2
rorw x31, x28, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 232)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x0)
li x0, 0x75a554397ee306d4 # initialize rs1
li x0, 0xd7a37d74e1977c20 # initialize rs2
rorw x0, x0, x0 # perform operation
RVTEST_SIGUPD(x4, x0, x0, 240)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x1)
li x1, 0xc5c5d467cae44766 # initialize rs1
li x1, 0x369770e8b39b0484 # initialize rs2
rorw x1, x1, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 248)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x2)
li x2, 0xd6fecf77b9e61581 # initialize rs1
li x2, 0x46be50e6caeb363d # initialize rs2
rorw x2, x2, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 256)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x3)
li x3, 0xc08d20da0cfb2033 # initialize rs1
li x3, 0xe394bf5b30e59fa2 # initialize rs2
rorw x3, x3, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 264)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x4)
mv x5, x4 # switch signature pointer register to avoid conflict with test
li x4, 0x3f857626dec7d70a # initialize rs1
li x4, 0x931edcc93683d0d8 # initialize rs2
rorw x4, x4, x4 # perform operation
RVTEST_SIGUPD(x5, x0, x4, 272)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x5)
mv x6, x5 # switch signature pointer register to avoid conflict with test
li x5, 0xd7e06b7b94ea78b3 # initialize rs1
li x5, 0x981c2cff3e88f24d # initialize rs2
rorw x5, x5, x5 # perform operation
RVTEST_SIGUPD(x6, x0, x5, 280)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x6)
mv x7, x6 # switch signature pointer register to avoid conflict with test
li x6, 0x435d6a63a224e1cd # initialize rs1
li x6, 0x742174ce87fecc3d # initialize rs2
rorw x6, x6, x6 # perform operation
RVTEST_SIGUPD(x7, x0, x6, 288)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x7)
mv x4, x7 # switch signature pointer register to avoid conflict with test
li x7, 0xfa7015ea54f7343c # initialize rs1
li x7, 0x22cf673ab79d6b50 # initialize rs2
rorw x7, x7, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 296)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x8)
li x8, 0xbf5d1ec7a039b8cd # initialize rs1
li x8, 0x5a98a57db540d72f # initialize rs2
rorw x8, x8, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 304)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x9)
li x9, 0x3e1c530f279999a3 # initialize rs1
li x9, 0xc62f8486bf395ab4 # initialize rs2
rorw x9, x9, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 312)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x10)
li x10, 0xb4c78eed16919175 # initialize rs1
li x10, 0x8a8b50fe685562b5 # initialize rs2
rorw x10, x10, x10 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 320)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x11)
li x11, 0xccdaad1bde8fdf22 # initialize rs1
li x11, 0x07fe76a0dea2c536 # initialize rs2
rorw x11, x11, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 328)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x12)
li x12, 0x58ce9fb77fa007d5 # initialize rs1
li x12, 0xcf06a9a5094881b4 # initialize rs2
rorw x12, x12, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 336)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x13)
li x13, 0xf32a721bed5b7752 # initialize rs1
li x13, 0xb40e87e9253e1796 # initialize rs2
rorw x13, x13, x13 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 344)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x14)
li x14, 0x202d74c1a29449c6 # initialize rs1
li x14, 0x0c1b704ad344e522 # initialize rs2
rorw x14, x14, x14 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 352)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x15)
li x15, 0x517a7467f351c908 # initialize rs1
li x15, 0xd069afd0f4eecd02 # initialize rs2
rorw x15, x15, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 360)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x16)
li x16, 0xef71c9bfcd83066d # initialize rs1
li x16, 0x9ac971eccae0d839 # initialize rs2
rorw x16, x16, x16 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 368)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x17)
li x17, 0x2f53ede620b5ccda # initialize rs1
li x17, 0xabf88c75e67b0f12 # initialize rs2
rorw x17, x17, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 376)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x18)
li x18, 0xbbfa36a31cb0af27 # initialize rs1
li x18, 0xf0e50e77d1c16c33 # initialize rs2
rorw x18, x18, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 384)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x19)
li x19, 0x5ee1c7490afae6e1 # initialize rs1
li x19, 0xc58391ca9016aebf # initialize rs2
rorw x19, x19, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 392)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x20)
li x20, 0x3afb1544630a6983 # initialize rs1
li x20, 0xf4f91f45b04be026 # initialize rs2
rorw x20, x20, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 400)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x21)
li x21, 0x836fd500909591ab # initialize rs1
li x21, 0xb2ddfc13b1b8a38d # initialize rs2
rorw x21, x21, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 408)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x22)
li x22, 0x8410d380da22b5d9 # initialize rs1
li x22, 0x890b75f18b06eb98 # initialize rs2
rorw x22, x22, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 416)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x23)
li x23, 0x8f6558feafbafcbd # initialize rs1
li x23, 0x879abb9e272200ce # initialize rs2
rorw x23, x23, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 424)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x24)
li x24, 0x7e23547899b4ccdc # initialize rs1
li x24, 0x369e0e02b68a7408 # initialize rs2
rorw x24, x24, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 432)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x25)
li x25, 0xe391b95309ad5955 # initialize rs1
li x25, 0xea5311e479a8608c # initialize rs2
rorw x25, x25, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 440)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x26)
li x26, 0x0c92aa0b0e2b7e98 # initialize rs1
li x26, 0xe9982c4b33e20adf # initialize rs2
rorw x26, x26, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 448)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x27)
li x27, 0x6a2de77608129767 # initialize rs1
li x27, 0xe284ec25c2f45f63 # initialize rs2
rorw x27, x27, x27 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 456)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x28)
li x28, 0xb61504f361704492 # initialize rs1
li x28, 0x039e33032785a0a3 # initialize rs2
rorw x28, x28, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x28, 464)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x29)
li x29, 0xcd1afc86c0a993df # initialize rs1
li x29, 0x14e567beac3cfb80 # initialize rs2
rorw x29, x29, x29 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 472)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x30)
li x30, 0xbb7e543fc3af9e33 # initialize rs1
li x30, 0x05a4175ebb439131 # initialize rs2
rorw x30, x30, x30 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 480)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x31)
li x31, 0x9f5c445c273d191e # initialize rs1
li x31, 0xcdc3f6f83656e646 # initialize rs2
rorw x31, x31, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 488)

# Testcase cp_gpr/fpr_hazard nohaz test
add x25, x12, x28 # perform first operation
rorw x26, x11, x6 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard nohaz test
add x16, x27, x21 # perform first operation
rorw x22, x29, x7 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard nohaz test
add x22, x27, x10 # perform first operation
rorw x18, x23, x30 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard raw test
add x10, x18, x21 # perform first operation
rorw x18, x10, x5 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard raw test
add x2, x11, x28 # perform first operation
rorw x11, x6, x2 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard raw test
add x21, x11, x14 # perform first operation
rorw x21, x13, x27 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard waw test
add x9, x25, x21 # perform first operation
rorw x9, x17, x6 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard waw test
add x27, x24, x8 # perform first operation
rorw x27, x10, x18 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard waw test
add x15, x28, x23 # perform first operation
rorw x15, x19, x20 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard war test
add x7, x15, x6 # perform first operation
rorw x15, x30, x5 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard war test
add x14, x31, x20 # perform first operation
rorw x20, x12, x7 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard war test
add x20, x16, x24 # perform first operation
rorw x19, x27, x17 # perform second (triggering) operation

#.EQU SIGSIZE,4096


// ******************
// Tests from: WALLY-COV-rolw.S
// ******************


# initialize signature pointer
la x4, begin_signature

    
# Testcase cp_rs1 (Test source rs1 = x0)
li x0, 0xcbd9380292dcda69 # initialize rs1
li x1, 0xd43d84b018952dab # initialize rs2
rolw x21, x0, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 0)

# Testcase cp_rs1 (Test source rs1 = x1)
li x1, 0x6ef6a06ee00c2739 # initialize rs1
li x19, 0xea674d094412b7c6 # initialize rs2
rolw x3, x1, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 8)

# Testcase cp_rs1 (Test source rs1 = x2)
li x2, 0xf19fd49b70ee4fe7 # initialize rs1
li x30, 0x008001acce6b0e22 # initialize rs2
rolw x31, x2, x30 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 16)

# Testcase cp_rs1 (Test source rs1 = x3)
li x3, 0x50a9ddfff889e629 # initialize rs1
li x6, 0x651d81a4f5c23f57 # initialize rs2
rolw x18, x3, x6 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 24)

# Testcase cp_rs1 (Test source rs1 = x4)
mv x5, x4 # switch signature pointer register to avoid conflict with test
li x4, 0x891dbe23b8554ade # initialize rs1
li x9, 0x611b85d5a4a1c981 # initialize rs2
rolw x11, x4, x9 # perform operation
RVTEST_SIGUPD(x5, x0, x11, 32)

# Testcase cp_rs1 (Test source rs1 = x5)
mv x6, x5 # switch signature pointer register to avoid conflict with test
li x5, 0x8b6b9610e5a22152 # initialize rs1
li x10, 0x5254c480dd7b5ff5 # initialize rs2
rolw x7, x5, x10 # perform operation
RVTEST_SIGUPD(x6, x0, x7, 40)

# Testcase cp_rs1 (Test source rs1 = x6)
mv x7, x6 # switch signature pointer register to avoid conflict with test
li x6, 0x755d6095d93cf0ca # initialize rs1
li x10, 0x2550904e487b0336 # initialize rs2
rolw x16, x6, x10 # perform operation
RVTEST_SIGUPD(x7, x0, x16, 48)

# Testcase cp_rs1 (Test source rs1 = x7)
mv x4, x7 # switch signature pointer register to avoid conflict with test
li x7, 0xae775aa5174615ea # initialize rs1
li x8, 0x1d4182e839c42d2a # initialize rs2
rolw x26, x7, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 56)

# Testcase cp_rs1 (Test source rs1 = x8)
li x8, 0xccec0a0fca634782 # initialize rs1
li x1, 0xe1e89f839531f97d # initialize rs2
rolw x7, x8, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 64)

# Testcase cp_rs1 (Test source rs1 = x9)
li x9, 0xba2db199e46395e8 # initialize rs1
li x6, 0x588c28e6e887ca3a # initialize rs2
rolw x16, x9, x6 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 72)

# Testcase cp_rs1 (Test source rs1 = x10)
li x10, 0x68020b42a79c55a3 # initialize rs1
li x11, 0x13180c783fd1e69c # initialize rs2
rolw x6, x10, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x6, 80)

# Testcase cp_rs1 (Test source rs1 = x11)
li x11, 0xd3ab5c72fd6ed1c7 # initialize rs1
li x1, 0xbd983878a877c895 # initialize rs2
rolw x29, x11, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 88)

# Testcase cp_rs1 (Test source rs1 = x12)
li x12, 0x8a527458f1e1fa9b # initialize rs1
li x14, 0x91a5e5614db51d8b # initialize rs2
rolw x22, x12, x14 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 96)

# Testcase cp_rs1 (Test source rs1 = x13)
li x13, 0xa78f41f23119d856 # initialize rs1
li x17, 0x5d5b2434e169eca2 # initialize rs2
rolw x15, x13, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 104)

# Testcase cp_rs1 (Test source rs1 = x14)
li x14, 0xe291f9137b17ed07 # initialize rs1
li x23, 0x1d01a0f5f54ea573 # initialize rs2
rolw x18, x14, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 112)

# Testcase cp_rs1 (Test source rs1 = x15)
li x15, 0xa32b098b392d53eb # initialize rs1
li x18, 0x37b9f0623d8c6f2f # initialize rs2
rolw x23, x15, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 120)

# Testcase cp_rs1 (Test source rs1 = x16)
li x16, 0x3235aa87069d0197 # initialize rs1
li x2, 0xa5a2653a2b43e042 # initialize rs2
rolw x1, x16, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 128)

# Testcase cp_rs1 (Test source rs1 = x17)
li x17, 0xfa4040e12664ae2d # initialize rs1
li x27, 0x5d77dc980b74ce78 # initialize rs2
rolw x14, x17, x27 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 136)

# Testcase cp_rs1 (Test source rs1 = x18)
li x18, 0x8f539b2911556817 # initialize rs1
li x25, 0x667b7d15852018dd # initialize rs2
rolw x23, x18, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 144)

# Testcase cp_rs1 (Test source rs1 = x19)
li x19, 0xae477989174981b8 # initialize rs1
li x23, 0x11a34565f14fd313 # initialize rs2
rolw x10, x19, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 152)

# Testcase cp_rs1 (Test source rs1 = x20)
li x20, 0x2f3a95c5933d3637 # initialize rs1
li x5, 0xef18bc53c345ac52 # initialize rs2
rolw x1, x20, x5 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 160)

# Testcase cp_rs1 (Test source rs1 = x21)
li x21, 0x9ab56d387ca0ccc6 # initialize rs1
li x23, 0xa61da435dcf1aaea # initialize rs2
rolw x8, x21, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 168)

# Testcase cp_rs1 (Test source rs1 = x22)
li x22, 0x442323bcacd3d25f # initialize rs1
li x20, 0x2c0eef3a6f645aae # initialize rs2
rolw x26, x22, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 176)

# Testcase cp_rs1 (Test source rs1 = x23)
li x23, 0xf777b90d379c4816 # initialize rs1
li x29, 0xa3badadbacb57819 # initialize rs2
rolw x28, x23, x29 # perform operation
RVTEST_SIGUPD(x4, x0, x28, 184)

# Testcase cp_rs1 (Test source rs1 = x24)
li x24, 0x7b4fe23576c1c7ee # initialize rs1
li x10, 0x2cd954f249b4b497 # initialize rs2
rolw x5, x24, x10 # perform operation
RVTEST_SIGUPD(x4, x0, x5, 192)

# Testcase cp_rs1 (Test source rs1 = x25)
li x25, 0x90d4443c04fc422b # initialize rs1
li x14, 0x07dd7c952c489868 # initialize rs2
rolw x15, x25, x14 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 200)

# Testcase cp_rs1 (Test source rs1 = x26)
li x26, 0xb57105807fa4d2af # initialize rs1
li x24, 0x80186cee46ffb5db # initialize rs2
rolw x12, x26, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 208)

# Testcase cp_rs1 (Test source rs1 = x27)
li x27, 0x808cc394ae45aac2 # initialize rs1
li x21, 0x4ae81ec2e5e1bff9 # initialize rs2
rolw x16, x27, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 216)

# Testcase cp_rs1 (Test source rs1 = x28)
li x28, 0x4e987710a97cffe3 # initialize rs1
li x11, 0x37836bb8af97ddd6 # initialize rs2
rolw x27, x28, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 224)

# Testcase cp_rs1 (Test source rs1 = x29)
li x29, 0x80be89c3aa14890d # initialize rs1
li x27, 0xe4afece39aa53894 # initialize rs2
rolw x15, x29, x27 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 232)

# Testcase cp_rs1 (Test source rs1 = x30)
li x30, 0x6d0eb073de545dc0 # initialize rs1
li x11, 0x066eb756c75ad766 # initialize rs2
rolw x6, x30, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x6, 240)

# Testcase cp_rs1 (Test source rs1 = x31)
li x31, 0x109dfb810ef1357f # initialize rs1
li x29, 0x5047bdca85c50792 # initialize rs2
rolw x5, x31, x29 # perform operation
RVTEST_SIGUPD(x4, x0, x5, 248)

# Testcase cp_rs2 (Test source rs2 = x0)
li x8, 0xb0f099082ff70e57 # initialize rs1
li x0, 0x4e5d4872c5d58b43 # initialize rs2
rolw x5, x8, x0 # perform operation
RVTEST_SIGUPD(x4, x0, x5, 256)

# Testcase cp_rs2 (Test source rs2 = x1)
li x25, 0x087b07045344a839 # initialize rs1
li x1, 0x40da8e7db8567ced # initialize rs2
rolw x10, x25, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 264)

# Testcase cp_rs2 (Test source rs2 = x2)
li x21, 0x3f5c90bfdeb8cbeb # initialize rs1
li x2, 0xe9dbafe3eff1269f # initialize rs2
rolw x8, x21, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 272)

# Testcase cp_rs2 (Test source rs2 = x3)
li x19, 0x0a6c12fa7e4f86f2 # initialize rs1
li x3, 0xc7639bd87ed62e1a # initialize rs2
rolw x23, x19, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 280)

# Testcase cp_rs2 (Test source rs2 = x4)
mv x5, x4 # switch signature pointer register to avoid conflict with test
li x28, 0xb6293b691dd065ce # initialize rs1
li x4, 0x8690655cd28ef91f # initialize rs2
rolw x31, x28, x4 # perform operation
RVTEST_SIGUPD(x5, x0, x31, 288)

# Testcase cp_rs2 (Test source rs2 = x5)
mv x6, x5 # switch signature pointer register to avoid conflict with test
li x24, 0x5f899f656a716a12 # initialize rs1
li x5, 0xc243d4b214fbe1db # initialize rs2
rolw x3, x24, x5 # perform operation
RVTEST_SIGUPD(x6, x0, x3, 296)

# Testcase cp_rs2 (Test source rs2 = x6)
mv x7, x6 # switch signature pointer register to avoid conflict with test
li x3, 0x0b659c739844ab8f # initialize rs1
li x6, 0x784328bd36171aa6 # initialize rs2
rolw x4, x3, x6 # perform operation
RVTEST_SIGUPD(x7, x0, x4, 304)

# Testcase cp_rs2 (Test source rs2 = x7)
mv x4, x7 # switch signature pointer register to avoid conflict with test
li x20, 0x8288215c08fb82eb # initialize rs1
li x7, 0xedf0cb0b3cb41ed0 # initialize rs2
rolw x1, x20, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 312)

# Testcase cp_rs2 (Test source rs2 = x8)
li x20, 0xd1a77d74690311a7 # initialize rs1
li x8, 0xd0aafde856287839 # initialize rs2
rolw x29, x20, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 320)

# Testcase cp_rs2 (Test source rs2 = x9)
li x25, 0xb67a0bc8992b073b # initialize rs1
li x9, 0x75cf6126da44f45d # initialize rs2
rolw x31, x25, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 328)

# Testcase cp_rs2 (Test source rs2 = x10)
li x26, 0x3b7e0847ca4f478c # initialize rs1
li x10, 0xbbd7a1db75345b7c # initialize rs2
rolw x20, x26, x10 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 336)

# Testcase cp_rs2 (Test source rs2 = x11)
li x12, 0x3c4f3e12fddabf3d # initialize rs1
li x11, 0x571d29e928f9b1c1 # initialize rs2
rolw x5, x12, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x5, 344)

# Testcase cp_rs2 (Test source rs2 = x12)
li x25, 0x17e798141a92974f # initialize rs1
li x12, 0x63a62367e7de8baf # initialize rs2
rolw x17, x25, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 352)

# Testcase cp_rs2 (Test source rs2 = x13)
li x8, 0xe03cef85e3d62cee # initialize rs1
li x13, 0x7e7bec51d8749033 # initialize rs2
rolw x20, x8, x13 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 360)

# Testcase cp_rs2 (Test source rs2 = x14)
li x13, 0x97c4854ce014afdd # initialize rs1
li x14, 0x80fd48fcd1d3685e # initialize rs2
rolw x2, x13, x14 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 368)

# Testcase cp_rs2 (Test source rs2 = x15)
li x18, 0x67ba51b0921c2ad9 # initialize rs1
li x15, 0xf7a0e52fd5db2a47 # initialize rs2
rolw x26, x18, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 376)

# Testcase cp_rs2 (Test source rs2 = x16)
li x24, 0x9f1e1b37454b5e4c # initialize rs1
li x16, 0xa7271eaabae28eb1 # initialize rs2
rolw x21, x24, x16 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 384)

# Testcase cp_rs2 (Test source rs2 = x17)
li x25, 0x094c882b1c7f9405 # initialize rs1
li x17, 0x991243064576b57e # initialize rs2
rolw x2, x25, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 392)

# Testcase cp_rs2 (Test source rs2 = x18)
li x27, 0x21e17ab39dc593e1 # initialize rs1
li x18, 0x012e128e7e83cdd3 # initialize rs2
rolw x10, x27, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 400)

# Testcase cp_rs2 (Test source rs2 = x19)
li x11, 0x18ae03c684759923 # initialize rs1
li x19, 0xec3bb6aab0857e4e # initialize rs2
rolw x2, x11, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 408)

# Testcase cp_rs2 (Test source rs2 = x20)
li x23, 0xd21f9ea95cbadca2 # initialize rs1
li x20, 0xaab29a7be5b398ae # initialize rs2
rolw x31, x23, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 416)

# Testcase cp_rs2 (Test source rs2 = x21)
li x30, 0x26cbf998aef62f67 # initialize rs1
li x21, 0x52bb934ad3f26a01 # initialize rs2
rolw x14, x30, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 424)

# Testcase cp_rs2 (Test source rs2 = x22)
li x15, 0xd5fb0ea3860cf53d # initialize rs1
li x22, 0x2a1ba43be09bf2df # initialize rs2
rolw x29, x15, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 432)

# Testcase cp_rs2 (Test source rs2 = x23)
li x1, 0xc7e821a3299afa6c # initialize rs1
li x23, 0xed8260687f0fa6af # initialize rs2
rolw x13, x1, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 440)

# Testcase cp_rs2 (Test source rs2 = x24)
li x17, 0x8394ffaeab95c88b # initialize rs1
li x24, 0xf1ca5c7cbd1cc9a4 # initialize rs2
rolw x30, x17, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 448)

# Testcase cp_rs2 (Test source rs2 = x25)
li x31, 0x29435bc34eddecc3 # initialize rs1
li x25, 0x215e1c7da702baad # initialize rs2
rolw x21, x31, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 456)

# Testcase cp_rs2 (Test source rs2 = x26)
li x22, 0xeed955713657b203 # initialize rs1
li x26, 0xff1c94b64dd1086b # initialize rs2
rolw x20, x22, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 464)

# Testcase cp_rs2 (Test source rs2 = x27)
li x1, 0xdf66a5622c3d0cbb # initialize rs1
li x27, 0x4d68715595f99a92 # initialize rs2
rolw x3, x1, x27 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 472)

# Testcase cp_rs2 (Test source rs2 = x28)
li x9, 0xd05e481d7f06c8c1 # initialize rs1
li x28, 0x31aff4476c3c669a # initialize rs2
rolw x25, x9, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 480)

# Testcase cp_rs2 (Test source rs2 = x29)
li x9, 0x954db255a5b7e9fc # initialize rs1
li x29, 0x7988aa05b8ce9db3 # initialize rs2
rolw x20, x9, x29 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 488)

# Testcase cp_rs2 (Test source rs2 = x30)
li x31, 0xa9e44df18700ce65 # initialize rs1
li x30, 0x4c82f85cb64de5eb # initialize rs2
rolw x1, x31, x30 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 496)

# Testcase cp_rs2 (Test source rs2 = x31)
li x8, 0x81518534e2a4da0f # initialize rs1
li x31, 0x0f102517a187cb2c # initialize rs2
rolw x25, x8, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 504)

# Testcase cp_rd (Test destination rd = x0)
li x28, 0xd16d10f6937916f5 # initialize rs1
li x12, 0xfc6b36690c7a9f34 # initialize rs2
rolw x0, x28, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x0, 512)

# Testcase cp_rd (Test destination rd = x1)
li x27, 0x64d0e7f649c0b357 # initialize rs1
li x26, 0x38c08fd412297383 # initialize rs2
rolw x1, x27, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 520)

# Testcase cp_rd (Test destination rd = x2)
li x11, 0x0342c113f609fd04 # initialize rs1
li x7, 0xc4e2e02c5548c16c # initialize rs2
rolw x2, x11, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 528)

# Testcase cp_rd (Test destination rd = x3)
li x15, 0xb36a1a85904ffa2b # initialize rs1
li x10, 0xd7f184214d1271ff # initialize rs2
rolw x3, x15, x10 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 536)

# Testcase cp_rd (Test destination rd = x4)
mv x5, x4 # switch signature pointer register to avoid conflict with test
li x15, 0x579b7d54a85ee82b # initialize rs1
li x14, 0xc3a940e6265adb59 # initialize rs2
rolw x4, x15, x14 # perform operation
RVTEST_SIGUPD(x5, x0, x4, 544)

# Testcase cp_rd (Test destination rd = x5)
mv x6, x5 # switch signature pointer register to avoid conflict with test
li x12, 0xfec1b026aa5add2a # initialize rs1
li x3, 0x012a0fbe76e02cc3 # initialize rs2
rolw x5, x12, x3 # perform operation
RVTEST_SIGUPD(x6, x0, x5, 552)

# Testcase cp_rd (Test destination rd = x6)
mv x7, x6 # switch signature pointer register to avoid conflict with test
li x26, 0x098080762a68dc39 # initialize rs1
li x11, 0xf6bd595b7b475c94 # initialize rs2
rolw x6, x26, x11 # perform operation
RVTEST_SIGUPD(x7, x0, x6, 560)

# Testcase cp_rd (Test destination rd = x7)
mv x4, x7 # switch signature pointer register to avoid conflict with test
li x12, 0x112ca61ce559117e # initialize rs1
li x11, 0x1b883f21792a8f78 # initialize rs2
rolw x7, x12, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 568)

# Testcase cp_rd (Test destination rd = x8)
li x29, 0x47293d64e03fa4b4 # initialize rs1
li x25, 0x52470be071fc7cab # initialize rs2
rolw x8, x29, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 576)

# Testcase cp_rd (Test destination rd = x9)
li x31, 0x8331e4c529ef8c16 # initialize rs1
li x27, 0x9a2d521768b49b88 # initialize rs2
rolw x9, x31, x27 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 584)

# Testcase cp_rd (Test destination rd = x10)
li x6, 0xba0050ef9a8ef926 # initialize rs1
li x22, 0x34b6f1ef866afddc # initialize rs2
rolw x10, x6, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 592)

# Testcase cp_rd (Test destination rd = x11)
li x31, 0x937639f36a8a1e0e # initialize rs1
li x20, 0x2031f4b102dce650 # initialize rs2
rolw x11, x31, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 600)

# Testcase cp_rd (Test destination rd = x12)
li x10, 0x252c6e1757c89654 # initialize rs1
li x27, 0xce85f733f193d834 # initialize rs2
rolw x12, x10, x27 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 608)

# Testcase cp_rd (Test destination rd = x13)
li x25, 0x04cfac402c200e8c # initialize rs1
li x29, 0x57a31d1610caeade # initialize rs2
rolw x13, x25, x29 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 616)

# Testcase cp_rd (Test destination rd = x14)
li x6, 0xafdb308a620a0d30 # initialize rs1
li x14, 0xa3b2d0b6f6c87242 # initialize rs2
rolw x14, x6, x14 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 624)

# Testcase cp_rd (Test destination rd = x15)
li x23, 0xbc6a7f3d70df0c9f # initialize rs1
li x6, 0x72374aebfb53ef9a # initialize rs2
rolw x15, x23, x6 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 632)

# Testcase cp_rd (Test destination rd = x16)
li x23, 0x57a9fb846c3a14d7 # initialize rs1
li x9, 0xa75c0c447b9cf839 # initialize rs2
rolw x16, x23, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 640)

# Testcase cp_rd (Test destination rd = x17)
li x2, 0x604f7ff23ac33588 # initialize rs1
li x27, 0x64eeb21d7fff034f # initialize rs2
rolw x17, x2, x27 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 648)

# Testcase cp_rd (Test destination rd = x18)
li x23, 0x88e40327dc2d3d42 # initialize rs1
li x26, 0x185a3f2af79c164c # initialize rs2
rolw x18, x23, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 656)

# Testcase cp_rd (Test destination rd = x19)
li x23, 0x9494dee8e8e49ee0 # initialize rs1
li x21, 0x1cd9f11db96af2f9 # initialize rs2
rolw x19, x23, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 664)

# Testcase cp_rd (Test destination rd = x20)
li x27, 0x7969e42f04935347 # initialize rs1
li x30, 0x6545b630a54338a7 # initialize rs2
rolw x20, x27, x30 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 672)

# Testcase cp_rd (Test destination rd = x21)
li x29, 0x2916f049171bb4d7 # initialize rs1
li x31, 0x81955bdb6b82c60c # initialize rs2
rolw x21, x29, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 680)

# Testcase cp_rd (Test destination rd = x22)
li x9, 0xad8bb45f5dbb2667 # initialize rs1
li x28, 0xc92f185d834c4f33 # initialize rs2
rolw x22, x9, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 688)

# Testcase cp_rd (Test destination rd = x23)
li x19, 0x93cfc7b7b00a3857 # initialize rs1
li x7, 0x09a36b7f8b87e8df # initialize rs2
rolw x23, x19, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 696)

# Testcase cp_rd (Test destination rd = x24)
li x2, 0x27047021ea045679 # initialize rs1
li x27, 0xb3c2e0ec0ee4844d # initialize rs2
rolw x24, x2, x27 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 704)

# Testcase cp_rd (Test destination rd = x25)
li x14, 0xc48ee044543e566c # initialize rs1
li x20, 0x409c4b9f664785cc # initialize rs2
rolw x25, x14, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 712)

# Testcase cp_rd (Test destination rd = x26)
li x1, 0xcd037c9c008b31a2 # initialize rs1
li x31, 0xceefa531379acadd # initialize rs2
rolw x26, x1, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 720)

# Testcase cp_rd (Test destination rd = x27)
li x28, 0x991731483800ee46 # initialize rs1
li x21, 0x6b58bf06b7b21aff # initialize rs2
rolw x27, x28, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 728)

# Testcase cp_rd (Test destination rd = x28)
li x16, 0x35d774ef38222d31 # initialize rs1
li x2, 0xc004d4821d4f2744 # initialize rs2
rolw x28, x16, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x28, 736)

# Testcase cp_rd (Test destination rd = x29)
li x27, 0x9a2e10a393da6ca0 # initialize rs1
li x15, 0xecdf36862a22d7ef # initialize rs2
rolw x29, x27, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 744)

# Testcase cp_rd (Test destination rd = x30)
li x28, 0x9df8709d94a213e9 # initialize rs1
li x16, 0x5747703b9f2e017b # initialize rs2
rolw x30, x28, x16 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 752)

# Testcase cp_rd (Test destination rd = x31)
li x21, 0x5c5c6d3b7c85eb62 # initialize rs1
li x25, 0x13d96efe45757505 # initialize rs2
rolw x31, x21, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 760)

# Testcase cp_rs1_corners (Test source rs1 value = 0x0)
li x10, 0x0000000000000000 # initialize rs1
li x8, 0x2083938ff0291527 # initialize rs2
rolw x18, x10, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 768)

# Testcase cp_rs1_corners (Test source rs1 value = 0x1)
li x7, 0x0000000000000001 # initialize rs1
li x2, 0x0b7e5e902e66c70d # initialize rs2
rolw x8, x7, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 776)

# Testcase cp_rs1_corners (Test source rs1 value = 0x2)
li x9, 0x0000000000000002 # initialize rs1
li x28, 0x15df843c106829f1 # initialize rs2
rolw x11, x9, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 784)

# Testcase cp_rs1_corners (Test source rs1 value = 0x8000000000000000)
li x25, 0x8000000000000000 # initialize rs1
li x3, 0xe4e2bda464769c30 # initialize rs2
rolw x11, x25, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 792)

# Testcase cp_rs1_corners (Test source rs1 value = 0x8000000000000001)
li x29, 0x8000000000000001 # initialize rs1
li x25, 0xebf58106e2880873 # initialize rs2
rolw x7, x29, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 800)

# Testcase cp_rs1_corners (Test source rs1 value = 0x7fffffffffffffff)
li x17, 0x7fffffffffffffff # initialize rs1
li x26, 0xf3b0de041ba52e67 # initialize rs2
rolw x14, x17, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 808)

# Testcase cp_rs1_corners (Test source rs1 value = 0x7ffffffffffffffe)
li x17, 0x7ffffffffffffffe # initialize rs1
li x15, 0x478f3734997aa332 # initialize rs2
rolw x29, x17, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 816)

# Testcase cp_rs1_corners (Test source rs1 value = 0xffffffffffffffff)
li x14, 0xffffffffffffffff # initialize rs1
li x27, 0x95de7fd54564e139 # initialize rs2
rolw x8, x14, x27 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 824)

# Testcase cp_rs1_corners (Test source rs1 value = 0xfffffffffffffffe)
li x16, 0xfffffffffffffffe # initialize rs1
li x7, 0xcca0ee06c54fccf7 # initialize rs2
rolw x27, x16, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 832)

# Testcase cp_rs1_corners (Test source rs1 value = 0x5bbc887763ae86f2)
li x7, 0x5bbc887763ae86f2 # initialize rs1
li x18, 0x3218cada070577ff # initialize rs2
rolw x3, x7, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 840)

# Testcase cp_rs1_corners (Test source rs1 value = 0xaaaaaaaaaaaaaaaa)
li x8, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x17, 0x9b4c92b165465561 # initialize rs2
rolw x14, x8, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 848)

# Testcase cp_rs1_corners (Test source rs1 value = 0x5555555555555555)
li x10, 0x5555555555555555 # initialize rs1
li x21, 0x4bc98faf57748b8b # initialize rs2
rolw x31, x10, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 856)

# Testcase cp_rs1_corners (Test source rs1 value = 0xffffffff)
li x21, 0x00000000ffffffff # initialize rs1
li x25, 0x1966599b0ab44974 # initialize rs2
rolw x15, x21, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 864)

# Testcase cp_rs1_corners (Test source rs1 value = 0xfffffffe)
li x17, 0x00000000fffffffe # initialize rs1
li x27, 0x243d67eaa77972d5 # initialize rs2
rolw x14, x17, x27 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 872)

# Testcase cp_rs1_corners (Test source rs1 value = 0x100000000)
li x3, 0x0000000100000000 # initialize rs1
li x28, 0x1789310f58630450 # initialize rs2
rolw x24, x3, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 880)

# Testcase cp_rs1_corners (Test source rs1 value = 0x100000001)
li x14, 0x0000000100000001 # initialize rs1
li x19, 0xdab5a0f4ce0202c0 # initialize rs2
rolw x15, x14, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 888)

# Testcase cp_rs2_corners (Test source rs2 value = 0x0)
li x17, 0xc765048a0a996fc7 # initialize rs1
li x11, 0x0000000000000000 # initialize rs2
rolw x27, x17, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 896)

# Testcase cp_rs2_corners (Test source rs2 value = 0x1)
li x8, 0x102514f34ee821af # initialize rs1
li x26, 0x0000000000000001 # initialize rs2
rolw x11, x8, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 904)

# Testcase cp_rs2_corners (Test source rs2 value = 0x2)
li x12, 0x5201c3387ae9f977 # initialize rs1
li x13, 0x0000000000000002 # initialize rs2
rolw x16, x12, x13 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 912)

# Testcase cp_rs2_corners (Test source rs2 value = 0x8000000000000000)
li x31, 0x4f6419b4cf19cb1e # initialize rs1
li x21, 0x8000000000000000 # initialize rs2
rolw x23, x31, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 920)

# Testcase cp_rs2_corners (Test source rs2 value = 0x8000000000000001)
li x22, 0x413fee1d9296c846 # initialize rs1
li x14, 0x8000000000000001 # initialize rs2
rolw x26, x22, x14 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 928)

# Testcase cp_rs2_corners (Test source rs2 value = 0x7fffffffffffffff)
li x30, 0x83265fa17c4f24bc # initialize rs1
li x28, 0x7fffffffffffffff # initialize rs2
rolw x26, x30, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 936)

# Testcase cp_rs2_corners (Test source rs2 value = 0x7ffffffffffffffe)
li x17, 0x87a21736acaa463c # initialize rs1
li x28, 0x7ffffffffffffffe # initialize rs2
rolw x23, x17, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 944)

# Testcase cp_rs2_corners (Test source rs2 value = 0xffffffffffffffff)
li x27, 0xc04d0973366d7c77 # initialize rs1
li x6, 0xffffffffffffffff # initialize rs2
rolw x21, x27, x6 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 952)

# Testcase cp_rs2_corners (Test source rs2 value = 0xfffffffffffffffe)
li x5, 0xfd2f0671dc62f8e3 # initialize rs1
li x31, 0xfffffffffffffffe # initialize rs2
rolw x21, x5, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 960)

# Testcase cp_rs2_corners (Test source rs2 value = 0x5bbc887763ae86f2)
li x25, 0xdd32380da3fa9c4a # initialize rs1
li x9, 0x5bbc887763ae86f2 # initialize rs2
rolw x23, x25, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 968)

# Testcase cp_rs2_corners (Test source rs2 value = 0xaaaaaaaaaaaaaaaa)
li x19, 0x221890513d7e2a5a # initialize rs1
li x26, 0xaaaaaaaaaaaaaaaa # initialize rs2
rolw x10, x19, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 976)

# Testcase cp_rs2_corners (Test source rs2 value = 0x5555555555555555)
li x10, 0x8020a51eadfa814e # initialize rs1
li x24, 0x5555555555555555 # initialize rs2
rolw x27, x10, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 984)

# Testcase cp_rs2_corners (Test source rs2 value = 0xffffffff)
li x10, 0x52cdeed235004092 # initialize rs1
li x17, 0x00000000ffffffff # initialize rs2
rolw x29, x10, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 992)

# Testcase cp_rs2_corners (Test source rs2 value = 0xfffffffe)
li x20, 0x5cfbca08d52d2098 # initialize rs1
li x8, 0x00000000fffffffe # initialize rs2
rolw x19, x20, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 1000)

# Testcase cp_rs2_corners (Test source rs2 value = 0x100000000)
li x21, 0xad69c588a6f4c1c1 # initialize rs1
li x15, 0x0000000100000000 # initialize rs2
rolw x3, x21, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 1008)

# Testcase cp_rs2_corners (Test source rs2 value = 0x100000001)
li x31, 0x01989e682b9e3550 # initialize rs1
li x12, 0x0000000100000001 # initialize rs2
rolw x11, x31, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 1016)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0x0)
li x13, 0x0000000000000000 # initialize rs1
li x22, 0x0000000000000000 # initialize rs2
rolw x1, x13, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 1024)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0x1)
li x3, 0x0000000000000000 # initialize rs1
li x19, 0x0000000000000001 # initialize rs2
rolw x8, x3, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 1032)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0x2)
li x11, 0x0000000000000000 # initialize rs1
li x8, 0x0000000000000002 # initialize rs2
rolw x19, x11, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 1040)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0x8000000000000000)
li x12, 0x0000000000000000 # initialize rs1
li x31, 0x8000000000000000 # initialize rs2
rolw x10, x12, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 1048)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0x8000000000000001)
li x8, 0x0000000000000000 # initialize rs1
li x25, 0x8000000000000001 # initialize rs2
rolw x5, x8, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x5, 1056)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0x7fffffffffffffff)
li x31, 0x0000000000000000 # initialize rs1
li x27, 0x7fffffffffffffff # initialize rs2
rolw x14, x31, x27 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 1064)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0x7ffffffffffffffe)
li x16, 0x0000000000000000 # initialize rs1
li x5, 0x7ffffffffffffffe # initialize rs2
rolw x3, x16, x5 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 1072)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0xffffffffffffffff)
li x9, 0x0000000000000000 # initialize rs1
li x29, 0xffffffffffffffff # initialize rs2
rolw x6, x9, x29 # perform operation
RVTEST_SIGUPD(x4, x0, x6, 1080)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0xfffffffffffffffe)
li x29, 0x0000000000000000 # initialize rs1
li x9, 0xfffffffffffffffe # initialize rs2
rolw x26, x29, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 1088)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0x5bbc887763ae86f2)
li x22, 0x0000000000000000 # initialize rs1
li x12, 0x5bbc887763ae86f2 # initialize rs2
rolw x10, x22, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 1096)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0xaaaaaaaaaaaaaaaa)
li x13, 0x0000000000000000 # initialize rs1
li x6, 0xaaaaaaaaaaaaaaaa # initialize rs2
rolw x7, x13, x6 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 1104)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0x5555555555555555)
li x25, 0x0000000000000000 # initialize rs1
li x8, 0x5555555555555555 # initialize rs2
rolw x3, x25, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 1112)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0xffffffff)
li x22, 0x0000000000000000 # initialize rs1
li x5, 0x00000000ffffffff # initialize rs2
rolw x25, x22, x5 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 1120)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0xfffffffe)
li x14, 0x0000000000000000 # initialize rs1
li x21, 0x00000000fffffffe # initialize rs2
rolw x26, x14, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 1128)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0x100000000)
li x13, 0x0000000000000000 # initialize rs1
li x11, 0x0000000100000000 # initialize rs2
rolw x17, x13, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 1136)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0x100000001)
li x24, 0x0000000000000000 # initialize rs1
li x1, 0x0000000100000001 # initialize rs2
rolw x12, x24, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 1144)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0x0)
li x11, 0x0000000000000001 # initialize rs1
li x31, 0x0000000000000000 # initialize rs2
rolw x6, x11, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x6, 1152)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0x1)
li x24, 0x0000000000000001 # initialize rs1
li x20, 0x0000000000000001 # initialize rs2
rolw x17, x24, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 1160)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0x2)
li x26, 0x0000000000000001 # initialize rs1
li x22, 0x0000000000000002 # initialize rs2
rolw x20, x26, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 1168)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0x8000000000000000)
li x23, 0x0000000000000001 # initialize rs1
li x26, 0x8000000000000000 # initialize rs2
rolw x13, x23, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 1176)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0x8000000000000001)
li x7, 0x0000000000000001 # initialize rs1
li x13, 0x8000000000000001 # initialize rs2
rolw x20, x7, x13 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 1184)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0x7fffffffffffffff)
li x7, 0x0000000000000001 # initialize rs1
li x15, 0x7fffffffffffffff # initialize rs2
rolw x3, x7, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 1192)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0x7ffffffffffffffe)
li x24, 0x0000000000000001 # initialize rs1
li x3, 0x7ffffffffffffffe # initialize rs2
rolw x19, x24, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 1200)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0xffffffffffffffff)
li x10, 0x0000000000000001 # initialize rs1
li x14, 0xffffffffffffffff # initialize rs2
rolw x1, x10, x14 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 1208)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0xfffffffffffffffe)
li x29, 0x0000000000000001 # initialize rs1
li x24, 0xfffffffffffffffe # initialize rs2
rolw x10, x29, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 1216)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0x5bbc887763ae86f2)
li x2, 0x0000000000000001 # initialize rs1
li x23, 0x5bbc887763ae86f2 # initialize rs2
rolw x21, x2, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 1224)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0xaaaaaaaaaaaaaaaa)
li x26, 0x0000000000000001 # initialize rs1
li x19, 0xaaaaaaaaaaaaaaaa # initialize rs2
rolw x9, x26, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 1232)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0x5555555555555555)
li x14, 0x0000000000000001 # initialize rs1
li x16, 0x5555555555555555 # initialize rs2
rolw x15, x14, x16 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 1240)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0xffffffff)
li x25, 0x0000000000000001 # initialize rs1
li x8, 0x00000000ffffffff # initialize rs2
rolw x18, x25, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 1248)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0xfffffffe)
li x8, 0x0000000000000001 # initialize rs1
li x21, 0x00000000fffffffe # initialize rs2
rolw x14, x8, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 1256)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0x100000000)
li x11, 0x0000000000000001 # initialize rs1
li x8, 0x0000000100000000 # initialize rs2
rolw x31, x11, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 1264)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0x100000001)
li x16, 0x0000000000000001 # initialize rs1
li x19, 0x0000000100000001 # initialize rs2
rolw x29, x16, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 1272)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0x0)
li x1, 0x0000000000000002 # initialize rs1
li x28, 0x0000000000000000 # initialize rs2
rolw x17, x1, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 1280)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0x1)
li x30, 0x0000000000000002 # initialize rs1
li x29, 0x0000000000000001 # initialize rs2
rolw x1, x30, x29 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 1288)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0x2)
li x27, 0x0000000000000002 # initialize rs1
li x3, 0x0000000000000002 # initialize rs2
rolw x10, x27, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 1296)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0x8000000000000000)
li x22, 0x0000000000000002 # initialize rs1
li x30, 0x8000000000000000 # initialize rs2
rolw x16, x22, x30 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 1304)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0x8000000000000001)
li x21, 0x0000000000000002 # initialize rs1
li x14, 0x8000000000000001 # initialize rs2
rolw x3, x21, x14 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 1312)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0x7fffffffffffffff)
li x29, 0x0000000000000002 # initialize rs1
li x13, 0x7fffffffffffffff # initialize rs2
rolw x20, x29, x13 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 1320)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0x7ffffffffffffffe)
li x3, 0x0000000000000002 # initialize rs1
li x9, 0x7ffffffffffffffe # initialize rs2
rolw x28, x3, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x28, 1328)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0xffffffffffffffff)
li x18, 0x0000000000000002 # initialize rs1
li x12, 0xffffffffffffffff # initialize rs2
rolw x2, x18, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 1336)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0xfffffffffffffffe)
li x15, 0x0000000000000002 # initialize rs1
li x27, 0xfffffffffffffffe # initialize rs2
rolw x21, x15, x27 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 1344)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0x5bbc887763ae86f2)
li x2, 0x0000000000000002 # initialize rs1
li x3, 0x5bbc887763ae86f2 # initialize rs2
rolw x23, x2, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 1352)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0xaaaaaaaaaaaaaaaa)
li x1, 0x0000000000000002 # initialize rs1
li x8, 0xaaaaaaaaaaaaaaaa # initialize rs2
rolw x16, x1, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 1360)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0x5555555555555555)
li x13, 0x0000000000000002 # initialize rs1
li x6, 0x5555555555555555 # initialize rs2
rolw x9, x13, x6 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 1368)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0xffffffff)
li x3, 0x0000000000000002 # initialize rs1
li x13, 0x00000000ffffffff # initialize rs2
rolw x6, x3, x13 # perform operation
RVTEST_SIGUPD(x4, x0, x6, 1376)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0xfffffffe)
li x24, 0x0000000000000002 # initialize rs1
li x14, 0x00000000fffffffe # initialize rs2
rolw x9, x24, x14 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 1384)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0x100000000)
li x11, 0x0000000000000002 # initialize rs1
li x2, 0x0000000100000000 # initialize rs2
rolw x26, x11, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 1392)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0x100000001)
li x19, 0x0000000000000002 # initialize rs1
li x28, 0x0000000100000001 # initialize rs2
rolw x23, x19, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 1400)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0x0)
li x7, 0x8000000000000000 # initialize rs1
li x16, 0x0000000000000000 # initialize rs2
rolw x28, x7, x16 # perform operation
RVTEST_SIGUPD(x4, x0, x28, 1408)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0x1)
li x3, 0x8000000000000000 # initialize rs1
li x24, 0x0000000000000001 # initialize rs2
rolw x28, x3, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x28, 1416)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0x2)
li x11, 0x8000000000000000 # initialize rs1
li x17, 0x0000000000000002 # initialize rs2
rolw x3, x11, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 1424)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0x8000000000000000)
li x1, 0x8000000000000000 # initialize rs1
li x24, 0x8000000000000000 # initialize rs2
rolw x7, x1, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 1432)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0x8000000000000001)
li x20, 0x8000000000000000 # initialize rs1
li x11, 0x8000000000000001 # initialize rs2
rolw x22, x20, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 1440)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0x7fffffffffffffff)
li x6, 0x8000000000000000 # initialize rs1
li x29, 0x7fffffffffffffff # initialize rs2
rolw x23, x6, x29 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 1448)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0x7ffffffffffffffe)
li x26, 0x8000000000000000 # initialize rs1
li x14, 0x7ffffffffffffffe # initialize rs2
rolw x10, x26, x14 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 1456)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0xffffffffffffffff)
li x19, 0x8000000000000000 # initialize rs1
li x30, 0xffffffffffffffff # initialize rs2
rolw x7, x19, x30 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 1464)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0xfffffffffffffffe)
li x11, 0x8000000000000000 # initialize rs1
li x15, 0xfffffffffffffffe # initialize rs2
rolw x29, x11, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 1472)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0x5bbc887763ae86f2)
li x23, 0x8000000000000000 # initialize rs1
li x20, 0x5bbc887763ae86f2 # initialize rs2
rolw x25, x23, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 1480)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0xaaaaaaaaaaaaaaaa)
li x7, 0x8000000000000000 # initialize rs1
li x3, 0xaaaaaaaaaaaaaaaa # initialize rs2
rolw x5, x7, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x5, 1488)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0x5555555555555555)
li x30, 0x8000000000000000 # initialize rs1
li x15, 0x5555555555555555 # initialize rs2
rolw x26, x30, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 1496)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0xffffffff)
li x6, 0x8000000000000000 # initialize rs1
li x14, 0x00000000ffffffff # initialize rs2
rolw x13, x6, x14 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 1504)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0xfffffffe)
li x1, 0x8000000000000000 # initialize rs1
li x7, 0x00000000fffffffe # initialize rs2
rolw x13, x1, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 1512)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0x100000000)
li x17, 0x8000000000000000 # initialize rs1
li x6, 0x0000000100000000 # initialize rs2
rolw x14, x17, x6 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 1520)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0x100000001)
li x25, 0x8000000000000000 # initialize rs1
li x21, 0x0000000100000001 # initialize rs2
rolw x8, x25, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 1528)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0x0)
li x9, 0x8000000000000001 # initialize rs1
li x29, 0x0000000000000000 # initialize rs2
rolw x20, x9, x29 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 1536)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0x1)
li x30, 0x8000000000000001 # initialize rs1
li x17, 0x0000000000000001 # initialize rs2
rolw x12, x30, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 1544)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0x2)
li x24, 0x8000000000000001 # initialize rs1
li x23, 0x0000000000000002 # initialize rs2
rolw x28, x24, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x28, 1552)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0x8000000000000000)
li x13, 0x8000000000000001 # initialize rs1
li x5, 0x8000000000000000 # initialize rs2
rolw x14, x13, x5 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 1560)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0x8000000000000001)
li x11, 0x8000000000000001 # initialize rs1
li x24, 0x8000000000000001 # initialize rs2
rolw x26, x11, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 1568)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0x7fffffffffffffff)
li x3, 0x8000000000000001 # initialize rs1
li x12, 0x7fffffffffffffff # initialize rs2
rolw x24, x3, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 1576)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0x7ffffffffffffffe)
li x30, 0x8000000000000001 # initialize rs1
li x9, 0x7ffffffffffffffe # initialize rs2
rolw x5, x30, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x5, 1584)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0xffffffffffffffff)
li x12, 0x8000000000000001 # initialize rs1
li x22, 0xffffffffffffffff # initialize rs2
rolw x7, x12, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 1592)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0xfffffffffffffffe)
li x15, 0x8000000000000001 # initialize rs1
li x27, 0xfffffffffffffffe # initialize rs2
rolw x18, x15, x27 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 1600)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0x5bbc887763ae86f2)
li x28, 0x8000000000000001 # initialize rs1
li x6, 0x5bbc887763ae86f2 # initialize rs2
rolw x21, x28, x6 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 1608)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0xaaaaaaaaaaaaaaaa)
li x6, 0x8000000000000001 # initialize rs1
li x29, 0xaaaaaaaaaaaaaaaa # initialize rs2
rolw x2, x6, x29 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 1616)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0x5555555555555555)
li x20, 0x8000000000000001 # initialize rs1
li x1, 0x5555555555555555 # initialize rs2
rolw x21, x20, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 1624)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0xffffffff)
li x11, 0x8000000000000001 # initialize rs1
li x9, 0x00000000ffffffff # initialize rs2
rolw x18, x11, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 1632)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0xfffffffe)
li x1, 0x8000000000000001 # initialize rs1
li x28, 0x00000000fffffffe # initialize rs2
rolw x15, x1, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 1640)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0x100000000)
li x14, 0x8000000000000001 # initialize rs1
li x12, 0x0000000100000000 # initialize rs2
rolw x27, x14, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 1648)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0x100000001)
li x27, 0x8000000000000001 # initialize rs1
li x22, 0x0000000100000001 # initialize rs2
rolw x7, x27, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 1656)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0x0)
li x17, 0x7fffffffffffffff # initialize rs1
li x24, 0x0000000000000000 # initialize rs2
rolw x29, x17, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 1664)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0x1)
li x10, 0x7fffffffffffffff # initialize rs1
li x2, 0x0000000000000001 # initialize rs2
rolw x14, x10, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 1672)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0x2)
li x23, 0x7fffffffffffffff # initialize rs1
li x1, 0x0000000000000002 # initialize rs2
rolw x21, x23, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 1680)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0x8000000000000000)
li x25, 0x7fffffffffffffff # initialize rs1
li x14, 0x8000000000000000 # initialize rs2
rolw x28, x25, x14 # perform operation
RVTEST_SIGUPD(x4, x0, x28, 1688)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0x8000000000000001)
li x6, 0x7fffffffffffffff # initialize rs1
li x14, 0x8000000000000001 # initialize rs2
rolw x30, x6, x14 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 1696)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0x7fffffffffffffff)
li x13, 0x7fffffffffffffff # initialize rs1
li x18, 0x7fffffffffffffff # initialize rs2
rolw x16, x13, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 1704)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0x7ffffffffffffffe)
li x13, 0x7fffffffffffffff # initialize rs1
li x2, 0x7ffffffffffffffe # initialize rs2
rolw x25, x13, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 1712)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0xffffffffffffffff)
li x19, 0x7fffffffffffffff # initialize rs1
li x15, 0xffffffffffffffff # initialize rs2
rolw x25, x19, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 1720)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0xfffffffffffffffe)
li x15, 0x7fffffffffffffff # initialize rs1
li x16, 0xfffffffffffffffe # initialize rs2
rolw x29, x15, x16 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 1728)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0x5bbc887763ae86f2)
li x12, 0x7fffffffffffffff # initialize rs1
li x2, 0x5bbc887763ae86f2 # initialize rs2
rolw x7, x12, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 1736)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0xaaaaaaaaaaaaaaaa)
li x7, 0x7fffffffffffffff # initialize rs1
li x21, 0xaaaaaaaaaaaaaaaa # initialize rs2
rolw x20, x7, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 1744)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0x5555555555555555)
li x8, 0x7fffffffffffffff # initialize rs1
li x1, 0x5555555555555555 # initialize rs2
rolw x24, x8, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 1752)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0xffffffff)
li x13, 0x7fffffffffffffff # initialize rs1
li x15, 0x00000000ffffffff # initialize rs2
rolw x19, x13, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 1760)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0xfffffffe)
li x2, 0x7fffffffffffffff # initialize rs1
li x23, 0x00000000fffffffe # initialize rs2
rolw x11, x2, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 1768)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0x100000000)
li x11, 0x7fffffffffffffff # initialize rs1
li x29, 0x0000000100000000 # initialize rs2
rolw x9, x11, x29 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 1776)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0x100000001)
li x14, 0x7fffffffffffffff # initialize rs1
li x24, 0x0000000100000001 # initialize rs2
rolw x10, x14, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 1784)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0x0)
li x22, 0x7ffffffffffffffe # initialize rs1
li x2, 0x0000000000000000 # initialize rs2
rolw x23, x22, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 1792)
addi x4, x4, 1800 # increment signature pointer and reset offset

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0x1)
li x1, 0x7ffffffffffffffe # initialize rs1
li x18, 0x0000000000000001 # initialize rs2
rolw x23, x1, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 0)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0x2)
li x3, 0x7ffffffffffffffe # initialize rs1
li x25, 0x0000000000000002 # initialize rs2
rolw x22, x3, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 8)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0x8000000000000000)
li x16, 0x7ffffffffffffffe # initialize rs1
li x1, 0x8000000000000000 # initialize rs2
rolw x15, x16, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 16)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0x8000000000000001)
li x28, 0x7ffffffffffffffe # initialize rs1
li x18, 0x8000000000000001 # initialize rs2
rolw x26, x28, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 24)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0x7fffffffffffffff)
li x20, 0x7ffffffffffffffe # initialize rs1
li x1, 0x7fffffffffffffff # initialize rs2
rolw x31, x20, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 32)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0x7ffffffffffffffe)
li x13, 0x7ffffffffffffffe # initialize rs1
li x10, 0x7ffffffffffffffe # initialize rs2
rolw x31, x13, x10 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 40)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0xffffffffffffffff)
li x7, 0x7ffffffffffffffe # initialize rs1
li x30, 0xffffffffffffffff # initialize rs2
rolw x22, x7, x30 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 48)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0xfffffffffffffffe)
li x15, 0x7ffffffffffffffe # initialize rs1
li x11, 0xfffffffffffffffe # initialize rs2
rolw x6, x15, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x6, 56)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0x5bbc887763ae86f2)
li x25, 0x7ffffffffffffffe # initialize rs1
li x29, 0x5bbc887763ae86f2 # initialize rs2
rolw x26, x25, x29 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 64)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0xaaaaaaaaaaaaaaaa)
li x19, 0x7ffffffffffffffe # initialize rs1
li x10, 0xaaaaaaaaaaaaaaaa # initialize rs2
rolw x31, x19, x10 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 72)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0x5555555555555555)
li x2, 0x7ffffffffffffffe # initialize rs1
li x29, 0x5555555555555555 # initialize rs2
rolw x22, x2, x29 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 80)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0xffffffff)
li x3, 0x7ffffffffffffffe # initialize rs1
li x18, 0x00000000ffffffff # initialize rs2
rolw x2, x3, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 88)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0xfffffffe)
li x26, 0x7ffffffffffffffe # initialize rs1
li x15, 0x00000000fffffffe # initialize rs2
rolw x13, x26, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 96)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0x100000000)
li x24, 0x7ffffffffffffffe # initialize rs1
li x6, 0x0000000100000000 # initialize rs2
rolw x23, x24, x6 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 104)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0x100000001)
li x16, 0x7ffffffffffffffe # initialize rs1
li x22, 0x0000000100000001 # initialize rs2
rolw x21, x16, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 112)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0x0)
li x28, 0xffffffffffffffff # initialize rs1
li x2, 0x0000000000000000 # initialize rs2
rolw x25, x28, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 120)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0x1)
li x6, 0xffffffffffffffff # initialize rs1
li x21, 0x0000000000000001 # initialize rs2
rolw x5, x6, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x5, 128)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0x2)
li x13, 0xffffffffffffffff # initialize rs1
li x3, 0x0000000000000002 # initialize rs2
rolw x18, x13, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 136)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0x8000000000000000)
li x10, 0xffffffffffffffff # initialize rs1
li x11, 0x8000000000000000 # initialize rs2
rolw x7, x10, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 144)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0x8000000000000001)
li x30, 0xffffffffffffffff # initialize rs1
li x5, 0x8000000000000001 # initialize rs2
rolw x3, x30, x5 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 152)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0x7fffffffffffffff)
li x21, 0xffffffffffffffff # initialize rs1
li x15, 0x7fffffffffffffff # initialize rs2
rolw x26, x21, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 160)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0x7ffffffffffffffe)
li x9, 0xffffffffffffffff # initialize rs1
li x3, 0x7ffffffffffffffe # initialize rs2
rolw x10, x9, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 168)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0xffffffffffffffff)
li x10, 0xffffffffffffffff # initialize rs1
li x8, 0xffffffffffffffff # initialize rs2
rolw x9, x10, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 176)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0xfffffffffffffffe)
li x2, 0xffffffffffffffff # initialize rs1
li x13, 0xfffffffffffffffe # initialize rs2
rolw x25, x2, x13 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 184)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0x5bbc887763ae86f2)
li x12, 0xffffffffffffffff # initialize rs1
li x18, 0x5bbc887763ae86f2 # initialize rs2
rolw x16, x12, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 192)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0xaaaaaaaaaaaaaaaa)
li x3, 0xffffffffffffffff # initialize rs1
li x7, 0xaaaaaaaaaaaaaaaa # initialize rs2
rolw x24, x3, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 200)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0x5555555555555555)
li x16, 0xffffffffffffffff # initialize rs1
li x17, 0x5555555555555555 # initialize rs2
rolw x30, x16, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 208)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0xffffffff)
li x9, 0xffffffffffffffff # initialize rs1
li x15, 0x00000000ffffffff # initialize rs2
rolw x17, x9, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 216)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0xfffffffe)
li x7, 0xffffffffffffffff # initialize rs1
li x3, 0x00000000fffffffe # initialize rs2
rolw x18, x7, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 224)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0x100000000)
li x21, 0xffffffffffffffff # initialize rs1
li x11, 0x0000000100000000 # initialize rs2
rolw x30, x21, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 232)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0x100000001)
li x13, 0xffffffffffffffff # initialize rs1
li x20, 0x0000000100000001 # initialize rs2
rolw x21, x13, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 240)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0x0)
li x30, 0xfffffffffffffffe # initialize rs1
li x23, 0x0000000000000000 # initialize rs2
rolw x26, x30, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 248)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0x1)
li x6, 0xfffffffffffffffe # initialize rs1
li x23, 0x0000000000000001 # initialize rs2
rolw x31, x6, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 256)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0x2)
li x22, 0xfffffffffffffffe # initialize rs1
li x20, 0x0000000000000002 # initialize rs2
rolw x13, x22, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 264)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0x8000000000000000)
li x9, 0xfffffffffffffffe # initialize rs1
li x17, 0x8000000000000000 # initialize rs2
rolw x11, x9, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 272)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0x8000000000000001)
li x11, 0xfffffffffffffffe # initialize rs1
li x22, 0x8000000000000001 # initialize rs2
rolw x24, x11, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 280)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0x7fffffffffffffff)
li x12, 0xfffffffffffffffe # initialize rs1
li x9, 0x7fffffffffffffff # initialize rs2
rolw x10, x12, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 288)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0x7ffffffffffffffe)
li x23, 0xfffffffffffffffe # initialize rs1
li x25, 0x7ffffffffffffffe # initialize rs2
rolw x30, x23, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 296)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0xffffffffffffffff)
li x2, 0xfffffffffffffffe # initialize rs1
li x27, 0xffffffffffffffff # initialize rs2
rolw x10, x2, x27 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 304)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0xfffffffffffffffe)
li x19, 0xfffffffffffffffe # initialize rs1
li x27, 0xfffffffffffffffe # initialize rs2
rolw x20, x19, x27 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 312)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0x5bbc887763ae86f2)
li x7, 0xfffffffffffffffe # initialize rs1
li x6, 0x5bbc887763ae86f2 # initialize rs2
rolw x20, x7, x6 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 320)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0xaaaaaaaaaaaaaaaa)
li x7, 0xfffffffffffffffe # initialize rs1
li x29, 0xaaaaaaaaaaaaaaaa # initialize rs2
rolw x23, x7, x29 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 328)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0x5555555555555555)
li x12, 0xfffffffffffffffe # initialize rs1
li x20, 0x5555555555555555 # initialize rs2
rolw x21, x12, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 336)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0xffffffff)
li x20, 0xfffffffffffffffe # initialize rs1
li x24, 0x00000000ffffffff # initialize rs2
rolw x7, x20, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 344)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0xfffffffe)
li x22, 0xfffffffffffffffe # initialize rs1
li x16, 0x00000000fffffffe # initialize rs2
rolw x27, x22, x16 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 352)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0x100000000)
li x29, 0xfffffffffffffffe # initialize rs1
li x28, 0x0000000100000000 # initialize rs2
rolw x3, x29, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 360)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0x100000001)
li x8, 0xfffffffffffffffe # initialize rs1
li x3, 0x0000000100000001 # initialize rs2
rolw x26, x8, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 368)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0x0)
li x19, 0x5bbc887763ae86f2 # initialize rs1
li x16, 0x0000000000000000 # initialize rs2
rolw x5, x19, x16 # perform operation
RVTEST_SIGUPD(x4, x0, x5, 376)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0x1)
li x24, 0x5bbc887763ae86f2 # initialize rs1
li x15, 0x0000000000000001 # initialize rs2
rolw x12, x24, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 384)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0x2)
li x3, 0x5bbc887763ae86f2 # initialize rs1
li x26, 0x0000000000000002 # initialize rs2
rolw x1, x3, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 392)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0x8000000000000000)
li x9, 0x5bbc887763ae86f2 # initialize rs1
li x25, 0x8000000000000000 # initialize rs2
rolw x3, x9, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 400)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0x8000000000000001)
li x14, 0x5bbc887763ae86f2 # initialize rs1
li x13, 0x8000000000000001 # initialize rs2
rolw x1, x14, x13 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 408)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0x7fffffffffffffff)
li x5, 0x5bbc887763ae86f2 # initialize rs1
li x28, 0x7fffffffffffffff # initialize rs2
rolw x30, x5, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 416)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0x7ffffffffffffffe)
li x31, 0x5bbc887763ae86f2 # initialize rs1
li x24, 0x7ffffffffffffffe # initialize rs2
rolw x14, x31, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 424)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0xffffffffffffffff)
li x19, 0x5bbc887763ae86f2 # initialize rs1
li x9, 0xffffffffffffffff # initialize rs2
rolw x14, x19, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 432)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0xfffffffffffffffe)
li x15, 0x5bbc887763ae86f2 # initialize rs1
li x30, 0xfffffffffffffffe # initialize rs2
rolw x25, x15, x30 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 440)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0x5bbc887763ae86f2)
li x16, 0x5bbc887763ae86f2 # initialize rs1
li x22, 0x5bbc887763ae86f2 # initialize rs2
rolw x7, x16, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 448)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0xaaaaaaaaaaaaaaaa)
li x12, 0x5bbc887763ae86f2 # initialize rs1
li x22, 0xaaaaaaaaaaaaaaaa # initialize rs2
rolw x15, x12, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 456)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0x5555555555555555)
li x1, 0x5bbc887763ae86f2 # initialize rs1
li x18, 0x5555555555555555 # initialize rs2
rolw x5, x1, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x5, 464)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0xffffffff)
li x13, 0x5bbc887763ae86f2 # initialize rs1
li x14, 0x00000000ffffffff # initialize rs2
rolw x15, x13, x14 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 472)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0xfffffffe)
li x9, 0x5bbc887763ae86f2 # initialize rs1
li x14, 0x00000000fffffffe # initialize rs2
rolw x19, x9, x14 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 480)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0x100000000)
li x10, 0x5bbc887763ae86f2 # initialize rs1
li x1, 0x0000000100000000 # initialize rs2
rolw x15, x10, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 488)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0x100000001)
li x14, 0x5bbc887763ae86f2 # initialize rs1
li x24, 0x0000000100000001 # initialize rs2
rolw x9, x14, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 496)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0x0)
li x22, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x8, 0x0000000000000000 # initialize rs2
rolw x1, x22, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 504)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0x1)
li x8, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x21, 0x0000000000000001 # initialize rs2
rolw x19, x8, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 512)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0x2)
li x2, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x22, 0x0000000000000002 # initialize rs2
rolw x29, x2, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 520)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0x8000000000000000)
li x26, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x22, 0x8000000000000000 # initialize rs2
rolw x7, x26, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 528)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0x8000000000000001)
li x12, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x21, 0x8000000000000001 # initialize rs2
rolw x26, x12, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 536)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0x7fffffffffffffff)
li x3, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x11, 0x7fffffffffffffff # initialize rs2
rolw x29, x3, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 544)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0x7ffffffffffffffe)
li x18, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x14, 0x7ffffffffffffffe # initialize rs2
rolw x8, x18, x14 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 552)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0xffffffffffffffff)
li x18, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x29, 0xffffffffffffffff # initialize rs2
rolw x14, x18, x29 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 560)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0xfffffffffffffffe)
li x7, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x5, 0xfffffffffffffffe # initialize rs2
rolw x10, x7, x5 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 568)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0x5bbc887763ae86f2)
li x25, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x31, 0x5bbc887763ae86f2 # initialize rs2
rolw x24, x25, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 576)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0xaaaaaaaaaaaaaaaa)
li x5, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x25, 0xaaaaaaaaaaaaaaaa # initialize rs2
rolw x26, x5, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 584)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0x5555555555555555)
li x5, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x12, 0x5555555555555555 # initialize rs2
rolw x31, x5, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 592)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0xffffffff)
li x14, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x15, 0x00000000ffffffff # initialize rs2
rolw x28, x14, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x28, 600)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0xfffffffe)
li x15, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x7, 0x00000000fffffffe # initialize rs2
rolw x26, x15, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 608)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0x100000000)
li x8, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x14, 0x0000000100000000 # initialize rs2
rolw x20, x8, x14 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 616)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0x100000001)
li x22, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x25, 0x0000000100000001 # initialize rs2
rolw x17, x22, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 624)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0x0)
li x9, 0x5555555555555555 # initialize rs1
li x24, 0x0000000000000000 # initialize rs2
rolw x13, x9, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 632)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0x1)
li x17, 0x5555555555555555 # initialize rs1
li x21, 0x0000000000000001 # initialize rs2
rolw x7, x17, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 640)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0x2)
li x22, 0x5555555555555555 # initialize rs1
li x7, 0x0000000000000002 # initialize rs2
rolw x17, x22, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 648)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0x8000000000000000)
li x9, 0x5555555555555555 # initialize rs1
li x27, 0x8000000000000000 # initialize rs2
rolw x6, x9, x27 # perform operation
RVTEST_SIGUPD(x4, x0, x6, 656)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0x8000000000000001)
li x20, 0x5555555555555555 # initialize rs1
li x11, 0x8000000000000001 # initialize rs2
rolw x27, x20, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 664)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0x7fffffffffffffff)
li x20, 0x5555555555555555 # initialize rs1
li x23, 0x7fffffffffffffff # initialize rs2
rolw x18, x20, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 672)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0x7ffffffffffffffe)
li x21, 0x5555555555555555 # initialize rs1
li x10, 0x7ffffffffffffffe # initialize rs2
rolw x8, x21, x10 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 680)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0xffffffffffffffff)
li x21, 0x5555555555555555 # initialize rs1
li x20, 0xffffffffffffffff # initialize rs2
rolw x5, x21, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x5, 688)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0xfffffffffffffffe)
li x8, 0x5555555555555555 # initialize rs1
li x31, 0xfffffffffffffffe # initialize rs2
rolw x29, x8, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 696)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0x5bbc887763ae86f2)
li x9, 0x5555555555555555 # initialize rs1
li x29, 0x5bbc887763ae86f2 # initialize rs2
rolw x12, x9, x29 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 704)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0xaaaaaaaaaaaaaaaa)
li x17, 0x5555555555555555 # initialize rs1
li x5, 0xaaaaaaaaaaaaaaaa # initialize rs2
rolw x13, x17, x5 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 712)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0x5555555555555555)
li x13, 0x5555555555555555 # initialize rs1
li x5, 0x5555555555555555 # initialize rs2
rolw x27, x13, x5 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 720)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0xffffffff)
li x15, 0x5555555555555555 # initialize rs1
li x11, 0x00000000ffffffff # initialize rs2
rolw x16, x15, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 728)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0xfffffffe)
li x22, 0x5555555555555555 # initialize rs1
li x29, 0x00000000fffffffe # initialize rs2
rolw x21, x22, x29 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 736)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0x100000000)
li x25, 0x5555555555555555 # initialize rs1
li x31, 0x0000000100000000 # initialize rs2
rolw x1, x25, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 744)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0x100000001)
li x9, 0x5555555555555555 # initialize rs1
li x29, 0x0000000100000001 # initialize rs2
rolw x25, x9, x29 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 752)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0x0)
li x25, 0x00000000ffffffff # initialize rs1
li x3, 0x0000000000000000 # initialize rs2
rolw x24, x25, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 760)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0x1)
li x14, 0x00000000ffffffff # initialize rs1
li x7, 0x0000000000000001 # initialize rs2
rolw x21, x14, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 768)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0x2)
li x12, 0x00000000ffffffff # initialize rs1
li x23, 0x0000000000000002 # initialize rs2
rolw x3, x12, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 776)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0x8000000000000000)
li x20, 0x00000000ffffffff # initialize rs1
li x1, 0x8000000000000000 # initialize rs2
rolw x7, x20, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 784)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0x8000000000000001)
li x6, 0x00000000ffffffff # initialize rs1
li x24, 0x8000000000000001 # initialize rs2
rolw x21, x6, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 792)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0x7fffffffffffffff)
li x8, 0x00000000ffffffff # initialize rs1
li x7, 0x7fffffffffffffff # initialize rs2
rolw x27, x8, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 800)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0x7ffffffffffffffe)
li x11, 0x00000000ffffffff # initialize rs1
li x31, 0x7ffffffffffffffe # initialize rs2
rolw x18, x11, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 808)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0xffffffffffffffff)
li x3, 0x00000000ffffffff # initialize rs1
li x13, 0xffffffffffffffff # initialize rs2
rolw x19, x3, x13 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 816)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0xfffffffffffffffe)
li x3, 0x00000000ffffffff # initialize rs1
li x26, 0xfffffffffffffffe # initialize rs2
rolw x25, x3, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 824)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0x5bbc887763ae86f2)
li x9, 0x00000000ffffffff # initialize rs1
li x1, 0x5bbc887763ae86f2 # initialize rs2
rolw x14, x9, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 832)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0xaaaaaaaaaaaaaaaa)
li x21, 0x00000000ffffffff # initialize rs1
li x19, 0xaaaaaaaaaaaaaaaa # initialize rs2
rolw x12, x21, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 840)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0x5555555555555555)
li x28, 0x00000000ffffffff # initialize rs1
li x9, 0x5555555555555555 # initialize rs2
rolw x10, x28, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 848)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0xffffffff)
li x23, 0x00000000ffffffff # initialize rs1
li x7, 0x00000000ffffffff # initialize rs2
rolw x24, x23, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 856)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0xfffffffe)
li x6, 0x00000000ffffffff # initialize rs1
li x16, 0x00000000fffffffe # initialize rs2
rolw x23, x6, x16 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 864)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0x100000000)
li x22, 0x00000000ffffffff # initialize rs1
li x31, 0x0000000100000000 # initialize rs2
rolw x14, x22, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 872)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0x100000001)
li x10, 0x00000000ffffffff # initialize rs1
li x3, 0x0000000100000001 # initialize rs2
rolw x2, x10, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 880)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0x0)
li x17, 0x00000000fffffffe # initialize rs1
li x1, 0x0000000000000000 # initialize rs2
rolw x23, x17, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 888)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0x1)
li x31, 0x00000000fffffffe # initialize rs1
li x7, 0x0000000000000001 # initialize rs2
rolw x21, x31, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 896)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0x2)
li x26, 0x00000000fffffffe # initialize rs1
li x28, 0x0000000000000002 # initialize rs2
rolw x20, x26, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 904)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0x8000000000000000)
li x31, 0x00000000fffffffe # initialize rs1
li x18, 0x8000000000000000 # initialize rs2
rolw x14, x31, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 912)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0x8000000000000001)
li x21, 0x00000000fffffffe # initialize rs1
li x26, 0x8000000000000001 # initialize rs2
rolw x5, x21, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x5, 920)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0x7fffffffffffffff)
li x28, 0x00000000fffffffe # initialize rs1
li x17, 0x7fffffffffffffff # initialize rs2
rolw x26, x28, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 928)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0x7ffffffffffffffe)
li x12, 0x00000000fffffffe # initialize rs1
li x7, 0x7ffffffffffffffe # initialize rs2
rolw x22, x12, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 936)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0xffffffffffffffff)
li x17, 0x00000000fffffffe # initialize rs1
li x11, 0xffffffffffffffff # initialize rs2
rolw x6, x17, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x6, 944)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0xfffffffffffffffe)
li x5, 0x00000000fffffffe # initialize rs1
li x31, 0xfffffffffffffffe # initialize rs2
rolw x13, x5, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 952)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0x5bbc887763ae86f2)
li x7, 0x00000000fffffffe # initialize rs1
li x19, 0x5bbc887763ae86f2 # initialize rs2
rolw x13, x7, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 960)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0xaaaaaaaaaaaaaaaa)
li x28, 0x00000000fffffffe # initialize rs1
li x9, 0xaaaaaaaaaaaaaaaa # initialize rs2
rolw x1, x28, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 968)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0x5555555555555555)
li x7, 0x00000000fffffffe # initialize rs1
li x28, 0x5555555555555555 # initialize rs2
rolw x27, x7, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 976)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0xffffffff)
li x29, 0x00000000fffffffe # initialize rs1
li x16, 0x00000000ffffffff # initialize rs2
rolw x3, x29, x16 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 984)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0xfffffffe)
li x14, 0x00000000fffffffe # initialize rs1
li x12, 0x00000000fffffffe # initialize rs2
rolw x23, x14, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 992)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0x100000000)
li x31, 0x00000000fffffffe # initialize rs1
li x12, 0x0000000100000000 # initialize rs2
rolw x18, x31, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 1000)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0x100000001)
li x26, 0x00000000fffffffe # initialize rs1
li x24, 0x0000000100000001 # initialize rs2
rolw x27, x26, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 1008)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0x0)
li x31, 0x0000000100000000 # initialize rs1
li x30, 0x0000000000000000 # initialize rs2
rolw x14, x31, x30 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 1016)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0x1)
li x12, 0x0000000100000000 # initialize rs1
li x29, 0x0000000000000001 # initialize rs2
rolw x24, x12, x29 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 1024)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0x2)
li x20, 0x0000000100000000 # initialize rs1
li x27, 0x0000000000000002 # initialize rs2
rolw x21, x20, x27 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 1032)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0x8000000000000000)
li x26, 0x0000000100000000 # initialize rs1
li x19, 0x8000000000000000 # initialize rs2
rolw x11, x26, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 1040)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0x8000000000000001)
li x6, 0x0000000100000000 # initialize rs1
li x12, 0x8000000000000001 # initialize rs2
rolw x28, x6, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x28, 1048)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0x7fffffffffffffff)
li x1, 0x0000000100000000 # initialize rs1
li x12, 0x7fffffffffffffff # initialize rs2
rolw x11, x1, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 1056)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0x7ffffffffffffffe)
li x27, 0x0000000100000000 # initialize rs1
li x15, 0x7ffffffffffffffe # initialize rs2
rolw x8, x27, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 1064)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0xffffffffffffffff)
li x28, 0x0000000100000000 # initialize rs1
li x30, 0xffffffffffffffff # initialize rs2
rolw x2, x28, x30 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 1072)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0xfffffffffffffffe)
li x1, 0x0000000100000000 # initialize rs1
li x11, 0xfffffffffffffffe # initialize rs2
rolw x12, x1, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 1080)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0x5bbc887763ae86f2)
li x2, 0x0000000100000000 # initialize rs1
li x16, 0x5bbc887763ae86f2 # initialize rs2
rolw x17, x2, x16 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 1088)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0xaaaaaaaaaaaaaaaa)
li x15, 0x0000000100000000 # initialize rs1
li x22, 0xaaaaaaaaaaaaaaaa # initialize rs2
rolw x24, x15, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 1096)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0x5555555555555555)
li x14, 0x0000000100000000 # initialize rs1
li x11, 0x5555555555555555 # initialize rs2
rolw x8, x14, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 1104)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0xffffffff)
li x26, 0x0000000100000000 # initialize rs1
li x17, 0x00000000ffffffff # initialize rs2
rolw x27, x26, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 1112)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0xfffffffe)
li x6, 0x0000000100000000 # initialize rs1
li x1, 0x00000000fffffffe # initialize rs2
rolw x28, x6, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x28, 1120)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0x100000000)
li x6, 0x0000000100000000 # initialize rs1
li x22, 0x0000000100000000 # initialize rs2
rolw x21, x6, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 1128)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0x100000001)
li x16, 0x0000000100000000 # initialize rs1
li x21, 0x0000000100000001 # initialize rs2
rolw x31, x16, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 1136)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0x0)
li x22, 0x0000000100000001 # initialize rs1
li x18, 0x0000000000000000 # initialize rs2
rolw x9, x22, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 1144)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0x1)
li x17, 0x0000000100000001 # initialize rs1
li x25, 0x0000000000000001 # initialize rs2
rolw x6, x17, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x6, 1152)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0x2)
li x16, 0x0000000100000001 # initialize rs1
li x15, 0x0000000000000002 # initialize rs2
rolw x24, x16, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 1160)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0x8000000000000000)
li x15, 0x0000000100000001 # initialize rs1
li x8, 0x8000000000000000 # initialize rs2
rolw x21, x15, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 1168)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0x8000000000000001)
li x21, 0x0000000100000001 # initialize rs1
li x1, 0x8000000000000001 # initialize rs2
rolw x31, x21, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 1176)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0x7fffffffffffffff)
li x5, 0x0000000100000001 # initialize rs1
li x3, 0x7fffffffffffffff # initialize rs2
rolw x15, x5, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 1184)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0x7ffffffffffffffe)
li x11, 0x0000000100000001 # initialize rs1
li x30, 0x7ffffffffffffffe # initialize rs2
rolw x20, x11, x30 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 1192)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0xffffffffffffffff)
li x5, 0x0000000100000001 # initialize rs1
li x18, 0xffffffffffffffff # initialize rs2
rolw x27, x5, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 1200)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0xfffffffffffffffe)
li x29, 0x0000000100000001 # initialize rs1
li x23, 0xfffffffffffffffe # initialize rs2
rolw x31, x29, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 1208)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0x5bbc887763ae86f2)
li x31, 0x0000000100000001 # initialize rs1
li x3, 0x5bbc887763ae86f2 # initialize rs2
rolw x18, x31, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 1216)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0xaaaaaaaaaaaaaaaa)
li x31, 0x0000000100000001 # initialize rs1
li x11, 0xaaaaaaaaaaaaaaaa # initialize rs2
rolw x7, x31, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 1224)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0x5555555555555555)
li x22, 0x0000000100000001 # initialize rs1
li x28, 0x5555555555555555 # initialize rs2
rolw x31, x22, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 1232)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0xffffffff)
li x22, 0x0000000100000001 # initialize rs1
li x8, 0x00000000ffffffff # initialize rs2
rolw x3, x22, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 1240)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0xfffffffe)
li x6, 0x0000000100000001 # initialize rs1
li x9, 0x00000000fffffffe # initialize rs2
rolw x28, x6, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x28, 1248)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0x100000000)
li x2, 0x0000000100000001 # initialize rs1
li x19, 0x0000000100000000 # initialize rs2
rolw x12, x2, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 1256)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0x100000001)
li x21, 0x0000000100000001 # initialize rs1
li x15, 0x0000000100000001 # initialize rs2
rolw x1, x21, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 1264)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x0)
li x0, 0x0563552aaf8f98c5 # initialize rs1
li x0, 0xd70e4701b8bdfb86 # initialize rs2
rolw x19, x0, x0 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 1272)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x1)
li x1, 0xcd10e50c848a4e4c # initialize rs1
li x1, 0x3d3cf61530b3862b # initialize rs2
rolw x23, x1, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 1280)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x2)
li x2, 0x93fcf8a0491e3319 # initialize rs1
li x2, 0x9ef570c6f6ceac96 # initialize rs2
rolw x30, x2, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 1288)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x3)
li x3, 0x263d866729ebfdba # initialize rs1
li x3, 0xd42c7c6658ec7c64 # initialize rs2
rolw x3, x3, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 1296)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x4)
mv x5, x4 # switch signature pointer register to avoid conflict with test
li x4, 0x2c877a7508dcbf4b # initialize rs1
li x4, 0x4ae3e8c8e851e176 # initialize rs2
rolw x8, x4, x4 # perform operation
RVTEST_SIGUPD(x5, x0, x8, 1304)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x5)
mv x7, x5 # switch signature pointer register to avoid conflict with test
li x5, 0xa5ae41fb4aee4ae6 # initialize rs1
li x5, 0xac5453f441c588e2 # initialize rs2
rolw x6, x5, x5 # perform operation
RVTEST_SIGUPD(x7, x0, x6, 1312)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x6)
li x6, 0x942dbb68979eb92b # initialize rs1
li x6, 0x3fe7d8d93a3884ea # initialize rs2
rolw x10, x6, x6 # perform operation
RVTEST_SIGUPD(x7, x0, x10, 1320)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x7)
mv x4, x7 # switch signature pointer register to avoid conflict with test
li x7, 0xd6c213b094ce91e4 # initialize rs1
li x7, 0x07d990aac5bd8bd1 # initialize rs2
rolw x28, x7, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x28, 1328)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x8)
li x8, 0x49f64702c3016d75 # initialize rs1
li x8, 0xf1af2852096cf686 # initialize rs2
rolw x29, x8, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 1336)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x9)
li x9, 0x00f03074756cac00 # initialize rs1
li x9, 0xe3853225d0fd52ac # initialize rs2
rolw x2, x9, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 1344)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x10)
li x10, 0x8d880617bd56ad23 # initialize rs1
li x10, 0x4c450dd009e8d73e # initialize rs2
rolw x27, x10, x10 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 1352)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x11)
li x11, 0x4d30a1dd8bd6ef2e # initialize rs1
li x11, 0x8b6bffedaf250b4d # initialize rs2
rolw x5, x11, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x5, 1360)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x12)
li x12, 0x0f42599c1a80ddc0 # initialize rs1
li x12, 0x64923c5274dfbb8f # initialize rs2
rolw x6, x12, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x6, 1368)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x13)
li x13, 0xd605f18bfd1cbacc # initialize rs1
li x13, 0xf5e091b9096745ff # initialize rs2
rolw x22, x13, x13 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 1376)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x14)
li x14, 0x8363001faabb39c7 # initialize rs1
li x14, 0x06a9a9f29030aa72 # initialize rs2
rolw x6, x14, x14 # perform operation
RVTEST_SIGUPD(x4, x0, x6, 1384)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x15)
li x15, 0xb245e53c12e080cf # initialize rs1
li x15, 0x53bea8faa1c19c14 # initialize rs2
rolw x16, x15, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 1392)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x16)
li x16, 0x8e0a9c93f64fbecf # initialize rs1
li x16, 0x492c4f59fd5fbae0 # initialize rs2
rolw x10, x16, x16 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 1400)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x17)
li x17, 0x2fb8b0302ab57891 # initialize rs1
li x17, 0xe4e16f8646748185 # initialize rs2
rolw x26, x17, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 1408)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x18)
li x18, 0xde56d382172b4162 # initialize rs1
li x18, 0x0a7034b83fa18938 # initialize rs2
rolw x26, x18, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 1416)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x19)
li x19, 0x8ebe33a2859c5581 # initialize rs1
li x19, 0xf928652ed576e3d3 # initialize rs2
rolw x12, x19, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 1424)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x20)
li x20, 0xabb8d39500fbfa45 # initialize rs1
li x20, 0x78ef0ff05a60364a # initialize rs2
rolw x14, x20, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 1432)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x21)
li x21, 0x3e5068dce4fd6e2b # initialize rs1
li x21, 0x9f81084148bb05e1 # initialize rs2
rolw x6, x21, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x6, 1440)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x22)
li x22, 0x71bdd9b186c16022 # initialize rs1
li x22, 0x51095177db54a2ba # initialize rs2
rolw x12, x22, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 1448)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x23)
li x23, 0x40ea523f6981bd72 # initialize rs1
li x23, 0x5044ec6270df102c # initialize rs2
rolw x28, x23, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x28, 1456)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x24)
li x24, 0xecb62db169a7c895 # initialize rs1
li x24, 0x2dc34be9a41f717d # initialize rs2
rolw x9, x24, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 1464)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x25)
li x25, 0x79eccab968946894 # initialize rs1
li x25, 0x3839f1b898bb0900 # initialize rs2
rolw x25, x25, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 1472)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x26)
li x26, 0x21bb797a5cdb0d0c # initialize rs1
li x26, 0x1a9a6ee2de0c60ac # initialize rs2
rolw x24, x26, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 1480)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x27)
li x27, 0x73232df198655e52 # initialize rs1
li x27, 0xb3e571c6e07b181d # initialize rs2
rolw x25, x27, x27 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 1488)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x28)
li x28, 0x1c1689ef8fbca67a # initialize rs1
li x28, 0x593631fe94a765c4 # initialize rs2
rolw x1, x28, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 1496)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x29)
li x29, 0xa66b316f1e7bf408 # initialize rs1
li x29, 0x4a56c40b055a29fc # initialize rs2
rolw x15, x29, x29 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 1504)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x30)
li x30, 0x4497709c505dda06 # initialize rs1
li x30, 0x41249ceeb9d7dde3 # initialize rs2
rolw x19, x30, x30 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 1512)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x31)
li x31, 0x7a20b9963bd1ec95 # initialize rs1
li x31, 0x822f4e90f9477afd # initialize rs2
rolw x23, x31, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 1520)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x0)
li x0, 0x81f625d74de7e45d # initialize rs1
li x25, 0x55f8b8831252ac23 # initialize rs2
rolw x0, x0, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x0, 1528)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x1)
li x1, 0x59b3b4951c2d8b79 # initialize rs1
li x11, 0x37ae8f6087a38167 # initialize rs2
rolw x1, x1, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 1536)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x2)
li x2, 0x7a9109b76e481e87 # initialize rs1
li x31, 0x47fd419e68685861 # initialize rs2
rolw x2, x2, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 1544)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x3)
li x3, 0x46889e18ea9a26fb # initialize rs1
li x26, 0x1261784e41f30179 # initialize rs2
rolw x3, x3, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 1552)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x4)
mv x5, x4 # switch signature pointer register to avoid conflict with test
li x4, 0x0a10c43443c2a4d3 # initialize rs1
li x3, 0x26ad61056a5b8966 # initialize rs2
rolw x4, x4, x3 # perform operation
RVTEST_SIGUPD(x5, x0, x4, 1560)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x5)
mv x6, x5 # switch signature pointer register to avoid conflict with test
li x5, 0x2ee76fdda1aadb03 # initialize rs1
li x27, 0x2911711742de8586 # initialize rs2
rolw x5, x5, x27 # perform operation
RVTEST_SIGUPD(x6, x0, x5, 1568)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x6)
mv x7, x6 # switch signature pointer register to avoid conflict with test
li x6, 0x03e109bfcf16fb0a # initialize rs1
li x1, 0x0f17124c37f69210 # initialize rs2
rolw x6, x6, x1 # perform operation
RVTEST_SIGUPD(x7, x0, x6, 1576)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x7)
mv x4, x7 # switch signature pointer register to avoid conflict with test
li x7, 0x3bd36db98240e5bc # initialize rs1
li x29, 0x820031f387fbe204 # initialize rs2
rolw x7, x7, x29 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 1584)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x8)
li x8, 0xf2e037c28fd8d4f4 # initialize rs1
li x10, 0xb9793c4af0aa1809 # initialize rs2
rolw x8, x8, x10 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 1592)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x9)
li x9, 0xa47762c0d24d5920 # initialize rs1
li x27, 0x75b30652893a9f9a # initialize rs2
rolw x9, x9, x27 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 1600)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x10)
li x10, 0x93d5cdaa1cc99ff7 # initialize rs1
li x18, 0xde1cd235b446a9fc # initialize rs2
rolw x10, x10, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 1608)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x11)
li x11, 0x30b47679f02633ad # initialize rs1
li x15, 0x0bf7cdc179462b1e # initialize rs2
rolw x11, x11, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 1616)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x12)
li x12, 0x28a23fa9c9288377 # initialize rs1
li x23, 0xfe4ccfc345fd25e8 # initialize rs2
rolw x12, x12, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 1624)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x13)
li x13, 0xbbfd1e769b65e4cf # initialize rs1
li x9, 0x6287ef15bef1e066 # initialize rs2
rolw x13, x13, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 1632)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x14)
li x14, 0x86bb47d7ec3f72a3 # initialize rs1
li x17, 0x0cac0ebe39f7ce01 # initialize rs2
rolw x14, x14, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 1640)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x15)
li x15, 0xff5230886da33cff # initialize rs1
li x18, 0x1b148354446d797a # initialize rs2
rolw x15, x15, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 1648)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x16)
li x16, 0x7e5ccf0db11f138d # initialize rs1
li x14, 0x5b54e0b6ba6da00a # initialize rs2
rolw x16, x16, x14 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 1656)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x17)
li x17, 0x132875521fc952c1 # initialize rs1
li x27, 0xfe678818444abd3a # initialize rs2
rolw x17, x17, x27 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 1664)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x18)
li x18, 0x17a503844f2327d8 # initialize rs1
li x7, 0x364d163702a05f07 # initialize rs2
rolw x18, x18, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 1672)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x19)
li x19, 0x2cb458d49772c437 # initialize rs1
li x5, 0xa1e77214cd074c05 # initialize rs2
rolw x19, x19, x5 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 1680)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x20)
li x20, 0x53b74b208f393a32 # initialize rs1
li x3, 0x878f4bd3fe0cae3c # initialize rs2
rolw x20, x20, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 1688)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x21)
li x21, 0x9953d8487acd807b # initialize rs1
li x30, 0x3ed6404746d86c9f # initialize rs2
rolw x21, x21, x30 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 1696)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x22)
li x22, 0x0956629d9caa2644 # initialize rs1
li x5, 0x9b02850f0e2146de # initialize rs2
rolw x22, x22, x5 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 1704)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x23)
li x23, 0xa45a11c7d70cbd8f # initialize rs1
li x18, 0x5c39cf07dd48ff9d # initialize rs2
rolw x23, x23, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 1712)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x24)
li x24, 0x2f3df163805ad08b # initialize rs1
li x11, 0xe322a88b4d5d2415 # initialize rs2
rolw x24, x24, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 1720)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x25)
li x25, 0xb5f74fe3489d6dfd # initialize rs1
li x20, 0x65e342a31a26247f # initialize rs2
rolw x25, x25, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 1728)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x26)
li x26, 0xaf04af0232da429f # initialize rs1
li x1, 0xe7b1cb84afa7ea23 # initialize rs2
rolw x26, x26, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 1736)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x27)
li x27, 0x9504e6c9fe1dd415 # initialize rs1
li x1, 0x041ed7cc788faeb0 # initialize rs2
rolw x27, x27, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 1744)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x28)
li x28, 0x197c1d1d3f034a55 # initialize rs1
li x30, 0xf4dd54669dd8f461 # initialize rs2
rolw x28, x28, x30 # perform operation
RVTEST_SIGUPD(x4, x0, x28, 1752)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x29)
li x29, 0xfe22dc798416f0a4 # initialize rs1
li x12, 0xbf8fc219950ca168 # initialize rs2
rolw x29, x29, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 1760)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x30)
li x30, 0xacf03e42d21adf1a # initialize rs1
li x10, 0xec36890fae721da4 # initialize rs2
rolw x30, x30, x10 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 1768)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x31)
li x31, 0xe6f250f96172bb91 # initialize rs1
li x13, 0xea42d68344234b52 # initialize rs2
rolw x31, x31, x13 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 1776)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x0)
li x6, 0x283db92fe62077c3 # initialize rs1
li x0, 0x14cf84616732c4bd # initialize rs2
rolw x0, x6, x0 # perform operation
RVTEST_SIGUPD(x4, x0, x0, 1784)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x1)
li x21, 0xb91e67e3f213a779 # initialize rs1
li x1, 0xa68dfd667e0e6589 # initialize rs2
rolw x1, x21, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 1792)
addi x4, x4, 1800 # increment signature pointer and reset offset

# Testcase cmp_rd_rs2 (Test rd = rs2 = x2)
li x16, 0xcce9cda55a3272e5 # initialize rs1
li x2, 0x1554083f91037717 # initialize rs2
rolw x2, x16, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 0)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x3)
li x12, 0x8ba2d4cb7b6b7cc5 # initialize rs1
li x3, 0x8649596da67896b9 # initialize rs2
rolw x3, x12, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 8)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x4)
mv x5, x4 # switch signature pointer register to avoid conflict with test
li x29, 0x03ea264d5cd263a0 # initialize rs1
li x4, 0x0e14e7ee69abfa8e # initialize rs2
rolw x4, x29, x4 # perform operation
RVTEST_SIGUPD(x5, x0, x4, 16)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x5)
mv x6, x5 # switch signature pointer register to avoid conflict with test
li x29, 0x133ab8f4e18637de # initialize rs1
li x5, 0x86083cfb7b99e63f # initialize rs2
rolw x5, x29, x5 # perform operation
RVTEST_SIGUPD(x6, x0, x5, 24)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x6)
mv x7, x6 # switch signature pointer register to avoid conflict with test
li x26, 0x4ad31dc330b708f6 # initialize rs1
li x6, 0xb9ba91ee79930298 # initialize rs2
rolw x6, x26, x6 # perform operation
RVTEST_SIGUPD(x7, x0, x6, 32)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x7)
mv x4, x7 # switch signature pointer register to avoid conflict with test
li x22, 0xfed94fa292d535e1 # initialize rs1
li x7, 0x9defb613be99fd90 # initialize rs2
rolw x7, x22, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 40)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x8)
li x12, 0xa7f635bd37bec7b9 # initialize rs1
li x8, 0xccd6f083fed47519 # initialize rs2
rolw x8, x12, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 48)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x9)
li x23, 0xed56cd5e6a692326 # initialize rs1
li x9, 0x73260cd3966815a6 # initialize rs2
rolw x9, x23, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 56)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x10)
li x22, 0x7a15a8de4b9c27eb # initialize rs1
li x10, 0xe6048e3e5ffcd3a7 # initialize rs2
rolw x10, x22, x10 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 64)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x11)
li x16, 0xf99776304046da1e # initialize rs1
li x11, 0x7617c8e12b221d9a # initialize rs2
rolw x11, x16, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 72)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x12)
li x14, 0xa7bd0c35c872b2d3 # initialize rs1
li x12, 0x5d3c986665192da1 # initialize rs2
rolw x12, x14, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 80)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x13)
li x30, 0x6b7087aab0c145c7 # initialize rs1
li x13, 0x9ed9ba72df799aeb # initialize rs2
rolw x13, x30, x13 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 88)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x14)
li x10, 0xe43ac08b37c5d6ce # initialize rs1
li x14, 0x9e9977fa9775656d # initialize rs2
rolw x14, x10, x14 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 96)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x15)
li x24, 0xab219ccef911b92d # initialize rs1
li x15, 0x35645805dfa914e8 # initialize rs2
rolw x15, x24, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 104)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x16)
li x6, 0x7424ce2e0173e65b # initialize rs1
li x16, 0xd56f6ec20db9748f # initialize rs2
rolw x16, x6, x16 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 112)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x17)
li x26, 0x31ea9be8ee36ffb4 # initialize rs1
li x17, 0x2ab7316116e85039 # initialize rs2
rolw x17, x26, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 120)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x18)
li x17, 0x107ac588eeaa7b19 # initialize rs1
li x18, 0x8a78da5c694ddd43 # initialize rs2
rolw x18, x17, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 128)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x19)
li x3, 0x31d298b127b5ef22 # initialize rs1
li x19, 0xf52c1771b87f8974 # initialize rs2
rolw x19, x3, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 136)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x20)
li x5, 0x6c77ca2ca7d06fd7 # initialize rs1
li x20, 0xb424ba28b3358a16 # initialize rs2
rolw x20, x5, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 144)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x21)
li x28, 0x1ecd66f8bb3a145f # initialize rs1
li x21, 0x8edc4a940cdf9244 # initialize rs2
rolw x21, x28, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 152)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x22)
li x15, 0xd954069d1dd2c304 # initialize rs1
li x22, 0x113ebe30850ec18d # initialize rs2
rolw x22, x15, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 160)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x23)
li x21, 0x5fb462ac07880bf8 # initialize rs1
li x23, 0xc38ef32697d3e82b # initialize rs2
rolw x23, x21, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 168)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x24)
li x3, 0x07a8385d068f34db # initialize rs1
li x24, 0xc07b0a205af2a744 # initialize rs2
rolw x24, x3, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 176)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x25)
li x8, 0xd8582fd59f1fb238 # initialize rs1
li x25, 0x7fef9ad82585bc4b # initialize rs2
rolw x25, x8, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 184)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x26)
li x15, 0xc27edc9b28afc94c # initialize rs1
li x26, 0x39b28eb661e23fd1 # initialize rs2
rolw x26, x15, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 192)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x27)
li x16, 0x6bb6fc861f500c70 # initialize rs1
li x27, 0x8fc40e960844c087 # initialize rs2
rolw x27, x16, x27 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 200)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x28)
li x21, 0xc62d279a24b8ba2f # initialize rs1
li x28, 0xce3d1be8d4ebf7f4 # initialize rs2
rolw x28, x21, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x28, 208)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x29)
li x13, 0xaeb1c59ca3c08178 # initialize rs1
li x29, 0x42d8edae8e17a61a # initialize rs2
rolw x29, x13, x29 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 216)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x30)
li x15, 0x3603df9ce7d46a65 # initialize rs1
li x30, 0x6bb300d2cf582e97 # initialize rs2
rolw x30, x15, x30 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 224)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x31)
li x25, 0x1449b41287226b74 # initialize rs1
li x31, 0xe77192efa29c7c3c # initialize rs2
rolw x31, x25, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 232)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x0)
li x0, 0x3a23b6299543c2b6 # initialize rs1
li x0, 0x4250441f8eed9622 # initialize rs2
rolw x0, x0, x0 # perform operation
RVTEST_SIGUPD(x4, x0, x0, 240)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x1)
li x1, 0xeb79883aecf3b6c7 # initialize rs1
li x1, 0x186787df55fd8fc9 # initialize rs2
rolw x1, x1, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 248)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x2)
li x2, 0xaabed4c7a42a71a7 # initialize rs1
li x2, 0x7e207f972a08df44 # initialize rs2
rolw x2, x2, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 256)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x3)
li x3, 0x289fe591806d9d0e # initialize rs1
li x3, 0x4a8ffac3bfa37ab7 # initialize rs2
rolw x3, x3, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 264)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x4)
mv x5, x4 # switch signature pointer register to avoid conflict with test
li x4, 0x66ca1a21a13deb68 # initialize rs1
li x4, 0x49b03f1463278afa # initialize rs2
rolw x4, x4, x4 # perform operation
RVTEST_SIGUPD(x5, x0, x4, 272)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x5)
mv x6, x5 # switch signature pointer register to avoid conflict with test
li x5, 0xa5514fbe3d1fb849 # initialize rs1
li x5, 0x51a91dff94519c17 # initialize rs2
rolw x5, x5, x5 # perform operation
RVTEST_SIGUPD(x6, x0, x5, 280)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x6)
mv x7, x6 # switch signature pointer register to avoid conflict with test
li x6, 0xac7696c3978bf354 # initialize rs1
li x6, 0x8f855be995c5d1ba # initialize rs2
rolw x6, x6, x6 # perform operation
RVTEST_SIGUPD(x7, x0, x6, 288)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x7)
mv x4, x7 # switch signature pointer register to avoid conflict with test
li x7, 0x487142c2c205d3b8 # initialize rs1
li x7, 0x6fab09749193d376 # initialize rs2
rolw x7, x7, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 296)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x8)
li x8, 0x54402b447f4d87a8 # initialize rs1
li x8, 0x985c3699e05081f8 # initialize rs2
rolw x8, x8, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 304)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x9)
li x9, 0xdee276c2b7867993 # initialize rs1
li x9, 0xc34db4de1cc95946 # initialize rs2
rolw x9, x9, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 312)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x10)
li x10, 0xbea117225d9c2136 # initialize rs1
li x10, 0x53b27227477af528 # initialize rs2
rolw x10, x10, x10 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 320)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x11)
li x11, 0x45187e6e05a18d04 # initialize rs1
li x11, 0x68335e703102ea09 # initialize rs2
rolw x11, x11, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 328)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x12)
li x12, 0x8ca9878b8a21a6cf # initialize rs1
li x12, 0xd9f720a1cd2cb493 # initialize rs2
rolw x12, x12, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 336)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x13)
li x13, 0xc5c45afec86d4780 # initialize rs1
li x13, 0x0b3be9883d75a693 # initialize rs2
rolw x13, x13, x13 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 344)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x14)
li x14, 0x033d32db162c3264 # initialize rs1
li x14, 0x758eea8d33638707 # initialize rs2
rolw x14, x14, x14 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 352)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x15)
li x15, 0x5abf3471cac03b3f # initialize rs1
li x15, 0x1e3b75d771b01195 # initialize rs2
rolw x15, x15, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 360)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x16)
li x16, 0x66ca60316a22261f # initialize rs1
li x16, 0xa50ee5d6de3603d1 # initialize rs2
rolw x16, x16, x16 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 368)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x17)
li x17, 0x667b36fa97c0fccc # initialize rs1
li x17, 0xc7dbe6a673f4621a # initialize rs2
rolw x17, x17, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 376)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x18)
li x18, 0xa7f5ca5dbb8c5b22 # initialize rs1
li x18, 0xd7770deceb227c76 # initialize rs2
rolw x18, x18, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 384)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x19)
li x19, 0xd6d001836e6d2128 # initialize rs1
li x19, 0xa93ecd607ba01f3b # initialize rs2
rolw x19, x19, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 392)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x20)
li x20, 0x1a03146bad7df70b # initialize rs1
li x20, 0x0016cc110a0297a9 # initialize rs2
rolw x20, x20, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 400)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x21)
li x21, 0x6132d6fed7cccb6a # initialize rs1
li x21, 0xf9dc9e7cc502c51b # initialize rs2
rolw x21, x21, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 408)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x22)
li x22, 0x45d83f0b684051b9 # initialize rs1
li x22, 0x5fc1d0496a14b63c # initialize rs2
rolw x22, x22, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 416)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x23)
li x23, 0x7c3798ead4a66962 # initialize rs1
li x23, 0x8619a96ee401c677 # initialize rs2
rolw x23, x23, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 424)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x24)
li x24, 0x1e5b283865ef6f0c # initialize rs1
li x24, 0x64186e6eaccbdae1 # initialize rs2
rolw x24, x24, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 432)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x25)
li x25, 0x72303ef75959ade3 # initialize rs1
li x25, 0x35b4dfdd7f23c79e # initialize rs2
rolw x25, x25, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 440)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x26)
li x26, 0xfbeb6c15759ac29b # initialize rs1
li x26, 0x134b84bdcc5a0d69 # initialize rs2
rolw x26, x26, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 448)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x27)
li x27, 0x039420ea17e77efe # initialize rs1
li x27, 0x4dae193ae8151f66 # initialize rs2
rolw x27, x27, x27 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 456)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x28)
li x28, 0x9d4385421bcd2638 # initialize rs1
li x28, 0xb255925865ea232d # initialize rs2
rolw x28, x28, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x28, 464)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x29)
li x29, 0xd1132d727a502d6c # initialize rs1
li x29, 0xb600685cf826dde7 # initialize rs2
rolw x29, x29, x29 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 472)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x30)
li x30, 0xc678831663752bcb # initialize rs1
li x30, 0xbc3d17cc67ce1995 # initialize rs2
rolw x30, x30, x30 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 480)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x31)
li x31, 0x85b5f6f05e133fc6 # initialize rs1
li x31, 0x4fd48756efe8a147 # initialize rs2
rolw x31, x31, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 488)

# Testcase cp_gpr/fpr_hazard nohaz test
add x31, x10, x8 # perform first operation
rolw x17, x14, x29 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard nohaz test
add x10, x26, x23 # perform first operation
rolw x13, x20, x24 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard nohaz test
add x7, x28, x13 # perform first operation
rolw x27, x6, x5 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard raw test
add x3, x18, x31 # perform first operation
rolw x31, x14, x18 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard raw test
add x12, x20, x31 # perform first operation
rolw x18, x17, x12 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard raw test
add x21, x28, x30 # perform first operation
rolw x30, x23, x27 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard waw test
add x29, x28, x20 # perform first operation
rolw x29, x11, x17 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard waw test
add x14, x31, x28 # perform first operation
rolw x14, x5, x18 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard waw test
add x31, x16, x27 # perform first operation
rolw x31, x30, x8 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard war test
add x13, x25, x26 # perform first operation
rolw x25, x23, x12 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard war test
add x11, x31, x28 # perform first operation
rolw x28, x7, x25 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard war test
add x24, x14, x5 # perform first operation
rolw x19, x22, x1 # perform second (triggering) operation

#.EQU SIGSIZE,4096


// ******************
// Tests from: WALLY-COV-sext.b.S
// ******************


# initialize signature pointer
la x4, begin_signature

    
# Testcase cp_rs1 (Test source rs1 = x0)
li x0, 0xa8e8e2d1a0ff71fe # initialize rs1
sext.b x23, x0 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 0)

# Testcase cp_rs1 (Test source rs1 = x1)
li x1, 0x09ab35d83e4cda9e # initialize rs1
sext.b x3, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 8)

# Testcase cp_rs1 (Test source rs1 = x2)
li x2, 0x57577d959572fca4 # initialize rs1
sext.b x28, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x28, 16)

# Testcase cp_rs1 (Test source rs1 = x3)
li x3, 0xdee8e22e35cd3825 # initialize rs1
sext.b x12, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 24)

# Testcase cp_rs1 (Test source rs1 = x4)
mv x5, x4 # switch signature pointer register to avoid conflict with test
li x4, 0xab328ff59b65f706 # initialize rs1
sext.b x11, x4 # perform operation
RVTEST_SIGUPD(x5, x0, x11, 32)

# Testcase cp_rs1 (Test source rs1 = x5)
mv x6, x5 # switch signature pointer register to avoid conflict with test
li x5, 0x353f00efde17d3cd # initialize rs1
sext.b x29, x5 # perform operation
RVTEST_SIGUPD(x6, x0, x29, 40)

# Testcase cp_rs1 (Test source rs1 = x6)
mv x7, x6 # switch signature pointer register to avoid conflict with test
li x6, 0x9a81c2e386e594de # initialize rs1
sext.b x31, x6 # perform operation
RVTEST_SIGUPD(x7, x0, x31, 48)

# Testcase cp_rs1 (Test source rs1 = x7)
mv x5, x7 # switch signature pointer register to avoid conflict with test
li x7, 0x06c3607a6cd01ac7 # initialize rs1
sext.b x4, x7 # perform operation
RVTEST_SIGUPD(x5, x0, x4, 56)

# Testcase cp_rs1 (Test source rs1 = x8)
li x8, 0xe3632ea48364a1ad # initialize rs1
sext.b x30, x8 # perform operation
RVTEST_SIGUPD(x5, x0, x30, 64)

# Testcase cp_rs1 (Test source rs1 = x9)
li x9, 0x5b3bf512ed69428c # initialize rs1
sext.b x1, x9 # perform operation
RVTEST_SIGUPD(x5, x0, x1, 72)

# Testcase cp_rs1 (Test source rs1 = x10)
li x10, 0x54761ef48d375475 # initialize rs1
sext.b x20, x10 # perform operation
RVTEST_SIGUPD(x5, x0, x20, 80)

# Testcase cp_rs1 (Test source rs1 = x11)
li x11, 0xc8be18059f228d52 # initialize rs1
sext.b x19, x11 # perform operation
RVTEST_SIGUPD(x5, x0, x19, 88)

# Testcase cp_rs1 (Test source rs1 = x12)
li x12, 0xe3d0ad97ca1c963a # initialize rs1
sext.b x7, x12 # perform operation
RVTEST_SIGUPD(x5, x0, x7, 96)

# Testcase cp_rs1 (Test source rs1 = x13)
li x13, 0xde48042272e5560e # initialize rs1
sext.b x11, x13 # perform operation
RVTEST_SIGUPD(x5, x0, x11, 104)

# Testcase cp_rs1 (Test source rs1 = x14)
li x14, 0xe960bcb71cd15224 # initialize rs1
sext.b x21, x14 # perform operation
RVTEST_SIGUPD(x5, x0, x21, 112)

# Testcase cp_rs1 (Test source rs1 = x15)
li x15, 0xfd20670ebc4d97d5 # initialize rs1
sext.b x12, x15 # perform operation
RVTEST_SIGUPD(x5, x0, x12, 120)

# Testcase cp_rs1 (Test source rs1 = x16)
li x16, 0x95abf8694590d4d6 # initialize rs1
sext.b x18, x16 # perform operation
RVTEST_SIGUPD(x5, x0, x18, 128)

# Testcase cp_rs1 (Test source rs1 = x17)
li x17, 0x2ca7b10b78c78f8b # initialize rs1
sext.b x12, x17 # perform operation
RVTEST_SIGUPD(x5, x0, x12, 136)

# Testcase cp_rs1 (Test source rs1 = x18)
li x18, 0x29396be07c5a4a14 # initialize rs1
sext.b x28, x18 # perform operation
RVTEST_SIGUPD(x5, x0, x28, 144)

# Testcase cp_rs1 (Test source rs1 = x19)
li x19, 0x8edf85a8f12822fb # initialize rs1
sext.b x28, x19 # perform operation
RVTEST_SIGUPD(x5, x0, x28, 152)

# Testcase cp_rs1 (Test source rs1 = x20)
li x20, 0x50e7c71242638f72 # initialize rs1
sext.b x18, x20 # perform operation
RVTEST_SIGUPD(x5, x0, x18, 160)

# Testcase cp_rs1 (Test source rs1 = x21)
li x21, 0xcca60acedaf4e5e8 # initialize rs1
sext.b x20, x21 # perform operation
RVTEST_SIGUPD(x5, x0, x20, 168)

# Testcase cp_rs1 (Test source rs1 = x22)
li x22, 0x79fb2b6efd248b0a # initialize rs1
sext.b x1, x22 # perform operation
RVTEST_SIGUPD(x5, x0, x1, 176)

# Testcase cp_rs1 (Test source rs1 = x23)
li x23, 0x0e76f4d80aad8a17 # initialize rs1
sext.b x30, x23 # perform operation
RVTEST_SIGUPD(x5, x0, x30, 184)

# Testcase cp_rs1 (Test source rs1 = x24)
li x24, 0x4eddb412891deb36 # initialize rs1
sext.b x2, x24 # perform operation
RVTEST_SIGUPD(x5, x0, x2, 192)

# Testcase cp_rs1 (Test source rs1 = x25)
li x25, 0xa168e5ef3069f53c # initialize rs1
sext.b x30, x25 # perform operation
RVTEST_SIGUPD(x5, x0, x30, 200)

# Testcase cp_rs1 (Test source rs1 = x26)
li x26, 0x0c8c315eb8f70776 # initialize rs1
sext.b x31, x26 # perform operation
RVTEST_SIGUPD(x5, x0, x31, 208)

# Testcase cp_rs1 (Test source rs1 = x27)
li x27, 0xf24f211ab13099a0 # initialize rs1
sext.b x23, x27 # perform operation
RVTEST_SIGUPD(x5, x0, x23, 216)

# Testcase cp_rs1 (Test source rs1 = x28)
li x28, 0x185b5a0c3a43ae4a # initialize rs1
sext.b x12, x28 # perform operation
RVTEST_SIGUPD(x5, x0, x12, 224)

# Testcase cp_rs1 (Test source rs1 = x29)
li x29, 0x8afabf41ee0e328e # initialize rs1
sext.b x26, x29 # perform operation
RVTEST_SIGUPD(x5, x0, x26, 232)

# Testcase cp_rs1 (Test source rs1 = x30)
li x30, 0x5ee3a77aac7ef263 # initialize rs1
sext.b x14, x30 # perform operation
RVTEST_SIGUPD(x5, x0, x14, 240)

# Testcase cp_rs1 (Test source rs1 = x31)
li x31, 0xa9dd71c023fbeff8 # initialize rs1
sext.b x28, x31 # perform operation
RVTEST_SIGUPD(x5, x0, x28, 248)

# Testcase cp_rd (Test destination rd = x0)
li x21, 0x79c021cf10d4f549 # initialize rs1
sext.b x0, x21 # perform operation
RVTEST_SIGUPD(x5, x0, x0, 256)

# Testcase cp_rd (Test destination rd = x1)
li x10, 0x8e837caa197b1d69 # initialize rs1
sext.b x1, x10 # perform operation
RVTEST_SIGUPD(x5, x0, x1, 264)

# Testcase cp_rd (Test destination rd = x2)
li x17, 0x382d1906e223dc7e # initialize rs1
sext.b x2, x17 # perform operation
RVTEST_SIGUPD(x5, x0, x2, 272)

# Testcase cp_rd (Test destination rd = x3)
li x13, 0xba74b7b3c5a7e526 # initialize rs1
sext.b x3, x13 # perform operation
RVTEST_SIGUPD(x5, x0, x3, 280)

# Testcase cp_rd (Test destination rd = x4)
li x30, 0x144abf98509cce52 # initialize rs1
sext.b x4, x30 # perform operation
RVTEST_SIGUPD(x5, x0, x4, 288)

# Testcase cp_rd (Test destination rd = x5)
mv x6, x5 # switch signature pointer register to avoid conflict with test
li x27, 0x5bfa32415605c32d # initialize rs1
sext.b x5, x27 # perform operation
RVTEST_SIGUPD(x6, x0, x5, 296)

# Testcase cp_rd (Test destination rd = x6)
mv x4, x6 # switch signature pointer register to avoid conflict with test
li x20, 0x51d08650984da676 # initialize rs1
sext.b x6, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x6, 304)

# Testcase cp_rd (Test destination rd = x7)
li x17, 0x156e6652aab7519f # initialize rs1
sext.b x7, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 312)

# Testcase cp_rd (Test destination rd = x8)
li x14, 0xebbac4672ff25190 # initialize rs1
sext.b x8, x14 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 320)

# Testcase cp_rd (Test destination rd = x9)
li x22, 0xeef134911f21370f # initialize rs1
sext.b x9, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 328)

# Testcase cp_rd (Test destination rd = x10)
li x19, 0x1ebd992f37340522 # initialize rs1
sext.b x10, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 336)

# Testcase cp_rd (Test destination rd = x11)
li x21, 0x06ba186b306b06c9 # initialize rs1
sext.b x11, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 344)

# Testcase cp_rd (Test destination rd = x12)
li x13, 0x41dbadc77e621a75 # initialize rs1
sext.b x12, x13 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 352)

# Testcase cp_rd (Test destination rd = x13)
li x2, 0x842f2ea4b2826402 # initialize rs1
sext.b x13, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 360)

# Testcase cp_rd (Test destination rd = x14)
li x8, 0x8ed6e897736d7d90 # initialize rs1
sext.b x14, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 368)

# Testcase cp_rd (Test destination rd = x15)
li x10, 0x1d06ab9f7b21a2f1 # initialize rs1
sext.b x15, x10 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 376)

# Testcase cp_rd (Test destination rd = x16)
li x22, 0x55124381c86a2761 # initialize rs1
sext.b x16, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 384)

# Testcase cp_rd (Test destination rd = x17)
li x25, 0xb2c983c18a6b1033 # initialize rs1
sext.b x17, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 392)

# Testcase cp_rd (Test destination rd = x18)
li x19, 0x185b555048ee7c93 # initialize rs1
sext.b x18, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 400)

# Testcase cp_rd (Test destination rd = x19)
li x3, 0x4eb902e90b6326ea # initialize rs1
sext.b x19, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 408)

# Testcase cp_rd (Test destination rd = x20)
li x24, 0xf398c031083c1a47 # initialize rs1
sext.b x20, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 416)

# Testcase cp_rd (Test destination rd = x21)
li x22, 0x2ebe71b0ac6e3aeb # initialize rs1
sext.b x21, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 424)

# Testcase cp_rd (Test destination rd = x22)
li x5, 0xb0f937f695566501 # initialize rs1
sext.b x22, x5 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 432)

# Testcase cp_rd (Test destination rd = x23)
li x14, 0x2ab3f82e57df332f # initialize rs1
sext.b x23, x14 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 440)

# Testcase cp_rd (Test destination rd = x24)
li x27, 0x427b7fe0ae2b6efb # initialize rs1
sext.b x24, x27 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 448)

# Testcase cp_rd (Test destination rd = x25)
li x11, 0xe1d5269b124e3882 # initialize rs1
sext.b x25, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 456)

# Testcase cp_rd (Test destination rd = x26)
li x28, 0x4f64abc22f8a6231 # initialize rs1
sext.b x26, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 464)

# Testcase cp_rd (Test destination rd = x27)
li x8, 0x1c51469384164453 # initialize rs1
sext.b x27, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 472)

# Testcase cp_rd (Test destination rd = x28)
li x13, 0xcf1130a2b5c180c3 # initialize rs1
sext.b x28, x13 # perform operation
RVTEST_SIGUPD(x4, x0, x28, 480)

# Testcase cp_rd (Test destination rd = x29)
li x8, 0xc14794c889bfb8c4 # initialize rs1
sext.b x29, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 488)

# Testcase cp_rd (Test destination rd = x30)
li x9, 0xf30f77f2366bff40 # initialize rs1
sext.b x30, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 496)

# Testcase cp_rd (Test destination rd = x31)
li x30, 0x34b40423cf42a082 # initialize rs1
sext.b x31, x30 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 504)

# Testcase cp_rs1_corners (Test source rs1 value = 0x0)
li x26, 0x0000000000000000 # initialize rs1
sext.b x30, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 512)

# Testcase cp_rs1_corners (Test source rs1 value = 0x1)
li x21, 0x0000000000000001 # initialize rs1
sext.b x8, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 520)

# Testcase cp_rs1_corners (Test source rs1 value = 0x2)
li x5, 0x0000000000000002 # initialize rs1
sext.b x13, x5 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 528)

# Testcase cp_rs1_corners (Test source rs1 value = 0x8000000000000000)
li x1, 0x8000000000000000 # initialize rs1
sext.b x25, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 536)

# Testcase cp_rs1_corners (Test source rs1 value = 0x8000000000000001)
li x25, 0x8000000000000001 # initialize rs1
sext.b x19, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 544)

# Testcase cp_rs1_corners (Test source rs1 value = 0x7fffffffffffffff)
li x24, 0x7fffffffffffffff # initialize rs1
sext.b x25, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 552)

# Testcase cp_rs1_corners (Test source rs1 value = 0x7ffffffffffffffe)
li x22, 0x7ffffffffffffffe # initialize rs1
sext.b x26, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 560)

# Testcase cp_rs1_corners (Test source rs1 value = 0xffffffffffffffff)
li x12, 0xffffffffffffffff # initialize rs1
sext.b x9, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 568)

# Testcase cp_rs1_corners (Test source rs1 value = 0xfffffffffffffffe)
li x2, 0xfffffffffffffffe # initialize rs1
sext.b x19, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 576)

# Testcase cp_rs1_corners (Test source rs1 value = 0x5bbc887763ae86f2)
li x14, 0x5bbc887763ae86f2 # initialize rs1
sext.b x21, x14 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 584)

# Testcase cp_rs1_corners (Test source rs1 value = 0xaaaaaaaaaaaaaaaa)
li x18, 0xaaaaaaaaaaaaaaaa # initialize rs1
sext.b x24, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 592)

# Testcase cp_rs1_corners (Test source rs1 value = 0x5555555555555555)
li x28, 0x5555555555555555 # initialize rs1
sext.b x6, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x6, 600)

# Testcase cp_rs1_corners (Test source rs1 value = 0xffffffff)
li x22, 0x00000000ffffffff # initialize rs1
sext.b x8, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 608)

# Testcase cp_rs1_corners (Test source rs1 value = 0xfffffffe)
li x22, 0x00000000fffffffe # initialize rs1
sext.b x15, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 616)

# Testcase cp_rs1_corners (Test source rs1 value = 0x100000000)
li x24, 0x0000000100000000 # initialize rs1
sext.b x30, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 624)

# Testcase cp_rs1_corners (Test source rs1 value = 0x100000001)
li x1, 0x0000000100000001 # initialize rs1
sext.b x6, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x6, 632)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x0)
li x0, 0xf0cbfd902e0a4e4b # initialize rs1
sext.b x0, x0 # perform operation
RVTEST_SIGUPD(x4, x0, x0, 640)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x1)
li x1, 0x94faefff4f8c85f4 # initialize rs1
sext.b x1, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 648)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x2)
li x2, 0x7a98b5ae8bbc2fa6 # initialize rs1
sext.b x2, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 656)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x3)
li x3, 0x6722c9d50f046a05 # initialize rs1
sext.b x3, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 664)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x4)
mv x5, x4 # switch signature pointer register to avoid conflict with test
li x4, 0xe4afe64ed95b6292 # initialize rs1
sext.b x4, x4 # perform operation
RVTEST_SIGUPD(x5, x0, x4, 672)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x5)
mv x6, x5 # switch signature pointer register to avoid conflict with test
li x5, 0x1913356b3621967a # initialize rs1
sext.b x5, x5 # perform operation
RVTEST_SIGUPD(x6, x0, x5, 680)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x6)
mv x7, x6 # switch signature pointer register to avoid conflict with test
li x6, 0xf45b01e28c50344b # initialize rs1
sext.b x6, x6 # perform operation
RVTEST_SIGUPD(x7, x0, x6, 688)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x7)
mv x4, x7 # switch signature pointer register to avoid conflict with test
li x7, 0x7883a0646bc18aa6 # initialize rs1
sext.b x7, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 696)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x8)
li x8, 0x1c5d5ec3c55ce76f # initialize rs1
sext.b x8, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 704)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x9)
li x9, 0x40af114ada9fb1b4 # initialize rs1
sext.b x9, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 712)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x10)
li x10, 0x020a2d288f1940cd # initialize rs1
sext.b x10, x10 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 720)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x11)
li x11, 0xcbcc9280f9a96997 # initialize rs1
sext.b x11, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 728)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x12)
li x12, 0xe554e0a0cb21c9ad # initialize rs1
sext.b x12, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 736)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x13)
li x13, 0x04f054b07bc794f6 # initialize rs1
sext.b x13, x13 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 744)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x14)
li x14, 0x7540b71c50d32c26 # initialize rs1
sext.b x14, x14 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 752)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x15)
li x15, 0x2d5b8d275f28efe7 # initialize rs1
sext.b x15, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 760)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x16)
li x16, 0xba656d5edb3b7f08 # initialize rs1
sext.b x16, x16 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 768)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x17)
li x17, 0x7d3c4c5660d16e50 # initialize rs1
sext.b x17, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 776)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x18)
li x18, 0x5adda3d2e0c65d2e # initialize rs1
sext.b x18, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 784)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x19)
li x19, 0x80175f48c3099d14 # initialize rs1
sext.b x19, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 792)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x20)
li x20, 0xa8a6ffc1defff724 # initialize rs1
sext.b x20, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 800)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x21)
li x21, 0xf9c4e60b668bc03a # initialize rs1
sext.b x21, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 808)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x22)
li x22, 0x2eb8abd6b70bd3b4 # initialize rs1
sext.b x22, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 816)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x23)
li x23, 0x09a42aaf6d1d2918 # initialize rs1
sext.b x23, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 824)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x24)
li x24, 0xf0bfee05fca10aed # initialize rs1
sext.b x24, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 832)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x25)
li x25, 0x3188e3e63f7729ca # initialize rs1
sext.b x25, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 840)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x26)
li x26, 0x3ee05356cbad6395 # initialize rs1
sext.b x26, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 848)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x27)
li x27, 0x7a72e685e94e61df # initialize rs1
sext.b x27, x27 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 856)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x28)
li x28, 0x9cafcc68bf7bb9b0 # initialize rs1
sext.b x28, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x28, 864)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x29)
li x29, 0x5691d0d8b8617a24 # initialize rs1
sext.b x29, x29 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 872)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x30)
li x30, 0x652582b537387065 # initialize rs1
sext.b x30, x30 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 880)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x31)
li x31, 0xa23f89f74b3a6780 # initialize rs1
sext.b x31, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 888)

# Testcase cp_gpr/fpr_hazard nohaz test
add x27, x17, x8 # perform first operation
sext.b x13, x12 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard nohaz test
add x26, x27, x23 # perform first operation
sext.b x7, x2 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard nohaz test
add x6, x20, x29 # perform first operation
sext.b x7, x17 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard raw test
add x15, x14, x27 # perform first operation
sext.b x27, x15 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard raw test
add x5, x27, x10 # perform first operation
sext.b x27, x20 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard raw test
add x25, x27, x13 # perform first operation
sext.b x13, x15 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard waw test
add x2, x3, x18 # perform first operation
sext.b x2, x15 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard waw test
add x5, x6, x31 # perform first operation
sext.b x5, x29 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard waw test
add x12, x1, x26 # perform first operation
sext.b x12, x14 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard war test
add x19, x8, x22 # perform first operation
sext.b x8, x6 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard war test
add x22, x8, x2 # perform first operation
sext.b x2, x19 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard war test
add x25, x11, x31 # perform first operation
sext.b x22, x9 # perform second (triggering) operation

#.EQU SIGSIZE,896


// ******************
// Tests from: WALLY-COV-zext.h.S
// ******************


# initialize signature pointer
la x4, begin_signature

    
# Testcase cp_rs1 (Test source rs1 = x0)
li x0, 0x2d6157277c3b05f2 # initialize rs1
zext.h x12, x0 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 0)

# Testcase cp_rs1 (Test source rs1 = x1)
li x1, 0xfede9323f4d28813 # initialize rs1
zext.h x2, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 8)

# Testcase cp_rs1 (Test source rs1 = x2)
li x2, 0xfd23f73b80ad1bf2 # initialize rs1
zext.h x11, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 16)

# Testcase cp_rs1 (Test source rs1 = x3)
li x3, 0xdf1797a69e69bc2f # initialize rs1
zext.h x17, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 24)

# Testcase cp_rs1 (Test source rs1 = x4)
mv x5, x4 # switch signature pointer register to avoid conflict with test
li x4, 0x9403326d698ece47 # initialize rs1
zext.h x28, x4 # perform operation
RVTEST_SIGUPD(x5, x0, x28, 32)

# Testcase cp_rs1 (Test source rs1 = x5)
mv x6, x5 # switch signature pointer register to avoid conflict with test
li x5, 0x9743b4d9fac6b4c3 # initialize rs1
zext.h x23, x5 # perform operation
RVTEST_SIGUPD(x6, x0, x23, 40)

# Testcase cp_rs1 (Test source rs1 = x6)
mv x4, x6 # switch signature pointer register to avoid conflict with test
li x6, 0x63e8159faf64c6e3 # initialize rs1
zext.h x7, x6 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 48)

# Testcase cp_rs1 (Test source rs1 = x7)
li x7, 0x6e52889e433dc7d9 # initialize rs1
zext.h x5, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x5, 56)

# Testcase cp_rs1 (Test source rs1 = x8)
li x8, 0x8b8fcae7ce890638 # initialize rs1
zext.h x25, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 64)

# Testcase cp_rs1 (Test source rs1 = x9)
li x9, 0xdbc369e3e857dbee # initialize rs1
zext.h x18, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 72)

# Testcase cp_rs1 (Test source rs1 = x10)
li x10, 0xd19b6b16adf0cb27 # initialize rs1
zext.h x21, x10 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 80)

# Testcase cp_rs1 (Test source rs1 = x11)
li x11, 0xc872548f41e379c7 # initialize rs1
zext.h x23, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 88)

# Testcase cp_rs1 (Test source rs1 = x12)
li x12, 0xa98d78019e0ae9c2 # initialize rs1
zext.h x30, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 96)

# Testcase cp_rs1 (Test source rs1 = x13)
li x13, 0xd91d39ba788fc110 # initialize rs1
zext.h x27, x13 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 104)

# Testcase cp_rs1 (Test source rs1 = x14)
li x14, 0x22a67a957a1f22c1 # initialize rs1
zext.h x17, x14 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 112)

# Testcase cp_rs1 (Test source rs1 = x15)
li x15, 0x9440133911e6bb3c # initialize rs1
zext.h x28, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x28, 120)

# Testcase cp_rs1 (Test source rs1 = x16)
li x16, 0xea1fead4cbcebb5d # initialize rs1
zext.h x18, x16 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 128)

# Testcase cp_rs1 (Test source rs1 = x17)
li x17, 0xb7e593bbf246b8a5 # initialize rs1
zext.h x5, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x5, 136)

# Testcase cp_rs1 (Test source rs1 = x18)
li x18, 0x288f9b077d8d59c6 # initialize rs1
zext.h x2, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 144)

# Testcase cp_rs1 (Test source rs1 = x19)
li x19, 0x69f74d5be6d81230 # initialize rs1
zext.h x11, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 152)

# Testcase cp_rs1 (Test source rs1 = x20)
li x20, 0x8cb16a06bc1df08a # initialize rs1
zext.h x18, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 160)

# Testcase cp_rs1 (Test source rs1 = x21)
li x21, 0x11d6213734198900 # initialize rs1
zext.h x27, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 168)

# Testcase cp_rs1 (Test source rs1 = x22)
li x22, 0x3baa1884c64dac8a # initialize rs1
zext.h x20, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 176)

# Testcase cp_rs1 (Test source rs1 = x23)
li x23, 0x6c13141e2a0c8c64 # initialize rs1
zext.h x30, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 184)

# Testcase cp_rs1 (Test source rs1 = x24)
li x24, 0x1eb6480b06c4943a # initialize rs1
zext.h x2, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 192)

# Testcase cp_rs1 (Test source rs1 = x25)
li x25, 0x27b73b755e9eafa0 # initialize rs1
zext.h x13, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 200)

# Testcase cp_rs1 (Test source rs1 = x26)
li x26, 0x6c288a54d951911e # initialize rs1
zext.h x13, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 208)

# Testcase cp_rs1 (Test source rs1 = x27)
li x27, 0xde5a0d92f3150703 # initialize rs1
zext.h x15, x27 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 216)

# Testcase cp_rs1 (Test source rs1 = x28)
li x28, 0x6c7d63dfe7b3cf56 # initialize rs1
zext.h x20, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 224)

# Testcase cp_rs1 (Test source rs1 = x29)
li x29, 0x14d230804a1f09a4 # initialize rs1
zext.h x28, x29 # perform operation
RVTEST_SIGUPD(x4, x0, x28, 232)

# Testcase cp_rs1 (Test source rs1 = x30)
li x30, 0xcb229a6d5632bcdc # initialize rs1
zext.h x15, x30 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 240)

# Testcase cp_rs1 (Test source rs1 = x31)
li x31, 0x735487b2fb6435bb # initialize rs1
zext.h x27, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 248)

# Testcase cp_rd (Test destination rd = x0)
li x20, 0x808046d9c205b5a7 # initialize rs1
zext.h x0, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x0, 256)

# Testcase cp_rd (Test destination rd = x1)
li x7, 0xd975994da9d94fdf # initialize rs1
zext.h x1, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 264)

# Testcase cp_rd (Test destination rd = x2)
li x23, 0xdc653975472c24d7 # initialize rs1
zext.h x2, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 272)

# Testcase cp_rd (Test destination rd = x3)
li x8, 0x92574a597cd26fc0 # initialize rs1
zext.h x3, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 280)

# Testcase cp_rd (Test destination rd = x4)
mv x6, x4 # switch signature pointer register to avoid conflict with test
li x5, 0xb3779779904f72d0 # initialize rs1
zext.h x4, x5 # perform operation
RVTEST_SIGUPD(x6, x0, x4, 288)

# Testcase cp_rd (Test destination rd = x5)
li x23, 0xc7b20b8bf29cc8b5 # initialize rs1
zext.h x5, x23 # perform operation
RVTEST_SIGUPD(x6, x0, x5, 296)

# Testcase cp_rd (Test destination rd = x6)
mv x7, x6 # switch signature pointer register to avoid conflict with test
li x21, 0x4b0b8144780fc453 # initialize rs1
zext.h x6, x21 # perform operation
RVTEST_SIGUPD(x7, x0, x6, 304)

# Testcase cp_rd (Test destination rd = x7)
mv x4, x7 # switch signature pointer register to avoid conflict with test
li x25, 0x101cef645b09b905 # initialize rs1
zext.h x7, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 312)

# Testcase cp_rd (Test destination rd = x8)
li x24, 0xf1128af3a3b2273f # initialize rs1
zext.h x8, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 320)

# Testcase cp_rd (Test destination rd = x9)
li x24, 0xa5c44acc826f5d46 # initialize rs1
zext.h x9, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 328)

# Testcase cp_rd (Test destination rd = x10)
li x25, 0xcb9819f073927f0c # initialize rs1
zext.h x10, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 336)

# Testcase cp_rd (Test destination rd = x11)
li x10, 0x846ad6300515701e # initialize rs1
zext.h x11, x10 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 344)

# Testcase cp_rd (Test destination rd = x12)
li x6, 0x6334a949b3b04063 # initialize rs1
zext.h x12, x6 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 352)

# Testcase cp_rd (Test destination rd = x13)
li x6, 0x1d078e12cf04f72f # initialize rs1
zext.h x13, x6 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 360)

# Testcase cp_rd (Test destination rd = x14)
li x20, 0x1656244d84c76455 # initialize rs1
zext.h x14, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 368)

# Testcase cp_rd (Test destination rd = x15)
li x20, 0xcede1eb59e0d52e1 # initialize rs1
zext.h x15, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 376)

# Testcase cp_rd (Test destination rd = x16)
li x29, 0xc5216acc85e0e6ca # initialize rs1
zext.h x16, x29 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 384)

# Testcase cp_rd (Test destination rd = x17)
li x15, 0xc53ef4bd77e6395b # initialize rs1
zext.h x17, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 392)

# Testcase cp_rd (Test destination rd = x18)
li x8, 0xd2fb65c7df00d7ef # initialize rs1
zext.h x18, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 400)

# Testcase cp_rd (Test destination rd = x19)
li x16, 0x9fd62ea9259e9769 # initialize rs1
zext.h x19, x16 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 408)

# Testcase cp_rd (Test destination rd = x20)
li x22, 0x81e32f4dcd3717d8 # initialize rs1
zext.h x20, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 416)

# Testcase cp_rd (Test destination rd = x21)
li x3, 0x82508201ca1e173a # initialize rs1
zext.h x21, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 424)

# Testcase cp_rd (Test destination rd = x22)
li x10, 0x235fff0038d1a544 # initialize rs1
zext.h x22, x10 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 432)

# Testcase cp_rd (Test destination rd = x23)
li x2, 0xb2f1e880a4d3256a # initialize rs1
zext.h x23, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 440)

# Testcase cp_rd (Test destination rd = x24)
li x6, 0x1be6e2d4c1c1432f # initialize rs1
zext.h x24, x6 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 448)

# Testcase cp_rd (Test destination rd = x25)
li x21, 0x368fccc65bc6d39c # initialize rs1
zext.h x25, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 456)

# Testcase cp_rd (Test destination rd = x26)
li x26, 0x833ff55795d4a43b # initialize rs1
zext.h x26, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 464)

# Testcase cp_rd (Test destination rd = x27)
li x9, 0x8670a50d90a2333b # initialize rs1
zext.h x27, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 472)

# Testcase cp_rd (Test destination rd = x28)
li x7, 0x6329478d34de06a7 # initialize rs1
zext.h x28, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x28, 480)

# Testcase cp_rd (Test destination rd = x29)
li x24, 0x956e8a84bbbbd59e # initialize rs1
zext.h x29, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 488)

# Testcase cp_rd (Test destination rd = x30)
li x17, 0xa3e46d8da4060ccd # initialize rs1
zext.h x30, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 496)

# Testcase cp_rd (Test destination rd = x31)
li x5, 0x7b8851ebb064a970 # initialize rs1
zext.h x31, x5 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 504)

# Testcase cp_rs1_corners (Test source rs1 value = 0x0)
li x6, 0x0000000000000000 # initialize rs1
zext.h x21, x6 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 512)

# Testcase cp_rs1_corners (Test source rs1 value = 0x1)
li x27, 0x0000000000000001 # initialize rs1
zext.h x26, x27 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 520)

# Testcase cp_rs1_corners (Test source rs1 value = 0x2)
li x2, 0x0000000000000002 # initialize rs1
zext.h x1, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 528)

# Testcase cp_rs1_corners (Test source rs1 value = 0x8000000000000000)
li x20, 0x8000000000000000 # initialize rs1
zext.h x17, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 536)

# Testcase cp_rs1_corners (Test source rs1 value = 0x8000000000000001)
li x24, 0x8000000000000001 # initialize rs1
zext.h x27, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 544)

# Testcase cp_rs1_corners (Test source rs1 value = 0x7fffffffffffffff)
li x2, 0x7fffffffffffffff # initialize rs1
zext.h x30, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 552)

# Testcase cp_rs1_corners (Test source rs1 value = 0x7ffffffffffffffe)
li x3, 0x7ffffffffffffffe # initialize rs1
zext.h x6, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x6, 560)

# Testcase cp_rs1_corners (Test source rs1 value = 0xffffffffffffffff)
li x16, 0xffffffffffffffff # initialize rs1
zext.h x5, x16 # perform operation
RVTEST_SIGUPD(x4, x0, x5, 568)

# Testcase cp_rs1_corners (Test source rs1 value = 0xfffffffffffffffe)
li x5, 0xfffffffffffffffe # initialize rs1
zext.h x14, x5 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 576)

# Testcase cp_rs1_corners (Test source rs1 value = 0x5bbc887763ae86f2)
li x25, 0x5bbc887763ae86f2 # initialize rs1
zext.h x22, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 584)

# Testcase cp_rs1_corners (Test source rs1 value = 0xaaaaaaaaaaaaaaaa)
li x10, 0xaaaaaaaaaaaaaaaa # initialize rs1
zext.h x3, x10 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 592)

# Testcase cp_rs1_corners (Test source rs1 value = 0x5555555555555555)
li x29, 0x5555555555555555 # initialize rs1
zext.h x14, x29 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 600)

# Testcase cp_rs1_corners (Test source rs1 value = 0xffffffff)
li x29, 0x00000000ffffffff # initialize rs1
zext.h x31, x29 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 608)

# Testcase cp_rs1_corners (Test source rs1 value = 0xfffffffe)
li x29, 0x00000000fffffffe # initialize rs1
zext.h x2, x29 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 616)

# Testcase cp_rs1_corners (Test source rs1 value = 0x100000000)
li x31, 0x0000000100000000 # initialize rs1
zext.h x30, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 624)

# Testcase cp_rs1_corners (Test source rs1 value = 0x100000001)
li x5, 0x0000000100000001 # initialize rs1
zext.h x21, x5 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 632)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x0)
li x0, 0xa814bcde0bd46cfb # initialize rs1
zext.h x0, x0 # perform operation
RVTEST_SIGUPD(x4, x0, x0, 640)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x1)
li x1, 0x47e72d6278968a44 # initialize rs1
zext.h x1, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 648)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x2)
li x2, 0xf527ad5ac1b43b5e # initialize rs1
zext.h x2, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 656)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x3)
li x3, 0x0a6abb7a3a0268c3 # initialize rs1
zext.h x3, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 664)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x4)
mv x6, x4 # switch signature pointer register to avoid conflict with test
li x4, 0x915f1f55011bd51b # initialize rs1
zext.h x4, x4 # perform operation
RVTEST_SIGUPD(x6, x0, x4, 672)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x5)
li x5, 0xecfed081d0e9f3c4 # initialize rs1
zext.h x5, x5 # perform operation
RVTEST_SIGUPD(x6, x0, x5, 680)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x6)
mv x7, x6 # switch signature pointer register to avoid conflict with test
li x6, 0xddeca29051e149f0 # initialize rs1
zext.h x6, x6 # perform operation
RVTEST_SIGUPD(x7, x0, x6, 688)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x7)
mv x4, x7 # switch signature pointer register to avoid conflict with test
li x7, 0xb942cc45d0b29284 # initialize rs1
zext.h x7, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 696)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x8)
li x8, 0x8535c5969fef8407 # initialize rs1
zext.h x8, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 704)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x9)
li x9, 0x8651e6ec3ec4c97f # initialize rs1
zext.h x9, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 712)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x10)
li x10, 0xffcf523965262dc2 # initialize rs1
zext.h x10, x10 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 720)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x11)
li x11, 0x4aaace6fdfe90b1c # initialize rs1
zext.h x11, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 728)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x12)
li x12, 0xfadc4d9f5967e15e # initialize rs1
zext.h x12, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 736)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x13)
li x13, 0x7fbd356371f29e20 # initialize rs1
zext.h x13, x13 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 744)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x14)
li x14, 0x19ca226754f3295a # initialize rs1
zext.h x14, x14 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 752)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x15)
li x15, 0xb89187e5a182e7a0 # initialize rs1
zext.h x15, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 760)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x16)
li x16, 0xc3d449f9eb5b2ebc # initialize rs1
zext.h x16, x16 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 768)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x17)
li x17, 0x2a0d0d1b9aef5b16 # initialize rs1
zext.h x17, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 776)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x18)
li x18, 0xa19697cdafc7653a # initialize rs1
zext.h x18, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 784)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x19)
li x19, 0x1cbafcab02b7a97e # initialize rs1
zext.h x19, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 792)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x20)
li x20, 0x4529e77d5c133dea # initialize rs1
zext.h x20, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 800)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x21)
li x21, 0x9eed3cfeb72250a3 # initialize rs1
zext.h x21, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 808)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x22)
li x22, 0x8f994c597813c4b8 # initialize rs1
zext.h x22, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 816)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x23)
li x23, 0xe790181d925d9d56 # initialize rs1
zext.h x23, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 824)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x24)
li x24, 0x8e59274f81ca1539 # initialize rs1
zext.h x24, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 832)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x25)
li x25, 0x7ccfe74e242fe247 # initialize rs1
zext.h x25, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 840)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x26)
li x26, 0x28c274e7203ae0cb # initialize rs1
zext.h x26, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 848)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x27)
li x27, 0x44ae091e7db35423 # initialize rs1
zext.h x27, x27 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 856)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x28)
li x28, 0x5ce663b278bed823 # initialize rs1
zext.h x28, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x28, 864)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x29)
li x29, 0xa82458b8e4166e76 # initialize rs1
zext.h x29, x29 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 872)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x30)
li x30, 0xdec208a001e56e92 # initialize rs1
zext.h x30, x30 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 880)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x31)
li x31, 0x35d531b721ab20a5 # initialize rs1
zext.h x31, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 888)

# Testcase cp_gpr/fpr_hazard nohaz test
add x13, x17, x22 # perform first operation
zext.h x20, x31 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard nohaz test
add x21, x22, x6 # perform first operation
zext.h x8, x20 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard nohaz test
add x14, x11, x23 # perform first operation
zext.h x18, x27 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard raw test
add x21, x28, x27 # perform first operation
zext.h x28, x21 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard raw test
add x21, x8, x18 # perform first operation
zext.h x18, x17 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard raw test
add x8, x12, x3 # perform first operation
zext.h x3, x30 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard waw test
add x22, x29, x25 # perform first operation
zext.h x22, x16 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard waw test
add x12, x2, x19 # perform first operation
zext.h x12, x10 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard waw test
add x17, x16, x7 # perform first operation
zext.h x17, x24 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard war test
add x19, x22, x26 # perform first operation
zext.h x22, x5 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard war test
add x17, x31, x12 # perform first operation
zext.h x12, x10 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard war test
add x10, x13, x6 # perform first operation
zext.h x17, x20 # perform second (triggering) operation

#.EQU SIGSIZE,896


// ******************
// Tests from: WALLY-COV-roriw.S
// ******************


# initialize signature pointer
la x4, begin_signature

    
# Testcase cp_rs1 (Test source rs1 = x0)
li x0, 0x9849b691615eaad3 # initialize rs1
roriw x3, x0, 29 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 0)

# Testcase cp_rs1 (Test source rs1 = x1)
li x1, 0xd1a7fde5b4ad00f8 # initialize rs1
roriw x31, x1, 19 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 8)

# Testcase cp_rs1 (Test source rs1 = x2)
li x2, 0x83f3a8fb1694b2d1 # initialize rs1
roriw x19, x2, 0 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 16)

# Testcase cp_rs1 (Test source rs1 = x3)
li x3, 0xd022130999fd1c1b # initialize rs1
roriw x27, x3, 3 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 24)

# Testcase cp_rs1 (Test source rs1 = x4)
mv x5, x4 # switch signature pointer register to avoid conflict with test
li x4, 0xc87891779246be32 # initialize rs1
roriw x14, x4, 29 # perform operation
RVTEST_SIGUPD(x5, x0, x14, 32)

# Testcase cp_rs1 (Test source rs1 = x5)
mv x6, x5 # switch signature pointer register to avoid conflict with test
li x5, 0xab3dcebb4280159e # initialize rs1
roriw x18, x5, 4 # perform operation
RVTEST_SIGUPD(x6, x0, x18, 40)

# Testcase cp_rs1 (Test source rs1 = x6)
mv x7, x6 # switch signature pointer register to avoid conflict with test
li x6, 0x10921299edaab363 # initialize rs1
roriw x26, x6, 14 # perform operation
RVTEST_SIGUPD(x7, x0, x26, 48)

# Testcase cp_rs1 (Test source rs1 = x7)
mv x4, x7 # switch signature pointer register to avoid conflict with test
li x7, 0x79e21596c576876d # initialize rs1
roriw x23, x7, 29 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 56)

# Testcase cp_rs1 (Test source rs1 = x8)
li x8, 0x2b3f4cc0b0bb8892 # initialize rs1
roriw x26, x8, 27 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 64)

# Testcase cp_rs1 (Test source rs1 = x9)
li x9, 0xef4994e8f491690b # initialize rs1
roriw x13, x9, 13 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 72)

# Testcase cp_rs1 (Test source rs1 = x10)
li x10, 0xa78ea00cc858eb17 # initialize rs1
roriw x17, x10, 24 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 80)

# Testcase cp_rs1 (Test source rs1 = x11)
li x11, 0x413738168e517306 # initialize rs1
roriw x21, x11, 20 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 88)

# Testcase cp_rs1 (Test source rs1 = x12)
li x12, 0x33f68c78a1f26018 # initialize rs1
roriw x21, x12, 7 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 96)

# Testcase cp_rs1 (Test source rs1 = x13)
li x13, 0xbcbbce581d7ad334 # initialize rs1
roriw x12, x13, 0 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 104)

# Testcase cp_rs1 (Test source rs1 = x14)
li x14, 0x22b3e4069a497656 # initialize rs1
roriw x7, x14, 14 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 112)

# Testcase cp_rs1 (Test source rs1 = x15)
li x15, 0x83293bc814604a32 # initialize rs1
roriw x3, x15, 26 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 120)

# Testcase cp_rs1 (Test source rs1 = x16)
li x16, 0xac0f894024801d24 # initialize rs1
roriw x15, x16, 1 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 128)

# Testcase cp_rs1 (Test source rs1 = x17)
li x17, 0xe44a7dabcd856255 # initialize rs1
roriw x1, x17, 19 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 136)

# Testcase cp_rs1 (Test source rs1 = x18)
li x18, 0x0bfbfef62256df0a # initialize rs1
roriw x23, x18, 27 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 144)

# Testcase cp_rs1 (Test source rs1 = x19)
li x19, 0x0146edc0ea80e986 # initialize rs1
roriw x16, x19, 24 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 152)

# Testcase cp_rs1 (Test source rs1 = x20)
li x20, 0x8eac849d413b37ff # initialize rs1
roriw x11, x20, 10 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 160)

# Testcase cp_rs1 (Test source rs1 = x21)
li x21, 0xe63f52211d0f5119 # initialize rs1
roriw x22, x21, 17 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 168)

# Testcase cp_rs1 (Test source rs1 = x22)
li x22, 0xa9a616e5bbd7855f # initialize rs1
roriw x21, x22, 24 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 176)

# Testcase cp_rs1 (Test source rs1 = x23)
li x23, 0x702c1be23e61930f # initialize rs1
roriw x26, x23, 4 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 184)

# Testcase cp_rs1 (Test source rs1 = x24)
li x24, 0x4767e9b5f7ba3a54 # initialize rs1
roriw x2, x24, 5 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 192)

# Testcase cp_rs1 (Test source rs1 = x25)
li x25, 0x43c96e8b57ded8b9 # initialize rs1
roriw x27, x25, 29 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 200)

# Testcase cp_rs1 (Test source rs1 = x26)
li x26, 0x5b42343f4a554d12 # initialize rs1
roriw x1, x26, 30 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 208)

# Testcase cp_rs1 (Test source rs1 = x27)
li x27, 0x9d3537e783c65d6f # initialize rs1
roriw x29, x27, 3 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 216)

# Testcase cp_rs1 (Test source rs1 = x28)
li x28, 0x96027b03f484c7a9 # initialize rs1
roriw x8, x28, 18 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 224)

# Testcase cp_rs1 (Test source rs1 = x29)
li x29, 0xa7dd14433afc97e5 # initialize rs1
roriw x21, x29, 5 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 232)

# Testcase cp_rs1 (Test source rs1 = x30)
li x30, 0x764a27004fb0dc02 # initialize rs1
roriw x1, x30, 23 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 240)

# Testcase cp_rs1 (Test source rs1 = x31)
li x31, 0xa4f2388cfd70a136 # initialize rs1
roriw x19, x31, 26 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 248)

# Testcase cp_rd (Test destination rd = x0)
li x24, 0x504584b7106d32e8 # initialize rs1
roriw x0, x24, 16 # perform operation
RVTEST_SIGUPD(x4, x0, x0, 256)

# Testcase cp_rd (Test destination rd = x1)
li x28, 0x8f2d8bcbe579b5fa # initialize rs1
roriw x1, x28, 8 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 264)

# Testcase cp_rd (Test destination rd = x2)
li x7, 0x4234ae61902daf9e # initialize rs1
roriw x2, x7, 9 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 272)

# Testcase cp_rd (Test destination rd = x3)
li x24, 0x9ebed4e093e5c83b # initialize rs1
roriw x3, x24, 15 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 280)

# Testcase cp_rd (Test destination rd = x4)
mv x5, x4 # switch signature pointer register to avoid conflict with test
li x27, 0x8cf27f00faa64a55 # initialize rs1
roriw x4, x27, 1 # perform operation
RVTEST_SIGUPD(x5, x0, x4, 288)

# Testcase cp_rd (Test destination rd = x5)
mv x6, x5 # switch signature pointer register to avoid conflict with test
li x17, 0x39017f7bc56d4089 # initialize rs1
roriw x5, x17, 27 # perform operation
RVTEST_SIGUPD(x6, x0, x5, 296)

# Testcase cp_rd (Test destination rd = x6)
mv x7, x6 # switch signature pointer register to avoid conflict with test
li x5, 0x2e08f5d3ddd0e3f2 # initialize rs1
roriw x6, x5, 16 # perform operation
RVTEST_SIGUPD(x7, x0, x6, 304)

# Testcase cp_rd (Test destination rd = x7)
mv x4, x7 # switch signature pointer register to avoid conflict with test
li x12, 0x752494a4c2f37bb3 # initialize rs1
roriw x7, x12, 10 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 312)

# Testcase cp_rd (Test destination rd = x8)
li x16, 0xec60c9874705ffdf # initialize rs1
roriw x8, x16, 4 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 320)

# Testcase cp_rd (Test destination rd = x9)
li x11, 0x293bdc58c49c5a41 # initialize rs1
roriw x9, x11, 1 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 328)

# Testcase cp_rd (Test destination rd = x10)
li x12, 0xf2bd1b369b47df35 # initialize rs1
roriw x10, x12, 23 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 336)

# Testcase cp_rd (Test destination rd = x11)
li x3, 0x84c51c9f5ae29487 # initialize rs1
roriw x11, x3, 12 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 344)

# Testcase cp_rd (Test destination rd = x12)
li x1, 0x4488377a36924bfd # initialize rs1
roriw x12, x1, 29 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 352)

# Testcase cp_rd (Test destination rd = x13)
li x7, 0xfd19d9ac772804e0 # initialize rs1
roriw x13, x7, 25 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 360)

# Testcase cp_rd (Test destination rd = x14)
li x7, 0xeed34b5c5ae7b86e # initialize rs1
roriw x14, x7, 12 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 368)

# Testcase cp_rd (Test destination rd = x15)
li x21, 0x14bf9ab8e080ab49 # initialize rs1
roriw x15, x21, 16 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 376)

# Testcase cp_rd (Test destination rd = x16)
li x12, 0x23d80d2f0afd5216 # initialize rs1
roriw x16, x12, 24 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 384)

# Testcase cp_rd (Test destination rd = x17)
li x12, 0x87aca1695e336d62 # initialize rs1
roriw x17, x12, 6 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 392)

# Testcase cp_rd (Test destination rd = x18)
li x3, 0xa3d7a6ea723aabbd # initialize rs1
roriw x18, x3, 4 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 400)

# Testcase cp_rd (Test destination rd = x19)
li x7, 0xca34368283820441 # initialize rs1
roriw x19, x7, 23 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 408)

# Testcase cp_rd (Test destination rd = x20)
li x13, 0x4f3e25cda616c3c9 # initialize rs1
roriw x20, x13, 13 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 416)

# Testcase cp_rd (Test destination rd = x21)
li x10, 0x398c0026a4d1e6b4 # initialize rs1
roriw x21, x10, 10 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 424)

# Testcase cp_rd (Test destination rd = x22)
li x17, 0x3c1b7d80c454deb4 # initialize rs1
roriw x22, x17, 25 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 432)

# Testcase cp_rd (Test destination rd = x23)
li x14, 0xfb335f67312fc4a6 # initialize rs1
roriw x23, x14, 21 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 440)

# Testcase cp_rd (Test destination rd = x24)
li x15, 0x6ee278546f772990 # initialize rs1
roriw x24, x15, 7 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 448)

# Testcase cp_rd (Test destination rd = x25)
li x17, 0x50f0a0b27f87a5d5 # initialize rs1
roriw x25, x17, 12 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 456)

# Testcase cp_rd (Test destination rd = x26)
li x28, 0x17e462a80975a99e # initialize rs1
roriw x26, x28, 7 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 464)

# Testcase cp_rd (Test destination rd = x27)
li x31, 0x4fa62fbdd0fec812 # initialize rs1
roriw x27, x31, 13 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 472)

# Testcase cp_rd (Test destination rd = x28)
li x26, 0xfd70a7948775a328 # initialize rs1
roriw x28, x26, 17 # perform operation
RVTEST_SIGUPD(x4, x0, x28, 480)

# Testcase cp_rd (Test destination rd = x29)
li x28, 0x7e9096ed2dd33190 # initialize rs1
roriw x29, x28, 7 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 488)

# Testcase cp_rd (Test destination rd = x30)
li x25, 0x77e78907316ee334 # initialize rs1
roriw x30, x25, 6 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 496)

# Testcase cp_rd (Test destination rd = x31)
li x1, 0xfb10db4b3dff6412 # initialize rs1
roriw x31, x1, 27 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 504)

# Testcase cp_rs1_corners (Test source rs1 value = 0x0)
li x10, 0x0000000000000000 # initialize rs1
roriw x18, x10, 22 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 512)

# Testcase cp_rs1_corners (Test source rs1 value = 0x1)
li x7, 0x0000000000000001 # initialize rs1
roriw x14, x7, 1 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 520)

# Testcase cp_rs1_corners (Test source rs1 value = 0x2)
li x28, 0x0000000000000002 # initialize rs1
roriw x8, x28, 3 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 528)

# Testcase cp_rs1_corners (Test source rs1 value = 0x8000000000000000)
li x14, 0x8000000000000000 # initialize rs1
roriw x2, x14, 30 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 536)

# Testcase cp_rs1_corners (Test source rs1 value = 0x8000000000000001)
li x10, 0x8000000000000001 # initialize rs1
roriw x25, x10, 21 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 544)

# Testcase cp_rs1_corners (Test source rs1 value = 0x7fffffffffffffff)
li x1, 0x7fffffffffffffff # initialize rs1
roriw x22, x1, 11 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 552)

# Testcase cp_rs1_corners (Test source rs1 value = 0x7ffffffffffffffe)
li x20, 0x7ffffffffffffffe # initialize rs1
roriw x28, x20, 25 # perform operation
RVTEST_SIGUPD(x4, x0, x28, 560)

# Testcase cp_rs1_corners (Test source rs1 value = 0xffffffffffffffff)
li x10, 0xffffffffffffffff # initialize rs1
roriw x1, x10, 1 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 568)

# Testcase cp_rs1_corners (Test source rs1 value = 0xfffffffffffffffe)
li x18, 0xfffffffffffffffe # initialize rs1
roriw x16, x18, 0 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 576)

# Testcase cp_rs1_corners (Test source rs1 value = 0x5bbc887763ae86f2)
li x10, 0x5bbc887763ae86f2 # initialize rs1
roriw x9, x10, 1 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 584)

# Testcase cp_rs1_corners (Test source rs1 value = 0xaaaaaaaaaaaaaaaa)
li x23, 0xaaaaaaaaaaaaaaaa # initialize rs1
roriw x13, x23, 17 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 592)

# Testcase cp_rs1_corners (Test source rs1 value = 0x5555555555555555)
li x5, 0x5555555555555555 # initialize rs1
roriw x14, x5, 2 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 600)

# Testcase cp_rs1_corners (Test source rs1 value = 0xffffffff)
li x23, 0x00000000ffffffff # initialize rs1
roriw x20, x23, 2 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 608)

# Testcase cp_rs1_corners (Test source rs1 value = 0xfffffffe)
li x20, 0x00000000fffffffe # initialize rs1
roriw x16, x20, 12 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 616)

# Testcase cp_rs1_corners (Test source rs1 value = 0x100000000)
li x13, 0x0000000100000000 # initialize rs1
roriw x20, x13, 13 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 624)

# Testcase cp_rs1_corners (Test source rs1 value = 0x100000001)
li x23, 0x0000000100000001 # initialize rs1
roriw x15, x23, 14 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 632)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x0)
li x0, 0x21c308a8a0670f93 # initialize rs1
roriw x0, x0, 28 # perform operation
RVTEST_SIGUPD(x4, x0, x0, 640)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x1)
li x1, 0xa4113c81149f6d51 # initialize rs1
roriw x1, x1, 6 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 648)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x2)
li x2, 0x1ccfaad71497e835 # initialize rs1
roriw x2, x2, 4 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 656)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x3)
li x3, 0xbf691e37a178cfff # initialize rs1
roriw x3, x3, 26 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 664)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x4)
mv x5, x4 # switch signature pointer register to avoid conflict with test
li x4, 0xbb90cfc9603ad42d # initialize rs1
roriw x4, x4, 5 # perform operation
RVTEST_SIGUPD(x5, x0, x4, 672)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x5)
mv x6, x5 # switch signature pointer register to avoid conflict with test
li x5, 0x67cd1014a41b5db0 # initialize rs1
roriw x5, x5, 29 # perform operation
RVTEST_SIGUPD(x6, x0, x5, 680)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x6)
mv x7, x6 # switch signature pointer register to avoid conflict with test
li x6, 0x0248f5baeb88d0cb # initialize rs1
roriw x6, x6, 9 # perform operation
RVTEST_SIGUPD(x7, x0, x6, 688)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x7)
mv x4, x7 # switch signature pointer register to avoid conflict with test
li x7, 0xd9cccdf06efb8081 # initialize rs1
roriw x7, x7, 29 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 696)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x8)
li x8, 0xf1f243b448a75db2 # initialize rs1
roriw x8, x8, 2 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 704)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x9)
li x9, 0xb2492f7463edc13c # initialize rs1
roriw x9, x9, 15 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 712)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x10)
li x10, 0x159910a9437e683b # initialize rs1
roriw x10, x10, 9 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 720)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x11)
li x11, 0xd4466b323b798a0c # initialize rs1
roriw x11, x11, 15 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 728)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x12)
li x12, 0xe177d2f438ef6086 # initialize rs1
roriw x12, x12, 29 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 736)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x13)
li x13, 0x27ce51d052453326 # initialize rs1
roriw x13, x13, 23 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 744)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x14)
li x14, 0xea99d7253fe1e19c # initialize rs1
roriw x14, x14, 6 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 752)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x15)
li x15, 0xa149168bbb1222a5 # initialize rs1
roriw x15, x15, 6 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 760)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x16)
li x16, 0x9eead0ad96c176c1 # initialize rs1
roriw x16, x16, 20 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 768)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x17)
li x17, 0x0f3e6521a976563f # initialize rs1
roriw x17, x17, 4 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 776)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x18)
li x18, 0x5028771b7f71244a # initialize rs1
roriw x18, x18, 2 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 784)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x19)
li x19, 0xffb98a067d6d656b # initialize rs1
roriw x19, x19, 10 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 792)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x20)
li x20, 0x1b395979db69c609 # initialize rs1
roriw x20, x20, 8 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 800)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x21)
li x21, 0x79d72913e717f9eb # initialize rs1
roriw x21, x21, 11 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 808)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x22)
li x22, 0x330e9fcfb50ce6bd # initialize rs1
roriw x22, x22, 16 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 816)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x23)
li x23, 0xd757a2724f40fe75 # initialize rs1
roriw x23, x23, 6 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 824)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x24)
li x24, 0x6b4c71b8895e823f # initialize rs1
roriw x24, x24, 15 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 832)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x25)
li x25, 0xb61d29ec4650ad7b # initialize rs1
roriw x25, x25, 9 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 840)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x26)
li x26, 0xc12556b97c20d365 # initialize rs1
roriw x26, x26, 21 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 848)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x27)
li x27, 0x724e27406d34c67d # initialize rs1
roriw x27, x27, 16 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 856)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x28)
li x28, 0x6ff16e33c9b9ff7d # initialize rs1
roriw x28, x28, 3 # perform operation
RVTEST_SIGUPD(x4, x0, x28, 864)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x29)
li x29, 0xc2c5d5f95c8805de # initialize rs1
roriw x29, x29, 1 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 872)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x30)
li x30, 0xa459c4788e102083 # initialize rs1
roriw x30, x30, 23 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 880)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x31)
li x31, 0xb09fc05f2d5bdff6 # initialize rs1
roriw x31, x31, 31 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 888)

# Testcase cp_uimm_5 (Test bit = 0)
li x28, 0x98ac4c396c3d7862 # initialize rs1
roriw x24, x28, 0 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 896)

# Testcase cp_uimm_5 (Test bit = 1)
li x2, 0x35956544a5b4a1f4 # initialize rs1
roriw x30, x2, 1 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 904)

# Testcase cp_uimm_5 (Test bit = 2)
li x16, 0x7e81a3938f6336aa # initialize rs1
roriw x3, x16, 2 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 912)

# Testcase cp_uimm_5 (Test bit = 3)
li x30, 0x66bb1300b4b66bb2 # initialize rs1
roriw x31, x30, 3 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 920)

# Testcase cp_uimm_5 (Test bit = 4)
li x18, 0xa1ef042a4b914a7c # initialize rs1
roriw x26, x18, 4 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 928)

# Testcase cp_uimm_5 (Test bit = 5)
li x11, 0xcb1c551c2fc5ecb6 # initialize rs1
roriw x10, x11, 5 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 936)

# Testcase cp_uimm_5 (Test bit = 6)
li x17, 0xcdced29c40949584 # initialize rs1
roriw x2, x17, 6 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 944)

# Testcase cp_uimm_5 (Test bit = 7)
li x22, 0xf1030b42bef1df26 # initialize rs1
roriw x23, x22, 7 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 952)

# Testcase cp_uimm_5 (Test bit = 8)
li x7, 0x49deb9c18dc10143 # initialize rs1
roriw x17, x7, 8 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 960)

# Testcase cp_uimm_5 (Test bit = 9)
li x13, 0x8a5b9dd07f062d8e # initialize rs1
roriw x5, x13, 9 # perform operation
RVTEST_SIGUPD(x4, x0, x5, 968)

# Testcase cp_uimm_5 (Test bit = 10)
li x31, 0x3ae6f3f0a480b80e # initialize rs1
roriw x16, x31, 10 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 976)

# Testcase cp_uimm_5 (Test bit = 11)
li x7, 0x13c2dde100ffaf8b # initialize rs1
roriw x1, x7, 11 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 984)

# Testcase cp_uimm_5 (Test bit = 12)
li x31, 0xe9058fa5c38614d6 # initialize rs1
roriw x20, x31, 12 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 992)

# Testcase cp_uimm_5 (Test bit = 13)
li x8, 0x620a217d9493571d # initialize rs1
roriw x25, x8, 13 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 1000)

# Testcase cp_uimm_5 (Test bit = 14)
li x17, 0x830479c9f45cbbde # initialize rs1
roriw x6, x17, 14 # perform operation
RVTEST_SIGUPD(x4, x0, x6, 1008)

# Testcase cp_uimm_5 (Test bit = 15)
li x1, 0xb68b90b073fc18b9 # initialize rs1
roriw x26, x1, 15 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 1016)

# Testcase cp_uimm_5 (Test bit = 16)
li x14, 0xe7b83f01b82b1b19 # initialize rs1
roriw x30, x14, 16 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 1024)

# Testcase cp_uimm_5 (Test bit = 17)
li x31, 0xfbae13a9bb651f91 # initialize rs1
roriw x17, x31, 17 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 1032)

# Testcase cp_uimm_5 (Test bit = 18)
li x12, 0xc8cfb957a2727731 # initialize rs1
roriw x7, x12, 18 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 1040)

# Testcase cp_uimm_5 (Test bit = 19)
li x8, 0xafc79105d77b9e65 # initialize rs1
roriw x27, x8, 19 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 1048)

# Testcase cp_uimm_5 (Test bit = 20)
li x5, 0x3e7fdf7c1a84a725 # initialize rs1
roriw x22, x5, 20 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 1056)

# Testcase cp_uimm_5 (Test bit = 21)
li x7, 0x6bf5b5c97e8efd7a # initialize rs1
roriw x15, x7, 21 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 1064)

# Testcase cp_uimm_5 (Test bit = 22)
li x5, 0xa8e74f026a4bf602 # initialize rs1
roriw x21, x5, 22 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 1072)

# Testcase cp_uimm_5 (Test bit = 23)
li x6, 0x7a57c748e42e1449 # initialize rs1
roriw x26, x6, 23 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 1080)

# Testcase cp_uimm_5 (Test bit = 24)
li x1, 0xfbc2b8b6fb632d72 # initialize rs1
roriw x3, x1, 24 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 1088)

# Testcase cp_uimm_5 (Test bit = 25)
li x9, 0x633147b33f363578 # initialize rs1
roriw x2, x9, 25 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 1096)

# Testcase cp_uimm_5 (Test bit = 26)
li x28, 0x46869528800f5a6e # initialize rs1
roriw x31, x28, 26 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 1104)

# Testcase cp_uimm_5 (Test bit = 27)
li x25, 0x3bcfbb62a6164183 # initialize rs1
roriw x6, x25, 27 # perform operation
RVTEST_SIGUPD(x4, x0, x6, 1112)

# Testcase cp_uimm_5 (Test bit = 28)
li x24, 0xa3cbdc0728543b95 # initialize rs1
roriw x6, x24, 28 # perform operation
RVTEST_SIGUPD(x4, x0, x6, 1120)

# Testcase cp_uimm_5 (Test bit = 29)
li x10, 0x3c5c62de70bb25a9 # initialize rs1
roriw x21, x10, 29 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 1128)

# Testcase cp_uimm_5 (Test bit = 30)
li x7, 0x9a4cd5119cc10551 # initialize rs1
roriw x30, x7, 30 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 1136)

# Testcase cp_uimm_5 (Test bit = 31)
li x3, 0xa265c016e3424fb6 # initialize rs1
roriw x31, x3, 31 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 1144)

# Testcase cp_gpr/fpr_hazard nohaz test
add x24, x10, x13 # perform first operation
roriw x2, x20, 15 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard nohaz test
add x17, x2, x8 # perform first operation
roriw x3, x30, 29 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard nohaz test
add x8, x26, x25 # perform first operation
roriw x24, x11, 18 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard raw test
add x21, x29, x14 # perform first operation
roriw x3, x21, 3 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard raw test
add x11, x15, x24 # perform first operation
roriw x26, x2, 24 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard raw test
add x26, x11, x28 # perform first operation
roriw x12, x24, 22 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard waw test
add x3, x16, x27 # perform first operation
roriw x3, x10, 5 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard waw test
add x10, x7, x6 # perform first operation
roriw x10, x22, 1 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard waw test
add x6, x23, x9 # perform first operation
roriw x6, x17, 8 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard war test
add x21, x6, x12 # perform first operation
roriw x6, x24, 7 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard war test
add x1, x18, x14 # perform first operation
roriw x14, x9, 3 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard war test
add x31, x26, x1 # perform first operation
roriw x17, x20, 8 # perform second (triggering) operation

#.EQU SIGSIZE,1152


// ******************
// Tests from: WALLY-COV-rori.S
// ******************


# initialize signature pointer
la x4, begin_signature

    
# Testcase cp_rs1 (Test source rs1 = x0)
li x0, 0x6adf7c1edc3eeb32 # initialize rs1
rori x22, x0, 29 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 0)

# Testcase cp_rs1 (Test source rs1 = x1)
li x1, 0x2694ab0fae43a90d # initialize rs1
rori x14, x1, 11 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 8)

# Testcase cp_rs1 (Test source rs1 = x2)
li x2, 0x4a9fd4394759be11 # initialize rs1
rori x10, x2, 31 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 16)

# Testcase cp_rs1 (Test source rs1 = x3)
li x3, 0x864b59e6fd21717b # initialize rs1
rori x29, x3, 10 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 24)

# Testcase cp_rs1 (Test source rs1 = x4)
mv x5, x4 # switch signature pointer register to avoid conflict with test
li x4, 0x5ba437a467693c93 # initialize rs1
rori x3, x4, 2 # perform operation
RVTEST_SIGUPD(x5, x0, x3, 32)

# Testcase cp_rs1 (Test source rs1 = x5)
mv x6, x5 # switch signature pointer register to avoid conflict with test
li x5, 0x13e4ae47a5ca6db1 # initialize rs1
rori x12, x5, 38 # perform operation
RVTEST_SIGUPD(x6, x0, x12, 40)

# Testcase cp_rs1 (Test source rs1 = x6)
mv x7, x6 # switch signature pointer register to avoid conflict with test
li x6, 0x20c64779f3d3c0a4 # initialize rs1
rori x22, x6, 56 # perform operation
RVTEST_SIGUPD(x7, x0, x22, 48)

# Testcase cp_rs1 (Test source rs1 = x7)
mv x5, x7 # switch signature pointer register to avoid conflict with test
li x7, 0x695f4971de3875f2 # initialize rs1
rori x4, x7, 58 # perform operation
RVTEST_SIGUPD(x5, x0, x4, 56)

# Testcase cp_rs1 (Test source rs1 = x8)
li x8, 0x9552f34fc4e76769 # initialize rs1
rori x20, x8, 3 # perform operation
RVTEST_SIGUPD(x5, x0, x20, 64)

# Testcase cp_rs1 (Test source rs1 = x9)
li x9, 0x4f937986e81225c8 # initialize rs1
rori x11, x9, 21 # perform operation
RVTEST_SIGUPD(x5, x0, x11, 72)

# Testcase cp_rs1 (Test source rs1 = x10)
li x10, 0x923c8bcc0a4f7b04 # initialize rs1
rori x8, x10, 28 # perform operation
RVTEST_SIGUPD(x5, x0, x8, 80)

# Testcase cp_rs1 (Test source rs1 = x11)
li x11, 0xc08ca471785f403e # initialize rs1
rori x9, x11, 37 # perform operation
RVTEST_SIGUPD(x5, x0, x9, 88)

# Testcase cp_rs1 (Test source rs1 = x12)
li x12, 0x6e034b3eafddca88 # initialize rs1
rori x29, x12, 8 # perform operation
RVTEST_SIGUPD(x5, x0, x29, 96)

# Testcase cp_rs1 (Test source rs1 = x13)
li x13, 0x24e37dc845ca4f9f # initialize rs1
rori x25, x13, 39 # perform operation
RVTEST_SIGUPD(x5, x0, x25, 104)

# Testcase cp_rs1 (Test source rs1 = x14)
li x14, 0xda2e39b403ece6ef # initialize rs1
rori x2, x14, 4 # perform operation
RVTEST_SIGUPD(x5, x0, x2, 112)

# Testcase cp_rs1 (Test source rs1 = x15)
li x15, 0x01c070fbd3587460 # initialize rs1
rori x25, x15, 35 # perform operation
RVTEST_SIGUPD(x5, x0, x25, 120)

# Testcase cp_rs1 (Test source rs1 = x16)
li x16, 0xa04d717654c748dc # initialize rs1
rori x11, x16, 22 # perform operation
RVTEST_SIGUPD(x5, x0, x11, 128)

# Testcase cp_rs1 (Test source rs1 = x17)
li x17, 0x8c9d8cd51976c0ce # initialize rs1
rori x12, x17, 47 # perform operation
RVTEST_SIGUPD(x5, x0, x12, 136)

# Testcase cp_rs1 (Test source rs1 = x18)
li x18, 0xf3d65a88003ba424 # initialize rs1
rori x11, x18, 33 # perform operation
RVTEST_SIGUPD(x5, x0, x11, 144)

# Testcase cp_rs1 (Test source rs1 = x19)
li x19, 0xeac1c7419602416c # initialize rs1
rori x29, x19, 10 # perform operation
RVTEST_SIGUPD(x5, x0, x29, 152)

# Testcase cp_rs1 (Test source rs1 = x20)
li x20, 0x5ae0b2aee3b2fb37 # initialize rs1
rori x7, x20, 28 # perform operation
RVTEST_SIGUPD(x5, x0, x7, 160)

# Testcase cp_rs1 (Test source rs1 = x21)
li x21, 0x015140ba701ebe08 # initialize rs1
rori x22, x21, 44 # perform operation
RVTEST_SIGUPD(x5, x0, x22, 168)

# Testcase cp_rs1 (Test source rs1 = x22)
li x22, 0x07596c3d742493d3 # initialize rs1
rori x27, x22, 43 # perform operation
RVTEST_SIGUPD(x5, x0, x27, 176)

# Testcase cp_rs1 (Test source rs1 = x23)
li x23, 0xb4c446b24768ffb2 # initialize rs1
rori x25, x23, 27 # perform operation
RVTEST_SIGUPD(x5, x0, x25, 184)

# Testcase cp_rs1 (Test source rs1 = x24)
li x24, 0x810b984f2313039c # initialize rs1
rori x16, x24, 5 # perform operation
RVTEST_SIGUPD(x5, x0, x16, 192)

# Testcase cp_rs1 (Test source rs1 = x25)
li x25, 0x9d0a9842aa9ad75b # initialize rs1
rori x1, x25, 22 # perform operation
RVTEST_SIGUPD(x5, x0, x1, 200)

# Testcase cp_rs1 (Test source rs1 = x26)
li x26, 0x2515f1395675f61c # initialize rs1
rori x11, x26, 3 # perform operation
RVTEST_SIGUPD(x5, x0, x11, 208)

# Testcase cp_rs1 (Test source rs1 = x27)
li x27, 0xdb633a4ecce471b9 # initialize rs1
rori x7, x27, 1 # perform operation
RVTEST_SIGUPD(x5, x0, x7, 216)

# Testcase cp_rs1 (Test source rs1 = x28)
li x28, 0xda97e42415fe340f # initialize rs1
rori x14, x28, 0 # perform operation
RVTEST_SIGUPD(x5, x0, x14, 224)

# Testcase cp_rs1 (Test source rs1 = x29)
li x29, 0x0b688c082c3a606f # initialize rs1
rori x23, x29, 41 # perform operation
RVTEST_SIGUPD(x5, x0, x23, 232)

# Testcase cp_rs1 (Test source rs1 = x30)
li x30, 0x145953be2f558181 # initialize rs1
rori x25, x30, 21 # perform operation
RVTEST_SIGUPD(x5, x0, x25, 240)

# Testcase cp_rs1 (Test source rs1 = x31)
li x31, 0x001673d2440691b0 # initialize rs1
rori x30, x31, 35 # perform operation
RVTEST_SIGUPD(x5, x0, x30, 248)

# Testcase cp_rd (Test destination rd = x0)
li x4, 0x2a34df351dff7d03 # initialize rs1
rori x0, x4, 16 # perform operation
RVTEST_SIGUPD(x5, x0, x0, 256)

# Testcase cp_rd (Test destination rd = x1)
li x12, 0xf2c32b4b3aa267ac # initialize rs1
rori x1, x12, 45 # perform operation
RVTEST_SIGUPD(x5, x0, x1, 264)

# Testcase cp_rd (Test destination rd = x2)
li x4, 0x92bdc795fb0207b3 # initialize rs1
rori x2, x4, 16 # perform operation
RVTEST_SIGUPD(x5, x0, x2, 272)

# Testcase cp_rd (Test destination rd = x3)
li x30, 0x4cc2c552736f8361 # initialize rs1
rori x3, x30, 11 # perform operation
RVTEST_SIGUPD(x5, x0, x3, 280)

# Testcase cp_rd (Test destination rd = x4)
li x8, 0x3dbd19919e5fb210 # initialize rs1
rori x4, x8, 7 # perform operation
RVTEST_SIGUPD(x5, x0, x4, 288)

# Testcase cp_rd (Test destination rd = x5)
mv x6, x5 # switch signature pointer register to avoid conflict with test
li x29, 0x498dde952c4a2be1 # initialize rs1
rori x5, x29, 4 # perform operation
RVTEST_SIGUPD(x6, x0, x5, 296)

# Testcase cp_rd (Test destination rd = x6)
mv x7, x6 # switch signature pointer register to avoid conflict with test
li x23, 0xbba7c31fbd19ad1e # initialize rs1
rori x6, x23, 42 # perform operation
RVTEST_SIGUPD(x7, x0, x6, 304)

# Testcase cp_rd (Test destination rd = x7)
mv x4, x7 # switch signature pointer register to avoid conflict with test
li x23, 0xcb45b3c1b750cf75 # initialize rs1
rori x7, x23, 53 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 312)

# Testcase cp_rd (Test destination rd = x8)
li x13, 0x08a28d70911dd46f # initialize rs1
rori x8, x13, 59 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 320)

# Testcase cp_rd (Test destination rd = x9)
li x28, 0x0a35f22e20d8a4ff # initialize rs1
rori x9, x28, 58 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 328)

# Testcase cp_rd (Test destination rd = x10)
li x31, 0xb63ffaff03fc3c7f # initialize rs1
rori x10, x31, 39 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 336)

# Testcase cp_rd (Test destination rd = x11)
li x3, 0x1254415ae99c2e26 # initialize rs1
rori x11, x3, 50 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 344)

# Testcase cp_rd (Test destination rd = x12)
li x5, 0xaeb7053cef8ab89e # initialize rs1
rori x12, x5, 10 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 352)

# Testcase cp_rd (Test destination rd = x13)
li x3, 0xcb6a8ecba18df7ac # initialize rs1
rori x13, x3, 1 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 360)

# Testcase cp_rd (Test destination rd = x14)
li x21, 0x3a82a15924a11599 # initialize rs1
rori x14, x21, 25 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 368)

# Testcase cp_rd (Test destination rd = x15)
li x12, 0xdc3831e0b4fe65f7 # initialize rs1
rori x15, x12, 34 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 376)

# Testcase cp_rd (Test destination rd = x16)
li x21, 0xe83dd08411dff7a1 # initialize rs1
rori x16, x21, 63 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 384)

# Testcase cp_rd (Test destination rd = x17)
li x10, 0xb2a377302916b425 # initialize rs1
rori x17, x10, 20 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 392)

# Testcase cp_rd (Test destination rd = x18)
li x2, 0xd6c221c2a63c8473 # initialize rs1
rori x18, x2, 22 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 400)

# Testcase cp_rd (Test destination rd = x19)
li x8, 0xa9427f155426c6d7 # initialize rs1
rori x19, x8, 18 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 408)

# Testcase cp_rd (Test destination rd = x20)
li x30, 0xdfae320df83c870f # initialize rs1
rori x20, x30, 59 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 416)

# Testcase cp_rd (Test destination rd = x21)
li x11, 0xd8345d343a1a6456 # initialize rs1
rori x21, x11, 32 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 424)

# Testcase cp_rd (Test destination rd = x22)
li x11, 0xd7b4c9c7a8e12a17 # initialize rs1
rori x22, x11, 0 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 432)

# Testcase cp_rd (Test destination rd = x23)
li x9, 0x4f9e368117594c05 # initialize rs1
rori x23, x9, 46 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 440)

# Testcase cp_rd (Test destination rd = x24)
li x13, 0x551fa16d0203f384 # initialize rs1
rori x24, x13, 53 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 448)

# Testcase cp_rd (Test destination rd = x25)
li x6, 0x29518994994e9932 # initialize rs1
rori x25, x6, 45 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 456)

# Testcase cp_rd (Test destination rd = x26)
li x20, 0x0b06b274611fb91f # initialize rs1
rori x26, x20, 4 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 464)

# Testcase cp_rd (Test destination rd = x27)
li x1, 0xaa9896d41460f3b5 # initialize rs1
rori x27, x1, 52 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 472)

# Testcase cp_rd (Test destination rd = x28)
li x1, 0x61a83736ef387566 # initialize rs1
rori x28, x1, 29 # perform operation
RVTEST_SIGUPD(x4, x0, x28, 480)

# Testcase cp_rd (Test destination rd = x29)
li x28, 0x04bdcade835a0ad3 # initialize rs1
rori x29, x28, 19 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 488)

# Testcase cp_rd (Test destination rd = x30)
li x18, 0x75a855f01ef78ae9 # initialize rs1
rori x30, x18, 54 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 496)

# Testcase cp_rd (Test destination rd = x31)
li x21, 0xfef5c18c56726d2d # initialize rs1
rori x31, x21, 25 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 504)

# Testcase cp_rs1_corners (Test source rs1 value = 0x0)
li x3, 0x0000000000000000 # initialize rs1
rori x28, x3, 58 # perform operation
RVTEST_SIGUPD(x4, x0, x28, 512)

# Testcase cp_rs1_corners (Test source rs1 value = 0x1)
li x17, 0x0000000000000001 # initialize rs1
rori x26, x17, 18 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 520)

# Testcase cp_rs1_corners (Test source rs1 value = 0x2)
li x16, 0x0000000000000002 # initialize rs1
rori x15, x16, 58 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 528)

# Testcase cp_rs1_corners (Test source rs1 value = 0x8000000000000000)
li x12, 0x8000000000000000 # initialize rs1
rori x11, x12, 30 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 536)

# Testcase cp_rs1_corners (Test source rs1 value = 0x8000000000000001)
li x31, 0x8000000000000001 # initialize rs1
rori x15, x31, 28 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 544)

# Testcase cp_rs1_corners (Test source rs1 value = 0x7fffffffffffffff)
li x31, 0x7fffffffffffffff # initialize rs1
rori x25, x31, 59 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 552)

# Testcase cp_rs1_corners (Test source rs1 value = 0x7ffffffffffffffe)
li x25, 0x7ffffffffffffffe # initialize rs1
rori x12, x25, 50 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 560)

# Testcase cp_rs1_corners (Test source rs1 value = 0xffffffffffffffff)
li x21, 0xffffffffffffffff # initialize rs1
rori x1, x21, 11 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 568)

# Testcase cp_rs1_corners (Test source rs1 value = 0xfffffffffffffffe)
li x9, 0xfffffffffffffffe # initialize rs1
rori x30, x9, 3 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 576)

# Testcase cp_rs1_corners (Test source rs1 value = 0x5bbc887763ae86f2)
li x31, 0x5bbc887763ae86f2 # initialize rs1
rori x12, x31, 2 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 584)

# Testcase cp_rs1_corners (Test source rs1 value = 0xaaaaaaaaaaaaaaaa)
li x23, 0xaaaaaaaaaaaaaaaa # initialize rs1
rori x14, x23, 17 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 592)

# Testcase cp_rs1_corners (Test source rs1 value = 0x5555555555555555)
li x13, 0x5555555555555555 # initialize rs1
rori x24, x13, 46 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 600)

# Testcase cp_rs1_corners (Test source rs1 value = 0xffffffff)
li x18, 0x00000000ffffffff # initialize rs1
rori x26, x18, 42 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 608)

# Testcase cp_rs1_corners (Test source rs1 value = 0xfffffffe)
li x3, 0x00000000fffffffe # initialize rs1
rori x18, x3, 58 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 616)

# Testcase cp_rs1_corners (Test source rs1 value = 0x100000000)
li x21, 0x0000000100000000 # initialize rs1
rori x3, x21, 20 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 624)

# Testcase cp_rs1_corners (Test source rs1 value = 0x100000001)
li x17, 0x0000000100000001 # initialize rs1
rori x24, x17, 1 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 632)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x0)
li x0, 0xafccc1378cc5f0f4 # initialize rs1
rori x0, x0, 44 # perform operation
RVTEST_SIGUPD(x4, x0, x0, 640)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x1)
li x1, 0xc69f6b250424b4cd # initialize rs1
rori x1, x1, 29 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 648)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x2)
li x2, 0xea6bd4ea04499fa6 # initialize rs1
rori x2, x2, 43 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 656)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x3)
li x3, 0x536c498944b4bf71 # initialize rs1
rori x3, x3, 29 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 664)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x4)
mv x5, x4 # switch signature pointer register to avoid conflict with test
li x4, 0xb5c32a7bb763bb53 # initialize rs1
rori x4, x4, 1 # perform operation
RVTEST_SIGUPD(x5, x0, x4, 672)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x5)
mv x6, x5 # switch signature pointer register to avoid conflict with test
li x5, 0xd2478bbff3a20a78 # initialize rs1
rori x5, x5, 29 # perform operation
RVTEST_SIGUPD(x6, x0, x5, 680)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x6)
mv x7, x6 # switch signature pointer register to avoid conflict with test
li x6, 0xa7d8a3f76089fa5c # initialize rs1
rori x6, x6, 23 # perform operation
RVTEST_SIGUPD(x7, x0, x6, 688)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x7)
mv x4, x7 # switch signature pointer register to avoid conflict with test
li x7, 0xc7cf39e56d06a0c8 # initialize rs1
rori x7, x7, 61 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 696)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x8)
li x8, 0xcadd9e7dacdbc348 # initialize rs1
rori x8, x8, 19 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 704)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x9)
li x9, 0x175a993ed1e04372 # initialize rs1
rori x9, x9, 3 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 712)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x10)
li x10, 0xf236ce2a5857dd25 # initialize rs1
rori x10, x10, 62 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 720)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x11)
li x11, 0x4b9bb266d103574c # initialize rs1
rori x11, x11, 9 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 728)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x12)
li x12, 0x5c5a805142d5eeaf # initialize rs1
rori x12, x12, 4 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 736)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x13)
li x13, 0x60933c65b84729f8 # initialize rs1
rori x13, x13, 63 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 744)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x14)
li x14, 0x33326956325e02f3 # initialize rs1
rori x14, x14, 63 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 752)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x15)
li x15, 0x6c097d2458d887e4 # initialize rs1
rori x15, x15, 41 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 760)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x16)
li x16, 0xe8ed2bab5691c80d # initialize rs1
rori x16, x16, 9 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 768)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x17)
li x17, 0xfdca88224fb260b6 # initialize rs1
rori x17, x17, 18 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 776)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x18)
li x18, 0xd9ad8ff009ff638f # initialize rs1
rori x18, x18, 26 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 784)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x19)
li x19, 0xd31cc36c4254356f # initialize rs1
rori x19, x19, 16 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 792)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x20)
li x20, 0x8a94c194ca6211de # initialize rs1
rori x20, x20, 32 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 800)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x21)
li x21, 0x00c66c383ed8dd83 # initialize rs1
rori x21, x21, 20 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 808)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x22)
li x22, 0xe55766cc341ca22b # initialize rs1
rori x22, x22, 17 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 816)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x23)
li x23, 0x0e9f37f5da20bfb5 # initialize rs1
rori x23, x23, 56 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 824)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x24)
li x24, 0xa5907ce88fcbbf66 # initialize rs1
rori x24, x24, 37 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 832)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x25)
li x25, 0x915febad775f9b79 # initialize rs1
rori x25, x25, 40 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 840)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x26)
li x26, 0x3fcefbc0a5feb08a # initialize rs1
rori x26, x26, 37 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 848)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x27)
li x27, 0x1bcdeca1ee5fc538 # initialize rs1
rori x27, x27, 32 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 856)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x28)
li x28, 0x4bf8efe429c8f11a # initialize rs1
rori x28, x28, 5 # perform operation
RVTEST_SIGUPD(x4, x0, x28, 864)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x29)
li x29, 0x1d65b1c831b83088 # initialize rs1
rori x29, x29, 48 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 872)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x30)
li x30, 0x6a43e1f25583c492 # initialize rs1
rori x30, x30, 48 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 880)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x31)
li x31, 0xa28562489fb76c9a # initialize rs1
rori x31, x31, 41 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 888)

# Testcase cp_uimm (Test bit = 0)
li x28, 0x159809464c473c80 # initialize rs1
rori x8, x28, 0 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 896)

# Testcase cp_uimm (Test bit = 1)
li x1, 0xcf26035e7fc4b360 # initialize rs1
rori x19, x1, 1 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 904)

# Testcase cp_uimm (Test bit = 2)
li x14, 0x461494d08949a1a5 # initialize rs1
rori x16, x14, 2 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 912)

# Testcase cp_uimm (Test bit = 3)
li x21, 0x791246b44a2fe6d4 # initialize rs1
rori x6, x21, 3 # perform operation
RVTEST_SIGUPD(x4, x0, x6, 920)

# Testcase cp_uimm (Test bit = 4)
li x19, 0xdcd168ba3fd68058 # initialize rs1
rori x15, x19, 4 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 928)

# Testcase cp_uimm (Test bit = 5)
li x2, 0x7df72db3396b69a4 # initialize rs1
rori x20, x2, 5 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 936)

# Testcase cp_uimm (Test bit = 6)
li x21, 0x8e13f8555db826b5 # initialize rs1
rori x15, x21, 6 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 944)

# Testcase cp_uimm (Test bit = 7)
li x14, 0x1ee18bd89c1dd822 # initialize rs1
rori x16, x14, 7 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 952)

# Testcase cp_uimm (Test bit = 8)
li x23, 0xd4d8bd8208dfb90e # initialize rs1
rori x7, x23, 8 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 960)

# Testcase cp_uimm (Test bit = 9)
li x20, 0xe502f3c57f5ccbbb # initialize rs1
rori x6, x20, 9 # perform operation
RVTEST_SIGUPD(x4, x0, x6, 968)

# Testcase cp_uimm (Test bit = 10)
li x27, 0xb219e544f2dfa696 # initialize rs1
rori x15, x27, 10 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 976)

# Testcase cp_uimm (Test bit = 11)
li x26, 0x8e7217fe4b6f3a38 # initialize rs1
rori x5, x26, 11 # perform operation
RVTEST_SIGUPD(x4, x0, x5, 984)

# Testcase cp_uimm (Test bit = 12)
li x16, 0x3ca7c33c7aa3f2c0 # initialize rs1
rori x7, x16, 12 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 992)

# Testcase cp_uimm (Test bit = 13)
li x15, 0x63178ecdfc8cb06c # initialize rs1
rori x11, x15, 13 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 1000)

# Testcase cp_uimm (Test bit = 14)
li x29, 0xe79c2716ed731cf7 # initialize rs1
rori x22, x29, 14 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 1008)

# Testcase cp_uimm (Test bit = 15)
li x10, 0x1a36820f186a295f # initialize rs1
rori x2, x10, 15 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 1016)

# Testcase cp_uimm (Test bit = 16)
li x2, 0x847e7a4366b42ec0 # initialize rs1
rori x25, x2, 16 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 1024)

# Testcase cp_uimm (Test bit = 17)
li x28, 0x8b79d551050e0cef # initialize rs1
rori x10, x28, 17 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 1032)

# Testcase cp_uimm (Test bit = 18)
li x30, 0x2d9d5be03d8d7c82 # initialize rs1
rori x24, x30, 18 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 1040)

# Testcase cp_uimm (Test bit = 19)
li x31, 0xaab0c7677b46ae01 # initialize rs1
rori x10, x31, 19 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 1048)

# Testcase cp_uimm (Test bit = 20)
li x3, 0xecf1b194241b42ed # initialize rs1
rori x10, x3, 20 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 1056)

# Testcase cp_uimm (Test bit = 21)
li x27, 0x313f909c95d64750 # initialize rs1
rori x11, x27, 21 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 1064)

# Testcase cp_uimm (Test bit = 22)
li x31, 0xccb07d3c326e7b23 # initialize rs1
rori x6, x31, 22 # perform operation
RVTEST_SIGUPD(x4, x0, x6, 1072)

# Testcase cp_uimm (Test bit = 23)
li x6, 0x97707b33c90be31d # initialize rs1
rori x18, x6, 23 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 1080)

# Testcase cp_uimm (Test bit = 24)
li x18, 0xa8cc712ffb396777 # initialize rs1
rori x15, x18, 24 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 1088)

# Testcase cp_uimm (Test bit = 25)
li x29, 0x265aef0f5cc47be4 # initialize rs1
rori x24, x29, 25 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 1096)

# Testcase cp_uimm (Test bit = 26)
li x23, 0x358cfde6703ef245 # initialize rs1
rori x14, x23, 26 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 1104)

# Testcase cp_uimm (Test bit = 27)
li x19, 0xf48d5293954f67ac # initialize rs1
rori x12, x19, 27 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 1112)

# Testcase cp_uimm (Test bit = 28)
li x26, 0x6cf8e667571792ea # initialize rs1
rori x1, x26, 28 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 1120)

# Testcase cp_uimm (Test bit = 29)
li x12, 0x34335c08075d53d5 # initialize rs1
rori x15, x12, 29 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 1128)

# Testcase cp_uimm (Test bit = 30)
li x16, 0x4a3dd500100c0ff7 # initialize rs1
rori x13, x16, 30 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 1136)

# Testcase cp_uimm (Test bit = 31)
li x15, 0xceb0df92017b835c # initialize rs1
rori x2, x15, 31 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 1144)

# Testcase cp_uimm (Test bit = 32)
li x15, 0x8d09b8d5d3eeb740 # initialize rs1
rori x13, x15, 32 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 1152)

# Testcase cp_uimm (Test bit = 33)
li x3, 0xad6ee2fa284ab67d # initialize rs1
rori x30, x3, 33 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 1160)

# Testcase cp_uimm (Test bit = 34)
li x1, 0x0c75ed9fd7981caa # initialize rs1
rori x11, x1, 34 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 1168)

# Testcase cp_uimm (Test bit = 35)
li x20, 0x6b3997d9fbf4759f # initialize rs1
rori x15, x20, 35 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 1176)

# Testcase cp_uimm (Test bit = 36)
li x7, 0xb7f4b08bfef0891e # initialize rs1
rori x1, x7, 36 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 1184)

# Testcase cp_uimm (Test bit = 37)
li x8, 0x878968c71e8747b4 # initialize rs1
rori x24, x8, 37 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 1192)

# Testcase cp_uimm (Test bit = 38)
li x22, 0x174a63a5d28f674b # initialize rs1
rori x5, x22, 38 # perform operation
RVTEST_SIGUPD(x4, x0, x5, 1200)

# Testcase cp_uimm (Test bit = 39)
li x14, 0x89a0abc01c6e1f09 # initialize rs1
rori x27, x14, 39 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 1208)

# Testcase cp_uimm (Test bit = 40)
li x18, 0x5d0e844efa35bc06 # initialize rs1
rori x22, x18, 40 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 1216)

# Testcase cp_uimm (Test bit = 41)
li x26, 0x66eb0a451c38634b # initialize rs1
rori x17, x26, 41 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 1224)

# Testcase cp_uimm (Test bit = 42)
li x30, 0x2f253993b15ba446 # initialize rs1
rori x29, x30, 42 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 1232)

# Testcase cp_uimm (Test bit = 43)
li x18, 0x5334728cbbaeb00e # initialize rs1
rori x11, x18, 43 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 1240)

# Testcase cp_uimm (Test bit = 44)
li x22, 0xb7bf5f91b2d402c4 # initialize rs1
rori x23, x22, 44 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 1248)

# Testcase cp_uimm (Test bit = 45)
li x31, 0x76b9b7d0551afba1 # initialize rs1
rori x6, x31, 45 # perform operation
RVTEST_SIGUPD(x4, x0, x6, 1256)

# Testcase cp_uimm (Test bit = 46)
li x30, 0x126b61e04b5a08a0 # initialize rs1
rori x18, x30, 46 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 1264)

# Testcase cp_uimm (Test bit = 47)
li x26, 0xd1d75a1b1fe6f9a9 # initialize rs1
rori x16, x26, 47 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 1272)

# Testcase cp_uimm (Test bit = 48)
li x23, 0xcbfab8214bab9308 # initialize rs1
rori x12, x23, 48 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 1280)

# Testcase cp_uimm (Test bit = 49)
li x16, 0x02cb7c3f62ac97c4 # initialize rs1
rori x14, x16, 49 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 1288)

# Testcase cp_uimm (Test bit = 50)
li x14, 0x06f35a73a4dd3232 # initialize rs1
rori x20, x14, 50 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 1296)

# Testcase cp_uimm (Test bit = 51)
li x28, 0xf0de176b68febe79 # initialize rs1
rori x9, x28, 51 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 1304)

# Testcase cp_uimm (Test bit = 52)
li x17, 0xe1b3d3516828a84b # initialize rs1
rori x18, x17, 52 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 1312)

# Testcase cp_uimm (Test bit = 53)
li x26, 0xb00b0a4a75cac4ab # initialize rs1
rori x27, x26, 53 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 1320)

# Testcase cp_uimm (Test bit = 54)
li x14, 0x345b8b375e392eaa # initialize rs1
rori x13, x14, 54 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 1328)

# Testcase cp_uimm (Test bit = 55)
li x8, 0x15c55119d186d277 # initialize rs1
rori x7, x8, 55 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 1336)

# Testcase cp_uimm (Test bit = 56)
li x27, 0x50961a4186e21e00 # initialize rs1
rori x7, x27, 56 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 1344)

# Testcase cp_uimm (Test bit = 57)
li x18, 0x6177ce8e049fcd59 # initialize rs1
rori x26, x18, 57 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 1352)

# Testcase cp_uimm (Test bit = 58)
li x18, 0x09619b454d6f9dbc # initialize rs1
rori x10, x18, 58 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 1360)

# Testcase cp_uimm (Test bit = 59)
li x25, 0xf4266c111760c7df # initialize rs1
rori x19, x25, 59 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 1368)

# Testcase cp_uimm (Test bit = 60)
li x24, 0x68e0fec6ad2a4a20 # initialize rs1
rori x19, x24, 60 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 1376)

# Testcase cp_uimm (Test bit = 61)
li x27, 0x6f376577d40930c4 # initialize rs1
rori x8, x27, 61 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 1384)

# Testcase cp_uimm (Test bit = 62)
li x3, 0x757f7bcdc11f29d0 # initialize rs1
rori x26, x3, 62 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 1392)

# Testcase cp_uimm (Test bit = 63)
li x1, 0x66bbcf6cc3aa9d70 # initialize rs1
rori x13, x1, 63 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 1400)

# Testcase cp_gpr/fpr_hazard nohaz test
add x17, x10, x21 # perform first operation
rori x5, x20, 54 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard nohaz test
add x16, x22, x8 # perform first operation
rori x10, x30, 53 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard nohaz test
add x21, x14, x8 # perform first operation
rori x9, x20, 56 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard raw test
add x6, x18, x15 # perform first operation
rori x18, x6, 57 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard raw test
add x9, x28, x13 # perform first operation
rori x9, x28, 13 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard raw test
add x1, x19, x5 # perform first operation
rori x1, x29, 51 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard waw test
add x2, x24, x5 # perform first operation
rori x2, x22, 59 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard waw test
add x13, x6, x1 # perform first operation
rori x13, x19, 53 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard waw test
add x6, x27, x24 # perform first operation
rori x6, x2, 50 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard war test
add x10, x14, x13 # perform first operation
rori x14, x3, 28 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard war test
add x1, x17, x26 # perform first operation
rori x26, x3, 58 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard war test
add x15, x8, x27 # perform first operation
rori x20, x6, 36 # perform second (triggering) operation

#.EQU SIGSIZE,1408


// ******************
// Tests from: WALLY-COV-clzw.S
// ******************


# initialize signature pointer
la x4, begin_signature

    
# Testcase cp_rs1 (Test source rs1 = x0)
li x0, 0xe5bdd3a9989950e1 # initialize rs1
clzw x23, x0 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 0)

# Testcase cp_rs1 (Test source rs1 = x1)
li x1, 0x78beb7e26dbbcf38 # initialize rs1
clzw x25, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 8)

# Testcase cp_rs1 (Test source rs1 = x2)
li x2, 0x93d1f6456aca6615 # initialize rs1
clzw x20, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 16)

# Testcase cp_rs1 (Test source rs1 = x3)
li x3, 0x3f51604551817868 # initialize rs1
clzw x22, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 24)

# Testcase cp_rs1 (Test source rs1 = x4)
mv x5, x4 # switch signature pointer register to avoid conflict with test
li x4, 0xbebf8b80d1cb4a61 # initialize rs1
clzw x30, x4 # perform operation
RVTEST_SIGUPD(x5, x0, x30, 32)

# Testcase cp_rs1 (Test source rs1 = x5)
mv x6, x5 # switch signature pointer register to avoid conflict with test
li x5, 0xb028a9c2c6898ff2 # initialize rs1
clzw x12, x5 # perform operation
RVTEST_SIGUPD(x6, x0, x12, 40)

# Testcase cp_rs1 (Test source rs1 = x6)
mv x7, x6 # switch signature pointer register to avoid conflict with test
li x6, 0xdabd25ae94566f5e # initialize rs1
clzw x13, x6 # perform operation
RVTEST_SIGUPD(x7, x0, x13, 48)

# Testcase cp_rs1 (Test source rs1 = x7)
mv x4, x7 # switch signature pointer register to avoid conflict with test
li x7, 0x4aa8fd32deba1115 # initialize rs1
clzw x20, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 56)

# Testcase cp_rs1 (Test source rs1 = x8)
li x8, 0x6200f659add67514 # initialize rs1
clzw x26, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 64)

# Testcase cp_rs1 (Test source rs1 = x9)
li x9, 0x6d59273a76c33000 # initialize rs1
clzw x26, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 72)

# Testcase cp_rs1 (Test source rs1 = x10)
li x10, 0x56b90fbd5a9134e4 # initialize rs1
clzw x22, x10 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 80)

# Testcase cp_rs1 (Test source rs1 = x11)
li x11, 0x26b9b35384bd8b75 # initialize rs1
clzw x5, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x5, 88)

# Testcase cp_rs1 (Test source rs1 = x12)
li x12, 0x82db6501c4a681e8 # initialize rs1
clzw x16, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 96)

# Testcase cp_rs1 (Test source rs1 = x13)
li x13, 0x97b98139b327130a # initialize rs1
clzw x10, x13 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 104)

# Testcase cp_rs1 (Test source rs1 = x14)
li x14, 0xb657fd79ed869421 # initialize rs1
clzw x25, x14 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 112)

# Testcase cp_rs1 (Test source rs1 = x15)
li x15, 0x1aef64b39c4421c7 # initialize rs1
clzw x17, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 120)

# Testcase cp_rs1 (Test source rs1 = x16)
li x16, 0x40560c5e02df6316 # initialize rs1
clzw x25, x16 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 128)

# Testcase cp_rs1 (Test source rs1 = x17)
li x17, 0xf824209c31921715 # initialize rs1
clzw x1, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 136)

# Testcase cp_rs1 (Test source rs1 = x18)
li x18, 0xc7109c77d11663ac # initialize rs1
clzw x24, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 144)

# Testcase cp_rs1 (Test source rs1 = x19)
li x19, 0xae6ea48fd5ed4bf8 # initialize rs1
clzw x18, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 152)

# Testcase cp_rs1 (Test source rs1 = x20)
li x20, 0xcf2d9e093d5fbd84 # initialize rs1
clzw x17, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 160)

# Testcase cp_rs1 (Test source rs1 = x21)
li x21, 0xc2561383117e6105 # initialize rs1
clzw x19, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 168)

# Testcase cp_rs1 (Test source rs1 = x22)
li x22, 0x17988f7574dd50fa # initialize rs1
clzw x14, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 176)

# Testcase cp_rs1 (Test source rs1 = x23)
li x23, 0xb51993037bb739aa # initialize rs1
clzw x25, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 184)

# Testcase cp_rs1 (Test source rs1 = x24)
li x24, 0xc83ead7a071534ff # initialize rs1
clzw x7, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 192)

# Testcase cp_rs1 (Test source rs1 = x25)
li x25, 0x20f6e65ccd1f824d # initialize rs1
clzw x8, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 200)

# Testcase cp_rs1 (Test source rs1 = x26)
li x26, 0x8178d528e27e9d19 # initialize rs1
clzw x22, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 208)

# Testcase cp_rs1 (Test source rs1 = x27)
li x27, 0x3d9d733994219523 # initialize rs1
clzw x25, x27 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 216)

# Testcase cp_rs1 (Test source rs1 = x28)
li x28, 0x787f219f620e06c8 # initialize rs1
clzw x18, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 224)

# Testcase cp_rs1 (Test source rs1 = x29)
li x29, 0x6e3d0f6517b5025b # initialize rs1
clzw x20, x29 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 232)

# Testcase cp_rs1 (Test source rs1 = x30)
li x30, 0xb3ec962d114f9bbe # initialize rs1
clzw x12, x30 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 240)

# Testcase cp_rs1 (Test source rs1 = x31)
li x31, 0xc025facb8945b2fb # initialize rs1
clzw x20, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 248)

# Testcase cp_rd (Test destination rd = x0)
li x24, 0x451d8bd8ebfcd466 # initialize rs1
clzw x0, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x0, 256)

# Testcase cp_rd (Test destination rd = x1)
li x5, 0x533a983c96662e94 # initialize rs1
clzw x1, x5 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 264)

# Testcase cp_rd (Test destination rd = x2)
li x8, 0x539b390ef68e7b26 # initialize rs1
clzw x2, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 272)

# Testcase cp_rd (Test destination rd = x3)
li x1, 0xc02f7249266b7700 # initialize rs1
clzw x3, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 280)

# Testcase cp_rd (Test destination rd = x4)
mv x5, x4 # switch signature pointer register to avoid conflict with test
li x6, 0x2eab957761ce6afa # initialize rs1
clzw x4, x6 # perform operation
RVTEST_SIGUPD(x5, x0, x4, 288)

# Testcase cp_rd (Test destination rd = x5)
mv x6, x5 # switch signature pointer register to avoid conflict with test
li x2, 0xe3e7efc2ec602bb8 # initialize rs1
clzw x5, x2 # perform operation
RVTEST_SIGUPD(x6, x0, x5, 296)

# Testcase cp_rd (Test destination rd = x6)
mv x7, x6 # switch signature pointer register to avoid conflict with test
li x27, 0x4dae66feea9eef7b # initialize rs1
clzw x6, x27 # perform operation
RVTEST_SIGUPD(x7, x0, x6, 304)

# Testcase cp_rd (Test destination rd = x7)
mv x4, x7 # switch signature pointer register to avoid conflict with test
li x2, 0x643eee89c955b51d # initialize rs1
clzw x7, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 312)

# Testcase cp_rd (Test destination rd = x8)
li x22, 0x4d36d10e1142d0d4 # initialize rs1
clzw x8, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 320)

# Testcase cp_rd (Test destination rd = x9)
li x17, 0x092881945f88b482 # initialize rs1
clzw x9, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 328)

# Testcase cp_rd (Test destination rd = x10)
li x16, 0x0f44ff5f92dfd496 # initialize rs1
clzw x10, x16 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 336)

# Testcase cp_rd (Test destination rd = x11)
li x2, 0x4a7dfce4fee1de7d # initialize rs1
clzw x11, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 344)

# Testcase cp_rd (Test destination rd = x12)
li x6, 0x915effd475ccb4bb # initialize rs1
clzw x12, x6 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 352)

# Testcase cp_rd (Test destination rd = x13)
li x28, 0xdc9a56141d2c5f45 # initialize rs1
clzw x13, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 360)

# Testcase cp_rd (Test destination rd = x14)
li x1, 0xcd8fd417e17466b3 # initialize rs1
clzw x14, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 368)

# Testcase cp_rd (Test destination rd = x15)
li x18, 0x23e771744eca5530 # initialize rs1
clzw x15, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 376)

# Testcase cp_rd (Test destination rd = x16)
li x6, 0x45bb0c1e0d245778 # initialize rs1
clzw x16, x6 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 384)

# Testcase cp_rd (Test destination rd = x17)
li x20, 0x12aacf74525c6a3c # initialize rs1
clzw x17, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 392)

# Testcase cp_rd (Test destination rd = x18)
li x11, 0xd6442fa9b9f302ca # initialize rs1
clzw x18, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 400)

# Testcase cp_rd (Test destination rd = x19)
li x22, 0x96bda632b1a7ab6f # initialize rs1
clzw x19, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 408)

# Testcase cp_rd (Test destination rd = x20)
li x24, 0x6608211dbf7be474 # initialize rs1
clzw x20, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 416)

# Testcase cp_rd (Test destination rd = x21)
li x16, 0x7f7d1763bac7566a # initialize rs1
clzw x21, x16 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 424)

# Testcase cp_rd (Test destination rd = x22)
li x5, 0xcedef668915cbdee # initialize rs1
clzw x22, x5 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 432)

# Testcase cp_rd (Test destination rd = x23)
li x1, 0x68a5f43bfe632823 # initialize rs1
clzw x23, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 440)

# Testcase cp_rd (Test destination rd = x24)
li x24, 0xc5b018c4ec93d82e # initialize rs1
clzw x24, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 448)

# Testcase cp_rd (Test destination rd = x25)
li x9, 0x754ccd465020c3cd # initialize rs1
clzw x25, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 456)

# Testcase cp_rd (Test destination rd = x26)
li x27, 0x7cff3c51f3b2997d # initialize rs1
clzw x26, x27 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 464)

# Testcase cp_rd (Test destination rd = x27)
li x2, 0x3829cae6f8a6b364 # initialize rs1
clzw x27, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 472)

# Testcase cp_rd (Test destination rd = x28)
li x15, 0xc094472779b67cb7 # initialize rs1
clzw x28, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x28, 480)

# Testcase cp_rd (Test destination rd = x29)
li x22, 0xfea8ff2c735fb478 # initialize rs1
clzw x29, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 488)

# Testcase cp_rd (Test destination rd = x30)
li x24, 0x473e72a0e5d41e91 # initialize rs1
clzw x30, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 496)

# Testcase cp_rd (Test destination rd = x31)
li x27, 0x08ca525ffca0a903 # initialize rs1
clzw x31, x27 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 504)

# Testcase cp_rs1_corners (Test source rs1 value = 0x0)
li x25, 0x0000000000000000 # initialize rs1
clzw x29, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 512)

# Testcase cp_rs1_corners (Test source rs1 value = 0x1)
li x10, 0x0000000000000001 # initialize rs1
clzw x28, x10 # perform operation
RVTEST_SIGUPD(x4, x0, x28, 520)

# Testcase cp_rs1_corners (Test source rs1 value = 0x2)
li x25, 0x0000000000000002 # initialize rs1
clzw x2, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 528)

# Testcase cp_rs1_corners (Test source rs1 value = 0x8000000000000000)
li x22, 0x8000000000000000 # initialize rs1
clzw x19, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 536)

# Testcase cp_rs1_corners (Test source rs1 value = 0x8000000000000001)
li x16, 0x8000000000000001 # initialize rs1
clzw x19, x16 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 544)

# Testcase cp_rs1_corners (Test source rs1 value = 0x7fffffffffffffff)
li x12, 0x7fffffffffffffff # initialize rs1
clzw x8, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 552)

# Testcase cp_rs1_corners (Test source rs1 value = 0x7ffffffffffffffe)
li x26, 0x7ffffffffffffffe # initialize rs1
clzw x5, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x5, 560)

# Testcase cp_rs1_corners (Test source rs1 value = 0xffffffffffffffff)
li x25, 0xffffffffffffffff # initialize rs1
clzw x5, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x5, 568)

# Testcase cp_rs1_corners (Test source rs1 value = 0xfffffffffffffffe)
li x7, 0xfffffffffffffffe # initialize rs1
clzw x6, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x6, 576)

# Testcase cp_rs1_corners (Test source rs1 value = 0x5bbc887763ae86f2)
li x10, 0x5bbc887763ae86f2 # initialize rs1
clzw x20, x10 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 584)

# Testcase cp_rs1_corners (Test source rs1 value = 0xaaaaaaaaaaaaaaaa)
li x31, 0xaaaaaaaaaaaaaaaa # initialize rs1
clzw x15, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 592)

# Testcase cp_rs1_corners (Test source rs1 value = 0x5555555555555555)
li x29, 0x5555555555555555 # initialize rs1
clzw x22, x29 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 600)

# Testcase cp_rs1_corners (Test source rs1 value = 0xffffffff)
li x5, 0x00000000ffffffff # initialize rs1
clzw x15, x5 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 608)

# Testcase cp_rs1_corners (Test source rs1 value = 0xfffffffe)
li x15, 0x00000000fffffffe # initialize rs1
clzw x3, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 616)

# Testcase cp_rs1_corners (Test source rs1 value = 0x100000000)
li x18, 0x0000000100000000 # initialize rs1
clzw x1, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 624)

# Testcase cp_rs1_corners (Test source rs1 value = 0x100000001)
li x10, 0x0000000100000001 # initialize rs1
clzw x20, x10 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 632)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x0)
li x0, 0xca434861d6066d2a # initialize rs1
clzw x0, x0 # perform operation
RVTEST_SIGUPD(x4, x0, x0, 640)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x1)
li x1, 0x86f1e310430bc250 # initialize rs1
clzw x1, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 648)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x2)
li x2, 0x2fc745756be02ef5 # initialize rs1
clzw x2, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 656)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x3)
li x3, 0xbf60bcad02939c16 # initialize rs1
clzw x3, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 664)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x4)
mv x5, x4 # switch signature pointer register to avoid conflict with test
li x4, 0x1ecd70d2a4fc4887 # initialize rs1
clzw x4, x4 # perform operation
RVTEST_SIGUPD(x5, x0, x4, 672)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x5)
mv x6, x5 # switch signature pointer register to avoid conflict with test
li x5, 0xa2b6dad693ddbd5a # initialize rs1
clzw x5, x5 # perform operation
RVTEST_SIGUPD(x6, x0, x5, 680)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x6)
mv x7, x6 # switch signature pointer register to avoid conflict with test
li x6, 0xf9bbe86e96ceb67a # initialize rs1
clzw x6, x6 # perform operation
RVTEST_SIGUPD(x7, x0, x6, 688)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x7)
mv x4, x7 # switch signature pointer register to avoid conflict with test
li x7, 0x3c4fc2b878fd974c # initialize rs1
clzw x7, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 696)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x8)
li x8, 0x637ea2ad5d0a10b7 # initialize rs1
clzw x8, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 704)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x9)
li x9, 0x232cb5845713c665 # initialize rs1
clzw x9, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 712)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x10)
li x10, 0x0be52a447ace87e8 # initialize rs1
clzw x10, x10 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 720)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x11)
li x11, 0x7f3fde88a56ea356 # initialize rs1
clzw x11, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 728)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x12)
li x12, 0x0815539151ee9cce # initialize rs1
clzw x12, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 736)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x13)
li x13, 0xb31bc4781a578cde # initialize rs1
clzw x13, x13 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 744)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x14)
li x14, 0x9968ec41a1cdf840 # initialize rs1
clzw x14, x14 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 752)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x15)
li x15, 0x58e7098b836242ba # initialize rs1
clzw x15, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 760)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x16)
li x16, 0xaae83b0190a6ae2d # initialize rs1
clzw x16, x16 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 768)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x17)
li x17, 0x8d6577a2b4179483 # initialize rs1
clzw x17, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 776)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x18)
li x18, 0x570d8ff0f087f58e # initialize rs1
clzw x18, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 784)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x19)
li x19, 0xcc1c9931fe8cc643 # initialize rs1
clzw x19, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 792)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x20)
li x20, 0x5bbaacda1a92c7fd # initialize rs1
clzw x20, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 800)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x21)
li x21, 0x268f3d8b59af6b1d # initialize rs1
clzw x21, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 808)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x22)
li x22, 0x1f3c956f8c2658bc # initialize rs1
clzw x22, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 816)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x23)
li x23, 0x139629fe65c0214b # initialize rs1
clzw x23, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 824)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x24)
li x24, 0xc3edf9cd726a8d47 # initialize rs1
clzw x24, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 832)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x25)
li x25, 0x9ecc37f0bd32d9b2 # initialize rs1
clzw x25, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 840)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x26)
li x26, 0x4d46d6efd90987d1 # initialize rs1
clzw x26, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 848)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x27)
li x27, 0xba398f87af1caea0 # initialize rs1
clzw x27, x27 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 856)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x28)
li x28, 0x7688b36b621033f2 # initialize rs1
clzw x28, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x28, 864)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x29)
li x29, 0x29d998233910adfc # initialize rs1
clzw x29, x29 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 872)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x30)
li x30, 0x5a2b49ba974c9179 # initialize rs1
clzw x30, x30 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 880)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x31)
li x31, 0xff1ec25ac2389926 # initialize rs1
clzw x31, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 888)

# Testcase cp_gpr/fpr_hazard nohaz test
add x22, x9, x26 # perform first operation
clzw x13, x17 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard nohaz test
add x3, x13, x11 # perform first operation
clzw x19, x30 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard nohaz test
add x3, x25, x11 # perform first operation
clzw x26, x15 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard raw test
add x19, x15, x5 # perform first operation
clzw x23, x19 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard raw test
add x27, x14, x13 # perform first operation
clzw x14, x19 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard raw test
add x7, x16, x22 # perform first operation
clzw x16, x24 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard waw test
add x13, x1, x10 # perform first operation
clzw x13, x2 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard waw test
add x16, x8, x26 # perform first operation
clzw x16, x11 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard waw test
add x6, x19, x28 # perform first operation
clzw x6, x2 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard war test
add x25, x27, x26 # perform first operation
clzw x27, x6 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard war test
add x17, x25, x14 # perform first operation
clzw x14, x18 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard war test
add x24, x26, x23 # perform first operation
clzw x1, x6 # perform second (triggering) operation

#.EQU SIGSIZE,896


// ******************
// Tests from: WALLY-COV-rev8.S
// ******************


# initialize signature pointer
la x4, begin_signature

    
# Testcase cp_rs1 (Test source rs1 = x0)
li x0, 0xc8f8e77c7492caa3 # initialize rs1
rev8 x28, x0 # perform operation
RVTEST_SIGUPD(x4, x0, x28, 0)

# Testcase cp_rs1 (Test source rs1 = x1)
li x1, 0x8fa4c0b6cdbd3651 # initialize rs1
rev8 x30, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 8)

# Testcase cp_rs1 (Test source rs1 = x2)
li x2, 0xb279f2d3938795aa # initialize rs1
rev8 x6, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x6, 16)

# Testcase cp_rs1 (Test source rs1 = x3)
li x3, 0x57de5f49ff4680cf # initialize rs1
rev8 x15, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 24)

# Testcase cp_rs1 (Test source rs1 = x4)
mv x5, x4 # switch signature pointer register to avoid conflict with test
li x4, 0x65ec6fe6dc8668e5 # initialize rs1
rev8 x26, x4 # perform operation
RVTEST_SIGUPD(x5, x0, x26, 32)

# Testcase cp_rs1 (Test source rs1 = x5)
mv x6, x5 # switch signature pointer register to avoid conflict with test
li x5, 0x87b4127b8ee567e3 # initialize rs1
rev8 x29, x5 # perform operation
RVTEST_SIGUPD(x6, x0, x29, 40)

# Testcase cp_rs1 (Test source rs1 = x6)
mv x7, x6 # switch signature pointer register to avoid conflict with test
li x6, 0xf480d032ef0b87f6 # initialize rs1
rev8 x13, x6 # perform operation
RVTEST_SIGUPD(x7, x0, x13, 48)

# Testcase cp_rs1 (Test source rs1 = x7)
mv x4, x7 # switch signature pointer register to avoid conflict with test
li x7, 0x7d0f93cbee7445cc # initialize rs1
rev8 x6, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x6, 56)

# Testcase cp_rs1 (Test source rs1 = x8)
li x8, 0xd39c313f6b0ce6bd # initialize rs1
rev8 x2, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 64)

# Testcase cp_rs1 (Test source rs1 = x9)
li x9, 0xc18dbc553c339514 # initialize rs1
rev8 x14, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 72)

# Testcase cp_rs1 (Test source rs1 = x10)
li x10, 0xda5d6843b7dc1b69 # initialize rs1
rev8 x7, x10 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 80)

# Testcase cp_rs1 (Test source rs1 = x11)
li x11, 0xc42e02018ebdc717 # initialize rs1
rev8 x18, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 88)

# Testcase cp_rs1 (Test source rs1 = x12)
li x12, 0x0713d836c41ae045 # initialize rs1
rev8 x23, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 96)

# Testcase cp_rs1 (Test source rs1 = x13)
li x13, 0x19b3902fe1ff7bdb # initialize rs1
rev8 x20, x13 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 104)

# Testcase cp_rs1 (Test source rs1 = x14)
li x14, 0x4dfe1f95ec782126 # initialize rs1
rev8 x20, x14 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 112)

# Testcase cp_rs1 (Test source rs1 = x15)
li x15, 0x105a51b00d0b37be # initialize rs1
rev8 x6, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x6, 120)

# Testcase cp_rs1 (Test source rs1 = x16)
li x16, 0x203a230f38c86cfd # initialize rs1
rev8 x24, x16 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 128)

# Testcase cp_rs1 (Test source rs1 = x17)
li x17, 0xcd3e92e6c22d8f96 # initialize rs1
rev8 x12, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 136)

# Testcase cp_rs1 (Test source rs1 = x18)
li x18, 0x5192c307e504f053 # initialize rs1
rev8 x6, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x6, 144)

# Testcase cp_rs1 (Test source rs1 = x19)
li x19, 0x41c87355bcfb1d44 # initialize rs1
rev8 x14, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 152)

# Testcase cp_rs1 (Test source rs1 = x20)
li x20, 0xbacfb07de5f1ea64 # initialize rs1
rev8 x26, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 160)

# Testcase cp_rs1 (Test source rs1 = x21)
li x21, 0x9601a8f9d0d48f22 # initialize rs1
rev8 x17, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 168)

# Testcase cp_rs1 (Test source rs1 = x22)
li x22, 0x6e967132170213bf # initialize rs1
rev8 x1, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 176)

# Testcase cp_rs1 (Test source rs1 = x23)
li x23, 0x545514ca89f8ccf7 # initialize rs1
rev8 x13, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 184)

# Testcase cp_rs1 (Test source rs1 = x24)
li x24, 0xdb86d101c7b2390e # initialize rs1
rev8 x21, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 192)

# Testcase cp_rs1 (Test source rs1 = x25)
li x25, 0x1a13d08250492c54 # initialize rs1
rev8 x15, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 200)

# Testcase cp_rs1 (Test source rs1 = x26)
li x26, 0x57ca57294b265978 # initialize rs1
rev8 x20, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 208)

# Testcase cp_rs1 (Test source rs1 = x27)
li x27, 0x9ce0ac1e37726f6b # initialize rs1
rev8 x3, x27 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 216)

# Testcase cp_rs1 (Test source rs1 = x28)
li x28, 0x3db648cedff80278 # initialize rs1
rev8 x20, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 224)

# Testcase cp_rs1 (Test source rs1 = x29)
li x29, 0x83196f421855fa9e # initialize rs1
rev8 x12, x29 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 232)

# Testcase cp_rs1 (Test source rs1 = x30)
li x30, 0x25910460fbb86d2d # initialize rs1
rev8 x20, x30 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 240)

# Testcase cp_rs1 (Test source rs1 = x31)
li x31, 0xf12cb0070edb7d84 # initialize rs1
rev8 x19, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 248)

# Testcase cp_rd (Test destination rd = x0)
li x11, 0xd7f3ca901cf94273 # initialize rs1
rev8 x0, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x0, 256)

# Testcase cp_rd (Test destination rd = x1)
li x14, 0xb05ec906fb6065b3 # initialize rs1
rev8 x1, x14 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 264)

# Testcase cp_rd (Test destination rd = x2)
li x16, 0x151cbd4368539e57 # initialize rs1
rev8 x2, x16 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 272)

# Testcase cp_rd (Test destination rd = x3)
li x29, 0x7db88350b452e60e # initialize rs1
rev8 x3, x29 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 280)

# Testcase cp_rd (Test destination rd = x4)
mv x5, x4 # switch signature pointer register to avoid conflict with test
li x6, 0x7bd579ca08060bda # initialize rs1
rev8 x4, x6 # perform operation
RVTEST_SIGUPD(x5, x0, x4, 288)

# Testcase cp_rd (Test destination rd = x5)
mv x6, x5 # switch signature pointer register to avoid conflict with test
li x31, 0x73652f33d259176b # initialize rs1
rev8 x5, x31 # perform operation
RVTEST_SIGUPD(x6, x0, x5, 296)

# Testcase cp_rd (Test destination rd = x6)
mv x7, x6 # switch signature pointer register to avoid conflict with test
li x31, 0xfd031bdc02521ce8 # initialize rs1
rev8 x6, x31 # perform operation
RVTEST_SIGUPD(x7, x0, x6, 304)

# Testcase cp_rd (Test destination rd = x7)
mv x4, x7 # switch signature pointer register to avoid conflict with test
li x30, 0x53e567d1b1814abb # initialize rs1
rev8 x7, x30 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 312)

# Testcase cp_rd (Test destination rd = x8)
li x22, 0x5bbf20c612fb8132 # initialize rs1
rev8 x8, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 320)

# Testcase cp_rd (Test destination rd = x9)
li x2, 0x3990b0d39746cafa # initialize rs1
rev8 x9, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 328)

# Testcase cp_rd (Test destination rd = x10)
li x2, 0x49a5998f2bf4e193 # initialize rs1
rev8 x10, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 336)

# Testcase cp_rd (Test destination rd = x11)
li x7, 0xdc99c5d64bef85d5 # initialize rs1
rev8 x11, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 344)

# Testcase cp_rd (Test destination rd = x12)
li x9, 0x467209a6e555c818 # initialize rs1
rev8 x12, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 352)

# Testcase cp_rd (Test destination rd = x13)
li x28, 0x185ff1f3a1912af0 # initialize rs1
rev8 x13, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 360)

# Testcase cp_rd (Test destination rd = x14)
li x11, 0x153d19d0525a8679 # initialize rs1
rev8 x14, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 368)

# Testcase cp_rd (Test destination rd = x15)
li x20, 0xc42795b06a23b6ea # initialize rs1
rev8 x15, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 376)

# Testcase cp_rd (Test destination rd = x16)
li x11, 0x8db39887345c456f # initialize rs1
rev8 x16, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 384)

# Testcase cp_rd (Test destination rd = x17)
li x30, 0xc8e79694a7e875b8 # initialize rs1
rev8 x17, x30 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 392)

# Testcase cp_rd (Test destination rd = x18)
li x1, 0xcd415e74d69156ce # initialize rs1
rev8 x18, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 400)

# Testcase cp_rd (Test destination rd = x19)
li x17, 0x84f6b6744e826a51 # initialize rs1
rev8 x19, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 408)

# Testcase cp_rd (Test destination rd = x20)
li x3, 0x3605f91991ad6675 # initialize rs1
rev8 x20, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 416)

# Testcase cp_rd (Test destination rd = x21)
li x27, 0x6f7e7661970295e7 # initialize rs1
rev8 x21, x27 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 424)

# Testcase cp_rd (Test destination rd = x22)
li x24, 0x59d2474f4c7505da # initialize rs1
rev8 x22, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 432)

# Testcase cp_rd (Test destination rd = x23)
li x31, 0x4d1654ab586d87b9 # initialize rs1
rev8 x23, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 440)

# Testcase cp_rd (Test destination rd = x24)
li x7, 0x8924ef5176bd0ff5 # initialize rs1
rev8 x24, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 448)

# Testcase cp_rd (Test destination rd = x25)
li x6, 0xe5951ba2bcfe92d8 # initialize rs1
rev8 x25, x6 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 456)

# Testcase cp_rd (Test destination rd = x26)
li x1, 0x1a86de213c8284b5 # initialize rs1
rev8 x26, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 464)

# Testcase cp_rd (Test destination rd = x27)
li x11, 0xbd2c14a71e32831c # initialize rs1
rev8 x27, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 472)

# Testcase cp_rd (Test destination rd = x28)
li x18, 0x2c3ebc9d822f967a # initialize rs1
rev8 x28, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x28, 480)

# Testcase cp_rd (Test destination rd = x29)
li x26, 0xa43bcabd85ba645e # initialize rs1
rev8 x29, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 488)

# Testcase cp_rd (Test destination rd = x30)
li x18, 0xe23c05156c172f0e # initialize rs1
rev8 x30, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 496)

# Testcase cp_rd (Test destination rd = x31)
li x3, 0x8260f56ef5e341e7 # initialize rs1
rev8 x31, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 504)

# Testcase cp_rs1_corners (Test source rs1 value = 0x0)
li x7, 0x0000000000000000 # initialize rs1
rev8 x18, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 512)

# Testcase cp_rs1_corners (Test source rs1 value = 0x1)
li x21, 0x0000000000000001 # initialize rs1
rev8 x27, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 520)

# Testcase cp_rs1_corners (Test source rs1 value = 0x2)
li x23, 0x0000000000000002 # initialize rs1
rev8 x7, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 528)

# Testcase cp_rs1_corners (Test source rs1 value = 0x8000000000000000)
li x10, 0x8000000000000000 # initialize rs1
rev8 x1, x10 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 536)

# Testcase cp_rs1_corners (Test source rs1 value = 0x8000000000000001)
li x13, 0x8000000000000001 # initialize rs1
rev8 x29, x13 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 544)

# Testcase cp_rs1_corners (Test source rs1 value = 0x7fffffffffffffff)
li x7, 0x7fffffffffffffff # initialize rs1
rev8 x29, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 552)

# Testcase cp_rs1_corners (Test source rs1 value = 0x7ffffffffffffffe)
li x7, 0x7ffffffffffffffe # initialize rs1
rev8 x29, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 560)

# Testcase cp_rs1_corners (Test source rs1 value = 0xffffffffffffffff)
li x3, 0xffffffffffffffff # initialize rs1
rev8 x21, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 568)

# Testcase cp_rs1_corners (Test source rs1 value = 0xfffffffffffffffe)
li x22, 0xfffffffffffffffe # initialize rs1
rev8 x16, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 576)

# Testcase cp_rs1_corners (Test source rs1 value = 0x5bbc887763ae86f2)
li x16, 0x5bbc887763ae86f2 # initialize rs1
rev8 x30, x16 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 584)

# Testcase cp_rs1_corners (Test source rs1 value = 0xaaaaaaaaaaaaaaaa)
li x13, 0xaaaaaaaaaaaaaaaa # initialize rs1
rev8 x11, x13 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 592)

# Testcase cp_rs1_corners (Test source rs1 value = 0x5555555555555555)
li x31, 0x5555555555555555 # initialize rs1
rev8 x3, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 600)

# Testcase cp_rs1_corners (Test source rs1 value = 0xffffffff)
li x1, 0x00000000ffffffff # initialize rs1
rev8 x13, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 608)

# Testcase cp_rs1_corners (Test source rs1 value = 0xfffffffe)
li x28, 0x00000000fffffffe # initialize rs1
rev8 x16, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 616)

# Testcase cp_rs1_corners (Test source rs1 value = 0x100000000)
li x20, 0x0000000100000000 # initialize rs1
rev8 x31, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 624)

# Testcase cp_rs1_corners (Test source rs1 value = 0x100000001)
li x21, 0x0000000100000001 # initialize rs1
rev8 x28, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x28, 632)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x0)
li x0, 0x594defced976f0ff # initialize rs1
rev8 x0, x0 # perform operation
RVTEST_SIGUPD(x4, x0, x0, 640)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x1)
li x1, 0x5a207e22f6ffb14e # initialize rs1
rev8 x1, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 648)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x2)
li x2, 0x4f752906b50b52c5 # initialize rs1
rev8 x2, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 656)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x3)
li x3, 0x8b9f3c384e9d44b1 # initialize rs1
rev8 x3, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 664)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x4)
mv x5, x4 # switch signature pointer register to avoid conflict with test
li x4, 0xddbf298055caf8fb # initialize rs1
rev8 x4, x4 # perform operation
RVTEST_SIGUPD(x5, x0, x4, 672)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x5)
mv x6, x5 # switch signature pointer register to avoid conflict with test
li x5, 0x179b0c1373d5fcc3 # initialize rs1
rev8 x5, x5 # perform operation
RVTEST_SIGUPD(x6, x0, x5, 680)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x6)
mv x4, x6 # switch signature pointer register to avoid conflict with test
li x6, 0xe05aad1746f92cb9 # initialize rs1
rev8 x6, x6 # perform operation
RVTEST_SIGUPD(x4, x0, x6, 688)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x7)
li x7, 0x2534941157940e70 # initialize rs1
rev8 x7, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 696)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x8)
li x8, 0x6525dddc3a5a95e2 # initialize rs1
rev8 x8, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 704)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x9)
li x9, 0x61f251a552880e73 # initialize rs1
rev8 x9, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 712)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x10)
li x10, 0x71acc993893b70a4 # initialize rs1
rev8 x10, x10 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 720)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x11)
li x11, 0xf5ba1e0ed5094af1 # initialize rs1
rev8 x11, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 728)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x12)
li x12, 0x4dad240528351516 # initialize rs1
rev8 x12, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 736)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x13)
li x13, 0x69410b097743e7a9 # initialize rs1
rev8 x13, x13 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 744)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x14)
li x14, 0x54b5c641bce270b6 # initialize rs1
rev8 x14, x14 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 752)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x15)
li x15, 0x77664a6a0238982a # initialize rs1
rev8 x15, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 760)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x16)
li x16, 0x8a0f71cee739a8f5 # initialize rs1
rev8 x16, x16 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 768)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x17)
li x17, 0x03fd08ca2a74e14b # initialize rs1
rev8 x17, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 776)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x18)
li x18, 0x22d293529c8ca904 # initialize rs1
rev8 x18, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 784)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x19)
li x19, 0xecd76e0d2b314062 # initialize rs1
rev8 x19, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 792)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x20)
li x20, 0x3974dd5dd923fd26 # initialize rs1
rev8 x20, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 800)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x21)
li x21, 0x04487bc1019ce16c # initialize rs1
rev8 x21, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 808)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x22)
li x22, 0x83941e89c35586fb # initialize rs1
rev8 x22, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 816)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x23)
li x23, 0x9898d6408f51c1e1 # initialize rs1
rev8 x23, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 824)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x24)
li x24, 0x9c62dd4a853acb60 # initialize rs1
rev8 x24, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 832)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x25)
li x25, 0xa7757656bcd7ed9c # initialize rs1
rev8 x25, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 840)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x26)
li x26, 0x5e14cd6d0b102e5e # initialize rs1
rev8 x26, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 848)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x27)
li x27, 0x3ad3085377cbeb93 # initialize rs1
rev8 x27, x27 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 856)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x28)
li x28, 0x64f22da5c3ee99ee # initialize rs1
rev8 x28, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x28, 864)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x29)
li x29, 0x7f8047e4645412df # initialize rs1
rev8 x29, x29 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 872)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x30)
li x30, 0xf0d476f960ec1077 # initialize rs1
rev8 x30, x30 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 880)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x31)
li x31, 0x92964167131dd4b9 # initialize rs1
rev8 x31, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 888)

# Testcase cp_gpr/fpr_hazard nohaz test
add x27, x29, x6 # perform first operation
rev8 x21, x25 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard nohaz test
add x26, x11, x24 # perform first operation
rev8 x8, x13 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard nohaz test
add x7, x16, x8 # perform first operation
rev8 x17, x27 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard raw test
add x17, x29, x6 # perform first operation
rev8 x29, x24 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard raw test
add x11, x2, x30 # perform first operation
rev8 x11, x9 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard raw test
add x29, x28, x2 # perform first operation
rev8 x2, x27 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard waw test
add x12, x7, x25 # perform first operation
rev8 x12, x8 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard waw test
add x17, x13, x21 # perform first operation
rev8 x17, x16 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard waw test
add x12, x26, x23 # perform first operation
rev8 x12, x18 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard war test
add x21, x26, x12 # perform first operation
rev8 x26, x30 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard war test
add x30, x2, x1 # perform first operation
rev8 x1, x26 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard war test
add x18, x7, x2 # perform first operation
rev8 x31, x10 # perform second (triggering) operation

#.EQU SIGSIZE,896


// ******************
// Tests from: WALLY-COV-orc.b.S
// ******************


# initialize signature pointer
la x4, begin_signature

    
# Testcase cp_rs1 (Test source rs1 = x0)
li x0, 0x5074b9b2e5a97ce2 # initialize rs1
orc.b x12, x0 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 0)

# Testcase cp_rs1 (Test source rs1 = x1)
li x1, 0xbe72735c8f765a23 # initialize rs1
orc.b x15, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 8)

# Testcase cp_rs1 (Test source rs1 = x2)
li x2, 0x2fd0f93eca938fd7 # initialize rs1
orc.b x6, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x6, 16)

# Testcase cp_rs1 (Test source rs1 = x3)
li x3, 0x7149ddfab7cc77b8 # initialize rs1
orc.b x18, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 24)

# Testcase cp_rs1 (Test source rs1 = x4)
mv x5, x4 # switch signature pointer register to avoid conflict with test
li x4, 0x38837782e3b88551 # initialize rs1
orc.b x14, x4 # perform operation
RVTEST_SIGUPD(x5, x0, x14, 32)

# Testcase cp_rs1 (Test source rs1 = x5)
mv x6, x5 # switch signature pointer register to avoid conflict with test
li x5, 0xe704d110adf3cc94 # initialize rs1
orc.b x26, x5 # perform operation
RVTEST_SIGUPD(x6, x0, x26, 40)

# Testcase cp_rs1 (Test source rs1 = x6)
mv x7, x6 # switch signature pointer register to avoid conflict with test
li x6, 0xea9082b88a1cbefe # initialize rs1
orc.b x26, x6 # perform operation
RVTEST_SIGUPD(x7, x0, x26, 48)

# Testcase cp_rs1 (Test source rs1 = x7)
mv x4, x7 # switch signature pointer register to avoid conflict with test
li x7, 0x863732a9ffba1295 # initialize rs1
orc.b x14, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 56)

# Testcase cp_rs1 (Test source rs1 = x8)
li x8, 0xa20b945cd707e0b0 # initialize rs1
orc.b x16, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 64)

# Testcase cp_rs1 (Test source rs1 = x9)
li x9, 0x50037aece643ec91 # initialize rs1
orc.b x3, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 72)

# Testcase cp_rs1 (Test source rs1 = x10)
li x10, 0x7e73042ea30d1869 # initialize rs1
orc.b x17, x10 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 80)

# Testcase cp_rs1 (Test source rs1 = x11)
li x11, 0x6888178f098e9848 # initialize rs1
orc.b x1, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 88)

# Testcase cp_rs1 (Test source rs1 = x12)
li x12, 0x75fdc92a51b347d0 # initialize rs1
orc.b x15, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 96)

# Testcase cp_rs1 (Test source rs1 = x13)
li x13, 0x585549d093f4d190 # initialize rs1
orc.b x1, x13 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 104)

# Testcase cp_rs1 (Test source rs1 = x14)
li x14, 0x31581deb18f41384 # initialize rs1
orc.b x9, x14 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 112)

# Testcase cp_rs1 (Test source rs1 = x15)
li x15, 0xe6f60f39ef70a2c0 # initialize rs1
orc.b x29, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 120)

# Testcase cp_rs1 (Test source rs1 = x16)
li x16, 0xb979123215452562 # initialize rs1
orc.b x30, x16 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 128)

# Testcase cp_rs1 (Test source rs1 = x17)
li x17, 0x00b97659fae94614 # initialize rs1
orc.b x31, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 136)

# Testcase cp_rs1 (Test source rs1 = x18)
li x18, 0xb361a368823fd148 # initialize rs1
orc.b x10, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 144)

# Testcase cp_rs1 (Test source rs1 = x19)
li x19, 0x3597154336fbd627 # initialize rs1
orc.b x9, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 152)

# Testcase cp_rs1 (Test source rs1 = x20)
li x20, 0xec9716c52208dc3a # initialize rs1
orc.b x21, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 160)

# Testcase cp_rs1 (Test source rs1 = x21)
li x21, 0xc9bf595842b1dd56 # initialize rs1
orc.b x7, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 168)

# Testcase cp_rs1 (Test source rs1 = x22)
li x22, 0xcb64062dcb1616f6 # initialize rs1
orc.b x28, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x28, 176)

# Testcase cp_rs1 (Test source rs1 = x23)
li x23, 0x691a4f48451c3e79 # initialize rs1
orc.b x15, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 184)

# Testcase cp_rs1 (Test source rs1 = x24)
li x24, 0x9ff728e620c3c0cb # initialize rs1
orc.b x14, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 192)

# Testcase cp_rs1 (Test source rs1 = x25)
li x25, 0x5ecce759435e4fdc # initialize rs1
orc.b x26, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 200)

# Testcase cp_rs1 (Test source rs1 = x26)
li x26, 0xf9efe4f33cd17e28 # initialize rs1
orc.b x23, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 208)

# Testcase cp_rs1 (Test source rs1 = x27)
li x27, 0xd36bdb871ad8450a # initialize rs1
orc.b x15, x27 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 216)

# Testcase cp_rs1 (Test source rs1 = x28)
li x28, 0x60042339779163c5 # initialize rs1
orc.b x27, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 224)

# Testcase cp_rs1 (Test source rs1 = x29)
li x29, 0xc0b94565f014ec05 # initialize rs1
orc.b x28, x29 # perform operation
RVTEST_SIGUPD(x4, x0, x28, 232)

# Testcase cp_rs1 (Test source rs1 = x30)
li x30, 0xf704b5f75e3d2963 # initialize rs1
orc.b x12, x30 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 240)

# Testcase cp_rs1 (Test source rs1 = x31)
li x31, 0xdec04ad2e54b89e5 # initialize rs1
orc.b x25, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 248)

# Testcase cp_rd (Test destination rd = x0)
li x18, 0x23e393509f64af0c # initialize rs1
orc.b x0, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x0, 256)

# Testcase cp_rd (Test destination rd = x1)
li x16, 0x3e5684b1bdbd6ef7 # initialize rs1
orc.b x1, x16 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 264)

# Testcase cp_rd (Test destination rd = x2)
li x16, 0xf4340851a13ece98 # initialize rs1
orc.b x2, x16 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 272)

# Testcase cp_rd (Test destination rd = x3)
li x14, 0x99e263c57e7a8332 # initialize rs1
orc.b x3, x14 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 280)

# Testcase cp_rd (Test destination rd = x4)
mv x5, x4 # switch signature pointer register to avoid conflict with test
li x28, 0xa6f094c68a7b692d # initialize rs1
orc.b x4, x28 # perform operation
RVTEST_SIGUPD(x5, x0, x4, 288)

# Testcase cp_rd (Test destination rd = x5)
mv x6, x5 # switch signature pointer register to avoid conflict with test
li x10, 0x2e6299281c4b7e1e # initialize rs1
orc.b x5, x10 # perform operation
RVTEST_SIGUPD(x6, x0, x5, 296)

# Testcase cp_rd (Test destination rd = x6)
mv x7, x6 # switch signature pointer register to avoid conflict with test
li x20, 0x5e6477d156d1386e # initialize rs1
orc.b x6, x20 # perform operation
RVTEST_SIGUPD(x7, x0, x6, 304)

# Testcase cp_rd (Test destination rd = x7)
mv x4, x7 # switch signature pointer register to avoid conflict with test
li x28, 0x44dacbe1b1e22f83 # initialize rs1
orc.b x7, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 312)

# Testcase cp_rd (Test destination rd = x8)
li x13, 0xb1c186713c56925b # initialize rs1
orc.b x8, x13 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 320)

# Testcase cp_rd (Test destination rd = x9)
li x14, 0x2498b1e53f17aa79 # initialize rs1
orc.b x9, x14 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 328)

# Testcase cp_rd (Test destination rd = x10)
li x12, 0xf4c2641b938a887d # initialize rs1
orc.b x10, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 336)

# Testcase cp_rd (Test destination rd = x11)
li x24, 0x0219c9863210ed93 # initialize rs1
orc.b x11, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 344)

# Testcase cp_rd (Test destination rd = x12)
li x21, 0x189d491cbb980d32 # initialize rs1
orc.b x12, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 352)

# Testcase cp_rd (Test destination rd = x13)
li x11, 0x8656f7e46ccd037e # initialize rs1
orc.b x13, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 360)

# Testcase cp_rd (Test destination rd = x14)
li x17, 0x74829d06571f02de # initialize rs1
orc.b x14, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 368)

# Testcase cp_rd (Test destination rd = x15)
li x17, 0xe0ce30ba9aa27a61 # initialize rs1
orc.b x15, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 376)

# Testcase cp_rd (Test destination rd = x16)
li x8, 0xbe326ad245f8d430 # initialize rs1
orc.b x16, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 384)

# Testcase cp_rd (Test destination rd = x17)
li x27, 0xd529809736d31952 # initialize rs1
orc.b x17, x27 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 392)

# Testcase cp_rd (Test destination rd = x18)
li x8, 0x4b3fd371b16f901c # initialize rs1
orc.b x18, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 400)

# Testcase cp_rd (Test destination rd = x19)
li x1, 0x8644fd97de3e47f0 # initialize rs1
orc.b x19, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 408)

# Testcase cp_rd (Test destination rd = x20)
li x22, 0x7186328e71076a3a # initialize rs1
orc.b x20, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 416)

# Testcase cp_rd (Test destination rd = x21)
li x30, 0x294a958de825250a # initialize rs1
orc.b x21, x30 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 424)

# Testcase cp_rd (Test destination rd = x22)
li x27, 0x614d91c74b98d08b # initialize rs1
orc.b x22, x27 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 432)

# Testcase cp_rd (Test destination rd = x23)
li x20, 0xc4016986d4f1a5ec # initialize rs1
orc.b x23, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 440)

# Testcase cp_rd (Test destination rd = x24)
li x3, 0x3abb788b9ca75f67 # initialize rs1
orc.b x24, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 448)

# Testcase cp_rd (Test destination rd = x25)
li x14, 0x0e3340e447ec383f # initialize rs1
orc.b x25, x14 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 456)

# Testcase cp_rd (Test destination rd = x26)
li x3, 0x8d3e8a03ad7ccaad # initialize rs1
orc.b x26, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 464)

# Testcase cp_rd (Test destination rd = x27)
li x7, 0x4670ca2519577c91 # initialize rs1
orc.b x27, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 472)

# Testcase cp_rd (Test destination rd = x28)
li x9, 0x5707d09771e4436e # initialize rs1
orc.b x28, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x28, 480)

# Testcase cp_rd (Test destination rd = x29)
li x31, 0x09d2f019463d6365 # initialize rs1
orc.b x29, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 488)

# Testcase cp_rd (Test destination rd = x30)
li x17, 0xc4deb2a0da5ef30a # initialize rs1
orc.b x30, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 496)

# Testcase cp_rd (Test destination rd = x31)
li x21, 0x44d87934e6df187e # initialize rs1
orc.b x31, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 504)

# Testcase cp_rs1_corners (Test source rs1 value = 0x0)
li x20, 0x0000000000000000 # initialize rs1
orc.b x13, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 512)

# Testcase cp_rs1_corners (Test source rs1 value = 0x1)
li x17, 0x0000000000000001 # initialize rs1
orc.b x6, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x6, 520)

# Testcase cp_rs1_corners (Test source rs1 value = 0x2)
li x5, 0x0000000000000002 # initialize rs1
orc.b x30, x5 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 528)

# Testcase cp_rs1_corners (Test source rs1 value = 0x8000000000000000)
li x21, 0x8000000000000000 # initialize rs1
orc.b x14, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 536)

# Testcase cp_rs1_corners (Test source rs1 value = 0x8000000000000001)
li x10, 0x8000000000000001 # initialize rs1
orc.b x1, x10 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 544)

# Testcase cp_rs1_corners (Test source rs1 value = 0x7fffffffffffffff)
li x5, 0x7fffffffffffffff # initialize rs1
orc.b x26, x5 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 552)

# Testcase cp_rs1_corners (Test source rs1 value = 0x7ffffffffffffffe)
li x17, 0x7ffffffffffffffe # initialize rs1
orc.b x12, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 560)

# Testcase cp_rs1_corners (Test source rs1 value = 0xffffffffffffffff)
li x7, 0xffffffffffffffff # initialize rs1
orc.b x24, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 568)

# Testcase cp_rs1_corners (Test source rs1 value = 0xfffffffffffffffe)
li x22, 0xfffffffffffffffe # initialize rs1
orc.b x1, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 576)

# Testcase cp_rs1_corners (Test source rs1 value = 0x5bbc887763ae86f2)
li x2, 0x5bbc887763ae86f2 # initialize rs1
orc.b x25, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 584)

# Testcase cp_rs1_corners (Test source rs1 value = 0xaaaaaaaaaaaaaaaa)
li x17, 0xaaaaaaaaaaaaaaaa # initialize rs1
orc.b x31, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 592)

# Testcase cp_rs1_corners (Test source rs1 value = 0x5555555555555555)
li x17, 0x5555555555555555 # initialize rs1
orc.b x25, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 600)

# Testcase cp_rs1_corners (Test source rs1 value = 0xffffffff)
li x28, 0x00000000ffffffff # initialize rs1
orc.b x24, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 608)

# Testcase cp_rs1_corners (Test source rs1 value = 0xfffffffe)
li x25, 0x00000000fffffffe # initialize rs1
orc.b x24, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 616)

# Testcase cp_rs1_corners (Test source rs1 value = 0x100000000)
li x17, 0x0000000100000000 # initialize rs1
orc.b x8, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 624)

# Testcase cp_rs1_corners (Test source rs1 value = 0x100000001)
li x8, 0x0000000100000001 # initialize rs1
orc.b x10, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 632)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x0)
li x0, 0xf4d4a8642980480c # initialize rs1
orc.b x0, x0 # perform operation
RVTEST_SIGUPD(x4, x0, x0, 640)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x1)
li x1, 0xfc8302beb04141a6 # initialize rs1
orc.b x1, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 648)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x2)
li x2, 0xc64018be9f935093 # initialize rs1
orc.b x2, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 656)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x3)
li x3, 0xeb665dd309d31122 # initialize rs1
orc.b x3, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 664)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x4)
mv x5, x4 # switch signature pointer register to avoid conflict with test
li x4, 0x9759cd771e40f7f2 # initialize rs1
orc.b x4, x4 # perform operation
RVTEST_SIGUPD(x5, x0, x4, 672)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x5)
mv x6, x5 # switch signature pointer register to avoid conflict with test
li x5, 0xd3f7e5f5eb3c6a40 # initialize rs1
orc.b x5, x5 # perform operation
RVTEST_SIGUPD(x6, x0, x5, 680)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x6)
mv x7, x6 # switch signature pointer register to avoid conflict with test
li x6, 0x3499afdd33f1bddb # initialize rs1
orc.b x6, x6 # perform operation
RVTEST_SIGUPD(x7, x0, x6, 688)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x7)
mv x4, x7 # switch signature pointer register to avoid conflict with test
li x7, 0x2fe8efd79299aca7 # initialize rs1
orc.b x7, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 696)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x8)
li x8, 0x046f9c2ab95374a1 # initialize rs1
orc.b x8, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 704)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x9)
li x9, 0x403f1e218d636c5e # initialize rs1
orc.b x9, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 712)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x10)
li x10, 0xe8504b826340fa68 # initialize rs1
orc.b x10, x10 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 720)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x11)
li x11, 0x7371a172cbba14be # initialize rs1
orc.b x11, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 728)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x12)
li x12, 0x3306b430f78e2ec3 # initialize rs1
orc.b x12, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 736)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x13)
li x13, 0xcc99dd4d41a38551 # initialize rs1
orc.b x13, x13 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 744)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x14)
li x14, 0x440f279bf00792a4 # initialize rs1
orc.b x14, x14 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 752)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x15)
li x15, 0x248a961ecb594ae1 # initialize rs1
orc.b x15, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 760)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x16)
li x16, 0xeff1a8a92993cd5c # initialize rs1
orc.b x16, x16 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 768)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x17)
li x17, 0xf9a87141d24fbf07 # initialize rs1
orc.b x17, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 776)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x18)
li x18, 0x0a443393c6c84b22 # initialize rs1
orc.b x18, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 784)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x19)
li x19, 0x42d3f002bec1af19 # initialize rs1
orc.b x19, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 792)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x20)
li x20, 0x76bd9d87bc782cf8 # initialize rs1
orc.b x20, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 800)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x21)
li x21, 0x036f2b4326210206 # initialize rs1
orc.b x21, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 808)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x22)
li x22, 0x7e716ea0a243e83b # initialize rs1
orc.b x22, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 816)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x23)
li x23, 0xbc079bf3d341c7f9 # initialize rs1
orc.b x23, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 824)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x24)
li x24, 0x58cabee0aad603f6 # initialize rs1
orc.b x24, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 832)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x25)
li x25, 0xab227526b9b58685 # initialize rs1
orc.b x25, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 840)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x26)
li x26, 0x310d1dfae87fa5e7 # initialize rs1
orc.b x26, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 848)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x27)
li x27, 0x3c8ee7e444eadef6 # initialize rs1
orc.b x27, x27 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 856)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x28)
li x28, 0x1e815674dcfc65ee # initialize rs1
orc.b x28, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x28, 864)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x29)
li x29, 0x0f8c524d4c1c42a0 # initialize rs1
orc.b x29, x29 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 872)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x30)
li x30, 0xc3fc16b252a30396 # initialize rs1
orc.b x30, x30 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 880)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x31)
li x31, 0xc6f74398ff27bf1e # initialize rs1
orc.b x31, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 888)

# Testcase cp_gpr/fpr_hazard nohaz test
add x28, x20, x22 # perform first operation
orc.b x6, x10 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard nohaz test
add x12, x13, x10 # perform first operation
orc.b x7, x29 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard nohaz test
add x31, x19, x26 # perform first operation
orc.b x13, x9 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard raw test
add x26, x29, x9 # perform first operation
orc.b x29, x26 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard raw test
add x2, x18, x1 # perform first operation
orc.b x1, x14 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard raw test
add x17, x24, x20 # perform first operation
orc.b x12, x23 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard waw test
add x5, x20, x22 # perform first operation
orc.b x5, x26 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard waw test
add x2, x1, x23 # perform first operation
orc.b x2, x9 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard waw test
add x23, x8, x5 # perform first operation
orc.b x23, x29 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard war test
add x28, x9, x21 # perform first operation
orc.b x9, x11 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard war test
add x7, x29, x27 # perform first operation
orc.b x27, x23 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard war test
add x21, x28, x23 # perform first operation
orc.b x26, x13 # perform second (triggering) operation

#.EQU SIGSIZE,896


// ******************
// Tests from: WALLY-COV-maxu.S
// ******************


# initialize signature pointer
la x4, begin_signature

    
# Testcase cp_rs1 (Test source rs1 = x0)
li x0, 0xa93dec9db296b450 # initialize rs1
li x2, 0x397174f80d97b740 # initialize rs2
maxu x26, x0, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 0)

# Testcase cp_rs1 (Test source rs1 = x1)
li x1, 0x22b34418da65dd95 # initialize rs1
li x9, 0x6a5b70c73f58e611 # initialize rs2
maxu x12, x1, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 8)

# Testcase cp_rs1 (Test source rs1 = x2)
li x2, 0x8878cfd05a76a46e # initialize rs1
li x30, 0x780e09e02e7fcf6b # initialize rs2
maxu x25, x2, x30 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 16)

# Testcase cp_rs1 (Test source rs1 = x3)
li x3, 0xbfd5f169c4f3ed00 # initialize rs1
li x20, 0x944fd0f15a2e66cb # initialize rs2
maxu x26, x3, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 24)

# Testcase cp_rs1 (Test source rs1 = x4)
mv x5, x4 # switch signature pointer register to avoid conflict with test
li x4, 0xc93590ceb583479e # initialize rs1
li x6, 0x21cf19fe2b80b9ab # initialize rs2
maxu x10, x4, x6 # perform operation
RVTEST_SIGUPD(x5, x0, x10, 32)

# Testcase cp_rs1 (Test source rs1 = x5)
mv x6, x5 # switch signature pointer register to avoid conflict with test
li x5, 0x1f9fb4849413f5cf # initialize rs1
li x14, 0x74b903a92647a005 # initialize rs2
maxu x28, x5, x14 # perform operation
RVTEST_SIGUPD(x6, x0, x28, 40)

# Testcase cp_rs1 (Test source rs1 = x6)
mv x7, x6 # switch signature pointer register to avoid conflict with test
li x6, 0xfde8a6f66911e0db # initialize rs1
li x18, 0xaa790cf0e60abb21 # initialize rs2
maxu x30, x6, x18 # perform operation
RVTEST_SIGUPD(x7, x0, x30, 48)

# Testcase cp_rs1 (Test source rs1 = x7)
mv x4, x7 # switch signature pointer register to avoid conflict with test
li x7, 0x5e8a5b82f887678d # initialize rs1
li x3, 0x55d9946ccd09268c # initialize rs2
maxu x31, x7, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 56)

# Testcase cp_rs1 (Test source rs1 = x8)
li x8, 0x3b854953c0cbb4af # initialize rs1
li x11, 0x068c79eaaec3e37e # initialize rs2
maxu x2, x8, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 64)

# Testcase cp_rs1 (Test source rs1 = x9)
li x9, 0x9cb3ec34643dcbf4 # initialize rs1
li x1, 0x1c71c62946e2b996 # initialize rs2
maxu x30, x9, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 72)

# Testcase cp_rs1 (Test source rs1 = x10)
li x10, 0x4c0a859b57f42f82 # initialize rs1
li x27, 0xbc3301e48517c5c5 # initialize rs2
maxu x14, x10, x27 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 80)

# Testcase cp_rs1 (Test source rs1 = x11)
li x11, 0x7395b6a0849c4bda # initialize rs1
li x10, 0x60be3ed6f2464cb2 # initialize rs2
maxu x16, x11, x10 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 88)

# Testcase cp_rs1 (Test source rs1 = x12)
li x12, 0x692b7c35e7ee45a2 # initialize rs1
li x8, 0x1a854b0f06b4b41b # initialize rs2
maxu x18, x12, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 96)

# Testcase cp_rs1 (Test source rs1 = x13)
li x13, 0x1ef003fcc872d279 # initialize rs1
li x27, 0xd9801802b46ccd5f # initialize rs2
maxu x7, x13, x27 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 104)

# Testcase cp_rs1 (Test source rs1 = x14)
li x14, 0x811b05517fa48dec # initialize rs1
li x26, 0xbca259b08e84e968 # initialize rs2
maxu x3, x14, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 112)

# Testcase cp_rs1 (Test source rs1 = x15)
li x15, 0xc2bf14adbafd1065 # initialize rs1
li x21, 0x39e6c376eb210df2 # initialize rs2
maxu x31, x15, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 120)

# Testcase cp_rs1 (Test source rs1 = x16)
li x16, 0xd557150f43ee4887 # initialize rs1
li x8, 0xd348604a2c44f177 # initialize rs2
maxu x31, x16, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 128)

# Testcase cp_rs1 (Test source rs1 = x17)
li x17, 0xbf756035541a41a1 # initialize rs1
li x14, 0xc91bc5a1497d60b5 # initialize rs2
maxu x1, x17, x14 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 136)

# Testcase cp_rs1 (Test source rs1 = x18)
li x18, 0x2596d19145be6570 # initialize rs1
li x15, 0x6f2be84aab9b5aeb # initialize rs2
maxu x8, x18, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 144)

# Testcase cp_rs1 (Test source rs1 = x19)
li x19, 0xb152b191c465cb53 # initialize rs1
li x25, 0xb3297b3c7e4ccadd # initialize rs2
maxu x16, x19, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 152)

# Testcase cp_rs1 (Test source rs1 = x20)
li x20, 0x70214a115ea2de5c # initialize rs1
li x24, 0xb06f4d8c9034391d # initialize rs2
maxu x11, x20, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 160)

# Testcase cp_rs1 (Test source rs1 = x21)
li x21, 0x562a349ebc113d15 # initialize rs1
li x12, 0x05ce201d65d575a6 # initialize rs2
maxu x7, x21, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 168)

# Testcase cp_rs1 (Test source rs1 = x22)
li x22, 0xf5b4d2f00eba6402 # initialize rs1
li x16, 0x80d09f0d0ddf3a48 # initialize rs2
maxu x19, x22, x16 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 176)

# Testcase cp_rs1 (Test source rs1 = x23)
li x23, 0xeb93f7fb3f40bf93 # initialize rs1
li x17, 0xe3310bd42356574b # initialize rs2
maxu x31, x23, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 184)

# Testcase cp_rs1 (Test source rs1 = x24)
li x24, 0x6356b96deb903a13 # initialize rs1
li x25, 0xf6e9de4cd3fb7385 # initialize rs2
maxu x23, x24, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 192)

# Testcase cp_rs1 (Test source rs1 = x25)
li x25, 0x8b9381e75bac2065 # initialize rs1
li x14, 0x833a3b27dddbc2f5 # initialize rs2
maxu x15, x25, x14 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 200)

# Testcase cp_rs1 (Test source rs1 = x26)
li x26, 0x113d4fa088032165 # initialize rs1
li x18, 0xbf8a8b300e7fe483 # initialize rs2
maxu x9, x26, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 208)

# Testcase cp_rs1 (Test source rs1 = x27)
li x27, 0x751212eb28f6cebf # initialize rs1
li x6, 0x2fab9937e0237b46 # initialize rs2
maxu x20, x27, x6 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 216)

# Testcase cp_rs1 (Test source rs1 = x28)
li x28, 0x4a846b650a60ebe9 # initialize rs1
li x12, 0x82478f75839480a3 # initialize rs2
maxu x25, x28, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 224)

# Testcase cp_rs1 (Test source rs1 = x29)
li x29, 0xa2b6bed468248998 # initialize rs1
li x12, 0x398a40087cd6dd56 # initialize rs2
maxu x5, x29, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x5, 232)

# Testcase cp_rs1 (Test source rs1 = x30)
li x30, 0x3e43a6143d7ab2ec # initialize rs1
li x19, 0xc9438cf355230580 # initialize rs2
maxu x1, x30, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 240)

# Testcase cp_rs1 (Test source rs1 = x31)
li x31, 0xcf61616a802d0bde # initialize rs1
li x30, 0x9984a96df9a1c432 # initialize rs2
maxu x21, x31, x30 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 248)

# Testcase cp_rs2 (Test source rs2 = x0)
li x30, 0xfc1cf9b4b05f2a97 # initialize rs1
li x0, 0xca74f334c6f754a5 # initialize rs2
maxu x16, x30, x0 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 256)

# Testcase cp_rs2 (Test source rs2 = x1)
li x28, 0xa53e072b935843db # initialize rs1
li x1, 0x27a0d3cb49676dba # initialize rs2
maxu x16, x28, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 264)

# Testcase cp_rs2 (Test source rs2 = x2)
li x26, 0xefbde64fcd66028f # initialize rs1
li x2, 0xf6b9597f7ceb6c38 # initialize rs2
maxu x19, x26, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 272)

# Testcase cp_rs2 (Test source rs2 = x3)
li x21, 0x87ba75f529ba3823 # initialize rs1
li x3, 0xa75a7bbf2567cb45 # initialize rs2
maxu x28, x21, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x28, 280)

# Testcase cp_rs2 (Test source rs2 = x4)
mv x5, x4 # switch signature pointer register to avoid conflict with test
li x2, 0x82de8819e6cdff31 # initialize rs1
li x4, 0xd6d5912fa618712f # initialize rs2
maxu x23, x2, x4 # perform operation
RVTEST_SIGUPD(x5, x0, x23, 288)

# Testcase cp_rs2 (Test source rs2 = x5)
mv x6, x5 # switch signature pointer register to avoid conflict with test
li x10, 0x505e3097feada415 # initialize rs1
li x5, 0x615c07fe9456cd9f # initialize rs2
maxu x29, x10, x5 # perform operation
RVTEST_SIGUPD(x6, x0, x29, 296)

# Testcase cp_rs2 (Test source rs2 = x6)
mv x7, x6 # switch signature pointer register to avoid conflict with test
li x31, 0xb9c43a03d6c9be5f # initialize rs1
li x6, 0xf9b9c21d7d413743 # initialize rs2
maxu x12, x31, x6 # perform operation
RVTEST_SIGUPD(x7, x0, x12, 304)

# Testcase cp_rs2 (Test source rs2 = x7)
mv x4, x7 # switch signature pointer register to avoid conflict with test
li x16, 0x7d4de5023548b254 # initialize rs1
li x7, 0x6769412f8af3d709 # initialize rs2
maxu x13, x16, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 312)

# Testcase cp_rs2 (Test source rs2 = x8)
li x22, 0x249e9bda3a0a2185 # initialize rs1
li x8, 0x70ec82b594487079 # initialize rs2
maxu x19, x22, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 320)

# Testcase cp_rs2 (Test source rs2 = x9)
li x12, 0xce4d48f37b375f18 # initialize rs1
li x9, 0x1104f1c536c7473f # initialize rs2
maxu x18, x12, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 328)

# Testcase cp_rs2 (Test source rs2 = x10)
li x26, 0x51f7a621d6e2d87a # initialize rs1
li x10, 0x39954483c6c05109 # initialize rs2
maxu x24, x26, x10 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 336)

# Testcase cp_rs2 (Test source rs2 = x11)
li x14, 0x73a75a3c96600bc8 # initialize rs1
li x11, 0x235d91979080f168 # initialize rs2
maxu x26, x14, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 344)

# Testcase cp_rs2 (Test source rs2 = x12)
li x22, 0x6b1b552e6b5f4ff1 # initialize rs1
li x12, 0x6c94c1f7f3f0f3f7 # initialize rs2
maxu x19, x22, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 352)

# Testcase cp_rs2 (Test source rs2 = x13)
li x26, 0x2baa80c2384702b3 # initialize rs1
li x13, 0xa53a592d38cbbcf6 # initialize rs2
maxu x10, x26, x13 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 360)

# Testcase cp_rs2 (Test source rs2 = x14)
li x15, 0x3fe38c0be796f20c # initialize rs1
li x14, 0xe21090d121dadadc # initialize rs2
maxu x12, x15, x14 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 368)

# Testcase cp_rs2 (Test source rs2 = x15)
li x7, 0x3740ff4914ef7523 # initialize rs1
li x15, 0x4389494404aed906 # initialize rs2
maxu x21, x7, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 376)

# Testcase cp_rs2 (Test source rs2 = x16)
li x10, 0xbeecc96af9e8f12a # initialize rs1
li x16, 0x4813b13333e833dc # initialize rs2
maxu x21, x10, x16 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 384)

# Testcase cp_rs2 (Test source rs2 = x17)
li x19, 0x0fda556a5acb310b # initialize rs1
li x17, 0xca3ff5c33b322cfd # initialize rs2
maxu x29, x19, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 392)

# Testcase cp_rs2 (Test source rs2 = x18)
li x14, 0x442d43a90234be34 # initialize rs1
li x18, 0x4786feb302d33d70 # initialize rs2
maxu x30, x14, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 400)

# Testcase cp_rs2 (Test source rs2 = x19)
li x14, 0x2a066dbe252f26fd # initialize rs1
li x19, 0x27bfa4ff34eaade0 # initialize rs2
maxu x2, x14, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 408)

# Testcase cp_rs2 (Test source rs2 = x20)
li x15, 0xfb7c6bba7b905279 # initialize rs1
li x20, 0x2e1251c7b08c4559 # initialize rs2
maxu x22, x15, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 416)

# Testcase cp_rs2 (Test source rs2 = x21)
li x18, 0x18b594fa2e9c72c9 # initialize rs1
li x21, 0xf88db6167b27d0cc # initialize rs2
maxu x26, x18, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 424)

# Testcase cp_rs2 (Test source rs2 = x22)
li x10, 0x97a6ff8f3c5e07a8 # initialize rs1
li x22, 0x0428dcf59f3bed47 # initialize rs2
maxu x2, x10, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 432)

# Testcase cp_rs2 (Test source rs2 = x23)
li x15, 0x65849abf9df89e2b # initialize rs1
li x23, 0x032462638bf95916 # initialize rs2
maxu x26, x15, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 440)

# Testcase cp_rs2 (Test source rs2 = x24)
li x25, 0x8fef2d3d37fc7286 # initialize rs1
li x24, 0xe804a2fe4c8dd9fe # initialize rs2
maxu x14, x25, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 448)

# Testcase cp_rs2 (Test source rs2 = x25)
li x18, 0x53e844902eca748b # initialize rs1
li x25, 0xa07051fb2db33386 # initialize rs2
maxu x19, x18, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 456)

# Testcase cp_rs2 (Test source rs2 = x26)
li x1, 0xc3e27b4838409000 # initialize rs1
li x26, 0x20328d6b5322cdae # initialize rs2
maxu x14, x1, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 464)

# Testcase cp_rs2 (Test source rs2 = x27)
li x23, 0xbb9fa4f51cfc1c2b # initialize rs1
li x27, 0x128e5449d79ccd45 # initialize rs2
maxu x13, x23, x27 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 472)

# Testcase cp_rs2 (Test source rs2 = x28)
li x18, 0xf29bc936077932d2 # initialize rs1
li x28, 0x58b66d266f6ca3f5 # initialize rs2
maxu x25, x18, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 480)

# Testcase cp_rs2 (Test source rs2 = x29)
li x12, 0x5d2e54b970f86f4b # initialize rs1
li x29, 0x933a49f5b2e580a6 # initialize rs2
maxu x27, x12, x29 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 488)

# Testcase cp_rs2 (Test source rs2 = x30)
li x28, 0x624c66f0b6143311 # initialize rs1
li x30, 0x6761e2041a4e36e6 # initialize rs2
maxu x16, x28, x30 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 496)

# Testcase cp_rs2 (Test source rs2 = x31)
li x5, 0xe85e7655b815aade # initialize rs1
li x31, 0xfaf6dbc64aefb08a # initialize rs2
maxu x14, x5, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 504)

# Testcase cp_rd (Test destination rd = x0)
li x10, 0x3d77e2a8bb256c56 # initialize rs1
li x27, 0x5459e6fedb40921a # initialize rs2
maxu x0, x10, x27 # perform operation
RVTEST_SIGUPD(x4, x0, x0, 512)

# Testcase cp_rd (Test destination rd = x1)
li x30, 0xc6af5a65b62644ea # initialize rs1
li x28, 0xed2b09c4e9d35b13 # initialize rs2
maxu x1, x30, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 520)

# Testcase cp_rd (Test destination rd = x2)
li x5, 0x2f5f7fbd87cf95f6 # initialize rs1
li x20, 0xa151c305d8bfd60d # initialize rs2
maxu x2, x5, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 528)

# Testcase cp_rd (Test destination rd = x3)
li x19, 0x8dadc9c0bd1b33a6 # initialize rs1
li x17, 0x71841c559e9aa7c3 # initialize rs2
maxu x3, x19, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 536)

# Testcase cp_rd (Test destination rd = x4)
mv x5, x4 # switch signature pointer register to avoid conflict with test
li x24, 0x12e144664ddec4d2 # initialize rs1
li x1, 0x3679780e807b73ab # initialize rs2
maxu x4, x24, x1 # perform operation
RVTEST_SIGUPD(x5, x0, x4, 544)

# Testcase cp_rd (Test destination rd = x5)
mv x6, x5 # switch signature pointer register to avoid conflict with test
li x8, 0xb7dc40f70a920045 # initialize rs1
li x30, 0x2641c2f33f81775f # initialize rs2
maxu x5, x8, x30 # perform operation
RVTEST_SIGUPD(x6, x0, x5, 552)

# Testcase cp_rd (Test destination rd = x6)
mv x7, x6 # switch signature pointer register to avoid conflict with test
li x22, 0x9768a1e7d4c12ee7 # initialize rs1
li x13, 0x3272a38e6918f9a4 # initialize rs2
maxu x6, x22, x13 # perform operation
RVTEST_SIGUPD(x7, x0, x6, 560)

# Testcase cp_rd (Test destination rd = x7)
mv x4, x7 # switch signature pointer register to avoid conflict with test
li x25, 0x3328745c5aaa3225 # initialize rs1
li x1, 0xe0429eabfbc4fc80 # initialize rs2
maxu x7, x25, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 568)

# Testcase cp_rd (Test destination rd = x8)
li x20, 0x42613fd65f6d5cbb # initialize rs1
li x17, 0x5f00f6da8a809463 # initialize rs2
maxu x8, x20, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 576)

# Testcase cp_rd (Test destination rd = x9)
li x7, 0x90fafa51f8e20c55 # initialize rs1
li x20, 0x088ad649976c9199 # initialize rs2
maxu x9, x7, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 584)

# Testcase cp_rd (Test destination rd = x10)
li x7, 0x4a7f0cc55775dae8 # initialize rs1
li x17, 0x79fdee3532ddf30d # initialize rs2
maxu x10, x7, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 592)

# Testcase cp_rd (Test destination rd = x11)
li x5, 0x95c0cb11304f7b1a # initialize rs1
li x15, 0x12596d9909a357c1 # initialize rs2
maxu x11, x5, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 600)

# Testcase cp_rd (Test destination rd = x12)
li x17, 0xfb5d0aaf264dc648 # initialize rs1
li x3, 0xaf81e703e38823d9 # initialize rs2
maxu x12, x17, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 608)

# Testcase cp_rd (Test destination rd = x13)
li x19, 0x09ffd2c0ebbcaaa2 # initialize rs1
li x24, 0xb1ebe43668a4f41b # initialize rs2
maxu x13, x19, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 616)

# Testcase cp_rd (Test destination rd = x14)
li x22, 0xe6300c6f0ce477a1 # initialize rs1
li x18, 0x49688732052e3bb3 # initialize rs2
maxu x14, x22, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 624)

# Testcase cp_rd (Test destination rd = x15)
li x18, 0x53bb0882ebfa1d8e # initialize rs1
li x31, 0xcf269f77e1b39615 # initialize rs2
maxu x15, x18, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 632)

# Testcase cp_rd (Test destination rd = x16)
li x8, 0x55306caf75a2555e # initialize rs1
li x24, 0x38c48225b797a636 # initialize rs2
maxu x16, x8, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 640)

# Testcase cp_rd (Test destination rd = x17)
li x10, 0xd4759b3214cef98a # initialize rs1
li x11, 0x21796de7f7d8820a # initialize rs2
maxu x17, x10, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 648)

# Testcase cp_rd (Test destination rd = x18)
li x10, 0x2ad2403eb25f41e2 # initialize rs1
li x20, 0x4b617c3f613a4861 # initialize rs2
maxu x18, x10, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 656)

# Testcase cp_rd (Test destination rd = x19)
li x5, 0x3c9167e999e661e0 # initialize rs1
li x27, 0x69465702a40a1555 # initialize rs2
maxu x19, x5, x27 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 664)

# Testcase cp_rd (Test destination rd = x20)
li x13, 0x7e33454a5d418d8f # initialize rs1
li x3, 0x797d74a557d2a6af # initialize rs2
maxu x20, x13, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 672)

# Testcase cp_rd (Test destination rd = x21)
li x14, 0xec53bafd3f5c6d21 # initialize rs1
li x7, 0xf3424d17772e7f58 # initialize rs2
maxu x21, x14, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 680)

# Testcase cp_rd (Test destination rd = x22)
li x18, 0x7eda199c75ca256e # initialize rs1
li x30, 0x7acf24e2c8c993d0 # initialize rs2
maxu x22, x18, x30 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 688)

# Testcase cp_rd (Test destination rd = x23)
li x30, 0x38f2abca85f36e9e # initialize rs1
li x20, 0x49d44221180e9500 # initialize rs2
maxu x23, x30, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 696)

# Testcase cp_rd (Test destination rd = x24)
li x26, 0x960c563483e20c81 # initialize rs1
li x23, 0x1fe8a8f1b3ccf0bd # initialize rs2
maxu x24, x26, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 704)

# Testcase cp_rd (Test destination rd = x25)
li x5, 0xcbe7d15a55dbda23 # initialize rs1
li x19, 0xff4a5de8f3fd254e # initialize rs2
maxu x25, x5, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 712)

# Testcase cp_rd (Test destination rd = x26)
li x9, 0x47ac2f83b66560e1 # initialize rs1
li x15, 0x1a8a098f52fa3797 # initialize rs2
maxu x26, x9, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 720)

# Testcase cp_rd (Test destination rd = x27)
li x2, 0xb4fc3f3fc4e4f373 # initialize rs1
li x28, 0xad440a8bb159eef3 # initialize rs2
maxu x27, x2, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 728)

# Testcase cp_rd (Test destination rd = x28)
li x18, 0x6d0d012a2903a724 # initialize rs1
li x13, 0x1615abeba7772107 # initialize rs2
maxu x28, x18, x13 # perform operation
RVTEST_SIGUPD(x4, x0, x28, 736)

# Testcase cp_rd (Test destination rd = x29)
li x3, 0x5f02651a03f7aae3 # initialize rs1
li x17, 0xd211d4eb89cc609f # initialize rs2
maxu x29, x3, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 744)

# Testcase cp_rd (Test destination rd = x30)
li x18, 0x7a59bf3c2577e79c # initialize rs1
li x1, 0xa0a90f8f3d1c6980 # initialize rs2
maxu x30, x18, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 752)

# Testcase cp_rd (Test destination rd = x31)
li x23, 0xd6187328cd392aef # initialize rs1
li x26, 0x49d50b41a2e5d630 # initialize rs2
maxu x31, x23, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 760)

# Testcase cp_rs1_corners (Test source rs1 value = 0x0)
li x15, 0x0000000000000000 # initialize rs1
li x17, 0x369d00c7b6222d55 # initialize rs2
maxu x21, x15, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 768)

# Testcase cp_rs1_corners (Test source rs1 value = 0x1)
li x9, 0x0000000000000001 # initialize rs1
li x1, 0xe45163526825e5e9 # initialize rs2
maxu x15, x9, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 776)

# Testcase cp_rs1_corners (Test source rs1 value = 0x2)
li x30, 0x0000000000000002 # initialize rs1
li x13, 0xeb74a42d0bb5f966 # initialize rs2
maxu x25, x30, x13 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 784)

# Testcase cp_rs1_corners (Test source rs1 value = 0x8000000000000000)
li x9, 0x8000000000000000 # initialize rs1
li x11, 0xe711e0b22fb6bce1 # initialize rs2
maxu x7, x9, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 792)

# Testcase cp_rs1_corners (Test source rs1 value = 0x8000000000000001)
li x15, 0x8000000000000001 # initialize rs1
li x14, 0x40b531d6e9b71da9 # initialize rs2
maxu x26, x15, x14 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 800)

# Testcase cp_rs1_corners (Test source rs1 value = 0x7fffffffffffffff)
li x27, 0x7fffffffffffffff # initialize rs1
li x8, 0x79169fced1e601cc # initialize rs2
maxu x15, x27, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 808)

# Testcase cp_rs1_corners (Test source rs1 value = 0x7ffffffffffffffe)
li x1, 0x7ffffffffffffffe # initialize rs1
li x12, 0xb6486291d1237a51 # initialize rs2
maxu x3, x1, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 816)

# Testcase cp_rs1_corners (Test source rs1 value = 0xffffffffffffffff)
li x18, 0xffffffffffffffff # initialize rs1
li x31, 0x39ae02f7308ee9c5 # initialize rs2
maxu x8, x18, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 824)

# Testcase cp_rs1_corners (Test source rs1 value = 0xfffffffffffffffe)
li x18, 0xfffffffffffffffe # initialize rs1
li x26, 0xa7a022c75e008218 # initialize rs2
maxu x7, x18, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 832)

# Testcase cp_rs1_corners (Test source rs1 value = 0x5bbc887763ae86f2)
li x20, 0x5bbc887763ae86f2 # initialize rs1
li x9, 0x8719eb9252105473 # initialize rs2
maxu x11, x20, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 840)

# Testcase cp_rs1_corners (Test source rs1 value = 0xaaaaaaaaaaaaaaaa)
li x3, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x26, 0x4223ecc5baf6b05f # initialize rs2
maxu x17, x3, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 848)

# Testcase cp_rs1_corners (Test source rs1 value = 0x5555555555555555)
li x15, 0x5555555555555555 # initialize rs1
li x17, 0xfd670e4e9a537e4c # initialize rs2
maxu x28, x15, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x28, 856)

# Testcase cp_rs1_corners (Test source rs1 value = 0xffffffff)
li x8, 0x00000000ffffffff # initialize rs1
li x19, 0x4b24a86ed7e56372 # initialize rs2
maxu x27, x8, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 864)

# Testcase cp_rs1_corners (Test source rs1 value = 0xfffffffe)
li x7, 0x00000000fffffffe # initialize rs1
li x13, 0x691ac5feb6f7849c # initialize rs2
maxu x18, x7, x13 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 872)

# Testcase cp_rs1_corners (Test source rs1 value = 0x100000000)
li x14, 0x0000000100000000 # initialize rs1
li x18, 0xb3919774da014600 # initialize rs2
maxu x23, x14, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 880)

# Testcase cp_rs1_corners (Test source rs1 value = 0x100000001)
li x23, 0x0000000100000001 # initialize rs1
li x7, 0x604d2bfc430e26fe # initialize rs2
maxu x16, x23, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 888)

# Testcase cp_rs2_corners (Test source rs2 value = 0x0)
li x26, 0x55238c33fc20ef0f # initialize rs1
li x2, 0x0000000000000000 # initialize rs2
maxu x23, x26, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 896)

# Testcase cp_rs2_corners (Test source rs2 value = 0x1)
li x12, 0x0ce120d80241ce5a # initialize rs1
li x2, 0x0000000000000001 # initialize rs2
maxu x31, x12, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 904)

# Testcase cp_rs2_corners (Test source rs2 value = 0x2)
li x13, 0x7aa46a8753fe566b # initialize rs1
li x16, 0x0000000000000002 # initialize rs2
maxu x10, x13, x16 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 912)

# Testcase cp_rs2_corners (Test source rs2 value = 0x8000000000000000)
li x19, 0xaba92acb9784cf5b # initialize rs1
li x9, 0x8000000000000000 # initialize rs2
maxu x31, x19, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 920)

# Testcase cp_rs2_corners (Test source rs2 value = 0x8000000000000001)
li x22, 0x9fcbb3b1be576676 # initialize rs1
li x19, 0x8000000000000001 # initialize rs2
maxu x16, x22, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 928)

# Testcase cp_rs2_corners (Test source rs2 value = 0x7fffffffffffffff)
li x31, 0x692466c47a58bc4b # initialize rs1
li x7, 0x7fffffffffffffff # initialize rs2
maxu x18, x31, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 936)

# Testcase cp_rs2_corners (Test source rs2 value = 0x7ffffffffffffffe)
li x2, 0xbf43a9fc01f037eb # initialize rs1
li x26, 0x7ffffffffffffffe # initialize rs2
maxu x5, x2, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x5, 944)

# Testcase cp_rs2_corners (Test source rs2 value = 0xffffffffffffffff)
li x19, 0x334e31c4f3948cae # initialize rs1
li x9, 0xffffffffffffffff # initialize rs2
maxu x31, x19, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 952)

# Testcase cp_rs2_corners (Test source rs2 value = 0xfffffffffffffffe)
li x20, 0x3ff08002f316434b # initialize rs1
li x15, 0xfffffffffffffffe # initialize rs2
maxu x19, x20, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 960)

# Testcase cp_rs2_corners (Test source rs2 value = 0x5bbc887763ae86f2)
li x21, 0xee75efa88db35444 # initialize rs1
li x11, 0x5bbc887763ae86f2 # initialize rs2
maxu x1, x21, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 968)

# Testcase cp_rs2_corners (Test source rs2 value = 0xaaaaaaaaaaaaaaaa)
li x7, 0xc0ae8bdb28def05d # initialize rs1
li x6, 0xaaaaaaaaaaaaaaaa # initialize rs2
maxu x31, x7, x6 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 976)

# Testcase cp_rs2_corners (Test source rs2 value = 0x5555555555555555)
li x6, 0x7667e2fac54f7775 # initialize rs1
li x18, 0x5555555555555555 # initialize rs2
maxu x20, x6, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 984)

# Testcase cp_rs2_corners (Test source rs2 value = 0xffffffff)
li x21, 0x0b18a356e6d75e01 # initialize rs1
li x7, 0x00000000ffffffff # initialize rs2
maxu x29, x21, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 992)

# Testcase cp_rs2_corners (Test source rs2 value = 0xfffffffe)
li x20, 0x4cde7b4092764398 # initialize rs1
li x15, 0x00000000fffffffe # initialize rs2
maxu x10, x20, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 1000)

# Testcase cp_rs2_corners (Test source rs2 value = 0x100000000)
li x8, 0xc55be85a62bc92cd # initialize rs1
li x28, 0x0000000100000000 # initialize rs2
maxu x11, x8, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 1008)

# Testcase cp_rs2_corners (Test source rs2 value = 0x100000001)
li x13, 0x6235db9f0b5c6cee # initialize rs1
li x21, 0x0000000100000001 # initialize rs2
maxu x15, x13, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 1016)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0x0)
li x3, 0x0000000000000000 # initialize rs1
li x25, 0x0000000000000000 # initialize rs2
maxu x15, x3, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 1024)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0x1)
li x30, 0x0000000000000000 # initialize rs1
li x20, 0x0000000000000001 # initialize rs2
maxu x27, x30, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 1032)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0x2)
li x24, 0x0000000000000000 # initialize rs1
li x3, 0x0000000000000002 # initialize rs2
maxu x7, x24, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 1040)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0x8000000000000000)
li x18, 0x0000000000000000 # initialize rs1
li x28, 0x8000000000000000 # initialize rs2
maxu x19, x18, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 1048)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0x8000000000000001)
li x3, 0x0000000000000000 # initialize rs1
li x6, 0x8000000000000001 # initialize rs2
maxu x25, x3, x6 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 1056)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0x7fffffffffffffff)
li x29, 0x0000000000000000 # initialize rs1
li x10, 0x7fffffffffffffff # initialize rs2
maxu x23, x29, x10 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 1064)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0x7ffffffffffffffe)
li x28, 0x0000000000000000 # initialize rs1
li x26, 0x7ffffffffffffffe # initialize rs2
maxu x27, x28, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 1072)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0xffffffffffffffff)
li x6, 0x0000000000000000 # initialize rs1
li x24, 0xffffffffffffffff # initialize rs2
maxu x7, x6, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 1080)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0xfffffffffffffffe)
li x19, 0x0000000000000000 # initialize rs1
li x13, 0xfffffffffffffffe # initialize rs2
maxu x7, x19, x13 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 1088)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0x5bbc887763ae86f2)
li x22, 0x0000000000000000 # initialize rs1
li x17, 0x5bbc887763ae86f2 # initialize rs2
maxu x15, x22, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 1096)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0xaaaaaaaaaaaaaaaa)
li x5, 0x0000000000000000 # initialize rs1
li x25, 0xaaaaaaaaaaaaaaaa # initialize rs2
maxu x20, x5, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 1104)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0x5555555555555555)
li x15, 0x0000000000000000 # initialize rs1
li x22, 0x5555555555555555 # initialize rs2
maxu x2, x15, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 1112)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0xffffffff)
li x29, 0x0000000000000000 # initialize rs1
li x25, 0x00000000ffffffff # initialize rs2
maxu x26, x29, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 1120)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0xfffffffe)
li x20, 0x0000000000000000 # initialize rs1
li x3, 0x00000000fffffffe # initialize rs2
maxu x26, x20, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 1128)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0x100000000)
li x6, 0x0000000000000000 # initialize rs1
li x19, 0x0000000100000000 # initialize rs2
maxu x1, x6, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 1136)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0x100000001)
li x14, 0x0000000000000000 # initialize rs1
li x26, 0x0000000100000001 # initialize rs2
maxu x31, x14, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 1144)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0x0)
li x31, 0x0000000000000001 # initialize rs1
li x22, 0x0000000000000000 # initialize rs2
maxu x2, x31, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 1152)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0x1)
li x16, 0x0000000000000001 # initialize rs1
li x9, 0x0000000000000001 # initialize rs2
maxu x10, x16, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 1160)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0x2)
li x5, 0x0000000000000001 # initialize rs1
li x21, 0x0000000000000002 # initialize rs2
maxu x29, x5, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 1168)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0x8000000000000000)
li x8, 0x0000000000000001 # initialize rs1
li x20, 0x8000000000000000 # initialize rs2
maxu x6, x8, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x6, 1176)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0x8000000000000001)
li x23, 0x0000000000000001 # initialize rs1
li x2, 0x8000000000000001 # initialize rs2
maxu x9, x23, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 1184)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0x7fffffffffffffff)
li x6, 0x0000000000000001 # initialize rs1
li x1, 0x7fffffffffffffff # initialize rs2
maxu x11, x6, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 1192)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0x7ffffffffffffffe)
li x20, 0x0000000000000001 # initialize rs1
li x17, 0x7ffffffffffffffe # initialize rs2
maxu x1, x20, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 1200)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0xffffffffffffffff)
li x14, 0x0000000000000001 # initialize rs1
li x8, 0xffffffffffffffff # initialize rs2
maxu x3, x14, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 1208)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0xfffffffffffffffe)
li x22, 0x0000000000000001 # initialize rs1
li x15, 0xfffffffffffffffe # initialize rs2
maxu x26, x22, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 1216)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0x5bbc887763ae86f2)
li x14, 0x0000000000000001 # initialize rs1
li x26, 0x5bbc887763ae86f2 # initialize rs2
maxu x13, x14, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 1224)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0xaaaaaaaaaaaaaaaa)
li x3, 0x0000000000000001 # initialize rs1
li x16, 0xaaaaaaaaaaaaaaaa # initialize rs2
maxu x24, x3, x16 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 1232)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0x5555555555555555)
li x29, 0x0000000000000001 # initialize rs1
li x15, 0x5555555555555555 # initialize rs2
maxu x6, x29, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x6, 1240)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0xffffffff)
li x30, 0x0000000000000001 # initialize rs1
li x16, 0x00000000ffffffff # initialize rs2
maxu x19, x30, x16 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 1248)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0xfffffffe)
li x29, 0x0000000000000001 # initialize rs1
li x27, 0x00000000fffffffe # initialize rs2
maxu x26, x29, x27 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 1256)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0x100000000)
li x28, 0x0000000000000001 # initialize rs1
li x25, 0x0000000100000000 # initialize rs2
maxu x30, x28, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 1264)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0x100000001)
li x19, 0x0000000000000001 # initialize rs1
li x31, 0x0000000100000001 # initialize rs2
maxu x28, x19, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x28, 1272)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0x0)
li x3, 0x0000000000000002 # initialize rs1
li x20, 0x0000000000000000 # initialize rs2
maxu x18, x3, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 1280)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0x1)
li x26, 0x0000000000000002 # initialize rs1
li x31, 0x0000000000000001 # initialize rs2
maxu x10, x26, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 1288)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0x2)
li x1, 0x0000000000000002 # initialize rs1
li x10, 0x0000000000000002 # initialize rs2
maxu x3, x1, x10 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 1296)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0x8000000000000000)
li x1, 0x0000000000000002 # initialize rs1
li x22, 0x8000000000000000 # initialize rs2
maxu x17, x1, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 1304)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0x8000000000000001)
li x6, 0x0000000000000002 # initialize rs1
li x17, 0x8000000000000001 # initialize rs2
maxu x23, x6, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 1312)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0x7fffffffffffffff)
li x31, 0x0000000000000002 # initialize rs1
li x3, 0x7fffffffffffffff # initialize rs2
maxu x9, x31, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 1320)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0x7ffffffffffffffe)
li x13, 0x0000000000000002 # initialize rs1
li x31, 0x7ffffffffffffffe # initialize rs2
maxu x7, x13, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 1328)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0xffffffffffffffff)
li x12, 0x0000000000000002 # initialize rs1
li x5, 0xffffffffffffffff # initialize rs2
maxu x29, x12, x5 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 1336)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0xfffffffffffffffe)
li x6, 0x0000000000000002 # initialize rs1
li x18, 0xfffffffffffffffe # initialize rs2
maxu x16, x6, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 1344)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0x5bbc887763ae86f2)
li x29, 0x0000000000000002 # initialize rs1
li x18, 0x5bbc887763ae86f2 # initialize rs2
maxu x12, x29, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 1352)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0xaaaaaaaaaaaaaaaa)
li x10, 0x0000000000000002 # initialize rs1
li x5, 0xaaaaaaaaaaaaaaaa # initialize rs2
maxu x14, x10, x5 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 1360)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0x5555555555555555)
li x26, 0x0000000000000002 # initialize rs1
li x17, 0x5555555555555555 # initialize rs2
maxu x29, x26, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 1368)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0xffffffff)
li x2, 0x0000000000000002 # initialize rs1
li x29, 0x00000000ffffffff # initialize rs2
maxu x10, x2, x29 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 1376)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0xfffffffe)
li x30, 0x0000000000000002 # initialize rs1
li x6, 0x00000000fffffffe # initialize rs2
maxu x13, x30, x6 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 1384)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0x100000000)
li x14, 0x0000000000000002 # initialize rs1
li x18, 0x0000000100000000 # initialize rs2
maxu x30, x14, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 1392)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0x100000001)
li x20, 0x0000000000000002 # initialize rs1
li x12, 0x0000000100000001 # initialize rs2
maxu x31, x20, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 1400)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0x0)
li x28, 0x8000000000000000 # initialize rs1
li x12, 0x0000000000000000 # initialize rs2
maxu x7, x28, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 1408)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0x1)
li x17, 0x8000000000000000 # initialize rs1
li x26, 0x0000000000000001 # initialize rs2
maxu x24, x17, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 1416)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0x2)
li x31, 0x8000000000000000 # initialize rs1
li x3, 0x0000000000000002 # initialize rs2
maxu x7, x31, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 1424)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0x8000000000000000)
li x29, 0x8000000000000000 # initialize rs1
li x19, 0x8000000000000000 # initialize rs2
maxu x13, x29, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 1432)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0x8000000000000001)
li x18, 0x8000000000000000 # initialize rs1
li x13, 0x8000000000000001 # initialize rs2
maxu x16, x18, x13 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 1440)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0x7fffffffffffffff)
li x17, 0x8000000000000000 # initialize rs1
li x21, 0x7fffffffffffffff # initialize rs2
maxu x22, x17, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 1448)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0x7ffffffffffffffe)
li x7, 0x8000000000000000 # initialize rs1
li x9, 0x7ffffffffffffffe # initialize rs2
maxu x24, x7, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 1456)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0xffffffffffffffff)
li x29, 0x8000000000000000 # initialize rs1
li x2, 0xffffffffffffffff # initialize rs2
maxu x31, x29, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 1464)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0xfffffffffffffffe)
li x13, 0x8000000000000000 # initialize rs1
li x9, 0xfffffffffffffffe # initialize rs2
maxu x15, x13, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 1472)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0x5bbc887763ae86f2)
li x6, 0x8000000000000000 # initialize rs1
li x18, 0x5bbc887763ae86f2 # initialize rs2
maxu x13, x6, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 1480)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0xaaaaaaaaaaaaaaaa)
li x27, 0x8000000000000000 # initialize rs1
li x14, 0xaaaaaaaaaaaaaaaa # initialize rs2
maxu x6, x27, x14 # perform operation
RVTEST_SIGUPD(x4, x0, x6, 1488)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0x5555555555555555)
li x27, 0x8000000000000000 # initialize rs1
li x24, 0x5555555555555555 # initialize rs2
maxu x28, x27, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x28, 1496)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0xffffffff)
li x29, 0x8000000000000000 # initialize rs1
li x5, 0x00000000ffffffff # initialize rs2
maxu x8, x29, x5 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 1504)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0xfffffffe)
li x21, 0x8000000000000000 # initialize rs1
li x1, 0x00000000fffffffe # initialize rs2
maxu x15, x21, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 1512)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0x100000000)
li x20, 0x8000000000000000 # initialize rs1
li x28, 0x0000000100000000 # initialize rs2
maxu x3, x20, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 1520)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0x100000001)
li x15, 0x8000000000000000 # initialize rs1
li x3, 0x0000000100000001 # initialize rs2
maxu x2, x15, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 1528)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0x0)
li x6, 0x8000000000000001 # initialize rs1
li x5, 0x0000000000000000 # initialize rs2
maxu x8, x6, x5 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 1536)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0x1)
li x30, 0x8000000000000001 # initialize rs1
li x12, 0x0000000000000001 # initialize rs2
maxu x27, x30, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 1544)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0x2)
li x23, 0x8000000000000001 # initialize rs1
li x9, 0x0000000000000002 # initialize rs2
maxu x26, x23, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 1552)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0x8000000000000000)
li x9, 0x8000000000000001 # initialize rs1
li x5, 0x8000000000000000 # initialize rs2
maxu x14, x9, x5 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 1560)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0x8000000000000001)
li x16, 0x8000000000000001 # initialize rs1
li x24, 0x8000000000000001 # initialize rs2
maxu x18, x16, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 1568)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0x7fffffffffffffff)
li x22, 0x8000000000000001 # initialize rs1
li x25, 0x7fffffffffffffff # initialize rs2
maxu x5, x22, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x5, 1576)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0x7ffffffffffffffe)
li x23, 0x8000000000000001 # initialize rs1
li x27, 0x7ffffffffffffffe # initialize rs2
maxu x10, x23, x27 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 1584)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0xffffffffffffffff)
li x5, 0x8000000000000001 # initialize rs1
li x31, 0xffffffffffffffff # initialize rs2
maxu x12, x5, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 1592)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0xfffffffffffffffe)
li x22, 0x8000000000000001 # initialize rs1
li x21, 0xfffffffffffffffe # initialize rs2
maxu x20, x22, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 1600)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0x5bbc887763ae86f2)
li x26, 0x8000000000000001 # initialize rs1
li x24, 0x5bbc887763ae86f2 # initialize rs2
maxu x3, x26, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 1608)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0xaaaaaaaaaaaaaaaa)
li x16, 0x8000000000000001 # initialize rs1
li x9, 0xaaaaaaaaaaaaaaaa # initialize rs2
maxu x10, x16, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 1616)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0x5555555555555555)
li x22, 0x8000000000000001 # initialize rs1
li x3, 0x5555555555555555 # initialize rs2
maxu x9, x22, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 1624)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0xffffffff)
li x26, 0x8000000000000001 # initialize rs1
li x15, 0x00000000ffffffff # initialize rs2
maxu x2, x26, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 1632)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0xfffffffe)
li x19, 0x8000000000000001 # initialize rs1
li x12, 0x00000000fffffffe # initialize rs2
maxu x28, x19, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x28, 1640)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0x100000000)
li x24, 0x8000000000000001 # initialize rs1
li x10, 0x0000000100000000 # initialize rs2
maxu x13, x24, x10 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 1648)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0x100000001)
li x19, 0x8000000000000001 # initialize rs1
li x29, 0x0000000100000001 # initialize rs2
maxu x25, x19, x29 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 1656)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0x0)
li x3, 0x7fffffffffffffff # initialize rs1
li x9, 0x0000000000000000 # initialize rs2
maxu x5, x3, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x5, 1664)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0x1)
li x28, 0x7fffffffffffffff # initialize rs1
li x12, 0x0000000000000001 # initialize rs2
maxu x25, x28, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 1672)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0x2)
li x17, 0x7fffffffffffffff # initialize rs1
li x15, 0x0000000000000002 # initialize rs2
maxu x1, x17, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 1680)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0x8000000000000000)
li x9, 0x7fffffffffffffff # initialize rs1
li x11, 0x8000000000000000 # initialize rs2
maxu x30, x9, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 1688)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0x8000000000000001)
li x27, 0x7fffffffffffffff # initialize rs1
li x2, 0x8000000000000001 # initialize rs2
maxu x18, x27, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 1696)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0x7fffffffffffffff)
li x6, 0x7fffffffffffffff # initialize rs1
li x23, 0x7fffffffffffffff # initialize rs2
maxu x12, x6, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 1704)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0x7ffffffffffffffe)
li x29, 0x7fffffffffffffff # initialize rs1
li x8, 0x7ffffffffffffffe # initialize rs2
maxu x11, x29, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 1712)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0xffffffffffffffff)
li x24, 0x7fffffffffffffff # initialize rs1
li x5, 0xffffffffffffffff # initialize rs2
maxu x13, x24, x5 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 1720)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0xfffffffffffffffe)
li x1, 0x7fffffffffffffff # initialize rs1
li x29, 0xfffffffffffffffe # initialize rs2
maxu x25, x1, x29 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 1728)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0x5bbc887763ae86f2)
li x25, 0x7fffffffffffffff # initialize rs1
li x5, 0x5bbc887763ae86f2 # initialize rs2
maxu x8, x25, x5 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 1736)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0xaaaaaaaaaaaaaaaa)
li x8, 0x7fffffffffffffff # initialize rs1
li x15, 0xaaaaaaaaaaaaaaaa # initialize rs2
maxu x11, x8, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 1744)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0x5555555555555555)
li x17, 0x7fffffffffffffff # initialize rs1
li x8, 0x5555555555555555 # initialize rs2
maxu x13, x17, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 1752)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0xffffffff)
li x30, 0x7fffffffffffffff # initialize rs1
li x12, 0x00000000ffffffff # initialize rs2
maxu x25, x30, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 1760)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0xfffffffe)
li x19, 0x7fffffffffffffff # initialize rs1
li x5, 0x00000000fffffffe # initialize rs2
maxu x9, x19, x5 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 1768)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0x100000000)
li x24, 0x7fffffffffffffff # initialize rs1
li x28, 0x0000000100000000 # initialize rs2
maxu x13, x24, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 1776)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0x100000001)
li x15, 0x7fffffffffffffff # initialize rs1
li x26, 0x0000000100000001 # initialize rs2
maxu x2, x15, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 1784)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0x0)
li x30, 0x7ffffffffffffffe # initialize rs1
li x25, 0x0000000000000000 # initialize rs2
maxu x29, x30, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 1792)
addi x4, x4, 1800 # increment signature pointer and reset offset

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0x1)
li x18, 0x7ffffffffffffffe # initialize rs1
li x24, 0x0000000000000001 # initialize rs2
maxu x2, x18, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 0)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0x2)
li x18, 0x7ffffffffffffffe # initialize rs1
li x31, 0x0000000000000002 # initialize rs2
maxu x28, x18, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x28, 8)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0x8000000000000000)
li x12, 0x7ffffffffffffffe # initialize rs1
li x26, 0x8000000000000000 # initialize rs2
maxu x5, x12, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x5, 16)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0x8000000000000001)
li x19, 0x7ffffffffffffffe # initialize rs1
li x25, 0x8000000000000001 # initialize rs2
maxu x28, x19, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x28, 24)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0x7fffffffffffffff)
li x11, 0x7ffffffffffffffe # initialize rs1
li x1, 0x7fffffffffffffff # initialize rs2
maxu x22, x11, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 32)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0x7ffffffffffffffe)
li x9, 0x7ffffffffffffffe # initialize rs1
li x23, 0x7ffffffffffffffe # initialize rs2
maxu x3, x9, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 40)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0xffffffffffffffff)
li x16, 0x7ffffffffffffffe # initialize rs1
li x22, 0xffffffffffffffff # initialize rs2
maxu x24, x16, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 48)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0xfffffffffffffffe)
li x10, 0x7ffffffffffffffe # initialize rs1
li x28, 0xfffffffffffffffe # initialize rs2
maxu x29, x10, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 56)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0x5bbc887763ae86f2)
li x13, 0x7ffffffffffffffe # initialize rs1
li x19, 0x5bbc887763ae86f2 # initialize rs2
maxu x15, x13, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 64)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0xaaaaaaaaaaaaaaaa)
li x31, 0x7ffffffffffffffe # initialize rs1
li x17, 0xaaaaaaaaaaaaaaaa # initialize rs2
maxu x5, x31, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x5, 72)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0x5555555555555555)
li x25, 0x7ffffffffffffffe # initialize rs1
li x15, 0x5555555555555555 # initialize rs2
maxu x1, x25, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 80)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0xffffffff)
li x17, 0x7ffffffffffffffe # initialize rs1
li x5, 0x00000000ffffffff # initialize rs2
maxu x24, x17, x5 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 88)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0xfffffffe)
li x6, 0x7ffffffffffffffe # initialize rs1
li x20, 0x00000000fffffffe # initialize rs2
maxu x7, x6, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 96)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0x100000000)
li x30, 0x7ffffffffffffffe # initialize rs1
li x20, 0x0000000100000000 # initialize rs2
maxu x28, x30, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x28, 104)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0x100000001)
li x16, 0x7ffffffffffffffe # initialize rs1
li x25, 0x0000000100000001 # initialize rs2
maxu x30, x16, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 112)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0x0)
li x24, 0xffffffffffffffff # initialize rs1
li x26, 0x0000000000000000 # initialize rs2
maxu x3, x24, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 120)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0x1)
li x21, 0xffffffffffffffff # initialize rs1
li x17, 0x0000000000000001 # initialize rs2
maxu x26, x21, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 128)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0x2)
li x5, 0xffffffffffffffff # initialize rs1
li x17, 0x0000000000000002 # initialize rs2
maxu x23, x5, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 136)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0x8000000000000000)
li x21, 0xffffffffffffffff # initialize rs1
li x11, 0x8000000000000000 # initialize rs2
maxu x7, x21, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 144)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0x8000000000000001)
li x22, 0xffffffffffffffff # initialize rs1
li x11, 0x8000000000000001 # initialize rs2
maxu x23, x22, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 152)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0x7fffffffffffffff)
li x17, 0xffffffffffffffff # initialize rs1
li x22, 0x7fffffffffffffff # initialize rs2
maxu x31, x17, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 160)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0x7ffffffffffffffe)
li x9, 0xffffffffffffffff # initialize rs1
li x11, 0x7ffffffffffffffe # initialize rs2
maxu x29, x9, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 168)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0xffffffffffffffff)
li x12, 0xffffffffffffffff # initialize rs1
li x29, 0xffffffffffffffff # initialize rs2
maxu x31, x12, x29 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 176)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0xfffffffffffffffe)
li x2, 0xffffffffffffffff # initialize rs1
li x25, 0xfffffffffffffffe # initialize rs2
maxu x30, x2, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 184)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0x5bbc887763ae86f2)
li x6, 0xffffffffffffffff # initialize rs1
li x26, 0x5bbc887763ae86f2 # initialize rs2
maxu x17, x6, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 192)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0xaaaaaaaaaaaaaaaa)
li x29, 0xffffffffffffffff # initialize rs1
li x1, 0xaaaaaaaaaaaaaaaa # initialize rs2
maxu x5, x29, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x5, 200)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0x5555555555555555)
li x6, 0xffffffffffffffff # initialize rs1
li x7, 0x5555555555555555 # initialize rs2
maxu x15, x6, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 208)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0xffffffff)
li x9, 0xffffffffffffffff # initialize rs1
li x19, 0x00000000ffffffff # initialize rs2
maxu x26, x9, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 216)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0xfffffffe)
li x25, 0xffffffffffffffff # initialize rs1
li x17, 0x00000000fffffffe # initialize rs2
maxu x9, x25, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 224)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0x100000000)
li x11, 0xffffffffffffffff # initialize rs1
li x3, 0x0000000100000000 # initialize rs2
maxu x19, x11, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 232)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0x100000001)
li x8, 0xffffffffffffffff # initialize rs1
li x17, 0x0000000100000001 # initialize rs2
maxu x26, x8, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 240)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0x0)
li x14, 0xfffffffffffffffe # initialize rs1
li x18, 0x0000000000000000 # initialize rs2
maxu x30, x14, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 248)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0x1)
li x2, 0xfffffffffffffffe # initialize rs1
li x28, 0x0000000000000001 # initialize rs2
maxu x20, x2, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 256)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0x2)
li x7, 0xfffffffffffffffe # initialize rs1
li x31, 0x0000000000000002 # initialize rs2
maxu x27, x7, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 264)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0x8000000000000000)
li x31, 0xfffffffffffffffe # initialize rs1
li x13, 0x8000000000000000 # initialize rs2
maxu x27, x31, x13 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 272)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0x8000000000000001)
li x25, 0xfffffffffffffffe # initialize rs1
li x30, 0x8000000000000001 # initialize rs2
maxu x29, x25, x30 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 280)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0x7fffffffffffffff)
li x18, 0xfffffffffffffffe # initialize rs1
li x5, 0x7fffffffffffffff # initialize rs2
maxu x2, x18, x5 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 288)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0x7ffffffffffffffe)
li x13, 0xfffffffffffffffe # initialize rs1
li x9, 0x7ffffffffffffffe # initialize rs2
maxu x3, x13, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 296)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0xffffffffffffffff)
li x13, 0xfffffffffffffffe # initialize rs1
li x15, 0xffffffffffffffff # initialize rs2
maxu x23, x13, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 304)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0xfffffffffffffffe)
li x11, 0xfffffffffffffffe # initialize rs1
li x15, 0xfffffffffffffffe # initialize rs2
maxu x19, x11, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 312)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0x5bbc887763ae86f2)
li x31, 0xfffffffffffffffe # initialize rs1
li x21, 0x5bbc887763ae86f2 # initialize rs2
maxu x7, x31, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 320)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0xaaaaaaaaaaaaaaaa)
li x30, 0xfffffffffffffffe # initialize rs1
li x16, 0xaaaaaaaaaaaaaaaa # initialize rs2
maxu x10, x30, x16 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 328)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0x5555555555555555)
li x29, 0xfffffffffffffffe # initialize rs1
li x21, 0x5555555555555555 # initialize rs2
maxu x1, x29, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 336)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0xffffffff)
li x13, 0xfffffffffffffffe # initialize rs1
li x30, 0x00000000ffffffff # initialize rs2
maxu x17, x13, x30 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 344)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0xfffffffe)
li x10, 0xfffffffffffffffe # initialize rs1
li x17, 0x00000000fffffffe # initialize rs2
maxu x13, x10, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 352)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0x100000000)
li x20, 0xfffffffffffffffe # initialize rs1
li x28, 0x0000000100000000 # initialize rs2
maxu x11, x20, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 360)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0x100000001)
li x9, 0xfffffffffffffffe # initialize rs1
li x1, 0x0000000100000001 # initialize rs2
maxu x16, x9, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 368)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0x0)
li x6, 0x5bbc887763ae86f2 # initialize rs1
li x24, 0x0000000000000000 # initialize rs2
maxu x7, x6, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 376)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0x1)
li x22, 0x5bbc887763ae86f2 # initialize rs1
li x5, 0x0000000000000001 # initialize rs2
maxu x11, x22, x5 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 384)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0x2)
li x6, 0x5bbc887763ae86f2 # initialize rs1
li x2, 0x0000000000000002 # initialize rs2
maxu x12, x6, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 392)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0x8000000000000000)
li x17, 0x5bbc887763ae86f2 # initialize rs1
li x2, 0x8000000000000000 # initialize rs2
maxu x27, x17, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 400)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0x8000000000000001)
li x25, 0x5bbc887763ae86f2 # initialize rs1
li x29, 0x8000000000000001 # initialize rs2
maxu x30, x25, x29 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 408)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0x7fffffffffffffff)
li x26, 0x5bbc887763ae86f2 # initialize rs1
li x23, 0x7fffffffffffffff # initialize rs2
maxu x25, x26, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 416)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0x7ffffffffffffffe)
li x18, 0x5bbc887763ae86f2 # initialize rs1
li x3, 0x7ffffffffffffffe # initialize rs2
maxu x14, x18, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 424)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0xffffffffffffffff)
li x21, 0x5bbc887763ae86f2 # initialize rs1
li x14, 0xffffffffffffffff # initialize rs2
maxu x28, x21, x14 # perform operation
RVTEST_SIGUPD(x4, x0, x28, 432)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0xfffffffffffffffe)
li x31, 0x5bbc887763ae86f2 # initialize rs1
li x3, 0xfffffffffffffffe # initialize rs2
maxu x18, x31, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 440)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0x5bbc887763ae86f2)
li x8, 0x5bbc887763ae86f2 # initialize rs1
li x17, 0x5bbc887763ae86f2 # initialize rs2
maxu x24, x8, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 448)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0xaaaaaaaaaaaaaaaa)
li x20, 0x5bbc887763ae86f2 # initialize rs1
li x21, 0xaaaaaaaaaaaaaaaa # initialize rs2
maxu x19, x20, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 456)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0x5555555555555555)
li x8, 0x5bbc887763ae86f2 # initialize rs1
li x19, 0x5555555555555555 # initialize rs2
maxu x1, x8, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 464)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0xffffffff)
li x18, 0x5bbc887763ae86f2 # initialize rs1
li x12, 0x00000000ffffffff # initialize rs2
maxu x23, x18, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 472)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0xfffffffe)
li x5, 0x5bbc887763ae86f2 # initialize rs1
li x16, 0x00000000fffffffe # initialize rs2
maxu x3, x5, x16 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 480)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0x100000000)
li x19, 0x5bbc887763ae86f2 # initialize rs1
li x11, 0x0000000100000000 # initialize rs2
maxu x29, x19, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 488)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0x100000001)
li x1, 0x5bbc887763ae86f2 # initialize rs1
li x10, 0x0000000100000001 # initialize rs2
maxu x27, x1, x10 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 496)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0x0)
li x15, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x23, 0x0000000000000000 # initialize rs2
maxu x6, x15, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x6, 504)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0x1)
li x15, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x2, 0x0000000000000001 # initialize rs2
maxu x3, x15, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 512)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0x2)
li x15, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x7, 0x0000000000000002 # initialize rs2
maxu x2, x15, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 520)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0x8000000000000000)
li x28, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x16, 0x8000000000000000 # initialize rs2
maxu x1, x28, x16 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 528)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0x8000000000000001)
li x18, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x2, 0x8000000000000001 # initialize rs2
maxu x5, x18, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x5, 536)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0x7fffffffffffffff)
li x31, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x13, 0x7fffffffffffffff # initialize rs2
maxu x28, x31, x13 # perform operation
RVTEST_SIGUPD(x4, x0, x28, 544)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0x7ffffffffffffffe)
li x23, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x31, 0x7ffffffffffffffe # initialize rs2
maxu x14, x23, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 552)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0xffffffffffffffff)
li x20, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x11, 0xffffffffffffffff # initialize rs2
maxu x26, x20, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 560)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0xfffffffffffffffe)
li x14, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x29, 0xfffffffffffffffe # initialize rs2
maxu x11, x14, x29 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 568)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0x5bbc887763ae86f2)
li x26, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x19, 0x5bbc887763ae86f2 # initialize rs2
maxu x11, x26, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 576)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0xaaaaaaaaaaaaaaaa)
li x8, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x5, 0xaaaaaaaaaaaaaaaa # initialize rs2
maxu x12, x8, x5 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 584)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0x5555555555555555)
li x14, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x22, 0x5555555555555555 # initialize rs2
maxu x31, x14, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 592)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0xffffffff)
li x18, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x8, 0x00000000ffffffff # initialize rs2
maxu x24, x18, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 600)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0xfffffffe)
li x15, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x28, 0x00000000fffffffe # initialize rs2
maxu x21, x15, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 608)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0x100000000)
li x17, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x20, 0x0000000100000000 # initialize rs2
maxu x15, x17, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 616)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0x100000001)
li x18, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x22, 0x0000000100000001 # initialize rs2
maxu x7, x18, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 624)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0x0)
li x28, 0x5555555555555555 # initialize rs1
li x10, 0x0000000000000000 # initialize rs2
maxu x29, x28, x10 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 632)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0x1)
li x10, 0x5555555555555555 # initialize rs1
li x23, 0x0000000000000001 # initialize rs2
maxu x9, x10, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 640)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0x2)
li x31, 0x5555555555555555 # initialize rs1
li x18, 0x0000000000000002 # initialize rs2
maxu x5, x31, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x5, 648)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0x8000000000000000)
li x15, 0x5555555555555555 # initialize rs1
li x12, 0x8000000000000000 # initialize rs2
maxu x1, x15, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 656)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0x8000000000000001)
li x19, 0x5555555555555555 # initialize rs1
li x9, 0x8000000000000001 # initialize rs2
maxu x23, x19, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 664)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0x7fffffffffffffff)
li x8, 0x5555555555555555 # initialize rs1
li x14, 0x7fffffffffffffff # initialize rs2
maxu x19, x8, x14 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 672)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0x7ffffffffffffffe)
li x9, 0x5555555555555555 # initialize rs1
li x13, 0x7ffffffffffffffe # initialize rs2
maxu x16, x9, x13 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 680)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0xffffffffffffffff)
li x18, 0x5555555555555555 # initialize rs1
li x12, 0xffffffffffffffff # initialize rs2
maxu x25, x18, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 688)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0xfffffffffffffffe)
li x14, 0x5555555555555555 # initialize rs1
li x19, 0xfffffffffffffffe # initialize rs2
maxu x11, x14, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 696)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0x5bbc887763ae86f2)
li x22, 0x5555555555555555 # initialize rs1
li x20, 0x5bbc887763ae86f2 # initialize rs2
maxu x16, x22, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 704)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0xaaaaaaaaaaaaaaaa)
li x22, 0x5555555555555555 # initialize rs1
li x6, 0xaaaaaaaaaaaaaaaa # initialize rs2
maxu x8, x22, x6 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 712)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0x5555555555555555)
li x2, 0x5555555555555555 # initialize rs1
li x8, 0x5555555555555555 # initialize rs2
maxu x19, x2, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 720)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0xffffffff)
li x27, 0x5555555555555555 # initialize rs1
li x23, 0x00000000ffffffff # initialize rs2
maxu x11, x27, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 728)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0xfffffffe)
li x19, 0x5555555555555555 # initialize rs1
li x13, 0x00000000fffffffe # initialize rs2
maxu x17, x19, x13 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 736)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0x100000000)
li x1, 0x5555555555555555 # initialize rs1
li x28, 0x0000000100000000 # initialize rs2
maxu x24, x1, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 744)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0x100000001)
li x16, 0x5555555555555555 # initialize rs1
li x17, 0x0000000100000001 # initialize rs2
maxu x23, x16, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 752)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0x0)
li x12, 0x00000000ffffffff # initialize rs1
li x15, 0x0000000000000000 # initialize rs2
maxu x29, x12, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 760)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0x1)
li x16, 0x00000000ffffffff # initialize rs1
li x9, 0x0000000000000001 # initialize rs2
maxu x14, x16, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 768)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0x2)
li x6, 0x00000000ffffffff # initialize rs1
li x21, 0x0000000000000002 # initialize rs2
maxu x10, x6, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 776)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0x8000000000000000)
li x1, 0x00000000ffffffff # initialize rs1
li x12, 0x8000000000000000 # initialize rs2
maxu x3, x1, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 784)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0x8000000000000001)
li x28, 0x00000000ffffffff # initialize rs1
li x11, 0x8000000000000001 # initialize rs2
maxu x6, x28, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x6, 792)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0x7fffffffffffffff)
li x25, 0x00000000ffffffff # initialize rs1
li x26, 0x7fffffffffffffff # initialize rs2
maxu x7, x25, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 800)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0x7ffffffffffffffe)
li x20, 0x00000000ffffffff # initialize rs1
li x9, 0x7ffffffffffffffe # initialize rs2
maxu x24, x20, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 808)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0xffffffffffffffff)
li x26, 0x00000000ffffffff # initialize rs1
li x13, 0xffffffffffffffff # initialize rs2
maxu x20, x26, x13 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 816)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0xfffffffffffffffe)
li x27, 0x00000000ffffffff # initialize rs1
li x17, 0xfffffffffffffffe # initialize rs2
maxu x5, x27, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x5, 824)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0x5bbc887763ae86f2)
li x1, 0x00000000ffffffff # initialize rs1
li x28, 0x5bbc887763ae86f2 # initialize rs2
maxu x13, x1, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 832)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0xaaaaaaaaaaaaaaaa)
li x1, 0x00000000ffffffff # initialize rs1
li x22, 0xaaaaaaaaaaaaaaaa # initialize rs2
maxu x11, x1, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 840)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0x5555555555555555)
li x7, 0x00000000ffffffff # initialize rs1
li x3, 0x5555555555555555 # initialize rs2
maxu x17, x7, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 848)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0xffffffff)
li x1, 0x00000000ffffffff # initialize rs1
li x19, 0x00000000ffffffff # initialize rs2
maxu x23, x1, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 856)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0xfffffffe)
li x28, 0x00000000ffffffff # initialize rs1
li x20, 0x00000000fffffffe # initialize rs2
maxu x29, x28, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 864)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0x100000000)
li x25, 0x00000000ffffffff # initialize rs1
li x20, 0x0000000100000000 # initialize rs2
maxu x7, x25, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 872)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0x100000001)
li x9, 0x00000000ffffffff # initialize rs1
li x18, 0x0000000100000001 # initialize rs2
maxu x29, x9, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 880)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0x0)
li x25, 0x00000000fffffffe # initialize rs1
li x23, 0x0000000000000000 # initialize rs2
maxu x7, x25, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 888)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0x1)
li x22, 0x00000000fffffffe # initialize rs1
li x29, 0x0000000000000001 # initialize rs2
maxu x6, x22, x29 # perform operation
RVTEST_SIGUPD(x4, x0, x6, 896)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0x2)
li x31, 0x00000000fffffffe # initialize rs1
li x17, 0x0000000000000002 # initialize rs2
maxu x26, x31, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 904)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0x8000000000000000)
li x9, 0x00000000fffffffe # initialize rs1
li x12, 0x8000000000000000 # initialize rs2
maxu x11, x9, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 912)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0x8000000000000001)
li x13, 0x00000000fffffffe # initialize rs1
li x25, 0x8000000000000001 # initialize rs2
maxu x30, x13, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 920)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0x7fffffffffffffff)
li x18, 0x00000000fffffffe # initialize rs1
li x22, 0x7fffffffffffffff # initialize rs2
maxu x29, x18, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 928)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0x7ffffffffffffffe)
li x10, 0x00000000fffffffe # initialize rs1
li x26, 0x7ffffffffffffffe # initialize rs2
maxu x12, x10, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 936)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0xffffffffffffffff)
li x16, 0x00000000fffffffe # initialize rs1
li x5, 0xffffffffffffffff # initialize rs2
maxu x6, x16, x5 # perform operation
RVTEST_SIGUPD(x4, x0, x6, 944)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0xfffffffffffffffe)
li x18, 0x00000000fffffffe # initialize rs1
li x30, 0xfffffffffffffffe # initialize rs2
maxu x8, x18, x30 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 952)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0x5bbc887763ae86f2)
li x30, 0x00000000fffffffe # initialize rs1
li x2, 0x5bbc887763ae86f2 # initialize rs2
maxu x31, x30, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 960)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0xaaaaaaaaaaaaaaaa)
li x30, 0x00000000fffffffe # initialize rs1
li x28, 0xaaaaaaaaaaaaaaaa # initialize rs2
maxu x5, x30, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x5, 968)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0x5555555555555555)
li x24, 0x00000000fffffffe # initialize rs1
li x18, 0x5555555555555555 # initialize rs2
maxu x12, x24, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 976)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0xffffffff)
li x15, 0x00000000fffffffe # initialize rs1
li x7, 0x00000000ffffffff # initialize rs2
maxu x30, x15, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 984)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0xfffffffe)
li x2, 0x00000000fffffffe # initialize rs1
li x19, 0x00000000fffffffe # initialize rs2
maxu x9, x2, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 992)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0x100000000)
li x5, 0x00000000fffffffe # initialize rs1
li x22, 0x0000000100000000 # initialize rs2
maxu x27, x5, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 1000)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0x100000001)
li x17, 0x00000000fffffffe # initialize rs1
li x18, 0x0000000100000001 # initialize rs2
maxu x28, x17, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x28, 1008)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0x0)
li x24, 0x0000000100000000 # initialize rs1
li x18, 0x0000000000000000 # initialize rs2
maxu x19, x24, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 1016)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0x1)
li x21, 0x0000000100000000 # initialize rs1
li x23, 0x0000000000000001 # initialize rs2
maxu x3, x21, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 1024)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0x2)
li x21, 0x0000000100000000 # initialize rs1
li x12, 0x0000000000000002 # initialize rs2
maxu x25, x21, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 1032)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0x8000000000000000)
li x23, 0x0000000100000000 # initialize rs1
li x7, 0x8000000000000000 # initialize rs2
maxu x2, x23, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 1040)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0x8000000000000001)
li x28, 0x0000000100000000 # initialize rs1
li x9, 0x8000000000000001 # initialize rs2
maxu x16, x28, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 1048)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0x7fffffffffffffff)
li x23, 0x0000000100000000 # initialize rs1
li x26, 0x7fffffffffffffff # initialize rs2
maxu x5, x23, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x5, 1056)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0x7ffffffffffffffe)
li x25, 0x0000000100000000 # initialize rs1
li x7, 0x7ffffffffffffffe # initialize rs2
maxu x6, x25, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x6, 1064)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0xffffffffffffffff)
li x28, 0x0000000100000000 # initialize rs1
li x21, 0xffffffffffffffff # initialize rs2
maxu x12, x28, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 1072)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0xfffffffffffffffe)
li x15, 0x0000000100000000 # initialize rs1
li x3, 0xfffffffffffffffe # initialize rs2
maxu x19, x15, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 1080)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0x5bbc887763ae86f2)
li x25, 0x0000000100000000 # initialize rs1
li x8, 0x5bbc887763ae86f2 # initialize rs2
maxu x14, x25, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 1088)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0xaaaaaaaaaaaaaaaa)
li x7, 0x0000000100000000 # initialize rs1
li x20, 0xaaaaaaaaaaaaaaaa # initialize rs2
maxu x19, x7, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 1096)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0x5555555555555555)
li x7, 0x0000000100000000 # initialize rs1
li x24, 0x5555555555555555 # initialize rs2
maxu x29, x7, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 1104)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0xffffffff)
li x20, 0x0000000100000000 # initialize rs1
li x31, 0x00000000ffffffff # initialize rs2
maxu x19, x20, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 1112)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0xfffffffe)
li x25, 0x0000000100000000 # initialize rs1
li x14, 0x00000000fffffffe # initialize rs2
maxu x11, x25, x14 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 1120)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0x100000000)
li x26, 0x0000000100000000 # initialize rs1
li x25, 0x0000000100000000 # initialize rs2
maxu x13, x26, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 1128)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0x100000001)
li x26, 0x0000000100000000 # initialize rs1
li x2, 0x0000000100000001 # initialize rs2
maxu x13, x26, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 1136)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0x0)
li x24, 0x0000000100000001 # initialize rs1
li x8, 0x0000000000000000 # initialize rs2
maxu x14, x24, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 1144)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0x1)
li x26, 0x0000000100000001 # initialize rs1
li x10, 0x0000000000000001 # initialize rs2
maxu x20, x26, x10 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 1152)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0x2)
li x17, 0x0000000100000001 # initialize rs1
li x1, 0x0000000000000002 # initialize rs2
maxu x12, x17, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 1160)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0x8000000000000000)
li x18, 0x0000000100000001 # initialize rs1
li x20, 0x8000000000000000 # initialize rs2
maxu x31, x18, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 1168)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0x8000000000000001)
li x3, 0x0000000100000001 # initialize rs1
li x10, 0x8000000000000001 # initialize rs2
maxu x7, x3, x10 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 1176)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0x7fffffffffffffff)
li x1, 0x0000000100000001 # initialize rs1
li x23, 0x7fffffffffffffff # initialize rs2
maxu x8, x1, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 1184)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0x7ffffffffffffffe)
li x30, 0x0000000100000001 # initialize rs1
li x20, 0x7ffffffffffffffe # initialize rs2
maxu x27, x30, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 1192)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0xffffffffffffffff)
li x12, 0x0000000100000001 # initialize rs1
li x9, 0xffffffffffffffff # initialize rs2
maxu x16, x12, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 1200)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0xfffffffffffffffe)
li x25, 0x0000000100000001 # initialize rs1
li x13, 0xfffffffffffffffe # initialize rs2
maxu x23, x25, x13 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 1208)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0x5bbc887763ae86f2)
li x25, 0x0000000100000001 # initialize rs1
li x10, 0x5bbc887763ae86f2 # initialize rs2
maxu x3, x25, x10 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 1216)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0xaaaaaaaaaaaaaaaa)
li x11, 0x0000000100000001 # initialize rs1
li x25, 0xaaaaaaaaaaaaaaaa # initialize rs2
maxu x3, x11, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 1224)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0x5555555555555555)
li x14, 0x0000000100000001 # initialize rs1
li x29, 0x5555555555555555 # initialize rs2
maxu x5, x14, x29 # perform operation
RVTEST_SIGUPD(x4, x0, x5, 1232)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0xffffffff)
li x16, 0x0000000100000001 # initialize rs1
li x11, 0x00000000ffffffff # initialize rs2
maxu x30, x16, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 1240)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0xfffffffe)
li x24, 0x0000000100000001 # initialize rs1
li x27, 0x00000000fffffffe # initialize rs2
maxu x8, x24, x27 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 1248)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0x100000000)
li x1, 0x0000000100000001 # initialize rs1
li x7, 0x0000000100000000 # initialize rs2
maxu x30, x1, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 1256)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0x100000001)
li x7, 0x0000000100000001 # initialize rs1
li x11, 0x0000000100000001 # initialize rs2
maxu x30, x7, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 1264)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x0)
li x0, 0x689159df5cf739a1 # initialize rs1
li x0, 0x940cf234f08ebfa7 # initialize rs2
maxu x3, x0, x0 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 1272)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x1)
li x1, 0x4315a17517f57519 # initialize rs1
li x1, 0x9aed6ba0b2b47e2b # initialize rs2
maxu x22, x1, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 1280)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x2)
li x2, 0x772a598ea63d0785 # initialize rs1
li x2, 0xe1d65cc459a9f79f # initialize rs2
maxu x15, x2, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 1288)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x3)
li x3, 0x4eb2dc449e3e44f4 # initialize rs1
li x3, 0x0393a13df1c15eb8 # initialize rs2
maxu x17, x3, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 1296)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x4)
mv x5, x4 # switch signature pointer register to avoid conflict with test
li x4, 0x2921fb12965ec7f5 # initialize rs1
li x4, 0x32179004bca56962 # initialize rs2
maxu x16, x4, x4 # perform operation
RVTEST_SIGUPD(x5, x0, x16, 1304)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x5)
mv x6, x5 # switch signature pointer register to avoid conflict with test
li x5, 0xd4c234e738360d7d # initialize rs1
li x5, 0xa3eee67155ce490a # initialize rs2
maxu x21, x5, x5 # perform operation
RVTEST_SIGUPD(x6, x0, x21, 1312)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x6)
mv x7, x6 # switch signature pointer register to avoid conflict with test
li x6, 0x7c4ee0238dfb0cc4 # initialize rs1
li x6, 0x5b6858684061bd37 # initialize rs2
maxu x8, x6, x6 # perform operation
RVTEST_SIGUPD(x7, x0, x8, 1320)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x7)
mv x4, x7 # switch signature pointer register to avoid conflict with test
li x7, 0x2ae188bc7103f36e # initialize rs1
li x7, 0x4199e371fe1f07d3 # initialize rs2
maxu x26, x7, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 1328)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x8)
li x8, 0xbb6c6dc4598c3363 # initialize rs1
li x8, 0x881919a6dbaea4b7 # initialize rs2
maxu x12, x8, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 1336)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x9)
li x9, 0x9841ce40693c224b # initialize rs1
li x9, 0x17c3f8f996c42623 # initialize rs2
maxu x22, x9, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 1344)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x10)
li x10, 0x27c92f72ef6dc058 # initialize rs1
li x10, 0x5e4c176466118503 # initialize rs2
maxu x2, x10, x10 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 1352)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x11)
li x11, 0xdfc2243b81871860 # initialize rs1
li x11, 0x5ef3e86c50916b99 # initialize rs2
maxu x7, x11, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 1360)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x12)
li x12, 0xd9d5b1963674e229 # initialize rs1
li x12, 0x118dde24bbc4fb20 # initialize rs2
maxu x28, x12, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x28, 1368)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x13)
li x13, 0x549d627b961bb2df # initialize rs1
li x13, 0x840a9c70d06a84a7 # initialize rs2
maxu x27, x13, x13 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 1376)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x14)
li x14, 0x2f89c9aa0327c1d5 # initialize rs1
li x14, 0x96508b1a25f1fa5e # initialize rs2
maxu x20, x14, x14 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 1384)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x15)
li x15, 0x76c29b0c9df89844 # initialize rs1
li x15, 0x863ac1adeb8dbfbc # initialize rs2
maxu x14, x15, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 1392)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x16)
li x16, 0xf4768838cb6bb1bd # initialize rs1
li x16, 0xec9b71e2d575e1f9 # initialize rs2
maxu x22, x16, x16 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 1400)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x17)
li x17, 0xab318786dc00aae5 # initialize rs1
li x17, 0x53ca7842e5104c35 # initialize rs2
maxu x23, x17, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 1408)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x18)
li x18, 0x0016fa0472b7c2af # initialize rs1
li x18, 0x2557360781593d67 # initialize rs2
maxu x27, x18, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 1416)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x19)
li x19, 0x71c6d31dff7275d3 # initialize rs1
li x19, 0xca015260722010f4 # initialize rs2
maxu x10, x19, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 1424)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x20)
li x20, 0x839c0f856d49221b # initialize rs1
li x20, 0x10b863e35318dc10 # initialize rs2
maxu x22, x20, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 1432)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x21)
li x21, 0xc03f88876e3735ae # initialize rs1
li x21, 0xd531b2be2d6329a8 # initialize rs2
maxu x23, x21, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 1440)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x22)
li x22, 0x717235de3cb3bd91 # initialize rs1
li x22, 0xb3018ced960a8a85 # initialize rs2
maxu x25, x22, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 1448)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x23)
li x23, 0x84eab85256ef7855 # initialize rs1
li x23, 0x17d0f063141ab87d # initialize rs2
maxu x9, x23, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 1456)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x24)
li x24, 0x7715aa9c2f75f3b5 # initialize rs1
li x24, 0x20444e3e17b45e66 # initialize rs2
maxu x7, x24, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 1464)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x25)
li x25, 0x03dac3563fb95f3c # initialize rs1
li x25, 0xf34c04cd95ca653d # initialize rs2
maxu x13, x25, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 1472)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x26)
li x26, 0x1986daa67c1ca7de # initialize rs1
li x26, 0xc3003fea400fcf06 # initialize rs2
maxu x21, x26, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 1480)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x27)
li x27, 0x4fba971002e72217 # initialize rs1
li x27, 0x56c56ba32b9534b5 # initialize rs2
maxu x25, x27, x27 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 1488)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x28)
li x28, 0x2614643a6fe723f7 # initialize rs1
li x28, 0x8370189f3317dd61 # initialize rs2
maxu x26, x28, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 1496)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x29)
li x29, 0x027e7ab35322df2f # initialize rs1
li x29, 0xc2958d5cd337ef1d # initialize rs2
maxu x9, x29, x29 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 1504)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x30)
li x30, 0x1690884d74e05768 # initialize rs1
li x30, 0x8e9fea4b83c97a8d # initialize rs2
maxu x14, x30, x30 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 1512)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x31)
li x31, 0xcbf4cb7da31088ce # initialize rs1
li x31, 0x32dd97714356e674 # initialize rs2
maxu x21, x31, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 1520)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x0)
li x0, 0xca0ae989cf4665f8 # initialize rs1
li x30, 0x00ad086071aa59d3 # initialize rs2
maxu x0, x0, x30 # perform operation
RVTEST_SIGUPD(x4, x0, x0, 1528)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x1)
li x1, 0x6927a51d5fb9a661 # initialize rs1
li x1, 0x96ed6b987e4c129c # initialize rs2
maxu x1, x1, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 1536)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x2)
li x2, 0xa85736e0595cf8a4 # initialize rs1
li x8, 0xbb61f2914db18760 # initialize rs2
maxu x2, x2, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 1544)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x3)
li x3, 0x92b845a3407dfc2f # initialize rs1
li x9, 0x753680e4f0032f44 # initialize rs2
maxu x3, x3, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 1552)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x4)
mv x5, x4 # switch signature pointer register to avoid conflict with test
li x4, 0x6ec90567d12bf837 # initialize rs1
li x17, 0x28c71882a3f4d0e7 # initialize rs2
maxu x4, x4, x17 # perform operation
RVTEST_SIGUPD(x5, x0, x4, 1560)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x5)
mv x6, x5 # switch signature pointer register to avoid conflict with test
li x5, 0xcc1c5616ac5faeec # initialize rs1
li x19, 0x8c3507b1b6605945 # initialize rs2
maxu x5, x5, x19 # perform operation
RVTEST_SIGUPD(x6, x0, x5, 1568)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x6)
mv x7, x6 # switch signature pointer register to avoid conflict with test
li x6, 0x3b54a24ac70ad392 # initialize rs1
li x17, 0x68ddc4f9ef9df1d6 # initialize rs2
maxu x6, x6, x17 # perform operation
RVTEST_SIGUPD(x7, x0, x6, 1576)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x7)
mv x4, x7 # switch signature pointer register to avoid conflict with test
li x7, 0xf861fb8d9e5a0124 # initialize rs1
li x31, 0x9dc500dfcd7882d7 # initialize rs2
maxu x7, x7, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 1584)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x8)
li x8, 0xd86c48a45a9e8666 # initialize rs1
li x16, 0xbdacf33232d14e1f # initialize rs2
maxu x8, x8, x16 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 1592)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x9)
li x9, 0xf97452f55aceffa4 # initialize rs1
li x12, 0x158733211fd0de91 # initialize rs2
maxu x9, x9, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 1600)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x10)
li x10, 0x44060230e590cf91 # initialize rs1
li x5, 0xe0158bc6ecb2fa4f # initialize rs2
maxu x10, x10, x5 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 1608)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x11)
li x11, 0x7b8542f288f301c2 # initialize rs1
li x31, 0xac20f2c1c943c2b3 # initialize rs2
maxu x11, x11, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 1616)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x12)
li x12, 0xa2b70adf1ce839f9 # initialize rs1
li x6, 0x3504a75c1206ebd7 # initialize rs2
maxu x12, x12, x6 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 1624)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x13)
li x13, 0x2effb6216f95e858 # initialize rs1
li x11, 0xc6558a9683d8af4a # initialize rs2
maxu x13, x13, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 1632)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x14)
li x14, 0x49acefaff9e86eb5 # initialize rs1
li x31, 0x387771f8ee9ad456 # initialize rs2
maxu x14, x14, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 1640)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x15)
li x15, 0xe414839fbadf5669 # initialize rs1
li x13, 0x4fcc72fd9ac8fa37 # initialize rs2
maxu x15, x15, x13 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 1648)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x16)
li x16, 0xd1db6a23c2ccbcb0 # initialize rs1
li x5, 0x91f54158f6ed954b # initialize rs2
maxu x16, x16, x5 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 1656)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x17)
li x17, 0x04680eb6df565fe6 # initialize rs1
li x18, 0x0a53c6f36bde9360 # initialize rs2
maxu x17, x17, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 1664)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x18)
li x18, 0x959fc189cc08e117 # initialize rs1
li x24, 0xf86e9c7a8dac5b8f # initialize rs2
maxu x18, x18, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 1672)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x19)
li x19, 0x8f6774ec1c43a32b # initialize rs1
li x21, 0xed9b93b32d956693 # initialize rs2
maxu x19, x19, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 1680)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x20)
li x20, 0xe8252f9ae516799d # initialize rs1
li x3, 0xe19bcc233816a27c # initialize rs2
maxu x20, x20, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 1688)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x21)
li x21, 0xbbad6235a8d8f0f3 # initialize rs1
li x19, 0x91bc6ed6412e65ea # initialize rs2
maxu x21, x21, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 1696)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x22)
li x22, 0xde5fd61911fc2a4c # initialize rs1
li x21, 0xa5b27d4d2dfb9b13 # initialize rs2
maxu x22, x22, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 1704)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x23)
li x23, 0xd8fe06a32f9ee9bf # initialize rs1
li x7, 0x8f6ec47c0c46fc67 # initialize rs2
maxu x23, x23, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 1712)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x24)
li x24, 0x6ea3ca6c8fb25e5e # initialize rs1
li x30, 0x90446dbfe54962c9 # initialize rs2
maxu x24, x24, x30 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 1720)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x25)
li x25, 0x2bf3fc8861b00811 # initialize rs1
li x12, 0x0ea266ab9b9b7380 # initialize rs2
maxu x25, x25, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 1728)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x26)
li x26, 0x090b27788b9d3c95 # initialize rs1
li x20, 0x13255b840cb7e615 # initialize rs2
maxu x26, x26, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 1736)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x27)
li x27, 0x744d87295d34bd9b # initialize rs1
li x22, 0x7b17111eb5696620 # initialize rs2
maxu x27, x27, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 1744)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x28)
li x28, 0xc2fd70b3bdd0da84 # initialize rs1
li x11, 0x1d65fd00222fff37 # initialize rs2
maxu x28, x28, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x28, 1752)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x29)
li x29, 0x81fd193c6b20dacc # initialize rs1
li x20, 0xcb2e89181dabb094 # initialize rs2
maxu x29, x29, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 1760)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x30)
li x30, 0x90ac1ae4d54128b9 # initialize rs1
li x20, 0x2608621693a89820 # initialize rs2
maxu x30, x30, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 1768)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x31)
li x31, 0xed79c5a416b11d35 # initialize rs1
li x3, 0xf904e67f98afa08b # initialize rs2
maxu x31, x31, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 1776)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x0)
li x16, 0x6d15c0420dd1e20e # initialize rs1
li x0, 0x1eb58e071187ad3d # initialize rs2
maxu x0, x16, x0 # perform operation
RVTEST_SIGUPD(x4, x0, x0, 1784)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x1)
li x8, 0x1e57fba955e28ee1 # initialize rs1
li x1, 0xb1eba91181e648b5 # initialize rs2
maxu x1, x8, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 1792)
addi x4, x4, 1800 # increment signature pointer and reset offset

# Testcase cmp_rd_rs2 (Test rd = rs2 = x2)
li x7, 0x3e986b488bb25604 # initialize rs1
li x2, 0x51a7f70ede516829 # initialize rs2
maxu x2, x7, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 0)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x3)
li x27, 0x0c8450a2983d5385 # initialize rs1
li x3, 0x340fe6de45640529 # initialize rs2
maxu x3, x27, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 8)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x4)
mv x5, x4 # switch signature pointer register to avoid conflict with test
li x12, 0xd781bd0dae0af30f # initialize rs1
li x4, 0xbc818d5fa6cad6aa # initialize rs2
maxu x4, x12, x4 # perform operation
RVTEST_SIGUPD(x5, x0, x4, 16)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x5)
mv x7, x5 # switch signature pointer register to avoid conflict with test
li x6, 0xd09ca6021617933c # initialize rs1
li x5, 0xc1233c3ff872e3dd # initialize rs2
maxu x5, x6, x5 # perform operation
RVTEST_SIGUPD(x7, x0, x5, 24)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x6)
li x5, 0x401a0f384f82a37d # initialize rs1
li x6, 0x4209b18744798cf6 # initialize rs2
maxu x6, x5, x6 # perform operation
RVTEST_SIGUPD(x7, x0, x6, 32)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x7)
mv x4, x7 # switch signature pointer register to avoid conflict with test
li x16, 0x4deabf50ab613bb2 # initialize rs1
li x7, 0xb4d530055f4252e3 # initialize rs2
maxu x7, x16, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 40)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x8)
li x7, 0x7c60f9aac4de0ff4 # initialize rs1
li x8, 0xfb259d2e22a83093 # initialize rs2
maxu x8, x7, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 48)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x9)
li x21, 0x99eade9b8991d60b # initialize rs1
li x9, 0xd5a13edada91eced # initialize rs2
maxu x9, x21, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 56)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x10)
li x8, 0x6c5930764ad2b8ec # initialize rs1
li x10, 0x63d0885a58c1d8a4 # initialize rs2
maxu x10, x8, x10 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 64)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x11)
li x24, 0x02599a7d8341db50 # initialize rs1
li x11, 0xe746875977a1a40c # initialize rs2
maxu x11, x24, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 72)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x12)
li x31, 0x75419eaa937eb80c # initialize rs1
li x12, 0x499abcf31c7f0eaf # initialize rs2
maxu x12, x31, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 80)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x13)
li x14, 0x89939a99f5579764 # initialize rs1
li x13, 0xc62df19d02527973 # initialize rs2
maxu x13, x14, x13 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 88)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x14)
li x6, 0x6f4e5cbfcfbd2eca # initialize rs1
li x14, 0xecd8b1b87e2545cf # initialize rs2
maxu x14, x6, x14 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 96)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x15)
li x24, 0x956da143f98b3828 # initialize rs1
li x15, 0x93eb74d8154151ab # initialize rs2
maxu x15, x24, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 104)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x16)
li x21, 0xd3e90fd29dde4158 # initialize rs1
li x16, 0x15f2ee8b7e8bb96a # initialize rs2
maxu x16, x21, x16 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 112)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x17)
li x14, 0x0606b396d497a5d9 # initialize rs1
li x17, 0x47924b6c2ca0098e # initialize rs2
maxu x17, x14, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 120)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x18)
li x16, 0xc85e65c43a14a33f # initialize rs1
li x18, 0xcd5db7a3b73adaca # initialize rs2
maxu x18, x16, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 128)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x19)
li x5, 0x1293e48ed38d0036 # initialize rs1
li x19, 0xfab2ff430ce2f442 # initialize rs2
maxu x19, x5, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 136)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x20)
li x20, 0x4896884a79736868 # initialize rs1
li x20, 0x314f6e1801645ab6 # initialize rs2
maxu x20, x20, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 144)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x21)
li x5, 0x0cacbb7d27feb043 # initialize rs1
li x21, 0xb5d6aca23b890668 # initialize rs2
maxu x21, x5, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 152)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x22)
li x18, 0xe44b9253ad969d23 # initialize rs1
li x22, 0xb3a815dbedd5e172 # initialize rs2
maxu x22, x18, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 160)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x23)
li x10, 0xa5d85b673cc64b7a # initialize rs1
li x23, 0x80b478db33673ff4 # initialize rs2
maxu x23, x10, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 168)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x24)
li x3, 0x845acf2836e13a8d # initialize rs1
li x24, 0x8114016b0d4e04bd # initialize rs2
maxu x24, x3, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 176)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x25)
li x16, 0xb960d2fe6e2824b8 # initialize rs1
li x25, 0x0c0a3e49b36027f2 # initialize rs2
maxu x25, x16, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 184)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x26)
li x17, 0x1df6c479597a164a # initialize rs1
li x26, 0x8d3ed6e3688e45eb # initialize rs2
maxu x26, x17, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 192)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x27)
li x27, 0xe24d3259d5bdc04d # initialize rs1
li x27, 0x7fa65cdab019a6e1 # initialize rs2
maxu x27, x27, x27 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 200)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x28)
li x23, 0x07ba83e9d687be43 # initialize rs1
li x28, 0x86b2776c99fb61b3 # initialize rs2
maxu x28, x23, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x28, 208)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x29)
li x3, 0xbff89750899a3f7c # initialize rs1
li x29, 0xca2b5e8bacae9cf2 # initialize rs2
maxu x29, x3, x29 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 216)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x30)
li x3, 0x595dd6f06133e107 # initialize rs1
li x30, 0x5c8844ffb22c82b6 # initialize rs2
maxu x30, x3, x30 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 224)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x31)
li x5, 0x21708579b7cc5094 # initialize rs1
li x31, 0xdf910db418a8caf7 # initialize rs2
maxu x31, x5, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 232)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x0)
li x0, 0x937816bfac9e3de1 # initialize rs1
li x0, 0xaf93ade1149438bd # initialize rs2
maxu x0, x0, x0 # perform operation
RVTEST_SIGUPD(x4, x0, x0, 240)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x1)
li x1, 0x812b71b94e0229ad # initialize rs1
li x1, 0x5f40f8845fce95c5 # initialize rs2
maxu x1, x1, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 248)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x2)
li x2, 0xd3b36d8b3ccf0e31 # initialize rs1
li x2, 0xe6c8df49b3b99345 # initialize rs2
maxu x2, x2, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 256)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x3)
li x3, 0x8b80539d16ba6b1d # initialize rs1
li x3, 0x0cce3f81d2dd7b1f # initialize rs2
maxu x3, x3, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 264)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x4)
mv x5, x4 # switch signature pointer register to avoid conflict with test
li x4, 0x05fe29bd6b8e2677 # initialize rs1
li x4, 0x3023175887b15fa8 # initialize rs2
maxu x4, x4, x4 # perform operation
RVTEST_SIGUPD(x5, x0, x4, 272)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x5)
mv x6, x5 # switch signature pointer register to avoid conflict with test
li x5, 0xaa4132008536bc2b # initialize rs1
li x5, 0x26866c1ebe94545f # initialize rs2
maxu x5, x5, x5 # perform operation
RVTEST_SIGUPD(x6, x0, x5, 280)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x6)
mv x7, x6 # switch signature pointer register to avoid conflict with test
li x6, 0x2656195a2114d4a7 # initialize rs1
li x6, 0xce87a82f446992f3 # initialize rs2
maxu x6, x6, x6 # perform operation
RVTEST_SIGUPD(x7, x0, x6, 288)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x7)
mv x4, x7 # switch signature pointer register to avoid conflict with test
li x7, 0xba99023bfc73dea0 # initialize rs1
li x7, 0x8565e11546ddfab1 # initialize rs2
maxu x7, x7, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 296)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x8)
li x8, 0xddeeb5214b9e08ea # initialize rs1
li x8, 0xb30229fd0b006a55 # initialize rs2
maxu x8, x8, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 304)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x9)
li x9, 0x26c388758b2d64b4 # initialize rs1
li x9, 0xd0e8c86cd8ebd21b # initialize rs2
maxu x9, x9, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 312)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x10)
li x10, 0x625f9a8301253c0b # initialize rs1
li x10, 0xf115ee71ab3dd2d5 # initialize rs2
maxu x10, x10, x10 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 320)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x11)
li x11, 0x47b67eca51c267b9 # initialize rs1
li x11, 0xcee34b8893b5bab1 # initialize rs2
maxu x11, x11, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 328)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x12)
li x12, 0xc6ed85f3bc86f164 # initialize rs1
li x12, 0xe0e74372257079a0 # initialize rs2
maxu x12, x12, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 336)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x13)
li x13, 0xe09e1e98be273f31 # initialize rs1
li x13, 0xcc9babf0552c7fa6 # initialize rs2
maxu x13, x13, x13 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 344)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x14)
li x14, 0xada8b6554517e5af # initialize rs1
li x14, 0x14ac383de2addd57 # initialize rs2
maxu x14, x14, x14 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 352)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x15)
li x15, 0x46a8cea07b28d39f # initialize rs1
li x15, 0x082f9aec1ffcce87 # initialize rs2
maxu x15, x15, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 360)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x16)
li x16, 0x084b24bc357dd05e # initialize rs1
li x16, 0x41c6092a04c17a95 # initialize rs2
maxu x16, x16, x16 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 368)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x17)
li x17, 0x08e4d3f26ff5b61b # initialize rs1
li x17, 0x540971f78e35d160 # initialize rs2
maxu x17, x17, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 376)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x18)
li x18, 0x1be6342afab2655b # initialize rs1
li x18, 0xf3f8d7b91c92711d # initialize rs2
maxu x18, x18, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 384)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x19)
li x19, 0x2ecab181d9305337 # initialize rs1
li x19, 0x3ed40fd5b501f477 # initialize rs2
maxu x19, x19, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 392)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x20)
li x20, 0x5a1878e7ca2a6ae6 # initialize rs1
li x20, 0x7a3d1df894291165 # initialize rs2
maxu x20, x20, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 400)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x21)
li x21, 0x2dec84427b370ddc # initialize rs1
li x21, 0xb90cf5e17bac7706 # initialize rs2
maxu x21, x21, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 408)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x22)
li x22, 0x0a29135057c783f5 # initialize rs1
li x22, 0xca1a4bade0972519 # initialize rs2
maxu x22, x22, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 416)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x23)
li x23, 0x154dbd76ead810cd # initialize rs1
li x23, 0xea6bbdec89973fd5 # initialize rs2
maxu x23, x23, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 424)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x24)
li x24, 0x9ec115ae7528aa24 # initialize rs1
li x24, 0x46a757c1829296cc # initialize rs2
maxu x24, x24, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 432)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x25)
li x25, 0x86d5e2bb5e7c0a19 # initialize rs1
li x25, 0xa7029eb387e6a4c7 # initialize rs2
maxu x25, x25, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 440)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x26)
li x26, 0x8ea6fda81734b57c # initialize rs1
li x26, 0xfb091524ead0c157 # initialize rs2
maxu x26, x26, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 448)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x27)
li x27, 0x70676a0cfbb625a7 # initialize rs1
li x27, 0x4bf78e2d7bb143c3 # initialize rs2
maxu x27, x27, x27 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 456)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x28)
li x28, 0x62dd521bc5c318f0 # initialize rs1
li x28, 0xf90e43e8d48a6ccd # initialize rs2
maxu x28, x28, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x28, 464)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x29)
li x29, 0x057f793dd822fa27 # initialize rs1
li x29, 0xf59986094c7ef0dc # initialize rs2
maxu x29, x29, x29 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 472)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x30)
li x30, 0x01035c231abf0230 # initialize rs1
li x30, 0x649c8a39ce0381f0 # initialize rs2
maxu x30, x30, x30 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 480)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x31)
li x31, 0xba4913fd179c9717 # initialize rs1
li x31, 0xb774c4f85978dcfe # initialize rs2
maxu x31, x31, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 488)

# Testcase cp_gpr/fpr_hazard nohaz test
add x7, x9, x28 # perform first operation
maxu x21, x22, x31 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard nohaz test
add x8, x31, x28 # perform first operation
maxu x13, x12, x2 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard nohaz test
add x15, x29, x2 # perform first operation
maxu x20, x28, x9 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard raw test
add x24, x14, x1 # perform first operation
maxu x25, x24, x28 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard raw test
add x19, x1, x21 # perform first operation
maxu x5, x20, x19 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard raw test
add x30, x27, x21 # perform first operation
maxu x2, x1, x13 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard waw test
add x12, x19, x18 # perform first operation
maxu x12, x31, x9 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard waw test
add x11, x30, x29 # perform first operation
maxu x11, x31, x22 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard waw test
add x28, x6, x13 # perform first operation
maxu x28, x7, x31 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard war test
add x20, x15, x11 # perform first operation
maxu x15, x7, x6 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard war test
add x11, x27, x21 # perform first operation
maxu x21, x29, x1 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard war test
add x13, x18, x31 # perform first operation
maxu x11, x1, x28 # perform second (triggering) operation

#.EQU SIGSIZE,4096


// ******************
// Tests from: WALLY-COV-minu.S
// ******************


# initialize signature pointer
la x4, begin_signature

    
# Testcase cp_rs1 (Test source rs1 = x0)
li x0, 0xfef30bc948a4bbbe # initialize rs1
li x7, 0x37a91d792c9f8bb3 # initialize rs2
minu x8, x0, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 0)

# Testcase cp_rs1 (Test source rs1 = x1)
li x1, 0xd3a2d6434b8e69af # initialize rs1
li x11, 0xfa445412f7e4ed35 # initialize rs2
minu x31, x1, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 8)

# Testcase cp_rs1 (Test source rs1 = x2)
li x2, 0x32f6e39572bf8406 # initialize rs1
li x15, 0x6bcfeec49838cd34 # initialize rs2
minu x30, x2, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 16)

# Testcase cp_rs1 (Test source rs1 = x3)
li x3, 0x232b259be5648dd7 # initialize rs1
li x1, 0x2f93c96ea39d812c # initialize rs2
minu x24, x3, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 24)

# Testcase cp_rs1 (Test source rs1 = x4)
mv x5, x4 # switch signature pointer register to avoid conflict with test
li x4, 0xd18e71b476d5aebb # initialize rs1
li x2, 0x62bbcf7ec9c55dc7 # initialize rs2
minu x17, x4, x2 # perform operation
RVTEST_SIGUPD(x5, x0, x17, 32)

# Testcase cp_rs1 (Test source rs1 = x5)
mv x6, x5 # switch signature pointer register to avoid conflict with test
li x5, 0x56161d0b2c085910 # initialize rs1
li x1, 0x16bff8c20feb7608 # initialize rs2
minu x30, x5, x1 # perform operation
RVTEST_SIGUPD(x6, x0, x30, 40)

# Testcase cp_rs1 (Test source rs1 = x6)
mv x7, x6 # switch signature pointer register to avoid conflict with test
li x6, 0x3f61ea56ade5263d # initialize rs1
li x1, 0xe4391d0d7f404851 # initialize rs2
minu x24, x6, x1 # perform operation
RVTEST_SIGUPD(x7, x0, x24, 48)

# Testcase cp_rs1 (Test source rs1 = x7)
mv x4, x7 # switch signature pointer register to avoid conflict with test
li x7, 0x420ef8cc4fd40b6a # initialize rs1
li x26, 0x444c9e51909658cc # initialize rs2
minu x1, x7, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 56)

# Testcase cp_rs1 (Test source rs1 = x8)
li x8, 0x3f70382f32cffd46 # initialize rs1
li x26, 0x576805690d9a90a5 # initialize rs2
minu x9, x8, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 64)

# Testcase cp_rs1 (Test source rs1 = x9)
li x9, 0x6a7e60600eee711a # initialize rs1
li x27, 0x94759e5ef1caa946 # initialize rs2
minu x22, x9, x27 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 72)

# Testcase cp_rs1 (Test source rs1 = x10)
li x10, 0x74979592090ff447 # initialize rs1
li x16, 0x2c2f9927eb81ed62 # initialize rs2
minu x7, x10, x16 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 80)

# Testcase cp_rs1 (Test source rs1 = x11)
li x11, 0x4a253dfd0d50795d # initialize rs1
li x12, 0xa532966aefda2cbf # initialize rs2
minu x21, x11, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 88)

# Testcase cp_rs1 (Test source rs1 = x12)
li x12, 0x5bd62ddacf000e69 # initialize rs1
li x23, 0x783fdd9d3453e8a3 # initialize rs2
minu x15, x12, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 96)

# Testcase cp_rs1 (Test source rs1 = x13)
li x13, 0x4e74105e499bbda5 # initialize rs1
li x21, 0xfa79eafe9d7c0186 # initialize rs2
minu x17, x13, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 104)

# Testcase cp_rs1 (Test source rs1 = x14)
li x14, 0x7c58e3e46395a482 # initialize rs1
li x30, 0x463619255ffb367a # initialize rs2
minu x1, x14, x30 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 112)

# Testcase cp_rs1 (Test source rs1 = x15)
li x15, 0x4976a9cadacb5f5b # initialize rs1
li x6, 0xfffe3476b7c22299 # initialize rs2
minu x11, x15, x6 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 120)

# Testcase cp_rs1 (Test source rs1 = x16)
li x16, 0x0178249fddb6f8ce # initialize rs1
li x22, 0x0064119413168b04 # initialize rs2
minu x13, x16, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 128)

# Testcase cp_rs1 (Test source rs1 = x17)
li x17, 0xe1cb1b79e0363dfa # initialize rs1
li x1, 0xc7f5811b5450ca5c # initialize rs2
minu x24, x17, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 136)

# Testcase cp_rs1 (Test source rs1 = x18)
li x18, 0xf90400ad0c6c6473 # initialize rs1
li x30, 0xa01857b82b9d7665 # initialize rs2
minu x11, x18, x30 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 144)

# Testcase cp_rs1 (Test source rs1 = x19)
li x19, 0x6c7c2a79068e004b # initialize rs1
li x13, 0x8583ca24757ebed4 # initialize rs2
minu x18, x19, x13 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 152)

# Testcase cp_rs1 (Test source rs1 = x20)
li x20, 0xf12f46ddbdba5da6 # initialize rs1
li x1, 0xd3a7634d5b418ba7 # initialize rs2
minu x17, x20, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 160)

# Testcase cp_rs1 (Test source rs1 = x21)
li x21, 0xded2c4aca4e4e6d9 # initialize rs1
li x5, 0xdfecf88e950c8df6 # initialize rs2
minu x23, x21, x5 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 168)

# Testcase cp_rs1 (Test source rs1 = x22)
li x22, 0x5a4a3817d9a6c10f # initialize rs1
li x25, 0x3b1c544b9e3a9bfc # initialize rs2
minu x29, x22, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 176)

# Testcase cp_rs1 (Test source rs1 = x23)
li x23, 0xee6e92e0215a3b68 # initialize rs1
li x6, 0x0686011c709f6454 # initialize rs2
minu x20, x23, x6 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 184)

# Testcase cp_rs1 (Test source rs1 = x24)
li x24, 0x91fcf9f885adbf1e # initialize rs1
li x9, 0xcb1e2eb6c391af26 # initialize rs2
minu x8, x24, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 192)

# Testcase cp_rs1 (Test source rs1 = x25)
li x25, 0xfedb468842db2bc2 # initialize rs1
li x31, 0xe555254fda919912 # initialize rs2
minu x12, x25, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 200)

# Testcase cp_rs1 (Test source rs1 = x26)
li x26, 0x363ca279cbe39ea8 # initialize rs1
li x6, 0x0d36612af96e2d36 # initialize rs2
minu x16, x26, x6 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 208)

# Testcase cp_rs1 (Test source rs1 = x27)
li x27, 0x402522f7c89df35f # initialize rs1
li x16, 0x11227d431a76130c # initialize rs2
minu x11, x27, x16 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 216)

# Testcase cp_rs1 (Test source rs1 = x28)
li x28, 0x70af40882852c477 # initialize rs1
li x20, 0x7b45bdae46988636 # initialize rs2
minu x18, x28, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 224)

# Testcase cp_rs1 (Test source rs1 = x29)
li x29, 0x9088ad47edb09b5f # initialize rs1
li x8, 0xe177309d7b386fed # initialize rs2
minu x9, x29, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 232)

# Testcase cp_rs1 (Test source rs1 = x30)
li x30, 0x771cc248f8817cdd # initialize rs1
li x31, 0x9a931475eb6045c5 # initialize rs2
minu x8, x30, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 240)

# Testcase cp_rs1 (Test source rs1 = x31)
li x31, 0xfaccb96466801cd1 # initialize rs1
li x27, 0x6b1481ebbee268c6 # initialize rs2
minu x5, x31, x27 # perform operation
RVTEST_SIGUPD(x4, x0, x5, 248)

# Testcase cp_rs2 (Test source rs2 = x0)
li x17, 0x9122a3e262df1f84 # initialize rs1
li x0, 0x8ea6fa88862b78e4 # initialize rs2
minu x7, x17, x0 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 256)

# Testcase cp_rs2 (Test source rs2 = x1)
li x26, 0x43b8498b2c435bc4 # initialize rs1
li x1, 0x330aaf4b31b00207 # initialize rs2
minu x21, x26, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 264)

# Testcase cp_rs2 (Test source rs2 = x2)
li x30, 0xe16ae0c9226faf54 # initialize rs1
li x2, 0x4832f3b5c804cfce # initialize rs2
minu x26, x30, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 272)

# Testcase cp_rs2 (Test source rs2 = x3)
li x21, 0x5f4dfeb2f924e658 # initialize rs1
li x3, 0xd326d1166792393d # initialize rs2
minu x10, x21, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 280)

# Testcase cp_rs2 (Test source rs2 = x4)
mv x5, x4 # switch signature pointer register to avoid conflict with test
li x31, 0x8ddb7ffb723dd1fe # initialize rs1
li x4, 0x00a4de44f3639517 # initialize rs2
minu x6, x31, x4 # perform operation
RVTEST_SIGUPD(x5, x0, x6, 288)

# Testcase cp_rs2 (Test source rs2 = x5)
mv x6, x5 # switch signature pointer register to avoid conflict with test
li x11, 0x83c618b8df4c0120 # initialize rs1
li x5, 0x81628a772d2bba2b # initialize rs2
minu x18, x11, x5 # perform operation
RVTEST_SIGUPD(x6, x0, x18, 296)

# Testcase cp_rs2 (Test source rs2 = x6)
mv x7, x6 # switch signature pointer register to avoid conflict with test
li x24, 0x1714dc0e0cc97ec2 # initialize rs1
li x6, 0x5a71f1398c08425f # initialize rs2
minu x19, x24, x6 # perform operation
RVTEST_SIGUPD(x7, x0, x19, 304)

# Testcase cp_rs2 (Test source rs2 = x7)
mv x4, x7 # switch signature pointer register to avoid conflict with test
li x23, 0x7b1faaf0b4b9afba # initialize rs1
li x7, 0x916cdca5efde9434 # initialize rs2
minu x24, x23, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 312)

# Testcase cp_rs2 (Test source rs2 = x8)
li x9, 0x82bcbe73123e8826 # initialize rs1
li x8, 0xf21d405f37363a42 # initialize rs2
minu x15, x9, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 320)

# Testcase cp_rs2 (Test source rs2 = x9)
li x10, 0xac306d337b279200 # initialize rs1
li x9, 0x4987579772d0ccab # initialize rs2
minu x1, x10, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 328)

# Testcase cp_rs2 (Test source rs2 = x10)
li x31, 0xcdceeef09686b3d5 # initialize rs1
li x10, 0x15bdf556b37653a7 # initialize rs2
minu x22, x31, x10 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 336)

# Testcase cp_rs2 (Test source rs2 = x11)
li x31, 0x960011a5a6b69065 # initialize rs1
li x11, 0xf1239094605370d8 # initialize rs2
minu x26, x31, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 344)

# Testcase cp_rs2 (Test source rs2 = x12)
li x23, 0x48d8ac9c560e4868 # initialize rs1
li x12, 0xb33160b5570d9d5e # initialize rs2
minu x29, x23, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 352)

# Testcase cp_rs2 (Test source rs2 = x13)
li x15, 0x00a3a8d1e27b8f60 # initialize rs1
li x13, 0xf46649c97b1777e1 # initialize rs2
minu x5, x15, x13 # perform operation
RVTEST_SIGUPD(x4, x0, x5, 360)

# Testcase cp_rs2 (Test source rs2 = x14)
li x31, 0x2ab67153bbe46604 # initialize rs1
li x14, 0x521bb87f88403ebf # initialize rs2
minu x9, x31, x14 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 368)

# Testcase cp_rs2 (Test source rs2 = x15)
li x12, 0x474e72c5a17ca6a4 # initialize rs1
li x15, 0x44ce6fade7156fe6 # initialize rs2
minu x7, x12, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 376)

# Testcase cp_rs2 (Test source rs2 = x16)
li x14, 0x975dd74955d52905 # initialize rs1
li x16, 0x329c0d06cd582102 # initialize rs2
minu x13, x14, x16 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 384)

# Testcase cp_rs2 (Test source rs2 = x17)
li x27, 0xd687149f4ebc5014 # initialize rs1
li x17, 0xd6b178c8e04b2379 # initialize rs2
minu x15, x27, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 392)

# Testcase cp_rs2 (Test source rs2 = x18)
li x11, 0x7696cb220b132087 # initialize rs1
li x18, 0x5a53d455d65b9b62 # initialize rs2
minu x16, x11, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 400)

# Testcase cp_rs2 (Test source rs2 = x19)
li x24, 0xd4ec3ffdbf3da19c # initialize rs1
li x19, 0x520a1c792e0b6d83 # initialize rs2
minu x3, x24, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 408)

# Testcase cp_rs2 (Test source rs2 = x20)
li x10, 0x70a02dc5f1f940e1 # initialize rs1
li x20, 0x00eb960baaf5474e # initialize rs2
minu x7, x10, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 416)

# Testcase cp_rs2 (Test source rs2 = x21)
li x25, 0x6735582aaecf9a91 # initialize rs1
li x21, 0xc8e2a2168f85407f # initialize rs2
minu x7, x25, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 424)

# Testcase cp_rs2 (Test source rs2 = x22)
li x11, 0x300109c861166fff # initialize rs1
li x22, 0xa68c12bf56a70b5b # initialize rs2
minu x2, x11, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 432)

# Testcase cp_rs2 (Test source rs2 = x23)
li x24, 0x69ac2fd9d9424632 # initialize rs1
li x23, 0xf66f8642cd55e6d1 # initialize rs2
minu x8, x24, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 440)

# Testcase cp_rs2 (Test source rs2 = x24)
li x30, 0xe88b8e64f7a2c929 # initialize rs1
li x24, 0x076a5e9fcf198062 # initialize rs2
minu x29, x30, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 448)

# Testcase cp_rs2 (Test source rs2 = x25)
li x21, 0x6be42666f698eb8b # initialize rs1
li x25, 0xd698b3e65eedc25f # initialize rs2
minu x16, x21, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 456)

# Testcase cp_rs2 (Test source rs2 = x26)
li x27, 0x67683e84c88fbeb0 # initialize rs1
li x26, 0xd7558f1aa3ac14e4 # initialize rs2
minu x12, x27, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 464)

# Testcase cp_rs2 (Test source rs2 = x27)
li x31, 0xb467194fef3b42ec # initialize rs1
li x27, 0x7f3cc3eefb1f85a8 # initialize rs2
minu x16, x31, x27 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 472)

# Testcase cp_rs2 (Test source rs2 = x28)
li x17, 0xc66906bc85628751 # initialize rs1
li x28, 0x9a89b0bae3789f99 # initialize rs2
minu x21, x17, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 480)

# Testcase cp_rs2 (Test source rs2 = x29)
li x18, 0xd5ee08fae1f46199 # initialize rs1
li x29, 0x8659ff8bcb0bd97f # initialize rs2
minu x8, x18, x29 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 488)

# Testcase cp_rs2 (Test source rs2 = x30)
li x5, 0x310d38f1506ec0ea # initialize rs1
li x30, 0xca7025ceaa9f74ab # initialize rs2
minu x10, x5, x30 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 496)

# Testcase cp_rs2 (Test source rs2 = x31)
li x3, 0xd436a0b8102f6afd # initialize rs1
li x31, 0x2db18055fdcd8d4c # initialize rs2
minu x12, x3, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 504)

# Testcase cp_rd (Test destination rd = x0)
li x31, 0x810e3fdfd81c9df2 # initialize rs1
li x28, 0x6eb7bf57febaccb9 # initialize rs2
minu x0, x31, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x0, 512)

# Testcase cp_rd (Test destination rd = x1)
li x27, 0xc4408dbfe384c39e # initialize rs1
li x15, 0x0764d23fbcc79df7 # initialize rs2
minu x1, x27, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 520)

# Testcase cp_rd (Test destination rd = x2)
li x20, 0x4a927bea594882db # initialize rs1
li x18, 0xb11294c9c757c039 # initialize rs2
minu x2, x20, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 528)

# Testcase cp_rd (Test destination rd = x3)
li x16, 0xf0a9ddc20172ba7e # initialize rs1
li x20, 0x51d1fe962653d223 # initialize rs2
minu x3, x16, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 536)

# Testcase cp_rd (Test destination rd = x4)
mv x5, x4 # switch signature pointer register to avoid conflict with test
li x18, 0xe8982c7980a7692d # initialize rs1
li x31, 0x5d6811015436e00f # initialize rs2
minu x4, x18, x31 # perform operation
RVTEST_SIGUPD(x5, x0, x4, 544)

# Testcase cp_rd (Test destination rd = x5)
mv x6, x5 # switch signature pointer register to avoid conflict with test
li x31, 0xfa623ee43928c332 # initialize rs1
li x19, 0x7cb9c9adc786f12d # initialize rs2
minu x5, x31, x19 # perform operation
RVTEST_SIGUPD(x6, x0, x5, 552)

# Testcase cp_rd (Test destination rd = x6)
mv x7, x6 # switch signature pointer register to avoid conflict with test
li x9, 0x02b972efe28b2111 # initialize rs1
li x15, 0x47c96cce3150c164 # initialize rs2
minu x6, x9, x15 # perform operation
RVTEST_SIGUPD(x7, x0, x6, 560)

# Testcase cp_rd (Test destination rd = x7)
mv x5, x7 # switch signature pointer register to avoid conflict with test
li x15, 0xc02cddff8909f527 # initialize rs1
li x4, 0xb6414b9da6aa604f # initialize rs2
minu x7, x15, x4 # perform operation
RVTEST_SIGUPD(x5, x0, x7, 568)

# Testcase cp_rd (Test destination rd = x8)
li x27, 0xd58915942b9f8fbb # initialize rs1
li x31, 0x45f80a3ee9c65f17 # initialize rs2
minu x8, x27, x31 # perform operation
RVTEST_SIGUPD(x5, x0, x8, 576)

# Testcase cp_rd (Test destination rd = x9)
li x15, 0xf96f34b9ae4a16ba # initialize rs1
li x28, 0x2fa40d9d05c974b1 # initialize rs2
minu x9, x15, x28 # perform operation
RVTEST_SIGUPD(x5, x0, x9, 584)

# Testcase cp_rd (Test destination rd = x10)
li x4, 0x0d7160610894e89d # initialize rs1
li x24, 0x04513edce9d0f262 # initialize rs2
minu x10, x4, x24 # perform operation
RVTEST_SIGUPD(x5, x0, x10, 592)

# Testcase cp_rd (Test destination rd = x11)
li x2, 0x828f9c5c62c8073f # initialize rs1
li x8, 0xc8ceea88920acc23 # initialize rs2
minu x11, x2, x8 # perform operation
RVTEST_SIGUPD(x5, x0, x11, 600)

# Testcase cp_rd (Test destination rd = x12)
li x25, 0xc3aea4b36cf7e492 # initialize rs1
li x27, 0xa74344ccc665e690 # initialize rs2
minu x12, x25, x27 # perform operation
RVTEST_SIGUPD(x5, x0, x12, 608)

# Testcase cp_rd (Test destination rd = x13)
li x22, 0x1b8af9acfd1d26d1 # initialize rs1
li x11, 0x8da860a9b1ece221 # initialize rs2
minu x13, x22, x11 # perform operation
RVTEST_SIGUPD(x5, x0, x13, 616)

# Testcase cp_rd (Test destination rd = x14)
li x19, 0x24819b08e4a34c2e # initialize rs1
li x1, 0xcda1bbc6314faf85 # initialize rs2
minu x14, x19, x1 # perform operation
RVTEST_SIGUPD(x5, x0, x14, 624)

# Testcase cp_rd (Test destination rd = x15)
li x17, 0x2d3e74d35e848caf # initialize rs1
li x9, 0x76b79ee54e9588af # initialize rs2
minu x15, x17, x9 # perform operation
RVTEST_SIGUPD(x5, x0, x15, 632)

# Testcase cp_rd (Test destination rd = x16)
li x15, 0xa541ad68632572f2 # initialize rs1
li x7, 0x00af98bf3f04e5ff # initialize rs2
minu x16, x15, x7 # perform operation
RVTEST_SIGUPD(x5, x0, x16, 640)

# Testcase cp_rd (Test destination rd = x17)
li x31, 0xb678cb2fb6dc5fb0 # initialize rs1
li x6, 0xdd2a43ec164f42b4 # initialize rs2
minu x17, x31, x6 # perform operation
RVTEST_SIGUPD(x5, x0, x17, 648)

# Testcase cp_rd (Test destination rd = x18)
li x4, 0x83d2f4e385d3fcb1 # initialize rs1
li x13, 0xbd1a19c934685255 # initialize rs2
minu x18, x4, x13 # perform operation
RVTEST_SIGUPD(x5, x0, x18, 656)

# Testcase cp_rd (Test destination rd = x19)
li x20, 0xb1fa10760ae8fadc # initialize rs1
li x9, 0x1d6202580232b6f6 # initialize rs2
minu x19, x20, x9 # perform operation
RVTEST_SIGUPD(x5, x0, x19, 664)

# Testcase cp_rd (Test destination rd = x20)
li x25, 0xa465188e99648055 # initialize rs1
li x19, 0x9c403d6e2a036ac4 # initialize rs2
minu x20, x25, x19 # perform operation
RVTEST_SIGUPD(x5, x0, x20, 672)

# Testcase cp_rd (Test destination rd = x21)
li x21, 0x858b8f50c8ccae6c # initialize rs1
li x22, 0x8f611ddab33da3c1 # initialize rs2
minu x21, x21, x22 # perform operation
RVTEST_SIGUPD(x5, x0, x21, 680)

# Testcase cp_rd (Test destination rd = x22)
li x8, 0x2eb06cbedc61eca0 # initialize rs1
li x12, 0x1f33a3df67a145d2 # initialize rs2
minu x22, x8, x12 # perform operation
RVTEST_SIGUPD(x5, x0, x22, 688)

# Testcase cp_rd (Test destination rd = x23)
li x25, 0xa3e62524326bddca # initialize rs1
li x4, 0x6895f1ad952f1ae0 # initialize rs2
minu x23, x25, x4 # perform operation
RVTEST_SIGUPD(x5, x0, x23, 696)

# Testcase cp_rd (Test destination rd = x24)
li x21, 0x6d3cbc4b819fa790 # initialize rs1
li x10, 0xecc4b668615ae8f5 # initialize rs2
minu x24, x21, x10 # perform operation
RVTEST_SIGUPD(x5, x0, x24, 704)

# Testcase cp_rd (Test destination rd = x25)
li x14, 0x14ea184d4a11fe72 # initialize rs1
li x7, 0x7f0703f204137f1d # initialize rs2
minu x25, x14, x7 # perform operation
RVTEST_SIGUPD(x5, x0, x25, 712)

# Testcase cp_rd (Test destination rd = x26)
li x26, 0x842b8a4e69680516 # initialize rs1
li x31, 0x6982ebb1183a8751 # initialize rs2
minu x26, x26, x31 # perform operation
RVTEST_SIGUPD(x5, x0, x26, 720)

# Testcase cp_rd (Test destination rd = x27)
li x10, 0x1ccd06de9b4af86c # initialize rs1
li x28, 0xa40f786a7dea0a2b # initialize rs2
minu x27, x10, x28 # perform operation
RVTEST_SIGUPD(x5, x0, x27, 728)

# Testcase cp_rd (Test destination rd = x28)
li x17, 0x128cab443dd68b07 # initialize rs1
li x20, 0x4e2d975f3a132b24 # initialize rs2
minu x28, x17, x20 # perform operation
RVTEST_SIGUPD(x5, x0, x28, 736)

# Testcase cp_rd (Test destination rd = x29)
li x30, 0x258b69aceb07ede2 # initialize rs1
li x9, 0xcf66e287bb02e490 # initialize rs2
minu x29, x30, x9 # perform operation
RVTEST_SIGUPD(x5, x0, x29, 744)

# Testcase cp_rd (Test destination rd = x30)
li x26, 0xae8e0a4dca7d4e2d # initialize rs1
li x13, 0x3d854e8543b69467 # initialize rs2
minu x30, x26, x13 # perform operation
RVTEST_SIGUPD(x5, x0, x30, 752)

# Testcase cp_rd (Test destination rd = x31)
li x18, 0x08e328989dab7831 # initialize rs1
li x21, 0xbded4f5ef5e98af0 # initialize rs2
minu x31, x18, x21 # perform operation
RVTEST_SIGUPD(x5, x0, x31, 760)

# Testcase cp_rs1_corners (Test source rs1 value = 0x0)
li x23, 0x0000000000000000 # initialize rs1
li x7, 0x5309c12dc7bd179d # initialize rs2
minu x14, x23, x7 # perform operation
RVTEST_SIGUPD(x5, x0, x14, 768)

# Testcase cp_rs1_corners (Test source rs1 value = 0x1)
li x23, 0x0000000000000001 # initialize rs1
li x10, 0xe215c3d42550eefa # initialize rs2
minu x9, x23, x10 # perform operation
RVTEST_SIGUPD(x5, x0, x9, 776)

# Testcase cp_rs1_corners (Test source rs1 value = 0x2)
li x3, 0x0000000000000002 # initialize rs1
li x18, 0x925d6f522409c856 # initialize rs2
minu x28, x3, x18 # perform operation
RVTEST_SIGUPD(x5, x0, x28, 784)

# Testcase cp_rs1_corners (Test source rs1 value = 0x8000000000000000)
li x18, 0x8000000000000000 # initialize rs1
li x21, 0x1bc19655351a89c1 # initialize rs2
minu x17, x18, x21 # perform operation
RVTEST_SIGUPD(x5, x0, x17, 792)

# Testcase cp_rs1_corners (Test source rs1 value = 0x8000000000000001)
li x10, 0x8000000000000001 # initialize rs1
li x26, 0xc462680d697ab1a2 # initialize rs2
minu x31, x10, x26 # perform operation
RVTEST_SIGUPD(x5, x0, x31, 800)

# Testcase cp_rs1_corners (Test source rs1 value = 0x7fffffffffffffff)
li x17, 0x7fffffffffffffff # initialize rs1
li x18, 0x9f607f8a19d5166f # initialize rs2
minu x19, x17, x18 # perform operation
RVTEST_SIGUPD(x5, x0, x19, 808)

# Testcase cp_rs1_corners (Test source rs1 value = 0x7ffffffffffffffe)
li x12, 0x7ffffffffffffffe # initialize rs1
li x23, 0x2d83bbbc435cfe5a # initialize rs2
minu x1, x12, x23 # perform operation
RVTEST_SIGUPD(x5, x0, x1, 816)

# Testcase cp_rs1_corners (Test source rs1 value = 0xffffffffffffffff)
li x26, 0xffffffffffffffff # initialize rs1
li x27, 0x1ec9c48b32f73f55 # initialize rs2
minu x13, x26, x27 # perform operation
RVTEST_SIGUPD(x5, x0, x13, 824)

# Testcase cp_rs1_corners (Test source rs1 value = 0xfffffffffffffffe)
li x6, 0xfffffffffffffffe # initialize rs1
li x17, 0x8cba14ed6832d073 # initialize rs2
minu x28, x6, x17 # perform operation
RVTEST_SIGUPD(x5, x0, x28, 832)

# Testcase cp_rs1_corners (Test source rs1 value = 0x5bbc887763ae86f2)
li x16, 0x5bbc887763ae86f2 # initialize rs1
li x4, 0x998498366459c795 # initialize rs2
minu x12, x16, x4 # perform operation
RVTEST_SIGUPD(x5, x0, x12, 840)

# Testcase cp_rs1_corners (Test source rs1 value = 0xaaaaaaaaaaaaaaaa)
li x20, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x29, 0xd3ca74dd9fb57ca2 # initialize rs2
minu x4, x20, x29 # perform operation
RVTEST_SIGUPD(x5, x0, x4, 848)

# Testcase cp_rs1_corners (Test source rs1 value = 0x5555555555555555)
li x9, 0x5555555555555555 # initialize rs1
li x10, 0x9960bb881f0876d1 # initialize rs2
minu x22, x9, x10 # perform operation
RVTEST_SIGUPD(x5, x0, x22, 856)

# Testcase cp_rs1_corners (Test source rs1 value = 0xffffffff)
li x16, 0x00000000ffffffff # initialize rs1
li x25, 0x941f30d7aa42aa05 # initialize rs2
minu x30, x16, x25 # perform operation
RVTEST_SIGUPD(x5, x0, x30, 864)

# Testcase cp_rs1_corners (Test source rs1 value = 0xfffffffe)
li x4, 0x00000000fffffffe # initialize rs1
li x18, 0x7a8194ccb5059285 # initialize rs2
minu x20, x4, x18 # perform operation
RVTEST_SIGUPD(x5, x0, x20, 872)

# Testcase cp_rs1_corners (Test source rs1 value = 0x100000000)
li x13, 0x0000000100000000 # initialize rs1
li x26, 0xbaeed45c381b434b # initialize rs2
minu x6, x13, x26 # perform operation
RVTEST_SIGUPD(x5, x0, x6, 880)

# Testcase cp_rs1_corners (Test source rs1 value = 0x100000001)
li x9, 0x0000000100000001 # initialize rs1
li x7, 0x773f340379145765 # initialize rs2
minu x3, x9, x7 # perform operation
RVTEST_SIGUPD(x5, x0, x3, 888)

# Testcase cp_rs2_corners (Test source rs2 value = 0x0)
li x8, 0x4dfc0c65b0f51907 # initialize rs1
li x25, 0x0000000000000000 # initialize rs2
minu x27, x8, x25 # perform operation
RVTEST_SIGUPD(x5, x0, x27, 896)

# Testcase cp_rs2_corners (Test source rs2 value = 0x1)
li x17, 0xc494d07c4122a2f2 # initialize rs1
li x4, 0x0000000000000001 # initialize rs2
minu x2, x17, x4 # perform operation
RVTEST_SIGUPD(x5, x0, x2, 904)

# Testcase cp_rs2_corners (Test source rs2 value = 0x2)
li x8, 0x8320dcb8892d7ef6 # initialize rs1
li x31, 0x0000000000000002 # initialize rs2
minu x30, x8, x31 # perform operation
RVTEST_SIGUPD(x5, x0, x30, 912)

# Testcase cp_rs2_corners (Test source rs2 value = 0x8000000000000000)
li x18, 0x8b847c0225a4f215 # initialize rs1
li x19, 0x8000000000000000 # initialize rs2
minu x17, x18, x19 # perform operation
RVTEST_SIGUPD(x5, x0, x17, 920)

# Testcase cp_rs2_corners (Test source rs2 value = 0x8000000000000001)
li x30, 0x86b6133ff18ea8a1 # initialize rs1
li x23, 0x8000000000000001 # initialize rs2
minu x8, x30, x23 # perform operation
RVTEST_SIGUPD(x5, x0, x8, 928)

# Testcase cp_rs2_corners (Test source rs2 value = 0x7fffffffffffffff)
li x18, 0x0aaf00c53f2e4929 # initialize rs1
li x6, 0x7fffffffffffffff # initialize rs2
minu x26, x18, x6 # perform operation
RVTEST_SIGUPD(x5, x0, x26, 936)

# Testcase cp_rs2_corners (Test source rs2 value = 0x7ffffffffffffffe)
li x21, 0x94f461f11c102ada # initialize rs1
li x4, 0x7ffffffffffffffe # initialize rs2
minu x19, x21, x4 # perform operation
RVTEST_SIGUPD(x5, x0, x19, 944)

# Testcase cp_rs2_corners (Test source rs2 value = 0xffffffffffffffff)
li x31, 0x867463a32ecb6a17 # initialize rs1
li x24, 0xffffffffffffffff # initialize rs2
minu x7, x31, x24 # perform operation
RVTEST_SIGUPD(x5, x0, x7, 952)

# Testcase cp_rs2_corners (Test source rs2 value = 0xfffffffffffffffe)
li x16, 0x87293e42bd6eba50 # initialize rs1
li x15, 0xfffffffffffffffe # initialize rs2
minu x29, x16, x15 # perform operation
RVTEST_SIGUPD(x5, x0, x29, 960)

# Testcase cp_rs2_corners (Test source rs2 value = 0x5bbc887763ae86f2)
li x2, 0xa521764bd253ed9f # initialize rs1
li x29, 0x5bbc887763ae86f2 # initialize rs2
minu x18, x2, x29 # perform operation
RVTEST_SIGUPD(x5, x0, x18, 968)

# Testcase cp_rs2_corners (Test source rs2 value = 0xaaaaaaaaaaaaaaaa)
li x4, 0x3ef77a95257148e9 # initialize rs1
li x28, 0xaaaaaaaaaaaaaaaa # initialize rs2
minu x26, x4, x28 # perform operation
RVTEST_SIGUPD(x5, x0, x26, 976)

# Testcase cp_rs2_corners (Test source rs2 value = 0x5555555555555555)
li x27, 0xed5cbfc2368d85b2 # initialize rs1
li x31, 0x5555555555555555 # initialize rs2
minu x10, x27, x31 # perform operation
RVTEST_SIGUPD(x5, x0, x10, 984)

# Testcase cp_rs2_corners (Test source rs2 value = 0xffffffff)
li x8, 0x35a99fda89c3a31a # initialize rs1
li x17, 0x00000000ffffffff # initialize rs2
minu x11, x8, x17 # perform operation
RVTEST_SIGUPD(x5, x0, x11, 992)

# Testcase cp_rs2_corners (Test source rs2 value = 0xfffffffe)
li x19, 0x436743aa468d62d2 # initialize rs1
li x18, 0x00000000fffffffe # initialize rs2
minu x30, x19, x18 # perform operation
RVTEST_SIGUPD(x5, x0, x30, 1000)

# Testcase cp_rs2_corners (Test source rs2 value = 0x100000000)
li x2, 0x0a6e8263b5efbf16 # initialize rs1
li x10, 0x0000000100000000 # initialize rs2
minu x8, x2, x10 # perform operation
RVTEST_SIGUPD(x5, x0, x8, 1008)

# Testcase cp_rs2_corners (Test source rs2 value = 0x100000001)
li x7, 0xf627239e3baab851 # initialize rs1
li x14, 0x0000000100000001 # initialize rs2
minu x20, x7, x14 # perform operation
RVTEST_SIGUPD(x5, x0, x20, 1016)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0x0)
li x11, 0x0000000000000000 # initialize rs1
li x12, 0x0000000000000000 # initialize rs2
minu x30, x11, x12 # perform operation
RVTEST_SIGUPD(x5, x0, x30, 1024)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0x1)
li x11, 0x0000000000000000 # initialize rs1
li x27, 0x0000000000000001 # initialize rs2
minu x28, x11, x27 # perform operation
RVTEST_SIGUPD(x5, x0, x28, 1032)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0x2)
li x1, 0x0000000000000000 # initialize rs1
li x29, 0x0000000000000002 # initialize rs2
minu x26, x1, x29 # perform operation
RVTEST_SIGUPD(x5, x0, x26, 1040)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0x8000000000000000)
li x22, 0x0000000000000000 # initialize rs1
li x14, 0x8000000000000000 # initialize rs2
minu x8, x22, x14 # perform operation
RVTEST_SIGUPD(x5, x0, x8, 1048)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0x8000000000000001)
li x13, 0x0000000000000000 # initialize rs1
li x29, 0x8000000000000001 # initialize rs2
minu x4, x13, x29 # perform operation
RVTEST_SIGUPD(x5, x0, x4, 1056)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0x7fffffffffffffff)
li x16, 0x0000000000000000 # initialize rs1
li x12, 0x7fffffffffffffff # initialize rs2
minu x15, x16, x12 # perform operation
RVTEST_SIGUPD(x5, x0, x15, 1064)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0x7ffffffffffffffe)
li x20, 0x0000000000000000 # initialize rs1
li x7, 0x7ffffffffffffffe # initialize rs2
minu x2, x20, x7 # perform operation
RVTEST_SIGUPD(x5, x0, x2, 1072)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0xffffffffffffffff)
li x27, 0x0000000000000000 # initialize rs1
li x30, 0xffffffffffffffff # initialize rs2
minu x26, x27, x30 # perform operation
RVTEST_SIGUPD(x5, x0, x26, 1080)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0xfffffffffffffffe)
li x16, 0x0000000000000000 # initialize rs1
li x27, 0xfffffffffffffffe # initialize rs2
minu x8, x16, x27 # perform operation
RVTEST_SIGUPD(x5, x0, x8, 1088)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0x5bbc887763ae86f2)
li x26, 0x0000000000000000 # initialize rs1
li x24, 0x5bbc887763ae86f2 # initialize rs2
minu x31, x26, x24 # perform operation
RVTEST_SIGUPD(x5, x0, x31, 1096)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0xaaaaaaaaaaaaaaaa)
li x30, 0x0000000000000000 # initialize rs1
li x25, 0xaaaaaaaaaaaaaaaa # initialize rs2
minu x28, x30, x25 # perform operation
RVTEST_SIGUPD(x5, x0, x28, 1104)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0x5555555555555555)
li x28, 0x0000000000000000 # initialize rs1
li x26, 0x5555555555555555 # initialize rs2
minu x22, x28, x26 # perform operation
RVTEST_SIGUPD(x5, x0, x22, 1112)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0xffffffff)
li x10, 0x0000000000000000 # initialize rs1
li x20, 0x00000000ffffffff # initialize rs2
minu x19, x10, x20 # perform operation
RVTEST_SIGUPD(x5, x0, x19, 1120)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0xfffffffe)
li x6, 0x0000000000000000 # initialize rs1
li x15, 0x00000000fffffffe # initialize rs2
minu x31, x6, x15 # perform operation
RVTEST_SIGUPD(x5, x0, x31, 1128)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0x100000000)
li x4, 0x0000000000000000 # initialize rs1
li x14, 0x0000000100000000 # initialize rs2
minu x12, x4, x14 # perform operation
RVTEST_SIGUPD(x5, x0, x12, 1136)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0x100000001)
li x30, 0x0000000000000000 # initialize rs1
li x15, 0x0000000100000001 # initialize rs2
minu x21, x30, x15 # perform operation
RVTEST_SIGUPD(x5, x0, x21, 1144)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0x0)
li x15, 0x0000000000000001 # initialize rs1
li x1, 0x0000000000000000 # initialize rs2
minu x3, x15, x1 # perform operation
RVTEST_SIGUPD(x5, x0, x3, 1152)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0x1)
li x12, 0x0000000000000001 # initialize rs1
li x7, 0x0000000000000001 # initialize rs2
minu x8, x12, x7 # perform operation
RVTEST_SIGUPD(x5, x0, x8, 1160)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0x2)
li x28, 0x0000000000000001 # initialize rs1
li x23, 0x0000000000000002 # initialize rs2
minu x16, x28, x23 # perform operation
RVTEST_SIGUPD(x5, x0, x16, 1168)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0x8000000000000000)
li x13, 0x0000000000000001 # initialize rs1
li x2, 0x8000000000000000 # initialize rs2
minu x30, x13, x2 # perform operation
RVTEST_SIGUPD(x5, x0, x30, 1176)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0x8000000000000001)
li x27, 0x0000000000000001 # initialize rs1
li x24, 0x8000000000000001 # initialize rs2
minu x13, x27, x24 # perform operation
RVTEST_SIGUPD(x5, x0, x13, 1184)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0x7fffffffffffffff)
li x15, 0x0000000000000001 # initialize rs1
li x4, 0x7fffffffffffffff # initialize rs2
minu x6, x15, x4 # perform operation
RVTEST_SIGUPD(x5, x0, x6, 1192)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0x7ffffffffffffffe)
li x11, 0x0000000000000001 # initialize rs1
li x1, 0x7ffffffffffffffe # initialize rs2
minu x30, x11, x1 # perform operation
RVTEST_SIGUPD(x5, x0, x30, 1200)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0xffffffffffffffff)
li x27, 0x0000000000000001 # initialize rs1
li x31, 0xffffffffffffffff # initialize rs2
minu x19, x27, x31 # perform operation
RVTEST_SIGUPD(x5, x0, x19, 1208)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0xfffffffffffffffe)
li x12, 0x0000000000000001 # initialize rs1
li x26, 0xfffffffffffffffe # initialize rs2
minu x29, x12, x26 # perform operation
RVTEST_SIGUPD(x5, x0, x29, 1216)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0x5bbc887763ae86f2)
li x13, 0x0000000000000001 # initialize rs1
li x15, 0x5bbc887763ae86f2 # initialize rs2
minu x18, x13, x15 # perform operation
RVTEST_SIGUPD(x5, x0, x18, 1224)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0xaaaaaaaaaaaaaaaa)
li x31, 0x0000000000000001 # initialize rs1
li x29, 0xaaaaaaaaaaaaaaaa # initialize rs2
minu x27, x31, x29 # perform operation
RVTEST_SIGUPD(x5, x0, x27, 1232)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0x5555555555555555)
li x28, 0x0000000000000001 # initialize rs1
li x18, 0x5555555555555555 # initialize rs2
minu x25, x28, x18 # perform operation
RVTEST_SIGUPD(x5, x0, x25, 1240)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0xffffffff)
li x19, 0x0000000000000001 # initialize rs1
li x22, 0x00000000ffffffff # initialize rs2
minu x6, x19, x22 # perform operation
RVTEST_SIGUPD(x5, x0, x6, 1248)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0xfffffffe)
li x4, 0x0000000000000001 # initialize rs1
li x30, 0x00000000fffffffe # initialize rs2
minu x19, x4, x30 # perform operation
RVTEST_SIGUPD(x5, x0, x19, 1256)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0x100000000)
li x31, 0x0000000000000001 # initialize rs1
li x3, 0x0000000100000000 # initialize rs2
minu x20, x31, x3 # perform operation
RVTEST_SIGUPD(x5, x0, x20, 1264)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0x100000001)
li x12, 0x0000000000000001 # initialize rs1
li x22, 0x0000000100000001 # initialize rs2
minu x11, x12, x22 # perform operation
RVTEST_SIGUPD(x5, x0, x11, 1272)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0x0)
li x4, 0x0000000000000002 # initialize rs1
li x11, 0x0000000000000000 # initialize rs2
minu x17, x4, x11 # perform operation
RVTEST_SIGUPD(x5, x0, x17, 1280)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0x1)
li x8, 0x0000000000000002 # initialize rs1
li x30, 0x0000000000000001 # initialize rs2
minu x19, x8, x30 # perform operation
RVTEST_SIGUPD(x5, x0, x19, 1288)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0x2)
li x3, 0x0000000000000002 # initialize rs1
li x20, 0x0000000000000002 # initialize rs2
minu x10, x3, x20 # perform operation
RVTEST_SIGUPD(x5, x0, x10, 1296)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0x8000000000000000)
li x28, 0x0000000000000002 # initialize rs1
li x14, 0x8000000000000000 # initialize rs2
minu x18, x28, x14 # perform operation
RVTEST_SIGUPD(x5, x0, x18, 1304)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0x8000000000000001)
li x29, 0x0000000000000002 # initialize rs1
li x9, 0x8000000000000001 # initialize rs2
minu x22, x29, x9 # perform operation
RVTEST_SIGUPD(x5, x0, x22, 1312)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0x7fffffffffffffff)
li x6, 0x0000000000000002 # initialize rs1
li x26, 0x7fffffffffffffff # initialize rs2
minu x23, x6, x26 # perform operation
RVTEST_SIGUPD(x5, x0, x23, 1320)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0x7ffffffffffffffe)
li x23, 0x0000000000000002 # initialize rs1
li x3, 0x7ffffffffffffffe # initialize rs2
minu x15, x23, x3 # perform operation
RVTEST_SIGUPD(x5, x0, x15, 1328)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0xffffffffffffffff)
li x28, 0x0000000000000002 # initialize rs1
li x18, 0xffffffffffffffff # initialize rs2
minu x26, x28, x18 # perform operation
RVTEST_SIGUPD(x5, x0, x26, 1336)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0xfffffffffffffffe)
li x31, 0x0000000000000002 # initialize rs1
li x9, 0xfffffffffffffffe # initialize rs2
minu x6, x31, x9 # perform operation
RVTEST_SIGUPD(x5, x0, x6, 1344)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0x5bbc887763ae86f2)
li x28, 0x0000000000000002 # initialize rs1
li x1, 0x5bbc887763ae86f2 # initialize rs2
minu x17, x28, x1 # perform operation
RVTEST_SIGUPD(x5, x0, x17, 1352)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0xaaaaaaaaaaaaaaaa)
li x11, 0x0000000000000002 # initialize rs1
li x23, 0xaaaaaaaaaaaaaaaa # initialize rs2
minu x18, x11, x23 # perform operation
RVTEST_SIGUPD(x5, x0, x18, 1360)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0x5555555555555555)
li x24, 0x0000000000000002 # initialize rs1
li x8, 0x5555555555555555 # initialize rs2
minu x25, x24, x8 # perform operation
RVTEST_SIGUPD(x5, x0, x25, 1368)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0xffffffff)
li x29, 0x0000000000000002 # initialize rs1
li x28, 0x00000000ffffffff # initialize rs2
minu x11, x29, x28 # perform operation
RVTEST_SIGUPD(x5, x0, x11, 1376)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0xfffffffe)
li x7, 0x0000000000000002 # initialize rs1
li x9, 0x00000000fffffffe # initialize rs2
minu x22, x7, x9 # perform operation
RVTEST_SIGUPD(x5, x0, x22, 1384)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0x100000000)
li x21, 0x0000000000000002 # initialize rs1
li x26, 0x0000000100000000 # initialize rs2
minu x27, x21, x26 # perform operation
RVTEST_SIGUPD(x5, x0, x27, 1392)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0x100000001)
li x30, 0x0000000000000002 # initialize rs1
li x17, 0x0000000100000001 # initialize rs2
minu x11, x30, x17 # perform operation
RVTEST_SIGUPD(x5, x0, x11, 1400)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0x0)
li x20, 0x8000000000000000 # initialize rs1
li x31, 0x0000000000000000 # initialize rs2
minu x7, x20, x31 # perform operation
RVTEST_SIGUPD(x5, x0, x7, 1408)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0x1)
li x6, 0x8000000000000000 # initialize rs1
li x24, 0x0000000000000001 # initialize rs2
minu x13, x6, x24 # perform operation
RVTEST_SIGUPD(x5, x0, x13, 1416)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0x2)
li x17, 0x8000000000000000 # initialize rs1
li x3, 0x0000000000000002 # initialize rs2
minu x19, x17, x3 # perform operation
RVTEST_SIGUPD(x5, x0, x19, 1424)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0x8000000000000000)
li x27, 0x8000000000000000 # initialize rs1
li x6, 0x8000000000000000 # initialize rs2
minu x30, x27, x6 # perform operation
RVTEST_SIGUPD(x5, x0, x30, 1432)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0x8000000000000001)
li x12, 0x8000000000000000 # initialize rs1
li x31, 0x8000000000000001 # initialize rs2
minu x13, x12, x31 # perform operation
RVTEST_SIGUPD(x5, x0, x13, 1440)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0x7fffffffffffffff)
li x20, 0x8000000000000000 # initialize rs1
li x16, 0x7fffffffffffffff # initialize rs2
minu x26, x20, x16 # perform operation
RVTEST_SIGUPD(x5, x0, x26, 1448)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0x7ffffffffffffffe)
li x4, 0x8000000000000000 # initialize rs1
li x9, 0x7ffffffffffffffe # initialize rs2
minu x22, x4, x9 # perform operation
RVTEST_SIGUPD(x5, x0, x22, 1456)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0xffffffffffffffff)
li x4, 0x8000000000000000 # initialize rs1
li x18, 0xffffffffffffffff # initialize rs2
minu x25, x4, x18 # perform operation
RVTEST_SIGUPD(x5, x0, x25, 1464)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0xfffffffffffffffe)
li x22, 0x8000000000000000 # initialize rs1
li x29, 0xfffffffffffffffe # initialize rs2
minu x16, x22, x29 # perform operation
RVTEST_SIGUPD(x5, x0, x16, 1472)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0x5bbc887763ae86f2)
li x6, 0x8000000000000000 # initialize rs1
li x19, 0x5bbc887763ae86f2 # initialize rs2
minu x10, x6, x19 # perform operation
RVTEST_SIGUPD(x5, x0, x10, 1480)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0xaaaaaaaaaaaaaaaa)
li x30, 0x8000000000000000 # initialize rs1
li x15, 0xaaaaaaaaaaaaaaaa # initialize rs2
minu x25, x30, x15 # perform operation
RVTEST_SIGUPD(x5, x0, x25, 1488)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0x5555555555555555)
li x11, 0x8000000000000000 # initialize rs1
li x2, 0x5555555555555555 # initialize rs2
minu x4, x11, x2 # perform operation
RVTEST_SIGUPD(x5, x0, x4, 1496)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0xffffffff)
li x4, 0x8000000000000000 # initialize rs1
li x13, 0x00000000ffffffff # initialize rs2
minu x3, x4, x13 # perform operation
RVTEST_SIGUPD(x5, x0, x3, 1504)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0xfffffffe)
li x22, 0x8000000000000000 # initialize rs1
li x25, 0x00000000fffffffe # initialize rs2
minu x26, x22, x25 # perform operation
RVTEST_SIGUPD(x5, x0, x26, 1512)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0x100000000)
li x19, 0x8000000000000000 # initialize rs1
li x23, 0x0000000100000000 # initialize rs2
minu x17, x19, x23 # perform operation
RVTEST_SIGUPD(x5, x0, x17, 1520)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0x100000001)
li x11, 0x8000000000000000 # initialize rs1
li x2, 0x0000000100000001 # initialize rs2
minu x8, x11, x2 # perform operation
RVTEST_SIGUPD(x5, x0, x8, 1528)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0x0)
li x28, 0x8000000000000001 # initialize rs1
li x7, 0x0000000000000000 # initialize rs2
minu x9, x28, x7 # perform operation
RVTEST_SIGUPD(x5, x0, x9, 1536)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0x1)
li x17, 0x8000000000000001 # initialize rs1
li x3, 0x0000000000000001 # initialize rs2
minu x31, x17, x3 # perform operation
RVTEST_SIGUPD(x5, x0, x31, 1544)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0x2)
li x18, 0x8000000000000001 # initialize rs1
li x22, 0x0000000000000002 # initialize rs2
minu x21, x18, x22 # perform operation
RVTEST_SIGUPD(x5, x0, x21, 1552)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0x8000000000000000)
li x3, 0x8000000000000001 # initialize rs1
li x19, 0x8000000000000000 # initialize rs2
minu x18, x3, x19 # perform operation
RVTEST_SIGUPD(x5, x0, x18, 1560)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0x8000000000000001)
li x16, 0x8000000000000001 # initialize rs1
li x20, 0x8000000000000001 # initialize rs2
minu x18, x16, x20 # perform operation
RVTEST_SIGUPD(x5, x0, x18, 1568)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0x7fffffffffffffff)
li x16, 0x8000000000000001 # initialize rs1
li x22, 0x7fffffffffffffff # initialize rs2
minu x2, x16, x22 # perform operation
RVTEST_SIGUPD(x5, x0, x2, 1576)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0x7ffffffffffffffe)
li x16, 0x8000000000000001 # initialize rs1
li x19, 0x7ffffffffffffffe # initialize rs2
minu x4, x16, x19 # perform operation
RVTEST_SIGUPD(x5, x0, x4, 1584)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0xffffffffffffffff)
li x1, 0x8000000000000001 # initialize rs1
li x7, 0xffffffffffffffff # initialize rs2
minu x12, x1, x7 # perform operation
RVTEST_SIGUPD(x5, x0, x12, 1592)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0xfffffffffffffffe)
li x14, 0x8000000000000001 # initialize rs1
li x15, 0xfffffffffffffffe # initialize rs2
minu x10, x14, x15 # perform operation
RVTEST_SIGUPD(x5, x0, x10, 1600)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0x5bbc887763ae86f2)
li x20, 0x8000000000000001 # initialize rs1
li x7, 0x5bbc887763ae86f2 # initialize rs2
minu x1, x20, x7 # perform operation
RVTEST_SIGUPD(x5, x0, x1, 1608)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0xaaaaaaaaaaaaaaaa)
li x29, 0x8000000000000001 # initialize rs1
li x10, 0xaaaaaaaaaaaaaaaa # initialize rs2
minu x2, x29, x10 # perform operation
RVTEST_SIGUPD(x5, x0, x2, 1616)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0x5555555555555555)
li x13, 0x8000000000000001 # initialize rs1
li x24, 0x5555555555555555 # initialize rs2
minu x26, x13, x24 # perform operation
RVTEST_SIGUPD(x5, x0, x26, 1624)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0xffffffff)
li x27, 0x8000000000000001 # initialize rs1
li x16, 0x00000000ffffffff # initialize rs2
minu x30, x27, x16 # perform operation
RVTEST_SIGUPD(x5, x0, x30, 1632)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0xfffffffe)
li x10, 0x8000000000000001 # initialize rs1
li x21, 0x00000000fffffffe # initialize rs2
minu x4, x10, x21 # perform operation
RVTEST_SIGUPD(x5, x0, x4, 1640)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0x100000000)
li x6, 0x8000000000000001 # initialize rs1
li x19, 0x0000000100000000 # initialize rs2
minu x8, x6, x19 # perform operation
RVTEST_SIGUPD(x5, x0, x8, 1648)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0x100000001)
li x26, 0x8000000000000001 # initialize rs1
li x8, 0x0000000100000001 # initialize rs2
minu x3, x26, x8 # perform operation
RVTEST_SIGUPD(x5, x0, x3, 1656)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0x0)
li x23, 0x7fffffffffffffff # initialize rs1
li x30, 0x0000000000000000 # initialize rs2
minu x16, x23, x30 # perform operation
RVTEST_SIGUPD(x5, x0, x16, 1664)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0x1)
li x8, 0x7fffffffffffffff # initialize rs1
li x27, 0x0000000000000001 # initialize rs2
minu x26, x8, x27 # perform operation
RVTEST_SIGUPD(x5, x0, x26, 1672)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0x2)
li x19, 0x7fffffffffffffff # initialize rs1
li x29, 0x0000000000000002 # initialize rs2
minu x7, x19, x29 # perform operation
RVTEST_SIGUPD(x5, x0, x7, 1680)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0x8000000000000000)
li x8, 0x7fffffffffffffff # initialize rs1
li x26, 0x8000000000000000 # initialize rs2
minu x24, x8, x26 # perform operation
RVTEST_SIGUPD(x5, x0, x24, 1688)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0x8000000000000001)
li x15, 0x7fffffffffffffff # initialize rs1
li x29, 0x8000000000000001 # initialize rs2
minu x6, x15, x29 # perform operation
RVTEST_SIGUPD(x5, x0, x6, 1696)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0x7fffffffffffffff)
li x11, 0x7fffffffffffffff # initialize rs1
li x31, 0x7fffffffffffffff # initialize rs2
minu x1, x11, x31 # perform operation
RVTEST_SIGUPD(x5, x0, x1, 1704)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0x7ffffffffffffffe)
li x9, 0x7fffffffffffffff # initialize rs1
li x12, 0x7ffffffffffffffe # initialize rs2
minu x24, x9, x12 # perform operation
RVTEST_SIGUPD(x5, x0, x24, 1712)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0xffffffffffffffff)
li x11, 0x7fffffffffffffff # initialize rs1
li x15, 0xffffffffffffffff # initialize rs2
minu x13, x11, x15 # perform operation
RVTEST_SIGUPD(x5, x0, x13, 1720)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0xfffffffffffffffe)
li x13, 0x7fffffffffffffff # initialize rs1
li x4, 0xfffffffffffffffe # initialize rs2
minu x20, x13, x4 # perform operation
RVTEST_SIGUPD(x5, x0, x20, 1728)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0x5bbc887763ae86f2)
li x14, 0x7fffffffffffffff # initialize rs1
li x10, 0x5bbc887763ae86f2 # initialize rs2
minu x25, x14, x10 # perform operation
RVTEST_SIGUPD(x5, x0, x25, 1736)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0xaaaaaaaaaaaaaaaa)
li x28, 0x7fffffffffffffff # initialize rs1
li x10, 0xaaaaaaaaaaaaaaaa # initialize rs2
minu x13, x28, x10 # perform operation
RVTEST_SIGUPD(x5, x0, x13, 1744)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0x5555555555555555)
li x3, 0x7fffffffffffffff # initialize rs1
li x7, 0x5555555555555555 # initialize rs2
minu x15, x3, x7 # perform operation
RVTEST_SIGUPD(x5, x0, x15, 1752)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0xffffffff)
li x13, 0x7fffffffffffffff # initialize rs1
li x12, 0x00000000ffffffff # initialize rs2
minu x30, x13, x12 # perform operation
RVTEST_SIGUPD(x5, x0, x30, 1760)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0xfffffffe)
li x24, 0x7fffffffffffffff # initialize rs1
li x3, 0x00000000fffffffe # initialize rs2
minu x13, x24, x3 # perform operation
RVTEST_SIGUPD(x5, x0, x13, 1768)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0x100000000)
li x13, 0x7fffffffffffffff # initialize rs1
li x1, 0x0000000100000000 # initialize rs2
minu x7, x13, x1 # perform operation
RVTEST_SIGUPD(x5, x0, x7, 1776)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0x100000001)
li x15, 0x7fffffffffffffff # initialize rs1
li x24, 0x0000000100000001 # initialize rs2
minu x17, x15, x24 # perform operation
RVTEST_SIGUPD(x5, x0, x17, 1784)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0x0)
li x31, 0x7ffffffffffffffe # initialize rs1
li x29, 0x0000000000000000 # initialize rs2
minu x30, x31, x29 # perform operation
RVTEST_SIGUPD(x5, x0, x30, 1792)
addi x5, x5, 1800 # increment signature pointer and reset offset

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0x1)
li x13, 0x7ffffffffffffffe # initialize rs1
li x22, 0x0000000000000001 # initialize rs2
minu x9, x13, x22 # perform operation
RVTEST_SIGUPD(x5, x0, x9, 0)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0x2)
li x29, 0x7ffffffffffffffe # initialize rs1
li x21, 0x0000000000000002 # initialize rs2
minu x10, x29, x21 # perform operation
RVTEST_SIGUPD(x5, x0, x10, 8)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0x8000000000000000)
li x18, 0x7ffffffffffffffe # initialize rs1
li x28, 0x8000000000000000 # initialize rs2
minu x12, x18, x28 # perform operation
RVTEST_SIGUPD(x5, x0, x12, 16)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0x8000000000000001)
li x27, 0x7ffffffffffffffe # initialize rs1
li x23, 0x8000000000000001 # initialize rs2
minu x7, x27, x23 # perform operation
RVTEST_SIGUPD(x5, x0, x7, 24)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0x7fffffffffffffff)
li x23, 0x7ffffffffffffffe # initialize rs1
li x17, 0x7fffffffffffffff # initialize rs2
minu x1, x23, x17 # perform operation
RVTEST_SIGUPD(x5, x0, x1, 32)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0x7ffffffffffffffe)
li x4, 0x7ffffffffffffffe # initialize rs1
li x6, 0x7ffffffffffffffe # initialize rs2
minu x2, x4, x6 # perform operation
RVTEST_SIGUPD(x5, x0, x2, 40)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0xffffffffffffffff)
li x25, 0x7ffffffffffffffe # initialize rs1
li x9, 0xffffffffffffffff # initialize rs2
minu x28, x25, x9 # perform operation
RVTEST_SIGUPD(x5, x0, x28, 48)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0xfffffffffffffffe)
li x25, 0x7ffffffffffffffe # initialize rs1
li x13, 0xfffffffffffffffe # initialize rs2
minu x31, x25, x13 # perform operation
RVTEST_SIGUPD(x5, x0, x31, 56)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0x5bbc887763ae86f2)
li x18, 0x7ffffffffffffffe # initialize rs1
li x2, 0x5bbc887763ae86f2 # initialize rs2
minu x27, x18, x2 # perform operation
RVTEST_SIGUPD(x5, x0, x27, 64)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0xaaaaaaaaaaaaaaaa)
li x11, 0x7ffffffffffffffe # initialize rs1
li x28, 0xaaaaaaaaaaaaaaaa # initialize rs2
minu x24, x11, x28 # perform operation
RVTEST_SIGUPD(x5, x0, x24, 72)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0x5555555555555555)
li x9, 0x7ffffffffffffffe # initialize rs1
li x12, 0x5555555555555555 # initialize rs2
minu x28, x9, x12 # perform operation
RVTEST_SIGUPD(x5, x0, x28, 80)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0xffffffff)
li x12, 0x7ffffffffffffffe # initialize rs1
li x20, 0x00000000ffffffff # initialize rs2
minu x29, x12, x20 # perform operation
RVTEST_SIGUPD(x5, x0, x29, 88)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0xfffffffe)
li x17, 0x7ffffffffffffffe # initialize rs1
li x12, 0x00000000fffffffe # initialize rs2
minu x23, x17, x12 # perform operation
RVTEST_SIGUPD(x5, x0, x23, 96)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0x100000000)
li x11, 0x7ffffffffffffffe # initialize rs1
li x7, 0x0000000100000000 # initialize rs2
minu x10, x11, x7 # perform operation
RVTEST_SIGUPD(x5, x0, x10, 104)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0x100000001)
li x8, 0x7ffffffffffffffe # initialize rs1
li x4, 0x0000000100000001 # initialize rs2
minu x2, x8, x4 # perform operation
RVTEST_SIGUPD(x5, x0, x2, 112)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0x0)
li x8, 0xffffffffffffffff # initialize rs1
li x3, 0x0000000000000000 # initialize rs2
minu x12, x8, x3 # perform operation
RVTEST_SIGUPD(x5, x0, x12, 120)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0x1)
li x26, 0xffffffffffffffff # initialize rs1
li x28, 0x0000000000000001 # initialize rs2
minu x15, x26, x28 # perform operation
RVTEST_SIGUPD(x5, x0, x15, 128)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0x2)
li x11, 0xffffffffffffffff # initialize rs1
li x17, 0x0000000000000002 # initialize rs2
minu x7, x11, x17 # perform operation
RVTEST_SIGUPD(x5, x0, x7, 136)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0x8000000000000000)
li x29, 0xffffffffffffffff # initialize rs1
li x9, 0x8000000000000000 # initialize rs2
minu x14, x29, x9 # perform operation
RVTEST_SIGUPD(x5, x0, x14, 144)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0x8000000000000001)
li x2, 0xffffffffffffffff # initialize rs1
li x20, 0x8000000000000001 # initialize rs2
minu x30, x2, x20 # perform operation
RVTEST_SIGUPD(x5, x0, x30, 152)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0x7fffffffffffffff)
li x2, 0xffffffffffffffff # initialize rs1
li x20, 0x7fffffffffffffff # initialize rs2
minu x29, x2, x20 # perform operation
RVTEST_SIGUPD(x5, x0, x29, 160)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0x7ffffffffffffffe)
li x31, 0xffffffffffffffff # initialize rs1
li x7, 0x7ffffffffffffffe # initialize rs2
minu x30, x31, x7 # perform operation
RVTEST_SIGUPD(x5, x0, x30, 168)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0xffffffffffffffff)
li x9, 0xffffffffffffffff # initialize rs1
li x31, 0xffffffffffffffff # initialize rs2
minu x17, x9, x31 # perform operation
RVTEST_SIGUPD(x5, x0, x17, 176)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0xfffffffffffffffe)
li x15, 0xffffffffffffffff # initialize rs1
li x8, 0xfffffffffffffffe # initialize rs2
minu x22, x15, x8 # perform operation
RVTEST_SIGUPD(x5, x0, x22, 184)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0x5bbc887763ae86f2)
li x18, 0xffffffffffffffff # initialize rs1
li x11, 0x5bbc887763ae86f2 # initialize rs2
minu x29, x18, x11 # perform operation
RVTEST_SIGUPD(x5, x0, x29, 192)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0xaaaaaaaaaaaaaaaa)
li x7, 0xffffffffffffffff # initialize rs1
li x12, 0xaaaaaaaaaaaaaaaa # initialize rs2
minu x4, x7, x12 # perform operation
RVTEST_SIGUPD(x5, x0, x4, 200)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0x5555555555555555)
li x10, 0xffffffffffffffff # initialize rs1
li x21, 0x5555555555555555 # initialize rs2
minu x30, x10, x21 # perform operation
RVTEST_SIGUPD(x5, x0, x30, 208)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0xffffffff)
li x16, 0xffffffffffffffff # initialize rs1
li x27, 0x00000000ffffffff # initialize rs2
minu x10, x16, x27 # perform operation
RVTEST_SIGUPD(x5, x0, x10, 216)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0xfffffffe)
li x17, 0xffffffffffffffff # initialize rs1
li x25, 0x00000000fffffffe # initialize rs2
minu x15, x17, x25 # perform operation
RVTEST_SIGUPD(x5, x0, x15, 224)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0x100000000)
li x26, 0xffffffffffffffff # initialize rs1
li x21, 0x0000000100000000 # initialize rs2
minu x14, x26, x21 # perform operation
RVTEST_SIGUPD(x5, x0, x14, 232)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0x100000001)
li x3, 0xffffffffffffffff # initialize rs1
li x28, 0x0000000100000001 # initialize rs2
minu x22, x3, x28 # perform operation
RVTEST_SIGUPD(x5, x0, x22, 240)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0x0)
li x7, 0xfffffffffffffffe # initialize rs1
li x30, 0x0000000000000000 # initialize rs2
minu x2, x7, x30 # perform operation
RVTEST_SIGUPD(x5, x0, x2, 248)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0x1)
li x1, 0xfffffffffffffffe # initialize rs1
li x26, 0x0000000000000001 # initialize rs2
minu x10, x1, x26 # perform operation
RVTEST_SIGUPD(x5, x0, x10, 256)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0x2)
li x16, 0xfffffffffffffffe # initialize rs1
li x11, 0x0000000000000002 # initialize rs2
minu x3, x16, x11 # perform operation
RVTEST_SIGUPD(x5, x0, x3, 264)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0x8000000000000000)
li x2, 0xfffffffffffffffe # initialize rs1
li x11, 0x8000000000000000 # initialize rs2
minu x21, x2, x11 # perform operation
RVTEST_SIGUPD(x5, x0, x21, 272)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0x8000000000000001)
li x2, 0xfffffffffffffffe # initialize rs1
li x17, 0x8000000000000001 # initialize rs2
minu x28, x2, x17 # perform operation
RVTEST_SIGUPD(x5, x0, x28, 280)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0x7fffffffffffffff)
li x2, 0xfffffffffffffffe # initialize rs1
li x30, 0x7fffffffffffffff # initialize rs2
minu x22, x2, x30 # perform operation
RVTEST_SIGUPD(x5, x0, x22, 288)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0x7ffffffffffffffe)
li x13, 0xfffffffffffffffe # initialize rs1
li x11, 0x7ffffffffffffffe # initialize rs2
minu x20, x13, x11 # perform operation
RVTEST_SIGUPD(x5, x0, x20, 296)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0xffffffffffffffff)
li x26, 0xfffffffffffffffe # initialize rs1
li x11, 0xffffffffffffffff # initialize rs2
minu x20, x26, x11 # perform operation
RVTEST_SIGUPD(x5, x0, x20, 304)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0xfffffffffffffffe)
li x26, 0xfffffffffffffffe # initialize rs1
li x30, 0xfffffffffffffffe # initialize rs2
minu x27, x26, x30 # perform operation
RVTEST_SIGUPD(x5, x0, x27, 312)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0x5bbc887763ae86f2)
li x11, 0xfffffffffffffffe # initialize rs1
li x28, 0x5bbc887763ae86f2 # initialize rs2
minu x16, x11, x28 # perform operation
RVTEST_SIGUPD(x5, x0, x16, 320)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0xaaaaaaaaaaaaaaaa)
li x12, 0xfffffffffffffffe # initialize rs1
li x3, 0xaaaaaaaaaaaaaaaa # initialize rs2
minu x15, x12, x3 # perform operation
RVTEST_SIGUPD(x5, x0, x15, 328)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0x5555555555555555)
li x30, 0xfffffffffffffffe # initialize rs1
li x20, 0x5555555555555555 # initialize rs2
minu x14, x30, x20 # perform operation
RVTEST_SIGUPD(x5, x0, x14, 336)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0xffffffff)
li x16, 0xfffffffffffffffe # initialize rs1
li x22, 0x00000000ffffffff # initialize rs2
minu x24, x16, x22 # perform operation
RVTEST_SIGUPD(x5, x0, x24, 344)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0xfffffffe)
li x7, 0xfffffffffffffffe # initialize rs1
li x31, 0x00000000fffffffe # initialize rs2
minu x24, x7, x31 # perform operation
RVTEST_SIGUPD(x5, x0, x24, 352)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0x100000000)
li x9, 0xfffffffffffffffe # initialize rs1
li x31, 0x0000000100000000 # initialize rs2
minu x24, x9, x31 # perform operation
RVTEST_SIGUPD(x5, x0, x24, 360)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0x100000001)
li x26, 0xfffffffffffffffe # initialize rs1
li x18, 0x0000000100000001 # initialize rs2
minu x21, x26, x18 # perform operation
RVTEST_SIGUPD(x5, x0, x21, 368)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0x0)
li x9, 0x5bbc887763ae86f2 # initialize rs1
li x14, 0x0000000000000000 # initialize rs2
minu x27, x9, x14 # perform operation
RVTEST_SIGUPD(x5, x0, x27, 376)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0x1)
li x16, 0x5bbc887763ae86f2 # initialize rs1
li x19, 0x0000000000000001 # initialize rs2
minu x31, x16, x19 # perform operation
RVTEST_SIGUPD(x5, x0, x31, 384)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0x2)
li x24, 0x5bbc887763ae86f2 # initialize rs1
li x6, 0x0000000000000002 # initialize rs2
minu x25, x24, x6 # perform operation
RVTEST_SIGUPD(x5, x0, x25, 392)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0x8000000000000000)
li x19, 0x5bbc887763ae86f2 # initialize rs1
li x9, 0x8000000000000000 # initialize rs2
minu x31, x19, x9 # perform operation
RVTEST_SIGUPD(x5, x0, x31, 400)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0x8000000000000001)
li x7, 0x5bbc887763ae86f2 # initialize rs1
li x11, 0x8000000000000001 # initialize rs2
minu x13, x7, x11 # perform operation
RVTEST_SIGUPD(x5, x0, x13, 408)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0x7fffffffffffffff)
li x4, 0x5bbc887763ae86f2 # initialize rs1
li x9, 0x7fffffffffffffff # initialize rs2
minu x21, x4, x9 # perform operation
RVTEST_SIGUPD(x5, x0, x21, 416)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0x7ffffffffffffffe)
li x27, 0x5bbc887763ae86f2 # initialize rs1
li x11, 0x7ffffffffffffffe # initialize rs2
minu x31, x27, x11 # perform operation
RVTEST_SIGUPD(x5, x0, x31, 424)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0xffffffffffffffff)
li x25, 0x5bbc887763ae86f2 # initialize rs1
li x30, 0xffffffffffffffff # initialize rs2
minu x20, x25, x30 # perform operation
RVTEST_SIGUPD(x5, x0, x20, 432)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0xfffffffffffffffe)
li x3, 0x5bbc887763ae86f2 # initialize rs1
li x17, 0xfffffffffffffffe # initialize rs2
minu x12, x3, x17 # perform operation
RVTEST_SIGUPD(x5, x0, x12, 440)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0x5bbc887763ae86f2)
li x20, 0x5bbc887763ae86f2 # initialize rs1
li x18, 0x5bbc887763ae86f2 # initialize rs2
minu x24, x20, x18 # perform operation
RVTEST_SIGUPD(x5, x0, x24, 448)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0xaaaaaaaaaaaaaaaa)
li x8, 0x5bbc887763ae86f2 # initialize rs1
li x1, 0xaaaaaaaaaaaaaaaa # initialize rs2
minu x11, x8, x1 # perform operation
RVTEST_SIGUPD(x5, x0, x11, 456)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0x5555555555555555)
li x8, 0x5bbc887763ae86f2 # initialize rs1
li x19, 0x5555555555555555 # initialize rs2
minu x4, x8, x19 # perform operation
RVTEST_SIGUPD(x5, x0, x4, 464)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0xffffffff)
li x8, 0x5bbc887763ae86f2 # initialize rs1
li x27, 0x00000000ffffffff # initialize rs2
minu x17, x8, x27 # perform operation
RVTEST_SIGUPD(x5, x0, x17, 472)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0xfffffffe)
li x17, 0x5bbc887763ae86f2 # initialize rs1
li x20, 0x00000000fffffffe # initialize rs2
minu x11, x17, x20 # perform operation
RVTEST_SIGUPD(x5, x0, x11, 480)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0x100000000)
li x31, 0x5bbc887763ae86f2 # initialize rs1
li x9, 0x0000000100000000 # initialize rs2
minu x22, x31, x9 # perform operation
RVTEST_SIGUPD(x5, x0, x22, 488)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0x100000001)
li x17, 0x5bbc887763ae86f2 # initialize rs1
li x28, 0x0000000100000001 # initialize rs2
minu x30, x17, x28 # perform operation
RVTEST_SIGUPD(x5, x0, x30, 496)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0x0)
li x11, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x21, 0x0000000000000000 # initialize rs2
minu x24, x11, x21 # perform operation
RVTEST_SIGUPD(x5, x0, x24, 504)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0x1)
li x6, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x20, 0x0000000000000001 # initialize rs2
minu x22, x6, x20 # perform operation
RVTEST_SIGUPD(x5, x0, x22, 512)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0x2)
li x27, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x29, 0x0000000000000002 # initialize rs2
minu x13, x27, x29 # perform operation
RVTEST_SIGUPD(x5, x0, x13, 520)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0x8000000000000000)
li x25, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x22, 0x8000000000000000 # initialize rs2
minu x16, x25, x22 # perform operation
RVTEST_SIGUPD(x5, x0, x16, 528)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0x8000000000000001)
li x22, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x7, 0x8000000000000001 # initialize rs2
minu x24, x22, x7 # perform operation
RVTEST_SIGUPD(x5, x0, x24, 536)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0x7fffffffffffffff)
li x10, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x31, 0x7fffffffffffffff # initialize rs2
minu x12, x10, x31 # perform operation
RVTEST_SIGUPD(x5, x0, x12, 544)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0x7ffffffffffffffe)
li x6, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x22, 0x7ffffffffffffffe # initialize rs2
minu x23, x6, x22 # perform operation
RVTEST_SIGUPD(x5, x0, x23, 552)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0xffffffffffffffff)
li x30, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x21, 0xffffffffffffffff # initialize rs2
minu x6, x30, x21 # perform operation
RVTEST_SIGUPD(x5, x0, x6, 560)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0xfffffffffffffffe)
li x11, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x7, 0xfffffffffffffffe # initialize rs2
minu x1, x11, x7 # perform operation
RVTEST_SIGUPD(x5, x0, x1, 568)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0x5bbc887763ae86f2)
li x17, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x30, 0x5bbc887763ae86f2 # initialize rs2
minu x31, x17, x30 # perform operation
RVTEST_SIGUPD(x5, x0, x31, 576)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0xaaaaaaaaaaaaaaaa)
li x2, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x11, 0xaaaaaaaaaaaaaaaa # initialize rs2
minu x13, x2, x11 # perform operation
RVTEST_SIGUPD(x5, x0, x13, 584)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0x5555555555555555)
li x19, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x1, 0x5555555555555555 # initialize rs2
minu x31, x19, x1 # perform operation
RVTEST_SIGUPD(x5, x0, x31, 592)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0xffffffff)
li x25, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x24, 0x00000000ffffffff # initialize rs2
minu x20, x25, x24 # perform operation
RVTEST_SIGUPD(x5, x0, x20, 600)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0xfffffffe)
li x12, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x31, 0x00000000fffffffe # initialize rs2
minu x27, x12, x31 # perform operation
RVTEST_SIGUPD(x5, x0, x27, 608)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0x100000000)
li x26, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x3, 0x0000000100000000 # initialize rs2
minu x31, x26, x3 # perform operation
RVTEST_SIGUPD(x5, x0, x31, 616)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0x100000001)
li x8, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x19, 0x0000000100000001 # initialize rs2
minu x11, x8, x19 # perform operation
RVTEST_SIGUPD(x5, x0, x11, 624)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0x0)
li x19, 0x5555555555555555 # initialize rs1
li x24, 0x0000000000000000 # initialize rs2
minu x22, x19, x24 # perform operation
RVTEST_SIGUPD(x5, x0, x22, 632)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0x1)
li x4, 0x5555555555555555 # initialize rs1
li x29, 0x0000000000000001 # initialize rs2
minu x17, x4, x29 # perform operation
RVTEST_SIGUPD(x5, x0, x17, 640)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0x2)
li x14, 0x5555555555555555 # initialize rs1
li x2, 0x0000000000000002 # initialize rs2
minu x10, x14, x2 # perform operation
RVTEST_SIGUPD(x5, x0, x10, 648)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0x8000000000000000)
li x15, 0x5555555555555555 # initialize rs1
li x25, 0x8000000000000000 # initialize rs2
minu x18, x15, x25 # perform operation
RVTEST_SIGUPD(x5, x0, x18, 656)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0x8000000000000001)
li x4, 0x5555555555555555 # initialize rs1
li x8, 0x8000000000000001 # initialize rs2
minu x30, x4, x8 # perform operation
RVTEST_SIGUPD(x5, x0, x30, 664)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0x7fffffffffffffff)
li x28, 0x5555555555555555 # initialize rs1
li x27, 0x7fffffffffffffff # initialize rs2
minu x31, x28, x27 # perform operation
RVTEST_SIGUPD(x5, x0, x31, 672)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0x7ffffffffffffffe)
li x21, 0x5555555555555555 # initialize rs1
li x18, 0x7ffffffffffffffe # initialize rs2
minu x2, x21, x18 # perform operation
RVTEST_SIGUPD(x5, x0, x2, 680)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0xffffffffffffffff)
li x15, 0x5555555555555555 # initialize rs1
li x27, 0xffffffffffffffff # initialize rs2
minu x7, x15, x27 # perform operation
RVTEST_SIGUPD(x5, x0, x7, 688)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0xfffffffffffffffe)
li x14, 0x5555555555555555 # initialize rs1
li x11, 0xfffffffffffffffe # initialize rs2
minu x24, x14, x11 # perform operation
RVTEST_SIGUPD(x5, x0, x24, 696)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0x5bbc887763ae86f2)
li x15, 0x5555555555555555 # initialize rs1
li x25, 0x5bbc887763ae86f2 # initialize rs2
minu x29, x15, x25 # perform operation
RVTEST_SIGUPD(x5, x0, x29, 704)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0xaaaaaaaaaaaaaaaa)
li x26, 0x5555555555555555 # initialize rs1
li x28, 0xaaaaaaaaaaaaaaaa # initialize rs2
minu x10, x26, x28 # perform operation
RVTEST_SIGUPD(x5, x0, x10, 712)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0x5555555555555555)
li x9, 0x5555555555555555 # initialize rs1
li x4, 0x5555555555555555 # initialize rs2
minu x8, x9, x4 # perform operation
RVTEST_SIGUPD(x5, x0, x8, 720)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0xffffffff)
li x23, 0x5555555555555555 # initialize rs1
li x3, 0x00000000ffffffff # initialize rs2
minu x28, x23, x3 # perform operation
RVTEST_SIGUPD(x5, x0, x28, 728)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0xfffffffe)
li x10, 0x5555555555555555 # initialize rs1
li x13, 0x00000000fffffffe # initialize rs2
minu x3, x10, x13 # perform operation
RVTEST_SIGUPD(x5, x0, x3, 736)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0x100000000)
li x1, 0x5555555555555555 # initialize rs1
li x12, 0x0000000100000000 # initialize rs2
minu x21, x1, x12 # perform operation
RVTEST_SIGUPD(x5, x0, x21, 744)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0x100000001)
li x20, 0x5555555555555555 # initialize rs1
li x8, 0x0000000100000001 # initialize rs2
minu x16, x20, x8 # perform operation
RVTEST_SIGUPD(x5, x0, x16, 752)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0x0)
li x4, 0x00000000ffffffff # initialize rs1
li x12, 0x0000000000000000 # initialize rs2
minu x22, x4, x12 # perform operation
RVTEST_SIGUPD(x5, x0, x22, 760)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0x1)
li x18, 0x00000000ffffffff # initialize rs1
li x28, 0x0000000000000001 # initialize rs2
minu x12, x18, x28 # perform operation
RVTEST_SIGUPD(x5, x0, x12, 768)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0x2)
li x2, 0x00000000ffffffff # initialize rs1
li x12, 0x0000000000000002 # initialize rs2
minu x7, x2, x12 # perform operation
RVTEST_SIGUPD(x5, x0, x7, 776)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0x8000000000000000)
li x2, 0x00000000ffffffff # initialize rs1
li x29, 0x8000000000000000 # initialize rs2
minu x8, x2, x29 # perform operation
RVTEST_SIGUPD(x5, x0, x8, 784)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0x8000000000000001)
li x11, 0x00000000ffffffff # initialize rs1
li x13, 0x8000000000000001 # initialize rs2
minu x21, x11, x13 # perform operation
RVTEST_SIGUPD(x5, x0, x21, 792)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0x7fffffffffffffff)
li x14, 0x00000000ffffffff # initialize rs1
li x28, 0x7fffffffffffffff # initialize rs2
minu x2, x14, x28 # perform operation
RVTEST_SIGUPD(x5, x0, x2, 800)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0x7ffffffffffffffe)
li x21, 0x00000000ffffffff # initialize rs1
li x25, 0x7ffffffffffffffe # initialize rs2
minu x23, x21, x25 # perform operation
RVTEST_SIGUPD(x5, x0, x23, 808)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0xffffffffffffffff)
li x13, 0x00000000ffffffff # initialize rs1
li x1, 0xffffffffffffffff # initialize rs2
minu x7, x13, x1 # perform operation
RVTEST_SIGUPD(x5, x0, x7, 816)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0xfffffffffffffffe)
li x21, 0x00000000ffffffff # initialize rs1
li x1, 0xfffffffffffffffe # initialize rs2
minu x19, x21, x1 # perform operation
RVTEST_SIGUPD(x5, x0, x19, 824)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0x5bbc887763ae86f2)
li x4, 0x00000000ffffffff # initialize rs1
li x14, 0x5bbc887763ae86f2 # initialize rs2
minu x17, x4, x14 # perform operation
RVTEST_SIGUPD(x5, x0, x17, 832)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0xaaaaaaaaaaaaaaaa)
li x22, 0x00000000ffffffff # initialize rs1
li x17, 0xaaaaaaaaaaaaaaaa # initialize rs2
minu x1, x22, x17 # perform operation
RVTEST_SIGUPD(x5, x0, x1, 840)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0x5555555555555555)
li x26, 0x00000000ffffffff # initialize rs1
li x14, 0x5555555555555555 # initialize rs2
minu x13, x26, x14 # perform operation
RVTEST_SIGUPD(x5, x0, x13, 848)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0xffffffff)
li x30, 0x00000000ffffffff # initialize rs1
li x23, 0x00000000ffffffff # initialize rs2
minu x25, x30, x23 # perform operation
RVTEST_SIGUPD(x5, x0, x25, 856)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0xfffffffe)
li x9, 0x00000000ffffffff # initialize rs1
li x13, 0x00000000fffffffe # initialize rs2
minu x1, x9, x13 # perform operation
RVTEST_SIGUPD(x5, x0, x1, 864)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0x100000000)
li x7, 0x00000000ffffffff # initialize rs1
li x14, 0x0000000100000000 # initialize rs2
minu x8, x7, x14 # perform operation
RVTEST_SIGUPD(x5, x0, x8, 872)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0x100000001)
li x9, 0x00000000ffffffff # initialize rs1
li x8, 0x0000000100000001 # initialize rs2
minu x2, x9, x8 # perform operation
RVTEST_SIGUPD(x5, x0, x2, 880)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0x0)
li x24, 0x00000000fffffffe # initialize rs1
li x9, 0x0000000000000000 # initialize rs2
minu x4, x24, x9 # perform operation
RVTEST_SIGUPD(x5, x0, x4, 888)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0x1)
li x17, 0x00000000fffffffe # initialize rs1
li x2, 0x0000000000000001 # initialize rs2
minu x15, x17, x2 # perform operation
RVTEST_SIGUPD(x5, x0, x15, 896)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0x2)
li x11, 0x00000000fffffffe # initialize rs1
li x7, 0x0000000000000002 # initialize rs2
minu x21, x11, x7 # perform operation
RVTEST_SIGUPD(x5, x0, x21, 904)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0x8000000000000000)
li x8, 0x00000000fffffffe # initialize rs1
li x13, 0x8000000000000000 # initialize rs2
minu x21, x8, x13 # perform operation
RVTEST_SIGUPD(x5, x0, x21, 912)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0x8000000000000001)
li x29, 0x00000000fffffffe # initialize rs1
li x21, 0x8000000000000001 # initialize rs2
minu x27, x29, x21 # perform operation
RVTEST_SIGUPD(x5, x0, x27, 920)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0x7fffffffffffffff)
li x22, 0x00000000fffffffe # initialize rs1
li x12, 0x7fffffffffffffff # initialize rs2
minu x9, x22, x12 # perform operation
RVTEST_SIGUPD(x5, x0, x9, 928)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0x7ffffffffffffffe)
li x20, 0x00000000fffffffe # initialize rs1
li x29, 0x7ffffffffffffffe # initialize rs2
minu x21, x20, x29 # perform operation
RVTEST_SIGUPD(x5, x0, x21, 936)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0xffffffffffffffff)
li x17, 0x00000000fffffffe # initialize rs1
li x9, 0xffffffffffffffff # initialize rs2
minu x20, x17, x9 # perform operation
RVTEST_SIGUPD(x5, x0, x20, 944)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0xfffffffffffffffe)
li x7, 0x00000000fffffffe # initialize rs1
li x27, 0xfffffffffffffffe # initialize rs2
minu x1, x7, x27 # perform operation
RVTEST_SIGUPD(x5, x0, x1, 952)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0x5bbc887763ae86f2)
li x20, 0x00000000fffffffe # initialize rs1
li x9, 0x5bbc887763ae86f2 # initialize rs2
minu x17, x20, x9 # perform operation
RVTEST_SIGUPD(x5, x0, x17, 960)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0xaaaaaaaaaaaaaaaa)
li x1, 0x00000000fffffffe # initialize rs1
li x7, 0xaaaaaaaaaaaaaaaa # initialize rs2
minu x14, x1, x7 # perform operation
RVTEST_SIGUPD(x5, x0, x14, 968)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0x5555555555555555)
li x31, 0x00000000fffffffe # initialize rs1
li x25, 0x5555555555555555 # initialize rs2
minu x18, x31, x25 # perform operation
RVTEST_SIGUPD(x5, x0, x18, 976)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0xffffffff)
li x26, 0x00000000fffffffe # initialize rs1
li x25, 0x00000000ffffffff # initialize rs2
minu x9, x26, x25 # perform operation
RVTEST_SIGUPD(x5, x0, x9, 984)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0xfffffffe)
li x3, 0x00000000fffffffe # initialize rs1
li x11, 0x00000000fffffffe # initialize rs2
minu x6, x3, x11 # perform operation
RVTEST_SIGUPD(x5, x0, x6, 992)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0x100000000)
li x17, 0x00000000fffffffe # initialize rs1
li x19, 0x0000000100000000 # initialize rs2
minu x14, x17, x19 # perform operation
RVTEST_SIGUPD(x5, x0, x14, 1000)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0x100000001)
li x28, 0x00000000fffffffe # initialize rs1
li x14, 0x0000000100000001 # initialize rs2
minu x8, x28, x14 # perform operation
RVTEST_SIGUPD(x5, x0, x8, 1008)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0x0)
li x26, 0x0000000100000000 # initialize rs1
li x17, 0x0000000000000000 # initialize rs2
minu x8, x26, x17 # perform operation
RVTEST_SIGUPD(x5, x0, x8, 1016)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0x1)
li x13, 0x0000000100000000 # initialize rs1
li x9, 0x0000000000000001 # initialize rs2
minu x21, x13, x9 # perform operation
RVTEST_SIGUPD(x5, x0, x21, 1024)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0x2)
li x29, 0x0000000100000000 # initialize rs1
li x7, 0x0000000000000002 # initialize rs2
minu x16, x29, x7 # perform operation
RVTEST_SIGUPD(x5, x0, x16, 1032)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0x8000000000000000)
li x2, 0x0000000100000000 # initialize rs1
li x4, 0x8000000000000000 # initialize rs2
minu x18, x2, x4 # perform operation
RVTEST_SIGUPD(x5, x0, x18, 1040)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0x8000000000000001)
li x27, 0x0000000100000000 # initialize rs1
li x18, 0x8000000000000001 # initialize rs2
minu x19, x27, x18 # perform operation
RVTEST_SIGUPD(x5, x0, x19, 1048)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0x7fffffffffffffff)
li x15, 0x0000000100000000 # initialize rs1
li x4, 0x7fffffffffffffff # initialize rs2
minu x11, x15, x4 # perform operation
RVTEST_SIGUPD(x5, x0, x11, 1056)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0x7ffffffffffffffe)
li x17, 0x0000000100000000 # initialize rs1
li x24, 0x7ffffffffffffffe # initialize rs2
minu x10, x17, x24 # perform operation
RVTEST_SIGUPD(x5, x0, x10, 1064)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0xffffffffffffffff)
li x24, 0x0000000100000000 # initialize rs1
li x1, 0xffffffffffffffff # initialize rs2
minu x29, x24, x1 # perform operation
RVTEST_SIGUPD(x5, x0, x29, 1072)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0xfffffffffffffffe)
li x16, 0x0000000100000000 # initialize rs1
li x12, 0xfffffffffffffffe # initialize rs2
minu x23, x16, x12 # perform operation
RVTEST_SIGUPD(x5, x0, x23, 1080)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0x5bbc887763ae86f2)
li x17, 0x0000000100000000 # initialize rs1
li x25, 0x5bbc887763ae86f2 # initialize rs2
minu x31, x17, x25 # perform operation
RVTEST_SIGUPD(x5, x0, x31, 1088)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0xaaaaaaaaaaaaaaaa)
li x20, 0x0000000100000000 # initialize rs1
li x2, 0xaaaaaaaaaaaaaaaa # initialize rs2
minu x27, x20, x2 # perform operation
RVTEST_SIGUPD(x5, x0, x27, 1096)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0x5555555555555555)
li x30, 0x0000000100000000 # initialize rs1
li x22, 0x5555555555555555 # initialize rs2
minu x9, x30, x22 # perform operation
RVTEST_SIGUPD(x5, x0, x9, 1104)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0xffffffff)
li x18, 0x0000000100000000 # initialize rs1
li x14, 0x00000000ffffffff # initialize rs2
minu x7, x18, x14 # perform operation
RVTEST_SIGUPD(x5, x0, x7, 1112)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0xfffffffe)
li x10, 0x0000000100000000 # initialize rs1
li x6, 0x00000000fffffffe # initialize rs2
minu x8, x10, x6 # perform operation
RVTEST_SIGUPD(x5, x0, x8, 1120)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0x100000000)
li x8, 0x0000000100000000 # initialize rs1
li x20, 0x0000000100000000 # initialize rs2
minu x24, x8, x20 # perform operation
RVTEST_SIGUPD(x5, x0, x24, 1128)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0x100000001)
li x23, 0x0000000100000000 # initialize rs1
li x3, 0x0000000100000001 # initialize rs2
minu x10, x23, x3 # perform operation
RVTEST_SIGUPD(x5, x0, x10, 1136)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0x0)
li x20, 0x0000000100000001 # initialize rs1
li x7, 0x0000000000000000 # initialize rs2
minu x13, x20, x7 # perform operation
RVTEST_SIGUPD(x5, x0, x13, 1144)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0x1)
li x6, 0x0000000100000001 # initialize rs1
li x9, 0x0000000000000001 # initialize rs2
minu x20, x6, x9 # perform operation
RVTEST_SIGUPD(x5, x0, x20, 1152)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0x2)
li x31, 0x0000000100000001 # initialize rs1
li x1, 0x0000000000000002 # initialize rs2
minu x23, x31, x1 # perform operation
RVTEST_SIGUPD(x5, x0, x23, 1160)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0x8000000000000000)
li x4, 0x0000000100000001 # initialize rs1
li x23, 0x8000000000000000 # initialize rs2
minu x2, x4, x23 # perform operation
RVTEST_SIGUPD(x5, x0, x2, 1168)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0x8000000000000001)
li x14, 0x0000000100000001 # initialize rs1
li x30, 0x8000000000000001 # initialize rs2
minu x29, x14, x30 # perform operation
RVTEST_SIGUPD(x5, x0, x29, 1176)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0x7fffffffffffffff)
li x13, 0x0000000100000001 # initialize rs1
li x21, 0x7fffffffffffffff # initialize rs2
minu x11, x13, x21 # perform operation
RVTEST_SIGUPD(x5, x0, x11, 1184)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0x7ffffffffffffffe)
li x19, 0x0000000100000001 # initialize rs1
li x7, 0x7ffffffffffffffe # initialize rs2
minu x24, x19, x7 # perform operation
RVTEST_SIGUPD(x5, x0, x24, 1192)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0xffffffffffffffff)
li x1, 0x0000000100000001 # initialize rs1
li x27, 0xffffffffffffffff # initialize rs2
minu x29, x1, x27 # perform operation
RVTEST_SIGUPD(x5, x0, x29, 1200)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0xfffffffffffffffe)
li x14, 0x0000000100000001 # initialize rs1
li x19, 0xfffffffffffffffe # initialize rs2
minu x3, x14, x19 # perform operation
RVTEST_SIGUPD(x5, x0, x3, 1208)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0x5bbc887763ae86f2)
li x1, 0x0000000100000001 # initialize rs1
li x31, 0x5bbc887763ae86f2 # initialize rs2
minu x9, x1, x31 # perform operation
RVTEST_SIGUPD(x5, x0, x9, 1216)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0xaaaaaaaaaaaaaaaa)
li x11, 0x0000000100000001 # initialize rs1
li x25, 0xaaaaaaaaaaaaaaaa # initialize rs2
minu x19, x11, x25 # perform operation
RVTEST_SIGUPD(x5, x0, x19, 1224)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0x5555555555555555)
li x29, 0x0000000100000001 # initialize rs1
li x26, 0x5555555555555555 # initialize rs2
minu x2, x29, x26 # perform operation
RVTEST_SIGUPD(x5, x0, x2, 1232)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0xffffffff)
li x12, 0x0000000100000001 # initialize rs1
li x26, 0x00000000ffffffff # initialize rs2
minu x8, x12, x26 # perform operation
RVTEST_SIGUPD(x5, x0, x8, 1240)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0xfffffffe)
li x3, 0x0000000100000001 # initialize rs1
li x16, 0x00000000fffffffe # initialize rs2
minu x21, x3, x16 # perform operation
RVTEST_SIGUPD(x5, x0, x21, 1248)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0x100000000)
li x18, 0x0000000100000001 # initialize rs1
li x8, 0x0000000100000000 # initialize rs2
minu x6, x18, x8 # perform operation
RVTEST_SIGUPD(x5, x0, x6, 1256)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0x100000001)
li x7, 0x0000000100000001 # initialize rs1
li x24, 0x0000000100000001 # initialize rs2
minu x18, x7, x24 # perform operation
RVTEST_SIGUPD(x5, x0, x18, 1264)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x0)
li x0, 0x4f7b9fe0b9a70e1a # initialize rs1
li x0, 0xfdbbb01090ab3365 # initialize rs2
minu x30, x0, x0 # perform operation
RVTEST_SIGUPD(x5, x0, x30, 1272)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x1)
li x1, 0x3d6db5d8017d4771 # initialize rs1
li x1, 0xf868dd134db869e4 # initialize rs2
minu x16, x1, x1 # perform operation
RVTEST_SIGUPD(x5, x0, x16, 1280)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x2)
li x2, 0xd3a334e7192d4fc7 # initialize rs1
li x2, 0x3b902022d75ff009 # initialize rs2
minu x30, x2, x2 # perform operation
RVTEST_SIGUPD(x5, x0, x30, 1288)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x3)
li x3, 0xc477c3073abf7952 # initialize rs1
li x3, 0x9d57883a05733fa4 # initialize rs2
minu x11, x3, x3 # perform operation
RVTEST_SIGUPD(x5, x0, x11, 1296)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x4)
li x4, 0x8aeb1dccd049b68e # initialize rs1
li x4, 0xcd5cd21833b696c6 # initialize rs2
minu x31, x4, x4 # perform operation
RVTEST_SIGUPD(x5, x0, x31, 1304)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x5)
mv x6, x5 # switch signature pointer register to avoid conflict with test
li x5, 0x2094f19e38b10fdd # initialize rs1
li x5, 0xb02c6398ccd50748 # initialize rs2
minu x28, x5, x5 # perform operation
RVTEST_SIGUPD(x6, x0, x28, 1312)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x6)
mv x7, x6 # switch signature pointer register to avoid conflict with test
li x6, 0x6f58e1b6c9c62f2c # initialize rs1
li x6, 0x9d8d1f89bbb7a9fa # initialize rs2
minu x31, x6, x6 # perform operation
RVTEST_SIGUPD(x7, x0, x31, 1320)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x7)
mv x5, x7 # switch signature pointer register to avoid conflict with test
li x7, 0x4ee6e961b50e4b57 # initialize rs1
li x7, 0xd7940905bb95572a # initialize rs2
minu x4, x7, x7 # perform operation
RVTEST_SIGUPD(x5, x0, x4, 1328)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x8)
li x8, 0x1ede37be54ee9ca2 # initialize rs1
li x8, 0xc8010033c1c10020 # initialize rs2
minu x23, x8, x8 # perform operation
RVTEST_SIGUPD(x5, x0, x23, 1336)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x9)
li x9, 0x8e260f49bd4307c3 # initialize rs1
li x9, 0xf9ae176ef2c62303 # initialize rs2
minu x23, x9, x9 # perform operation
RVTEST_SIGUPD(x5, x0, x23, 1344)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x10)
li x10, 0xa75a369973334d02 # initialize rs1
li x10, 0xb91cb5cd2f250026 # initialize rs2
minu x11, x10, x10 # perform operation
RVTEST_SIGUPD(x5, x0, x11, 1352)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x11)
li x11, 0xb52f74b63e23b1c1 # initialize rs1
li x11, 0x4a1bd93ef38252f8 # initialize rs2
minu x11, x11, x11 # perform operation
RVTEST_SIGUPD(x5, x0, x11, 1360)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x12)
li x12, 0x153e2a866717dc38 # initialize rs1
li x12, 0x9f24ac342414f011 # initialize rs2
minu x13, x12, x12 # perform operation
RVTEST_SIGUPD(x5, x0, x13, 1368)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x13)
li x13, 0x106e52eadd25639a # initialize rs1
li x13, 0x2e4f13aa0c804f81 # initialize rs2
minu x28, x13, x13 # perform operation
RVTEST_SIGUPD(x5, x0, x28, 1376)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x14)
li x14, 0x1e8db60349f819cc # initialize rs1
li x14, 0x3762db643c4494f4 # initialize rs2
minu x8, x14, x14 # perform operation
RVTEST_SIGUPD(x5, x0, x8, 1384)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x15)
li x15, 0x28b05b54a4354f6e # initialize rs1
li x15, 0xf83f3b7100aabdc5 # initialize rs2
minu x8, x15, x15 # perform operation
RVTEST_SIGUPD(x5, x0, x8, 1392)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x16)
li x16, 0x7f5c44ca57336f50 # initialize rs1
li x16, 0x8f0737d7ad85bdc9 # initialize rs2
minu x11, x16, x16 # perform operation
RVTEST_SIGUPD(x5, x0, x11, 1400)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x17)
li x17, 0x358e71214cfbdcb2 # initialize rs1
li x17, 0x8d22069a9c75b010 # initialize rs2
minu x11, x17, x17 # perform operation
RVTEST_SIGUPD(x5, x0, x11, 1408)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x18)
li x18, 0x16b109d499e5c9ee # initialize rs1
li x18, 0x0c85a4c2683833de # initialize rs2
minu x18, x18, x18 # perform operation
RVTEST_SIGUPD(x5, x0, x18, 1416)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x19)
li x19, 0x30608b83d42f8611 # initialize rs1
li x19, 0x181c88be570e541e # initialize rs2
minu x25, x19, x19 # perform operation
RVTEST_SIGUPD(x5, x0, x25, 1424)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x20)
li x20, 0xb30f08937027f1e6 # initialize rs1
li x20, 0x93e3c1655dbbd984 # initialize rs2
minu x20, x20, x20 # perform operation
RVTEST_SIGUPD(x5, x0, x20, 1432)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x21)
li x21, 0x7c83a3f4be018e67 # initialize rs1
li x21, 0xe9be653f8c28889f # initialize rs2
minu x14, x21, x21 # perform operation
RVTEST_SIGUPD(x5, x0, x14, 1440)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x22)
li x22, 0xa631ada0d3ed7644 # initialize rs1
li x22, 0x7674aefcb7695ca4 # initialize rs2
minu x21, x22, x22 # perform operation
RVTEST_SIGUPD(x5, x0, x21, 1448)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x23)
li x23, 0xcf830288be699161 # initialize rs1
li x23, 0x5767c335982e7995 # initialize rs2
minu x1, x23, x23 # perform operation
RVTEST_SIGUPD(x5, x0, x1, 1456)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x24)
li x24, 0xa223e15c74316eca # initialize rs1
li x24, 0x41efb99086b9654c # initialize rs2
minu x31, x24, x24 # perform operation
RVTEST_SIGUPD(x5, x0, x31, 1464)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x25)
li x25, 0x164c0ff05eee6b8f # initialize rs1
li x25, 0xde7888b575e8b5a2 # initialize rs2
minu x24, x25, x25 # perform operation
RVTEST_SIGUPD(x5, x0, x24, 1472)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x26)
li x26, 0x8ff1d3f92aee19b7 # initialize rs1
li x26, 0xb599e15099125465 # initialize rs2
minu x14, x26, x26 # perform operation
RVTEST_SIGUPD(x5, x0, x14, 1480)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x27)
li x27, 0x023214c76efadd20 # initialize rs1
li x27, 0x178d95bb11079ad7 # initialize rs2
minu x21, x27, x27 # perform operation
RVTEST_SIGUPD(x5, x0, x21, 1488)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x28)
li x28, 0xedbcddb2e6b9d7bc # initialize rs1
li x28, 0x783a09add53cf00c # initialize rs2
minu x20, x28, x28 # perform operation
RVTEST_SIGUPD(x5, x0, x20, 1496)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x29)
li x29, 0xdb50f55d60dced38 # initialize rs1
li x29, 0xee2a992fbd5829a7 # initialize rs2
minu x20, x29, x29 # perform operation
RVTEST_SIGUPD(x5, x0, x20, 1504)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x30)
li x30, 0xf8e53a7d3c1ef867 # initialize rs1
li x30, 0x2bee134fd5c731c1 # initialize rs2
minu x15, x30, x30 # perform operation
RVTEST_SIGUPD(x5, x0, x15, 1512)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x31)
li x31, 0x74a9b7bc5182aa04 # initialize rs1
li x31, 0xc2e0ba0c42583ca0 # initialize rs2
minu x8, x31, x31 # perform operation
RVTEST_SIGUPD(x5, x0, x8, 1520)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x0)
li x0, 0x64365ca46d8e42d8 # initialize rs1
li x19, 0xc326e3fe2eb9071f # initialize rs2
minu x0, x0, x19 # perform operation
RVTEST_SIGUPD(x5, x0, x0, 1528)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x1)
li x1, 0x514a6016c25201e4 # initialize rs1
li x28, 0x2439418dcf747c1e # initialize rs2
minu x1, x1, x28 # perform operation
RVTEST_SIGUPD(x5, x0, x1, 1536)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x2)
li x2, 0x7f5cb9b116182537 # initialize rs1
li x28, 0xe180de2361940a3d # initialize rs2
minu x2, x2, x28 # perform operation
RVTEST_SIGUPD(x5, x0, x2, 1544)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x3)
li x3, 0x1f4cf08c5271a471 # initialize rs1
li x28, 0xa65ee189b2dc5501 # initialize rs2
minu x3, x3, x28 # perform operation
RVTEST_SIGUPD(x5, x0, x3, 1552)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x4)
li x4, 0x273686cc3fa86d09 # initialize rs1
li x9, 0x0053c31e380fc215 # initialize rs2
minu x4, x4, x9 # perform operation
RVTEST_SIGUPD(x5, x0, x4, 1560)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x5)
mv x6, x5 # switch signature pointer register to avoid conflict with test
li x5, 0x8923806c94f26a0a # initialize rs1
li x4, 0x1e229489c5525a41 # initialize rs2
minu x5, x5, x4 # perform operation
RVTEST_SIGUPD(x6, x0, x5, 1568)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x6)
mv x7, x6 # switch signature pointer register to avoid conflict with test
li x6, 0xcbe95caa7d5e05c7 # initialize rs1
li x21, 0x6557291acadc36ec # initialize rs2
minu x6, x6, x21 # perform operation
RVTEST_SIGUPD(x7, x0, x6, 1576)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x7)
mv x5, x7 # switch signature pointer register to avoid conflict with test
li x7, 0x80ea7d1d7a262d51 # initialize rs1
li x4, 0xfd7f88b261a6d34a # initialize rs2
minu x7, x7, x4 # perform operation
RVTEST_SIGUPD(x5, x0, x7, 1584)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x8)
li x8, 0xf97ff39ec23dcb84 # initialize rs1
li x9, 0x81779117cacf6a60 # initialize rs2
minu x8, x8, x9 # perform operation
RVTEST_SIGUPD(x5, x0, x8, 1592)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x9)
li x9, 0xf629414408ca879f # initialize rs1
li x12, 0x4aafb7e3df0358de # initialize rs2
minu x9, x9, x12 # perform operation
RVTEST_SIGUPD(x5, x0, x9, 1600)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x10)
li x10, 0x5602a5426ae6d043 # initialize rs1
li x20, 0xfe6cbdd8136bfeb5 # initialize rs2
minu x10, x10, x20 # perform operation
RVTEST_SIGUPD(x5, x0, x10, 1608)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x11)
li x11, 0x2c2e7acabe11009a # initialize rs1
li x25, 0x8384a4b8cc2cdc0f # initialize rs2
minu x11, x11, x25 # perform operation
RVTEST_SIGUPD(x5, x0, x11, 1616)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x12)
li x12, 0xc1dd014eccd06063 # initialize rs1
li x17, 0x9fd0b2077a301c4d # initialize rs2
minu x12, x12, x17 # perform operation
RVTEST_SIGUPD(x5, x0, x12, 1624)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x13)
li x13, 0x42cdd55f7b276614 # initialize rs1
li x10, 0x0d8e8b789a588941 # initialize rs2
minu x13, x13, x10 # perform operation
RVTEST_SIGUPD(x5, x0, x13, 1632)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x14)
li x14, 0x57d3438be1a8c06a # initialize rs1
li x12, 0x648e92b61b8a8e53 # initialize rs2
minu x14, x14, x12 # perform operation
RVTEST_SIGUPD(x5, x0, x14, 1640)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x15)
li x15, 0x8b0b608ca7b4d3fc # initialize rs1
li x10, 0x5ff70fc93652a517 # initialize rs2
minu x15, x15, x10 # perform operation
RVTEST_SIGUPD(x5, x0, x15, 1648)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x16)
li x16, 0xde2464d47d376d9f # initialize rs1
li x4, 0x6226bcc760983225 # initialize rs2
minu x16, x16, x4 # perform operation
RVTEST_SIGUPD(x5, x0, x16, 1656)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x17)
li x17, 0xecbfc40a57c1bc98 # initialize rs1
li x4, 0x46ac7ef87d7506e8 # initialize rs2
minu x17, x17, x4 # perform operation
RVTEST_SIGUPD(x5, x0, x17, 1664)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x18)
li x18, 0x5282d0fa29d157c4 # initialize rs1
li x31, 0x29b96726a9f3487b # initialize rs2
minu x18, x18, x31 # perform operation
RVTEST_SIGUPD(x5, x0, x18, 1672)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x19)
li x19, 0x40263745a231617b # initialize rs1
li x27, 0x94877693f7fb9d87 # initialize rs2
minu x19, x19, x27 # perform operation
RVTEST_SIGUPD(x5, x0, x19, 1680)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x20)
li x20, 0xb35c16f9cfdcc49e # initialize rs1
li x22, 0x3eda018dc6db623f # initialize rs2
minu x20, x20, x22 # perform operation
RVTEST_SIGUPD(x5, x0, x20, 1688)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x21)
li x21, 0xd9726248bb648680 # initialize rs1
li x8, 0xe097661f4c07cc32 # initialize rs2
minu x21, x21, x8 # perform operation
RVTEST_SIGUPD(x5, x0, x21, 1696)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x22)
li x22, 0x04f6019d122a2dac # initialize rs1
li x12, 0x961cd7497545407f # initialize rs2
minu x22, x22, x12 # perform operation
RVTEST_SIGUPD(x5, x0, x22, 1704)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x23)
li x23, 0xee85c842faa6c090 # initialize rs1
li x30, 0x4ae64274a62a7136 # initialize rs2
minu x23, x23, x30 # perform operation
RVTEST_SIGUPD(x5, x0, x23, 1712)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x24)
li x24, 0x286d1b4c246e35ea # initialize rs1
li x10, 0xa8f19f58bec613f4 # initialize rs2
minu x24, x24, x10 # perform operation
RVTEST_SIGUPD(x5, x0, x24, 1720)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x25)
li x25, 0xc31c22a87534185e # initialize rs1
li x18, 0xad8b7fa02db8bfe4 # initialize rs2
minu x25, x25, x18 # perform operation
RVTEST_SIGUPD(x5, x0, x25, 1728)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x26)
li x26, 0x8173814f981dd319 # initialize rs1
li x4, 0xa293166e7774b0bd # initialize rs2
minu x26, x26, x4 # perform operation
RVTEST_SIGUPD(x5, x0, x26, 1736)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x27)
li x27, 0xab146aebc168a807 # initialize rs1
li x26, 0x5e4a5f352dea3589 # initialize rs2
minu x27, x27, x26 # perform operation
RVTEST_SIGUPD(x5, x0, x27, 1744)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x28)
li x28, 0x616e3de30ea61470 # initialize rs1
li x1, 0xaee8f69cc9546fd5 # initialize rs2
minu x28, x28, x1 # perform operation
RVTEST_SIGUPD(x5, x0, x28, 1752)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x29)
li x29, 0x4f4e819a28b53bb7 # initialize rs1
li x24, 0xd785a09b423be1b1 # initialize rs2
minu x29, x29, x24 # perform operation
RVTEST_SIGUPD(x5, x0, x29, 1760)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x30)
li x30, 0x2607d42c9946fdd9 # initialize rs1
li x3, 0x8c8ba0a356c913e9 # initialize rs2
minu x30, x30, x3 # perform operation
RVTEST_SIGUPD(x5, x0, x30, 1768)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x31)
li x31, 0x7a56db6ce16bde8a # initialize rs1
li x4, 0x0e876daf0854a496 # initialize rs2
minu x31, x31, x4 # perform operation
RVTEST_SIGUPD(x5, x0, x31, 1776)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x0)
li x11, 0xaa685624155124eb # initialize rs1
li x0, 0xe01fdc66cb47537a # initialize rs2
minu x0, x11, x0 # perform operation
RVTEST_SIGUPD(x5, x0, x0, 1784)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x1)
li x3, 0xb1a00deca60d6cf3 # initialize rs1
li x1, 0xdbd27ca81d312874 # initialize rs2
minu x1, x3, x1 # perform operation
RVTEST_SIGUPD(x5, x0, x1, 1792)
addi x5, x5, 1800 # increment signature pointer and reset offset

# Testcase cmp_rd_rs2 (Test rd = rs2 = x2)
li x9, 0xdf92b9deef094eb5 # initialize rs1
li x2, 0xba157c8bf720efa1 # initialize rs2
minu x2, x9, x2 # perform operation
RVTEST_SIGUPD(x5, x0, x2, 0)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x3)
li x27, 0xd9229738516d2451 # initialize rs1
li x3, 0xd0f84c72508ee411 # initialize rs2
minu x3, x27, x3 # perform operation
RVTEST_SIGUPD(x5, x0, x3, 8)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x4)
li x27, 0xedb18a54ebe42b3d # initialize rs1
li x4, 0x5f50f4c5b3a0832f # initialize rs2
minu x4, x27, x4 # perform operation
RVTEST_SIGUPD(x5, x0, x4, 16)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x5)
mv x6, x5 # switch signature pointer register to avoid conflict with test
li x7, 0xc483dd863c666ec7 # initialize rs1
li x5, 0xd083aff47005a39c # initialize rs2
minu x5, x7, x5 # perform operation
RVTEST_SIGUPD(x6, x0, x5, 24)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x6)
mv x7, x6 # switch signature pointer register to avoid conflict with test
li x20, 0x83d9d75185492f4f # initialize rs1
li x6, 0x739989ba5fe7b8a4 # initialize rs2
minu x6, x20, x6 # perform operation
RVTEST_SIGUPD(x7, x0, x6, 32)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x7)
mv x4, x7 # switch signature pointer register to avoid conflict with test
li x3, 0xf00cf09cafea42a1 # initialize rs1
li x7, 0x1cd1da06a6b70dfa # initialize rs2
minu x7, x3, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 40)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x8)
li x11, 0x6f58b84761f3e541 # initialize rs1
li x8, 0x95f3970bf8e4415e # initialize rs2
minu x8, x11, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 48)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x9)
li x30, 0xbdbf883987e005a1 # initialize rs1
li x9, 0xd5172fa8662f4f96 # initialize rs2
minu x9, x30, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 56)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x10)
li x24, 0x00dd8913219f4bec # initialize rs1
li x10, 0x85e54a9c4ae25d84 # initialize rs2
minu x10, x24, x10 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 64)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x11)
li x1, 0x2ac33d5c400e719e # initialize rs1
li x11, 0x5b633fe5dedbbe38 # initialize rs2
minu x11, x1, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 72)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x12)
li x25, 0xfdb3aa5f5939b0a6 # initialize rs1
li x12, 0x98054c69f0f666df # initialize rs2
minu x12, x25, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 80)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x13)
li x8, 0xcd9f5918fe150f9f # initialize rs1
li x13, 0x647b65772b91b751 # initialize rs2
minu x13, x8, x13 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 88)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x14)
li x21, 0x06d5c16f7fdc6ca7 # initialize rs1
li x14, 0xc01467956e422fff # initialize rs2
minu x14, x21, x14 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 96)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x15)
li x30, 0x17cfaf7567b8caaf # initialize rs1
li x15, 0x1b30ed9328fd2bda # initialize rs2
minu x15, x30, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 104)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x16)
li x30, 0xedaaacd1d2b61717 # initialize rs1
li x16, 0x4574c3d5b667475d # initialize rs2
minu x16, x30, x16 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 112)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x17)
li x24, 0x9348122f693364c0 # initialize rs1
li x17, 0xccad32007ecb3c37 # initialize rs2
minu x17, x24, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 120)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x18)
li x29, 0xc7c40c43907be507 # initialize rs1
li x18, 0xc8aa380ec5436452 # initialize rs2
minu x18, x29, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 128)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x19)
li x18, 0x90200bd61fdad8ce # initialize rs1
li x19, 0x89160dbdfb5c419c # initialize rs2
minu x19, x18, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 136)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x20)
li x25, 0x7a305848f2c26fb6 # initialize rs1
li x20, 0xf409e3d925e9ac81 # initialize rs2
minu x20, x25, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 144)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x21)
li x13, 0xa33718362b4f9e40 # initialize rs1
li x21, 0x4f65ab64634f6dbc # initialize rs2
minu x21, x13, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 152)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x22)
li x3, 0x9e7122101e55c38b # initialize rs1
li x22, 0x3287702b6ac33a2a # initialize rs2
minu x22, x3, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 160)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x23)
li x5, 0x04d477a7e661aa76 # initialize rs1
li x23, 0x65c6f0489feaaaf8 # initialize rs2
minu x23, x5, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 168)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x24)
li x16, 0xa88d47f42eb94398 # initialize rs1
li x24, 0x1faa213a311e7598 # initialize rs2
minu x24, x16, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 176)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x25)
li x21, 0x4b7ca02b8fee9c94 # initialize rs1
li x25, 0xfc0faba420fbc58c # initialize rs2
minu x25, x21, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 184)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x26)
li x13, 0xa1ad4b10eab5568a # initialize rs1
li x26, 0xf8577cfb52cce0df # initialize rs2
minu x26, x13, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 192)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x27)
li x5, 0x59178d598f3cc2f9 # initialize rs1
li x27, 0x964a826214161779 # initialize rs2
minu x27, x5, x27 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 200)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x28)
li x28, 0xe75b6ba4cdf97656 # initialize rs1
li x28, 0x25a65570f21ad408 # initialize rs2
minu x28, x28, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x28, 208)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x29)
li x25, 0x2993c4b41b7b5276 # initialize rs1
li x29, 0x8accb326d4486f61 # initialize rs2
minu x29, x25, x29 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 216)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x30)
li x22, 0xf5a73aa6c06f82a9 # initialize rs1
li x30, 0x55d1a34236b0da23 # initialize rs2
minu x30, x22, x30 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 224)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x31)
li x15, 0x9da790f80f33d4aa # initialize rs1
li x31, 0x17a23a6bea2213d4 # initialize rs2
minu x31, x15, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 232)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x0)
li x0, 0x728c58e98f56f590 # initialize rs1
li x0, 0xec64d9c9bf927163 # initialize rs2
minu x0, x0, x0 # perform operation
RVTEST_SIGUPD(x4, x0, x0, 240)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x1)
li x1, 0x594f4c7a533d03d5 # initialize rs1
li x1, 0xe653f6c9f5218c2f # initialize rs2
minu x1, x1, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 248)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x2)
li x2, 0x727aed77ae03c91b # initialize rs1
li x2, 0xf3feac4d5f2a6fcd # initialize rs2
minu x2, x2, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 256)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x3)
li x3, 0xc173c1e3ba7abda8 # initialize rs1
li x3, 0xaac7495f2de55b3e # initialize rs2
minu x3, x3, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 264)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x4)
mv x5, x4 # switch signature pointer register to avoid conflict with test
li x4, 0x8f7390c584b0f9ed # initialize rs1
li x4, 0x81da5ccc4dc2082c # initialize rs2
minu x4, x4, x4 # perform operation
RVTEST_SIGUPD(x5, x0, x4, 272)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x5)
mv x6, x5 # switch signature pointer register to avoid conflict with test
li x5, 0x79052874680234b6 # initialize rs1
li x5, 0x3f759a56d0e20c12 # initialize rs2
minu x5, x5, x5 # perform operation
RVTEST_SIGUPD(x6, x0, x5, 280)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x6)
mv x7, x6 # switch signature pointer register to avoid conflict with test
li x6, 0x5cd30cae40e24fe1 # initialize rs1
li x6, 0x403c3782a11b8b98 # initialize rs2
minu x6, x6, x6 # perform operation
RVTEST_SIGUPD(x7, x0, x6, 288)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x7)
mv x4, x7 # switch signature pointer register to avoid conflict with test
li x7, 0x71e48098423963d2 # initialize rs1
li x7, 0x301c3156d4a419cf # initialize rs2
minu x7, x7, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 296)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x8)
li x8, 0x3a79031a661b75b9 # initialize rs1
li x8, 0xd196d190ad7e1bbe # initialize rs2
minu x8, x8, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 304)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x9)
li x9, 0x821442df63be7afe # initialize rs1
li x9, 0xf973e7b436c64cab # initialize rs2
minu x9, x9, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 312)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x10)
li x10, 0xb079fc537b7f661e # initialize rs1
li x10, 0xaf3bd2953c04952e # initialize rs2
minu x10, x10, x10 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 320)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x11)
li x11, 0xb78aa217fba3181d # initialize rs1
li x11, 0x142427e605d92dff # initialize rs2
minu x11, x11, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 328)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x12)
li x12, 0x99fd2fef240979ba # initialize rs1
li x12, 0xf84c414e38c84da4 # initialize rs2
minu x12, x12, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 336)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x13)
li x13, 0xc555ebe2a36852f7 # initialize rs1
li x13, 0x5234a5e6d91a08a5 # initialize rs2
minu x13, x13, x13 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 344)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x14)
li x14, 0x88b2dfcc84dfa825 # initialize rs1
li x14, 0x009877b177693c04 # initialize rs2
minu x14, x14, x14 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 352)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x15)
li x15, 0x3a62cf15ac0ac176 # initialize rs1
li x15, 0x250e5b9ef775ad92 # initialize rs2
minu x15, x15, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 360)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x16)
li x16, 0x768f66424510a95c # initialize rs1
li x16, 0xe85d39ef395a5b26 # initialize rs2
minu x16, x16, x16 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 368)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x17)
li x17, 0xacef106897b8b886 # initialize rs1
li x17, 0xc7d88cad79a6974b # initialize rs2
minu x17, x17, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 376)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x18)
li x18, 0x40bb30bb52119209 # initialize rs1
li x18, 0xdd774563907e3728 # initialize rs2
minu x18, x18, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 384)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x19)
li x19, 0x7b9e589b1ed8569b # initialize rs1
li x19, 0x843b0c25094384c0 # initialize rs2
minu x19, x19, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 392)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x20)
li x20, 0x54d9aaf54eeba255 # initialize rs1
li x20, 0x2aa650bb41ef01bb # initialize rs2
minu x20, x20, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 400)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x21)
li x21, 0x1aac07323680139f # initialize rs1
li x21, 0xd5d1fbd783d59c24 # initialize rs2
minu x21, x21, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 408)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x22)
li x22, 0xfdfe054981058184 # initialize rs1
li x22, 0x70d85d7045ad2222 # initialize rs2
minu x22, x22, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 416)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x23)
li x23, 0xdac86aa67f88594a # initialize rs1
li x23, 0xe333d7c69f267147 # initialize rs2
minu x23, x23, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 424)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x24)
li x24, 0x2d297e86015fd0b3 # initialize rs1
li x24, 0x828899558d661139 # initialize rs2
minu x24, x24, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 432)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x25)
li x25, 0x26bf0ada57fa20fd # initialize rs1
li x25, 0x43928ea4d41fd590 # initialize rs2
minu x25, x25, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 440)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x26)
li x26, 0x611bf8fef1a40411 # initialize rs1
li x26, 0x1681aa218060ca12 # initialize rs2
minu x26, x26, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 448)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x27)
li x27, 0xca2d229d7c77f521 # initialize rs1
li x27, 0x828dcc94e0c0d232 # initialize rs2
minu x27, x27, x27 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 456)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x28)
li x28, 0xfaee4ea023749ea6 # initialize rs1
li x28, 0x38d6c6fe3701fec0 # initialize rs2
minu x28, x28, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x28, 464)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x29)
li x29, 0x5deb429b2a53d420 # initialize rs1
li x29, 0x9b85898fd4a8cc0e # initialize rs2
minu x29, x29, x29 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 472)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x30)
li x30, 0xb1aa31f015401115 # initialize rs1
li x30, 0xdecbd4ad6f847a89 # initialize rs2
minu x30, x30, x30 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 480)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x31)
li x31, 0x63093ace0762a457 # initialize rs1
li x31, 0x8cd06bfeb7a2211c # initialize rs2
minu x31, x31, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 488)

# Testcase cp_gpr/fpr_hazard nohaz test
add x2, x26, x21 # perform first operation
minu x29, x12, x1 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard nohaz test
add x21, x25, x23 # perform first operation
minu x8, x20, x6 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard nohaz test
add x18, x5, x13 # perform first operation
minu x6, x8, x9 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard raw test
add x25, x19, x26 # perform first operation
minu x16, x25, x20 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard raw test
add x26, x30, x18 # perform first operation
minu x30, x21, x26 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard raw test
add x30, x18, x9 # perform first operation
minu x18, x23, x28 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard waw test
add x27, x24, x31 # perform first operation
minu x27, x3, x2 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard waw test
add x22, x31, x11 # perform first operation
minu x22, x29, x30 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard waw test
add x31, x16, x6 # perform first operation
minu x31, x14, x8 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard war test
add x21, x12, x1 # perform first operation
minu x12, x6, x7 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard war test
add x15, x1, x2 # perform first operation
minu x2, x16, x8 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard war test
add x31, x9, x22 # perform first operation
minu x11, x24, x14 # perform second (triggering) operation

#.EQU SIGSIZE,4096


// ******************
// Tests from: WALLY-COV-ctz.S
// ******************


# initialize signature pointer
la x4, begin_signature

    
# Testcase cp_rs1 (Test source rs1 = x0)
li x0, 0xce66f6c575c8251a # initialize rs1
ctz x21, x0 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 0)

# Testcase cp_rs1 (Test source rs1 = x1)
li x1, 0x54758662fbb05d37 # initialize rs1
ctz x31, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 8)

# Testcase cp_rs1 (Test source rs1 = x2)
li x2, 0xc4f49fe5647e5837 # initialize rs1
ctz x26, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 16)

# Testcase cp_rs1 (Test source rs1 = x3)
li x3, 0x55c0decd0ffdb2b4 # initialize rs1
ctz x16, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 24)

# Testcase cp_rs1 (Test source rs1 = x4)
mv x6, x4 # switch signature pointer register to avoid conflict with test
li x4, 0xf9f0e560c345b32d # initialize rs1
ctz x5, x4 # perform operation
RVTEST_SIGUPD(x6, x0, x5, 32)

# Testcase cp_rs1 (Test source rs1 = x5)
li x5, 0x87f7aafcdde21b17 # initialize rs1
ctz x29, x5 # perform operation
RVTEST_SIGUPD(x6, x0, x29, 40)

# Testcase cp_rs1 (Test source rs1 = x6)
mv x7, x6 # switch signature pointer register to avoid conflict with test
li x6, 0xb755cca8f5fd7785 # initialize rs1
ctz x28, x6 # perform operation
RVTEST_SIGUPD(x7, x0, x28, 48)

# Testcase cp_rs1 (Test source rs1 = x7)
mv x4, x7 # switch signature pointer register to avoid conflict with test
li x7, 0xeb15aa2b0d600d77 # initialize rs1
ctz x28, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x28, 56)

# Testcase cp_rs1 (Test source rs1 = x8)
li x8, 0x28f6447eb5edf979 # initialize rs1
ctz x12, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 64)

# Testcase cp_rs1 (Test source rs1 = x9)
li x9, 0x04dccec34413a06e # initialize rs1
ctz x3, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 72)

# Testcase cp_rs1 (Test source rs1 = x10)
li x10, 0x57179282ae7fe0a1 # initialize rs1
ctz x22, x10 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 80)

# Testcase cp_rs1 (Test source rs1 = x11)
li x11, 0x88e0befaf8268eb3 # initialize rs1
ctz x9, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 88)

# Testcase cp_rs1 (Test source rs1 = x12)
li x12, 0x92e6317dd3b83961 # initialize rs1
ctz x6, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x6, 96)

# Testcase cp_rs1 (Test source rs1 = x13)
li x13, 0x25d3a765c22ed178 # initialize rs1
ctz x27, x13 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 104)

# Testcase cp_rs1 (Test source rs1 = x14)
li x14, 0x55a3868825ea7252 # initialize rs1
ctz x20, x14 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 112)

# Testcase cp_rs1 (Test source rs1 = x15)
li x15, 0x2b26a630def2a18c # initialize rs1
ctz x30, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 120)

# Testcase cp_rs1 (Test source rs1 = x16)
li x16, 0x380f33cab5284ce0 # initialize rs1
ctz x23, x16 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 128)

# Testcase cp_rs1 (Test source rs1 = x17)
li x17, 0xed52ba2132615e38 # initialize rs1
ctz x23, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 136)

# Testcase cp_rs1 (Test source rs1 = x18)
li x18, 0xbcfc4d7372478d62 # initialize rs1
ctz x20, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 144)

# Testcase cp_rs1 (Test source rs1 = x19)
li x19, 0x7aa3eb4ad2ff6dbd # initialize rs1
ctz x25, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 152)

# Testcase cp_rs1 (Test source rs1 = x20)
li x20, 0xda42fe7f63d1b131 # initialize rs1
ctz x6, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x6, 160)

# Testcase cp_rs1 (Test source rs1 = x21)
li x21, 0x3cf80b9b62f27f6c # initialize rs1
ctz x7, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 168)

# Testcase cp_rs1 (Test source rs1 = x22)
li x22, 0x830169682c4add83 # initialize rs1
ctz x19, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 176)

# Testcase cp_rs1 (Test source rs1 = x23)
li x23, 0xf2d259b992171905 # initialize rs1
ctz x24, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 184)

# Testcase cp_rs1 (Test source rs1 = x24)
li x24, 0x63398284c03c1490 # initialize rs1
ctz x3, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 192)

# Testcase cp_rs1 (Test source rs1 = x25)
li x25, 0x7e9924d47c8344cf # initialize rs1
ctz x10, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 200)

# Testcase cp_rs1 (Test source rs1 = x26)
li x26, 0x01cd46b26a6c3cb2 # initialize rs1
ctz x8, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 208)

# Testcase cp_rs1 (Test source rs1 = x27)
li x27, 0x2ffde730adeddd1c # initialize rs1
ctz x14, x27 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 216)

# Testcase cp_rs1 (Test source rs1 = x28)
li x28, 0x7c1af52e1b952d0f # initialize rs1
ctz x17, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 224)

# Testcase cp_rs1 (Test source rs1 = x29)
li x29, 0xe9db1f1764da21dc # initialize rs1
ctz x27, x29 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 232)

# Testcase cp_rs1 (Test source rs1 = x30)
li x30, 0x0e2014532f739f8f # initialize rs1
ctz x31, x30 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 240)

# Testcase cp_rs1 (Test source rs1 = x31)
li x31, 0xd008d3527857ea14 # initialize rs1
ctz x11, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 248)

# Testcase cp_rd (Test destination rd = x0)
li x31, 0x7d3b751dc61682f9 # initialize rs1
ctz x0, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x0, 256)

# Testcase cp_rd (Test destination rd = x1)
li x17, 0x3ce3af8e3e19bb16 # initialize rs1
ctz x1, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 264)

# Testcase cp_rd (Test destination rd = x2)
li x5, 0xc8a4303e22cb27b4 # initialize rs1
ctz x2, x5 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 272)

# Testcase cp_rd (Test destination rd = x3)
li x26, 0x5cb44be392f240b4 # initialize rs1
ctz x3, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 280)

# Testcase cp_rd (Test destination rd = x4)
mv x5, x4 # switch signature pointer register to avoid conflict with test
li x24, 0x46cc99138f994b74 # initialize rs1
ctz x4, x24 # perform operation
RVTEST_SIGUPD(x5, x0, x4, 288)

# Testcase cp_rd (Test destination rd = x5)
mv x6, x5 # switch signature pointer register to avoid conflict with test
li x22, 0x3af8dab03dfdad4e # initialize rs1
ctz x5, x22 # perform operation
RVTEST_SIGUPD(x6, x0, x5, 296)

# Testcase cp_rd (Test destination rd = x6)
mv x7, x6 # switch signature pointer register to avoid conflict with test
li x30, 0x224e4d1eb0ae23bd # initialize rs1
ctz x6, x30 # perform operation
RVTEST_SIGUPD(x7, x0, x6, 304)

# Testcase cp_rd (Test destination rd = x7)
mv x4, x7 # switch signature pointer register to avoid conflict with test
li x3, 0xbf87708fc1382bbc # initialize rs1
ctz x7, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 312)

# Testcase cp_rd (Test destination rd = x8)
li x9, 0x6dfa68252ae3b83f # initialize rs1
ctz x8, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 320)

# Testcase cp_rd (Test destination rd = x9)
li x19, 0xdb861b2f6a4ec664 # initialize rs1
ctz x9, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 328)

# Testcase cp_rd (Test destination rd = x10)
li x30, 0xbf0333dd2dbc1900 # initialize rs1
ctz x10, x30 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 336)

# Testcase cp_rd (Test destination rd = x11)
li x25, 0x3b24f7137a528975 # initialize rs1
ctz x11, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 344)

# Testcase cp_rd (Test destination rd = x12)
li x9, 0x682b563af878c8c2 # initialize rs1
ctz x12, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 352)

# Testcase cp_rd (Test destination rd = x13)
li x22, 0x019b6867717c778a # initialize rs1
ctz x13, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 360)

# Testcase cp_rd (Test destination rd = x14)
li x15, 0x8310bab74649a952 # initialize rs1
ctz x14, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 368)

# Testcase cp_rd (Test destination rd = x15)
li x30, 0x0fe395f887af5fb0 # initialize rs1
ctz x15, x30 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 376)

# Testcase cp_rd (Test destination rd = x16)
li x5, 0x7b4685d9f950e9e3 # initialize rs1
ctz x16, x5 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 384)

# Testcase cp_rd (Test destination rd = x17)
li x28, 0xa542f629b3cc3dac # initialize rs1
ctz x17, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 392)

# Testcase cp_rd (Test destination rd = x18)
li x16, 0x4afd69718e369bd6 # initialize rs1
ctz x18, x16 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 400)

# Testcase cp_rd (Test destination rd = x19)
li x13, 0xfa6a078d630a169c # initialize rs1
ctz x19, x13 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 408)

# Testcase cp_rd (Test destination rd = x20)
li x18, 0x08c4033d3c8aef12 # initialize rs1
ctz x20, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 416)

# Testcase cp_rd (Test destination rd = x21)
li x21, 0x6f0a995e327c2c8a # initialize rs1
ctz x21, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 424)

# Testcase cp_rd (Test destination rd = x22)
li x9, 0x0ebda2b750026c0d # initialize rs1
ctz x22, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 432)

# Testcase cp_rd (Test destination rd = x23)
li x15, 0xf8be0386c1773aec # initialize rs1
ctz x23, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 440)

# Testcase cp_rd (Test destination rd = x24)
li x23, 0x2be40f02f1886a46 # initialize rs1
ctz x24, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 448)

# Testcase cp_rd (Test destination rd = x25)
li x12, 0xa7462c49d06cb060 # initialize rs1
ctz x25, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 456)

# Testcase cp_rd (Test destination rd = x26)
li x30, 0xfe026acd846ee3df # initialize rs1
ctz x26, x30 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 464)

# Testcase cp_rd (Test destination rd = x27)
li x16, 0xc354694985b58da8 # initialize rs1
ctz x27, x16 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 472)

# Testcase cp_rd (Test destination rd = x28)
li x1, 0x653a7bcfb23a11a2 # initialize rs1
ctz x28, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x28, 480)

# Testcase cp_rd (Test destination rd = x29)
li x29, 0x30d29a2c7f3bb77c # initialize rs1
ctz x29, x29 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 488)

# Testcase cp_rd (Test destination rd = x30)
li x1, 0x433dbb6d4fc0d25e # initialize rs1
ctz x30, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 496)

# Testcase cp_rd (Test destination rd = x31)
li x27, 0xd29de75d56a9d6ae # initialize rs1
ctz x31, x27 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 504)

# Testcase cp_rs1_corners (Test source rs1 value = 0x0)
li x3, 0x0000000000000000 # initialize rs1
ctz x6, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x6, 512)

# Testcase cp_rs1_corners (Test source rs1 value = 0x1)
li x10, 0x0000000000000001 # initialize rs1
ctz x3, x10 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 520)

# Testcase cp_rs1_corners (Test source rs1 value = 0x2)
li x13, 0x0000000000000002 # initialize rs1
ctz x27, x13 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 528)

# Testcase cp_rs1_corners (Test source rs1 value = 0x8000000000000000)
li x1, 0x8000000000000000 # initialize rs1
ctz x2, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 536)

# Testcase cp_rs1_corners (Test source rs1 value = 0x8000000000000001)
li x2, 0x8000000000000001 # initialize rs1
ctz x28, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x28, 544)

# Testcase cp_rs1_corners (Test source rs1 value = 0x7fffffffffffffff)
li x6, 0x7fffffffffffffff # initialize rs1
ctz x10, x6 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 552)

# Testcase cp_rs1_corners (Test source rs1 value = 0x7ffffffffffffffe)
li x20, 0x7ffffffffffffffe # initialize rs1
ctz x5, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x5, 560)

# Testcase cp_rs1_corners (Test source rs1 value = 0xffffffffffffffff)
li x18, 0xffffffffffffffff # initialize rs1
ctz x7, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 568)

# Testcase cp_rs1_corners (Test source rs1 value = 0xfffffffffffffffe)
li x3, 0xfffffffffffffffe # initialize rs1
ctz x7, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 576)

# Testcase cp_rs1_corners (Test source rs1 value = 0x5bbc887763ae86f2)
li x7, 0x5bbc887763ae86f2 # initialize rs1
ctz x23, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 584)

# Testcase cp_rs1_corners (Test source rs1 value = 0xaaaaaaaaaaaaaaaa)
li x6, 0xaaaaaaaaaaaaaaaa # initialize rs1
ctz x24, x6 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 592)

# Testcase cp_rs1_corners (Test source rs1 value = 0x5555555555555555)
li x5, 0x5555555555555555 # initialize rs1
ctz x31, x5 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 600)

# Testcase cp_rs1_corners (Test source rs1 value = 0xffffffff)
li x30, 0x00000000ffffffff # initialize rs1
ctz x22, x30 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 608)

# Testcase cp_rs1_corners (Test source rs1 value = 0xfffffffe)
li x14, 0x00000000fffffffe # initialize rs1
ctz x15, x14 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 616)

# Testcase cp_rs1_corners (Test source rs1 value = 0x100000000)
li x14, 0x0000000100000000 # initialize rs1
ctz x28, x14 # perform operation
RVTEST_SIGUPD(x4, x0, x28, 624)

# Testcase cp_rs1_corners (Test source rs1 value = 0x100000001)
li x3, 0x0000000100000001 # initialize rs1
ctz x20, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 632)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x0)
li x0, 0x4d1e87c97a0f6660 # initialize rs1
ctz x0, x0 # perform operation
RVTEST_SIGUPD(x4, x0, x0, 640)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x1)
li x1, 0x5ac9677d56b2d0fe # initialize rs1
ctz x1, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 648)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x2)
li x2, 0x10c642f23b231de2 # initialize rs1
ctz x2, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 656)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x3)
li x3, 0xcd680635ed090007 # initialize rs1
ctz x3, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 664)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x4)
mv x5, x4 # switch signature pointer register to avoid conflict with test
li x4, 0x8004e8c5dba74cc5 # initialize rs1
ctz x4, x4 # perform operation
RVTEST_SIGUPD(x5, x0, x4, 672)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x5)
mv x6, x5 # switch signature pointer register to avoid conflict with test
li x5, 0xde62129286bffba6 # initialize rs1
ctz x5, x5 # perform operation
RVTEST_SIGUPD(x6, x0, x5, 680)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x6)
mv x7, x6 # switch signature pointer register to avoid conflict with test
li x6, 0xb2171a6be193d797 # initialize rs1
ctz x6, x6 # perform operation
RVTEST_SIGUPD(x7, x0, x6, 688)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x7)
mv x4, x7 # switch signature pointer register to avoid conflict with test
li x7, 0xf671afe3391686ca # initialize rs1
ctz x7, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 696)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x8)
li x8, 0xeb77082f2a7f296f # initialize rs1
ctz x8, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 704)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x9)
li x9, 0x6468c47c4a7bec84 # initialize rs1
ctz x9, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 712)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x10)
li x10, 0xa095b3f18ddc941b # initialize rs1
ctz x10, x10 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 720)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x11)
li x11, 0x10a4a13a7ebf768a # initialize rs1
ctz x11, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 728)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x12)
li x12, 0x711e42a782ca9ef2 # initialize rs1
ctz x12, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 736)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x13)
li x13, 0xcddc1f4b0765c19c # initialize rs1
ctz x13, x13 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 744)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x14)
li x14, 0x8411ac08bbdff019 # initialize rs1
ctz x14, x14 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 752)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x15)
li x15, 0x7926a6f42cf3ca17 # initialize rs1
ctz x15, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 760)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x16)
li x16, 0x098f6f4d3cccfdad # initialize rs1
ctz x16, x16 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 768)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x17)
li x17, 0x455faec440b354c5 # initialize rs1
ctz x17, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 776)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x18)
li x18, 0x6fcc0f4b5fe49f76 # initialize rs1
ctz x18, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 784)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x19)
li x19, 0xc2c7ccf16f86796d # initialize rs1
ctz x19, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 792)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x20)
li x20, 0x4e144b91aa7adc0b # initialize rs1
ctz x20, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 800)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x21)
li x21, 0xc2ef03049e2b0a0d # initialize rs1
ctz x21, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 808)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x22)
li x22, 0xde94fb325b333111 # initialize rs1
ctz x22, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 816)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x23)
li x23, 0x659e537ba05554a5 # initialize rs1
ctz x23, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 824)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x24)
li x24, 0xb449d57c4431fe10 # initialize rs1
ctz x24, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 832)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x25)
li x25, 0x72c8c239f9c54ad4 # initialize rs1
ctz x25, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 840)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x26)
li x26, 0xc49a93bf19335ecb # initialize rs1
ctz x26, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 848)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x27)
li x27, 0x418c49bf1acf5c89 # initialize rs1
ctz x27, x27 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 856)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x28)
li x28, 0xd9f43a127c6c350d # initialize rs1
ctz x28, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x28, 864)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x29)
li x29, 0x7ae88be1dda3fa55 # initialize rs1
ctz x29, x29 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 872)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x30)
li x30, 0xd6ebb8f3a5ce3aed # initialize rs1
ctz x30, x30 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 880)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x31)
li x31, 0x20403b66c67de5b5 # initialize rs1
ctz x31, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 888)

# Testcase cp_gpr/fpr_hazard nohaz test
add x20, x11, x30 # perform first operation
ctz x7, x24 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard nohaz test
add x26, x24, x1 # perform first operation
ctz x7, x14 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard nohaz test
add x27, x24, x23 # perform first operation
ctz x15, x13 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard raw test
add x11, x25, x2 # perform first operation
ctz x25, x11 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard raw test
add x30, x16, x15 # perform first operation
ctz x30, x21 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard raw test
add x22, x7, x10 # perform first operation
ctz x22, x6 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard waw test
add x9, x10, x30 # perform first operation
ctz x9, x11 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard waw test
add x25, x16, x10 # perform first operation
ctz x25, x23 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard waw test
add x21, x3, x7 # perform first operation
ctz x21, x31 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard war test
add x7, x24, x14 # perform first operation
ctz x24, x23 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard war test
add x21, x27, x14 # perform first operation
ctz x14, x13 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard war test
add x27, x17, x22 # perform first operation
ctz x21, x25 # perform second (triggering) operation

#.EQU SIGSIZE,896


// ******************
// Tests from: WALLY-COV-min.S
// ******************


# initialize signature pointer
la x4, begin_signature

    
# Testcase cp_rs1 (Test source rs1 = x0)
li x0, 0x846dcd0b51a4a5f8 # initialize rs1
li x29, 0xe137f346744586cc # initialize rs2
min x8, x0, x29 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 0)

# Testcase cp_rs1 (Test source rs1 = x1)
li x1, 0xa4b115cb5efefcc3 # initialize rs1
li x22, 0xc2f2f1c1860c3eb9 # initialize rs2
min x16, x1, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 8)

# Testcase cp_rs1 (Test source rs1 = x2)
li x2, 0x04264b73db3cc856 # initialize rs1
li x26, 0x5d84bcd14d7da44d # initialize rs2
min x22, x2, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 16)

# Testcase cp_rs1 (Test source rs1 = x3)
li x3, 0x92c0ca125869eff2 # initialize rs1
li x20, 0x3361b4927fad49fb # initialize rs2
min x14, x3, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 24)

# Testcase cp_rs1 (Test source rs1 = x4)
mv x5, x4 # switch signature pointer register to avoid conflict with test
li x4, 0xc7d996cac125f2e4 # initialize rs1
li x29, 0xe8382ef3e140e227 # initialize rs2
min x9, x4, x29 # perform operation
RVTEST_SIGUPD(x5, x0, x9, 32)

# Testcase cp_rs1 (Test source rs1 = x5)
mv x6, x5 # switch signature pointer register to avoid conflict with test
li x5, 0x821563ac7b4a393f # initialize rs1
li x3, 0x8da10b2f74e758ae # initialize rs2
min x9, x5, x3 # perform operation
RVTEST_SIGUPD(x6, x0, x9, 40)

# Testcase cp_rs1 (Test source rs1 = x6)
mv x7, x6 # switch signature pointer register to avoid conflict with test
li x6, 0x224ca2c0b4353bc7 # initialize rs1
li x14, 0xaf4438dbdf8d8d79 # initialize rs2
min x11, x6, x14 # perform operation
RVTEST_SIGUPD(x7, x0, x11, 48)

# Testcase cp_rs1 (Test source rs1 = x7)
mv x4, x7 # switch signature pointer register to avoid conflict with test
li x7, 0x6232546eb77520a7 # initialize rs1
li x21, 0x3b7b049f6c1e4fd7 # initialize rs2
min x19, x7, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 56)

# Testcase cp_rs1 (Test source rs1 = x8)
li x8, 0xc780168aa9cba3fc # initialize rs1
li x10, 0x0a3ce067d8d77f41 # initialize rs2
min x17, x8, x10 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 64)

# Testcase cp_rs1 (Test source rs1 = x9)
li x9, 0x9a8eb3557261f5ad # initialize rs1
li x2, 0xe68c89eae4ba83c0 # initialize rs2
min x8, x9, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 72)

# Testcase cp_rs1 (Test source rs1 = x10)
li x10, 0x627c4adabc8af2e4 # initialize rs1
li x12, 0x6d7cc30ce961d247 # initialize rs2
min x26, x10, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 80)

# Testcase cp_rs1 (Test source rs1 = x11)
li x11, 0xf685bdd138d93343 # initialize rs1
li x10, 0x136031e2dfdc61f2 # initialize rs2
min x12, x11, x10 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 88)

# Testcase cp_rs1 (Test source rs1 = x12)
li x12, 0x1a644c3a3638a064 # initialize rs1
li x9, 0x2c3ed9ad10e44789 # initialize rs2
min x21, x12, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 96)

# Testcase cp_rs1 (Test source rs1 = x13)
li x13, 0x44710202b47b8b26 # initialize rs1
li x18, 0x112e71ad91018af7 # initialize rs2
min x5, x13, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x5, 104)

# Testcase cp_rs1 (Test source rs1 = x14)
li x14, 0x29ac5b4b6a1942be # initialize rs1
li x22, 0x60e4ac0b65c52806 # initialize rs2
min x11, x14, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 112)

# Testcase cp_rs1 (Test source rs1 = x15)
li x15, 0x57364dfd278653e1 # initialize rs1
li x28, 0x467585bfc11e2bd5 # initialize rs2
min x8, x15, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 120)

# Testcase cp_rs1 (Test source rs1 = x16)
li x16, 0xe824d131d7d6ba34 # initialize rs1
li x14, 0xc124972ca78ac2e5 # initialize rs2
min x12, x16, x14 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 128)

# Testcase cp_rs1 (Test source rs1 = x17)
li x17, 0x641b9eab2cd1aa96 # initialize rs1
li x3, 0x520e03a67af43fd2 # initialize rs2
min x13, x17, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 136)

# Testcase cp_rs1 (Test source rs1 = x18)
li x18, 0x549ca34bbf8ba386 # initialize rs1
li x6, 0x03b59beea2492e68 # initialize rs2
min x19, x18, x6 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 144)

# Testcase cp_rs1 (Test source rs1 = x19)
li x19, 0x519d2c6f03293d74 # initialize rs1
li x15, 0x0823015af16829b0 # initialize rs2
min x13, x19, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 152)

# Testcase cp_rs1 (Test source rs1 = x20)
li x20, 0x370c74be4ac96981 # initialize rs1
li x15, 0xb46da875af7c7a90 # initialize rs2
min x23, x20, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 160)

# Testcase cp_rs1 (Test source rs1 = x21)
li x21, 0xbbc71ba8d869f1e6 # initialize rs1
li x11, 0x043f4c58b5c86895 # initialize rs2
min x19, x21, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 168)

# Testcase cp_rs1 (Test source rs1 = x22)
li x22, 0x1f0ceaee9a7218e9 # initialize rs1
li x30, 0x441fe30d854bc97a # initialize rs2
min x19, x22, x30 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 176)

# Testcase cp_rs1 (Test source rs1 = x23)
li x23, 0xee83dc20bfa374a4 # initialize rs1
li x21, 0xebf693653e5a036c # initialize rs2
min x2, x23, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 184)

# Testcase cp_rs1 (Test source rs1 = x24)
li x24, 0x6853bf0312f28290 # initialize rs1
li x18, 0x708a58a920bd6045 # initialize rs2
min x1, x24, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 192)

# Testcase cp_rs1 (Test source rs1 = x25)
li x25, 0x966a6582f497b065 # initialize rs1
li x21, 0x56bc76db9c8d8e3e # initialize rs2
min x9, x25, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 200)

# Testcase cp_rs1 (Test source rs1 = x26)
li x26, 0x5996f9e7bc0e7db7 # initialize rs1
li x31, 0xe2696aa0b5e2e41b # initialize rs2
min x25, x26, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 208)

# Testcase cp_rs1 (Test source rs1 = x27)
li x27, 0xc18e8629b01af548 # initialize rs1
li x26, 0x497394bcdec9c83f # initialize rs2
min x5, x27, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x5, 216)

# Testcase cp_rs1 (Test source rs1 = x28)
li x28, 0x79a3c71e3ea9d858 # initialize rs1
li x17, 0xba3f506ed01fb708 # initialize rs2
min x11, x28, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 224)

# Testcase cp_rs1 (Test source rs1 = x29)
li x29, 0x362dbecf016d0678 # initialize rs1
li x14, 0x0cd83bcc241e5691 # initialize rs2
min x23, x29, x14 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 232)

# Testcase cp_rs1 (Test source rs1 = x30)
li x30, 0x9e98abd87fe8bc7a # initialize rs1
li x18, 0x5b132dc523ab0895 # initialize rs2
min x13, x30, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 240)

# Testcase cp_rs1 (Test source rs1 = x31)
li x31, 0x3f48f008bdb7b275 # initialize rs1
li x10, 0x61390c5893e05486 # initialize rs2
min x20, x31, x10 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 248)

# Testcase cp_rs2 (Test source rs2 = x0)
li x5, 0x5cf0c1f9ea9cf6b3 # initialize rs1
li x0, 0xf1b3a9eb2f47bbdd # initialize rs2
min x2, x5, x0 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 256)

# Testcase cp_rs2 (Test source rs2 = x1)
li x13, 0xd57057a99040f328 # initialize rs1
li x1, 0x5e7d3560560ce99a # initialize rs2
min x29, x13, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 264)

# Testcase cp_rs2 (Test source rs2 = x2)
li x16, 0x31297192b2e11381 # initialize rs1
li x2, 0x2da1b417a12e3935 # initialize rs2
min x11, x16, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 272)

# Testcase cp_rs2 (Test source rs2 = x3)
li x18, 0xfa98e7f727a7f04c # initialize rs1
li x3, 0x3ba87f89ce2476ad # initialize rs2
min x27, x18, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 280)

# Testcase cp_rs2 (Test source rs2 = x4)
mv x5, x4 # switch signature pointer register to avoid conflict with test
li x31, 0x49c9bb48b066c026 # initialize rs1
li x4, 0x2f1b536b3ab46497 # initialize rs2
min x30, x31, x4 # perform operation
RVTEST_SIGUPD(x5, x0, x30, 288)

# Testcase cp_rs2 (Test source rs2 = x5)
mv x6, x5 # switch signature pointer register to avoid conflict with test
li x22, 0x8e478a8a833e5caa # initialize rs1
li x5, 0x85c0d9ad7d4a6f14 # initialize rs2
min x3, x22, x5 # perform operation
RVTEST_SIGUPD(x6, x0, x3, 296)

# Testcase cp_rs2 (Test source rs2 = x6)
mv x7, x6 # switch signature pointer register to avoid conflict with test
li x14, 0x06c115a4715a13e2 # initialize rs1
li x6, 0xe2d23ce0d02d8cc5 # initialize rs2
min x13, x14, x6 # perform operation
RVTEST_SIGUPD(x7, x0, x13, 304)

# Testcase cp_rs2 (Test source rs2 = x7)
mv x4, x7 # switch signature pointer register to avoid conflict with test
li x10, 0xba91e3034258f9a8 # initialize rs1
li x7, 0x38f66ac1ab5d08f7 # initialize rs2
min x19, x10, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 312)

# Testcase cp_rs2 (Test source rs2 = x8)
li x20, 0xfaaa495a71877d7d # initialize rs1
li x8, 0x4eeefca7230509c2 # initialize rs2
min x23, x20, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 320)

# Testcase cp_rs2 (Test source rs2 = x9)
li x6, 0x62237f3f56a6d365 # initialize rs1
li x9, 0x1dae99efced4edcc # initialize rs2
min x2, x6, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 328)

# Testcase cp_rs2 (Test source rs2 = x10)
li x7, 0xd9f632ee7e23eb95 # initialize rs1
li x10, 0x1a83ba2200a8e22d # initialize rs2
min x8, x7, x10 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 336)

# Testcase cp_rs2 (Test source rs2 = x11)
li x1, 0x7b7d613d665985cf # initialize rs1
li x11, 0x6d459c34eff4035a # initialize rs2
min x6, x1, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x6, 344)

# Testcase cp_rs2 (Test source rs2 = x12)
li x30, 0x01a9c2d16c9df474 # initialize rs1
li x12, 0xc082e640707e150e # initialize rs2
min x20, x30, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 352)

# Testcase cp_rs2 (Test source rs2 = x13)
li x20, 0x9b59a2d1f9a90f3a # initialize rs1
li x13, 0x9c2f0783c7017a9b # initialize rs2
min x31, x20, x13 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 360)

# Testcase cp_rs2 (Test source rs2 = x14)
li x18, 0x698311d003a68fad # initialize rs1
li x14, 0x5132ca848bb14b7a # initialize rs2
min x3, x18, x14 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 368)

# Testcase cp_rs2 (Test source rs2 = x15)
li x8, 0xc25809cf9076265e # initialize rs1
li x15, 0x51e020864f2887cf # initialize rs2
min x5, x8, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x5, 376)

# Testcase cp_rs2 (Test source rs2 = x16)
li x18, 0xb7345a3d60afac28 # initialize rs1
li x16, 0xb7a8afa19e1f5b9c # initialize rs2
min x1, x18, x16 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 384)

# Testcase cp_rs2 (Test source rs2 = x17)
li x31, 0x32538ba4185fa368 # initialize rs1
li x17, 0x69b9921c858f57cd # initialize rs2
min x3, x31, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 392)

# Testcase cp_rs2 (Test source rs2 = x18)
li x15, 0x71bbd309a517dc49 # initialize rs1
li x18, 0xc8cf1d3a0acee297 # initialize rs2
min x16, x15, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 400)

# Testcase cp_rs2 (Test source rs2 = x19)
li x6, 0xf1f3bac1f121f50b # initialize rs1
li x19, 0x5756d131f9b06418 # initialize rs2
min x21, x6, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 408)

# Testcase cp_rs2 (Test source rs2 = x20)
li x1, 0x75bbaacf84b4ca41 # initialize rs1
li x20, 0xc003be2b2db85006 # initialize rs2
min x30, x1, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 416)

# Testcase cp_rs2 (Test source rs2 = x21)
li x10, 0xc74d265f36ab6f5e # initialize rs1
li x21, 0xf7c9ed67385b219f # initialize rs2
min x20, x10, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 424)

# Testcase cp_rs2 (Test source rs2 = x22)
li x16, 0xaa52070595807abe # initialize rs1
li x22, 0x712e1a4862e1ac73 # initialize rs2
min x13, x16, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 432)

# Testcase cp_rs2 (Test source rs2 = x23)
li x29, 0x4e111de2694719ac # initialize rs1
li x23, 0xbf76c4f561824cd9 # initialize rs2
min x28, x29, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x28, 440)

# Testcase cp_rs2 (Test source rs2 = x24)
li x10, 0x09bd42d51f6bdfd8 # initialize rs1
li x24, 0x5e301d15cbff0171 # initialize rs2
min x22, x10, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 448)

# Testcase cp_rs2 (Test source rs2 = x25)
li x8, 0xec8154731de2dc42 # initialize rs1
li x25, 0x76ccaeedb078dce7 # initialize rs2
min x12, x8, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 456)

# Testcase cp_rs2 (Test source rs2 = x26)
li x28, 0xee785e0cf20cd14e # initialize rs1
li x26, 0x26d04f51ba54b87f # initialize rs2
min x14, x28, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 464)

# Testcase cp_rs2 (Test source rs2 = x27)
li x15, 0x2c15c853eb52f0b2 # initialize rs1
li x27, 0x951518e65462bf48 # initialize rs2
min x31, x15, x27 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 472)

# Testcase cp_rs2 (Test source rs2 = x28)
li x21, 0x3a6751c8a243cbe1 # initialize rs1
li x28, 0xf8e6802c0d5987d5 # initialize rs2
min x24, x21, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 480)

# Testcase cp_rs2 (Test source rs2 = x29)
li x27, 0xc55713613f36d1aa # initialize rs1
li x29, 0x4836f665873571e6 # initialize rs2
min x15, x27, x29 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 488)

# Testcase cp_rs2 (Test source rs2 = x30)
li x27, 0x22932fa4b6326fdf # initialize rs1
li x30, 0xd941edfc29b4bde9 # initialize rs2
min x26, x27, x30 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 496)

# Testcase cp_rs2 (Test source rs2 = x31)
li x23, 0x8deeb7b5ff55db16 # initialize rs1
li x31, 0xe0215cccde45ed55 # initialize rs2
min x16, x23, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 504)

# Testcase cp_rd (Test destination rd = x0)
li x2, 0x8325dae0d6e02fda # initialize rs1
li x11, 0xfb5fba774ee069e4 # initialize rs2
min x0, x2, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x0, 512)

# Testcase cp_rd (Test destination rd = x1)
li x24, 0x6cd99c8df711b6b8 # initialize rs1
li x18, 0x6176999ea43ca609 # initialize rs2
min x1, x24, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 520)

# Testcase cp_rd (Test destination rd = x2)
li x21, 0x94ef6fb8302d48e1 # initialize rs1
li x8, 0x2b9994fd374c8086 # initialize rs2
min x2, x21, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 528)

# Testcase cp_rd (Test destination rd = x3)
li x1, 0x9e1969952068ea99 # initialize rs1
li x31, 0x8fe50ddfb67802ed # initialize rs2
min x3, x1, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 536)

# Testcase cp_rd (Test destination rd = x4)
mv x5, x4 # switch signature pointer register to avoid conflict with test
li x27, 0x4596efc814215e60 # initialize rs1
li x1, 0xe66a771ed7d6b22e # initialize rs2
min x4, x27, x1 # perform operation
RVTEST_SIGUPD(x5, x0, x4, 544)

# Testcase cp_rd (Test destination rd = x5)
mv x6, x5 # switch signature pointer register to avoid conflict with test
li x11, 0x075fb3ed7e07a7e3 # initialize rs1
li x3, 0xcda8bcee22352be7 # initialize rs2
min x5, x11, x3 # perform operation
RVTEST_SIGUPD(x6, x0, x5, 552)

# Testcase cp_rd (Test destination rd = x6)
mv x4, x6 # switch signature pointer register to avoid conflict with test
li x2, 0xe5883a33efdeb872 # initialize rs1
li x7, 0x2f1f5d9bdd441158 # initialize rs2
min x6, x2, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x6, 560)

# Testcase cp_rd (Test destination rd = x7)
li x6, 0xf9c0fe90bbd5145c # initialize rs1
li x9, 0x42dff227e7ea68b4 # initialize rs2
min x7, x6, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 568)

# Testcase cp_rd (Test destination rd = x8)
li x27, 0x40a32310c29e2508 # initialize rs1
li x15, 0x7f9070e7b1f229ca # initialize rs2
min x8, x27, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 576)

# Testcase cp_rd (Test destination rd = x9)
li x15, 0xf2367e8f226cabcd # initialize rs1
li x29, 0xd52c25ee91557961 # initialize rs2
min x9, x15, x29 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 584)

# Testcase cp_rd (Test destination rd = x10)
li x26, 0x5ca62f1f580f4ca2 # initialize rs1
li x21, 0xf1617abcf79c58f0 # initialize rs2
min x10, x26, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 592)

# Testcase cp_rd (Test destination rd = x11)
li x18, 0xc2ecf45b65c166cf # initialize rs1
li x27, 0xb4f24f4d6ffa05e9 # initialize rs2
min x11, x18, x27 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 600)

# Testcase cp_rd (Test destination rd = x12)
li x1, 0x2ff4ce286e2967d8 # initialize rs1
li x9, 0x4bd3263bd8c6e496 # initialize rs2
min x12, x1, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 608)

# Testcase cp_rd (Test destination rd = x13)
li x21, 0xff3ba2bfc00bd492 # initialize rs1
li x27, 0x390e9123d36671b2 # initialize rs2
min x13, x21, x27 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 616)

# Testcase cp_rd (Test destination rd = x14)
li x14, 0xbca924601f737206 # initialize rs1
li x3, 0x4a200246bd63591a # initialize rs2
min x14, x14, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 624)

# Testcase cp_rd (Test destination rd = x15)
li x27, 0x4bcb21f532925394 # initialize rs1
li x11, 0x25c43161819464cd # initialize rs2
min x15, x27, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 632)

# Testcase cp_rd (Test destination rd = x16)
li x16, 0xdb05e466f75c9f8a # initialize rs1
li x27, 0x760cfe03d5df5be9 # initialize rs2
min x16, x16, x27 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 640)

# Testcase cp_rd (Test destination rd = x17)
li x5, 0x2178596d6370288b # initialize rs1
li x29, 0x9a51900a4418c927 # initialize rs2
min x17, x5, x29 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 648)

# Testcase cp_rd (Test destination rd = x18)
li x31, 0xd167adc2d0f524dd # initialize rs1
li x13, 0x033e6e863540b3ec # initialize rs2
min x18, x31, x13 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 656)

# Testcase cp_rd (Test destination rd = x19)
li x27, 0xa8db5b2221d8e1df # initialize rs1
li x25, 0x6b6919735045cff7 # initialize rs2
min x19, x27, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 664)

# Testcase cp_rd (Test destination rd = x20)
li x22, 0xb6225819942a2103 # initialize rs1
li x1, 0xd52ab52888bdf4d1 # initialize rs2
min x20, x22, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 672)

# Testcase cp_rd (Test destination rd = x21)
li x2, 0xafb19db5f8f918bc # initialize rs1
li x3, 0xb6fc26a048c69fee # initialize rs2
min x21, x2, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 680)

# Testcase cp_rd (Test destination rd = x22)
li x1, 0x97edc14faabf3e20 # initialize rs1
li x7, 0x857877148a3f4c28 # initialize rs2
min x22, x1, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 688)

# Testcase cp_rd (Test destination rd = x23)
li x26, 0x487618337bfa814c # initialize rs1
li x28, 0x91d5a4fb3ee22efa # initialize rs2
min x23, x26, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 696)

# Testcase cp_rd (Test destination rd = x24)
li x24, 0x301e479839a241fc # initialize rs1
li x30, 0x6b534c734a9e4aba # initialize rs2
min x24, x24, x30 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 704)

# Testcase cp_rd (Test destination rd = x25)
li x2, 0x3ae52b4810f95616 # initialize rs1
li x3, 0xc750bceed6af98c4 # initialize rs2
min x25, x2, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 712)

# Testcase cp_rd (Test destination rd = x26)
li x23, 0x46a4fe284440fee4 # initialize rs1
li x12, 0x5a67fc112eb2d821 # initialize rs2
min x26, x23, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 720)

# Testcase cp_rd (Test destination rd = x27)
li x11, 0x7663f13567b1ec91 # initialize rs1
li x20, 0x75a41507b0061bac # initialize rs2
min x27, x11, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 728)

# Testcase cp_rd (Test destination rd = x28)
li x9, 0x9940b649eec16e55 # initialize rs1
li x23, 0x0de58084e832e07a # initialize rs2
min x28, x9, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x28, 736)

# Testcase cp_rd (Test destination rd = x29)
li x31, 0xe6af761683014ec9 # initialize rs1
li x8, 0x84d83be0133c8579 # initialize rs2
min x29, x31, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 744)

# Testcase cp_rd (Test destination rd = x30)
li x13, 0xb33e47b24b6013e2 # initialize rs1
li x26, 0xd8d55e489d9d4e45 # initialize rs2
min x30, x13, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 752)

# Testcase cp_rd (Test destination rd = x31)
li x9, 0xc3c74139a8cfe40b # initialize rs1
li x23, 0xe1aa44b4ea4dd88c # initialize rs2
min x31, x9, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 760)

# Testcase cp_rs1_corners (Test source rs1 value = 0x0)
li x12, 0x0000000000000000 # initialize rs1
li x8, 0x690376a34d71f583 # initialize rs2
min x2, x12, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 768)

# Testcase cp_rs1_corners (Test source rs1 value = 0x1)
li x27, 0x0000000000000001 # initialize rs1
li x21, 0x5c2616c6940dd2de # initialize rs2
min x12, x27, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 776)

# Testcase cp_rs1_corners (Test source rs1 value = 0x2)
li x25, 0x0000000000000002 # initialize rs1
li x23, 0x530553c6f27916ff # initialize rs2
min x11, x25, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 784)

# Testcase cp_rs1_corners (Test source rs1 value = 0x8000000000000000)
li x16, 0x8000000000000000 # initialize rs1
li x28, 0x50fb02dc595b68de # initialize rs2
min x26, x16, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 792)

# Testcase cp_rs1_corners (Test source rs1 value = 0x8000000000000001)
li x28, 0x8000000000000001 # initialize rs1
li x5, 0x5b0750036d10a12b # initialize rs2
min x15, x28, x5 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 800)

# Testcase cp_rs1_corners (Test source rs1 value = 0x7fffffffffffffff)
li x2, 0x7fffffffffffffff # initialize rs1
li x27, 0x87733ba21c731873 # initialize rs2
min x26, x2, x27 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 808)

# Testcase cp_rs1_corners (Test source rs1 value = 0x7ffffffffffffffe)
li x10, 0x7ffffffffffffffe # initialize rs1
li x22, 0x88552f709f7961a0 # initialize rs2
min x30, x10, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 816)

# Testcase cp_rs1_corners (Test source rs1 value = 0xffffffffffffffff)
li x18, 0xffffffffffffffff # initialize rs1
li x19, 0xab8f217dae3ebc87 # initialize rs2
min x17, x18, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 824)

# Testcase cp_rs1_corners (Test source rs1 value = 0xfffffffffffffffe)
li x22, 0xfffffffffffffffe # initialize rs1
li x2, 0x2510a4ffaede5e59 # initialize rs2
min x23, x22, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 832)

# Testcase cp_rs1_corners (Test source rs1 value = 0x5bbc887763ae86f2)
li x12, 0x5bbc887763ae86f2 # initialize rs1
li x6, 0xdc95fa59a9dbaeb8 # initialize rs2
min x7, x12, x6 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 840)

# Testcase cp_rs1_corners (Test source rs1 value = 0xaaaaaaaaaaaaaaaa)
li x21, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x13, 0xa9cbb761f96d3cfa # initialize rs2
min x19, x21, x13 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 848)

# Testcase cp_rs1_corners (Test source rs1 value = 0x5555555555555555)
li x29, 0x5555555555555555 # initialize rs1
li x9, 0x4491556e77748b97 # initialize rs2
min x19, x29, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 856)

# Testcase cp_rs1_corners (Test source rs1 value = 0xffffffff)
li x18, 0x00000000ffffffff # initialize rs1
li x5, 0x00dff6eb7d8e5763 # initialize rs2
min x30, x18, x5 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 864)

# Testcase cp_rs1_corners (Test source rs1 value = 0xfffffffe)
li x27, 0x00000000fffffffe # initialize rs1
li x31, 0xd71a8ba02cb81dfe # initialize rs2
min x13, x27, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 872)

# Testcase cp_rs1_corners (Test source rs1 value = 0x100000000)
li x2, 0x0000000100000000 # initialize rs1
li x9, 0x09c40a7ee7eb6576 # initialize rs2
min x14, x2, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 880)

# Testcase cp_rs1_corners (Test source rs1 value = 0x100000001)
li x7, 0x0000000100000001 # initialize rs1
li x26, 0x2d2354afe5de72f5 # initialize rs2
min x22, x7, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 888)

# Testcase cp_rs2_corners (Test source rs2 value = 0x0)
li x26, 0xdda29e9246848226 # initialize rs1
li x2, 0x0000000000000000 # initialize rs2
min x30, x26, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 896)

# Testcase cp_rs2_corners (Test source rs2 value = 0x1)
li x26, 0xdec7c4ff23acbe50 # initialize rs1
li x19, 0x0000000000000001 # initialize rs2
min x15, x26, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 904)

# Testcase cp_rs2_corners (Test source rs2 value = 0x2)
li x26, 0x9dc6d1b14d75aef8 # initialize rs1
li x18, 0x0000000000000002 # initialize rs2
min x3, x26, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 912)

# Testcase cp_rs2_corners (Test source rs2 value = 0x8000000000000000)
li x1, 0xb086376e880f75fd # initialize rs1
li x8, 0x8000000000000000 # initialize rs2
min x24, x1, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 920)

# Testcase cp_rs2_corners (Test source rs2 value = 0x8000000000000001)
li x13, 0x4bf53dd427f33cea # initialize rs1
li x6, 0x8000000000000001 # initialize rs2
min x3, x13, x6 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 928)

# Testcase cp_rs2_corners (Test source rs2 value = 0x7fffffffffffffff)
li x15, 0x3cd2bbce82ac5d49 # initialize rs1
li x12, 0x7fffffffffffffff # initialize rs2
min x18, x15, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 936)

# Testcase cp_rs2_corners (Test source rs2 value = 0x7ffffffffffffffe)
li x16, 0x14bd881f2ff3a075 # initialize rs1
li x11, 0x7ffffffffffffffe # initialize rs2
min x3, x16, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 944)

# Testcase cp_rs2_corners (Test source rs2 value = 0xffffffffffffffff)
li x27, 0xc1b1ae1e7d209402 # initialize rs1
li x5, 0xffffffffffffffff # initialize rs2
min x2, x27, x5 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 952)

# Testcase cp_rs2_corners (Test source rs2 value = 0xfffffffffffffffe)
li x1, 0x3f9c86fe670e6b09 # initialize rs1
li x5, 0xfffffffffffffffe # initialize rs2
min x27, x1, x5 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 960)

# Testcase cp_rs2_corners (Test source rs2 value = 0x5bbc887763ae86f2)
li x21, 0x6c3c003a263e90d5 # initialize rs1
li x28, 0x5bbc887763ae86f2 # initialize rs2
min x29, x21, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 968)

# Testcase cp_rs2_corners (Test source rs2 value = 0xaaaaaaaaaaaaaaaa)
li x10, 0xb90a109500d69909 # initialize rs1
li x20, 0xaaaaaaaaaaaaaaaa # initialize rs2
min x28, x10, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x28, 976)

# Testcase cp_rs2_corners (Test source rs2 value = 0x5555555555555555)
li x29, 0x2647c74af142dfda # initialize rs1
li x9, 0x5555555555555555 # initialize rs2
min x1, x29, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 984)

# Testcase cp_rs2_corners (Test source rs2 value = 0xffffffff)
li x14, 0x080410dc038d67c6 # initialize rs1
li x23, 0x00000000ffffffff # initialize rs2
min x30, x14, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 992)

# Testcase cp_rs2_corners (Test source rs2 value = 0xfffffffe)
li x16, 0x1e4e4ff84a19d0b5 # initialize rs1
li x19, 0x00000000fffffffe # initialize rs2
min x14, x16, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 1000)

# Testcase cp_rs2_corners (Test source rs2 value = 0x100000000)
li x9, 0x36adb34fe9239911 # initialize rs1
li x10, 0x0000000100000000 # initialize rs2
min x6, x9, x10 # perform operation
RVTEST_SIGUPD(x4, x0, x6, 1008)

# Testcase cp_rs2_corners (Test source rs2 value = 0x100000001)
li x5, 0xacb0364d26fdeacc # initialize rs1
li x16, 0x0000000100000001 # initialize rs2
min x20, x5, x16 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 1016)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0x0)
li x2, 0x0000000000000000 # initialize rs1
li x27, 0x0000000000000000 # initialize rs2
min x17, x2, x27 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 1024)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0x1)
li x27, 0x0000000000000000 # initialize rs1
li x29, 0x0000000000000001 # initialize rs2
min x30, x27, x29 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 1032)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0x2)
li x11, 0x0000000000000000 # initialize rs1
li x19, 0x0000000000000002 # initialize rs2
min x26, x11, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 1040)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0x8000000000000000)
li x27, 0x0000000000000000 # initialize rs1
li x23, 0x8000000000000000 # initialize rs2
min x26, x27, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 1048)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0x8000000000000001)
li x16, 0x0000000000000000 # initialize rs1
li x3, 0x8000000000000001 # initialize rs2
min x21, x16, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 1056)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0x7fffffffffffffff)
li x10, 0x0000000000000000 # initialize rs1
li x15, 0x7fffffffffffffff # initialize rs2
min x22, x10, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 1064)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0x7ffffffffffffffe)
li x12, 0x0000000000000000 # initialize rs1
li x2, 0x7ffffffffffffffe # initialize rs2
min x20, x12, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 1072)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0xffffffffffffffff)
li x30, 0x0000000000000000 # initialize rs1
li x9, 0xffffffffffffffff # initialize rs2
min x24, x30, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 1080)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0xfffffffffffffffe)
li x1, 0x0000000000000000 # initialize rs1
li x13, 0xfffffffffffffffe # initialize rs2
min x26, x1, x13 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 1088)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0x5bbc887763ae86f2)
li x25, 0x0000000000000000 # initialize rs1
li x17, 0x5bbc887763ae86f2 # initialize rs2
min x12, x25, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 1096)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0xaaaaaaaaaaaaaaaa)
li x11, 0x0000000000000000 # initialize rs1
li x31, 0xaaaaaaaaaaaaaaaa # initialize rs2
min x15, x11, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 1104)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0x5555555555555555)
li x13, 0x0000000000000000 # initialize rs1
li x12, 0x5555555555555555 # initialize rs2
min x14, x13, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 1112)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0xffffffff)
li x11, 0x0000000000000000 # initialize rs1
li x22, 0x00000000ffffffff # initialize rs2
min x24, x11, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 1120)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0xfffffffe)
li x10, 0x0000000000000000 # initialize rs1
li x8, 0x00000000fffffffe # initialize rs2
min x16, x10, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 1128)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0x100000000)
li x24, 0x0000000000000000 # initialize rs1
li x13, 0x0000000100000000 # initialize rs2
min x14, x24, x13 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 1136)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0x100000001)
li x15, 0x0000000000000000 # initialize rs1
li x2, 0x0000000100000001 # initialize rs2
min x6, x15, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x6, 1144)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0x0)
li x29, 0x0000000000000001 # initialize rs1
li x23, 0x0000000000000000 # initialize rs2
min x9, x29, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 1152)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0x1)
li x24, 0x0000000000000001 # initialize rs1
li x3, 0x0000000000000001 # initialize rs2
min x9, x24, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 1160)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0x2)
li x3, 0x0000000000000001 # initialize rs1
li x26, 0x0000000000000002 # initialize rs2
min x13, x3, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 1168)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0x8000000000000000)
li x25, 0x0000000000000001 # initialize rs1
li x17, 0x8000000000000000 # initialize rs2
min x22, x25, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 1176)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0x8000000000000001)
li x24, 0x0000000000000001 # initialize rs1
li x18, 0x8000000000000001 # initialize rs2
min x6, x24, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x6, 1184)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0x7fffffffffffffff)
li x15, 0x0000000000000001 # initialize rs1
li x31, 0x7fffffffffffffff # initialize rs2
min x10, x15, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 1192)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0x7ffffffffffffffe)
li x15, 0x0000000000000001 # initialize rs1
li x12, 0x7ffffffffffffffe # initialize rs2
min x10, x15, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 1200)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0xffffffffffffffff)
li x16, 0x0000000000000001 # initialize rs1
li x22, 0xffffffffffffffff # initialize rs2
min x18, x16, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 1208)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0xfffffffffffffffe)
li x22, 0x0000000000000001 # initialize rs1
li x24, 0xfffffffffffffffe # initialize rs2
min x21, x22, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 1216)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0x5bbc887763ae86f2)
li x11, 0x0000000000000001 # initialize rs1
li x26, 0x5bbc887763ae86f2 # initialize rs2
min x1, x11, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 1224)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0xaaaaaaaaaaaaaaaa)
li x12, 0x0000000000000001 # initialize rs1
li x14, 0xaaaaaaaaaaaaaaaa # initialize rs2
min x23, x12, x14 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 1232)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0x5555555555555555)
li x16, 0x0000000000000001 # initialize rs1
li x24, 0x5555555555555555 # initialize rs2
min x10, x16, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 1240)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0xffffffff)
li x23, 0x0000000000000001 # initialize rs1
li x11, 0x00000000ffffffff # initialize rs2
min x7, x23, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 1248)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0xfffffffe)
li x27, 0x0000000000000001 # initialize rs1
li x21, 0x00000000fffffffe # initialize rs2
min x29, x27, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 1256)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0x100000000)
li x15, 0x0000000000000001 # initialize rs1
li x13, 0x0000000100000000 # initialize rs2
min x10, x15, x13 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 1264)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0x100000001)
li x30, 0x0000000000000001 # initialize rs1
li x28, 0x0000000100000001 # initialize rs2
min x31, x30, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 1272)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0x0)
li x6, 0x0000000000000002 # initialize rs1
li x30, 0x0000000000000000 # initialize rs2
min x13, x6, x30 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 1280)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0x1)
li x15, 0x0000000000000002 # initialize rs1
li x7, 0x0000000000000001 # initialize rs2
min x13, x15, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 1288)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0x2)
li x19, 0x0000000000000002 # initialize rs1
li x13, 0x0000000000000002 # initialize rs2
min x20, x19, x13 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 1296)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0x8000000000000000)
li x1, 0x0000000000000002 # initialize rs1
li x8, 0x8000000000000000 # initialize rs2
min x30, x1, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 1304)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0x8000000000000001)
li x5, 0x0000000000000002 # initialize rs1
li x15, 0x8000000000000001 # initialize rs2
min x28, x5, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x28, 1312)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0x7fffffffffffffff)
li x7, 0x0000000000000002 # initialize rs1
li x20, 0x7fffffffffffffff # initialize rs2
min x9, x7, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 1320)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0x7ffffffffffffffe)
li x27, 0x0000000000000002 # initialize rs1
li x14, 0x7ffffffffffffffe # initialize rs2
min x20, x27, x14 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 1328)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0xffffffffffffffff)
li x19, 0x0000000000000002 # initialize rs1
li x14, 0xffffffffffffffff # initialize rs2
min x3, x19, x14 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 1336)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0xfffffffffffffffe)
li x7, 0x0000000000000002 # initialize rs1
li x23, 0xfffffffffffffffe # initialize rs2
min x2, x7, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 1344)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0x5bbc887763ae86f2)
li x19, 0x0000000000000002 # initialize rs1
li x13, 0x5bbc887763ae86f2 # initialize rs2
min x2, x19, x13 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 1352)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0xaaaaaaaaaaaaaaaa)
li x14, 0x0000000000000002 # initialize rs1
li x17, 0xaaaaaaaaaaaaaaaa # initialize rs2
min x21, x14, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 1360)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0x5555555555555555)
li x11, 0x0000000000000002 # initialize rs1
li x23, 0x5555555555555555 # initialize rs2
min x6, x11, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x6, 1368)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0xffffffff)
li x30, 0x0000000000000002 # initialize rs1
li x24, 0x00000000ffffffff # initialize rs2
min x2, x30, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 1376)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0xfffffffe)
li x30, 0x0000000000000002 # initialize rs1
li x1, 0x00000000fffffffe # initialize rs2
min x18, x30, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 1384)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0x100000000)
li x13, 0x0000000000000002 # initialize rs1
li x12, 0x0000000100000000 # initialize rs2
min x23, x13, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 1392)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0x100000001)
li x21, 0x0000000000000002 # initialize rs1
li x27, 0x0000000100000001 # initialize rs2
min x20, x21, x27 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 1400)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0x0)
li x22, 0x8000000000000000 # initialize rs1
li x10, 0x0000000000000000 # initialize rs2
min x24, x22, x10 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 1408)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0x1)
li x1, 0x8000000000000000 # initialize rs1
li x16, 0x0000000000000001 # initialize rs2
min x26, x1, x16 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 1416)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0x2)
li x28, 0x8000000000000000 # initialize rs1
li x26, 0x0000000000000002 # initialize rs2
min x16, x28, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 1424)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0x8000000000000000)
li x20, 0x8000000000000000 # initialize rs1
li x1, 0x8000000000000000 # initialize rs2
min x21, x20, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 1432)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0x8000000000000001)
li x6, 0x8000000000000000 # initialize rs1
li x21, 0x8000000000000001 # initialize rs2
min x12, x6, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 1440)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0x7fffffffffffffff)
li x23, 0x8000000000000000 # initialize rs1
li x10, 0x7fffffffffffffff # initialize rs2
min x19, x23, x10 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 1448)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0x7ffffffffffffffe)
li x27, 0x8000000000000000 # initialize rs1
li x14, 0x7ffffffffffffffe # initialize rs2
min x29, x27, x14 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 1456)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0xffffffffffffffff)
li x18, 0x8000000000000000 # initialize rs1
li x23, 0xffffffffffffffff # initialize rs2
min x8, x18, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 1464)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0xfffffffffffffffe)
li x14, 0x8000000000000000 # initialize rs1
li x5, 0xfffffffffffffffe # initialize rs2
min x13, x14, x5 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 1472)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0x5bbc887763ae86f2)
li x28, 0x8000000000000000 # initialize rs1
li x29, 0x5bbc887763ae86f2 # initialize rs2
min x18, x28, x29 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 1480)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0xaaaaaaaaaaaaaaaa)
li x28, 0x8000000000000000 # initialize rs1
li x2, 0xaaaaaaaaaaaaaaaa # initialize rs2
min x13, x28, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 1488)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0x5555555555555555)
li x24, 0x8000000000000000 # initialize rs1
li x1, 0x5555555555555555 # initialize rs2
min x21, x24, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 1496)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0xffffffff)
li x31, 0x8000000000000000 # initialize rs1
li x23, 0x00000000ffffffff # initialize rs2
min x24, x31, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 1504)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0xfffffffe)
li x16, 0x8000000000000000 # initialize rs1
li x20, 0x00000000fffffffe # initialize rs2
min x3, x16, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 1512)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0x100000000)
li x29, 0x8000000000000000 # initialize rs1
li x2, 0x0000000100000000 # initialize rs2
min x25, x29, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 1520)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0x100000001)
li x27, 0x8000000000000000 # initialize rs1
li x16, 0x0000000100000001 # initialize rs2
min x26, x27, x16 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 1528)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0x0)
li x17, 0x8000000000000001 # initialize rs1
li x19, 0x0000000000000000 # initialize rs2
min x21, x17, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 1536)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0x1)
li x1, 0x8000000000000001 # initialize rs1
li x31, 0x0000000000000001 # initialize rs2
min x30, x1, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 1544)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0x2)
li x12, 0x8000000000000001 # initialize rs1
li x23, 0x0000000000000002 # initialize rs2
min x13, x12, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 1552)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0x8000000000000000)
li x31, 0x8000000000000001 # initialize rs1
li x15, 0x8000000000000000 # initialize rs2
min x16, x31, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 1560)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0x8000000000000001)
li x10, 0x8000000000000001 # initialize rs1
li x15, 0x8000000000000001 # initialize rs2
min x28, x10, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x28, 1568)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0x7fffffffffffffff)
li x30, 0x8000000000000001 # initialize rs1
li x25, 0x7fffffffffffffff # initialize rs2
min x10, x30, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 1576)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0x7ffffffffffffffe)
li x17, 0x8000000000000001 # initialize rs1
li x29, 0x7ffffffffffffffe # initialize rs2
min x16, x17, x29 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 1584)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0xffffffffffffffff)
li x15, 0x8000000000000001 # initialize rs1
li x24, 0xffffffffffffffff # initialize rs2
min x31, x15, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 1592)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0xfffffffffffffffe)
li x1, 0x8000000000000001 # initialize rs1
li x21, 0xfffffffffffffffe # initialize rs2
min x16, x1, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 1600)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0x5bbc887763ae86f2)
li x13, 0x8000000000000001 # initialize rs1
li x1, 0x5bbc887763ae86f2 # initialize rs2
min x27, x13, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 1608)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0xaaaaaaaaaaaaaaaa)
li x24, 0x8000000000000001 # initialize rs1
li x16, 0xaaaaaaaaaaaaaaaa # initialize rs2
min x30, x24, x16 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 1616)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0x5555555555555555)
li x27, 0x8000000000000001 # initialize rs1
li x30, 0x5555555555555555 # initialize rs2
min x10, x27, x30 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 1624)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0xffffffff)
li x2, 0x8000000000000001 # initialize rs1
li x6, 0x00000000ffffffff # initialize rs2
min x10, x2, x6 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 1632)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0xfffffffe)
li x9, 0x8000000000000001 # initialize rs1
li x16, 0x00000000fffffffe # initialize rs2
min x30, x9, x16 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 1640)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0x100000000)
li x30, 0x8000000000000001 # initialize rs1
li x12, 0x0000000100000000 # initialize rs2
min x31, x30, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 1648)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0x100000001)
li x15, 0x8000000000000001 # initialize rs1
li x24, 0x0000000100000001 # initialize rs2
min x16, x15, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 1656)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0x0)
li x24, 0x7fffffffffffffff # initialize rs1
li x22, 0x0000000000000000 # initialize rs2
min x5, x24, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x5, 1664)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0x1)
li x14, 0x7fffffffffffffff # initialize rs1
li x9, 0x0000000000000001 # initialize rs2
min x30, x14, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 1672)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0x2)
li x13, 0x7fffffffffffffff # initialize rs1
li x2, 0x0000000000000002 # initialize rs2
min x8, x13, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 1680)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0x8000000000000000)
li x3, 0x7fffffffffffffff # initialize rs1
li x17, 0x8000000000000000 # initialize rs2
min x5, x3, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x5, 1688)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0x8000000000000001)
li x23, 0x7fffffffffffffff # initialize rs1
li x17, 0x8000000000000001 # initialize rs2
min x11, x23, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 1696)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0x7fffffffffffffff)
li x3, 0x7fffffffffffffff # initialize rs1
li x1, 0x7fffffffffffffff # initialize rs2
min x17, x3, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 1704)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0x7ffffffffffffffe)
li x1, 0x7fffffffffffffff # initialize rs1
li x10, 0x7ffffffffffffffe # initialize rs2
min x26, x1, x10 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 1712)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0xffffffffffffffff)
li x20, 0x7fffffffffffffff # initialize rs1
li x9, 0xffffffffffffffff # initialize rs2
min x15, x20, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 1720)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0xfffffffffffffffe)
li x28, 0x7fffffffffffffff # initialize rs1
li x24, 0xfffffffffffffffe # initialize rs2
min x30, x28, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 1728)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0x5bbc887763ae86f2)
li x17, 0x7fffffffffffffff # initialize rs1
li x2, 0x5bbc887763ae86f2 # initialize rs2
min x30, x17, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 1736)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0xaaaaaaaaaaaaaaaa)
li x16, 0x7fffffffffffffff # initialize rs1
li x23, 0xaaaaaaaaaaaaaaaa # initialize rs2
min x8, x16, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 1744)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0x5555555555555555)
li x15, 0x7fffffffffffffff # initialize rs1
li x9, 0x5555555555555555 # initialize rs2
min x27, x15, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 1752)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0xffffffff)
li x14, 0x7fffffffffffffff # initialize rs1
li x12, 0x00000000ffffffff # initialize rs2
min x8, x14, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 1760)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0xfffffffe)
li x19, 0x7fffffffffffffff # initialize rs1
li x5, 0x00000000fffffffe # initialize rs2
min x18, x19, x5 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 1768)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0x100000000)
li x26, 0x7fffffffffffffff # initialize rs1
li x11, 0x0000000100000000 # initialize rs2
min x14, x26, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 1776)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0x100000001)
li x14, 0x7fffffffffffffff # initialize rs1
li x31, 0x0000000100000001 # initialize rs2
min x20, x14, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 1784)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0x0)
li x7, 0x7ffffffffffffffe # initialize rs1
li x6, 0x0000000000000000 # initialize rs2
min x31, x7, x6 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 1792)
addi x4, x4, 1800 # increment signature pointer and reset offset

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0x1)
li x7, 0x7ffffffffffffffe # initialize rs1
li x14, 0x0000000000000001 # initialize rs2
min x12, x7, x14 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 0)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0x2)
li x27, 0x7ffffffffffffffe # initialize rs1
li x26, 0x0000000000000002 # initialize rs2
min x11, x27, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 8)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0x8000000000000000)
li x3, 0x7ffffffffffffffe # initialize rs1
li x26, 0x8000000000000000 # initialize rs2
min x27, x3, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 16)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0x8000000000000001)
li x7, 0x7ffffffffffffffe # initialize rs1
li x20, 0x8000000000000001 # initialize rs2
min x1, x7, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 24)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0x7fffffffffffffff)
li x16, 0x7ffffffffffffffe # initialize rs1
li x2, 0x7fffffffffffffff # initialize rs2
min x1, x16, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 32)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0x7ffffffffffffffe)
li x27, 0x7ffffffffffffffe # initialize rs1
li x26, 0x7ffffffffffffffe # initialize rs2
min x7, x27, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 40)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0xffffffffffffffff)
li x23, 0x7ffffffffffffffe # initialize rs1
li x18, 0xffffffffffffffff # initialize rs2
min x11, x23, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 48)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0xfffffffffffffffe)
li x15, 0x7ffffffffffffffe # initialize rs1
li x8, 0xfffffffffffffffe # initialize rs2
min x12, x15, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 56)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0x5bbc887763ae86f2)
li x15, 0x7ffffffffffffffe # initialize rs1
li x9, 0x5bbc887763ae86f2 # initialize rs2
min x11, x15, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 64)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0xaaaaaaaaaaaaaaaa)
li x20, 0x7ffffffffffffffe # initialize rs1
li x1, 0xaaaaaaaaaaaaaaaa # initialize rs2
min x7, x20, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 72)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0x5555555555555555)
li x24, 0x7ffffffffffffffe # initialize rs1
li x11, 0x5555555555555555 # initialize rs2
min x15, x24, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 80)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0xffffffff)
li x11, 0x7ffffffffffffffe # initialize rs1
li x14, 0x00000000ffffffff # initialize rs2
min x22, x11, x14 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 88)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0xfffffffe)
li x30, 0x7ffffffffffffffe # initialize rs1
li x24, 0x00000000fffffffe # initialize rs2
min x18, x30, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 96)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0x100000000)
li x1, 0x7ffffffffffffffe # initialize rs1
li x21, 0x0000000100000000 # initialize rs2
min x5, x1, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x5, 104)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0x100000001)
li x18, 0x7ffffffffffffffe # initialize rs1
li x26, 0x0000000100000001 # initialize rs2
min x27, x18, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 112)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0x0)
li x26, 0xffffffffffffffff # initialize rs1
li x19, 0x0000000000000000 # initialize rs2
min x21, x26, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 120)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0x1)
li x13, 0xffffffffffffffff # initialize rs1
li x9, 0x0000000000000001 # initialize rs2
min x23, x13, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 128)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0x2)
li x17, 0xffffffffffffffff # initialize rs1
li x13, 0x0000000000000002 # initialize rs2
min x23, x17, x13 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 136)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0x8000000000000000)
li x26, 0xffffffffffffffff # initialize rs1
li x10, 0x8000000000000000 # initialize rs2
min x7, x26, x10 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 144)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0x8000000000000001)
li x25, 0xffffffffffffffff # initialize rs1
li x5, 0x8000000000000001 # initialize rs2
min x18, x25, x5 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 152)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0x7fffffffffffffff)
li x2, 0xffffffffffffffff # initialize rs1
li x9, 0x7fffffffffffffff # initialize rs2
min x19, x2, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 160)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0x7ffffffffffffffe)
li x18, 0xffffffffffffffff # initialize rs1
li x21, 0x7ffffffffffffffe # initialize rs2
min x22, x18, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 168)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0xffffffffffffffff)
li x21, 0xffffffffffffffff # initialize rs1
li x19, 0xffffffffffffffff # initialize rs2
min x25, x21, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 176)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0xfffffffffffffffe)
li x29, 0xffffffffffffffff # initialize rs1
li x24, 0xfffffffffffffffe # initialize rs2
min x23, x29, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 184)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0x5bbc887763ae86f2)
li x10, 0xffffffffffffffff # initialize rs1
li x8, 0x5bbc887763ae86f2 # initialize rs2
min x27, x10, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 192)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0xaaaaaaaaaaaaaaaa)
li x19, 0xffffffffffffffff # initialize rs1
li x20, 0xaaaaaaaaaaaaaaaa # initialize rs2
min x18, x19, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 200)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0x5555555555555555)
li x1, 0xffffffffffffffff # initialize rs1
li x27, 0x5555555555555555 # initialize rs2
min x20, x1, x27 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 208)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0xffffffff)
li x1, 0xffffffffffffffff # initialize rs1
li x15, 0x00000000ffffffff # initialize rs2
min x28, x1, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x28, 216)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0xfffffffe)
li x23, 0xffffffffffffffff # initialize rs1
li x28, 0x00000000fffffffe # initialize rs2
min x21, x23, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 224)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0x100000000)
li x26, 0xffffffffffffffff # initialize rs1
li x15, 0x0000000100000000 # initialize rs2
min x11, x26, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 232)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0x100000001)
li x25, 0xffffffffffffffff # initialize rs1
li x26, 0x0000000100000001 # initialize rs2
min x27, x25, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 240)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0x0)
li x8, 0xfffffffffffffffe # initialize rs1
li x30, 0x0000000000000000 # initialize rs2
min x29, x8, x30 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 248)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0x1)
li x22, 0xfffffffffffffffe # initialize rs1
li x5, 0x0000000000000001 # initialize rs2
min x17, x22, x5 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 256)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0x2)
li x21, 0xfffffffffffffffe # initialize rs1
li x30, 0x0000000000000002 # initialize rs2
min x12, x21, x30 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 264)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0x8000000000000000)
li x30, 0xfffffffffffffffe # initialize rs1
li x20, 0x8000000000000000 # initialize rs2
min x31, x30, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 272)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0x8000000000000001)
li x16, 0xfffffffffffffffe # initialize rs1
li x27, 0x8000000000000001 # initialize rs2
min x7, x16, x27 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 280)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0x7fffffffffffffff)
li x10, 0xfffffffffffffffe # initialize rs1
li x26, 0x7fffffffffffffff # initialize rs2
min x27, x10, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 288)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0x7ffffffffffffffe)
li x15, 0xfffffffffffffffe # initialize rs1
li x28, 0x7ffffffffffffffe # initialize rs2
min x23, x15, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 296)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0xffffffffffffffff)
li x11, 0xfffffffffffffffe # initialize rs1
li x2, 0xffffffffffffffff # initialize rs2
min x16, x11, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 304)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0xfffffffffffffffe)
li x13, 0xfffffffffffffffe # initialize rs1
li x27, 0xfffffffffffffffe # initialize rs2
min x29, x13, x27 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 312)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0x5bbc887763ae86f2)
li x11, 0xfffffffffffffffe # initialize rs1
li x7, 0x5bbc887763ae86f2 # initialize rs2
min x20, x11, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 320)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0xaaaaaaaaaaaaaaaa)
li x15, 0xfffffffffffffffe # initialize rs1
li x12, 0xaaaaaaaaaaaaaaaa # initialize rs2
min x19, x15, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 328)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0x5555555555555555)
li x8, 0xfffffffffffffffe # initialize rs1
li x21, 0x5555555555555555 # initialize rs2
min x13, x8, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 336)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0xffffffff)
li x23, 0xfffffffffffffffe # initialize rs1
li x13, 0x00000000ffffffff # initialize rs2
min x19, x23, x13 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 344)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0xfffffffe)
li x25, 0xfffffffffffffffe # initialize rs1
li x26, 0x00000000fffffffe # initialize rs2
min x14, x25, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 352)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0x100000000)
li x28, 0xfffffffffffffffe # initialize rs1
li x27, 0x0000000100000000 # initialize rs2
min x14, x28, x27 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 360)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0x100000001)
li x29, 0xfffffffffffffffe # initialize rs1
li x9, 0x0000000100000001 # initialize rs2
min x24, x29, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 368)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0x0)
li x1, 0x5bbc887763ae86f2 # initialize rs1
li x31, 0x0000000000000000 # initialize rs2
min x10, x1, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 376)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0x1)
li x9, 0x5bbc887763ae86f2 # initialize rs1
li x12, 0x0000000000000001 # initialize rs2
min x13, x9, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 384)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0x2)
li x20, 0x5bbc887763ae86f2 # initialize rs1
li x22, 0x0000000000000002 # initialize rs2
min x11, x20, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 392)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0x8000000000000000)
li x28, 0x5bbc887763ae86f2 # initialize rs1
li x20, 0x8000000000000000 # initialize rs2
min x22, x28, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 400)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0x8000000000000001)
li x9, 0x5bbc887763ae86f2 # initialize rs1
li x1, 0x8000000000000001 # initialize rs2
min x31, x9, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 408)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0x7fffffffffffffff)
li x17, 0x5bbc887763ae86f2 # initialize rs1
li x20, 0x7fffffffffffffff # initialize rs2
min x7, x17, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 416)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0x7ffffffffffffffe)
li x22, 0x5bbc887763ae86f2 # initialize rs1
li x19, 0x7ffffffffffffffe # initialize rs2
min x28, x22, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x28, 424)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0xffffffffffffffff)
li x17, 0x5bbc887763ae86f2 # initialize rs1
li x18, 0xffffffffffffffff # initialize rs2
min x29, x17, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 432)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0xfffffffffffffffe)
li x26, 0x5bbc887763ae86f2 # initialize rs1
li x13, 0xfffffffffffffffe # initialize rs2
min x30, x26, x13 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 440)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0x5bbc887763ae86f2)
li x22, 0x5bbc887763ae86f2 # initialize rs1
li x1, 0x5bbc887763ae86f2 # initialize rs2
min x11, x22, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 448)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0xaaaaaaaaaaaaaaaa)
li x8, 0x5bbc887763ae86f2 # initialize rs1
li x5, 0xaaaaaaaaaaaaaaaa # initialize rs2
min x21, x8, x5 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 456)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0x5555555555555555)
li x28, 0x5bbc887763ae86f2 # initialize rs1
li x31, 0x5555555555555555 # initialize rs2
min x13, x28, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 464)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0xffffffff)
li x14, 0x5bbc887763ae86f2 # initialize rs1
li x30, 0x00000000ffffffff # initialize rs2
min x27, x14, x30 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 472)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0xfffffffe)
li x22, 0x5bbc887763ae86f2 # initialize rs1
li x1, 0x00000000fffffffe # initialize rs2
min x14, x22, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 480)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0x100000000)
li x18, 0x5bbc887763ae86f2 # initialize rs1
li x26, 0x0000000100000000 # initialize rs2
min x14, x18, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 488)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0x100000001)
li x15, 0x5bbc887763ae86f2 # initialize rs1
li x5, 0x0000000100000001 # initialize rs2
min x22, x15, x5 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 496)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0x0)
li x9, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x31, 0x0000000000000000 # initialize rs2
min x3, x9, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 504)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0x1)
li x25, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x2, 0x0000000000000001 # initialize rs2
min x12, x25, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 512)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0x2)
li x15, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x30, 0x0000000000000002 # initialize rs2
min x18, x15, x30 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 520)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0x8000000000000000)
li x15, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x10, 0x8000000000000000 # initialize rs2
min x5, x15, x10 # perform operation
RVTEST_SIGUPD(x4, x0, x5, 528)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0x8000000000000001)
li x20, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x30, 0x8000000000000001 # initialize rs2
min x28, x20, x30 # perform operation
RVTEST_SIGUPD(x4, x0, x28, 536)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0x7fffffffffffffff)
li x13, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x14, 0x7fffffffffffffff # initialize rs2
min x16, x13, x14 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 544)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0x7ffffffffffffffe)
li x13, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x2, 0x7ffffffffffffffe # initialize rs2
min x12, x13, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 552)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0xffffffffffffffff)
li x14, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x31, 0xffffffffffffffff # initialize rs2
min x26, x14, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 560)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0xfffffffffffffffe)
li x24, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x7, 0xfffffffffffffffe # initialize rs2
min x12, x24, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 568)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0x5bbc887763ae86f2)
li x9, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x3, 0x5bbc887763ae86f2 # initialize rs2
min x31, x9, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 576)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0xaaaaaaaaaaaaaaaa)
li x10, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x19, 0xaaaaaaaaaaaaaaaa # initialize rs2
min x11, x10, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 584)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0x5555555555555555)
li x30, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x19, 0x5555555555555555 # initialize rs2
min x24, x30, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 592)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0xffffffff)
li x15, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x28, 0x00000000ffffffff # initialize rs2
min x24, x15, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 600)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0xfffffffe)
li x23, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x7, 0x00000000fffffffe # initialize rs2
min x9, x23, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 608)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0x100000000)
li x24, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x2, 0x0000000100000000 # initialize rs2
min x13, x24, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 616)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0x100000001)
li x15, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x8, 0x0000000100000001 # initialize rs2
min x9, x15, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 624)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0x0)
li x31, 0x5555555555555555 # initialize rs1
li x2, 0x0000000000000000 # initialize rs2
min x30, x31, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 632)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0x1)
li x29, 0x5555555555555555 # initialize rs1
li x24, 0x0000000000000001 # initialize rs2
min x9, x29, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 640)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0x2)
li x22, 0x5555555555555555 # initialize rs1
li x7, 0x0000000000000002 # initialize rs2
min x17, x22, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 648)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0x8000000000000000)
li x22, 0x5555555555555555 # initialize rs1
li x20, 0x8000000000000000 # initialize rs2
min x25, x22, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 656)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0x8000000000000001)
li x1, 0x5555555555555555 # initialize rs1
li x21, 0x8000000000000001 # initialize rs2
min x29, x1, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 664)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0x7fffffffffffffff)
li x20, 0x5555555555555555 # initialize rs1
li x18, 0x7fffffffffffffff # initialize rs2
min x21, x20, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 672)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0x7ffffffffffffffe)
li x20, 0x5555555555555555 # initialize rs1
li x24, 0x7ffffffffffffffe # initialize rs2
min x14, x20, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 680)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0xffffffffffffffff)
li x19, 0x5555555555555555 # initialize rs1
li x6, 0xffffffffffffffff # initialize rs2
min x16, x19, x6 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 688)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0xfffffffffffffffe)
li x5, 0x5555555555555555 # initialize rs1
li x12, 0xfffffffffffffffe # initialize rs2
min x1, x5, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 696)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0x5bbc887763ae86f2)
li x14, 0x5555555555555555 # initialize rs1
li x28, 0x5bbc887763ae86f2 # initialize rs2
min x19, x14, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 704)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0xaaaaaaaaaaaaaaaa)
li x24, 0x5555555555555555 # initialize rs1
li x13, 0xaaaaaaaaaaaaaaaa # initialize rs2
min x23, x24, x13 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 712)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0x5555555555555555)
li x27, 0x5555555555555555 # initialize rs1
li x21, 0x5555555555555555 # initialize rs2
min x10, x27, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 720)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0xffffffff)
li x25, 0x5555555555555555 # initialize rs1
li x26, 0x00000000ffffffff # initialize rs2
min x29, x25, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 728)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0xfffffffe)
li x15, 0x5555555555555555 # initialize rs1
li x20, 0x00000000fffffffe # initialize rs2
min x5, x15, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x5, 736)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0x100000000)
li x21, 0x5555555555555555 # initialize rs1
li x7, 0x0000000100000000 # initialize rs2
min x5, x21, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x5, 744)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0x100000001)
li x17, 0x5555555555555555 # initialize rs1
li x22, 0x0000000100000001 # initialize rs2
min x29, x17, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 752)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0x0)
li x12, 0x00000000ffffffff # initialize rs1
li x30, 0x0000000000000000 # initialize rs2
min x14, x12, x30 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 760)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0x1)
li x15, 0x00000000ffffffff # initialize rs1
li x28, 0x0000000000000001 # initialize rs2
min x12, x15, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 768)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0x2)
li x5, 0x00000000ffffffff # initialize rs1
li x18, 0x0000000000000002 # initialize rs2
min x8, x5, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 776)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0x8000000000000000)
li x2, 0x00000000ffffffff # initialize rs1
li x29, 0x8000000000000000 # initialize rs2
min x25, x2, x29 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 784)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0x8000000000000001)
li x17, 0x00000000ffffffff # initialize rs1
li x15, 0x8000000000000001 # initialize rs2
min x30, x17, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 792)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0x7fffffffffffffff)
li x5, 0x00000000ffffffff # initialize rs1
li x22, 0x7fffffffffffffff # initialize rs2
min x6, x5, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x6, 800)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0x7ffffffffffffffe)
li x27, 0x00000000ffffffff # initialize rs1
li x2, 0x7ffffffffffffffe # initialize rs2
min x17, x27, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 808)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0xffffffffffffffff)
li x25, 0x00000000ffffffff # initialize rs1
li x13, 0xffffffffffffffff # initialize rs2
min x2, x25, x13 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 816)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0xfffffffffffffffe)
li x23, 0x00000000ffffffff # initialize rs1
li x9, 0xfffffffffffffffe # initialize rs2
min x10, x23, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 824)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0x5bbc887763ae86f2)
li x20, 0x00000000ffffffff # initialize rs1
li x14, 0x5bbc887763ae86f2 # initialize rs2
min x7, x20, x14 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 832)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0xaaaaaaaaaaaaaaaa)
li x15, 0x00000000ffffffff # initialize rs1
li x17, 0xaaaaaaaaaaaaaaaa # initialize rs2
min x10, x15, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 840)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0x5555555555555555)
li x10, 0x00000000ffffffff # initialize rs1
li x12, 0x5555555555555555 # initialize rs2
min x25, x10, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 848)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0xffffffff)
li x20, 0x00000000ffffffff # initialize rs1
li x22, 0x00000000ffffffff # initialize rs2
min x27, x20, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 856)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0xfffffffe)
li x18, 0x00000000ffffffff # initialize rs1
li x14, 0x00000000fffffffe # initialize rs2
min x10, x18, x14 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 864)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0x100000000)
li x24, 0x00000000ffffffff # initialize rs1
li x17, 0x0000000100000000 # initialize rs2
min x14, x24, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 872)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0x100000001)
li x27, 0x00000000ffffffff # initialize rs1
li x29, 0x0000000100000001 # initialize rs2
min x30, x27, x29 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 880)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0x0)
li x6, 0x00000000fffffffe # initialize rs1
li x28, 0x0000000000000000 # initialize rs2
min x29, x6, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 888)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0x1)
li x2, 0x00000000fffffffe # initialize rs1
li x30, 0x0000000000000001 # initialize rs2
min x3, x2, x30 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 896)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0x2)
li x28, 0x00000000fffffffe # initialize rs1
li x1, 0x0000000000000002 # initialize rs2
min x16, x28, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 904)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0x8000000000000000)
li x21, 0x00000000fffffffe # initialize rs1
li x7, 0x8000000000000000 # initialize rs2
min x28, x21, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x28, 912)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0x8000000000000001)
li x26, 0x00000000fffffffe # initialize rs1
li x24, 0x8000000000000001 # initialize rs2
min x16, x26, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 920)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0x7fffffffffffffff)
li x23, 0x00000000fffffffe # initialize rs1
li x29, 0x7fffffffffffffff # initialize rs2
min x18, x23, x29 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 928)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0x7ffffffffffffffe)
li x9, 0x00000000fffffffe # initialize rs1
li x17, 0x7ffffffffffffffe # initialize rs2
min x25, x9, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 936)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0xffffffffffffffff)
li x5, 0x00000000fffffffe # initialize rs1
li x7, 0xffffffffffffffff # initialize rs2
min x17, x5, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 944)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0xfffffffffffffffe)
li x29, 0x00000000fffffffe # initialize rs1
li x25, 0xfffffffffffffffe # initialize rs2
min x8, x29, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 952)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0x5bbc887763ae86f2)
li x24, 0x00000000fffffffe # initialize rs1
li x22, 0x5bbc887763ae86f2 # initialize rs2
min x25, x24, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 960)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0xaaaaaaaaaaaaaaaa)
li x10, 0x00000000fffffffe # initialize rs1
li x7, 0xaaaaaaaaaaaaaaaa # initialize rs2
min x1, x10, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 968)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0x5555555555555555)
li x14, 0x00000000fffffffe # initialize rs1
li x12, 0x5555555555555555 # initialize rs2
min x2, x14, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 976)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0xffffffff)
li x31, 0x00000000fffffffe # initialize rs1
li x18, 0x00000000ffffffff # initialize rs2
min x22, x31, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 984)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0xfffffffe)
li x7, 0x00000000fffffffe # initialize rs1
li x9, 0x00000000fffffffe # initialize rs2
min x23, x7, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 992)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0x100000000)
li x22, 0x00000000fffffffe # initialize rs1
li x8, 0x0000000100000000 # initialize rs2
min x15, x22, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 1000)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0x100000001)
li x19, 0x00000000fffffffe # initialize rs1
li x27, 0x0000000100000001 # initialize rs2
min x15, x19, x27 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 1008)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0x0)
li x24, 0x0000000100000000 # initialize rs1
li x26, 0x0000000000000000 # initialize rs2
min x14, x24, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 1016)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0x1)
li x19, 0x0000000100000000 # initialize rs1
li x13, 0x0000000000000001 # initialize rs2
min x9, x19, x13 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 1024)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0x2)
li x19, 0x0000000100000000 # initialize rs1
li x18, 0x0000000000000002 # initialize rs2
min x24, x19, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 1032)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0x8000000000000000)
li x3, 0x0000000100000000 # initialize rs1
li x2, 0x8000000000000000 # initialize rs2
min x14, x3, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 1040)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0x8000000000000001)
li x22, 0x0000000100000000 # initialize rs1
li x2, 0x8000000000000001 # initialize rs2
min x18, x22, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 1048)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0x7fffffffffffffff)
li x20, 0x0000000100000000 # initialize rs1
li x9, 0x7fffffffffffffff # initialize rs2
min x5, x20, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x5, 1056)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0x7ffffffffffffffe)
li x28, 0x0000000100000000 # initialize rs1
li x25, 0x7ffffffffffffffe # initialize rs2
min x29, x28, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 1064)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0xffffffffffffffff)
li x3, 0x0000000100000000 # initialize rs1
li x6, 0xffffffffffffffff # initialize rs2
min x11, x3, x6 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 1072)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0xfffffffffffffffe)
li x24, 0x0000000100000000 # initialize rs1
li x18, 0xfffffffffffffffe # initialize rs2
min x19, x24, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 1080)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0x5bbc887763ae86f2)
li x11, 0x0000000100000000 # initialize rs1
li x6, 0x5bbc887763ae86f2 # initialize rs2
min x15, x11, x6 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 1088)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0xaaaaaaaaaaaaaaaa)
li x17, 0x0000000100000000 # initialize rs1
li x21, 0xaaaaaaaaaaaaaaaa # initialize rs2
min x27, x17, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 1096)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0x5555555555555555)
li x8, 0x0000000100000000 # initialize rs1
li x1, 0x5555555555555555 # initialize rs2
min x20, x8, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 1104)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0xffffffff)
li x15, 0x0000000100000000 # initialize rs1
li x20, 0x00000000ffffffff # initialize rs2
min x12, x15, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 1112)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0xfffffffe)
li x1, 0x0000000100000000 # initialize rs1
li x19, 0x00000000fffffffe # initialize rs2
min x20, x1, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 1120)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0x100000000)
li x5, 0x0000000100000000 # initialize rs1
li x19, 0x0000000100000000 # initialize rs2
min x9, x5, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 1128)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0x100000001)
li x29, 0x0000000100000000 # initialize rs1
li x30, 0x0000000100000001 # initialize rs2
min x23, x29, x30 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 1136)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0x0)
li x13, 0x0000000100000001 # initialize rs1
li x25, 0x0000000000000000 # initialize rs2
min x22, x13, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 1144)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0x1)
li x19, 0x0000000100000001 # initialize rs1
li x15, 0x0000000000000001 # initialize rs2
min x8, x19, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 1152)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0x2)
li x1, 0x0000000100000001 # initialize rs1
li x26, 0x0000000000000002 # initialize rs2
min x25, x1, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 1160)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0x8000000000000000)
li x29, 0x0000000100000001 # initialize rs1
li x21, 0x8000000000000000 # initialize rs2
min x27, x29, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 1168)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0x8000000000000001)
li x3, 0x0000000100000001 # initialize rs1
li x24, 0x8000000000000001 # initialize rs2
min x12, x3, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 1176)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0x7fffffffffffffff)
li x14, 0x0000000100000001 # initialize rs1
li x10, 0x7fffffffffffffff # initialize rs2
min x1, x14, x10 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 1184)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0x7ffffffffffffffe)
li x24, 0x0000000100000001 # initialize rs1
li x11, 0x7ffffffffffffffe # initialize rs2
min x2, x24, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 1192)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0xffffffffffffffff)
li x14, 0x0000000100000001 # initialize rs1
li x30, 0xffffffffffffffff # initialize rs2
min x3, x14, x30 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 1200)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0xfffffffffffffffe)
li x19, 0x0000000100000001 # initialize rs1
li x17, 0xfffffffffffffffe # initialize rs2
min x1, x19, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 1208)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0x5bbc887763ae86f2)
li x3, 0x0000000100000001 # initialize rs1
li x22, 0x5bbc887763ae86f2 # initialize rs2
min x9, x3, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 1216)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0xaaaaaaaaaaaaaaaa)
li x30, 0x0000000100000001 # initialize rs1
li x3, 0xaaaaaaaaaaaaaaaa # initialize rs2
min x16, x30, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 1224)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0x5555555555555555)
li x15, 0x0000000100000001 # initialize rs1
li x8, 0x5555555555555555 # initialize rs2
min x26, x15, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 1232)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0xffffffff)
li x30, 0x0000000100000001 # initialize rs1
li x23, 0x00000000ffffffff # initialize rs2
min x19, x30, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 1240)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0xfffffffe)
li x7, 0x0000000100000001 # initialize rs1
li x23, 0x00000000fffffffe # initialize rs2
min x25, x7, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 1248)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0x100000000)
li x28, 0x0000000100000001 # initialize rs1
li x6, 0x0000000100000000 # initialize rs2
min x5, x28, x6 # perform operation
RVTEST_SIGUPD(x4, x0, x5, 1256)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0x100000001)
li x15, 0x0000000100000001 # initialize rs1
li x19, 0x0000000100000001 # initialize rs2
min x1, x15, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 1264)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x0)
li x0, 0x37deb5854c60642d # initialize rs1
li x0, 0x24a7634a0bec3b13 # initialize rs2
min x11, x0, x0 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 1272)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x1)
li x1, 0x52903a4e36164abe # initialize rs1
li x1, 0x990782d5bb963912 # initialize rs2
min x20, x1, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 1280)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x2)
li x2, 0x3c5776137722e11d # initialize rs1
li x2, 0xca29b22e77864262 # initialize rs2
min x24, x2, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 1288)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x3)
li x3, 0x33cb66aff82e9f93 # initialize rs1
li x3, 0x3bbdba3cd940560f # initialize rs2
min x13, x3, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 1296)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x4)
mv x5, x4 # switch signature pointer register to avoid conflict with test
li x4, 0x21442991cd4ae2fb # initialize rs1
li x4, 0x9a114b4c50525ef2 # initialize rs2
min x29, x4, x4 # perform operation
RVTEST_SIGUPD(x5, x0, x29, 1304)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x5)
mv x6, x5 # switch signature pointer register to avoid conflict with test
li x5, 0x800ee98e730adeeb # initialize rs1
li x5, 0x09eb83cf3b36a4de # initialize rs2
min x13, x5, x5 # perform operation
RVTEST_SIGUPD(x6, x0, x13, 1312)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x6)
mv x7, x6 # switch signature pointer register to avoid conflict with test
li x6, 0xabe854dd0a1e940c # initialize rs1
li x6, 0x32a650b2d8e5305b # initialize rs2
min x13, x6, x6 # perform operation
RVTEST_SIGUPD(x7, x0, x13, 1320)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x7)
mv x4, x7 # switch signature pointer register to avoid conflict with test
li x7, 0x8b625cc86db2e292 # initialize rs1
li x7, 0xfe4ff75d819412f2 # initialize rs2
min x14, x7, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 1328)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x8)
li x8, 0xa914acd0d4cfab7f # initialize rs1
li x8, 0xefe53aca8eede770 # initialize rs2
min x29, x8, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 1336)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x9)
li x9, 0x747b1c6ec60c9442 # initialize rs1
li x9, 0xbb5ed083d77aa2c6 # initialize rs2
min x10, x9, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 1344)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x10)
li x10, 0x91bbd30e9f1a8c5d # initialize rs1
li x10, 0x34c32eab6d627d34 # initialize rs2
min x13, x10, x10 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 1352)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x11)
li x11, 0x236eed691145a04a # initialize rs1
li x11, 0xd03d773841a08b41 # initialize rs2
min x3, x11, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 1360)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x12)
li x12, 0x5fbc4bf2e11b482c # initialize rs1
li x12, 0x6bef9a8aa919937b # initialize rs2
min x13, x12, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 1368)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x13)
li x13, 0xca595180420ea59c # initialize rs1
li x13, 0xa53707dc67d13e88 # initialize rs2
min x21, x13, x13 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 1376)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x14)
li x14, 0x3b14671212c9d880 # initialize rs1
li x14, 0xc254f1fc53cad217 # initialize rs2
min x11, x14, x14 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 1384)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x15)
li x15, 0xea23768eb42dbe07 # initialize rs1
li x15, 0xcaede6c789cfa144 # initialize rs2
min x30, x15, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 1392)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x16)
li x16, 0x410c2b4d15e96496 # initialize rs1
li x16, 0x9141db82d28a36a0 # initialize rs2
min x1, x16, x16 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 1400)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x17)
li x17, 0x68620520d750d09d # initialize rs1
li x17, 0x403fe24a8a705727 # initialize rs2
min x5, x17, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x5, 1408)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x18)
li x18, 0x3d8b322833cef4d6 # initialize rs1
li x18, 0xa3719a73bf133bc2 # initialize rs2
min x13, x18, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 1416)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x19)
li x19, 0x34bfe24e3b15411a # initialize rs1
li x19, 0x5060e5e49bb06067 # initialize rs2
min x8, x19, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 1424)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x20)
li x20, 0xaf8fe36ed3f1784c # initialize rs1
li x20, 0x99d8b83f52ffaca2 # initialize rs2
min x2, x20, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 1432)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x21)
li x21, 0x5f4ba70554b65177 # initialize rs1
li x21, 0x444234a78c90fe5a # initialize rs2
min x12, x21, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 1440)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x22)
li x22, 0xbe6d0a70bfd9b5de # initialize rs1
li x22, 0x06b806fad2c62229 # initialize rs2
min x9, x22, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 1448)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x23)
li x23, 0x652db16162e4e652 # initialize rs1
li x23, 0x1123713c055a14df # initialize rs2
min x21, x23, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 1456)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x24)
li x24, 0x23618306940ffb1e # initialize rs1
li x24, 0x28ee12edf1bd0286 # initialize rs2
min x27, x24, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 1464)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x25)
li x25, 0x0959bc14dfaff720 # initialize rs1
li x25, 0xb02b2067a02f15d3 # initialize rs2
min x6, x25, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x6, 1472)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x26)
li x26, 0x1000f6960989b1a6 # initialize rs1
li x26, 0x1a4bf03f5c9ee530 # initialize rs2
min x20, x26, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 1480)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x27)
li x27, 0x4ffc6b5b560661bb # initialize rs1
li x27, 0x7b6a014dae32aedd # initialize rs2
min x25, x27, x27 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 1488)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x28)
li x28, 0xa772b319371b864d # initialize rs1
li x28, 0x9b5eba876e103e56 # initialize rs2
min x1, x28, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 1496)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x29)
li x29, 0x4b3c755087fd886f # initialize rs1
li x29, 0xce73f2640d4209cc # initialize rs2
min x13, x29, x29 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 1504)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x30)
li x30, 0xef52eb0ffe73a221 # initialize rs1
li x30, 0x6f8e5d64591bf82f # initialize rs2
min x22, x30, x30 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 1512)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x31)
li x31, 0x508e522ab8c32dd1 # initialize rs1
li x31, 0xbe4477a8bc1908ae # initialize rs2
min x1, x31, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 1520)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x0)
li x0, 0x87ef65d1cf478b2e # initialize rs1
li x12, 0x8e27abf97a51fb3b # initialize rs2
min x0, x0, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x0, 1528)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x1)
li x1, 0x06d6efd9065ce1a2 # initialize rs1
li x1, 0x72983d67fe4d1b1b # initialize rs2
min x1, x1, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 1536)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x2)
li x2, 0x4aba6402ba345c8c # initialize rs1
li x11, 0x4d1771289890e62d # initialize rs2
min x2, x2, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 1544)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x3)
li x3, 0x1c627e745a8d6ec9 # initialize rs1
li x7, 0x723689ffcdee3416 # initialize rs2
min x3, x3, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 1552)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x4)
mv x5, x4 # switch signature pointer register to avoid conflict with test
li x4, 0x9fa92c1c8da98635 # initialize rs1
li x27, 0x6ce63838eda0b9d7 # initialize rs2
min x4, x4, x27 # perform operation
RVTEST_SIGUPD(x5, x0, x4, 1560)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x5)
mv x6, x5 # switch signature pointer register to avoid conflict with test
li x5, 0x7771a428f6c39cc6 # initialize rs1
li x20, 0x6978b78b26bbd14f # initialize rs2
min x5, x5, x20 # perform operation
RVTEST_SIGUPD(x6, x0, x5, 1568)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x6)
mv x7, x6 # switch signature pointer register to avoid conflict with test
li x6, 0x84b25f32672f17d0 # initialize rs1
li x21, 0x68ca47512ea336fb # initialize rs2
min x6, x6, x21 # perform operation
RVTEST_SIGUPD(x7, x0, x6, 1576)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x7)
mv x4, x7 # switch signature pointer register to avoid conflict with test
li x7, 0x42568af3a0a287bd # initialize rs1
li x16, 0xdd6cce3682e315f9 # initialize rs2
min x7, x7, x16 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 1584)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x8)
li x8, 0xfcb80029c0441b95 # initialize rs1
li x18, 0xb56dc08993abc10c # initialize rs2
min x8, x8, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 1592)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x9)
li x9, 0x4df32bd02544569e # initialize rs1
li x16, 0x1681b97a0f65554d # initialize rs2
min x9, x9, x16 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 1600)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x10)
li x10, 0x75881db9a4af51f4 # initialize rs1
li x9, 0x532fe46e0a189ddc # initialize rs2
min x10, x10, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 1608)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x11)
li x11, 0x56ccd761ba4a3f08 # initialize rs1
li x31, 0xdc2e0405c33d39aa # initialize rs2
min x11, x11, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 1616)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x12)
li x12, 0x7f3103518809d89c # initialize rs1
li x8, 0x660117f3144bd9e1 # initialize rs2
min x12, x12, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 1624)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x13)
li x13, 0xba1c5391d791c657 # initialize rs1
li x30, 0x60770adc29e33143 # initialize rs2
min x13, x13, x30 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 1632)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x14)
li x14, 0x18a366e2b4a2403d # initialize rs1
li x5, 0x1dc187239f82d155 # initialize rs2
min x14, x14, x5 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 1640)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x15)
li x15, 0x9fcc905ef1c8f987 # initialize rs1
li x5, 0xb660d4d9847e5992 # initialize rs2
min x15, x15, x5 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 1648)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x16)
li x16, 0xb1d635072079503f # initialize rs1
li x20, 0x9f7fb8630b4cfba3 # initialize rs2
min x16, x16, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 1656)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x17)
li x17, 0xea54602cea2f7c97 # initialize rs1
li x20, 0xabff075c1046eccf # initialize rs2
min x17, x17, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 1664)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x18)
li x18, 0xb28cb4be0e7f8278 # initialize rs1
li x15, 0xe621c153ac7d0f31 # initialize rs2
min x18, x18, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 1672)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x19)
li x19, 0xc95be988bc8d123e # initialize rs1
li x27, 0x66d56d86bbeb2f7a # initialize rs2
min x19, x19, x27 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 1680)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x20)
li x20, 0x7d9008cf90d63248 # initialize rs1
li x1, 0x181f61515f450426 # initialize rs2
min x20, x20, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 1688)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x21)
li x21, 0x3c32658f609b198e # initialize rs1
li x11, 0xe17d13a9312dcbf7 # initialize rs2
min x21, x21, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 1696)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x22)
li x22, 0x2921016422e3545f # initialize rs1
li x21, 0xc2fa59531a4d8eeb # initialize rs2
min x22, x22, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 1704)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x23)
li x23, 0xbec3a5fa11d1d808 # initialize rs1
li x23, 0x25fd735bfd816222 # initialize rs2
min x23, x23, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 1712)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x24)
li x24, 0xe962858552d64430 # initialize rs1
li x18, 0xeeec3ea5f615e37a # initialize rs2
min x24, x24, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 1720)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x25)
li x25, 0xc6b9cf4981385cb0 # initialize rs1
li x5, 0x46c2ee4352eb5748 # initialize rs2
min x25, x25, x5 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 1728)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x26)
li x26, 0x95fbf9e906e2dedf # initialize rs1
li x16, 0x0da7dd4844256605 # initialize rs2
min x26, x26, x16 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 1736)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x27)
li x27, 0xb0f890e3c90c52e6 # initialize rs1
li x10, 0xc38d521d56fdac92 # initialize rs2
min x27, x27, x10 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 1744)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x28)
li x28, 0xebb701f616c63663 # initialize rs1
li x2, 0xa79022416b45b390 # initialize rs2
min x28, x28, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x28, 1752)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x29)
li x29, 0x041e11a86ed9c1b7 # initialize rs1
li x28, 0x30844ac8c1625ef8 # initialize rs2
min x29, x29, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 1760)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x30)
li x30, 0x25d8e94971f99f2a # initialize rs1
li x5, 0xc6a86b1ef07f8fe5 # initialize rs2
min x30, x30, x5 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 1768)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x31)
li x31, 0x3e7f5bac43e05298 # initialize rs1
li x14, 0x9ea3ba313370d53f # initialize rs2
min x31, x31, x14 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 1776)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x0)
li x1, 0x7557fc6c5714c60b # initialize rs1
li x0, 0x52f32c0165b061e9 # initialize rs2
min x0, x1, x0 # perform operation
RVTEST_SIGUPD(x4, x0, x0, 1784)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x1)
li x28, 0x7314cd3e4ea84eaa # initialize rs1
li x1, 0x835645dce27a89ef # initialize rs2
min x1, x28, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 1792)
addi x4, x4, 1800 # increment signature pointer and reset offset

# Testcase cmp_rd_rs2 (Test rd = rs2 = x2)
li x19, 0x8a50b52805bad914 # initialize rs1
li x2, 0x52672ec590ad631f # initialize rs2
min x2, x19, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 0)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x3)
li x29, 0xfd94d19b8b4efd8c # initialize rs1
li x3, 0xaf7644e5b7152ce6 # initialize rs2
min x3, x29, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 8)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x4)
mv x5, x4 # switch signature pointer register to avoid conflict with test
li x6, 0x983547d73cbe6a60 # initialize rs1
li x4, 0x4dec3a00b438aee3 # initialize rs2
min x4, x6, x4 # perform operation
RVTEST_SIGUPD(x5, x0, x4, 16)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x5)
mv x6, x5 # switch signature pointer register to avoid conflict with test
li x1, 0x80607f95632b6285 # initialize rs1
li x5, 0xb826b01f6092ccfa # initialize rs2
min x5, x1, x5 # perform operation
RVTEST_SIGUPD(x6, x0, x5, 24)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x6)
mv x7, x6 # switch signature pointer register to avoid conflict with test
li x9, 0xc73cd79c53854560 # initialize rs1
li x6, 0x08647d78a98ef7cc # initialize rs2
min x6, x9, x6 # perform operation
RVTEST_SIGUPD(x7, x0, x6, 32)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x7)
mv x4, x7 # switch signature pointer register to avoid conflict with test
li x29, 0x86feba403cc08a8d # initialize rs1
li x7, 0x3e59a0dc819fdc45 # initialize rs2
min x7, x29, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 40)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x8)
li x9, 0x4d985929750c520b # initialize rs1
li x8, 0x33af7a8597f446f7 # initialize rs2
min x8, x9, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 48)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x9)
li x18, 0x9c7ad58c55cef025 # initialize rs1
li x9, 0x0722edc97e76d8c3 # initialize rs2
min x9, x18, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 56)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x10)
li x31, 0xe32376ef78623ed4 # initialize rs1
li x10, 0x0a12cdf2effdfbaf # initialize rs2
min x10, x31, x10 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 64)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x11)
li x23, 0x141aba3259fdc619 # initialize rs1
li x11, 0x8ea46b89ec10cc40 # initialize rs2
min x11, x23, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 72)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x12)
li x12, 0x0f4b2350cd7718c7 # initialize rs1
li x12, 0x331c198729f7bb51 # initialize rs2
min x12, x12, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 80)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x13)
li x11, 0xc4166016e627fd8a # initialize rs1
li x13, 0xcc514368ab8002e1 # initialize rs2
min x13, x11, x13 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 88)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x14)
li x7, 0xeafc2fa1117a4ba1 # initialize rs1
li x14, 0x1f257631cfe204b8 # initialize rs2
min x14, x7, x14 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 96)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x15)
li x19, 0x23fede312bb95e62 # initialize rs1
li x15, 0xec080bd3ed4576ff # initialize rs2
min x15, x19, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 104)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x16)
li x29, 0xd75a76b77f2f851c # initialize rs1
li x16, 0x052d5bfe5bb1a63b # initialize rs2
min x16, x29, x16 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 112)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x17)
li x25, 0x46eecb30bb5e38c0 # initialize rs1
li x17, 0x27ea8b83005a4676 # initialize rs2
min x17, x25, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 120)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x18)
li x25, 0x9a3c3d0e6871bfb0 # initialize rs1
li x18, 0x05a55bdb337554f6 # initialize rs2
min x18, x25, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 128)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x19)
li x19, 0x8e530c54cde47cb8 # initialize rs1
li x19, 0x52a80c24b56e6998 # initialize rs2
min x19, x19, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 136)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x20)
li x1, 0xb8ec0d15c75af13d # initialize rs1
li x20, 0x8a136b86528d3b87 # initialize rs2
min x20, x1, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 144)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x21)
li x31, 0x4d2d46aacc0c8ee9 # initialize rs1
li x21, 0x943a6392c6649361 # initialize rs2
min x21, x31, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 152)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x22)
li x9, 0xd7a07ebcebfa44de # initialize rs1
li x22, 0xee2abc61f9fbfd3c # initialize rs2
min x22, x9, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 160)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x23)
li x25, 0xc35325763ca30e38 # initialize rs1
li x23, 0xf761fd377754e5bc # initialize rs2
min x23, x25, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 168)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x24)
li x12, 0x19cbb18404f860fc # initialize rs1
li x24, 0x187080d1d538dbf8 # initialize rs2
min x24, x12, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 176)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x25)
li x11, 0x354f542d1fbb5de4 # initialize rs1
li x25, 0xe9d2ba42413a0b7e # initialize rs2
min x25, x11, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 184)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x26)
li x30, 0xe7a1b4034d003557 # initialize rs1
li x26, 0x3f6444c4ffaf9490 # initialize rs2
min x26, x30, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 192)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x27)
li x24, 0x4dba3fb084bc04f9 # initialize rs1
li x27, 0xbd9a4bff75cfe3de # initialize rs2
min x27, x24, x27 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 200)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x28)
li x10, 0x9dfd752de9674928 # initialize rs1
li x28, 0x63072a3697f75763 # initialize rs2
min x28, x10, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x28, 208)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x29)
li x25, 0xab220f15ba68f45a # initialize rs1
li x29, 0xe29d739e94d7c57c # initialize rs2
min x29, x25, x29 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 216)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x30)
li x24, 0xcd1263799727e45a # initialize rs1
li x30, 0xecd6b00a866cea26 # initialize rs2
min x30, x24, x30 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 224)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x31)
li x17, 0x15bdaa6907f1da3f # initialize rs1
li x31, 0xbbe9213a9ca975c4 # initialize rs2
min x31, x17, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 232)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x0)
li x0, 0x656d1231e7c00985 # initialize rs1
li x0, 0xa672cb343a77e51c # initialize rs2
min x0, x0, x0 # perform operation
RVTEST_SIGUPD(x4, x0, x0, 240)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x1)
li x1, 0xe68029f2d848047e # initialize rs1
li x1, 0x8edaff0198f36769 # initialize rs2
min x1, x1, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 248)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x2)
li x2, 0x9cbd27c07a8679f5 # initialize rs1
li x2, 0x7217abc527d37d3c # initialize rs2
min x2, x2, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 256)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x3)
li x3, 0x3c550dd8cb4e6bb1 # initialize rs1
li x3, 0x6e2402323547a192 # initialize rs2
min x3, x3, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 264)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x4)
mv x5, x4 # switch signature pointer register to avoid conflict with test
li x4, 0x9ba66b7f33f5f6e5 # initialize rs1
li x4, 0x555ea30630c8e544 # initialize rs2
min x4, x4, x4 # perform operation
RVTEST_SIGUPD(x5, x0, x4, 272)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x5)
mv x6, x5 # switch signature pointer register to avoid conflict with test
li x5, 0x508443a8cba34ef2 # initialize rs1
li x5, 0x431a86fc56b760eb # initialize rs2
min x5, x5, x5 # perform operation
RVTEST_SIGUPD(x6, x0, x5, 280)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x6)
mv x7, x6 # switch signature pointer register to avoid conflict with test
li x6, 0x2c48ba29b9ffceee # initialize rs1
li x6, 0x917dd3baf1238377 # initialize rs2
min x6, x6, x6 # perform operation
RVTEST_SIGUPD(x7, x0, x6, 288)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x7)
mv x4, x7 # switch signature pointer register to avoid conflict with test
li x7, 0x992e455caef90ebb # initialize rs1
li x7, 0x43455a6374a5115d # initialize rs2
min x7, x7, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 296)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x8)
li x8, 0x3aa79d1d2e2daaf5 # initialize rs1
li x8, 0xa202846f5457b9dd # initialize rs2
min x8, x8, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 304)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x9)
li x9, 0xf71def5a4a8b9eec # initialize rs1
li x9, 0xc21c61dd25044770 # initialize rs2
min x9, x9, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 312)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x10)
li x10, 0x121dbbef06119b86 # initialize rs1
li x10, 0x6459e5bb437428aa # initialize rs2
min x10, x10, x10 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 320)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x11)
li x11, 0xa85eaed015a91bbf # initialize rs1
li x11, 0x992b507fc3268979 # initialize rs2
min x11, x11, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 328)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x12)
li x12, 0x928c9c4bc600022f # initialize rs1
li x12, 0xc63da40564a129c6 # initialize rs2
min x12, x12, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 336)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x13)
li x13, 0xc8325a7462a34483 # initialize rs1
li x13, 0xa2bfaf1211a8e6a9 # initialize rs2
min x13, x13, x13 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 344)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x14)
li x14, 0x4d253ff324525880 # initialize rs1
li x14, 0x541b8e16cd081c40 # initialize rs2
min x14, x14, x14 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 352)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x15)
li x15, 0xe71702adc32f730c # initialize rs1
li x15, 0x3633b8d35de33da3 # initialize rs2
min x15, x15, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 360)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x16)
li x16, 0x98d76538265c7dc3 # initialize rs1
li x16, 0x47a6e50129afc828 # initialize rs2
min x16, x16, x16 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 368)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x17)
li x17, 0x182bb84aceb07da9 # initialize rs1
li x17, 0xe66c18e7e61ab1d6 # initialize rs2
min x17, x17, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 376)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x18)
li x18, 0x72eb824f72b25457 # initialize rs1
li x18, 0x17157884c184618b # initialize rs2
min x18, x18, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 384)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x19)
li x19, 0x105f0eae3e3f770e # initialize rs1
li x19, 0xae1c201051e0f6dc # initialize rs2
min x19, x19, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 392)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x20)
li x20, 0xddd96838fbb765af # initialize rs1
li x20, 0x2270f9da32152dcb # initialize rs2
min x20, x20, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 400)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x21)
li x21, 0x88185977c45d8625 # initialize rs1
li x21, 0xe8d863246893efe1 # initialize rs2
min x21, x21, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 408)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x22)
li x22, 0x1b2a0209f3ce3fa3 # initialize rs1
li x22, 0xd40c4c375a3182ac # initialize rs2
min x22, x22, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 416)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x23)
li x23, 0xd5c1d840a17e2f5e # initialize rs1
li x23, 0x533ddf6696adecb6 # initialize rs2
min x23, x23, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 424)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x24)
li x24, 0x87d695e88b0bd91c # initialize rs1
li x24, 0xdec57d5be709b013 # initialize rs2
min x24, x24, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 432)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x25)
li x25, 0x7bbfad1a48d583b8 # initialize rs1
li x25, 0xe0c4d77b1387a194 # initialize rs2
min x25, x25, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 440)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x26)
li x26, 0xbf50b7d6e296256d # initialize rs1
li x26, 0xc40e37120238cbc5 # initialize rs2
min x26, x26, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 448)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x27)
li x27, 0x562d6c7770a83f9c # initialize rs1
li x27, 0x1f22cbfe5209b97f # initialize rs2
min x27, x27, x27 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 456)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x28)
li x28, 0x382181428976d233 # initialize rs1
li x28, 0xaa525de00243ea35 # initialize rs2
min x28, x28, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x28, 464)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x29)
li x29, 0x5df78af2f2bf9944 # initialize rs1
li x29, 0x97fa0d5b4a19242d # initialize rs2
min x29, x29, x29 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 472)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x30)
li x30, 0xb5a8f3a4e0c227a9 # initialize rs1
li x30, 0x3ae1815b0fad3ab2 # initialize rs2
min x30, x30, x30 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 480)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x31)
li x31, 0x1d08fe0e19ec1e09 # initialize rs1
li x31, 0x584b9d93d0c18eec # initialize rs2
min x31, x31, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 488)

# Testcase cp_gpr/fpr_hazard nohaz test
add x22, x2, x17 # perform first operation
min x30, x19, x11 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard nohaz test
add x16, x11, x15 # perform first operation
min x23, x29, x10 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard nohaz test
add x6, x13, x12 # perform first operation
min x21, x11, x22 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard raw test
add x24, x30, x14 # perform first operation
min x24, x24, x3 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard raw test
add x26, x1, x29 # perform first operation
min x2, x9, x26 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard raw test
add x30, x1, x17 # perform first operation
min x13, x20, x17 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard waw test
add x28, x22, x1 # perform first operation
min x28, x27, x25 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard waw test
add x6, x24, x5 # perform first operation
min x6, x7, x16 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard waw test
add x16, x29, x30 # perform first operation
min x16, x11, x3 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard war test
add x30, x23, x18 # perform first operation
min x23, x12, x20 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard war test
add x26, x28, x30 # perform first operation
min x30, x18, x3 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard war test
add x21, x10, x19 # perform first operation
min x16, x2, x1 # perform second (triggering) operation

#.EQU SIGSIZE,4096


// ******************
// Tests from: WALLY-COV-andn.S
// ******************


# initialize signature pointer
la x4, begin_signature

    
# Testcase cp_rs1 (Test source rs1 = x0)
li x0, 0x972908c2ef77b5eb # initialize rs1
li x25, 0xc847043899ea5785 # initialize rs2
andn x6, x0, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x6, 0)

# Testcase cp_rs1 (Test source rs1 = x1)
li x1, 0x748a6b77ccda3396 # initialize rs1
li x7, 0x55ea8b05988ab33b # initialize rs2
andn x24, x1, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 8)

# Testcase cp_rs1 (Test source rs1 = x2)
li x2, 0x49803e6c6fe3fd09 # initialize rs1
li x22, 0x259c640ea303cdd7 # initialize rs2
andn x26, x2, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 16)

# Testcase cp_rs1 (Test source rs1 = x3)
li x3, 0x383988ad481416b4 # initialize rs1
li x1, 0xa0d8db53c4e00a7e # initialize rs2
andn x12, x3, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 24)

# Testcase cp_rs1 (Test source rs1 = x4)
mv x5, x4 # switch signature pointer register to avoid conflict with test
li x4, 0xf322386f8c5c724e # initialize rs1
li x3, 0xdb0d0d2ffa388130 # initialize rs2
andn x16, x4, x3 # perform operation
RVTEST_SIGUPD(x5, x0, x16, 32)

# Testcase cp_rs1 (Test source rs1 = x5)
mv x6, x5 # switch signature pointer register to avoid conflict with test
li x5, 0xc2ece96427a5b508 # initialize rs1
li x31, 0x51b594b00945fc65 # initialize rs2
andn x15, x5, x31 # perform operation
RVTEST_SIGUPD(x6, x0, x15, 40)

# Testcase cp_rs1 (Test source rs1 = x6)
mv x4, x6 # switch signature pointer register to avoid conflict with test
li x6, 0xb9e296b1e5d72066 # initialize rs1
li x3, 0x5a8ccec9398ab823 # initialize rs2
andn x7, x6, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 48)

# Testcase cp_rs1 (Test source rs1 = x7)
li x7, 0xf09ea32a9ccaacf0 # initialize rs1
li x12, 0x40c67a4821b2c765 # initialize rs2
andn x22, x7, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 56)

# Testcase cp_rs1 (Test source rs1 = x8)
li x8, 0x9cec0ca9e892039d # initialize rs1
li x5, 0xd580f0f2823c269d # initialize rs2
andn x6, x8, x5 # perform operation
RVTEST_SIGUPD(x4, x0, x6, 64)

# Testcase cp_rs1 (Test source rs1 = x9)
li x9, 0x6c46f4d7a43a3ec4 # initialize rs1
li x27, 0xc160529fbbd36efa # initialize rs2
andn x30, x9, x27 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 72)

# Testcase cp_rs1 (Test source rs1 = x10)
li x10, 0xfd482d70b73c8243 # initialize rs1
li x28, 0x1705e389e71a2bc1 # initialize rs2
andn x23, x10, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 80)

# Testcase cp_rs1 (Test source rs1 = x11)
li x11, 0x0d6252f27ff4ca2f # initialize rs1
li x10, 0x19419512e56dca46 # initialize rs2
andn x29, x11, x10 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 88)

# Testcase cp_rs1 (Test source rs1 = x12)
li x12, 0x3d8025d64b89607d # initialize rs1
li x15, 0x4a4cd147e4fd905f # initialize rs2
andn x23, x12, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 96)

# Testcase cp_rs1 (Test source rs1 = x13)
li x13, 0x01ef40a3956efa09 # initialize rs1
li x17, 0xe83a7082bc300b7d # initialize rs2
andn x22, x13, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 104)

# Testcase cp_rs1 (Test source rs1 = x14)
li x14, 0x6dfe9791abf5e818 # initialize rs1
li x12, 0xb101de81c92d697d # initialize rs2
andn x15, x14, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 112)

# Testcase cp_rs1 (Test source rs1 = x15)
li x15, 0x3901840a42236fa5 # initialize rs1
li x29, 0xd7464595651ab7f9 # initialize rs2
andn x27, x15, x29 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 120)

# Testcase cp_rs1 (Test source rs1 = x16)
li x16, 0x6febefb97ea4f30b # initialize rs1
li x10, 0xa08f785d32551ba3 # initialize rs2
andn x9, x16, x10 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 128)

# Testcase cp_rs1 (Test source rs1 = x17)
li x17, 0xcc892321077b9cb7 # initialize rs1
li x15, 0x788bec80fe8f7720 # initialize rs2
andn x16, x17, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 136)

# Testcase cp_rs1 (Test source rs1 = x18)
li x18, 0x72de831c1ffdc298 # initialize rs1
li x9, 0x4e956a9939bb9459 # initialize rs2
andn x5, x18, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x5, 144)

# Testcase cp_rs1 (Test source rs1 = x19)
li x19, 0xd518b68e8d7568a4 # initialize rs1
li x8, 0x3db79b4cdf18811c # initialize rs2
andn x20, x19, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 152)

# Testcase cp_rs1 (Test source rs1 = x20)
li x20, 0x66a9503806aa97d5 # initialize rs1
li x12, 0x77e3826a1441244a # initialize rs2
andn x18, x20, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 160)

# Testcase cp_rs1 (Test source rs1 = x21)
li x21, 0x057ac83aa57a05d3 # initialize rs1
li x17, 0x9d7e67b642f872a1 # initialize rs2
andn x13, x21, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 168)

# Testcase cp_rs1 (Test source rs1 = x22)
li x22, 0x15d94885a53744f3 # initialize rs1
li x24, 0xc2fb5ac6d4a75250 # initialize rs2
andn x23, x22, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 176)

# Testcase cp_rs1 (Test source rs1 = x23)
li x23, 0xd5524b8c185fdaf5 # initialize rs1
li x2, 0x6470bc90349ecaa3 # initialize rs2
andn x5, x23, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x5, 184)

# Testcase cp_rs1 (Test source rs1 = x24)
li x24, 0xdde100997e0717af # initialize rs1
li x5, 0x475ddc84f279f992 # initialize rs2
andn x29, x24, x5 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 192)

# Testcase cp_rs1 (Test source rs1 = x25)
li x25, 0x39cf5d461fbe7916 # initialize rs1
li x1, 0xef7fa27684569e25 # initialize rs2
andn x2, x25, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 200)

# Testcase cp_rs1 (Test source rs1 = x26)
li x26, 0xcb13c17afa43c3c6 # initialize rs1
li x28, 0xd2207ef488866551 # initialize rs2
andn x20, x26, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 208)

# Testcase cp_rs1 (Test source rs1 = x27)
li x27, 0xbf76a0c613a68632 # initialize rs1
li x31, 0x6968f283855411cb # initialize rs2
andn x30, x27, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 216)

# Testcase cp_rs1 (Test source rs1 = x28)
li x28, 0x585e95563599eb28 # initialize rs1
li x31, 0x569d03694bf71290 # initialize rs2
andn x21, x28, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 224)

# Testcase cp_rs1 (Test source rs1 = x29)
li x29, 0x66413919519ddcaa # initialize rs1
li x24, 0xdfab0fcfbc862c74 # initialize rs2
andn x27, x29, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 232)

# Testcase cp_rs1 (Test source rs1 = x30)
li x30, 0x231d60e40d61fe93 # initialize rs1
li x23, 0xbf5b3a74458037c2 # initialize rs2
andn x3, x30, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 240)

# Testcase cp_rs1 (Test source rs1 = x31)
li x31, 0xb02cbf92a1d4559c # initialize rs1
li x2, 0x1e045994a85b67db # initialize rs2
andn x30, x31, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 248)

# Testcase cp_rs2 (Test source rs2 = x0)
li x21, 0x3a78e51366135d02 # initialize rs1
li x0, 0x7bc8c0b08595cfca # initialize rs2
andn x16, x21, x0 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 256)

# Testcase cp_rs2 (Test source rs2 = x1)
li x31, 0x6823928ded7a109f # initialize rs1
li x1, 0x7e6458d6b3ba5be9 # initialize rs2
andn x9, x31, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 264)

# Testcase cp_rs2 (Test source rs2 = x2)
li x5, 0x4454464615969df9 # initialize rs1
li x2, 0x55ed10d21e9b8b09 # initialize rs2
andn x30, x5, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 272)

# Testcase cp_rs2 (Test source rs2 = x3)
li x12, 0x984a026aa7ef9c45 # initialize rs1
li x3, 0xd337beb102b6eaaa # initialize rs2
andn x6, x12, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x6, 280)

# Testcase cp_rs2 (Test source rs2 = x4)
mv x6, x4 # switch signature pointer register to avoid conflict with test
li x5, 0x7d0a9576ae33e084 # initialize rs1
li x4, 0x7a985f5f4a8fc15b # initialize rs2
andn x11, x5, x4 # perform operation
RVTEST_SIGUPD(x6, x0, x11, 288)

# Testcase cp_rs2 (Test source rs2 = x5)
li x30, 0xa50a84a7ad8d2dfa # initialize rs1
li x5, 0xc1b563285b6c4454 # initialize rs2
andn x2, x30, x5 # perform operation
RVTEST_SIGUPD(x6, x0, x2, 296)

# Testcase cp_rs2 (Test source rs2 = x6)
mv x7, x6 # switch signature pointer register to avoid conflict with test
li x28, 0x7d80cd63ef4e3fea # initialize rs1
li x6, 0x7d8cb48b92bb33f8 # initialize rs2
andn x3, x28, x6 # perform operation
RVTEST_SIGUPD(x7, x0, x3, 304)

# Testcase cp_rs2 (Test source rs2 = x7)
mv x4, x7 # switch signature pointer register to avoid conflict with test
li x17, 0x67414d6f41aa707e # initialize rs1
li x7, 0xc5d0f9669a53174c # initialize rs2
andn x27, x17, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 312)

# Testcase cp_rs2 (Test source rs2 = x8)
li x15, 0xfe8050d38e46f7e8 # initialize rs1
li x8, 0x84bd7a11bfb976d1 # initialize rs2
andn x9, x15, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 320)

# Testcase cp_rs2 (Test source rs2 = x9)
li x16, 0x072e58538875fbe0 # initialize rs1
li x9, 0x29a0c3461ba73a4e # initialize rs2
andn x28, x16, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x28, 328)

# Testcase cp_rs2 (Test source rs2 = x10)
li x1, 0x8258e9e9bfbfd4f0 # initialize rs1
li x10, 0x1e80fc8970453e5d # initialize rs2
andn x8, x1, x10 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 336)

# Testcase cp_rs2 (Test source rs2 = x11)
li x7, 0xc51eb8345a4b2301 # initialize rs1
li x11, 0x05191c4381090ae2 # initialize rs2
andn x20, x7, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 344)

# Testcase cp_rs2 (Test source rs2 = x12)
li x29, 0x5997371977882944 # initialize rs1
li x12, 0x6c8be576db1e90d5 # initialize rs2
andn x19, x29, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 352)

# Testcase cp_rs2 (Test source rs2 = x13)
li x12, 0x1e67808ef65fdc41 # initialize rs1
li x13, 0x7219812ed99a81e5 # initialize rs2
andn x9, x12, x13 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 360)

# Testcase cp_rs2 (Test source rs2 = x14)
li x13, 0x0ab54919f16ccc12 # initialize rs1
li x14, 0xd8ae4ebe938ec849 # initialize rs2
andn x3, x13, x14 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 368)

# Testcase cp_rs2 (Test source rs2 = x15)
li x19, 0x5dd5d3dbcf83adc0 # initialize rs1
li x15, 0x40c40cde7597fb51 # initialize rs2
andn x23, x19, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 376)

# Testcase cp_rs2 (Test source rs2 = x16)
li x26, 0x61482766ac6a5ab6 # initialize rs1
li x16, 0xd54bfb7a86b77077 # initialize rs2
andn x14, x26, x16 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 384)

# Testcase cp_rs2 (Test source rs2 = x17)
li x23, 0xd7fc13d62a50965b # initialize rs1
li x17, 0xbe9ba9ec7744694f # initialize rs2
andn x30, x23, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 392)

# Testcase cp_rs2 (Test source rs2 = x18)
li x27, 0x93229a16bf930a8a # initialize rs1
li x18, 0x863f00db196b8f1b # initialize rs2
andn x25, x27, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 400)

# Testcase cp_rs2 (Test source rs2 = x19)
li x31, 0x914b0db27ceff01c # initialize rs1
li x19, 0x56e55f3a0043f0da # initialize rs2
andn x3, x31, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 408)

# Testcase cp_rs2 (Test source rs2 = x20)
li x16, 0x602785db71bfb299 # initialize rs1
li x20, 0x940938ec4b85398e # initialize rs2
andn x22, x16, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 416)

# Testcase cp_rs2 (Test source rs2 = x21)
li x8, 0xff9a43b98763b749 # initialize rs1
li x21, 0x6ad8201fc1d8fa8e # initialize rs2
andn x1, x8, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 424)

# Testcase cp_rs2 (Test source rs2 = x22)
li x14, 0x302790f7054dc614 # initialize rs1
li x22, 0x8986418a752c8a06 # initialize rs2
andn x15, x14, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 432)

# Testcase cp_rs2 (Test source rs2 = x23)
li x31, 0x20f692de2659f026 # initialize rs1
li x23, 0x85b072d3e45eac77 # initialize rs2
andn x18, x31, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 440)

# Testcase cp_rs2 (Test source rs2 = x24)
li x23, 0x9385d56c8ae66098 # initialize rs1
li x24, 0x65753807545d5e90 # initialize rs2
andn x5, x23, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x5, 448)

# Testcase cp_rs2 (Test source rs2 = x25)
li x29, 0xa7c494842c846701 # initialize rs1
li x25, 0x04ec3cb4d1ef1e48 # initialize rs2
andn x9, x29, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 456)

# Testcase cp_rs2 (Test source rs2 = x26)
li x31, 0x178cc3d68f795fbd # initialize rs1
li x26, 0xa4822fa63d6e546e # initialize rs2
andn x11, x31, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 464)

# Testcase cp_rs2 (Test source rs2 = x27)
li x24, 0x9c2635b6b9aa7422 # initialize rs1
li x27, 0xe08c84cac5a7afeb # initialize rs2
andn x30, x24, x27 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 472)

# Testcase cp_rs2 (Test source rs2 = x28)
li x14, 0xb429b15982dec439 # initialize rs1
li x28, 0x206e61cea9da03eb # initialize rs2
andn x3, x14, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 480)

# Testcase cp_rs2 (Test source rs2 = x29)
li x24, 0xc3da79a3d85f09a5 # initialize rs1
li x29, 0xd7157bd8efc595de # initialize rs2
andn x20, x24, x29 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 488)

# Testcase cp_rs2 (Test source rs2 = x30)
li x1, 0xb0a59b96f4ee59db # initialize rs1
li x30, 0xf47c90b1f9c0cd9a # initialize rs2
andn x2, x1, x30 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 496)

# Testcase cp_rs2 (Test source rs2 = x31)
li x17, 0x9e5864b89d1d392f # initialize rs1
li x31, 0x86d69b4e41761a44 # initialize rs2
andn x15, x17, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 504)

# Testcase cp_rd (Test destination rd = x0)
li x14, 0xa8d152d29b3d9f41 # initialize rs1
li x29, 0xe5fd2295ad53b175 # initialize rs2
andn x0, x14, x29 # perform operation
RVTEST_SIGUPD(x4, x0, x0, 512)

# Testcase cp_rd (Test destination rd = x1)
li x7, 0x02ad4ddf07abac3f # initialize rs1
li x5, 0x536ba05ad13b767b # initialize rs2
andn x1, x7, x5 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 520)

# Testcase cp_rd (Test destination rd = x2)
li x6, 0xd49cdab51e895ece # initialize rs1
li x25, 0x1eeea22b198cf713 # initialize rs2
andn x2, x6, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 528)

# Testcase cp_rd (Test destination rd = x3)
li x21, 0xfb27294d2aff4faf # initialize rs1
li x28, 0xb4eef9d78df528bc # initialize rs2
andn x3, x21, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 536)

# Testcase cp_rd (Test destination rd = x4)
mv x5, x4 # switch signature pointer register to avoid conflict with test
li x21, 0x83aea0ad99bf5d7e # initialize rs1
li x19, 0x08db53f3518370ab # initialize rs2
andn x4, x21, x19 # perform operation
RVTEST_SIGUPD(x5, x0, x4, 544)

# Testcase cp_rd (Test destination rd = x5)
mv x6, x5 # switch signature pointer register to avoid conflict with test
li x25, 0xc4a5216706559229 # initialize rs1
li x30, 0x6a1caa97cfc5612a # initialize rs2
andn x5, x25, x30 # perform operation
RVTEST_SIGUPD(x6, x0, x5, 552)

# Testcase cp_rd (Test destination rd = x6)
mv x4, x6 # switch signature pointer register to avoid conflict with test
li x7, 0xfb08eaa9657fa6c1 # initialize rs1
li x9, 0x2a1a904f973285c3 # initialize rs2
andn x6, x7, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x6, 560)

# Testcase cp_rd (Test destination rd = x7)
li x23, 0x2d4f968d9d8c5a9d # initialize rs1
li x20, 0xde8ab7364765e63f # initialize rs2
andn x7, x23, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 568)

# Testcase cp_rd (Test destination rd = x8)
li x19, 0x6644224b28be5b01 # initialize rs1
li x17, 0x3d47010a1bada8b0 # initialize rs2
andn x8, x19, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 576)

# Testcase cp_rd (Test destination rd = x9)
li x2, 0xc919d06b8c6ebe17 # initialize rs1
li x22, 0x982d05b65719372c # initialize rs2
andn x9, x2, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 584)

# Testcase cp_rd (Test destination rd = x10)
li x22, 0x64dd4011bf9fc544 # initialize rs1
li x10, 0x62dde3ffceadfd7e # initialize rs2
andn x10, x22, x10 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 592)

# Testcase cp_rd (Test destination rd = x11)
li x25, 0x8bb57af438947379 # initialize rs1
li x2, 0x0a406d88387144b8 # initialize rs2
andn x11, x25, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 600)

# Testcase cp_rd (Test destination rd = x12)
li x13, 0xda2402d5e9d0501a # initialize rs1
li x3, 0x590e72ab52dae01a # initialize rs2
andn x12, x13, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 608)

# Testcase cp_rd (Test destination rd = x13)
li x22, 0xca90cc86d50c9de3 # initialize rs1
li x19, 0x834870998421c090 # initialize rs2
andn x13, x22, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 616)

# Testcase cp_rd (Test destination rd = x14)
li x17, 0xfc0141078455434c # initialize rs1
li x11, 0xb29be8bb1f694253 # initialize rs2
andn x14, x17, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 624)

# Testcase cp_rd (Test destination rd = x15)
li x26, 0xb2e22531cb119bb8 # initialize rs1
li x20, 0xec2708ab49180cf4 # initialize rs2
andn x15, x26, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 632)

# Testcase cp_rd (Test destination rd = x16)
li x10, 0x6353db39a7117a2c # initialize rs1
li x13, 0x865c47178759a2bc # initialize rs2
andn x16, x10, x13 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 640)

# Testcase cp_rd (Test destination rd = x17)
li x21, 0x5d04378b5723ce47 # initialize rs1
li x23, 0xb5518095c996fa90 # initialize rs2
andn x17, x21, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 648)

# Testcase cp_rd (Test destination rd = x18)
li x30, 0x3283d9931ebd15c4 # initialize rs1
li x21, 0xca6cb7a770de0315 # initialize rs2
andn x18, x30, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 656)

# Testcase cp_rd (Test destination rd = x19)
li x13, 0x5a302a5e8077a02a # initialize rs1
li x26, 0xb1da5da2c457240d # initialize rs2
andn x19, x13, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 664)

# Testcase cp_rd (Test destination rd = x20)
li x18, 0x10e83d2c764a2d03 # initialize rs1
li x6, 0x0ab0871d24618d1c # initialize rs2
andn x20, x18, x6 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 672)

# Testcase cp_rd (Test destination rd = x21)
li x29, 0x85cadd515a68e91c # initialize rs1
li x22, 0x7148a4311d72dea7 # initialize rs2
andn x21, x29, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 680)

# Testcase cp_rd (Test destination rd = x22)
li x9, 0xc8714e1bc2f07535 # initialize rs1
li x22, 0x8701681cdb7ac732 # initialize rs2
andn x22, x9, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 688)

# Testcase cp_rd (Test destination rd = x23)
li x31, 0xf4f529729510d8b3 # initialize rs1
li x15, 0x379a1287f77a804a # initialize rs2
andn x23, x31, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 696)

# Testcase cp_rd (Test destination rd = x24)
li x24, 0xf8816e08a37e45e0 # initialize rs1
li x20, 0xa3898b2dd7237885 # initialize rs2
andn x24, x24, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 704)

# Testcase cp_rd (Test destination rd = x25)
li x28, 0xc87f334e92b0ad17 # initialize rs1
li x22, 0x310b3c7716e9032f # initialize rs2
andn x25, x28, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 712)

# Testcase cp_rd (Test destination rd = x26)
li x5, 0x166f9294eb264cae # initialize rs1
li x25, 0x489e8fabcf83d1bc # initialize rs2
andn x26, x5, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 720)

# Testcase cp_rd (Test destination rd = x27)
li x18, 0x59e969424e23c29a # initialize rs1
li x1, 0x11c51dfb89048230 # initialize rs2
andn x27, x18, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 728)

# Testcase cp_rd (Test destination rd = x28)
li x23, 0x7709c388b1833b14 # initialize rs1
li x27, 0x3ce33b5352d70c03 # initialize rs2
andn x28, x23, x27 # perform operation
RVTEST_SIGUPD(x4, x0, x28, 736)

# Testcase cp_rd (Test destination rd = x29)
li x16, 0xbac629f0b5ccf7c5 # initialize rs1
li x20, 0x441393821b2481a2 # initialize rs2
andn x29, x16, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 744)

# Testcase cp_rd (Test destination rd = x30)
li x10, 0x1bc3fe2ff8230815 # initialize rs1
li x28, 0xa0b2e80fa4760d83 # initialize rs2
andn x30, x10, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 752)

# Testcase cp_rd (Test destination rd = x31)
li x27, 0x5d14911f2ed796d2 # initialize rs1
li x12, 0x55d35caa5aa1e672 # initialize rs2
andn x31, x27, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 760)

# Testcase cp_rs1_corners (Test source rs1 value = 0x0)
li x22, 0x0000000000000000 # initialize rs1
li x1, 0x6f22914f12011b36 # initialize rs2
andn x18, x22, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 768)

# Testcase cp_rs1_corners (Test source rs1 value = 0x1)
li x28, 0x0000000000000001 # initialize rs1
li x2, 0x3166518c73ab6ab9 # initialize rs2
andn x27, x28, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 776)

# Testcase cp_rs1_corners (Test source rs1 value = 0x2)
li x8, 0x0000000000000002 # initialize rs1
li x12, 0x6ff908e0c9780f1c # initialize rs2
andn x22, x8, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 784)

# Testcase cp_rs1_corners (Test source rs1 value = 0x8000000000000000)
li x2, 0x8000000000000000 # initialize rs1
li x29, 0x72322228d2564dd3 # initialize rs2
andn x18, x2, x29 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 792)

# Testcase cp_rs1_corners (Test source rs1 value = 0x8000000000000001)
li x28, 0x8000000000000001 # initialize rs1
li x20, 0x545c14874187450f # initialize rs2
andn x31, x28, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 800)

# Testcase cp_rs1_corners (Test source rs1 value = 0x7fffffffffffffff)
li x31, 0x7fffffffffffffff # initialize rs1
li x30, 0x805b4e1a72e240a4 # initialize rs2
andn x7, x31, x30 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 808)

# Testcase cp_rs1_corners (Test source rs1 value = 0x7ffffffffffffffe)
li x22, 0x7ffffffffffffffe # initialize rs1
li x16, 0x4bfcf86c860ce262 # initialize rs2
andn x29, x22, x16 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 816)

# Testcase cp_rs1_corners (Test source rs1 value = 0xffffffffffffffff)
li x15, 0xffffffffffffffff # initialize rs1
li x14, 0x8116c7f40594f8cd # initialize rs2
andn x10, x15, x14 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 824)

# Testcase cp_rs1_corners (Test source rs1 value = 0xfffffffffffffffe)
li x11, 0xfffffffffffffffe # initialize rs1
li x31, 0x0fed0d80b63db04a # initialize rs2
andn x22, x11, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 832)

# Testcase cp_rs1_corners (Test source rs1 value = 0x5bbc887763ae86f2)
li x3, 0x5bbc887763ae86f2 # initialize rs1
li x22, 0x2edb40eb5ee28e2d # initialize rs2
andn x18, x3, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 840)

# Testcase cp_rs1_corners (Test source rs1 value = 0xaaaaaaaaaaaaaaaa)
li x14, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x1, 0x416549517226dcde # initialize rs2
andn x24, x14, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 848)

# Testcase cp_rs1_corners (Test source rs1 value = 0x5555555555555555)
li x20, 0x5555555555555555 # initialize rs1
li x13, 0x1487645044f12260 # initialize rs2
andn x8, x20, x13 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 856)

# Testcase cp_rs1_corners (Test source rs1 value = 0xffffffff)
li x11, 0x00000000ffffffff # initialize rs1
li x30, 0xe5a056086f726dfe # initialize rs2
andn x26, x11, x30 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 864)

# Testcase cp_rs1_corners (Test source rs1 value = 0xfffffffe)
li x23, 0x00000000fffffffe # initialize rs1
li x19, 0x09db2f4b96a80bdc # initialize rs2
andn x15, x23, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 872)

# Testcase cp_rs1_corners (Test source rs1 value = 0x100000000)
li x14, 0x0000000100000000 # initialize rs1
li x1, 0xbf52e11b2e69dfdf # initialize rs2
andn x11, x14, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 880)

# Testcase cp_rs1_corners (Test source rs1 value = 0x100000001)
li x9, 0x0000000100000001 # initialize rs1
li x18, 0x9808dba7188a0d4c # initialize rs2
andn x20, x9, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 888)

# Testcase cp_rs2_corners (Test source rs2 value = 0x0)
li x26, 0x33e4a64a59c60b8f # initialize rs1
li x28, 0x0000000000000000 # initialize rs2
andn x3, x26, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 896)

# Testcase cp_rs2_corners (Test source rs2 value = 0x1)
li x25, 0x31594d3cbfb33b92 # initialize rs1
li x16, 0x0000000000000001 # initialize rs2
andn x17, x25, x16 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 904)

# Testcase cp_rs2_corners (Test source rs2 value = 0x2)
li x3, 0xeed3c558b1614636 # initialize rs1
li x14, 0x0000000000000002 # initialize rs2
andn x7, x3, x14 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 912)

# Testcase cp_rs2_corners (Test source rs2 value = 0x8000000000000000)
li x10, 0x222cdd3891627957 # initialize rs1
li x13, 0x8000000000000000 # initialize rs2
andn x15, x10, x13 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 920)

# Testcase cp_rs2_corners (Test source rs2 value = 0x8000000000000001)
li x6, 0x23af3dfa1d6bd2e7 # initialize rs1
li x18, 0x8000000000000001 # initialize rs2
andn x7, x6, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 928)

# Testcase cp_rs2_corners (Test source rs2 value = 0x7fffffffffffffff)
li x22, 0x0cb1e164e8e6915f # initialize rs1
li x18, 0x7fffffffffffffff # initialize rs2
andn x27, x22, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 936)

# Testcase cp_rs2_corners (Test source rs2 value = 0x7ffffffffffffffe)
li x3, 0xa9b81b985146f743 # initialize rs1
li x24, 0x7ffffffffffffffe # initialize rs2
andn x19, x3, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 944)

# Testcase cp_rs2_corners (Test source rs2 value = 0xffffffffffffffff)
li x12, 0xf5e337d09cb6b9a6 # initialize rs1
li x27, 0xffffffffffffffff # initialize rs2
andn x24, x12, x27 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 952)

# Testcase cp_rs2_corners (Test source rs2 value = 0xfffffffffffffffe)
li x14, 0x966c2ad2a89815ba # initialize rs1
li x5, 0xfffffffffffffffe # initialize rs2
andn x24, x14, x5 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 960)

# Testcase cp_rs2_corners (Test source rs2 value = 0x5bbc887763ae86f2)
li x30, 0x9d977fb94f6945c9 # initialize rs1
li x20, 0x5bbc887763ae86f2 # initialize rs2
andn x1, x30, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 968)

# Testcase cp_rs2_corners (Test source rs2 value = 0xaaaaaaaaaaaaaaaa)
li x30, 0xc70488e574caf41d # initialize rs1
li x24, 0xaaaaaaaaaaaaaaaa # initialize rs2
andn x29, x30, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 976)

# Testcase cp_rs2_corners (Test source rs2 value = 0x5555555555555555)
li x31, 0x37855de5be532eb8 # initialize rs1
li x10, 0x5555555555555555 # initialize rs2
andn x1, x31, x10 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 984)

# Testcase cp_rs2_corners (Test source rs2 value = 0xffffffff)
li x19, 0x4a2eece16d402fc5 # initialize rs1
li x9, 0x00000000ffffffff # initialize rs2
andn x20, x19, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 992)

# Testcase cp_rs2_corners (Test source rs2 value = 0xfffffffe)
li x5, 0x95e87b5257a2cc0d # initialize rs1
li x1, 0x00000000fffffffe # initialize rs2
andn x21, x5, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 1000)

# Testcase cp_rs2_corners (Test source rs2 value = 0x100000000)
li x7, 0x051e1a9eefb070a5 # initialize rs1
li x28, 0x0000000100000000 # initialize rs2
andn x3, x7, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 1008)

# Testcase cp_rs2_corners (Test source rs2 value = 0x100000001)
li x17, 0xce4d2773c990aca9 # initialize rs1
li x1, 0x0000000100000001 # initialize rs2
andn x27, x17, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 1016)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0x0)
li x27, 0x0000000000000000 # initialize rs1
li x13, 0x0000000000000000 # initialize rs2
andn x6, x27, x13 # perform operation
RVTEST_SIGUPD(x4, x0, x6, 1024)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0x1)
li x20, 0x0000000000000000 # initialize rs1
li x13, 0x0000000000000001 # initialize rs2
andn x8, x20, x13 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 1032)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0x2)
li x6, 0x0000000000000000 # initialize rs1
li x23, 0x0000000000000002 # initialize rs2
andn x27, x6, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 1040)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0x8000000000000000)
li x7, 0x0000000000000000 # initialize rs1
li x14, 0x8000000000000000 # initialize rs2
andn x24, x7, x14 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 1048)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0x8000000000000001)
li x17, 0x0000000000000000 # initialize rs1
li x9, 0x8000000000000001 # initialize rs2
andn x20, x17, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 1056)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0x7fffffffffffffff)
li x22, 0x0000000000000000 # initialize rs1
li x3, 0x7fffffffffffffff # initialize rs2
andn x5, x22, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x5, 1064)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0x7ffffffffffffffe)
li x25, 0x0000000000000000 # initialize rs1
li x22, 0x7ffffffffffffffe # initialize rs2
andn x12, x25, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 1072)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0xffffffffffffffff)
li x20, 0x0000000000000000 # initialize rs1
li x31, 0xffffffffffffffff # initialize rs2
andn x3, x20, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 1080)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0xfffffffffffffffe)
li x2, 0x0000000000000000 # initialize rs1
li x15, 0xfffffffffffffffe # initialize rs2
andn x3, x2, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 1088)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0x5bbc887763ae86f2)
li x29, 0x0000000000000000 # initialize rs1
li x28, 0x5bbc887763ae86f2 # initialize rs2
andn x27, x29, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 1096)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0xaaaaaaaaaaaaaaaa)
li x13, 0x0000000000000000 # initialize rs1
li x17, 0xaaaaaaaaaaaaaaaa # initialize rs2
andn x24, x13, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 1104)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0x5555555555555555)
li x30, 0x0000000000000000 # initialize rs1
li x29, 0x5555555555555555 # initialize rs2
andn x22, x30, x29 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 1112)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0xffffffff)
li x31, 0x0000000000000000 # initialize rs1
li x28, 0x00000000ffffffff # initialize rs2
andn x10, x31, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 1120)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0xfffffffe)
li x24, 0x0000000000000000 # initialize rs1
li x26, 0x00000000fffffffe # initialize rs2
andn x6, x24, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x6, 1128)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0x100000000)
li x15, 0x0000000000000000 # initialize rs1
li x29, 0x0000000100000000 # initialize rs2
andn x31, x15, x29 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 1136)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0x100000001)
li x5, 0x0000000000000000 # initialize rs1
li x18, 0x0000000100000001 # initialize rs2
andn x30, x5, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 1144)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0x0)
li x24, 0x0000000000000001 # initialize rs1
li x18, 0x0000000000000000 # initialize rs2
andn x14, x24, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 1152)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0x1)
li x27, 0x0000000000000001 # initialize rs1
li x2, 0x0000000000000001 # initialize rs2
andn x14, x27, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 1160)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0x2)
li x30, 0x0000000000000001 # initialize rs1
li x31, 0x0000000000000002 # initialize rs2
andn x24, x30, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 1168)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0x8000000000000000)
li x28, 0x0000000000000001 # initialize rs1
li x27, 0x8000000000000000 # initialize rs2
andn x23, x28, x27 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 1176)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0x8000000000000001)
li x29, 0x0000000000000001 # initialize rs1
li x20, 0x8000000000000001 # initialize rs2
andn x27, x29, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 1184)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0x7fffffffffffffff)
li x31, 0x0000000000000001 # initialize rs1
li x5, 0x7fffffffffffffff # initialize rs2
andn x7, x31, x5 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 1192)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0x7ffffffffffffffe)
li x8, 0x0000000000000001 # initialize rs1
li x26, 0x7ffffffffffffffe # initialize rs2
andn x23, x8, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 1200)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0xffffffffffffffff)
li x30, 0x0000000000000001 # initialize rs1
li x11, 0xffffffffffffffff # initialize rs2
andn x1, x30, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 1208)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0xfffffffffffffffe)
li x24, 0x0000000000000001 # initialize rs1
li x26, 0xfffffffffffffffe # initialize rs2
andn x11, x24, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 1216)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0x5bbc887763ae86f2)
li x26, 0x0000000000000001 # initialize rs1
li x7, 0x5bbc887763ae86f2 # initialize rs2
andn x13, x26, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 1224)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0xaaaaaaaaaaaaaaaa)
li x28, 0x0000000000000001 # initialize rs1
li x12, 0xaaaaaaaaaaaaaaaa # initialize rs2
andn x19, x28, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 1232)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0x5555555555555555)
li x20, 0x0000000000000001 # initialize rs1
li x27, 0x5555555555555555 # initialize rs2
andn x14, x20, x27 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 1240)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0xffffffff)
li x6, 0x0000000000000001 # initialize rs1
li x23, 0x00000000ffffffff # initialize rs2
andn x11, x6, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 1248)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0xfffffffe)
li x26, 0x0000000000000001 # initialize rs1
li x28, 0x00000000fffffffe # initialize rs2
andn x8, x26, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 1256)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0x100000000)
li x8, 0x0000000000000001 # initialize rs1
li x12, 0x0000000100000000 # initialize rs2
andn x3, x8, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 1264)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0x100000001)
li x25, 0x0000000000000001 # initialize rs1
li x19, 0x0000000100000001 # initialize rs2
andn x29, x25, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 1272)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0x0)
li x29, 0x0000000000000002 # initialize rs1
li x23, 0x0000000000000000 # initialize rs2
andn x17, x29, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 1280)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0x1)
li x11, 0x0000000000000002 # initialize rs1
li x25, 0x0000000000000001 # initialize rs2
andn x17, x11, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 1288)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0x2)
li x18, 0x0000000000000002 # initialize rs1
li x23, 0x0000000000000002 # initialize rs2
andn x14, x18, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 1296)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0x8000000000000000)
li x28, 0x0000000000000002 # initialize rs1
li x29, 0x8000000000000000 # initialize rs2
andn x20, x28, x29 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 1304)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0x8000000000000001)
li x27, 0x0000000000000002 # initialize rs1
li x12, 0x8000000000000001 # initialize rs2
andn x26, x27, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 1312)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0x7fffffffffffffff)
li x22, 0x0000000000000002 # initialize rs1
li x3, 0x7fffffffffffffff # initialize rs2
andn x11, x22, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 1320)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0x7ffffffffffffffe)
li x15, 0x0000000000000002 # initialize rs1
li x30, 0x7ffffffffffffffe # initialize rs2
andn x29, x15, x30 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 1328)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0xffffffffffffffff)
li x31, 0x0000000000000002 # initialize rs1
li x7, 0xffffffffffffffff # initialize rs2
andn x3, x31, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 1336)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0xfffffffffffffffe)
li x18, 0x0000000000000002 # initialize rs1
li x27, 0xfffffffffffffffe # initialize rs2
andn x21, x18, x27 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 1344)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0x5bbc887763ae86f2)
li x10, 0x0000000000000002 # initialize rs1
li x17, 0x5bbc887763ae86f2 # initialize rs2
andn x18, x10, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 1352)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0xaaaaaaaaaaaaaaaa)
li x10, 0x0000000000000002 # initialize rs1
li x2, 0xaaaaaaaaaaaaaaaa # initialize rs2
andn x22, x10, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 1360)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0x5555555555555555)
li x7, 0x0000000000000002 # initialize rs1
li x25, 0x5555555555555555 # initialize rs2
andn x14, x7, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 1368)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0xffffffff)
li x10, 0x0000000000000002 # initialize rs1
li x28, 0x00000000ffffffff # initialize rs2
andn x21, x10, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 1376)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0xfffffffe)
li x28, 0x0000000000000002 # initialize rs1
li x3, 0x00000000fffffffe # initialize rs2
andn x20, x28, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 1384)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0x100000000)
li x21, 0x0000000000000002 # initialize rs1
li x6, 0x0000000100000000 # initialize rs2
andn x28, x21, x6 # perform operation
RVTEST_SIGUPD(x4, x0, x28, 1392)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0x100000001)
li x28, 0x0000000000000002 # initialize rs1
li x14, 0x0000000100000001 # initialize rs2
andn x18, x28, x14 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 1400)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0x0)
li x15, 0x8000000000000000 # initialize rs1
li x22, 0x0000000000000000 # initialize rs2
andn x14, x15, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 1408)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0x1)
li x21, 0x8000000000000000 # initialize rs1
li x5, 0x0000000000000001 # initialize rs2
andn x13, x21, x5 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 1416)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0x2)
li x7, 0x8000000000000000 # initialize rs1
li x23, 0x0000000000000002 # initialize rs2
andn x14, x7, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 1424)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0x8000000000000000)
li x1, 0x8000000000000000 # initialize rs1
li x17, 0x8000000000000000 # initialize rs2
andn x9, x1, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 1432)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0x8000000000000001)
li x25, 0x8000000000000000 # initialize rs1
li x19, 0x8000000000000001 # initialize rs2
andn x6, x25, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x6, 1440)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0x7fffffffffffffff)
li x22, 0x8000000000000000 # initialize rs1
li x21, 0x7fffffffffffffff # initialize rs2
andn x15, x22, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 1448)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0x7ffffffffffffffe)
li x2, 0x8000000000000000 # initialize rs1
li x6, 0x7ffffffffffffffe # initialize rs2
andn x31, x2, x6 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 1456)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0xffffffffffffffff)
li x1, 0x8000000000000000 # initialize rs1
li x12, 0xffffffffffffffff # initialize rs2
andn x10, x1, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 1464)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0xfffffffffffffffe)
li x29, 0x8000000000000000 # initialize rs1
li x28, 0xfffffffffffffffe # initialize rs2
andn x9, x29, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 1472)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0x5bbc887763ae86f2)
li x26, 0x8000000000000000 # initialize rs1
li x6, 0x5bbc887763ae86f2 # initialize rs2
andn x30, x26, x6 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 1480)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0xaaaaaaaaaaaaaaaa)
li x28, 0x8000000000000000 # initialize rs1
li x9, 0xaaaaaaaaaaaaaaaa # initialize rs2
andn x1, x28, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 1488)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0x5555555555555555)
li x23, 0x8000000000000000 # initialize rs1
li x22, 0x5555555555555555 # initialize rs2
andn x12, x23, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 1496)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0xffffffff)
li x31, 0x8000000000000000 # initialize rs1
li x12, 0x00000000ffffffff # initialize rs2
andn x23, x31, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 1504)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0xfffffffe)
li x23, 0x8000000000000000 # initialize rs1
li x19, 0x00000000fffffffe # initialize rs2
andn x7, x23, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 1512)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0x100000000)
li x14, 0x8000000000000000 # initialize rs1
li x26, 0x0000000100000000 # initialize rs2
andn x2, x14, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 1520)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0x100000001)
li x15, 0x8000000000000000 # initialize rs1
li x28, 0x0000000100000001 # initialize rs2
andn x16, x15, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 1528)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0x0)
li x15, 0x8000000000000001 # initialize rs1
li x17, 0x0000000000000000 # initialize rs2
andn x31, x15, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 1536)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0x1)
li x12, 0x8000000000000001 # initialize rs1
li x14, 0x0000000000000001 # initialize rs2
andn x22, x12, x14 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 1544)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0x2)
li x24, 0x8000000000000001 # initialize rs1
li x12, 0x0000000000000002 # initialize rs2
andn x28, x24, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x28, 1552)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0x8000000000000000)
li x23, 0x8000000000000001 # initialize rs1
li x21, 0x8000000000000000 # initialize rs2
andn x29, x23, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 1560)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0x8000000000000001)
li x12, 0x8000000000000001 # initialize rs1
li x15, 0x8000000000000001 # initialize rs2
andn x19, x12, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 1568)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0x7fffffffffffffff)
li x17, 0x8000000000000001 # initialize rs1
li x15, 0x7fffffffffffffff # initialize rs2
andn x31, x17, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 1576)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0x7ffffffffffffffe)
li x16, 0x8000000000000001 # initialize rs1
li x20, 0x7ffffffffffffffe # initialize rs2
andn x14, x16, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 1584)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0xffffffffffffffff)
li x2, 0x8000000000000001 # initialize rs1
li x27, 0xffffffffffffffff # initialize rs2
andn x19, x2, x27 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 1592)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0xfffffffffffffffe)
li x20, 0x8000000000000001 # initialize rs1
li x21, 0xfffffffffffffffe # initialize rs2
andn x16, x20, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 1600)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0x5bbc887763ae86f2)
li x18, 0x8000000000000001 # initialize rs1
li x22, 0x5bbc887763ae86f2 # initialize rs2
andn x29, x18, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 1608)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0xaaaaaaaaaaaaaaaa)
li x10, 0x8000000000000001 # initialize rs1
li x24, 0xaaaaaaaaaaaaaaaa # initialize rs2
andn x28, x10, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x28, 1616)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0x5555555555555555)
li x12, 0x8000000000000001 # initialize rs1
li x20, 0x5555555555555555 # initialize rs2
andn x28, x12, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x28, 1624)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0xffffffff)
li x7, 0x8000000000000001 # initialize rs1
li x20, 0x00000000ffffffff # initialize rs2
andn x12, x7, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 1632)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0xfffffffe)
li x27, 0x8000000000000001 # initialize rs1
li x10, 0x00000000fffffffe # initialize rs2
andn x31, x27, x10 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 1640)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0x100000000)
li x6, 0x8000000000000001 # initialize rs1
li x22, 0x0000000100000000 # initialize rs2
andn x30, x6, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 1648)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0x100000001)
li x8, 0x8000000000000001 # initialize rs1
li x19, 0x0000000100000001 # initialize rs2
andn x18, x8, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 1656)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0x0)
li x21, 0x7fffffffffffffff # initialize rs1
li x8, 0x0000000000000000 # initialize rs2
andn x28, x21, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x28, 1664)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0x1)
li x7, 0x7fffffffffffffff # initialize rs1
li x12, 0x0000000000000001 # initialize rs2
andn x20, x7, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 1672)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0x2)
li x6, 0x7fffffffffffffff # initialize rs1
li x28, 0x0000000000000002 # initialize rs2
andn x11, x6, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 1680)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0x8000000000000000)
li x16, 0x7fffffffffffffff # initialize rs1
li x7, 0x8000000000000000 # initialize rs2
andn x25, x16, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 1688)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0x8000000000000001)
li x28, 0x7fffffffffffffff # initialize rs1
li x14, 0x8000000000000001 # initialize rs2
andn x31, x28, x14 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 1696)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0x7fffffffffffffff)
li x16, 0x7fffffffffffffff # initialize rs1
li x17, 0x7fffffffffffffff # initialize rs2
andn x22, x16, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 1704)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0x7ffffffffffffffe)
li x18, 0x7fffffffffffffff # initialize rs1
li x30, 0x7ffffffffffffffe # initialize rs2
andn x14, x18, x30 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 1712)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0xffffffffffffffff)
li x26, 0x7fffffffffffffff # initialize rs1
li x18, 0xffffffffffffffff # initialize rs2
andn x20, x26, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 1720)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0xfffffffffffffffe)
li x24, 0x7fffffffffffffff # initialize rs1
li x16, 0xfffffffffffffffe # initialize rs2
andn x10, x24, x16 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 1728)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0x5bbc887763ae86f2)
li x19, 0x7fffffffffffffff # initialize rs1
li x25, 0x5bbc887763ae86f2 # initialize rs2
andn x12, x19, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 1736)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0xaaaaaaaaaaaaaaaa)
li x8, 0x7fffffffffffffff # initialize rs1
li x3, 0xaaaaaaaaaaaaaaaa # initialize rs2
andn x17, x8, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 1744)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0x5555555555555555)
li x14, 0x7fffffffffffffff # initialize rs1
li x9, 0x5555555555555555 # initialize rs2
andn x11, x14, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 1752)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0xffffffff)
li x17, 0x7fffffffffffffff # initialize rs1
li x19, 0x00000000ffffffff # initialize rs2
andn x16, x17, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 1760)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0xfffffffe)
li x12, 0x7fffffffffffffff # initialize rs1
li x26, 0x00000000fffffffe # initialize rs2
andn x16, x12, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 1768)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0x100000000)
li x10, 0x7fffffffffffffff # initialize rs1
li x7, 0x0000000100000000 # initialize rs2
andn x20, x10, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 1776)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0x100000001)
li x26, 0x7fffffffffffffff # initialize rs1
li x5, 0x0000000100000001 # initialize rs2
andn x10, x26, x5 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 1784)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0x0)
li x26, 0x7ffffffffffffffe # initialize rs1
li x25, 0x0000000000000000 # initialize rs2
andn x28, x26, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x28, 1792)
addi x4, x4, 1800 # increment signature pointer and reset offset

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0x1)
li x23, 0x7ffffffffffffffe # initialize rs1
li x16, 0x0000000000000001 # initialize rs2
andn x13, x23, x16 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 0)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0x2)
li x19, 0x7ffffffffffffffe # initialize rs1
li x11, 0x0000000000000002 # initialize rs2
andn x24, x19, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 8)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0x8000000000000000)
li x29, 0x7ffffffffffffffe # initialize rs1
li x22, 0x8000000000000000 # initialize rs2
andn x20, x29, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 16)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0x8000000000000001)
li x18, 0x7ffffffffffffffe # initialize rs1
li x6, 0x8000000000000001 # initialize rs2
andn x14, x18, x6 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 24)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0x7fffffffffffffff)
li x31, 0x7ffffffffffffffe # initialize rs1
li x5, 0x7fffffffffffffff # initialize rs2
andn x7, x31, x5 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 32)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0x7ffffffffffffffe)
li x3, 0x7ffffffffffffffe # initialize rs1
li x12, 0x7ffffffffffffffe # initialize rs2
andn x7, x3, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 40)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0xffffffffffffffff)
li x15, 0x7ffffffffffffffe # initialize rs1
li x2, 0xffffffffffffffff # initialize rs2
andn x8, x15, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 48)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0xfffffffffffffffe)
li x1, 0x7ffffffffffffffe # initialize rs1
li x15, 0xfffffffffffffffe # initialize rs2
andn x25, x1, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 56)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0x5bbc887763ae86f2)
li x15, 0x7ffffffffffffffe # initialize rs1
li x22, 0x5bbc887763ae86f2 # initialize rs2
andn x28, x15, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x28, 64)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0xaaaaaaaaaaaaaaaa)
li x11, 0x7ffffffffffffffe # initialize rs1
li x13, 0xaaaaaaaaaaaaaaaa # initialize rs2
andn x21, x11, x13 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 72)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0x5555555555555555)
li x7, 0x7ffffffffffffffe # initialize rs1
li x14, 0x5555555555555555 # initialize rs2
andn x16, x7, x14 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 80)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0xffffffff)
li x13, 0x7ffffffffffffffe # initialize rs1
li x16, 0x00000000ffffffff # initialize rs2
andn x22, x13, x16 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 88)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0xfffffffe)
li x6, 0x7ffffffffffffffe # initialize rs1
li x15, 0x00000000fffffffe # initialize rs2
andn x30, x6, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 96)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0x100000000)
li x19, 0x7ffffffffffffffe # initialize rs1
li x5, 0x0000000100000000 # initialize rs2
andn x26, x19, x5 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 104)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0x100000001)
li x18, 0x7ffffffffffffffe # initialize rs1
li x21, 0x0000000100000001 # initialize rs2
andn x11, x18, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 112)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0x0)
li x21, 0xffffffffffffffff # initialize rs1
li x20, 0x0000000000000000 # initialize rs2
andn x9, x21, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 120)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0x1)
li x21, 0xffffffffffffffff # initialize rs1
li x17, 0x0000000000000001 # initialize rs2
andn x7, x21, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 128)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0x2)
li x1, 0xffffffffffffffff # initialize rs1
li x21, 0x0000000000000002 # initialize rs2
andn x30, x1, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 136)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0x8000000000000000)
li x14, 0xffffffffffffffff # initialize rs1
li x19, 0x8000000000000000 # initialize rs2
andn x6, x14, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x6, 144)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0x8000000000000001)
li x2, 0xffffffffffffffff # initialize rs1
li x22, 0x8000000000000001 # initialize rs2
andn x13, x2, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 152)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0x7fffffffffffffff)
li x19, 0xffffffffffffffff # initialize rs1
li x16, 0x7fffffffffffffff # initialize rs2
andn x5, x19, x16 # perform operation
RVTEST_SIGUPD(x4, x0, x5, 160)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0x7ffffffffffffffe)
li x15, 0xffffffffffffffff # initialize rs1
li x29, 0x7ffffffffffffffe # initialize rs2
andn x23, x15, x29 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 168)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0xffffffffffffffff)
li x13, 0xffffffffffffffff # initialize rs1
li x19, 0xffffffffffffffff # initialize rs2
andn x7, x13, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 176)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0xfffffffffffffffe)
li x14, 0xffffffffffffffff # initialize rs1
li x30, 0xfffffffffffffffe # initialize rs2
andn x19, x14, x30 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 184)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0x5bbc887763ae86f2)
li x18, 0xffffffffffffffff # initialize rs1
li x23, 0x5bbc887763ae86f2 # initialize rs2
andn x31, x18, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 192)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0xaaaaaaaaaaaaaaaa)
li x22, 0xffffffffffffffff # initialize rs1
li x21, 0xaaaaaaaaaaaaaaaa # initialize rs2
andn x15, x22, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 200)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0x5555555555555555)
li x15, 0xffffffffffffffff # initialize rs1
li x17, 0x5555555555555555 # initialize rs2
andn x25, x15, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 208)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0xffffffff)
li x17, 0xffffffffffffffff # initialize rs1
li x5, 0x00000000ffffffff # initialize rs2
andn x6, x17, x5 # perform operation
RVTEST_SIGUPD(x4, x0, x6, 216)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0xfffffffe)
li x12, 0xffffffffffffffff # initialize rs1
li x21, 0x00000000fffffffe # initialize rs2
andn x9, x12, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 224)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0x100000000)
li x30, 0xffffffffffffffff # initialize rs1
li x5, 0x0000000100000000 # initialize rs2
andn x3, x30, x5 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 232)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0x100000001)
li x31, 0xffffffffffffffff # initialize rs1
li x3, 0x0000000100000001 # initialize rs2
andn x22, x31, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 240)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0x0)
li x17, 0xfffffffffffffffe # initialize rs1
li x21, 0x0000000000000000 # initialize rs2
andn x11, x17, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 248)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0x1)
li x9, 0xfffffffffffffffe # initialize rs1
li x17, 0x0000000000000001 # initialize rs2
andn x5, x9, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x5, 256)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0x2)
li x29, 0xfffffffffffffffe # initialize rs1
li x22, 0x0000000000000002 # initialize rs2
andn x3, x29, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 264)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0x8000000000000000)
li x18, 0xfffffffffffffffe # initialize rs1
li x28, 0x8000000000000000 # initialize rs2
andn x20, x18, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 272)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0x8000000000000001)
li x31, 0xfffffffffffffffe # initialize rs1
li x8, 0x8000000000000001 # initialize rs2
andn x22, x31, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 280)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0x7fffffffffffffff)
li x19, 0xfffffffffffffffe # initialize rs1
li x22, 0x7fffffffffffffff # initialize rs2
andn x3, x19, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 288)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0x7ffffffffffffffe)
li x27, 0xfffffffffffffffe # initialize rs1
li x9, 0x7ffffffffffffffe # initialize rs2
andn x17, x27, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 296)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0xffffffffffffffff)
li x12, 0xfffffffffffffffe # initialize rs1
li x16, 0xffffffffffffffff # initialize rs2
andn x6, x12, x16 # perform operation
RVTEST_SIGUPD(x4, x0, x6, 304)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0xfffffffffffffffe)
li x31, 0xfffffffffffffffe # initialize rs1
li x16, 0xfffffffffffffffe # initialize rs2
andn x27, x31, x16 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 312)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0x5bbc887763ae86f2)
li x17, 0xfffffffffffffffe # initialize rs1
li x24, 0x5bbc887763ae86f2 # initialize rs2
andn x28, x17, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x28, 320)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0xaaaaaaaaaaaaaaaa)
li x11, 0xfffffffffffffffe # initialize rs1
li x19, 0xaaaaaaaaaaaaaaaa # initialize rs2
andn x20, x11, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 328)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0x5555555555555555)
li x15, 0xfffffffffffffffe # initialize rs1
li x20, 0x5555555555555555 # initialize rs2
andn x22, x15, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 336)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0xffffffff)
li x12, 0xfffffffffffffffe # initialize rs1
li x16, 0x00000000ffffffff # initialize rs2
andn x21, x12, x16 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 344)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0xfffffffe)
li x28, 0xfffffffffffffffe # initialize rs1
li x21, 0x00000000fffffffe # initialize rs2
andn x20, x28, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 352)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0x100000000)
li x25, 0xfffffffffffffffe # initialize rs1
li x12, 0x0000000100000000 # initialize rs2
andn x23, x25, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 360)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0x100000001)
li x20, 0xfffffffffffffffe # initialize rs1
li x3, 0x0000000100000001 # initialize rs2
andn x11, x20, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 368)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0x0)
li x8, 0x5bbc887763ae86f2 # initialize rs1
li x15, 0x0000000000000000 # initialize rs2
andn x12, x8, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 376)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0x1)
li x31, 0x5bbc887763ae86f2 # initialize rs1
li x1, 0x0000000000000001 # initialize rs2
andn x18, x31, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 384)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0x2)
li x14, 0x5bbc887763ae86f2 # initialize rs1
li x20, 0x0000000000000002 # initialize rs2
andn x24, x14, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 392)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0x8000000000000000)
li x29, 0x5bbc887763ae86f2 # initialize rs1
li x15, 0x8000000000000000 # initialize rs2
andn x7, x29, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 400)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0x8000000000000001)
li x10, 0x5bbc887763ae86f2 # initialize rs1
li x17, 0x8000000000000001 # initialize rs2
andn x23, x10, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 408)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0x7fffffffffffffff)
li x6, 0x5bbc887763ae86f2 # initialize rs1
li x23, 0x7fffffffffffffff # initialize rs2
andn x9, x6, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 416)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0x7ffffffffffffffe)
li x16, 0x5bbc887763ae86f2 # initialize rs1
li x28, 0x7ffffffffffffffe # initialize rs2
andn x15, x16, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 424)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0xffffffffffffffff)
li x18, 0x5bbc887763ae86f2 # initialize rs1
li x5, 0xffffffffffffffff # initialize rs2
andn x31, x18, x5 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 432)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0xfffffffffffffffe)
li x25, 0x5bbc887763ae86f2 # initialize rs1
li x11, 0xfffffffffffffffe # initialize rs2
andn x14, x25, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 440)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0x5bbc887763ae86f2)
li x20, 0x5bbc887763ae86f2 # initialize rs1
li x18, 0x5bbc887763ae86f2 # initialize rs2
andn x23, x20, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 448)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0xaaaaaaaaaaaaaaaa)
li x11, 0x5bbc887763ae86f2 # initialize rs1
li x10, 0xaaaaaaaaaaaaaaaa # initialize rs2
andn x25, x11, x10 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 456)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0x5555555555555555)
li x16, 0x5bbc887763ae86f2 # initialize rs1
li x5, 0x5555555555555555 # initialize rs2
andn x31, x16, x5 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 464)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0xffffffff)
li x12, 0x5bbc887763ae86f2 # initialize rs1
li x11, 0x00000000ffffffff # initialize rs2
andn x5, x12, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x5, 472)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0xfffffffe)
li x12, 0x5bbc887763ae86f2 # initialize rs1
li x29, 0x00000000fffffffe # initialize rs2
andn x30, x12, x29 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 480)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0x100000000)
li x8, 0x5bbc887763ae86f2 # initialize rs1
li x23, 0x0000000100000000 # initialize rs2
andn x25, x8, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 488)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0x100000001)
li x29, 0x5bbc887763ae86f2 # initialize rs1
li x10, 0x0000000100000001 # initialize rs2
andn x27, x29, x10 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 496)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0x0)
li x5, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x9, 0x0000000000000000 # initialize rs2
andn x6, x5, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x6, 504)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0x1)
li x11, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x31, 0x0000000000000001 # initialize rs2
andn x21, x11, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 512)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0x2)
li x27, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x1, 0x0000000000000002 # initialize rs2
andn x8, x27, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 520)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0x8000000000000000)
li x24, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x31, 0x8000000000000000 # initialize rs2
andn x29, x24, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 528)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0x8000000000000001)
li x14, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x2, 0x8000000000000001 # initialize rs2
andn x21, x14, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 536)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0x7fffffffffffffff)
li x16, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x21, 0x7fffffffffffffff # initialize rs2
andn x31, x16, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 544)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0x7ffffffffffffffe)
li x10, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x11, 0x7ffffffffffffffe # initialize rs2
andn x19, x10, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 552)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0xffffffffffffffff)
li x27, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x25, 0xffffffffffffffff # initialize rs2
andn x28, x27, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x28, 560)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0xfffffffffffffffe)
li x30, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x17, 0xfffffffffffffffe # initialize rs2
andn x14, x30, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 568)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0x5bbc887763ae86f2)
li x15, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x26, 0x5bbc887763ae86f2 # initialize rs2
andn x12, x15, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 576)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0xaaaaaaaaaaaaaaaa)
li x9, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x13, 0xaaaaaaaaaaaaaaaa # initialize rs2
andn x6, x9, x13 # perform operation
RVTEST_SIGUPD(x4, x0, x6, 584)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0x5555555555555555)
li x19, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x8, 0x5555555555555555 # initialize rs2
andn x27, x19, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 592)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0xffffffff)
li x30, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x27, 0x00000000ffffffff # initialize rs2
andn x9, x30, x27 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 600)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0xfffffffe)
li x25, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x7, 0x00000000fffffffe # initialize rs2
andn x20, x25, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 608)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0x100000000)
li x26, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x19, 0x0000000100000000 # initialize rs2
andn x31, x26, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 616)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0x100000001)
li x19, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x12, 0x0000000100000001 # initialize rs2
andn x31, x19, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 624)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0x0)
li x18, 0x5555555555555555 # initialize rs1
li x23, 0x0000000000000000 # initialize rs2
andn x7, x18, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 632)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0x1)
li x21, 0x5555555555555555 # initialize rs1
li x26, 0x0000000000000001 # initialize rs2
andn x18, x21, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 640)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0x2)
li x31, 0x5555555555555555 # initialize rs1
li x9, 0x0000000000000002 # initialize rs2
andn x24, x31, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 648)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0x8000000000000000)
li x29, 0x5555555555555555 # initialize rs1
li x17, 0x8000000000000000 # initialize rs2
andn x25, x29, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 656)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0x8000000000000001)
li x25, 0x5555555555555555 # initialize rs1
li x17, 0x8000000000000001 # initialize rs2
andn x21, x25, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 664)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0x7fffffffffffffff)
li x6, 0x5555555555555555 # initialize rs1
li x16, 0x7fffffffffffffff # initialize rs2
andn x15, x6, x16 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 672)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0x7ffffffffffffffe)
li x2, 0x5555555555555555 # initialize rs1
li x27, 0x7ffffffffffffffe # initialize rs2
andn x9, x2, x27 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 680)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0xffffffffffffffff)
li x14, 0x5555555555555555 # initialize rs1
li x3, 0xffffffffffffffff # initialize rs2
andn x6, x14, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x6, 688)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0xfffffffffffffffe)
li x8, 0x5555555555555555 # initialize rs1
li x27, 0xfffffffffffffffe # initialize rs2
andn x13, x8, x27 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 696)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0x5bbc887763ae86f2)
li x3, 0x5555555555555555 # initialize rs1
li x5, 0x5bbc887763ae86f2 # initialize rs2
andn x13, x3, x5 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 704)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0xaaaaaaaaaaaaaaaa)
li x28, 0x5555555555555555 # initialize rs1
li x13, 0xaaaaaaaaaaaaaaaa # initialize rs2
andn x11, x28, x13 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 712)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0x5555555555555555)
li x11, 0x5555555555555555 # initialize rs1
li x30, 0x5555555555555555 # initialize rs2
andn x20, x11, x30 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 720)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0xffffffff)
li x6, 0x5555555555555555 # initialize rs1
li x28, 0x00000000ffffffff # initialize rs2
andn x24, x6, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 728)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0xfffffffe)
li x30, 0x5555555555555555 # initialize rs1
li x27, 0x00000000fffffffe # initialize rs2
andn x7, x30, x27 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 736)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0x100000000)
li x23, 0x5555555555555555 # initialize rs1
li x22, 0x0000000100000000 # initialize rs2
andn x20, x23, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 744)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0x100000001)
li x31, 0x5555555555555555 # initialize rs1
li x3, 0x0000000100000001 # initialize rs2
andn x16, x31, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 752)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0x0)
li x29, 0x00000000ffffffff # initialize rs1
li x31, 0x0000000000000000 # initialize rs2
andn x20, x29, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 760)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0x1)
li x12, 0x00000000ffffffff # initialize rs1
li x6, 0x0000000000000001 # initialize rs2
andn x30, x12, x6 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 768)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0x2)
li x3, 0x00000000ffffffff # initialize rs1
li x28, 0x0000000000000002 # initialize rs2
andn x17, x3, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 776)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0x8000000000000000)
li x8, 0x00000000ffffffff # initialize rs1
li x6, 0x8000000000000000 # initialize rs2
andn x2, x8, x6 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 784)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0x8000000000000001)
li x23, 0x00000000ffffffff # initialize rs1
li x17, 0x8000000000000001 # initialize rs2
andn x8, x23, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 792)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0x7fffffffffffffff)
li x7, 0x00000000ffffffff # initialize rs1
li x8, 0x7fffffffffffffff # initialize rs2
andn x27, x7, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 800)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0x7ffffffffffffffe)
li x26, 0x00000000ffffffff # initialize rs1
li x31, 0x7ffffffffffffffe # initialize rs2
andn x1, x26, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 808)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0xffffffffffffffff)
li x21, 0x00000000ffffffff # initialize rs1
li x13, 0xffffffffffffffff # initialize rs2
andn x31, x21, x13 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 816)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0xfffffffffffffffe)
li x7, 0x00000000ffffffff # initialize rs1
li x26, 0xfffffffffffffffe # initialize rs2
andn x27, x7, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 824)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0x5bbc887763ae86f2)
li x24, 0x00000000ffffffff # initialize rs1
li x18, 0x5bbc887763ae86f2 # initialize rs2
andn x30, x24, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 832)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0xaaaaaaaaaaaaaaaa)
li x2, 0x00000000ffffffff # initialize rs1
li x16, 0xaaaaaaaaaaaaaaaa # initialize rs2
andn x18, x2, x16 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 840)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0x5555555555555555)
li x27, 0x00000000ffffffff # initialize rs1
li x7, 0x5555555555555555 # initialize rs2
andn x25, x27, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 848)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0xffffffff)
li x6, 0x00000000ffffffff # initialize rs1
li x10, 0x00000000ffffffff # initialize rs2
andn x8, x6, x10 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 856)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0xfffffffe)
li x17, 0x00000000ffffffff # initialize rs1
li x30, 0x00000000fffffffe # initialize rs2
andn x16, x17, x30 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 864)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0x100000000)
li x7, 0x00000000ffffffff # initialize rs1
li x1, 0x0000000100000000 # initialize rs2
andn x10, x7, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 872)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0x100000001)
li x6, 0x00000000ffffffff # initialize rs1
li x30, 0x0000000100000001 # initialize rs2
andn x31, x6, x30 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 880)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0x0)
li x26, 0x00000000fffffffe # initialize rs1
li x8, 0x0000000000000000 # initialize rs2
andn x27, x26, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 888)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0x1)
li x14, 0x00000000fffffffe # initialize rs1
li x17, 0x0000000000000001 # initialize rs2
andn x30, x14, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 896)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0x2)
li x5, 0x00000000fffffffe # initialize rs1
li x31, 0x0000000000000002 # initialize rs2
andn x10, x5, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 904)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0x8000000000000000)
li x9, 0x00000000fffffffe # initialize rs1
li x2, 0x8000000000000000 # initialize rs2
andn x16, x9, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 912)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0x8000000000000001)
li x5, 0x00000000fffffffe # initialize rs1
li x19, 0x8000000000000001 # initialize rs2
andn x29, x5, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 920)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0x7fffffffffffffff)
li x19, 0x00000000fffffffe # initialize rs1
li x23, 0x7fffffffffffffff # initialize rs2
andn x28, x19, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x28, 928)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0x7ffffffffffffffe)
li x16, 0x00000000fffffffe # initialize rs1
li x6, 0x7ffffffffffffffe # initialize rs2
andn x21, x16, x6 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 936)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0xffffffffffffffff)
li x16, 0x00000000fffffffe # initialize rs1
li x14, 0xffffffffffffffff # initialize rs2
andn x22, x16, x14 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 944)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0xfffffffffffffffe)
li x14, 0x00000000fffffffe # initialize rs1
li x22, 0xfffffffffffffffe # initialize rs2
andn x27, x14, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 952)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0x5bbc887763ae86f2)
li x12, 0x00000000fffffffe # initialize rs1
li x16, 0x5bbc887763ae86f2 # initialize rs2
andn x9, x12, x16 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 960)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0xaaaaaaaaaaaaaaaa)
li x2, 0x00000000fffffffe # initialize rs1
li x28, 0xaaaaaaaaaaaaaaaa # initialize rs2
andn x15, x2, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 968)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0x5555555555555555)
li x12, 0x00000000fffffffe # initialize rs1
li x16, 0x5555555555555555 # initialize rs2
andn x21, x12, x16 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 976)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0xffffffff)
li x16, 0x00000000fffffffe # initialize rs1
li x11, 0x00000000ffffffff # initialize rs2
andn x19, x16, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 984)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0xfffffffe)
li x25, 0x00000000fffffffe # initialize rs1
li x28, 0x00000000fffffffe # initialize rs2
andn x9, x25, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 992)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0x100000000)
li x20, 0x00000000fffffffe # initialize rs1
li x5, 0x0000000100000000 # initialize rs2
andn x9, x20, x5 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 1000)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0x100000001)
li x1, 0x00000000fffffffe # initialize rs1
li x17, 0x0000000100000001 # initialize rs2
andn x16, x1, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 1008)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0x0)
li x16, 0x0000000100000000 # initialize rs1
li x28, 0x0000000000000000 # initialize rs2
andn x10, x16, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 1016)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0x1)
li x2, 0x0000000100000000 # initialize rs1
li x5, 0x0000000000000001 # initialize rs2
andn x23, x2, x5 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 1024)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0x2)
li x8, 0x0000000100000000 # initialize rs1
li x24, 0x0000000000000002 # initialize rs2
andn x17, x8, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 1032)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0x8000000000000000)
li x11, 0x0000000100000000 # initialize rs1
li x23, 0x8000000000000000 # initialize rs2
andn x22, x11, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 1040)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0x8000000000000001)
li x27, 0x0000000100000000 # initialize rs1
li x20, 0x8000000000000001 # initialize rs2
andn x30, x27, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 1048)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0x7fffffffffffffff)
li x26, 0x0000000100000000 # initialize rs1
li x14, 0x7fffffffffffffff # initialize rs2
andn x1, x26, x14 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 1056)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0x7ffffffffffffffe)
li x31, 0x0000000100000000 # initialize rs1
li x3, 0x7ffffffffffffffe # initialize rs2
andn x23, x31, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 1064)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0xffffffffffffffff)
li x16, 0x0000000100000000 # initialize rs1
li x19, 0xffffffffffffffff # initialize rs2
andn x9, x16, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 1072)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0xfffffffffffffffe)
li x27, 0x0000000100000000 # initialize rs1
li x15, 0xfffffffffffffffe # initialize rs2
andn x6, x27, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x6, 1080)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0x5bbc887763ae86f2)
li x19, 0x0000000100000000 # initialize rs1
li x17, 0x5bbc887763ae86f2 # initialize rs2
andn x20, x19, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 1088)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0xaaaaaaaaaaaaaaaa)
li x21, 0x0000000100000000 # initialize rs1
li x8, 0xaaaaaaaaaaaaaaaa # initialize rs2
andn x28, x21, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x28, 1096)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0x5555555555555555)
li x21, 0x0000000100000000 # initialize rs1
li x30, 0x5555555555555555 # initialize rs2
andn x26, x21, x30 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 1104)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0xffffffff)
li x30, 0x0000000100000000 # initialize rs1
li x17, 0x00000000ffffffff # initialize rs2
andn x27, x30, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 1112)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0xfffffffe)
li x3, 0x0000000100000000 # initialize rs1
li x28, 0x00000000fffffffe # initialize rs2
andn x13, x3, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 1120)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0x100000000)
li x27, 0x0000000100000000 # initialize rs1
li x13, 0x0000000100000000 # initialize rs2
andn x11, x27, x13 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 1128)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0x100000001)
li x1, 0x0000000100000000 # initialize rs1
li x26, 0x0000000100000001 # initialize rs2
andn x9, x1, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 1136)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0x0)
li x31, 0x0000000100000001 # initialize rs1
li x26, 0x0000000000000000 # initialize rs2
andn x10, x31, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 1144)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0x1)
li x20, 0x0000000100000001 # initialize rs1
li x17, 0x0000000000000001 # initialize rs2
andn x24, x20, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 1152)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0x2)
li x21, 0x0000000100000001 # initialize rs1
li x17, 0x0000000000000002 # initialize rs2
andn x1, x21, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 1160)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0x8000000000000000)
li x10, 0x0000000100000001 # initialize rs1
li x16, 0x8000000000000000 # initialize rs2
andn x8, x10, x16 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 1168)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0x8000000000000001)
li x2, 0x0000000100000001 # initialize rs1
li x20, 0x8000000000000001 # initialize rs2
andn x27, x2, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 1176)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0x7fffffffffffffff)
li x8, 0x0000000100000001 # initialize rs1
li x17, 0x7fffffffffffffff # initialize rs2
andn x12, x8, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 1184)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0x7ffffffffffffffe)
li x6, 0x0000000100000001 # initialize rs1
li x25, 0x7ffffffffffffffe # initialize rs2
andn x20, x6, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 1192)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0xffffffffffffffff)
li x5, 0x0000000100000001 # initialize rs1
li x3, 0xffffffffffffffff # initialize rs2
andn x26, x5, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 1200)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0xfffffffffffffffe)
li x9, 0x0000000100000001 # initialize rs1
li x27, 0xfffffffffffffffe # initialize rs2
andn x20, x9, x27 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 1208)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0x5bbc887763ae86f2)
li x26, 0x0000000100000001 # initialize rs1
li x15, 0x5bbc887763ae86f2 # initialize rs2
andn x22, x26, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 1216)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0xaaaaaaaaaaaaaaaa)
li x29, 0x0000000100000001 # initialize rs1
li x9, 0xaaaaaaaaaaaaaaaa # initialize rs2
andn x24, x29, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 1224)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0x5555555555555555)
li x19, 0x0000000100000001 # initialize rs1
li x26, 0x5555555555555555 # initialize rs2
andn x28, x19, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x28, 1232)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0xffffffff)
li x28, 0x0000000100000001 # initialize rs1
li x25, 0x00000000ffffffff # initialize rs2
andn x29, x28, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 1240)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0xfffffffe)
li x30, 0x0000000100000001 # initialize rs1
li x1, 0x00000000fffffffe # initialize rs2
andn x12, x30, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 1248)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0x100000000)
li x17, 0x0000000100000001 # initialize rs1
li x21, 0x0000000100000000 # initialize rs2
andn x5, x17, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x5, 1256)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0x100000001)
li x29, 0x0000000100000001 # initialize rs1
li x24, 0x0000000100000001 # initialize rs2
andn x17, x29, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 1264)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x0)
li x0, 0x02fea0a18208faf8 # initialize rs1
li x0, 0x2bb3b9bbb96a597d # initialize rs2
andn x23, x0, x0 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 1272)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x1)
li x1, 0xbb95030cc499804b # initialize rs1
li x1, 0xe6a95c41cfaba60a # initialize rs2
andn x15, x1, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 1280)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x2)
li x2, 0x94406c90e20d94b9 # initialize rs1
li x2, 0x1bd3606641a8b489 # initialize rs2
andn x13, x2, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 1288)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x3)
li x3, 0xbe0aee26011e1a82 # initialize rs1
li x3, 0x92b24d2ce59c2d8a # initialize rs2
andn x27, x3, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 1296)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x4)
mv x5, x4 # switch signature pointer register to avoid conflict with test
li x4, 0x8373952da413303b # initialize rs1
li x4, 0x7e59b847bf877d72 # initialize rs2
andn x19, x4, x4 # perform operation
RVTEST_SIGUPD(x5, x0, x19, 1304)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x5)
mv x6, x5 # switch signature pointer register to avoid conflict with test
li x5, 0x38257e9a27f59ea5 # initialize rs1
li x5, 0xf2406d50ba059217 # initialize rs2
andn x4, x5, x5 # perform operation
RVTEST_SIGUPD(x6, x0, x4, 1312)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x6)
mv x7, x6 # switch signature pointer register to avoid conflict with test
li x6, 0x426db8187b15e1dc # initialize rs1
li x6, 0x4e6a5c6001aa561b # initialize rs2
andn x12, x6, x6 # perform operation
RVTEST_SIGUPD(x7, x0, x12, 1320)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x7)
mv x4, x7 # switch signature pointer register to avoid conflict with test
li x7, 0x622f35f5099d77bb # initialize rs1
li x7, 0x0905b5ad7e3fa3d5 # initialize rs2
andn x29, x7, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 1328)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x8)
li x8, 0x2d31ab38e73c9ad4 # initialize rs1
li x8, 0xe36df470c195f4ec # initialize rs2
andn x30, x8, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 1336)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x9)
li x9, 0x1aebbe18cc630a34 # initialize rs1
li x9, 0x4480f5b950e9d7da # initialize rs2
andn x14, x9, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 1344)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x10)
li x10, 0x8f6aed53035f0b90 # initialize rs1
li x10, 0x5cd35023d3812914 # initialize rs2
andn x23, x10, x10 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 1352)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x11)
li x11, 0x242b016e72fcc720 # initialize rs1
li x11, 0xe2af22a68354cbf1 # initialize rs2
andn x19, x11, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 1360)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x12)
li x12, 0xf3f3a9a3a7acab77 # initialize rs1
li x12, 0xe03713d928d87123 # initialize rs2
andn x11, x12, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 1368)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x13)
li x13, 0x7b70b23f0042c9cb # initialize rs1
li x13, 0x0a50dea2367ef7de # initialize rs2
andn x21, x13, x13 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 1376)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x14)
li x14, 0x7dc6dddccc64dceb # initialize rs1
li x14, 0x45db21600364db3f # initialize rs2
andn x26, x14, x14 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 1384)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x15)
li x15, 0x658d6c406347715e # initialize rs1
li x15, 0x34df3bad990b6997 # initialize rs2
andn x26, x15, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 1392)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x16)
li x16, 0x325ee2e5ae3e0187 # initialize rs1
li x16, 0x22a4b8e844bf1582 # initialize rs2
andn x28, x16, x16 # perform operation
RVTEST_SIGUPD(x4, x0, x28, 1400)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x17)
li x17, 0xad3fe7b4517e5ece # initialize rs1
li x17, 0xd27f0f8bf9e2a577 # initialize rs2
andn x26, x17, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 1408)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x18)
li x18, 0x34f2ae021048942c # initialize rs1
li x18, 0x83a725d6b483a854 # initialize rs2
andn x16, x18, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 1416)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x19)
li x19, 0x261142594d0f6b46 # initialize rs1
li x19, 0xc097295b4857614b # initialize rs2
andn x16, x19, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 1424)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x20)
li x20, 0xb911eb0aa2b36c62 # initialize rs1
li x20, 0x1dca10e732871ac4 # initialize rs2
andn x25, x20, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 1432)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x21)
li x21, 0x43aefce617c48d8a # initialize rs1
li x21, 0xd63c226e5a983b30 # initialize rs2
andn x17, x21, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 1440)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x22)
li x22, 0x7b3abf715609071b # initialize rs1
li x22, 0x0bde2bffbd659e9b # initialize rs2
andn x27, x22, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 1448)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x23)
li x23, 0xd25be7c95b824eb6 # initialize rs1
li x23, 0xa3411d89801445ef # initialize rs2
andn x25, x23, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 1456)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x24)
li x24, 0xb820bb9ec004951a # initialize rs1
li x24, 0x7cbf13ade2f94509 # initialize rs2
andn x30, x24, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 1464)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x25)
li x25, 0xbb25974b4cbca297 # initialize rs1
li x25, 0x5973b8372ba46695 # initialize rs2
andn x13, x25, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 1472)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x26)
li x26, 0x93f25eb0afcd2c83 # initialize rs1
li x26, 0xd557839c49c48c38 # initialize rs2
andn x20, x26, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 1480)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x27)
li x27, 0xc5ec12115eda9ad5 # initialize rs1
li x27, 0x467620efa469b76f # initialize rs2
andn x6, x27, x27 # perform operation
RVTEST_SIGUPD(x4, x0, x6, 1488)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x28)
li x28, 0x8ac34ccd8c4a17a2 # initialize rs1
li x28, 0x4033459b75d05ea5 # initialize rs2
andn x13, x28, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 1496)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x29)
li x29, 0x6624b951e0b87e64 # initialize rs1
li x29, 0x4fc8630cee3380ea # initialize rs2
andn x8, x29, x29 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 1504)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x30)
li x30, 0x4dc5fbe0561711ad # initialize rs1
li x30, 0x5ecdae9bddbf4ae0 # initialize rs2
andn x11, x30, x30 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 1512)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x31)
li x31, 0x48cd5ec16a97bf2e # initialize rs1
li x31, 0x7a162619637b4f4f # initialize rs2
andn x9, x31, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 1520)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x0)
li x0, 0x1ef4d36caf7b190e # initialize rs1
li x30, 0xab4bece9de5a1525 # initialize rs2
andn x0, x0, x30 # perform operation
RVTEST_SIGUPD(x4, x0, x0, 1528)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x1)
li x1, 0x998b5f53df3f99ec # initialize rs1
li x3, 0x6afd44c990b45dcb # initialize rs2
andn x1, x1, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 1536)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x2)
li x2, 0x101e7891ac4d8588 # initialize rs1
li x5, 0xbd9582579e48e25a # initialize rs2
andn x2, x2, x5 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 1544)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x3)
li x3, 0x79fed4a2f18d228f # initialize rs1
li x22, 0x02572817b7c8b7ab # initialize rs2
andn x3, x3, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 1552)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x4)
mv x5, x4 # switch signature pointer register to avoid conflict with test
li x4, 0x09be9c931bdedb8d # initialize rs1
li x2, 0x8dd46ba3b6f2e8ca # initialize rs2
andn x4, x4, x2 # perform operation
RVTEST_SIGUPD(x5, x0, x4, 1560)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x5)
mv x6, x5 # switch signature pointer register to avoid conflict with test
li x5, 0x841966527ab4b28c # initialize rs1
li x31, 0xc98a590298564e0e # initialize rs2
andn x5, x5, x31 # perform operation
RVTEST_SIGUPD(x6, x0, x5, 1568)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x6)
mv x7, x6 # switch signature pointer register to avoid conflict with test
li x6, 0x571c6acc6c2e8166 # initialize rs1
li x25, 0x6e690554cc6e94b7 # initialize rs2
andn x6, x6, x25 # perform operation
RVTEST_SIGUPD(x7, x0, x6, 1576)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x7)
mv x5, x7 # switch signature pointer register to avoid conflict with test
li x7, 0x0bd76fd8c63f654f # initialize rs1
li x4, 0x7ea1273c44594c10 # initialize rs2
andn x7, x7, x4 # perform operation
RVTEST_SIGUPD(x5, x0, x7, 1584)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x8)
li x8, 0x0fbebe787536ccd6 # initialize rs1
li x21, 0x41501f632ae09ac0 # initialize rs2
andn x8, x8, x21 # perform operation
RVTEST_SIGUPD(x5, x0, x8, 1592)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x9)
li x9, 0x0f3c53132e146b36 # initialize rs1
li x21, 0x6b28ab8ae1e903b8 # initialize rs2
andn x9, x9, x21 # perform operation
RVTEST_SIGUPD(x5, x0, x9, 1600)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x10)
li x10, 0x871cba19a9a9aab9 # initialize rs1
li x4, 0x76d9682df111075b # initialize rs2
andn x10, x10, x4 # perform operation
RVTEST_SIGUPD(x5, x0, x10, 1608)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x11)
li x11, 0xcef771e8506482df # initialize rs1
li x31, 0xac55adbe44589e0a # initialize rs2
andn x11, x11, x31 # perform operation
RVTEST_SIGUPD(x5, x0, x11, 1616)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x12)
li x12, 0xb2616854cbba5fa6 # initialize rs1
li x23, 0x3800642ccabf3863 # initialize rs2
andn x12, x12, x23 # perform operation
RVTEST_SIGUPD(x5, x0, x12, 1624)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x13)
li x13, 0x214c8c7f0d2374f7 # initialize rs1
li x7, 0xa646bf5adeffd4ec # initialize rs2
andn x13, x13, x7 # perform operation
RVTEST_SIGUPD(x5, x0, x13, 1632)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x14)
li x14, 0x4467f3e57ab33d83 # initialize rs1
li x21, 0x4ba706a02b636c99 # initialize rs2
andn x14, x14, x21 # perform operation
RVTEST_SIGUPD(x5, x0, x14, 1640)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x15)
li x15, 0x8346bece5702793b # initialize rs1
li x14, 0x340c606514e4fcf2 # initialize rs2
andn x15, x15, x14 # perform operation
RVTEST_SIGUPD(x5, x0, x15, 1648)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x16)
li x16, 0x71518ebcdc72aace # initialize rs1
li x25, 0x10500de785a7ccba # initialize rs2
andn x16, x16, x25 # perform operation
RVTEST_SIGUPD(x5, x0, x16, 1656)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x17)
li x17, 0x4d638747d2b3da44 # initialize rs1
li x17, 0x7616c4313a23d232 # initialize rs2
andn x17, x17, x17 # perform operation
RVTEST_SIGUPD(x5, x0, x17, 1664)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x18)
li x18, 0x5dbb6eb9cca57eb7 # initialize rs1
li x12, 0x88ce25a8ddf84638 # initialize rs2
andn x18, x18, x12 # perform operation
RVTEST_SIGUPD(x5, x0, x18, 1672)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x19)
li x19, 0xc5588ca2e344403b # initialize rs1
li x24, 0x2aa67dd676df703b # initialize rs2
andn x19, x19, x24 # perform operation
RVTEST_SIGUPD(x5, x0, x19, 1680)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x20)
li x20, 0x9fc60e78e67203e4 # initialize rs1
li x29, 0xc79ba43563c30ae3 # initialize rs2
andn x20, x20, x29 # perform operation
RVTEST_SIGUPD(x5, x0, x20, 1688)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x21)
li x21, 0xfe55d4d23d2030e3 # initialize rs1
li x10, 0x5a3f73f1dcd6ac20 # initialize rs2
andn x21, x21, x10 # perform operation
RVTEST_SIGUPD(x5, x0, x21, 1696)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x22)
li x22, 0x3db54cfa30bd5397 # initialize rs1
li x31, 0x1048ac18390f27d7 # initialize rs2
andn x22, x22, x31 # perform operation
RVTEST_SIGUPD(x5, x0, x22, 1704)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x23)
li x23, 0x1d85b55c183ab099 # initialize rs1
li x10, 0xa50b5ff0205623af # initialize rs2
andn x23, x23, x10 # perform operation
RVTEST_SIGUPD(x5, x0, x23, 1712)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x24)
li x24, 0x7504e88c7a5b3ab4 # initialize rs1
li x18, 0x7868082eaeb9dca9 # initialize rs2
andn x24, x24, x18 # perform operation
RVTEST_SIGUPD(x5, x0, x24, 1720)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x25)
li x25, 0x435a845c3019d14f # initialize rs1
li x23, 0xb84ce3487ceef62d # initialize rs2
andn x25, x25, x23 # perform operation
RVTEST_SIGUPD(x5, x0, x25, 1728)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x26)
li x26, 0x1b0e90d7713947aa # initialize rs1
li x16, 0xd50a4e1178bc03cb # initialize rs2
andn x26, x26, x16 # perform operation
RVTEST_SIGUPD(x5, x0, x26, 1736)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x27)
li x27, 0xf05dfd7135ea2928 # initialize rs1
li x30, 0xa1c1a696b5991dc7 # initialize rs2
andn x27, x27, x30 # perform operation
RVTEST_SIGUPD(x5, x0, x27, 1744)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x28)
li x28, 0x825400859912ec0c # initialize rs1
li x13, 0xc36e9419e9592323 # initialize rs2
andn x28, x28, x13 # perform operation
RVTEST_SIGUPD(x5, x0, x28, 1752)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x29)
li x29, 0xa62838c909314d25 # initialize rs1
li x19, 0x32421d9aebd6bf1f # initialize rs2
andn x29, x29, x19 # perform operation
RVTEST_SIGUPD(x5, x0, x29, 1760)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x30)
li x30, 0xcce382e416a10ce6 # initialize rs1
li x7, 0x9db08c500291b7bc # initialize rs2
andn x30, x30, x7 # perform operation
RVTEST_SIGUPD(x5, x0, x30, 1768)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x31)
li x31, 0x0d56dcf0f0dd1384 # initialize rs1
li x19, 0x9805d262a8bd0d23 # initialize rs2
andn x31, x31, x19 # perform operation
RVTEST_SIGUPD(x5, x0, x31, 1776)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x0)
li x6, 0x69d4da683bd70899 # initialize rs1
li x0, 0x61bbb4caa5ca7ab2 # initialize rs2
andn x0, x6, x0 # perform operation
RVTEST_SIGUPD(x5, x0, x0, 1784)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x1)
li x16, 0xae9016d370ce3eed # initialize rs1
li x1, 0x5764c27cbf710682 # initialize rs2
andn x1, x16, x1 # perform operation
RVTEST_SIGUPD(x5, x0, x1, 1792)
addi x5, x5, 1800 # increment signature pointer and reset offset

# Testcase cmp_rd_rs2 (Test rd = rs2 = x2)
li x24, 0x7b605c09b4725b9e # initialize rs1
li x2, 0xbb570ff94b7b0130 # initialize rs2
andn x2, x24, x2 # perform operation
RVTEST_SIGUPD(x5, x0, x2, 0)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x3)
li x6, 0xe98c337c585f560d # initialize rs1
li x3, 0x1b5759db70a053bd # initialize rs2
andn x3, x6, x3 # perform operation
RVTEST_SIGUPD(x5, x0, x3, 8)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x4)
li x10, 0x66c1a64f7dbacc29 # initialize rs1
li x4, 0xba3da9201e4a0979 # initialize rs2
andn x4, x10, x4 # perform operation
RVTEST_SIGUPD(x5, x0, x4, 16)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x5)
mv x6, x5 # switch signature pointer register to avoid conflict with test
li x10, 0xa52b810e16095753 # initialize rs1
li x5, 0xc9c03f5b44f7b884 # initialize rs2
andn x5, x10, x5 # perform operation
RVTEST_SIGUPD(x6, x0, x5, 24)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x6)
mv x7, x6 # switch signature pointer register to avoid conflict with test
li x28, 0x0e7bde41e50d919f # initialize rs1
li x6, 0x26d2f381f2111ab7 # initialize rs2
andn x6, x28, x6 # perform operation
RVTEST_SIGUPD(x7, x0, x6, 32)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x7)
mv x4, x7 # switch signature pointer register to avoid conflict with test
li x24, 0x862d77e79b1bf54c # initialize rs1
li x7, 0xef0feb6186e1f456 # initialize rs2
andn x7, x24, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 40)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x8)
li x12, 0x567f0dff2c54c0d1 # initialize rs1
li x8, 0x23e2174a3a2ae39e # initialize rs2
andn x8, x12, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 48)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x9)
li x18, 0xa36dd079ee9d3f85 # initialize rs1
li x9, 0x73fe91e76f2fe2c3 # initialize rs2
andn x9, x18, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 56)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x10)
li x23, 0x0dbfa3d3520fb6e8 # initialize rs1
li x10, 0x89a9180980470665 # initialize rs2
andn x10, x23, x10 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 64)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x11)
li x29, 0xe937db0222d2d785 # initialize rs1
li x11, 0x5220083edd259984 # initialize rs2
andn x11, x29, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 72)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x12)
li x29, 0x89ded47748f69556 # initialize rs1
li x12, 0x516b52653dcc31fb # initialize rs2
andn x12, x29, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 80)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x13)
li x21, 0x200afa302d49b7d1 # initialize rs1
li x13, 0xce7a1fec422fb919 # initialize rs2
andn x13, x21, x13 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 88)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x14)
li x9, 0x4c31fdae2ac91b26 # initialize rs1
li x14, 0x187a3c1a81b3b7a7 # initialize rs2
andn x14, x9, x14 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 96)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x15)
li x23, 0xee46de62118c7aee # initialize rs1
li x15, 0x14a304fca100719c # initialize rs2
andn x15, x23, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 104)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x16)
li x17, 0xb99f943d025858c0 # initialize rs1
li x16, 0x71ced8fa5867abc8 # initialize rs2
andn x16, x17, x16 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 112)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x17)
li x29, 0xfbf6d9f16e32fa39 # initialize rs1
li x17, 0x5476e5be605897d5 # initialize rs2
andn x17, x29, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 120)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x18)
li x3, 0x2b0571ddf41a9318 # initialize rs1
li x18, 0xc553915d70cd88a0 # initialize rs2
andn x18, x3, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 128)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x19)
li x6, 0xdbdcd8ba07800859 # initialize rs1
li x19, 0x5adc024f36efcef6 # initialize rs2
andn x19, x6, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 136)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x20)
li x8, 0xfce918df574ce687 # initialize rs1
li x20, 0xffde951f1464dfc0 # initialize rs2
andn x20, x8, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 144)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x21)
li x13, 0x57e491672080c051 # initialize rs1
li x21, 0xb5bf7ccda1ff6046 # initialize rs2
andn x21, x13, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 152)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x22)
li x1, 0x5e3375952f1307c0 # initialize rs1
li x22, 0x6e1e636a89b2d95c # initialize rs2
andn x22, x1, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 160)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x23)
li x8, 0x328c13137aecbd49 # initialize rs1
li x23, 0xcccdea706b7482d2 # initialize rs2
andn x23, x8, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 168)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x24)
li x3, 0xc886d5f3fe16ddb9 # initialize rs1
li x24, 0x306d2d5239e310d6 # initialize rs2
andn x24, x3, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 176)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x25)
li x10, 0xb000a9eb86d45005 # initialize rs1
li x25, 0xdaad4d7a438abb95 # initialize rs2
andn x25, x10, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 184)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x26)
li x15, 0xec77db90057402ba # initialize rs1
li x26, 0x14e55f8f665ee036 # initialize rs2
andn x26, x15, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 192)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x27)
li x29, 0xbfb93e6d583f9dc8 # initialize rs1
li x27, 0xb40f5d07969deeab # initialize rs2
andn x27, x29, x27 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 200)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x28)
li x7, 0x1e3724f712e9fd90 # initialize rs1
li x28, 0x2fcc365d54597d26 # initialize rs2
andn x28, x7, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x28, 208)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x29)
li x16, 0x160c4856d5809279 # initialize rs1
li x29, 0xc50ffd3d1378050c # initialize rs2
andn x29, x16, x29 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 216)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x30)
li x28, 0x9ed69e46268f8e6d # initialize rs1
li x30, 0x9890205238bd69db # initialize rs2
andn x30, x28, x30 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 224)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x31)
li x21, 0xee06b2802f1803c2 # initialize rs1
li x31, 0x7122ddd2e9426b37 # initialize rs2
andn x31, x21, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 232)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x0)
li x0, 0x48c3f701b5a5eeb5 # initialize rs1
li x0, 0x5e0eec702450bdb0 # initialize rs2
andn x0, x0, x0 # perform operation
RVTEST_SIGUPD(x4, x0, x0, 240)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x1)
li x1, 0x4b5d9f3533de5ce7 # initialize rs1
li x1, 0xae4142eb19b07dea # initialize rs2
andn x1, x1, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 248)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x2)
li x2, 0x1d85cce7f60ad694 # initialize rs1
li x2, 0xb9fdc53fd85aaa87 # initialize rs2
andn x2, x2, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 256)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x3)
li x3, 0x4c4d4d1e4250acfe # initialize rs1
li x3, 0x89085c4453912c43 # initialize rs2
andn x3, x3, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 264)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x4)
mv x5, x4 # switch signature pointer register to avoid conflict with test
li x4, 0xe81d596d4173db50 # initialize rs1
li x4, 0x9f9537c9f77a9133 # initialize rs2
andn x4, x4, x4 # perform operation
RVTEST_SIGUPD(x5, x0, x4, 272)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x5)
mv x6, x5 # switch signature pointer register to avoid conflict with test
li x5, 0x5255fa3d4e523383 # initialize rs1
li x5, 0x2663a81c5fb6c747 # initialize rs2
andn x5, x5, x5 # perform operation
RVTEST_SIGUPD(x6, x0, x5, 280)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x6)
mv x7, x6 # switch signature pointer register to avoid conflict with test
li x6, 0x9cff643e0468067a # initialize rs1
li x6, 0x1ff9dd84c00a819e # initialize rs2
andn x6, x6, x6 # perform operation
RVTEST_SIGUPD(x7, x0, x6, 288)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x7)
mv x4, x7 # switch signature pointer register to avoid conflict with test
li x7, 0x56bd9bf6cdbca640 # initialize rs1
li x7, 0x0461c221f67c840c # initialize rs2
andn x7, x7, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 296)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x8)
li x8, 0xd3798f97e32a32b9 # initialize rs1
li x8, 0xa632faadbd0caa07 # initialize rs2
andn x8, x8, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 304)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x9)
li x9, 0xf91df037fafd0bf0 # initialize rs1
li x9, 0x8c742f33a64f6290 # initialize rs2
andn x9, x9, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 312)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x10)
li x10, 0x5aa20816780466aa # initialize rs1
li x10, 0xe30894f83db3534e # initialize rs2
andn x10, x10, x10 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 320)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x11)
li x11, 0xd85ae56ab1855875 # initialize rs1
li x11, 0x52fb898f67512066 # initialize rs2
andn x11, x11, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 328)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x12)
li x12, 0xbd0c4e7f2b33f3d8 # initialize rs1
li x12, 0xe604c96877157690 # initialize rs2
andn x12, x12, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 336)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x13)
li x13, 0xa6bffa2f75019a73 # initialize rs1
li x13, 0xeaf3307b9b708b37 # initialize rs2
andn x13, x13, x13 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 344)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x14)
li x14, 0xd83293463f0c4d8f # initialize rs1
li x14, 0x8818a83e077abc5a # initialize rs2
andn x14, x14, x14 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 352)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x15)
li x15, 0x63c3aa96422d7abb # initialize rs1
li x15, 0xb49ccedaf0f142e6 # initialize rs2
andn x15, x15, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 360)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x16)
li x16, 0x0107b2a8a97e7c6c # initialize rs1
li x16, 0xd43ff1da136f7e24 # initialize rs2
andn x16, x16, x16 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 368)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x17)
li x17, 0xc5d3acaf3fa52e88 # initialize rs1
li x17, 0x77c4d307f5406ae6 # initialize rs2
andn x17, x17, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 376)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x18)
li x18, 0x19ea32626dc5db23 # initialize rs1
li x18, 0x93f155dfa87cb66d # initialize rs2
andn x18, x18, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 384)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x19)
li x19, 0xae30cce0693ea5ab # initialize rs1
li x19, 0xa5aba7d811485699 # initialize rs2
andn x19, x19, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 392)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x20)
li x20, 0x113909d8d2b97664 # initialize rs1
li x20, 0x9e18e3bb7b0bf3ef # initialize rs2
andn x20, x20, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 400)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x21)
li x21, 0x2665cf5d84a8a7f9 # initialize rs1
li x21, 0x1937e2018a5da3dd # initialize rs2
andn x21, x21, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 408)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x22)
li x22, 0xae802ecca6c0141b # initialize rs1
li x22, 0x45725c9cd1426fbc # initialize rs2
andn x22, x22, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 416)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x23)
li x23, 0x806002fe3a04be21 # initialize rs1
li x23, 0xc796058f50b1fd13 # initialize rs2
andn x23, x23, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 424)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x24)
li x24, 0xa701509d320d1dd0 # initialize rs1
li x24, 0x1d1917ee1021437c # initialize rs2
andn x24, x24, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 432)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x25)
li x25, 0x1a36ef42d8bef6de # initialize rs1
li x25, 0x8a12b028e7196905 # initialize rs2
andn x25, x25, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 440)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x26)
li x26, 0x333df859558a8889 # initialize rs1
li x26, 0x3afb85b0dff2d09b # initialize rs2
andn x26, x26, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 448)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x27)
li x27, 0xd3fb1b74172c9eed # initialize rs1
li x27, 0x00528e239b02cf02 # initialize rs2
andn x27, x27, x27 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 456)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x28)
li x28, 0xed6eda32ac7c583e # initialize rs1
li x28, 0x51478f198ef1502e # initialize rs2
andn x28, x28, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x28, 464)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x29)
li x29, 0xe326d720e502ec8e # initialize rs1
li x29, 0xa4ab9a5a941b4e75 # initialize rs2
andn x29, x29, x29 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 472)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x30)
li x30, 0x9c53fbbc1c954212 # initialize rs1
li x30, 0xf0676026200094c0 # initialize rs2
andn x30, x30, x30 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 480)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x31)
li x31, 0xf1e5710b798d3cb4 # initialize rs1
li x31, 0x2beaef2476328fe9 # initialize rs2
andn x31, x31, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 488)

# Testcase cp_gpr/fpr_hazard nohaz test
add x16, x5, x31 # perform first operation
andn x7, x3, x20 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard nohaz test
add x9, x11, x30 # perform first operation
andn x14, x5, x26 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard nohaz test
add x9, x10, x25 # perform first operation
andn x16, x13, x31 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard raw test
add x1, x14, x5 # perform first operation
andn x14, x1, x13 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard raw test
add x2, x29, x17 # perform first operation
andn x17, x12, x2 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard raw test
add x7, x10, x18 # perform first operation
andn x18, x21, x28 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard waw test
add x22, x12, x28 # perform first operation
andn x22, x24, x20 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard waw test
add x14, x2, x30 # perform first operation
andn x14, x13, x25 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard waw test
add x12, x5, x26 # perform first operation
andn x12, x3, x1 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard war test
add x12, x14, x2 # perform first operation
andn x14, x11, x26 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard war test
add x17, x6, x1 # perform first operation
andn x1, x25, x14 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard war test
add x7, x12, x15 # perform first operation
andn x26, x25, x9 # perform second (triggering) operation

#.EQU SIGSIZE,4096


// ******************
// Tests from: WALLY-COV-orn.S
// ******************


# initialize signature pointer
la x4, begin_signature

    
# Testcase cp_rs1 (Test source rs1 = x0)
li x0, 0x4b553a0e60e9eb24 # initialize rs1
li x15, 0x4a5a453c5940ea44 # initialize rs2
orn x1, x0, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 0)

# Testcase cp_rs1 (Test source rs1 = x1)
li x1, 0x708cc69dac64f405 # initialize rs1
li x15, 0xf68544034612269a # initialize rs2
orn x25, x1, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 8)

# Testcase cp_rs1 (Test source rs1 = x2)
li x2, 0x8f892144a26e0ac0 # initialize rs1
li x25, 0x53ad0d69a4f5b85b # initialize rs2
orn x1, x2, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 16)

# Testcase cp_rs1 (Test source rs1 = x3)
li x3, 0x2d779896a4da99c1 # initialize rs1
li x16, 0x81877e5aa6c264f2 # initialize rs2
orn x27, x3, x16 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 24)

# Testcase cp_rs1 (Test source rs1 = x4)
mv x5, x4 # switch signature pointer register to avoid conflict with test
li x4, 0x990393dee4cca341 # initialize rs1
li x9, 0x996fcaa8cdfa8c51 # initialize rs2
orn x25, x4, x9 # perform operation
RVTEST_SIGUPD(x5, x0, x25, 32)

# Testcase cp_rs1 (Test source rs1 = x5)
mv x6, x5 # switch signature pointer register to avoid conflict with test
li x5, 0x3486a40c25b27d69 # initialize rs1
li x9, 0x18691d437eee6538 # initialize rs2
orn x8, x5, x9 # perform operation
RVTEST_SIGUPD(x6, x0, x8, 40)

# Testcase cp_rs1 (Test source rs1 = x6)
mv x4, x6 # switch signature pointer register to avoid conflict with test
li x6, 0xa64b1c8462ea9f95 # initialize rs1
li x7, 0xfefcf47d1c016939 # initialize rs2
orn x29, x6, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 48)

# Testcase cp_rs1 (Test source rs1 = x7)
li x7, 0xb5e5636a25d33ca7 # initialize rs1
li x22, 0xda1f6277d88a0044 # initialize rs2
orn x24, x7, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 56)

# Testcase cp_rs1 (Test source rs1 = x8)
li x8, 0x28c5d27cb6d3af74 # initialize rs1
li x6, 0x450ea0e063ca44e4 # initialize rs2
orn x21, x8, x6 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 64)

# Testcase cp_rs1 (Test source rs1 = x9)
li x9, 0x04b66c7dfe360c60 # initialize rs1
li x16, 0x1730752aa960b4b5 # initialize rs2
orn x2, x9, x16 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 72)

# Testcase cp_rs1 (Test source rs1 = x10)
li x10, 0xcf5c5b2c78bbf8d4 # initialize rs1
li x27, 0xfe0e38522f7f8897 # initialize rs2
orn x6, x10, x27 # perform operation
RVTEST_SIGUPD(x4, x0, x6, 80)

# Testcase cp_rs1 (Test source rs1 = x11)
li x11, 0x10c4d450ac4164ba # initialize rs1
li x27, 0x894b59f7c1f2cba4 # initialize rs2
orn x16, x11, x27 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 88)

# Testcase cp_rs1 (Test source rs1 = x12)
li x12, 0xd895456304e40734 # initialize rs1
li x29, 0x65c755a7acb630b0 # initialize rs2
orn x5, x12, x29 # perform operation
RVTEST_SIGUPD(x4, x0, x5, 96)

# Testcase cp_rs1 (Test source rs1 = x13)
li x13, 0xb98d857b576df6b1 # initialize rs1
li x25, 0xf4ec2885b66a310d # initialize rs2
orn x31, x13, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 104)

# Testcase cp_rs1 (Test source rs1 = x14)
li x14, 0x0243771d86c2dcdb # initialize rs1
li x5, 0x14cdfa4bba1ade56 # initialize rs2
orn x16, x14, x5 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 112)

# Testcase cp_rs1 (Test source rs1 = x15)
li x15, 0xd58b5f0ee179033b # initialize rs1
li x3, 0x6bb4e5cb7af0c7f1 # initialize rs2
orn x11, x15, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 120)

# Testcase cp_rs1 (Test source rs1 = x16)
li x16, 0x262da683571a0d08 # initialize rs1
li x20, 0x7c17cc6ff9c27a6a # initialize rs2
orn x11, x16, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 128)

# Testcase cp_rs1 (Test source rs1 = x17)
li x17, 0xc04ccf967035970d # initialize rs1
li x20, 0x97653bf32bd8f906 # initialize rs2
orn x30, x17, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 136)

# Testcase cp_rs1 (Test source rs1 = x18)
li x18, 0xe4586fcb4d8d8c1d # initialize rs1
li x5, 0xede1f5f687bca8eb # initialize rs2
orn x2, x18, x5 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 144)

# Testcase cp_rs1 (Test source rs1 = x19)
li x19, 0x9bfff6480a3045f3 # initialize rs1
li x15, 0xa40f189bc61a0263 # initialize rs2
orn x6, x19, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x6, 152)

# Testcase cp_rs1 (Test source rs1 = x20)
li x20, 0xa1a0c9c411bb548f # initialize rs1
li x24, 0x05604bdaa6c1b9d5 # initialize rs2
orn x19, x20, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 160)

# Testcase cp_rs1 (Test source rs1 = x21)
li x21, 0x564d165fb597c333 # initialize rs1
li x24, 0x179e32ed75c7de6b # initialize rs2
orn x13, x21, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 168)

# Testcase cp_rs1 (Test source rs1 = x22)
li x22, 0x6161ba2fc04b8efb # initialize rs1
li x27, 0x299dcf535bb859eb # initialize rs2
orn x25, x22, x27 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 176)

# Testcase cp_rs1 (Test source rs1 = x23)
li x23, 0xe799f71a5be75232 # initialize rs1
li x2, 0x75b809410b9a3709 # initialize rs2
orn x8, x23, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 184)

# Testcase cp_rs1 (Test source rs1 = x24)
li x24, 0x92022e92481e0760 # initialize rs1
li x1, 0x81ee184795a2755b # initialize rs2
orn x8, x24, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 192)

# Testcase cp_rs1 (Test source rs1 = x25)
li x25, 0xf0ce8e6b0fd9a9ba # initialize rs1
li x18, 0x218dd7d8b0a0f3da # initialize rs2
orn x5, x25, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x5, 200)

# Testcase cp_rs1 (Test source rs1 = x26)
li x26, 0x56bbb3325cab60cb # initialize rs1
li x3, 0x7c6e3de4d324bb63 # initialize rs2
orn x10, x26, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 208)

# Testcase cp_rs1 (Test source rs1 = x27)
li x27, 0xeb7374b6ee36b58a # initialize rs1
li x10, 0x7792f5b5d92bfd1e # initialize rs2
orn x3, x27, x10 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 216)

# Testcase cp_rs1 (Test source rs1 = x28)
li x28, 0x7d37c1263aa9fe87 # initialize rs1
li x12, 0x4909aa1ebd4bab6b # initialize rs2
orn x22, x28, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 224)

# Testcase cp_rs1 (Test source rs1 = x29)
li x29, 0x9f77b579d911f3c9 # initialize rs1
li x23, 0x006fc671d3929a31 # initialize rs2
orn x12, x29, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 232)

# Testcase cp_rs1 (Test source rs1 = x30)
li x30, 0xcd9e2dc362d34025 # initialize rs1
li x7, 0xeccb7f4f0e507745 # initialize rs2
orn x31, x30, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 240)

# Testcase cp_rs1 (Test source rs1 = x31)
li x31, 0x293afb8e0e62c4f9 # initialize rs1
li x1, 0xa6a4027b3013a7b2 # initialize rs2
orn x22, x31, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 248)

# Testcase cp_rs2 (Test source rs2 = x0)
li x20, 0xe08c4a16b9acf7a1 # initialize rs1
li x0, 0xb5de5839b9d889ec # initialize rs2
orn x11, x20, x0 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 256)

# Testcase cp_rs2 (Test source rs2 = x1)
li x30, 0xfbebb82b01e10aed # initialize rs1
li x1, 0x2658fac69779e938 # initialize rs2
orn x5, x30, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x5, 264)

# Testcase cp_rs2 (Test source rs2 = x2)
li x19, 0x98ab8c4f744de612 # initialize rs1
li x2, 0xe3de2d9c1248fa42 # initialize rs2
orn x13, x19, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 272)

# Testcase cp_rs2 (Test source rs2 = x3)
li x14, 0x11dcbfb54e07c282 # initialize rs1
li x3, 0xac8c57152caf4920 # initialize rs2
orn x7, x14, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 280)

# Testcase cp_rs2 (Test source rs2 = x4)
mv x5, x4 # switch signature pointer register to avoid conflict with test
li x1, 0x3aa38a00ce66c311 # initialize rs1
li x4, 0x0b1f6d3f6fef5201 # initialize rs2
orn x15, x1, x4 # perform operation
RVTEST_SIGUPD(x5, x0, x15, 288)

# Testcase cp_rs2 (Test source rs2 = x5)
mv x6, x5 # switch signature pointer register to avoid conflict with test
li x11, 0x9351e0fffedc4a1b # initialize rs1
li x5, 0xf8f197461e5e0c7b # initialize rs2
orn x31, x11, x5 # perform operation
RVTEST_SIGUPD(x6, x0, x31, 296)

# Testcase cp_rs2 (Test source rs2 = x6)
mv x7, x6 # switch signature pointer register to avoid conflict with test
li x29, 0xd73a8d871c5734d3 # initialize rs1
li x6, 0xdadc3d97ff0a66e2 # initialize rs2
orn x3, x29, x6 # perform operation
RVTEST_SIGUPD(x7, x0, x3, 304)

# Testcase cp_rs2 (Test source rs2 = x7)
mv x5, x7 # switch signature pointer register to avoid conflict with test
li x6, 0x326b1f759757ca59 # initialize rs1
li x7, 0xdbeb92c6dcf48f21 # initialize rs2
orn x4, x6, x7 # perform operation
RVTEST_SIGUPD(x5, x0, x4, 312)

# Testcase cp_rs2 (Test source rs2 = x8)
li x24, 0x400082d0ba882323 # initialize rs1
li x8, 0x5384986029547214 # initialize rs2
orn x15, x24, x8 # perform operation
RVTEST_SIGUPD(x5, x0, x15, 320)

# Testcase cp_rs2 (Test source rs2 = x9)
li x30, 0x1bc95154d2cf6d59 # initialize rs1
li x9, 0x05ebbebbdb01ebe6 # initialize rs2
orn x10, x30, x9 # perform operation
RVTEST_SIGUPD(x5, x0, x10, 328)

# Testcase cp_rs2 (Test source rs2 = x10)
li x22, 0xd16ec2bfe2304872 # initialize rs1
li x10, 0x7b0e4ccf51b2ba17 # initialize rs2
orn x25, x22, x10 # perform operation
RVTEST_SIGUPD(x5, x0, x25, 336)

# Testcase cp_rs2 (Test source rs2 = x11)
li x7, 0xee9c67e751b874be # initialize rs1
li x11, 0xc23ac0d4716a9704 # initialize rs2
orn x24, x7, x11 # perform operation
RVTEST_SIGUPD(x5, x0, x24, 344)

# Testcase cp_rs2 (Test source rs2 = x12)
li x25, 0x75a401a35b35ce40 # initialize rs1
li x12, 0xc801e693d2c58157 # initialize rs2
orn x29, x25, x12 # perform operation
RVTEST_SIGUPD(x5, x0, x29, 352)

# Testcase cp_rs2 (Test source rs2 = x13)
li x25, 0x3831b0520c2abf7e # initialize rs1
li x13, 0x4add3c5feca853f2 # initialize rs2
orn x1, x25, x13 # perform operation
RVTEST_SIGUPD(x5, x0, x1, 360)

# Testcase cp_rs2 (Test source rs2 = x14)
li x28, 0xa2c29b13fae69a0a # initialize rs1
li x14, 0x4b228ace9eba8884 # initialize rs2
orn x9, x28, x14 # perform operation
RVTEST_SIGUPD(x5, x0, x9, 368)

# Testcase cp_rs2 (Test source rs2 = x15)
li x12, 0xb130f14af622b730 # initialize rs1
li x15, 0x9bcfa1636f3e1a49 # initialize rs2
orn x14, x12, x15 # perform operation
RVTEST_SIGUPD(x5, x0, x14, 376)

# Testcase cp_rs2 (Test source rs2 = x16)
li x6, 0xcecd5a6f3033337a # initialize rs1
li x16, 0xfe36c5263d5ce9c6 # initialize rs2
orn x30, x6, x16 # perform operation
RVTEST_SIGUPD(x5, x0, x30, 384)

# Testcase cp_rs2 (Test source rs2 = x17)
li x30, 0x277d4e6ab38536a6 # initialize rs1
li x17, 0xf0f90b5d0d6bbde9 # initialize rs2
orn x15, x30, x17 # perform operation
RVTEST_SIGUPD(x5, x0, x15, 392)

# Testcase cp_rs2 (Test source rs2 = x18)
li x6, 0xc6c8fa175a55f6c5 # initialize rs1
li x18, 0xfffae18ed92adf0f # initialize rs2
orn x3, x6, x18 # perform operation
RVTEST_SIGUPD(x5, x0, x3, 400)

# Testcase cp_rs2 (Test source rs2 = x19)
li x20, 0x34e5029fc091cd73 # initialize rs1
li x19, 0x55b4edc2c855d9d4 # initialize rs2
orn x13, x20, x19 # perform operation
RVTEST_SIGUPD(x5, x0, x13, 408)

# Testcase cp_rs2 (Test source rs2 = x20)
li x17, 0x4ef288770512af09 # initialize rs1
li x20, 0x7fcc73ba2594d0e7 # initialize rs2
orn x18, x17, x20 # perform operation
RVTEST_SIGUPD(x5, x0, x18, 416)

# Testcase cp_rs2 (Test source rs2 = x21)
li x18, 0x7e7181591c25db71 # initialize rs1
li x21, 0xfce4aeb5bcacafb1 # initialize rs2
orn x6, x18, x21 # perform operation
RVTEST_SIGUPD(x5, x0, x6, 424)

# Testcase cp_rs2 (Test source rs2 = x22)
li x9, 0x1113db6612c7644f # initialize rs1
li x22, 0x772e4a8f3de8f2c1 # initialize rs2
orn x18, x9, x22 # perform operation
RVTEST_SIGUPD(x5, x0, x18, 432)

# Testcase cp_rs2 (Test source rs2 = x23)
li x17, 0x0f5c5b0cdb7e0954 # initialize rs1
li x23, 0x310cf06a48267dcc # initialize rs2
orn x25, x17, x23 # perform operation
RVTEST_SIGUPD(x5, x0, x25, 440)

# Testcase cp_rs2 (Test source rs2 = x24)
li x15, 0x3e529610db3b17d0 # initialize rs1
li x24, 0x28a6bd53a9d95697 # initialize rs2
orn x22, x15, x24 # perform operation
RVTEST_SIGUPD(x5, x0, x22, 448)

# Testcase cp_rs2 (Test source rs2 = x25)
li x21, 0x023e3da4973dc2bd # initialize rs1
li x25, 0xdbb50ea8e06f3af2 # initialize rs2
orn x17, x21, x25 # perform operation
RVTEST_SIGUPD(x5, x0, x17, 456)

# Testcase cp_rs2 (Test source rs2 = x26)
li x10, 0x729f4cda0cc03ca5 # initialize rs1
li x26, 0xe6872b60d9eabe93 # initialize rs2
orn x29, x10, x26 # perform operation
RVTEST_SIGUPD(x5, x0, x29, 464)

# Testcase cp_rs2 (Test source rs2 = x27)
li x2, 0x085531a9a2833f14 # initialize rs1
li x27, 0x29fd70f710e6ee87 # initialize rs2
orn x14, x2, x27 # perform operation
RVTEST_SIGUPD(x5, x0, x14, 472)

# Testcase cp_rs2 (Test source rs2 = x28)
li x7, 0x3ccbdf372389363d # initialize rs1
li x28, 0x412795818779296e # initialize rs2
orn x14, x7, x28 # perform operation
RVTEST_SIGUPD(x5, x0, x14, 480)

# Testcase cp_rs2 (Test source rs2 = x29)
li x11, 0xa6d18ab36140761c # initialize rs1
li x29, 0x6b458275413ee837 # initialize rs2
orn x7, x11, x29 # perform operation
RVTEST_SIGUPD(x5, x0, x7, 488)

# Testcase cp_rs2 (Test source rs2 = x30)
li x29, 0xa157895b43d0c01e # initialize rs1
li x30, 0x4f7b60454eecf381 # initialize rs2
orn x7, x29, x30 # perform operation
RVTEST_SIGUPD(x5, x0, x7, 496)

# Testcase cp_rs2 (Test source rs2 = x31)
li x9, 0x9d2ec6efe20eaee0 # initialize rs1
li x31, 0x4d1d9ef81a33cad0 # initialize rs2
orn x12, x9, x31 # perform operation
RVTEST_SIGUPD(x5, x0, x12, 504)

# Testcase cp_rd (Test destination rd = x0)
li x6, 0x5bbdae9a1d9b5538 # initialize rs1
li x24, 0x41c8f7dbb8a10e22 # initialize rs2
orn x0, x6, x24 # perform operation
RVTEST_SIGUPD(x5, x0, x0, 512)

# Testcase cp_rd (Test destination rd = x1)
li x15, 0xe093cad17b09d424 # initialize rs1
li x1, 0x842309d004b8cd74 # initialize rs2
orn x1, x15, x1 # perform operation
RVTEST_SIGUPD(x5, x0, x1, 520)

# Testcase cp_rd (Test destination rd = x2)
li x21, 0xe1d1a18c1ab5bdb5 # initialize rs1
li x16, 0x3e38512a1da8082c # initialize rs2
orn x2, x21, x16 # perform operation
RVTEST_SIGUPD(x5, x0, x2, 528)

# Testcase cp_rd (Test destination rd = x3)
li x3, 0x3f6c7537de01a673 # initialize rs1
li x15, 0x14febcd8df21574d # initialize rs2
orn x3, x3, x15 # perform operation
RVTEST_SIGUPD(x5, x0, x3, 536)

# Testcase cp_rd (Test destination rd = x4)
li x14, 0xdb860515580c778b # initialize rs1
li x27, 0x6c45be7ccb5cfef4 # initialize rs2
orn x4, x14, x27 # perform operation
RVTEST_SIGUPD(x5, x0, x4, 544)

# Testcase cp_rd (Test destination rd = x5)
mv x6, x5 # switch signature pointer register to avoid conflict with test
li x2, 0x0940323a0c23f9ca # initialize rs1
li x26, 0x745da229bf382ecf # initialize rs2
orn x5, x2, x26 # perform operation
RVTEST_SIGUPD(x6, x0, x5, 552)

# Testcase cp_rd (Test destination rd = x6)
mv x7, x6 # switch signature pointer register to avoid conflict with test
li x10, 0x94c9a7c565638d29 # initialize rs1
li x29, 0x42311d5faa5c1329 # initialize rs2
orn x6, x10, x29 # perform operation
RVTEST_SIGUPD(x7, x0, x6, 560)

# Testcase cp_rd (Test destination rd = x7)
mv x4, x7 # switch signature pointer register to avoid conflict with test
li x18, 0xe2cb8beec41f2a8b # initialize rs1
li x27, 0x77d323f04aaa41b6 # initialize rs2
orn x7, x18, x27 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 568)

# Testcase cp_rd (Test destination rd = x8)
li x25, 0x9217be8a8085f2d0 # initialize rs1
li x30, 0x689f8b953aab3d04 # initialize rs2
orn x8, x25, x30 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 576)

# Testcase cp_rd (Test destination rd = x9)
li x9, 0x0da450d350e6e558 # initialize rs1
li x30, 0x617ce6e22e5206cc # initialize rs2
orn x9, x9, x30 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 584)

# Testcase cp_rd (Test destination rd = x10)
li x30, 0xb8626d3efad952b7 # initialize rs1
li x25, 0x3f9fff1d9b67134c # initialize rs2
orn x10, x30, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 592)

# Testcase cp_rd (Test destination rd = x11)
li x30, 0x4949f1e047a7dfee # initialize rs1
li x8, 0xfa327ce0313c6b7f # initialize rs2
orn x11, x30, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 600)

# Testcase cp_rd (Test destination rd = x12)
li x25, 0xda447e391bca64cf # initialize rs1
li x6, 0x837c034c024d7282 # initialize rs2
orn x12, x25, x6 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 608)

# Testcase cp_rd (Test destination rd = x13)
li x24, 0x44f34fe5700d65fd # initialize rs1
li x27, 0x7d83f0023a24f983 # initialize rs2
orn x13, x24, x27 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 616)

# Testcase cp_rd (Test destination rd = x14)
li x8, 0x171698e62b4c9678 # initialize rs1
li x31, 0x53ab5dd8155cfd10 # initialize rs2
orn x14, x8, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 624)

# Testcase cp_rd (Test destination rd = x15)
li x24, 0x32a81a0c967ace3c # initialize rs1
li x15, 0xf93f0ed9a7d7890a # initialize rs2
orn x15, x24, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 632)

# Testcase cp_rd (Test destination rd = x16)
li x18, 0xc2232f9298048225 # initialize rs1
li x26, 0x4134b6f6fe067f95 # initialize rs2
orn x16, x18, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 640)

# Testcase cp_rd (Test destination rd = x17)
li x2, 0x29f17d5bc39acf75 # initialize rs1
li x7, 0x72dd3274ff10b5ec # initialize rs2
orn x17, x2, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 648)

# Testcase cp_rd (Test destination rd = x18)
li x13, 0x8309970a9b0b0469 # initialize rs1
li x10, 0x6411b3e0ee96cea6 # initialize rs2
orn x18, x13, x10 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 656)

# Testcase cp_rd (Test destination rd = x19)
li x19, 0xdec544a1230d9241 # initialize rs1
li x17, 0x8c9c54dc5a501df9 # initialize rs2
orn x19, x19, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 664)

# Testcase cp_rd (Test destination rd = x20)
li x30, 0xb0d2f739db7d084b # initialize rs1
li x1, 0xdfa1abb10042313c # initialize rs2
orn x20, x30, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 672)

# Testcase cp_rd (Test destination rd = x21)
li x3, 0xde862b5d2dd5ce6f # initialize rs1
li x9, 0xda16018108a48857 # initialize rs2
orn x21, x3, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 680)

# Testcase cp_rd (Test destination rd = x22)
li x30, 0x6ae6db2b3fcba014 # initialize rs1
li x10, 0xea8c7144b93e8c03 # initialize rs2
orn x22, x30, x10 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 688)

# Testcase cp_rd (Test destination rd = x23)
li x19, 0x389cc2d6751d1d37 # initialize rs1
li x5, 0x0b8f497083c77af8 # initialize rs2
orn x23, x19, x5 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 696)

# Testcase cp_rd (Test destination rd = x24)
li x13, 0xcd94cb60870b923f # initialize rs1
li x5, 0x03eef8843ad76ff2 # initialize rs2
orn x24, x13, x5 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 704)

# Testcase cp_rd (Test destination rd = x25)
li x14, 0x7b5eee680615e4e7 # initialize rs1
li x9, 0x2489f7bca3962503 # initialize rs2
orn x25, x14, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 712)

# Testcase cp_rd (Test destination rd = x26)
li x20, 0x6b3fa7b344517bee # initialize rs1
li x17, 0x21beeb7c6dc869fc # initialize rs2
orn x26, x20, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 720)

# Testcase cp_rd (Test destination rd = x27)
li x15, 0x9664ecd7b4707aab # initialize rs1
li x18, 0xb9a32e2a9de4305b # initialize rs2
orn x27, x15, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 728)

# Testcase cp_rd (Test destination rd = x28)
li x10, 0x375b1585e31c8808 # initialize rs1
li x13, 0x220ab1d488f935e6 # initialize rs2
orn x28, x10, x13 # perform operation
RVTEST_SIGUPD(x4, x0, x28, 736)

# Testcase cp_rd (Test destination rd = x29)
li x27, 0x8ad24dd70565da84 # initialize rs1
li x2, 0x7a9724f783f4db8a # initialize rs2
orn x29, x27, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 744)

# Testcase cp_rd (Test destination rd = x30)
li x20, 0x1d9a4ff795a0627a # initialize rs1
li x27, 0xdee687379d726c95 # initialize rs2
orn x30, x20, x27 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 752)

# Testcase cp_rd (Test destination rd = x31)
li x28, 0x6aaebcdc7b4032bc # initialize rs1
li x15, 0xb6cd3913bc30c00a # initialize rs2
orn x31, x28, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 760)

# Testcase cp_rs1_corners (Test source rs1 value = 0x0)
li x18, 0x0000000000000000 # initialize rs1
li x7, 0x44886199e94e5f48 # initialize rs2
orn x6, x18, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x6, 768)

# Testcase cp_rs1_corners (Test source rs1 value = 0x1)
li x19, 0x0000000000000001 # initialize rs1
li x23, 0x2dda84226706ac5b # initialize rs2
orn x13, x19, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 776)

# Testcase cp_rs1_corners (Test source rs1 value = 0x2)
li x22, 0x0000000000000002 # initialize rs1
li x15, 0xf4d357f397f4365e # initialize rs2
orn x24, x22, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 784)

# Testcase cp_rs1_corners (Test source rs1 value = 0x8000000000000000)
li x24, 0x8000000000000000 # initialize rs1
li x29, 0xb06ab5da3e32e21d # initialize rs2
orn x31, x24, x29 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 792)

# Testcase cp_rs1_corners (Test source rs1 value = 0x8000000000000001)
li x8, 0x8000000000000001 # initialize rs1
li x16, 0xc75cc18189ce5aa1 # initialize rs2
orn x13, x8, x16 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 800)

# Testcase cp_rs1_corners (Test source rs1 value = 0x7fffffffffffffff)
li x18, 0x7fffffffffffffff # initialize rs1
li x23, 0xe56913d82524aaa9 # initialize rs2
orn x2, x18, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 808)

# Testcase cp_rs1_corners (Test source rs1 value = 0x7ffffffffffffffe)
li x20, 0x7ffffffffffffffe # initialize rs1
li x12, 0xc0d02a6894f85a75 # initialize rs2
orn x8, x20, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 816)

# Testcase cp_rs1_corners (Test source rs1 value = 0xffffffffffffffff)
li x23, 0xffffffffffffffff # initialize rs1
li x3, 0xfaef7c5f2ab02e90 # initialize rs2
orn x26, x23, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 824)

# Testcase cp_rs1_corners (Test source rs1 value = 0xfffffffffffffffe)
li x18, 0xfffffffffffffffe # initialize rs1
li x25, 0x14a30b452ca86e5e # initialize rs2
orn x26, x18, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 832)

# Testcase cp_rs1_corners (Test source rs1 value = 0x5bbc887763ae86f2)
li x2, 0x5bbc887763ae86f2 # initialize rs1
li x23, 0xf376bda82a2b5c98 # initialize rs2
orn x16, x2, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 840)

# Testcase cp_rs1_corners (Test source rs1 value = 0xaaaaaaaaaaaaaaaa)
li x16, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x30, 0x6585b04ddb872d56 # initialize rs2
orn x1, x16, x30 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 848)

# Testcase cp_rs1_corners (Test source rs1 value = 0x5555555555555555)
li x1, 0x5555555555555555 # initialize rs1
li x13, 0x43f4c1f2fa64b713 # initialize rs2
orn x7, x1, x13 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 856)

# Testcase cp_rs1_corners (Test source rs1 value = 0xffffffff)
li x7, 0x00000000ffffffff # initialize rs1
li x16, 0x69ecafa860412a56 # initialize rs2
orn x20, x7, x16 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 864)

# Testcase cp_rs1_corners (Test source rs1 value = 0xfffffffe)
li x31, 0x00000000fffffffe # initialize rs1
li x27, 0x7cfe5c6826256b3d # initialize rs2
orn x21, x31, x27 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 872)

# Testcase cp_rs1_corners (Test source rs1 value = 0x100000000)
li x8, 0x0000000100000000 # initialize rs1
li x24, 0x6c24d2974db7f769 # initialize rs2
orn x26, x8, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 880)

# Testcase cp_rs1_corners (Test source rs1 value = 0x100000001)
li x9, 0x0000000100000001 # initialize rs1
li x18, 0x64f90da496c67c81 # initialize rs2
orn x30, x9, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 888)

# Testcase cp_rs2_corners (Test source rs2 value = 0x0)
li x1, 0x39db1ea322960db0 # initialize rs1
li x3, 0x0000000000000000 # initialize rs2
orn x16, x1, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 896)

# Testcase cp_rs2_corners (Test source rs2 value = 0x1)
li x31, 0xc68dab4df62c847d # initialize rs1
li x19, 0x0000000000000001 # initialize rs2
orn x16, x31, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 904)

# Testcase cp_rs2_corners (Test source rs2 value = 0x2)
li x1, 0xa42c4dafab6b3adf # initialize rs1
li x2, 0x0000000000000002 # initialize rs2
orn x14, x1, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 912)

# Testcase cp_rs2_corners (Test source rs2 value = 0x8000000000000000)
li x19, 0xc7379302681907ec # initialize rs1
li x20, 0x8000000000000000 # initialize rs2
orn x31, x19, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 920)

# Testcase cp_rs2_corners (Test source rs2 value = 0x8000000000000001)
li x9, 0x977ee08f704c0532 # initialize rs1
li x26, 0x8000000000000001 # initialize rs2
orn x22, x9, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 928)

# Testcase cp_rs2_corners (Test source rs2 value = 0x7fffffffffffffff)
li x15, 0x46b1607f92ef8b9e # initialize rs1
li x13, 0x7fffffffffffffff # initialize rs2
orn x2, x15, x13 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 936)

# Testcase cp_rs2_corners (Test source rs2 value = 0x7ffffffffffffffe)
li x22, 0xfc92a1098512f19a # initialize rs1
li x2, 0x7ffffffffffffffe # initialize rs2
orn x12, x22, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 944)

# Testcase cp_rs2_corners (Test source rs2 value = 0xffffffffffffffff)
li x12, 0xa3485f514fdf450a # initialize rs1
li x8, 0xffffffffffffffff # initialize rs2
orn x7, x12, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 952)

# Testcase cp_rs2_corners (Test source rs2 value = 0xfffffffffffffffe)
li x31, 0xb22e988ae28b95c1 # initialize rs1
li x15, 0xfffffffffffffffe # initialize rs2
orn x27, x31, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 960)

# Testcase cp_rs2_corners (Test source rs2 value = 0x5bbc887763ae86f2)
li x2, 0x038c98821c3979e8 # initialize rs1
li x13, 0x5bbc887763ae86f2 # initialize rs2
orn x11, x2, x13 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 968)

# Testcase cp_rs2_corners (Test source rs2 value = 0xaaaaaaaaaaaaaaaa)
li x1, 0x08506fe2e6936746 # initialize rs1
li x8, 0xaaaaaaaaaaaaaaaa # initialize rs2
orn x29, x1, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 976)

# Testcase cp_rs2_corners (Test source rs2 value = 0x5555555555555555)
li x29, 0x670814ce9add2bfd # initialize rs1
li x6, 0x5555555555555555 # initialize rs2
orn x23, x29, x6 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 984)

# Testcase cp_rs2_corners (Test source rs2 value = 0xffffffff)
li x18, 0xb3e78f4db75d46e8 # initialize rs1
li x5, 0x00000000ffffffff # initialize rs2
orn x22, x18, x5 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 992)

# Testcase cp_rs2_corners (Test source rs2 value = 0xfffffffe)
li x16, 0xfec02f5bdad21218 # initialize rs1
li x5, 0x00000000fffffffe # initialize rs2
orn x19, x16, x5 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 1000)

# Testcase cp_rs2_corners (Test source rs2 value = 0x100000000)
li x25, 0x8b5841ca6a44bff8 # initialize rs1
li x5, 0x0000000100000000 # initialize rs2
orn x21, x25, x5 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 1008)

# Testcase cp_rs2_corners (Test source rs2 value = 0x100000001)
li x14, 0x444db9df9b351aac # initialize rs1
li x5, 0x0000000100000001 # initialize rs2
orn x19, x14, x5 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 1016)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0x0)
li x13, 0x0000000000000000 # initialize rs1
li x27, 0x0000000000000000 # initialize rs2
orn x20, x13, x27 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 1024)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0x1)
li x5, 0x0000000000000000 # initialize rs1
li x8, 0x0000000000000001 # initialize rs2
orn x9, x5, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 1032)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0x2)
li x10, 0x0000000000000000 # initialize rs1
li x14, 0x0000000000000002 # initialize rs2
orn x1, x10, x14 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 1040)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0x8000000000000000)
li x17, 0x0000000000000000 # initialize rs1
li x19, 0x8000000000000000 # initialize rs2
orn x3, x17, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 1048)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0x8000000000000001)
li x3, 0x0000000000000000 # initialize rs1
li x15, 0x8000000000000001 # initialize rs2
orn x27, x3, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 1056)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0x7fffffffffffffff)
li x22, 0x0000000000000000 # initialize rs1
li x25, 0x7fffffffffffffff # initialize rs2
orn x30, x22, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 1064)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0x7ffffffffffffffe)
li x31, 0x0000000000000000 # initialize rs1
li x12, 0x7ffffffffffffffe # initialize rs2
orn x20, x31, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 1072)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0xffffffffffffffff)
li x30, 0x0000000000000000 # initialize rs1
li x24, 0xffffffffffffffff # initialize rs2
orn x27, x30, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 1080)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0xfffffffffffffffe)
li x21, 0x0000000000000000 # initialize rs1
li x25, 0xfffffffffffffffe # initialize rs2
orn x18, x21, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 1088)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0x5bbc887763ae86f2)
li x30, 0x0000000000000000 # initialize rs1
li x10, 0x5bbc887763ae86f2 # initialize rs2
orn x25, x30, x10 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 1096)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0xaaaaaaaaaaaaaaaa)
li x25, 0x0000000000000000 # initialize rs1
li x18, 0xaaaaaaaaaaaaaaaa # initialize rs2
orn x26, x25, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 1104)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0x5555555555555555)
li x11, 0x0000000000000000 # initialize rs1
li x18, 0x5555555555555555 # initialize rs2
orn x31, x11, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 1112)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0xffffffff)
li x14, 0x0000000000000000 # initialize rs1
li x10, 0x00000000ffffffff # initialize rs2
orn x18, x14, x10 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 1120)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0xfffffffe)
li x14, 0x0000000000000000 # initialize rs1
li x21, 0x00000000fffffffe # initialize rs2
orn x28, x14, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x28, 1128)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0x100000000)
li x27, 0x0000000000000000 # initialize rs1
li x9, 0x0000000100000000 # initialize rs2
orn x26, x27, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 1136)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x0 rs2 = 0x100000001)
li x7, 0x0000000000000000 # initialize rs1
li x19, 0x0000000100000001 # initialize rs2
orn x6, x7, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x6, 1144)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0x0)
li x16, 0x0000000000000001 # initialize rs1
li x27, 0x0000000000000000 # initialize rs2
orn x2, x16, x27 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 1152)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0x1)
li x28, 0x0000000000000001 # initialize rs1
li x20, 0x0000000000000001 # initialize rs2
orn x30, x28, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 1160)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0x2)
li x20, 0x0000000000000001 # initialize rs1
li x31, 0x0000000000000002 # initialize rs2
orn x5, x20, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x5, 1168)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0x8000000000000000)
li x28, 0x0000000000000001 # initialize rs1
li x3, 0x8000000000000000 # initialize rs2
orn x13, x28, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 1176)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0x8000000000000001)
li x1, 0x0000000000000001 # initialize rs1
li x20, 0x8000000000000001 # initialize rs2
orn x21, x1, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 1184)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0x7fffffffffffffff)
li x6, 0x0000000000000001 # initialize rs1
li x17, 0x7fffffffffffffff # initialize rs2
orn x30, x6, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 1192)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0x7ffffffffffffffe)
li x17, 0x0000000000000001 # initialize rs1
li x15, 0x7ffffffffffffffe # initialize rs2
orn x25, x17, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 1200)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0xffffffffffffffff)
li x19, 0x0000000000000001 # initialize rs1
li x26, 0xffffffffffffffff # initialize rs2
orn x8, x19, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 1208)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0xfffffffffffffffe)
li x24, 0x0000000000000001 # initialize rs1
li x5, 0xfffffffffffffffe # initialize rs2
orn x11, x24, x5 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 1216)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0x5bbc887763ae86f2)
li x20, 0x0000000000000001 # initialize rs1
li x27, 0x5bbc887763ae86f2 # initialize rs2
orn x21, x20, x27 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 1224)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0xaaaaaaaaaaaaaaaa)
li x31, 0x0000000000000001 # initialize rs1
li x1, 0xaaaaaaaaaaaaaaaa # initialize rs2
orn x9, x31, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 1232)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0x5555555555555555)
li x16, 0x0000000000000001 # initialize rs1
li x28, 0x5555555555555555 # initialize rs2
orn x21, x16, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 1240)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0xffffffff)
li x8, 0x0000000000000001 # initialize rs1
li x1, 0x00000000ffffffff # initialize rs2
orn x30, x8, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 1248)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0xfffffffe)
li x8, 0x0000000000000001 # initialize rs1
li x27, 0x00000000fffffffe # initialize rs2
orn x16, x8, x27 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 1256)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0x100000000)
li x17, 0x0000000000000001 # initialize rs1
li x10, 0x0000000100000000 # initialize rs2
orn x2, x17, x10 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 1264)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x1 rs2 = 0x100000001)
li x28, 0x0000000000000001 # initialize rs1
li x14, 0x0000000100000001 # initialize rs2
orn x29, x28, x14 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 1272)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0x0)
li x18, 0x0000000000000002 # initialize rs1
li x3, 0x0000000000000000 # initialize rs2
orn x8, x18, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 1280)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0x1)
li x7, 0x0000000000000002 # initialize rs1
li x25, 0x0000000000000001 # initialize rs2
orn x11, x7, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 1288)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0x2)
li x5, 0x0000000000000002 # initialize rs1
li x6, 0x0000000000000002 # initialize rs2
orn x16, x5, x6 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 1296)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0x8000000000000000)
li x3, 0x0000000000000002 # initialize rs1
li x20, 0x8000000000000000 # initialize rs2
orn x9, x3, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 1304)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0x8000000000000001)
li x13, 0x0000000000000002 # initialize rs1
li x18, 0x8000000000000001 # initialize rs2
orn x2, x13, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 1312)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0x7fffffffffffffff)
li x1, 0x0000000000000002 # initialize rs1
li x16, 0x7fffffffffffffff # initialize rs2
orn x31, x1, x16 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 1320)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0x7ffffffffffffffe)
li x30, 0x0000000000000002 # initialize rs1
li x26, 0x7ffffffffffffffe # initialize rs2
orn x8, x30, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 1328)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0xffffffffffffffff)
li x24, 0x0000000000000002 # initialize rs1
li x23, 0xffffffffffffffff # initialize rs2
orn x25, x24, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 1336)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0xfffffffffffffffe)
li x16, 0x0000000000000002 # initialize rs1
li x31, 0xfffffffffffffffe # initialize rs2
orn x22, x16, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 1344)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0x5bbc887763ae86f2)
li x5, 0x0000000000000002 # initialize rs1
li x11, 0x5bbc887763ae86f2 # initialize rs2
orn x25, x5, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 1352)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0xaaaaaaaaaaaaaaaa)
li x16, 0x0000000000000002 # initialize rs1
li x31, 0xaaaaaaaaaaaaaaaa # initialize rs2
orn x23, x16, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 1360)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0x5555555555555555)
li x6, 0x0000000000000002 # initialize rs1
li x9, 0x5555555555555555 # initialize rs2
orn x17, x6, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 1368)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0xffffffff)
li x28, 0x0000000000000002 # initialize rs1
li x8, 0x00000000ffffffff # initialize rs2
orn x7, x28, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 1376)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0xfffffffe)
li x18, 0x0000000000000002 # initialize rs1
li x9, 0x00000000fffffffe # initialize rs2
orn x20, x18, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 1384)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0x100000000)
li x19, 0x0000000000000002 # initialize rs1
li x8, 0x0000000100000000 # initialize rs2
orn x21, x19, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 1392)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x2 rs2 = 0x100000001)
li x5, 0x0000000000000002 # initialize rs1
li x14, 0x0000000100000001 # initialize rs2
orn x27, x5, x14 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 1400)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0x0)
li x14, 0x8000000000000000 # initialize rs1
li x13, 0x0000000000000000 # initialize rs2
orn x29, x14, x13 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 1408)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0x1)
li x8, 0x8000000000000000 # initialize rs1
li x21, 0x0000000000000001 # initialize rs2
orn x3, x8, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 1416)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0x2)
li x18, 0x8000000000000000 # initialize rs1
li x1, 0x0000000000000002 # initialize rs2
orn x6, x18, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x6, 1424)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0x8000000000000000)
li x12, 0x8000000000000000 # initialize rs1
li x31, 0x8000000000000000 # initialize rs2
orn x8, x12, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 1432)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0x8000000000000001)
li x24, 0x8000000000000000 # initialize rs1
li x17, 0x8000000000000001 # initialize rs2
orn x15, x24, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 1440)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0x7fffffffffffffff)
li x5, 0x8000000000000000 # initialize rs1
li x24, 0x7fffffffffffffff # initialize rs2
orn x9, x5, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 1448)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0x7ffffffffffffffe)
li x31, 0x8000000000000000 # initialize rs1
li x15, 0x7ffffffffffffffe # initialize rs2
orn x14, x31, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 1456)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0xffffffffffffffff)
li x28, 0x8000000000000000 # initialize rs1
li x5, 0xffffffffffffffff # initialize rs2
orn x10, x28, x5 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 1464)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0xfffffffffffffffe)
li x30, 0x8000000000000000 # initialize rs1
li x16, 0xfffffffffffffffe # initialize rs2
orn x6, x30, x16 # perform operation
RVTEST_SIGUPD(x4, x0, x6, 1472)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0x5bbc887763ae86f2)
li x5, 0x8000000000000000 # initialize rs1
li x10, 0x5bbc887763ae86f2 # initialize rs2
orn x15, x5, x10 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 1480)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0xaaaaaaaaaaaaaaaa)
li x14, 0x8000000000000000 # initialize rs1
li x29, 0xaaaaaaaaaaaaaaaa # initialize rs2
orn x10, x14, x29 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 1488)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0x5555555555555555)
li x10, 0x8000000000000000 # initialize rs1
li x3, 0x5555555555555555 # initialize rs2
orn x2, x10, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 1496)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0xffffffff)
li x1, 0x8000000000000000 # initialize rs1
li x13, 0x00000000ffffffff # initialize rs2
orn x11, x1, x13 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 1504)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0xfffffffe)
li x24, 0x8000000000000000 # initialize rs1
li x13, 0x00000000fffffffe # initialize rs2
orn x19, x24, x13 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 1512)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0x100000000)
li x29, 0x8000000000000000 # initialize rs1
li x12, 0x0000000100000000 # initialize rs2
orn x7, x29, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 1520)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000000 rs2 = 0x100000001)
li x27, 0x8000000000000000 # initialize rs1
li x20, 0x0000000100000001 # initialize rs2
orn x26, x27, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 1528)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0x0)
li x17, 0x8000000000000001 # initialize rs1
li x31, 0x0000000000000000 # initialize rs2
orn x5, x17, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x5, 1536)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0x1)
li x3, 0x8000000000000001 # initialize rs1
li x6, 0x0000000000000001 # initialize rs2
orn x13, x3, x6 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 1544)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0x2)
li x3, 0x8000000000000001 # initialize rs1
li x23, 0x0000000000000002 # initialize rs2
orn x14, x3, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 1552)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0x8000000000000000)
li x27, 0x8000000000000001 # initialize rs1
li x10, 0x8000000000000000 # initialize rs2
orn x22, x27, x10 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 1560)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0x8000000000000001)
li x27, 0x8000000000000001 # initialize rs1
li x20, 0x8000000000000001 # initialize rs2
orn x1, x27, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 1568)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0x7fffffffffffffff)
li x9, 0x8000000000000001 # initialize rs1
li x30, 0x7fffffffffffffff # initialize rs2
orn x14, x9, x30 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 1576)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0x7ffffffffffffffe)
li x24, 0x8000000000000001 # initialize rs1
li x16, 0x7ffffffffffffffe # initialize rs2
orn x26, x24, x16 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 1584)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0xffffffffffffffff)
li x3, 0x8000000000000001 # initialize rs1
li x7, 0xffffffffffffffff # initialize rs2
orn x9, x3, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 1592)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0xfffffffffffffffe)
li x21, 0x8000000000000001 # initialize rs1
li x27, 0xfffffffffffffffe # initialize rs2
orn x15, x21, x27 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 1600)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0x5bbc887763ae86f2)
li x13, 0x8000000000000001 # initialize rs1
li x28, 0x5bbc887763ae86f2 # initialize rs2
orn x16, x13, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 1608)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0xaaaaaaaaaaaaaaaa)
li x21, 0x8000000000000001 # initialize rs1
li x16, 0xaaaaaaaaaaaaaaaa # initialize rs2
orn x30, x21, x16 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 1616)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0x5555555555555555)
li x6, 0x8000000000000001 # initialize rs1
li x18, 0x5555555555555555 # initialize rs2
orn x27, x6, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 1624)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0xffffffff)
li x28, 0x8000000000000001 # initialize rs1
li x5, 0x00000000ffffffff # initialize rs2
orn x13, x28, x5 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 1632)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0xfffffffe)
li x9, 0x8000000000000001 # initialize rs1
li x3, 0x00000000fffffffe # initialize rs2
orn x12, x9, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 1640)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0x100000000)
li x15, 0x8000000000000001 # initialize rs1
li x22, 0x0000000100000000 # initialize rs2
orn x20, x15, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 1648)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x8000000000000001 rs2 = 0x100000001)
li x27, 0x8000000000000001 # initialize rs1
li x23, 0x0000000100000001 # initialize rs2
orn x30, x27, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 1656)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0x0)
li x5, 0x7fffffffffffffff # initialize rs1
li x21, 0x0000000000000000 # initialize rs2
orn x24, x5, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 1664)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0x1)
li x5, 0x7fffffffffffffff # initialize rs1
li x22, 0x0000000000000001 # initialize rs2
orn x28, x5, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x28, 1672)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0x2)
li x8, 0x7fffffffffffffff # initialize rs1
li x21, 0x0000000000000002 # initialize rs2
orn x18, x8, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 1680)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0x8000000000000000)
li x22, 0x7fffffffffffffff # initialize rs1
li x6, 0x8000000000000000 # initialize rs2
orn x11, x22, x6 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 1688)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0x8000000000000001)
li x13, 0x7fffffffffffffff # initialize rs1
li x31, 0x8000000000000001 # initialize rs2
orn x11, x13, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 1696)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0x7fffffffffffffff)
li x19, 0x7fffffffffffffff # initialize rs1
li x24, 0x7fffffffffffffff # initialize rs2
orn x15, x19, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 1704)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0x7ffffffffffffffe)
li x2, 0x7fffffffffffffff # initialize rs1
li x5, 0x7ffffffffffffffe # initialize rs2
orn x21, x2, x5 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 1712)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0xffffffffffffffff)
li x3, 0x7fffffffffffffff # initialize rs1
li x14, 0xffffffffffffffff # initialize rs2
orn x5, x3, x14 # perform operation
RVTEST_SIGUPD(x4, x0, x5, 1720)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0xfffffffffffffffe)
li x25, 0x7fffffffffffffff # initialize rs1
li x12, 0xfffffffffffffffe # initialize rs2
orn x29, x25, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 1728)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0x5bbc887763ae86f2)
li x26, 0x7fffffffffffffff # initialize rs1
li x23, 0x5bbc887763ae86f2 # initialize rs2
orn x10, x26, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 1736)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0xaaaaaaaaaaaaaaaa)
li x18, 0x7fffffffffffffff # initialize rs1
li x31, 0xaaaaaaaaaaaaaaaa # initialize rs2
orn x14, x18, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 1744)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0x5555555555555555)
li x30, 0x7fffffffffffffff # initialize rs1
li x15, 0x5555555555555555 # initialize rs2
orn x23, x30, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 1752)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0xffffffff)
li x29, 0x7fffffffffffffff # initialize rs1
li x13, 0x00000000ffffffff # initialize rs2
orn x27, x29, x13 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 1760)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0xfffffffe)
li x5, 0x7fffffffffffffff # initialize rs1
li x19, 0x00000000fffffffe # initialize rs2
orn x7, x5, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 1768)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0x100000000)
li x23, 0x7fffffffffffffff # initialize rs1
li x10, 0x0000000100000000 # initialize rs2
orn x12, x23, x10 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 1776)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7fffffffffffffff rs2 = 0x100000001)
li x23, 0x7fffffffffffffff # initialize rs1
li x28, 0x0000000100000001 # initialize rs2
orn x1, x23, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 1784)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0x0)
li x21, 0x7ffffffffffffffe # initialize rs1
li x27, 0x0000000000000000 # initialize rs2
orn x5, x21, x27 # perform operation
RVTEST_SIGUPD(x4, x0, x5, 1792)
addi x4, x4, 1800 # increment signature pointer and reset offset

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0x1)
li x28, 0x7ffffffffffffffe # initialize rs1
li x19, 0x0000000000000001 # initialize rs2
orn x29, x28, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 0)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0x2)
li x12, 0x7ffffffffffffffe # initialize rs1
li x21, 0x0000000000000002 # initialize rs2
orn x31, x12, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 8)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0x8000000000000000)
li x19, 0x7ffffffffffffffe # initialize rs1
li x28, 0x8000000000000000 # initialize rs2
orn x31, x19, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 16)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0x8000000000000001)
li x30, 0x7ffffffffffffffe # initialize rs1
li x17, 0x8000000000000001 # initialize rs2
orn x13, x30, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 24)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0x7fffffffffffffff)
li x22, 0x7ffffffffffffffe # initialize rs1
li x6, 0x7fffffffffffffff # initialize rs2
orn x30, x22, x6 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 32)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0x7ffffffffffffffe)
li x24, 0x7ffffffffffffffe # initialize rs1
li x11, 0x7ffffffffffffffe # initialize rs2
orn x28, x24, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x28, 40)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0xffffffffffffffff)
li x12, 0x7ffffffffffffffe # initialize rs1
li x21, 0xffffffffffffffff # initialize rs2
orn x23, x12, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 48)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0xfffffffffffffffe)
li x25, 0x7ffffffffffffffe # initialize rs1
li x13, 0xfffffffffffffffe # initialize rs2
orn x24, x25, x13 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 56)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0x5bbc887763ae86f2)
li x18, 0x7ffffffffffffffe # initialize rs1
li x24, 0x5bbc887763ae86f2 # initialize rs2
orn x20, x18, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 64)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0xaaaaaaaaaaaaaaaa)
li x27, 0x7ffffffffffffffe # initialize rs1
li x10, 0xaaaaaaaaaaaaaaaa # initialize rs2
orn x28, x27, x10 # perform operation
RVTEST_SIGUPD(x4, x0, x28, 72)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0x5555555555555555)
li x10, 0x7ffffffffffffffe # initialize rs1
li x11, 0x5555555555555555 # initialize rs2
orn x9, x10, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 80)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0xffffffff)
li x27, 0x7ffffffffffffffe # initialize rs1
li x6, 0x00000000ffffffff # initialize rs2
orn x1, x27, x6 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 88)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0xfffffffe)
li x17, 0x7ffffffffffffffe # initialize rs1
li x1, 0x00000000fffffffe # initialize rs2
orn x10, x17, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 96)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0x100000000)
li x28, 0x7ffffffffffffffe # initialize rs1
li x9, 0x0000000100000000 # initialize rs2
orn x12, x28, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 104)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x7ffffffffffffffe rs2 = 0x100000001)
li x11, 0x7ffffffffffffffe # initialize rs1
li x25, 0x0000000100000001 # initialize rs2
orn x23, x11, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 112)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0x0)
li x13, 0xffffffffffffffff # initialize rs1
li x17, 0x0000000000000000 # initialize rs2
orn x3, x13, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 120)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0x1)
li x7, 0xffffffffffffffff # initialize rs1
li x22, 0x0000000000000001 # initialize rs2
orn x3, x7, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 128)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0x2)
li x7, 0xffffffffffffffff # initialize rs1
li x18, 0x0000000000000002 # initialize rs2
orn x6, x7, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x6, 136)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0x8000000000000000)
li x21, 0xffffffffffffffff # initialize rs1
li x1, 0x8000000000000000 # initialize rs2
orn x7, x21, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 144)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0x8000000000000001)
li x23, 0xffffffffffffffff # initialize rs1
li x1, 0x8000000000000001 # initialize rs2
orn x2, x23, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 152)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0x7fffffffffffffff)
li x11, 0xffffffffffffffff # initialize rs1
li x29, 0x7fffffffffffffff # initialize rs2
orn x27, x11, x29 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 160)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0x7ffffffffffffffe)
li x6, 0xffffffffffffffff # initialize rs1
li x16, 0x7ffffffffffffffe # initialize rs2
orn x22, x6, x16 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 168)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0xffffffffffffffff)
li x27, 0xffffffffffffffff # initialize rs1
li x15, 0xffffffffffffffff # initialize rs2
orn x18, x27, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 176)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0xfffffffffffffffe)
li x26, 0xffffffffffffffff # initialize rs1
li x13, 0xfffffffffffffffe # initialize rs2
orn x8, x26, x13 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 184)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0x5bbc887763ae86f2)
li x29, 0xffffffffffffffff # initialize rs1
li x17, 0x5bbc887763ae86f2 # initialize rs2
orn x28, x29, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x28, 192)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0xaaaaaaaaaaaaaaaa)
li x30, 0xffffffffffffffff # initialize rs1
li x31, 0xaaaaaaaaaaaaaaaa # initialize rs2
orn x7, x30, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 200)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0x5555555555555555)
li x9, 0xffffffffffffffff # initialize rs1
li x19, 0x5555555555555555 # initialize rs2
orn x22, x9, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 208)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0xffffffff)
li x9, 0xffffffffffffffff # initialize rs1
li x13, 0x00000000ffffffff # initialize rs2
orn x20, x9, x13 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 216)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0xfffffffe)
li x15, 0xffffffffffffffff # initialize rs1
li x2, 0x00000000fffffffe # initialize rs2
orn x20, x15, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 224)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0x100000000)
li x6, 0xffffffffffffffff # initialize rs1
li x21, 0x0000000100000000 # initialize rs2
orn x31, x6, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 232)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffffffffffff rs2 = 0x100000001)
li x23, 0xffffffffffffffff # initialize rs1
li x1, 0x0000000100000001 # initialize rs2
orn x3, x23, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 240)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0x0)
li x24, 0xfffffffffffffffe # initialize rs1
li x11, 0x0000000000000000 # initialize rs2
orn x12, x24, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 248)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0x1)
li x22, 0xfffffffffffffffe # initialize rs1
li x18, 0x0000000000000001 # initialize rs2
orn x14, x22, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 256)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0x2)
li x12, 0xfffffffffffffffe # initialize rs1
li x31, 0x0000000000000002 # initialize rs2
orn x5, x12, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x5, 264)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0x8000000000000000)
li x18, 0xfffffffffffffffe # initialize rs1
li x27, 0x8000000000000000 # initialize rs2
orn x1, x18, x27 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 272)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0x8000000000000001)
li x15, 0xfffffffffffffffe # initialize rs1
li x20, 0x8000000000000001 # initialize rs2
orn x6, x15, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x6, 280)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0x7fffffffffffffff)
li x3, 0xfffffffffffffffe # initialize rs1
li x18, 0x7fffffffffffffff # initialize rs2
orn x28, x3, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x28, 288)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0x7ffffffffffffffe)
li x9, 0xfffffffffffffffe # initialize rs1
li x13, 0x7ffffffffffffffe # initialize rs2
orn x10, x9, x13 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 296)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0xffffffffffffffff)
li x14, 0xfffffffffffffffe # initialize rs1
li x11, 0xffffffffffffffff # initialize rs2
orn x31, x14, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 304)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0xfffffffffffffffe)
li x23, 0xfffffffffffffffe # initialize rs1
li x7, 0xfffffffffffffffe # initialize rs2
orn x22, x23, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 312)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0x5bbc887763ae86f2)
li x24, 0xfffffffffffffffe # initialize rs1
li x30, 0x5bbc887763ae86f2 # initialize rs2
orn x10, x24, x30 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 320)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0xaaaaaaaaaaaaaaaa)
li x25, 0xfffffffffffffffe # initialize rs1
li x28, 0xaaaaaaaaaaaaaaaa # initialize rs2
orn x26, x25, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 328)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0x5555555555555555)
li x24, 0xfffffffffffffffe # initialize rs1
li x31, 0x5555555555555555 # initialize rs2
orn x30, x24, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 336)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0xffffffff)
li x2, 0xfffffffffffffffe # initialize rs1
li x5, 0x00000000ffffffff # initialize rs2
orn x30, x2, x5 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 344)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0xfffffffe)
li x9, 0xfffffffffffffffe # initialize rs1
li x13, 0x00000000fffffffe # initialize rs2
orn x14, x9, x13 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 352)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0x100000000)
li x20, 0xfffffffffffffffe # initialize rs1
li x5, 0x0000000100000000 # initialize rs2
orn x10, x20, x5 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 360)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffffffffffe rs2 = 0x100000001)
li x21, 0xfffffffffffffffe # initialize rs1
li x3, 0x0000000100000001 # initialize rs2
orn x10, x21, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 368)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0x0)
li x10, 0x5bbc887763ae86f2 # initialize rs1
li x1, 0x0000000000000000 # initialize rs2
orn x15, x10, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 376)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0x1)
li x12, 0x5bbc887763ae86f2 # initialize rs1
li x25, 0x0000000000000001 # initialize rs2
orn x6, x12, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x6, 384)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0x2)
li x2, 0x5bbc887763ae86f2 # initialize rs1
li x23, 0x0000000000000002 # initialize rs2
orn x29, x2, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 392)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0x8000000000000000)
li x28, 0x5bbc887763ae86f2 # initialize rs1
li x3, 0x8000000000000000 # initialize rs2
orn x20, x28, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 400)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0x8000000000000001)
li x13, 0x5bbc887763ae86f2 # initialize rs1
li x31, 0x8000000000000001 # initialize rs2
orn x26, x13, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 408)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0x7fffffffffffffff)
li x29, 0x5bbc887763ae86f2 # initialize rs1
li x3, 0x7fffffffffffffff # initialize rs2
orn x21, x29, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 416)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0x7ffffffffffffffe)
li x24, 0x5bbc887763ae86f2 # initialize rs1
li x10, 0x7ffffffffffffffe # initialize rs2
orn x15, x24, x10 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 424)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0xffffffffffffffff)
li x19, 0x5bbc887763ae86f2 # initialize rs1
li x13, 0xffffffffffffffff # initialize rs2
orn x25, x19, x13 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 432)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0xfffffffffffffffe)
li x20, 0x5bbc887763ae86f2 # initialize rs1
li x24, 0xfffffffffffffffe # initialize rs2
orn x30, x20, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 440)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0x5bbc887763ae86f2)
li x15, 0x5bbc887763ae86f2 # initialize rs1
li x3, 0x5bbc887763ae86f2 # initialize rs2
orn x2, x15, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 448)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0xaaaaaaaaaaaaaaaa)
li x6, 0x5bbc887763ae86f2 # initialize rs1
li x27, 0xaaaaaaaaaaaaaaaa # initialize rs2
orn x1, x6, x27 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 456)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0x5555555555555555)
li x19, 0x5bbc887763ae86f2 # initialize rs1
li x3, 0x5555555555555555 # initialize rs2
orn x20, x19, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 464)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0xffffffff)
li x14, 0x5bbc887763ae86f2 # initialize rs1
li x19, 0x00000000ffffffff # initialize rs2
orn x1, x14, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 472)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0xfffffffe)
li x6, 0x5bbc887763ae86f2 # initialize rs1
li x12, 0x00000000fffffffe # initialize rs2
orn x17, x6, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 480)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0x100000000)
li x1, 0x5bbc887763ae86f2 # initialize rs1
li x20, 0x0000000100000000 # initialize rs2
orn x30, x1, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 488)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5bbc887763ae86f2 rs2 = 0x100000001)
li x5, 0x5bbc887763ae86f2 # initialize rs1
li x1, 0x0000000100000001 # initialize rs2
orn x18, x5, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 496)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0x0)
li x30, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x25, 0x0000000000000000 # initialize rs2
orn x21, x30, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 504)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0x1)
li x29, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x27, 0x0000000000000001 # initialize rs2
orn x3, x29, x27 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 512)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0x2)
li x23, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x12, 0x0000000000000002 # initialize rs2
orn x20, x23, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 520)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0x8000000000000000)
li x12, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x9, 0x8000000000000000 # initialize rs2
orn x3, x12, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 528)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0x8000000000000001)
li x2, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x23, 0x8000000000000001 # initialize rs2
orn x7, x2, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 536)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0x7fffffffffffffff)
li x8, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x19, 0x7fffffffffffffff # initialize rs2
orn x2, x8, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 544)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0x7ffffffffffffffe)
li x26, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x27, 0x7ffffffffffffffe # initialize rs2
orn x31, x26, x27 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 552)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0xffffffffffffffff)
li x6, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x17, 0xffffffffffffffff # initialize rs2
orn x10, x6, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 560)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0xfffffffffffffffe)
li x5, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x10, 0xfffffffffffffffe # initialize rs2
orn x7, x5, x10 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 568)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0x5bbc887763ae86f2)
li x31, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x26, 0x5bbc887763ae86f2 # initialize rs2
orn x2, x31, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 576)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0xaaaaaaaaaaaaaaaa)
li x31, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x1, 0xaaaaaaaaaaaaaaaa # initialize rs2
orn x3, x31, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 584)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0x5555555555555555)
li x31, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x15, 0x5555555555555555 # initialize rs2
orn x25, x31, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 592)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0xffffffff)
li x14, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x22, 0x00000000ffffffff # initialize rs2
orn x7, x14, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 600)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0xfffffffe)
li x9, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x6, 0x00000000fffffffe # initialize rs2
orn x14, x9, x6 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 608)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0x100000000)
li x25, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x30, 0x0000000100000000 # initialize rs2
orn x14, x25, x30 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 616)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xaaaaaaaaaaaaaaaa rs2 = 0x100000001)
li x13, 0xaaaaaaaaaaaaaaaa # initialize rs1
li x3, 0x0000000100000001 # initialize rs2
orn x5, x13, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x5, 624)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0x0)
li x14, 0x5555555555555555 # initialize rs1
li x5, 0x0000000000000000 # initialize rs2
orn x26, x14, x5 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 632)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0x1)
li x15, 0x5555555555555555 # initialize rs1
li x19, 0x0000000000000001 # initialize rs2
orn x22, x15, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 640)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0x2)
li x19, 0x5555555555555555 # initialize rs1
li x11, 0x0000000000000002 # initialize rs2
orn x1, x19, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 648)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0x8000000000000000)
li x13, 0x5555555555555555 # initialize rs1
li x31, 0x8000000000000000 # initialize rs2
orn x10, x13, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 656)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0x8000000000000001)
li x16, 0x5555555555555555 # initialize rs1
li x5, 0x8000000000000001 # initialize rs2
orn x9, x16, x5 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 664)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0x7fffffffffffffff)
li x16, 0x5555555555555555 # initialize rs1
li x11, 0x7fffffffffffffff # initialize rs2
orn x18, x16, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 672)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0x7ffffffffffffffe)
li x22, 0x5555555555555555 # initialize rs1
li x17, 0x7ffffffffffffffe # initialize rs2
orn x15, x22, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 680)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0xffffffffffffffff)
li x24, 0x5555555555555555 # initialize rs1
li x10, 0xffffffffffffffff # initialize rs2
orn x15, x24, x10 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 688)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0xfffffffffffffffe)
li x9, 0x5555555555555555 # initialize rs1
li x10, 0xfffffffffffffffe # initialize rs2
orn x31, x9, x10 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 696)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0x5bbc887763ae86f2)
li x21, 0x5555555555555555 # initialize rs1
li x8, 0x5bbc887763ae86f2 # initialize rs2
orn x14, x21, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 704)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0xaaaaaaaaaaaaaaaa)
li x30, 0x5555555555555555 # initialize rs1
li x20, 0xaaaaaaaaaaaaaaaa # initialize rs2
orn x13, x30, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 712)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0x5555555555555555)
li x7, 0x5555555555555555 # initialize rs1
li x13, 0x5555555555555555 # initialize rs2
orn x31, x7, x13 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 720)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0xffffffff)
li x15, 0x5555555555555555 # initialize rs1
li x25, 0x00000000ffffffff # initialize rs2
orn x12, x15, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 728)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0xfffffffe)
li x26, 0x5555555555555555 # initialize rs1
li x7, 0x00000000fffffffe # initialize rs2
orn x9, x26, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 736)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0x100000000)
li x21, 0x5555555555555555 # initialize rs1
li x19, 0x0000000100000000 # initialize rs2
orn x25, x21, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 744)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x5555555555555555 rs2 = 0x100000001)
li x17, 0x5555555555555555 # initialize rs1
li x19, 0x0000000100000001 # initialize rs2
orn x27, x17, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 752)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0x0)
li x20, 0x00000000ffffffff # initialize rs1
li x1, 0x0000000000000000 # initialize rs2
orn x5, x20, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x5, 760)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0x1)
li x14, 0x00000000ffffffff # initialize rs1
li x3, 0x0000000000000001 # initialize rs2
orn x1, x14, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 768)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0x2)
li x14, 0x00000000ffffffff # initialize rs1
li x6, 0x0000000000000002 # initialize rs2
orn x22, x14, x6 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 776)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0x8000000000000000)
li x29, 0x00000000ffffffff # initialize rs1
li x30, 0x8000000000000000 # initialize rs2
orn x14, x29, x30 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 784)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0x8000000000000001)
li x8, 0x00000000ffffffff # initialize rs1
li x1, 0x8000000000000001 # initialize rs2
orn x6, x8, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x6, 792)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0x7fffffffffffffff)
li x18, 0x00000000ffffffff # initialize rs1
li x1, 0x7fffffffffffffff # initialize rs2
orn x25, x18, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 800)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0x7ffffffffffffffe)
li x20, 0x00000000ffffffff # initialize rs1
li x9, 0x7ffffffffffffffe # initialize rs2
orn x3, x20, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 808)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0xffffffffffffffff)
li x28, 0x00000000ffffffff # initialize rs1
li x22, 0xffffffffffffffff # initialize rs2
orn x25, x28, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 816)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0xfffffffffffffffe)
li x5, 0x00000000ffffffff # initialize rs1
li x26, 0xfffffffffffffffe # initialize rs2
orn x8, x5, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 824)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0x5bbc887763ae86f2)
li x11, 0x00000000ffffffff # initialize rs1
li x5, 0x5bbc887763ae86f2 # initialize rs2
orn x16, x11, x5 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 832)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0xaaaaaaaaaaaaaaaa)
li x30, 0x00000000ffffffff # initialize rs1
li x9, 0xaaaaaaaaaaaaaaaa # initialize rs2
orn x5, x30, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x5, 840)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0x5555555555555555)
li x1, 0x00000000ffffffff # initialize rs1
li x3, 0x5555555555555555 # initialize rs2
orn x23, x1, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 848)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0xffffffff)
li x25, 0x00000000ffffffff # initialize rs1
li x14, 0x00000000ffffffff # initialize rs2
orn x12, x25, x14 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 856)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0xfffffffe)
li x9, 0x00000000ffffffff # initialize rs1
li x24, 0x00000000fffffffe # initialize rs2
orn x17, x9, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 864)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0x100000000)
li x26, 0x00000000ffffffff # initialize rs1
li x22, 0x0000000100000000 # initialize rs2
orn x28, x26, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x28, 872)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xffffffff rs2 = 0x100000001)
li x25, 0x00000000ffffffff # initialize rs1
li x22, 0x0000000100000001 # initialize rs2
orn x15, x25, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 880)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0x0)
li x16, 0x00000000fffffffe # initialize rs1
li x18, 0x0000000000000000 # initialize rs2
orn x27, x16, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 888)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0x1)
li x27, 0x00000000fffffffe # initialize rs1
li x31, 0x0000000000000001 # initialize rs2
orn x29, x27, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 896)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0x2)
li x1, 0x00000000fffffffe # initialize rs1
li x18, 0x0000000000000002 # initialize rs2
orn x23, x1, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 904)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0x8000000000000000)
li x3, 0x00000000fffffffe # initialize rs1
li x19, 0x8000000000000000 # initialize rs2
orn x26, x3, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 912)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0x8000000000000001)
li x31, 0x00000000fffffffe # initialize rs1
li x6, 0x8000000000000001 # initialize rs2
orn x30, x31, x6 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 920)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0x7fffffffffffffff)
li x10, 0x00000000fffffffe # initialize rs1
li x30, 0x7fffffffffffffff # initialize rs2
orn x13, x10, x30 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 928)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0x7ffffffffffffffe)
li x18, 0x00000000fffffffe # initialize rs1
li x7, 0x7ffffffffffffffe # initialize rs2
orn x27, x18, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 936)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0xffffffffffffffff)
li x24, 0x00000000fffffffe # initialize rs1
li x16, 0xffffffffffffffff # initialize rs2
orn x9, x24, x16 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 944)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0xfffffffffffffffe)
li x9, 0x00000000fffffffe # initialize rs1
li x30, 0xfffffffffffffffe # initialize rs2
orn x5, x9, x30 # perform operation
RVTEST_SIGUPD(x4, x0, x5, 952)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0x5bbc887763ae86f2)
li x24, 0x00000000fffffffe # initialize rs1
li x21, 0x5bbc887763ae86f2 # initialize rs2
orn x28, x24, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x28, 960)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0xaaaaaaaaaaaaaaaa)
li x7, 0x00000000fffffffe # initialize rs1
li x31, 0xaaaaaaaaaaaaaaaa # initialize rs2
orn x30, x7, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 968)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0x5555555555555555)
li x29, 0x00000000fffffffe # initialize rs1
li x12, 0x5555555555555555 # initialize rs2
orn x24, x29, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 976)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0xffffffff)
li x10, 0x00000000fffffffe # initialize rs1
li x21, 0x00000000ffffffff # initialize rs2
orn x8, x10, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 984)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0xfffffffe)
li x30, 0x00000000fffffffe # initialize rs1
li x17, 0x00000000fffffffe # initialize rs2
orn x13, x30, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 992)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0x100000000)
li x10, 0x00000000fffffffe # initialize rs1
li x2, 0x0000000100000000 # initialize rs2
orn x3, x10, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 1000)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0xfffffffe rs2 = 0x100000001)
li x14, 0x00000000fffffffe # initialize rs1
li x28, 0x0000000100000001 # initialize rs2
orn x30, x14, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 1008)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0x0)
li x24, 0x0000000100000000 # initialize rs1
li x18, 0x0000000000000000 # initialize rs2
orn x9, x24, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 1016)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0x1)
li x7, 0x0000000100000000 # initialize rs1
li x2, 0x0000000000000001 # initialize rs2
orn x17, x7, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 1024)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0x2)
li x14, 0x0000000100000000 # initialize rs1
li x13, 0x0000000000000002 # initialize rs2
orn x26, x14, x13 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 1032)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0x8000000000000000)
li x11, 0x0000000100000000 # initialize rs1
li x14, 0x8000000000000000 # initialize rs2
orn x5, x11, x14 # perform operation
RVTEST_SIGUPD(x4, x0, x5, 1040)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0x8000000000000001)
li x7, 0x0000000100000000 # initialize rs1
li x9, 0x8000000000000001 # initialize rs2
orn x3, x7, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 1048)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0x7fffffffffffffff)
li x29, 0x0000000100000000 # initialize rs1
li x18, 0x7fffffffffffffff # initialize rs2
orn x7, x29, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 1056)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0x7ffffffffffffffe)
li x25, 0x0000000100000000 # initialize rs1
li x23, 0x7ffffffffffffffe # initialize rs2
orn x16, x25, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 1064)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0xffffffffffffffff)
li x27, 0x0000000100000000 # initialize rs1
li x28, 0xffffffffffffffff # initialize rs2
orn x20, x27, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 1072)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0xfffffffffffffffe)
li x11, 0x0000000100000000 # initialize rs1
li x19, 0xfffffffffffffffe # initialize rs2
orn x12, x11, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 1080)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0x5bbc887763ae86f2)
li x2, 0x0000000100000000 # initialize rs1
li x21, 0x5bbc887763ae86f2 # initialize rs2
orn x20, x2, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 1088)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0xaaaaaaaaaaaaaaaa)
li x20, 0x0000000100000000 # initialize rs1
li x10, 0xaaaaaaaaaaaaaaaa # initialize rs2
orn x26, x20, x10 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 1096)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0x5555555555555555)
li x28, 0x0000000100000000 # initialize rs1
li x22, 0x5555555555555555 # initialize rs2
orn x3, x28, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 1104)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0xffffffff)
li x7, 0x0000000100000000 # initialize rs1
li x9, 0x00000000ffffffff # initialize rs2
orn x29, x7, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 1112)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0xfffffffe)
li x24, 0x0000000100000000 # initialize rs1
li x12, 0x00000000fffffffe # initialize rs2
orn x9, x24, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 1120)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0x100000000)
li x6, 0x0000000100000000 # initialize rs1
li x26, 0x0000000100000000 # initialize rs2
orn x17, x6, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 1128)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000000 rs2 = 0x100000001)
li x24, 0x0000000100000000 # initialize rs1
li x14, 0x0000000100000001 # initialize rs2
orn x12, x24, x14 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 1136)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0x0)
li x13, 0x0000000100000001 # initialize rs1
li x12, 0x0000000000000000 # initialize rs2
orn x27, x13, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 1144)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0x1)
li x23, 0x0000000100000001 # initialize rs1
li x20, 0x0000000000000001 # initialize rs2
orn x22, x23, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 1152)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0x2)
li x23, 0x0000000100000001 # initialize rs1
li x29, 0x0000000000000002 # initialize rs2
orn x15, x23, x29 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 1160)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0x8000000000000000)
li x19, 0x0000000100000001 # initialize rs1
li x15, 0x8000000000000000 # initialize rs2
orn x21, x19, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 1168)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0x8000000000000001)
li x20, 0x0000000100000001 # initialize rs1
li x3, 0x8000000000000001 # initialize rs2
orn x10, x20, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 1176)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0x7fffffffffffffff)
li x28, 0x0000000100000001 # initialize rs1
li x15, 0x7fffffffffffffff # initialize rs2
orn x23, x28, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 1184)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0x7ffffffffffffffe)
li x30, 0x0000000100000001 # initialize rs1
li x9, 0x7ffffffffffffffe # initialize rs2
orn x19, x30, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 1192)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0xffffffffffffffff)
li x9, 0x0000000100000001 # initialize rs1
li x1, 0xffffffffffffffff # initialize rs2
orn x12, x9, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 1200)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0xfffffffffffffffe)
li x30, 0x0000000100000001 # initialize rs1
li x17, 0xfffffffffffffffe # initialize rs2
orn x23, x30, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 1208)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0x5bbc887763ae86f2)
li x26, 0x0000000100000001 # initialize rs1
li x9, 0x5bbc887763ae86f2 # initialize rs2
orn x16, x26, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 1216)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0xaaaaaaaaaaaaaaaa)
li x15, 0x0000000100000001 # initialize rs1
li x27, 0xaaaaaaaaaaaaaaaa # initialize rs2
orn x18, x15, x27 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 1224)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0x5555555555555555)
li x22, 0x0000000100000001 # initialize rs1
li x26, 0x5555555555555555 # initialize rs2
orn x12, x22, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 1232)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0xffffffff)
li x8, 0x0000000100000001 # initialize rs1
li x23, 0x00000000ffffffff # initialize rs2
orn x12, x8, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 1240)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0xfffffffe)
li x26, 0x0000000100000001 # initialize rs1
li x6, 0x00000000fffffffe # initialize rs2
orn x3, x26, x6 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 1248)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0x100000000)
li x2, 0x0000000100000001 # initialize rs1
li x20, 0x0000000100000000 # initialize rs2
orn x1, x2, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 1256)

# Testcase cr_rs1_rs2_corners (Test source rs1 = 0x100000001 rs2 = 0x100000001)
li x29, 0x0000000100000001 # initialize rs1
li x28, 0x0000000100000001 # initialize rs2
orn x21, x29, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 1264)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x0)
li x0, 0xb57fd498afc237ff # initialize rs1
li x0, 0x5bb675da3774dead # initialize rs2
orn x11, x0, x0 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 1272)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x1)
li x1, 0xdb86c1c7075ce1b5 # initialize rs1
li x1, 0x4fd2929c55e21322 # initialize rs2
orn x28, x1, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x28, 1280)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x2)
li x2, 0x56357d5a3a7da833 # initialize rs1
li x2, 0xdef73ce7e6c0bdb9 # initialize rs2
orn x28, x2, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x28, 1288)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x3)
li x3, 0x6350163d2538f13a # initialize rs1
li x3, 0x9da9e6921ca1420e # initialize rs2
orn x23, x3, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 1296)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x4)
mv x5, x4 # switch signature pointer register to avoid conflict with test
li x4, 0xc9e4a0448959764b # initialize rs1
li x4, 0x49a5164655f350f6 # initialize rs2
orn x28, x4, x4 # perform operation
RVTEST_SIGUPD(x5, x0, x28, 1304)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x5)
mv x6, x5 # switch signature pointer register to avoid conflict with test
li x5, 0x55e60f8d7f708fc9 # initialize rs1
li x5, 0x1f264fe4f15a4d96 # initialize rs2
orn x14, x5, x5 # perform operation
RVTEST_SIGUPD(x6, x0, x14, 1312)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x6)
mv x7, x6 # switch signature pointer register to avoid conflict with test
li x6, 0x782b9f9bc5ae08d8 # initialize rs1
li x6, 0x4ca3fa428311f4aa # initialize rs2
orn x3, x6, x6 # perform operation
RVTEST_SIGUPD(x7, x0, x3, 1320)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x7)
mv x4, x7 # switch signature pointer register to avoid conflict with test
li x7, 0x3d720bea5550c073 # initialize rs1
li x7, 0x52f54e8047716b1e # initialize rs2
orn x31, x7, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 1328)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x8)
li x8, 0x24f2768fcd0b42ca # initialize rs1
li x8, 0x7af45594f1b215de # initialize rs2
orn x28, x8, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x28, 1336)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x9)
li x9, 0x6dee222a0046542f # initialize rs1
li x9, 0x97cca2f5c3b3cd19 # initialize rs2
orn x2, x9, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 1344)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x10)
li x10, 0x9dc18c55b3b938cf # initialize rs1
li x10, 0x36aaaf67236bc160 # initialize rs2
orn x17, x10, x10 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 1352)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x11)
li x11, 0xa8e99f8a0b6eaede # initialize rs1
li x11, 0x00078ebf06c22483 # initialize rs2
orn x20, x11, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 1360)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x12)
li x12, 0x22af51067f8737da # initialize rs1
li x12, 0xc2ede0e3f3fd8f5e # initialize rs2
orn x25, x12, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 1368)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x13)
li x13, 0xeb48a13108a2c484 # initialize rs1
li x13, 0x50c0546dfed6a45a # initialize rs2
orn x30, x13, x13 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 1376)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x14)
li x14, 0xf367752bc9cc7f33 # initialize rs1
li x14, 0xce40d856df31f4f3 # initialize rs2
orn x2, x14, x14 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 1384)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x15)
li x15, 0x9bc928c9e05d8505 # initialize rs1
li x15, 0xa243688ab03aa573 # initialize rs2
orn x3, x15, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 1392)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x16)
li x16, 0x05a27ed5b0b3401b # initialize rs1
li x16, 0x7a924baf2ffc15a3 # initialize rs2
orn x17, x16, x16 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 1400)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x17)
li x17, 0xca8b23aaca4f4426 # initialize rs1
li x17, 0xd0da4d89e47fc405 # initialize rs2
orn x15, x17, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 1408)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x18)
li x18, 0x56e96363dbae1850 # initialize rs1
li x18, 0x6ac3735e7e59ca7d # initialize rs2
orn x7, x18, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 1416)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x19)
li x19, 0xe68518bebe63d9ba # initialize rs1
li x19, 0xc7152f84ade86816 # initialize rs2
orn x30, x19, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 1424)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x20)
li x20, 0xb41639c461b625a8 # initialize rs1
li x20, 0xab785f63cd523700 # initialize rs2
orn x19, x20, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 1432)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x21)
li x21, 0x441d2e1a053089ca # initialize rs1
li x21, 0xc02bacb3bb86e11b # initialize rs2
orn x31, x21, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 1440)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x22)
li x22, 0xd6fb829d1ea7f706 # initialize rs1
li x22, 0x0c49f7f3ca690a62 # initialize rs2
orn x5, x22, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x5, 1448)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x23)
li x23, 0x47dcf000a6ec85af # initialize rs1
li x23, 0x9d295a2daa2b67e4 # initialize rs2
orn x23, x23, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 1456)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x24)
li x24, 0x7e579c8283982e0b # initialize rs1
li x24, 0xc7104624702dab8d # initialize rs2
orn x23, x24, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 1464)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x25)
li x25, 0xb6b05b6af6e36e2b # initialize rs1
li x25, 0x8bb0db81c7cb18ca # initialize rs2
orn x18, x25, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 1472)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x26)
li x26, 0x8508fca11e0908a8 # initialize rs1
li x26, 0xf2167b30375a2336 # initialize rs2
orn x29, x26, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 1480)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x27)
li x27, 0x2572ef48db7084f1 # initialize rs1
li x27, 0x08d96669290bc68d # initialize rs2
orn x19, x27, x27 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 1488)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x28)
li x28, 0x49f8bb4ae13608c2 # initialize rs1
li x28, 0xc2b3f2605a65aa37 # initialize rs2
orn x7, x28, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 1496)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x29)
li x29, 0xcc05c935cc16922a # initialize rs1
li x29, 0x68e879b086736084 # initialize rs2
orn x25, x29, x29 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 1504)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x30)
li x30, 0xa8f04e343e7ff65e # initialize rs1
li x30, 0xaea5741871b81d6a # initialize rs2
orn x23, x30, x30 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 1512)

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x31)
li x31, 0x25b7ab71fd401718 # initialize rs1
li x31, 0x65387ee3a95af890 # initialize rs2
orn x29, x31, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 1520)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x0)
li x0, 0x02829167ba505e1b # initialize rs1
li x28, 0xfee29350f6b9fd4c # initialize rs2
orn x0, x0, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x0, 1528)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x1)
li x1, 0xa30a3b4892167b9d # initialize rs1
li x27, 0xc177d161c574b0fd # initialize rs2
orn x1, x1, x27 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 1536)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x2)
li x2, 0xb97919c5f4481028 # initialize rs1
li x31, 0x81572259a959d297 # initialize rs2
orn x2, x2, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 1544)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x3)
li x3, 0xf9309aa987cf77fd # initialize rs1
li x18, 0xbc38c55edae3baba # initialize rs2
orn x3, x3, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 1552)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x4)
mv x5, x4 # switch signature pointer register to avoid conflict with test
li x4, 0x22a58bb4d7bc18bf # initialize rs1
li x19, 0x00ce81e39f966cb8 # initialize rs2
orn x4, x4, x19 # perform operation
RVTEST_SIGUPD(x5, x0, x4, 1560)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x5)
mv x6, x5 # switch signature pointer register to avoid conflict with test
li x5, 0xb7535685eeb22d33 # initialize rs1
li x29, 0x0fd78f5335b2ad03 # initialize rs2
orn x5, x5, x29 # perform operation
RVTEST_SIGUPD(x6, x0, x5, 1568)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x6)
mv x7, x6 # switch signature pointer register to avoid conflict with test
li x6, 0xd65eae7307343b63 # initialize rs1
li x18, 0x0da298304f789d2c # initialize rs2
orn x6, x6, x18 # perform operation
RVTEST_SIGUPD(x7, x0, x6, 1576)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x7)
mv x4, x7 # switch signature pointer register to avoid conflict with test
li x7, 0xb1b6bfe919a02315 # initialize rs1
li x19, 0xf88534c452329e48 # initialize rs2
orn x7, x7, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 1584)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x8)
li x8, 0xce27f9ed5151c3ad # initialize rs1
li x18, 0x2610dcd9e1083b7e # initialize rs2
orn x8, x8, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 1592)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x9)
li x9, 0x8a9ea4e8cfc88bcd # initialize rs1
li x1, 0x0fe76b0087b0aeb9 # initialize rs2
orn x9, x9, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 1600)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x10)
li x10, 0x29aa61334bb291d6 # initialize rs1
li x17, 0x8b3285205dca784c # initialize rs2
orn x10, x10, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 1608)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x11)
li x11, 0x88342c1902e6dee1 # initialize rs1
li x20, 0x9d02bac19107be50 # initialize rs2
orn x11, x11, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 1616)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x12)
li x12, 0x397c5de29874ed11 # initialize rs1
li x9, 0x36598cc9e8966406 # initialize rs2
orn x12, x12, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 1624)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x13)
li x13, 0x71665850ca598966 # initialize rs1
li x13, 0xb3e5a9d2bd1ec39d # initialize rs2
orn x13, x13, x13 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 1632)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x14)
li x14, 0xbcf85b615d7ae42a # initialize rs1
li x28, 0x6ba5f87ff1428a55 # initialize rs2
orn x14, x14, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 1640)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x15)
li x15, 0x4e0f5cf263b43717 # initialize rs1
li x5, 0x049e543a59ae3d98 # initialize rs2
orn x15, x15, x5 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 1648)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x16)
li x16, 0x109495da651098f5 # initialize rs1
li x22, 0x693e50e32300e007 # initialize rs2
orn x16, x16, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 1656)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x17)
li x17, 0x70add216b0cf74e8 # initialize rs1
li x23, 0x7e5f5409371487d2 # initialize rs2
orn x17, x17, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 1664)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x18)
li x18, 0x6679607bfc7401ea # initialize rs1
li x5, 0x179498d4e32071c2 # initialize rs2
orn x18, x18, x5 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 1672)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x19)
li x19, 0xb0b2fff8477c89a4 # initialize rs1
li x1, 0xe492125c90a85c35 # initialize rs2
orn x19, x19, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 1680)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x20)
li x20, 0xa36f7ecf71222518 # initialize rs1
li x3, 0x7e7c0cb03c8deadf # initialize rs2
orn x20, x20, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 1688)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x21)
li x21, 0x7ad4b783d74de42a # initialize rs1
li x18, 0x9ff2763187182307 # initialize rs2
orn x21, x21, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 1696)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x22)
li x22, 0xb098cb13c048b593 # initialize rs1
li x3, 0x8c2124ae298db000 # initialize rs2
orn x22, x22, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 1704)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x23)
li x23, 0xa80699ab6956a450 # initialize rs1
li x27, 0x47e0468d92d68e86 # initialize rs2
orn x23, x23, x27 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 1712)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x24)
li x24, 0x9d3df4c9a7d0d78b # initialize rs1
li x14, 0x7000abb73ee2ec96 # initialize rs2
orn x24, x24, x14 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 1720)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x25)
li x25, 0x63aefd09b45b1ca1 # initialize rs1
li x7, 0x38d7a11d784cee40 # initialize rs2
orn x25, x25, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 1728)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x26)
li x26, 0xa75e708da79a35f2 # initialize rs1
li x24, 0xeb85511f5aa2572a # initialize rs2
orn x26, x26, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 1736)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x27)
li x27, 0x069e722b008c2d8c # initialize rs1
li x15, 0x41a2b939389eb224 # initialize rs2
orn x27, x27, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 1744)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x28)
li x28, 0xbef9343fb8703947 # initialize rs1
li x31, 0xa5f9bb6205476e3f # initialize rs2
orn x28, x28, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x28, 1752)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x29)
li x29, 0xa58efeb51bea79f6 # initialize rs1
li x26, 0x51889e1369e8944c # initialize rs2
orn x29, x29, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 1760)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x30)
li x30, 0x2ad0430697f7247c # initialize rs1
li x25, 0x5948feaa29c1149c # initialize rs2
orn x30, x30, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 1768)

# Testcase cmp_rd_rs1 (Test rd = rs1 = x31)
li x31, 0x311b5dca8eb99a17 # initialize rs1
li x24, 0xf2ef705ce0a1e264 # initialize rs2
orn x31, x31, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 1776)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x0)
li x29, 0xa3e7d8fe20825703 # initialize rs1
li x0, 0x46dcd47994b9445e # initialize rs2
orn x0, x29, x0 # perform operation
RVTEST_SIGUPD(x4, x0, x0, 1784)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x1)
li x26, 0x9af3038687ce3749 # initialize rs1
li x1, 0xf775dda2c4b98766 # initialize rs2
orn x1, x26, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 1792)
addi x4, x4, 1800 # increment signature pointer and reset offset

# Testcase cmp_rd_rs2 (Test rd = rs2 = x2)
li x9, 0xdddb429dffd357f3 # initialize rs1
li x2, 0x374c961e41a12274 # initialize rs2
orn x2, x9, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 0)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x3)
li x2, 0x4d6c1ce598436a76 # initialize rs1
li x3, 0x326cf1286afb7359 # initialize rs2
orn x3, x2, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 8)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x4)
mv x5, x4 # switch signature pointer register to avoid conflict with test
li x26, 0x6919b4d3a218171e # initialize rs1
li x4, 0x6c7d712a4ea7cfab # initialize rs2
orn x4, x26, x4 # perform operation
RVTEST_SIGUPD(x5, x0, x4, 16)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x5)
mv x6, x5 # switch signature pointer register to avoid conflict with test
li x12, 0xe68a1fba1851b0c0 # initialize rs1
li x5, 0x91dc58029b686c11 # initialize rs2
orn x5, x12, x5 # perform operation
RVTEST_SIGUPD(x6, x0, x5, 24)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x6)
mv x7, x6 # switch signature pointer register to avoid conflict with test
li x3, 0x9932c65ea0ce0fee # initialize rs1
li x6, 0xa4680e0c865bf95f # initialize rs2
orn x6, x3, x6 # perform operation
RVTEST_SIGUPD(x7, x0, x6, 32)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x7)
mv x4, x7 # switch signature pointer register to avoid conflict with test
li x11, 0xc736efec6d1421b2 # initialize rs1
li x7, 0x7bf22414d0336684 # initialize rs2
orn x7, x11, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 40)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x8)
li x29, 0xa5679b638a94b38c # initialize rs1
li x8, 0xc3897d913d739767 # initialize rs2
orn x8, x29, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 48)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x9)
li x3, 0x6aa4bfa67b5ad3c4 # initialize rs1
li x9, 0x85a05a472293dafe # initialize rs2
orn x9, x3, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 56)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x10)
li x25, 0x14cd286ae6938da1 # initialize rs1
li x10, 0x7691145ac5f1d951 # initialize rs2
orn x10, x25, x10 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 64)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x11)
li x5, 0xd7ee127588d58f25 # initialize rs1
li x11, 0xd3c0192a6c4ee4d2 # initialize rs2
orn x11, x5, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 72)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x12)
li x24, 0x143e4f3e23920858 # initialize rs1
li x12, 0x5f694d8808b2a6f8 # initialize rs2
orn x12, x24, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 80)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x13)
li x13, 0x791e5329519136e3 # initialize rs1
li x13, 0xb75d1ec06789aea5 # initialize rs2
orn x13, x13, x13 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 88)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x14)
li x14, 0x978ab36c87a129eb # initialize rs1
li x14, 0x5dc8b8c40e53a979 # initialize rs2
orn x14, x14, x14 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 96)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x15)
li x22, 0x2c6f9fcbe09bd3da # initialize rs1
li x15, 0x12d200922d761a51 # initialize rs2
orn x15, x22, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 104)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x16)
li x20, 0xd30065d5289c29fa # initialize rs1
li x16, 0xceb4fa4024f6dd5b # initialize rs2
orn x16, x20, x16 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 112)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x17)
li x27, 0x31743500f19e6747 # initialize rs1
li x17, 0xfeb33c3ceb2b1353 # initialize rs2
orn x17, x27, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 120)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x18)
li x10, 0xcc3b2073cbc072ce # initialize rs1
li x18, 0xae19ab0a2adc8ea6 # initialize rs2
orn x18, x10, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 128)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x19)
li x9, 0xd9a8c62d3db75fdb # initialize rs1
li x19, 0x07f8be1046b6908b # initialize rs2
orn x19, x9, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 136)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x20)
li x8, 0x6b61dc107a4e68ca # initialize rs1
li x20, 0x79d053a26d53988e # initialize rs2
orn x20, x8, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 144)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x21)
li x17, 0x2014de1f05c18c55 # initialize rs1
li x21, 0x4fe019d708aa1cf2 # initialize rs2
orn x21, x17, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 152)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x22)
li x17, 0x69ed180d6125e87f # initialize rs1
li x22, 0x86262dc6ee359198 # initialize rs2
orn x22, x17, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 160)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x23)
li x9, 0xc71fdd20d7efaa72 # initialize rs1
li x23, 0x5d65ecc356955978 # initialize rs2
orn x23, x9, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 168)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x24)
li x25, 0xb101abbc57c349ac # initialize rs1
li x24, 0x711a67e032f7c9e3 # initialize rs2
orn x24, x25, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 176)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x25)
li x1, 0xdf4c576d8b40b497 # initialize rs1
li x25, 0xf012a104ceb29842 # initialize rs2
orn x25, x1, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 184)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x26)
li x11, 0xc5b9e0cd838da2a8 # initialize rs1
li x26, 0x82cbe6607d474be9 # initialize rs2
orn x26, x11, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 192)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x27)
li x19, 0x86e6c962cd476592 # initialize rs1
li x27, 0x012a3d881140c767 # initialize rs2
orn x27, x19, x27 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 200)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x28)
li x23, 0xd917a7ffc4ac58db # initialize rs1
li x28, 0x285d07d851b20c98 # initialize rs2
orn x28, x23, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x28, 208)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x29)
li x8, 0x9b86b57189816e7b # initialize rs1
li x29, 0x840d34e8ca2aa674 # initialize rs2
orn x29, x8, x29 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 216)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x30)
li x20, 0x94b71e0c9fa84ac3 # initialize rs1
li x30, 0x8083c31044074ccc # initialize rs2
orn x30, x20, x30 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 224)

# Testcase cmp_rd_rs2 (Test rd = rs2 = x31)
li x20, 0x208a4b9456695cac # initialize rs1
li x31, 0xf19f5a171143fdcc # initialize rs2
orn x31, x20, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 232)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x0)
li x0, 0x20a7d72c336a687f # initialize rs1
li x0, 0x6caae38e86b52f58 # initialize rs2
orn x0, x0, x0 # perform operation
RVTEST_SIGUPD(x4, x0, x0, 240)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x1)
li x1, 0xb5fd024f5842c804 # initialize rs1
li x1, 0x9e5e7c2e1614b597 # initialize rs2
orn x1, x1, x1 # perform operation
RVTEST_SIGUPD(x4, x0, x1, 248)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x2)
li x2, 0x403622978e8edd7a # initialize rs1
li x2, 0xe7bfbb0732912b75 # initialize rs2
orn x2, x2, x2 # perform operation
RVTEST_SIGUPD(x4, x0, x2, 256)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x3)
li x3, 0x56a54c001f1ccb1d # initialize rs1
li x3, 0xb4287ad734e19115 # initialize rs2
orn x3, x3, x3 # perform operation
RVTEST_SIGUPD(x4, x0, x3, 264)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x4)
mv x5, x4 # switch signature pointer register to avoid conflict with test
li x4, 0x3a8e9fd092039a90 # initialize rs1
li x4, 0x9ebe17fcd7b64a16 # initialize rs2
orn x4, x4, x4 # perform operation
RVTEST_SIGUPD(x5, x0, x4, 272)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x5)
mv x6, x5 # switch signature pointer register to avoid conflict with test
li x5, 0x0750490d083d7d70 # initialize rs1
li x5, 0x0a059964e4e1cb62 # initialize rs2
orn x5, x5, x5 # perform operation
RVTEST_SIGUPD(x6, x0, x5, 280)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x6)
mv x7, x6 # switch signature pointer register to avoid conflict with test
li x6, 0x0aa6a3f4de46e370 # initialize rs1
li x6, 0xc8d2acc4dd99568f # initialize rs2
orn x6, x6, x6 # perform operation
RVTEST_SIGUPD(x7, x0, x6, 288)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x7)
mv x4, x7 # switch signature pointer register to avoid conflict with test
li x7, 0xf1e3b6e9b6d92f51 # initialize rs1
li x7, 0xf08f9456b4c9257a # initialize rs2
orn x7, x7, x7 # perform operation
RVTEST_SIGUPD(x4, x0, x7, 296)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x8)
li x8, 0xa53812ca82848864 # initialize rs1
li x8, 0x6dd722f6f356ddeb # initialize rs2
orn x8, x8, x8 # perform operation
RVTEST_SIGUPD(x4, x0, x8, 304)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x9)
li x9, 0x0e607c1d9d92c538 # initialize rs1
li x9, 0x0405b31535445da8 # initialize rs2
orn x9, x9, x9 # perform operation
RVTEST_SIGUPD(x4, x0, x9, 312)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x10)
li x10, 0x2e8cb028862603bd # initialize rs1
li x10, 0x1f4bb1bedc315207 # initialize rs2
orn x10, x10, x10 # perform operation
RVTEST_SIGUPD(x4, x0, x10, 320)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x11)
li x11, 0x91661b79bab23e6b # initialize rs1
li x11, 0xd22bfb55abb1ed6f # initialize rs2
orn x11, x11, x11 # perform operation
RVTEST_SIGUPD(x4, x0, x11, 328)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x12)
li x12, 0xe235f63880faec83 # initialize rs1
li x12, 0xe693aa2b4bddbdfe # initialize rs2
orn x12, x12, x12 # perform operation
RVTEST_SIGUPD(x4, x0, x12, 336)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x13)
li x13, 0x34296f0140e50534 # initialize rs1
li x13, 0x00b16cd8b8a38387 # initialize rs2
orn x13, x13, x13 # perform operation
RVTEST_SIGUPD(x4, x0, x13, 344)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x14)
li x14, 0x39a2556a0ed1bff2 # initialize rs1
li x14, 0xa1b28daf670f318f # initialize rs2
orn x14, x14, x14 # perform operation
RVTEST_SIGUPD(x4, x0, x14, 352)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x15)
li x15, 0x56802cb4029e19c9 # initialize rs1
li x15, 0x3c316876b41e7b50 # initialize rs2
orn x15, x15, x15 # perform operation
RVTEST_SIGUPD(x4, x0, x15, 360)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x16)
li x16, 0xa80214abdd771968 # initialize rs1
li x16, 0x7a0cc90930b36bf1 # initialize rs2
orn x16, x16, x16 # perform operation
RVTEST_SIGUPD(x4, x0, x16, 368)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x17)
li x17, 0x252e153b02626027 # initialize rs1
li x17, 0x01d95fbbd3c7c4c0 # initialize rs2
orn x17, x17, x17 # perform operation
RVTEST_SIGUPD(x4, x0, x17, 376)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x18)
li x18, 0x4e6a1329f74c0010 # initialize rs1
li x18, 0x4a2754b717b84a40 # initialize rs2
orn x18, x18, x18 # perform operation
RVTEST_SIGUPD(x4, x0, x18, 384)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x19)
li x19, 0xb7b4fbbdf261775b # initialize rs1
li x19, 0x1b65f3d3be137e44 # initialize rs2
orn x19, x19, x19 # perform operation
RVTEST_SIGUPD(x4, x0, x19, 392)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x20)
li x20, 0x50ea252e78689364 # initialize rs1
li x20, 0x916ded658f612d08 # initialize rs2
orn x20, x20, x20 # perform operation
RVTEST_SIGUPD(x4, x0, x20, 400)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x21)
li x21, 0x1161e9d664583985 # initialize rs1
li x21, 0x7ab9f88debb721a4 # initialize rs2
orn x21, x21, x21 # perform operation
RVTEST_SIGUPD(x4, x0, x21, 408)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x22)
li x22, 0x154e3bf55a2801ad # initialize rs1
li x22, 0x4c3eb7e93e232716 # initialize rs2
orn x22, x22, x22 # perform operation
RVTEST_SIGUPD(x4, x0, x22, 416)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x23)
li x23, 0x53639fdacae2e53a # initialize rs1
li x23, 0x0dc95308174282e7 # initialize rs2
orn x23, x23, x23 # perform operation
RVTEST_SIGUPD(x4, x0, x23, 424)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x24)
li x24, 0xc71c0062c01e5e66 # initialize rs1
li x24, 0x6cb1ecfd75a809d0 # initialize rs2
orn x24, x24, x24 # perform operation
RVTEST_SIGUPD(x4, x0, x24, 432)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x25)
li x25, 0x6e7bafbeaf54b13b # initialize rs1
li x25, 0x301adefd7187aae0 # initialize rs2
orn x25, x25, x25 # perform operation
RVTEST_SIGUPD(x4, x0, x25, 440)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x26)
li x26, 0x41b36f9ce6985e11 # initialize rs1
li x26, 0xcd3ea7a30d336d94 # initialize rs2
orn x26, x26, x26 # perform operation
RVTEST_SIGUPD(x4, x0, x26, 448)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x27)
li x27, 0x69cacae9f123f1a6 # initialize rs1
li x27, 0x5ea1f1c7dac3f5ca # initialize rs2
orn x27, x27, x27 # perform operation
RVTEST_SIGUPD(x4, x0, x27, 456)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x28)
li x28, 0xd8fc22285738331b # initialize rs1
li x28, 0xfa2c07e90d5ddf1b # initialize rs2
orn x28, x28, x28 # perform operation
RVTEST_SIGUPD(x4, x0, x28, 464)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x29)
li x29, 0x19d977c673c50cf3 # initialize rs1
li x29, 0x7a55b6c227c3db5c # initialize rs2
orn x29, x29, x29 # perform operation
RVTEST_SIGUPD(x4, x0, x29, 472)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x30)
li x30, 0x280e253a0aa0b759 # initialize rs1
li x30, 0x0f0138e4fb47e9ea # initialize rs2
orn x30, x30, x30 # perform operation
RVTEST_SIGUPD(x4, x0, x30, 480)

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x31)
li x31, 0x777bbc0fb7cb9c67 # initialize rs1
li x31, 0xa96ac62872570b09 # initialize rs2
orn x31, x31, x31 # perform operation
RVTEST_SIGUPD(x4, x0, x31, 488)

# Testcase cp_gpr/fpr_hazard nohaz test
add x3, x26, x2 # perform first operation
orn x1, x21, x10 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard nohaz test
add x27, x8, x26 # perform first operation
orn x10, x18, x3 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard nohaz test
add x1, x20, x7 # perform first operation
orn x25, x27, x6 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard raw test
add x3, x31, x29 # perform first operation
orn x29, x3, x22 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard raw test
add x7, x27, x29 # perform first operation
orn x23, x7, x7 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard raw test
add x12, x13, x2 # perform first operation
orn x16, x14, x27 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard waw test
add x25, x30, x11 # perform first operation
orn x25, x22, x2 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard waw test
add x18, x9, x10 # perform first operation
orn x18, x30, x20 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard waw test
add x16, x2, x26 # perform first operation
orn x16, x23, x6 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard war test
add x2, x26, x9 # perform first operation
orn x26, x13, x16 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard war test
add x15, x19, x24 # perform first operation
orn x24, x18, x9 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard war test
add x20, x29, x6 # perform first operation
orn x14, x24, x19 # perform second (triggering) operation

#.EQU SIGSIZE,4096
.EQU SIGSIZE,57472 #combined


write_tohost:
    la t1, tohost
    li t0, 1
    sw t0, 0(t1)
    sw zero, 4(t1)

self_loop:
    j self_loop

.data

.align 4
scratch:
    .bss 136

.data 

.section .tohost 
tohost: # write to HTIF
    .dword 0
fromhost:
    .dword 0

.align 4
begin_signature:
    .fill SIGSIZE*8/__riscv_xlen,__riscv_xlen/8,0xdeadbeef
end_signature:

.end
