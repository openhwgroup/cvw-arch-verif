///////////////////////////////////////////
// /home/jcassidy/cvw/addins/cvw-arch-verif/tests/rv64/Zfh//WALLY-COV-fnmadd.h.S
// David_Harris@hmc.edu
// Created 2025-01-24 19:54:23.205371
//
// Copyright (C) 2024 Harvey Mudd College & Oklahoma State University, Habib University, UET Lahore
//
// SPDX-License-Identifier: Apache-2.0 WITH SHL-2.1
///////////////////////////////////////////

.section .text.init
.globl rvtest_entry_point

rvtest_entry_point:

    
# set mstatus.FS to 01 to enable fp
li t0,0x4000
csrs mstatus, t0


# Testcase cmp_gpr_hazard raw test
fnmadd.h f23, f31, f18, f24 # perform first operation
fnmadd.h f9, f23, f15, f7 # perform second operation

# Testcase cmp_gpr_hazard raw test
fnmadd.h f29, f13, f26, f18 # perform first operation
fnmadd.h f17, f10, f29, f20 # perform second operation

# Testcase cmp_gpr_hazard waw test
fnmadd.h f24, f2, f12, f18 # perform first operation
fnmadd.h f24, f9, f5, f11 # perform second operation

# Testcase cmp_gpr_hazard waw test
fnmadd.h f21, f24, f2, f29 # perform first operation
fnmadd.h f21, f21, f6, f22 # perform second operation

# Testcase cmp_gpr_hazard war test
fnmadd.h f8, f29, f22, f4 # perform first operation
fnmadd.h f29, f28, f17, f18 # perform second operation

# Testcase cmp_gpr_hazard war test
fnmadd.h f4, f28, f7, f3 # perform first operation
fnmadd.h f7, f16, f19, f27 # perform second operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f0)
li x0, 0x4d1f7bde53ee08a2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x70331768d57c4c0d # load x3 with value 0x70331768d57c4c0d
sw x3, 0(x2) # store 0x70331768d57c4c0d in memory
flh f0, 0(x2) # load 0x70331768d57c4c0d from memory into f0
li x3, 0xdeaedc455e5c7721 # load x3 with value 0xdeaedc455e5c7721
sw x3, 0(x2) # store 0xdeaedc455e5c7721 in memory
flh f22, 0(x2) # load 0xdeaedc455e5c7721 from memory into f22
li x3, 0x61abeed1e1b18592 # load x3 with value 0x61abeed1e1b18592
sw x3, 0(x2) # store 0x61abeed1e1b18592 in memory
flh f19, 0(x2) # load 0x61abeed1e1b18592 from memory into f19
fnmadd.h f0, f0, f22, f19 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f1)
li x1, 0xe830d2bef341159f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x5389b49c77a2a7b9 # load x3 with value 0x5389b49c77a2a7b9
sw x3, 0(x2) # store 0x5389b49c77a2a7b9 in memory
flh f1, 0(x2) # load 0x5389b49c77a2a7b9 from memory into f1
li x3, 0xf0720a0182870d09 # load x3 with value 0xf0720a0182870d09
sw x3, 0(x2) # store 0xf0720a0182870d09 in memory
flh f14, 0(x2) # load 0xf0720a0182870d09 from memory into f14
li x3, 0x969782626a336f26 # load x3 with value 0x969782626a336f26
sw x3, 0(x2) # store 0x969782626a336f26 in memory
flh f12, 0(x2) # load 0x969782626a336f26 from memory into f12
fnmadd.h f1, f1, f14, f12 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f2)
li x2, 0x74c3dcada9078057 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xcbac5cd0c31e46c5 # load x3 with value 0xcbac5cd0c31e46c5
sw x3, 0(x2) # store 0xcbac5cd0c31e46c5 in memory
flh f2, 0(x2) # load 0xcbac5cd0c31e46c5 from memory into f2
li x3, 0xb338e5b6a3c2bbe2 # load x3 with value 0xb338e5b6a3c2bbe2
sw x3, 0(x2) # store 0xb338e5b6a3c2bbe2 in memory
flh f6, 0(x2) # load 0xb338e5b6a3c2bbe2 from memory into f6
li x3, 0x718c9831c1bebfad # load x3 with value 0x718c9831c1bebfad
sw x3, 0(x2) # store 0x718c9831c1bebfad in memory
flh f26, 0(x2) # load 0x718c9831c1bebfad from memory into f26
fnmadd.h f2, f2, f6, f26 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f3)
li x3, 0x983e9a3c39a80aa5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x86d446a0f1fd54fc # load x3 with value 0x86d446a0f1fd54fc
sw x3, 0(x2) # store 0x86d446a0f1fd54fc in memory
flh f3, 0(x2) # load 0x86d446a0f1fd54fc from memory into f3
li x3, 0x50f20a08b87dac46 # load x3 with value 0x50f20a08b87dac46
sw x3, 0(x2) # store 0x50f20a08b87dac46 in memory
flh f22, 0(x2) # load 0x50f20a08b87dac46 from memory into f22
li x3, 0x580fb5d82ced6d75 # load x3 with value 0x580fb5d82ced6d75
sw x3, 0(x2) # store 0x580fb5d82ced6d75 in memory
flh f27, 0(x2) # load 0x580fb5d82ced6d75 from memory into f27
fnmadd.h f3, f3, f22, f27 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f4)
li x4, 0xd1d48f9e3111222c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x304a83356414dace # load x3 with value 0x304a83356414dace
sw x3, 0(x2) # store 0x304a83356414dace in memory
flh f4, 0(x2) # load 0x304a83356414dace from memory into f4
li x3, 0xc5d7e1a852b4ab82 # load x3 with value 0xc5d7e1a852b4ab82
sw x3, 0(x2) # store 0xc5d7e1a852b4ab82 in memory
flh f6, 0(x2) # load 0xc5d7e1a852b4ab82 from memory into f6
li x3, 0x620c62696e6e275d # load x3 with value 0x620c62696e6e275d
sw x3, 0(x2) # store 0x620c62696e6e275d in memory
flh f9, 0(x2) # load 0x620c62696e6e275d from memory into f9
fnmadd.h f4, f4, f6, f9 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f5)
li x5, 0x6ae54d683381d586 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x99353b97659b2fe9 # load x3 with value 0x99353b97659b2fe9
sw x3, 0(x2) # store 0x99353b97659b2fe9 in memory
flh f5, 0(x2) # load 0x99353b97659b2fe9 from memory into f5
li x3, 0xe9bc4d0a897821e9 # load x3 with value 0xe9bc4d0a897821e9
sw x3, 0(x2) # store 0xe9bc4d0a897821e9 in memory
flh f27, 0(x2) # load 0xe9bc4d0a897821e9 from memory into f27
li x3, 0x7d522354bb6344c4 # load x3 with value 0x7d522354bb6344c4
sw x3, 0(x2) # store 0x7d522354bb6344c4 in memory
flh f9, 0(x2) # load 0x7d522354bb6344c4 from memory into f9
fnmadd.h f5, f5, f27, f9 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f6)
li x6, 0xd4d5b9f5acc5176b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x8f1c60bed07f7fb6 # load x3 with value 0x8f1c60bed07f7fb6
sw x3, 0(x2) # store 0x8f1c60bed07f7fb6 in memory
flh f6, 0(x2) # load 0x8f1c60bed07f7fb6 from memory into f6
li x3, 0xa5f703f54be7c0c6 # load x3 with value 0xa5f703f54be7c0c6
sw x3, 0(x2) # store 0xa5f703f54be7c0c6 in memory
flh f4, 0(x2) # load 0xa5f703f54be7c0c6 from memory into f4
li x3, 0xab4b29b25242d0a1 # load x3 with value 0xab4b29b25242d0a1
sw x3, 0(x2) # store 0xab4b29b25242d0a1 in memory
flh f20, 0(x2) # load 0xab4b29b25242d0a1 from memory into f20
fnmadd.h f6, f6, f4, f20 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f7)
li x7, 0xd7e4e0744021663d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x958e7c7dbdeada22 # load x3 with value 0x958e7c7dbdeada22
sw x3, 0(x2) # store 0x958e7c7dbdeada22 in memory
flh f7, 0(x2) # load 0x958e7c7dbdeada22 from memory into f7
li x3, 0x72163a93dcc16bb # load x3 with value 0x72163a93dcc16bb
sw x3, 0(x2) # store 0x72163a93dcc16bb in memory
flh f22, 0(x2) # load 0x72163a93dcc16bb from memory into f22
li x3, 0xa41baa335545b003 # load x3 with value 0xa41baa335545b003
sw x3, 0(x2) # store 0xa41baa335545b003 in memory
flh f29, 0(x2) # load 0xa41baa335545b003 from memory into f29
fnmadd.h f7, f7, f22, f29 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f8)
li x8, 0x17b5b51e838edc6b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xfb7207f66497d199 # load x3 with value 0xfb7207f66497d199
sw x3, 0(x2) # store 0xfb7207f66497d199 in memory
flh f8, 0(x2) # load 0xfb7207f66497d199 from memory into f8
li x3, 0x90b0bacc84cad42e # load x3 with value 0x90b0bacc84cad42e
sw x3, 0(x2) # store 0x90b0bacc84cad42e in memory
flh f11, 0(x2) # load 0x90b0bacc84cad42e from memory into f11
li x3, 0x9424b8f07d25ee51 # load x3 with value 0x9424b8f07d25ee51
sw x3, 0(x2) # store 0x9424b8f07d25ee51 in memory
flh f25, 0(x2) # load 0x9424b8f07d25ee51 from memory into f25
fnmadd.h f8, f8, f11, f25 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f9)
li x9, 0xe792005b6804b34b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x71441e8c4cb02dfd # load x3 with value 0x71441e8c4cb02dfd
sw x3, 0(x2) # store 0x71441e8c4cb02dfd in memory
flh f9, 0(x2) # load 0x71441e8c4cb02dfd from memory into f9
li x3, 0x958cdce24f4281e4 # load x3 with value 0x958cdce24f4281e4
sw x3, 0(x2) # store 0x958cdce24f4281e4 in memory
flh f4, 0(x2) # load 0x958cdce24f4281e4 from memory into f4
li x3, 0xd96749e580ea044d # load x3 with value 0xd96749e580ea044d
sw x3, 0(x2) # store 0xd96749e580ea044d in memory
flh f20, 0(x2) # load 0xd96749e580ea044d from memory into f20
fnmadd.h f9, f9, f4, f20 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f10)
li x10, 0x6a0d4d7147d1b6b1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbd3bde9543e759ad # load x3 with value 0xbd3bde9543e759ad
sw x3, 0(x2) # store 0xbd3bde9543e759ad in memory
flh f10, 0(x2) # load 0xbd3bde9543e759ad from memory into f10
li x3, 0x1e7396b11c093f46 # load x3 with value 0x1e7396b11c093f46
sw x3, 0(x2) # store 0x1e7396b11c093f46 in memory
flh f10, 0(x2) # load 0x1e7396b11c093f46 from memory into f10
li x3, 0xe00da1c66c7c02d8 # load x3 with value 0xe00da1c66c7c02d8
sw x3, 0(x2) # store 0xe00da1c66c7c02d8 in memory
flh f8, 0(x2) # load 0xe00da1c66c7c02d8 from memory into f8
fnmadd.h f10, f10, f10, f8 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f11)
li x11, 0x43641f7868461f9a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x16b155fc039ff845 # load x3 with value 0x16b155fc039ff845
sw x3, 0(x2) # store 0x16b155fc039ff845 in memory
flh f11, 0(x2) # load 0x16b155fc039ff845 from memory into f11
li x3, 0x94ad222c7e849eb7 # load x3 with value 0x94ad222c7e849eb7
sw x3, 0(x2) # store 0x94ad222c7e849eb7 in memory
flh f9, 0(x2) # load 0x94ad222c7e849eb7 from memory into f9
li x3, 0x486454765a28fea1 # load x3 with value 0x486454765a28fea1
sw x3, 0(x2) # store 0x486454765a28fea1 in memory
flh f16, 0(x2) # load 0x486454765a28fea1 from memory into f16
fnmadd.h f11, f11, f9, f16 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f12)
li x12, 0xd1368f3b66af13d0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xf4e36a7a27911ffb # load x3 with value 0xf4e36a7a27911ffb
sw x3, 0(x2) # store 0xf4e36a7a27911ffb in memory
flh f12, 0(x2) # load 0xf4e36a7a27911ffb from memory into f12
li x3, 0x5b1524d20b709ab3 # load x3 with value 0x5b1524d20b709ab3
sw x3, 0(x2) # store 0x5b1524d20b709ab3 in memory
flh f18, 0(x2) # load 0x5b1524d20b709ab3 from memory into f18
li x3, 0xfb77ceb1618515a7 # load x3 with value 0xfb77ceb1618515a7
sw x3, 0(x2) # store 0xfb77ceb1618515a7 in memory
flh f31, 0(x2) # load 0xfb77ceb1618515a7 from memory into f31
fnmadd.h f12, f12, f18, f31 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f13)
li x13, 0x540b490cdcfed88f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x84a01fe7c6e60a5b # load x3 with value 0x84a01fe7c6e60a5b
sw x3, 0(x2) # store 0x84a01fe7c6e60a5b in memory
flh f13, 0(x2) # load 0x84a01fe7c6e60a5b from memory into f13
li x3, 0x22ec74699b53752 # load x3 with value 0x22ec74699b53752
sw x3, 0(x2) # store 0x22ec74699b53752 in memory
flh f23, 0(x2) # load 0x22ec74699b53752 from memory into f23
li x3, 0x185281dda9657d04 # load x3 with value 0x185281dda9657d04
sw x3, 0(x2) # store 0x185281dda9657d04 in memory
flh f11, 0(x2) # load 0x185281dda9657d04 from memory into f11
fnmadd.h f13, f13, f23, f11 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f14)
li x14, 0x1a76103abbb31963 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x8bd8ab0eef1291ea # load x3 with value 0x8bd8ab0eef1291ea
sw x3, 0(x2) # store 0x8bd8ab0eef1291ea in memory
flh f14, 0(x2) # load 0x8bd8ab0eef1291ea from memory into f14
li x3, 0x28a640385c0371b6 # load x3 with value 0x28a640385c0371b6
sw x3, 0(x2) # store 0x28a640385c0371b6 in memory
flh f4, 0(x2) # load 0x28a640385c0371b6 from memory into f4
li x3, 0x79fa102a7a357e33 # load x3 with value 0x79fa102a7a357e33
sw x3, 0(x2) # store 0x79fa102a7a357e33 in memory
flh f30, 0(x2) # load 0x79fa102a7a357e33 from memory into f30
fnmadd.h f14, f14, f4, f30 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f15)
li x15, 0x71894faddcffd336 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x11b5eb55190499e9 # load x3 with value 0x11b5eb55190499e9
sw x3, 0(x2) # store 0x11b5eb55190499e9 in memory
flh f15, 0(x2) # load 0x11b5eb55190499e9 from memory into f15
li x3, 0xf466022a32fef4c8 # load x3 with value 0xf466022a32fef4c8
sw x3, 0(x2) # store 0xf466022a32fef4c8 in memory
flh f29, 0(x2) # load 0xf466022a32fef4c8 from memory into f29
li x3, 0xf6e0d28b04edef5 # load x3 with value 0xf6e0d28b04edef5
sw x3, 0(x2) # store 0xf6e0d28b04edef5 in memory
flh f28, 0(x2) # load 0xf6e0d28b04edef5 from memory into f28
fnmadd.h f15, f15, f29, f28 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f16)
li x16, 0x73d7ff93b61394e7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x69e933fb2a99e437 # load x3 with value 0x69e933fb2a99e437
sw x3, 0(x2) # store 0x69e933fb2a99e437 in memory
flh f16, 0(x2) # load 0x69e933fb2a99e437 from memory into f16
li x3, 0x86b36b25f5dc495f # load x3 with value 0x86b36b25f5dc495f
sw x3, 0(x2) # store 0x86b36b25f5dc495f in memory
flh f2, 0(x2) # load 0x86b36b25f5dc495f from memory into f2
li x3, 0x7945a413dd5c1f37 # load x3 with value 0x7945a413dd5c1f37
sw x3, 0(x2) # store 0x7945a413dd5c1f37 in memory
flh f6, 0(x2) # load 0x7945a413dd5c1f37 from memory into f6
fnmadd.h f16, f16, f2, f6 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f17)
li x17, 0xd15618bc6cccdd62 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xf88207f69424c8d5 # load x3 with value 0xf88207f69424c8d5
sw x3, 0(x2) # store 0xf88207f69424c8d5 in memory
flh f17, 0(x2) # load 0xf88207f69424c8d5 from memory into f17
li x3, 0xc7cebad8d4cee3c7 # load x3 with value 0xc7cebad8d4cee3c7
sw x3, 0(x2) # store 0xc7cebad8d4cee3c7 in memory
flh f24, 0(x2) # load 0xc7cebad8d4cee3c7 from memory into f24
li x3, 0xcaa27d35a9dc8e97 # load x3 with value 0xcaa27d35a9dc8e97
sw x3, 0(x2) # store 0xcaa27d35a9dc8e97 in memory
flh f15, 0(x2) # load 0xcaa27d35a9dc8e97 from memory into f15
fnmadd.h f17, f17, f24, f15 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f18)
li x18, 0x5420f992bce38691 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xd2d365891dea986c # load x3 with value 0xd2d365891dea986c
sw x3, 0(x2) # store 0xd2d365891dea986c in memory
flh f18, 0(x2) # load 0xd2d365891dea986c from memory into f18
li x3, 0x1455b2d7fe83d2a3 # load x3 with value 0x1455b2d7fe83d2a3
sw x3, 0(x2) # store 0x1455b2d7fe83d2a3 in memory
flh f15, 0(x2) # load 0x1455b2d7fe83d2a3 from memory into f15
li x3, 0x48e0e30495811b00 # load x3 with value 0x48e0e30495811b00
sw x3, 0(x2) # store 0x48e0e30495811b00 in memory
flh f8, 0(x2) # load 0x48e0e30495811b00 from memory into f8
fnmadd.h f18, f18, f15, f8 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f19)
li x19, 0xccb1fa2e5f59ec2d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7e080b242a1da738 # load x3 with value 0x7e080b242a1da738
sw x3, 0(x2) # store 0x7e080b242a1da738 in memory
flh f19, 0(x2) # load 0x7e080b242a1da738 from memory into f19
li x3, 0x461d207400be5dde # load x3 with value 0x461d207400be5dde
sw x3, 0(x2) # store 0x461d207400be5dde in memory
flh f30, 0(x2) # load 0x461d207400be5dde from memory into f30
li x3, 0x7f46a7597a608e19 # load x3 with value 0x7f46a7597a608e19
sw x3, 0(x2) # store 0x7f46a7597a608e19 in memory
flh f25, 0(x2) # load 0x7f46a7597a608e19 from memory into f25
fnmadd.h f19, f19, f30, f25 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f20)
li x20, 0xc78fcf677781336d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x86042dcf7e3f8a5d # load x3 with value 0x86042dcf7e3f8a5d
sw x3, 0(x2) # store 0x86042dcf7e3f8a5d in memory
flh f20, 0(x2) # load 0x86042dcf7e3f8a5d from memory into f20
li x3, 0x689c4535cb608ce6 # load x3 with value 0x689c4535cb608ce6
sw x3, 0(x2) # store 0x689c4535cb608ce6 in memory
flh f31, 0(x2) # load 0x689c4535cb608ce6 from memory into f31
li x3, 0xd75c5b854bab1cd0 # load x3 with value 0xd75c5b854bab1cd0
sw x3, 0(x2) # store 0xd75c5b854bab1cd0 in memory
flh f27, 0(x2) # load 0xd75c5b854bab1cd0 from memory into f27
fnmadd.h f20, f20, f31, f27 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f21)
li x21, 0x821ce24665dd31dd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa24ac80eb545f1b2 # load x3 with value 0xa24ac80eb545f1b2
sw x3, 0(x2) # store 0xa24ac80eb545f1b2 in memory
flh f21, 0(x2) # load 0xa24ac80eb545f1b2 from memory into f21
li x3, 0x84a4dd88663e9c08 # load x3 with value 0x84a4dd88663e9c08
sw x3, 0(x2) # store 0x84a4dd88663e9c08 in memory
flh f23, 0(x2) # load 0x84a4dd88663e9c08 from memory into f23
li x3, 0xdbfb09c82b470b02 # load x3 with value 0xdbfb09c82b470b02
sw x3, 0(x2) # store 0xdbfb09c82b470b02 in memory
flh f18, 0(x2) # load 0xdbfb09c82b470b02 from memory into f18
fnmadd.h f21, f21, f23, f18 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f22)
li x22, 0xbfa1cb2d31bf521c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fd9f259da985d43 # load x3 with value 0x3fd9f259da985d43
sw x3, 0(x2) # store 0x3fd9f259da985d43 in memory
flh f22, 0(x2) # load 0x3fd9f259da985d43 from memory into f22
li x3, 0xe507b0dba0a36cab # load x3 with value 0xe507b0dba0a36cab
sw x3, 0(x2) # store 0xe507b0dba0a36cab in memory
flh f13, 0(x2) # load 0xe507b0dba0a36cab from memory into f13
li x3, 0xa59b0a8ba8a0572c # load x3 with value 0xa59b0a8ba8a0572c
sw x3, 0(x2) # store 0xa59b0a8ba8a0572c in memory
flh f5, 0(x2) # load 0xa59b0a8ba8a0572c from memory into f5
fnmadd.h f22, f22, f13, f5 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f23)
li x23, 0xddcb082d5ae9b9dd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xf0ca4eafeeeaf8be # load x3 with value 0xf0ca4eafeeeaf8be
sw x3, 0(x2) # store 0xf0ca4eafeeeaf8be in memory
flh f23, 0(x2) # load 0xf0ca4eafeeeaf8be from memory into f23
li x3, 0x3bd37f5bd2a41bdd # load x3 with value 0x3bd37f5bd2a41bdd
sw x3, 0(x2) # store 0x3bd37f5bd2a41bdd in memory
flh f17, 0(x2) # load 0x3bd37f5bd2a41bdd from memory into f17
li x3, 0x695c3b9b9bc166aa # load x3 with value 0x695c3b9b9bc166aa
sw x3, 0(x2) # store 0x695c3b9b9bc166aa in memory
flh f27, 0(x2) # load 0x695c3b9b9bc166aa from memory into f27
fnmadd.h f23, f23, f17, f27 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f24)
li x24, 0x7c288dae00cfd13a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x89e13b99958c9459 # load x3 with value 0x89e13b99958c9459
sw x3, 0(x2) # store 0x89e13b99958c9459 in memory
flh f24, 0(x2) # load 0x89e13b99958c9459 from memory into f24
li x3, 0xd8fcda137fb50cb7 # load x3 with value 0xd8fcda137fb50cb7
sw x3, 0(x2) # store 0xd8fcda137fb50cb7 in memory
flh f3, 0(x2) # load 0xd8fcda137fb50cb7 from memory into f3
li x3, 0xc121b2b59725c0fd # load x3 with value 0xc121b2b59725c0fd
sw x3, 0(x2) # store 0xc121b2b59725c0fd in memory
flh f8, 0(x2) # load 0xc121b2b59725c0fd from memory into f8
fnmadd.h f24, f24, f3, f8 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f25)
li x25, 0x0396799f426114ab # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xaf82a0039b80b6e0 # load x3 with value 0xaf82a0039b80b6e0
sw x3, 0(x2) # store 0xaf82a0039b80b6e0 in memory
flh f25, 0(x2) # load 0xaf82a0039b80b6e0 from memory into f25
li x3, 0x81143d5c3980b44a # load x3 with value 0x81143d5c3980b44a
sw x3, 0(x2) # store 0x81143d5c3980b44a in memory
flh f23, 0(x2) # load 0x81143d5c3980b44a from memory into f23
li x3, 0x76cfe90ff6835c00 # load x3 with value 0x76cfe90ff6835c00
sw x3, 0(x2) # store 0x76cfe90ff6835c00 in memory
flh f21, 0(x2) # load 0x76cfe90ff6835c00 from memory into f21
fnmadd.h f25, f25, f23, f21 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f26)
li x26, 0x4a87fbbf8a6ada6d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xe5ab8b2eb82c320d # load x3 with value 0xe5ab8b2eb82c320d
sw x3, 0(x2) # store 0xe5ab8b2eb82c320d in memory
flh f26, 0(x2) # load 0xe5ab8b2eb82c320d from memory into f26
li x3, 0x7d6234867bf8a79c # load x3 with value 0x7d6234867bf8a79c
sw x3, 0(x2) # store 0x7d6234867bf8a79c in memory
flh f13, 0(x2) # load 0x7d6234867bf8a79c from memory into f13
li x3, 0xaeae528dcc7f77b5 # load x3 with value 0xaeae528dcc7f77b5
sw x3, 0(x2) # store 0xaeae528dcc7f77b5 in memory
flh f7, 0(x2) # load 0xaeae528dcc7f77b5 from memory into f7
fnmadd.h f26, f26, f13, f7 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f27)
li x27, 0x137efdbebfae6e21 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x8d99b0438bee65c5 # load x3 with value 0x8d99b0438bee65c5
sw x3, 0(x2) # store 0x8d99b0438bee65c5 in memory
flh f27, 0(x2) # load 0x8d99b0438bee65c5 from memory into f27
li x3, 0x69a210601a6f2215 # load x3 with value 0x69a210601a6f2215
sw x3, 0(x2) # store 0x69a210601a6f2215 in memory
flh f14, 0(x2) # load 0x69a210601a6f2215 from memory into f14
li x3, 0x76c8f335d05d41ce # load x3 with value 0x76c8f335d05d41ce
sw x3, 0(x2) # store 0x76c8f335d05d41ce in memory
flh f24, 0(x2) # load 0x76c8f335d05d41ce from memory into f24
fnmadd.h f27, f27, f14, f24 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f28)
li x28, 0xc7900cff8172bf31 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xafe95edb394cd734 # load x3 with value 0xafe95edb394cd734
sw x3, 0(x2) # store 0xafe95edb394cd734 in memory
flh f28, 0(x2) # load 0xafe95edb394cd734 from memory into f28
li x3, 0x87e5cedd78117ab5 # load x3 with value 0x87e5cedd78117ab5
sw x3, 0(x2) # store 0x87e5cedd78117ab5 in memory
flh f2, 0(x2) # load 0x87e5cedd78117ab5 from memory into f2
li x3, 0x66f67ab7e211d7c7 # load x3 with value 0x66f67ab7e211d7c7
sw x3, 0(x2) # store 0x66f67ab7e211d7c7 in memory
flh f20, 0(x2) # load 0x66f67ab7e211d7c7 from memory into f20
fnmadd.h f28, f28, f2, f20 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f29)
li x29, 0xce933d33436a8675 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x6d2d88d1b1035784 # load x3 with value 0x6d2d88d1b1035784
sw x3, 0(x2) # store 0x6d2d88d1b1035784 in memory
flh f29, 0(x2) # load 0x6d2d88d1b1035784 from memory into f29
li x3, 0x58b9e4e03f7b1292 # load x3 with value 0x58b9e4e03f7b1292
sw x3, 0(x2) # store 0x58b9e4e03f7b1292 in memory
flh f28, 0(x2) # load 0x58b9e4e03f7b1292 from memory into f28
li x3, 0x6e2845d55445bcf6 # load x3 with value 0x6e2845d55445bcf6
sw x3, 0(x2) # store 0x6e2845d55445bcf6 in memory
flh f7, 0(x2) # load 0x6e2845d55445bcf6 from memory into f7
fnmadd.h f29, f29, f28, f7 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f30)
li x30, 0x25ceb99193811794 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x4af4ee6b514906af # load x3 with value 0x4af4ee6b514906af
sw x3, 0(x2) # store 0x4af4ee6b514906af in memory
flh f30, 0(x2) # load 0x4af4ee6b514906af from memory into f30
li x3, 0xaa589f9cc9fc1efa # load x3 with value 0xaa589f9cc9fc1efa
sw x3, 0(x2) # store 0xaa589f9cc9fc1efa in memory
flh f23, 0(x2) # load 0xaa589f9cc9fc1efa from memory into f23
li x3, 0x4980d7f9ab8533 # load x3 with value 0x4980d7f9ab8533
sw x3, 0(x2) # store 0x4980d7f9ab8533 in memory
flh f31, 0(x2) # load 0x4980d7f9ab8533 from memory into f31
fnmadd.h f30, f30, f23, f31 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f31)
li x31, 0x2787de91cdbf53ab # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa0bf71988fe4e3a1 # load x3 with value 0xa0bf71988fe4e3a1
sw x3, 0(x2) # store 0xa0bf71988fe4e3a1 in memory
flh f31, 0(x2) # load 0xa0bf71988fe4e3a1 from memory into f31
li x3, 0x32847508743c3a96 # load x3 with value 0x32847508743c3a96
sw x3, 0(x2) # store 0x32847508743c3a96 in memory
flh f22, 0(x2) # load 0x32847508743c3a96 from memory into f22
li x3, 0x1683ccdd7c08eb98 # load x3 with value 0x1683ccdd7c08eb98
sw x3, 0(x2) # store 0x1683ccdd7c08eb98 in memory
flh f10, 0(x2) # load 0x1683ccdd7c08eb98 from memory into f10
fnmadd.h f31, f31, f22, f10 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f0)
li x0, 0x4973697258fa5170 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80727adb27266c63 # load x3 with value 0x80727adb27266c63
sw x3, 0(x2) # store 0x80727adb27266c63 in memory
flh f18, 0(x2) # load 0x80727adb27266c63 from memory into f18
li x3, 0x807d407f241ca81c # load x3 with value 0x807d407f241ca81c
sw x3, 0(x2) # store 0x807d407f241ca81c in memory
flh f0, 0(x2) # load 0x807d407f241ca81c from memory into f0
li x3, 0x4eae1e691582eb9e # load x3 with value 0x4eae1e691582eb9e
sw x3, 0(x2) # store 0x4eae1e691582eb9e in memory
flh f21, 0(x2) # load 0x4eae1e691582eb9e from memory into f21
fnmadd.h f0, f18, f0, f21 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f1)
li x1, 0x83de987919d445c7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa33406118c2f95e8 # load x3 with value 0xa33406118c2f95e8
sw x3, 0(x2) # store 0xa33406118c2f95e8 in memory
flh f27, 0(x2) # load 0xa33406118c2f95e8 from memory into f27
li x3, 0x23830bec0f73e52a # load x3 with value 0x23830bec0f73e52a
sw x3, 0(x2) # store 0x23830bec0f73e52a in memory
flh f1, 0(x2) # load 0x23830bec0f73e52a from memory into f1
li x3, 0xc7db3d5f4752bb69 # load x3 with value 0xc7db3d5f4752bb69
sw x3, 0(x2) # store 0xc7db3d5f4752bb69 in memory
flh f17, 0(x2) # load 0xc7db3d5f4752bb69 from memory into f17
fnmadd.h f1, f27, f1, f17 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f2)
li x2, 0x432d52ae486ef111 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x371fd96c2114ca0b # load x3 with value 0x371fd96c2114ca0b
sw x3, 0(x2) # store 0x371fd96c2114ca0b in memory
flh f2, 0(x2) # load 0x371fd96c2114ca0b from memory into f2
li x3, 0x4c4a1900d95c76f # load x3 with value 0x4c4a1900d95c76f
sw x3, 0(x2) # store 0x4c4a1900d95c76f in memory
flh f2, 0(x2) # load 0x4c4a1900d95c76f from memory into f2
li x3, 0xb2c3e07bf2a8a7d2 # load x3 with value 0xb2c3e07bf2a8a7d2
sw x3, 0(x2) # store 0xb2c3e07bf2a8a7d2 in memory
flh f21, 0(x2) # load 0xb2c3e07bf2a8a7d2 from memory into f21
fnmadd.h f2, f2, f2, f21 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f3)
li x3, 0x8002c8643f45eebe # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x2b94b67649fc9c1e # load x3 with value 0x2b94b67649fc9c1e
sw x3, 0(x2) # store 0x2b94b67649fc9c1e in memory
flh f9, 0(x2) # load 0x2b94b67649fc9c1e from memory into f9
li x3, 0xaec74a47e20454c0 # load x3 with value 0xaec74a47e20454c0
sw x3, 0(x2) # store 0xaec74a47e20454c0 in memory
flh f3, 0(x2) # load 0xaec74a47e20454c0 from memory into f3
li x3, 0xdd58db032034235c # load x3 with value 0xdd58db032034235c
sw x3, 0(x2) # store 0xdd58db032034235c in memory
flh f31, 0(x2) # load 0xdd58db032034235c from memory into f31
fnmadd.h f3, f9, f3, f31 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f4)
li x4, 0x1dd1be0ffbf7ef04 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x1a7ef161c198d249 # load x3 with value 0x1a7ef161c198d249
sw x3, 0(x2) # store 0x1a7ef161c198d249 in memory
flh f21, 0(x2) # load 0x1a7ef161c198d249 from memory into f21
li x3, 0xd318ff419ce0b3df # load x3 with value 0xd318ff419ce0b3df
sw x3, 0(x2) # store 0xd318ff419ce0b3df in memory
flh f4, 0(x2) # load 0xd318ff419ce0b3df from memory into f4
li x3, 0x2023d9fca456d337 # load x3 with value 0x2023d9fca456d337
sw x3, 0(x2) # store 0x2023d9fca456d337 in memory
flh f10, 0(x2) # load 0x2023d9fca456d337 from memory into f10
fnmadd.h f4, f21, f4, f10 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f5)
li x5, 0x8c17ba031061fba0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x952ee8e267b6ed75 # load x3 with value 0x952ee8e267b6ed75
sw x3, 0(x2) # store 0x952ee8e267b6ed75 in memory
flh f21, 0(x2) # load 0x952ee8e267b6ed75 from memory into f21
li x3, 0xf2b28a800cb6b2b5 # load x3 with value 0xf2b28a800cb6b2b5
sw x3, 0(x2) # store 0xf2b28a800cb6b2b5 in memory
flh f5, 0(x2) # load 0xf2b28a800cb6b2b5 from memory into f5
li x3, 0xf35593f89b32a8c2 # load x3 with value 0xf35593f89b32a8c2
sw x3, 0(x2) # store 0xf35593f89b32a8c2 in memory
flh f23, 0(x2) # load 0xf35593f89b32a8c2 from memory into f23
fnmadd.h f5, f21, f5, f23 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f6)
li x6, 0xee396bd76b520706 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xb57afc1394a87575 # load x3 with value 0xb57afc1394a87575
sw x3, 0(x2) # store 0xb57afc1394a87575 in memory
flh f4, 0(x2) # load 0xb57afc1394a87575 from memory into f4
li x3, 0xa87b61a903050fe8 # load x3 with value 0xa87b61a903050fe8
sw x3, 0(x2) # store 0xa87b61a903050fe8 in memory
flh f6, 0(x2) # load 0xa87b61a903050fe8 from memory into f6
li x3, 0xc5750de0dd84719 # load x3 with value 0xc5750de0dd84719
sw x3, 0(x2) # store 0xc5750de0dd84719 in memory
flh f14, 0(x2) # load 0xc5750de0dd84719 from memory into f14
fnmadd.h f6, f4, f6, f14 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f7)
li x7, 0x294629dafcfb74fa # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x1e591c7d08fb728 # load x3 with value 0x1e591c7d08fb728
sw x3, 0(x2) # store 0x1e591c7d08fb728 in memory
flh f6, 0(x2) # load 0x1e591c7d08fb728 from memory into f6
li x3, 0x81591a75d0935f27 # load x3 with value 0x81591a75d0935f27
sw x3, 0(x2) # store 0x81591a75d0935f27 in memory
flh f7, 0(x2) # load 0x81591a75d0935f27 from memory into f7
li x3, 0x6c87609eb378702c # load x3 with value 0x6c87609eb378702c
sw x3, 0(x2) # store 0x6c87609eb378702c in memory
flh f27, 0(x2) # load 0x6c87609eb378702c from memory into f27
fnmadd.h f7, f6, f7, f27 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f8)
li x8, 0xae0e30878d488b2d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc7bb3d49402832d1 # load x3 with value 0xc7bb3d49402832d1
sw x3, 0(x2) # store 0xc7bb3d49402832d1 in memory
flh f15, 0(x2) # load 0xc7bb3d49402832d1 from memory into f15
li x3, 0xf8a585797d48d2ba # load x3 with value 0xf8a585797d48d2ba
sw x3, 0(x2) # store 0xf8a585797d48d2ba in memory
flh f8, 0(x2) # load 0xf8a585797d48d2ba from memory into f8
li x3, 0x20b3f125a505f1a # load x3 with value 0x20b3f125a505f1a
sw x3, 0(x2) # store 0x20b3f125a505f1a in memory
flh f23, 0(x2) # load 0x20b3f125a505f1a from memory into f23
fnmadd.h f8, f15, f8, f23 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f9)
li x9, 0xe6720cedc8049078 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xe54fae21ecd30776 # load x3 with value 0xe54fae21ecd30776
sw x3, 0(x2) # store 0xe54fae21ecd30776 in memory
flh f6, 0(x2) # load 0xe54fae21ecd30776 from memory into f6
li x3, 0x201299578378e40f # load x3 with value 0x201299578378e40f
sw x3, 0(x2) # store 0x201299578378e40f in memory
flh f9, 0(x2) # load 0x201299578378e40f from memory into f9
li x3, 0x847a70078fee52bc # load x3 with value 0x847a70078fee52bc
sw x3, 0(x2) # store 0x847a70078fee52bc in memory
flh f29, 0(x2) # load 0x847a70078fee52bc from memory into f29
fnmadd.h f9, f6, f9, f29 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f10)
li x10, 0xea889035835587fb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x39ddd5f8db5b21e1 # load x3 with value 0x39ddd5f8db5b21e1
sw x3, 0(x2) # store 0x39ddd5f8db5b21e1 in memory
flh f22, 0(x2) # load 0x39ddd5f8db5b21e1 from memory into f22
li x3, 0x1723ea01d2eb3134 # load x3 with value 0x1723ea01d2eb3134
sw x3, 0(x2) # store 0x1723ea01d2eb3134 in memory
flh f10, 0(x2) # load 0x1723ea01d2eb3134 from memory into f10
li x3, 0x7618fd2a7a64cf48 # load x3 with value 0x7618fd2a7a64cf48
sw x3, 0(x2) # store 0x7618fd2a7a64cf48 in memory
flh f1, 0(x2) # load 0x7618fd2a7a64cf48 from memory into f1
fnmadd.h f10, f22, f10, f1 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f11)
li x11, 0x84f85d1f56f133e4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x553b00b6e7db0f85 # load x3 with value 0x553b00b6e7db0f85
sw x3, 0(x2) # store 0x553b00b6e7db0f85 in memory
flh f9, 0(x2) # load 0x553b00b6e7db0f85 from memory into f9
li x3, 0x982af75cfb3a6a36 # load x3 with value 0x982af75cfb3a6a36
sw x3, 0(x2) # store 0x982af75cfb3a6a36 in memory
flh f11, 0(x2) # load 0x982af75cfb3a6a36 from memory into f11
li x3, 0x1e7e7747bedc5a48 # load x3 with value 0x1e7e7747bedc5a48
sw x3, 0(x2) # store 0x1e7e7747bedc5a48 in memory
flh f25, 0(x2) # load 0x1e7e7747bedc5a48 from memory into f25
fnmadd.h f11, f9, f11, f25 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f12)
li x12, 0x962e825a8f73032f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x2d38d47c460329a4 # load x3 with value 0x2d38d47c460329a4
sw x3, 0(x2) # store 0x2d38d47c460329a4 in memory
flh f23, 0(x2) # load 0x2d38d47c460329a4 from memory into f23
li x3, 0x24cc6eac00559528 # load x3 with value 0x24cc6eac00559528
sw x3, 0(x2) # store 0x24cc6eac00559528 in memory
flh f12, 0(x2) # load 0x24cc6eac00559528 from memory into f12
li x3, 0x350f585b41e508a7 # load x3 with value 0x350f585b41e508a7
sw x3, 0(x2) # store 0x350f585b41e508a7 in memory
flh f24, 0(x2) # load 0x350f585b41e508a7 from memory into f24
fnmadd.h f12, f23, f12, f24 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f13)
li x13, 0x5a3970c5a92cdf56 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x201520471f26fb2b # load x3 with value 0x201520471f26fb2b
sw x3, 0(x2) # store 0x201520471f26fb2b in memory
flh f4, 0(x2) # load 0x201520471f26fb2b from memory into f4
li x3, 0xa9aebb6bb588f824 # load x3 with value 0xa9aebb6bb588f824
sw x3, 0(x2) # store 0xa9aebb6bb588f824 in memory
flh f13, 0(x2) # load 0xa9aebb6bb588f824 from memory into f13
li x3, 0x1bb2536f0bc6f41f # load x3 with value 0x1bb2536f0bc6f41f
sw x3, 0(x2) # store 0x1bb2536f0bc6f41f in memory
flh f30, 0(x2) # load 0x1bb2536f0bc6f41f from memory into f30
fnmadd.h f13, f4, f13, f30 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f14)
li x14, 0x283446856d992d81 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x74394cfb5821292e # load x3 with value 0x74394cfb5821292e
sw x3, 0(x2) # store 0x74394cfb5821292e in memory
flh f26, 0(x2) # load 0x74394cfb5821292e from memory into f26
li x3, 0x96e76cb5af9e8993 # load x3 with value 0x96e76cb5af9e8993
sw x3, 0(x2) # store 0x96e76cb5af9e8993 in memory
flh f14, 0(x2) # load 0x96e76cb5af9e8993 from memory into f14
li x3, 0xefb63d6da4898045 # load x3 with value 0xefb63d6da4898045
sw x3, 0(x2) # store 0xefb63d6da4898045 in memory
flh f24, 0(x2) # load 0xefb63d6da4898045 from memory into f24
fnmadd.h f14, f26, f14, f24 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f15)
li x15, 0x6804c7830ef7a10a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xe845f8a862ea31df # load x3 with value 0xe845f8a862ea31df
sw x3, 0(x2) # store 0xe845f8a862ea31df in memory
flh f16, 0(x2) # load 0xe845f8a862ea31df from memory into f16
li x3, 0x7d467f9419ef083f # load x3 with value 0x7d467f9419ef083f
sw x3, 0(x2) # store 0x7d467f9419ef083f in memory
flh f15, 0(x2) # load 0x7d467f9419ef083f from memory into f15
li x3, 0xa5e71ce834d11d76 # load x3 with value 0xa5e71ce834d11d76
sw x3, 0(x2) # store 0xa5e71ce834d11d76 in memory
flh f5, 0(x2) # load 0xa5e71ce834d11d76 from memory into f5
fnmadd.h f15, f16, f15, f5 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f16)
li x16, 0x0251992d52c8828e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x69e747a7b3d8e1e5 # load x3 with value 0x69e747a7b3d8e1e5
sw x3, 0(x2) # store 0x69e747a7b3d8e1e5 in memory
flh f22, 0(x2) # load 0x69e747a7b3d8e1e5 from memory into f22
li x3, 0x70f3f791f05c335 # load x3 with value 0x70f3f791f05c335
sw x3, 0(x2) # store 0x70f3f791f05c335 in memory
flh f16, 0(x2) # load 0x70f3f791f05c335 from memory into f16
li x3, 0xbdc5d1c6619d68fc # load x3 with value 0xbdc5d1c6619d68fc
sw x3, 0(x2) # store 0xbdc5d1c6619d68fc in memory
flh f10, 0(x2) # load 0xbdc5d1c6619d68fc from memory into f10
fnmadd.h f16, f22, f16, f10 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f17)
li x17, 0xd0a5abe19b24fc5f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x5ac87ca390214ddd # load x3 with value 0x5ac87ca390214ddd
sw x3, 0(x2) # store 0x5ac87ca390214ddd in memory
flh f1, 0(x2) # load 0x5ac87ca390214ddd from memory into f1
li x3, 0xa0727e78724ae266 # load x3 with value 0xa0727e78724ae266
sw x3, 0(x2) # store 0xa0727e78724ae266 in memory
flh f17, 0(x2) # load 0xa0727e78724ae266 from memory into f17
li x3, 0xb2b78296f62eb946 # load x3 with value 0xb2b78296f62eb946
sw x3, 0(x2) # store 0xb2b78296f62eb946 in memory
flh f26, 0(x2) # load 0xb2b78296f62eb946 from memory into f26
fnmadd.h f17, f1, f17, f26 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f18)
li x18, 0xdefbfa50a55a633f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x49d6535d0d5e5916 # load x3 with value 0x49d6535d0d5e5916
sw x3, 0(x2) # store 0x49d6535d0d5e5916 in memory
flh f17, 0(x2) # load 0x49d6535d0d5e5916 from memory into f17
li x3, 0xc59d0dff30ec2109 # load x3 with value 0xc59d0dff30ec2109
sw x3, 0(x2) # store 0xc59d0dff30ec2109 in memory
flh f18, 0(x2) # load 0xc59d0dff30ec2109 from memory into f18
li x3, 0x386a469f3fbbfca5 # load x3 with value 0x386a469f3fbbfca5
sw x3, 0(x2) # store 0x386a469f3fbbfca5 in memory
flh f20, 0(x2) # load 0x386a469f3fbbfca5 from memory into f20
fnmadd.h f18, f17, f18, f20 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f19)
li x19, 0x44e6f10e082cf681 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xe0e378a1f99429d7 # load x3 with value 0xe0e378a1f99429d7
sw x3, 0(x2) # store 0xe0e378a1f99429d7 in memory
flh f22, 0(x2) # load 0xe0e378a1f99429d7 from memory into f22
li x3, 0x56d13f12e909a2b8 # load x3 with value 0x56d13f12e909a2b8
sw x3, 0(x2) # store 0x56d13f12e909a2b8 in memory
flh f19, 0(x2) # load 0x56d13f12e909a2b8 from memory into f19
li x3, 0x59fa30eb9f8185f0 # load x3 with value 0x59fa30eb9f8185f0
sw x3, 0(x2) # store 0x59fa30eb9f8185f0 in memory
flh f7, 0(x2) # load 0x59fa30eb9f8185f0 from memory into f7
fnmadd.h f19, f22, f19, f7 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f20)
li x20, 0x981bfc5205766201 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x20d53f75b9a01ff1 # load x3 with value 0x20d53f75b9a01ff1
sw x3, 0(x2) # store 0x20d53f75b9a01ff1 in memory
flh f25, 0(x2) # load 0x20d53f75b9a01ff1 from memory into f25
li x3, 0x65e78adbd2aaabae # load x3 with value 0x65e78adbd2aaabae
sw x3, 0(x2) # store 0x65e78adbd2aaabae in memory
flh f20, 0(x2) # load 0x65e78adbd2aaabae from memory into f20
li x3, 0xd0562935f9c1e6cf # load x3 with value 0xd0562935f9c1e6cf
sw x3, 0(x2) # store 0xd0562935f9c1e6cf in memory
flh f1, 0(x2) # load 0xd0562935f9c1e6cf from memory into f1
fnmadd.h f20, f25, f20, f1 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f21)
li x21, 0xcc5713f59a7ad634 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x1fc4c58a651df946 # load x3 with value 0x1fc4c58a651df946
sw x3, 0(x2) # store 0x1fc4c58a651df946 in memory
flh f10, 0(x2) # load 0x1fc4c58a651df946 from memory into f10
li x3, 0x780ac599d24c346c # load x3 with value 0x780ac599d24c346c
sw x3, 0(x2) # store 0x780ac599d24c346c in memory
flh f21, 0(x2) # load 0x780ac599d24c346c from memory into f21
li x3, 0xd0c7b73c00014d66 # load x3 with value 0xd0c7b73c00014d66
sw x3, 0(x2) # store 0xd0c7b73c00014d66 in memory
flh f19, 0(x2) # load 0xd0c7b73c00014d66 from memory into f19
fnmadd.h f21, f10, f21, f19 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f22)
li x22, 0x07e35ffbe8db0dd8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3519960131fa421d # load x3 with value 0x3519960131fa421d
sw x3, 0(x2) # store 0x3519960131fa421d in memory
flh f14, 0(x2) # load 0x3519960131fa421d from memory into f14
li x3, 0x2bb258e1dfdc9c9a # load x3 with value 0x2bb258e1dfdc9c9a
sw x3, 0(x2) # store 0x2bb258e1dfdc9c9a in memory
flh f22, 0(x2) # load 0x2bb258e1dfdc9c9a from memory into f22
li x3, 0x9a8338f97c256332 # load x3 with value 0x9a8338f97c256332
sw x3, 0(x2) # store 0x9a8338f97c256332 in memory
flh f25, 0(x2) # load 0x9a8338f97c256332 from memory into f25
fnmadd.h f22, f14, f22, f25 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f23)
li x23, 0x50804f6c7853e508 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x70e7cab03f539eb9 # load x3 with value 0x70e7cab03f539eb9
sw x3, 0(x2) # store 0x70e7cab03f539eb9 in memory
flh f22, 0(x2) # load 0x70e7cab03f539eb9 from memory into f22
li x3, 0xcaa51443d075cd83 # load x3 with value 0xcaa51443d075cd83
sw x3, 0(x2) # store 0xcaa51443d075cd83 in memory
flh f23, 0(x2) # load 0xcaa51443d075cd83 from memory into f23
li x3, 0xe6c7fa22faa2aaee # load x3 with value 0xe6c7fa22faa2aaee
sw x3, 0(x2) # store 0xe6c7fa22faa2aaee in memory
flh f13, 0(x2) # load 0xe6c7fa22faa2aaee from memory into f13
fnmadd.h f23, f22, f23, f13 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f24)
li x24, 0x030723cd8f403ac5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x96a4152763aece91 # load x3 with value 0x96a4152763aece91
sw x3, 0(x2) # store 0x96a4152763aece91 in memory
flh f9, 0(x2) # load 0x96a4152763aece91 from memory into f9
li x3, 0xf58da18189abb1d9 # load x3 with value 0xf58da18189abb1d9
sw x3, 0(x2) # store 0xf58da18189abb1d9 in memory
flh f24, 0(x2) # load 0xf58da18189abb1d9 from memory into f24
li x3, 0xcbaf201e6e841416 # load x3 with value 0xcbaf201e6e841416
sw x3, 0(x2) # store 0xcbaf201e6e841416 in memory
flh f31, 0(x2) # load 0xcbaf201e6e841416 from memory into f31
fnmadd.h f24, f9, f24, f31 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f25)
li x25, 0xccf8053e7e802e82 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xcc582b041a6987bd # load x3 with value 0xcc582b041a6987bd
sw x3, 0(x2) # store 0xcc582b041a6987bd in memory
flh f4, 0(x2) # load 0xcc582b041a6987bd from memory into f4
li x3, 0xbc6ca2b99f58aaf4 # load x3 with value 0xbc6ca2b99f58aaf4
sw x3, 0(x2) # store 0xbc6ca2b99f58aaf4 in memory
flh f25, 0(x2) # load 0xbc6ca2b99f58aaf4 from memory into f25
li x3, 0xf460707e87826271 # load x3 with value 0xf460707e87826271
sw x3, 0(x2) # store 0xf460707e87826271 in memory
flh f6, 0(x2) # load 0xf460707e87826271 from memory into f6
fnmadd.h f25, f4, f25, f6 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f26)
li x26, 0x255d52733a3afd5e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x8d1fe0ce43ac1ce3 # load x3 with value 0x8d1fe0ce43ac1ce3
sw x3, 0(x2) # store 0x8d1fe0ce43ac1ce3 in memory
flh f16, 0(x2) # load 0x8d1fe0ce43ac1ce3 from memory into f16
li x3, 0x93184ec421a0ca48 # load x3 with value 0x93184ec421a0ca48
sw x3, 0(x2) # store 0x93184ec421a0ca48 in memory
flh f26, 0(x2) # load 0x93184ec421a0ca48 from memory into f26
li x3, 0x387dbe212527d5b8 # load x3 with value 0x387dbe212527d5b8
sw x3, 0(x2) # store 0x387dbe212527d5b8 in memory
flh f8, 0(x2) # load 0x387dbe212527d5b8 from memory into f8
fnmadd.h f26, f16, f26, f8 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f27)
li x27, 0x700823e92a388a12 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa4d936486aec96e7 # load x3 with value 0xa4d936486aec96e7
sw x3, 0(x2) # store 0xa4d936486aec96e7 in memory
flh f11, 0(x2) # load 0xa4d936486aec96e7 from memory into f11
li x3, 0x6d9695837bfa6a00 # load x3 with value 0x6d9695837bfa6a00
sw x3, 0(x2) # store 0x6d9695837bfa6a00 in memory
flh f27, 0(x2) # load 0x6d9695837bfa6a00 from memory into f27
li x3, 0x52d666676124d0fc # load x3 with value 0x52d666676124d0fc
sw x3, 0(x2) # store 0x52d666676124d0fc in memory
flh f15, 0(x2) # load 0x52d666676124d0fc from memory into f15
fnmadd.h f27, f11, f27, f15 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f28)
li x28, 0xedd080b343b58c07 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc089da195b577311 # load x3 with value 0xc089da195b577311
sw x3, 0(x2) # store 0xc089da195b577311 in memory
flh f2, 0(x2) # load 0xc089da195b577311 from memory into f2
li x3, 0x1f81f77e4d59928 # load x3 with value 0x1f81f77e4d59928
sw x3, 0(x2) # store 0x1f81f77e4d59928 in memory
flh f28, 0(x2) # load 0x1f81f77e4d59928 from memory into f28
li x3, 0x944b906b4e7d7e9a # load x3 with value 0x944b906b4e7d7e9a
sw x3, 0(x2) # store 0x944b906b4e7d7e9a in memory
flh f23, 0(x2) # load 0x944b906b4e7d7e9a from memory into f23
fnmadd.h f28, f2, f28, f23 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f29)
li x29, 0x0d94cbc64d403dff # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x245c2047d1cfd2b7 # load x3 with value 0x245c2047d1cfd2b7
sw x3, 0(x2) # store 0x245c2047d1cfd2b7 in memory
flh f10, 0(x2) # load 0x245c2047d1cfd2b7 from memory into f10
li x3, 0x9ebe67468163aa48 # load x3 with value 0x9ebe67468163aa48
sw x3, 0(x2) # store 0x9ebe67468163aa48 in memory
flh f29, 0(x2) # load 0x9ebe67468163aa48 from memory into f29
li x3, 0x1c2fe4f2e7146145 # load x3 with value 0x1c2fe4f2e7146145
sw x3, 0(x2) # store 0x1c2fe4f2e7146145 in memory
flh f24, 0(x2) # load 0x1c2fe4f2e7146145 from memory into f24
fnmadd.h f29, f10, f29, f24 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f30)
li x30, 0xbfdc349cd83c870c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x4b2877b96e6258fb # load x3 with value 0x4b2877b96e6258fb
sw x3, 0(x2) # store 0x4b2877b96e6258fb in memory
flh f26, 0(x2) # load 0x4b2877b96e6258fb from memory into f26
li x3, 0x8759f2ee24f7c95f # load x3 with value 0x8759f2ee24f7c95f
sw x3, 0(x2) # store 0x8759f2ee24f7c95f in memory
flh f30, 0(x2) # load 0x8759f2ee24f7c95f from memory into f30
li x3, 0x229e020fb7cf9f2c # load x3 with value 0x229e020fb7cf9f2c
sw x3, 0(x2) # store 0x229e020fb7cf9f2c in memory
flh f2, 0(x2) # load 0x229e020fb7cf9f2c from memory into f2
fnmadd.h f30, f26, f30, f2 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f31)
li x31, 0x1e6a05fc7cffca72 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x4c9a44147c25b7ff # load x3 with value 0x4c9a44147c25b7ff
sw x3, 0(x2) # store 0x4c9a44147c25b7ff in memory
flh f2, 0(x2) # load 0x4c9a44147c25b7ff from memory into f2
li x3, 0x87de61e410a29c90 # load x3 with value 0x87de61e410a29c90
sw x3, 0(x2) # store 0x87de61e410a29c90 in memory
flh f31, 0(x2) # load 0x87de61e410a29c90 from memory into f31
li x3, 0x9c2d36363334b793 # load x3 with value 0x9c2d36363334b793
sw x3, 0(x2) # store 0x9c2d36363334b793 in memory
flh f3, 0(x2) # load 0x9c2d36363334b793 from memory into f3
fnmadd.h f31, f2, f31, f3 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x0)
li x26, 0x858fa30d6dea55ac # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f29, 0(x2) # load 0x00000000 from memory into f29
li x3, 0x6370715e61a91788 # load x3 with value 0x6370715e61a91788
sw x3, 0(x2) # store 0x6370715e61a91788 in memory
flh f10, 0(x2) # load 0x6370715e61a91788 from memory into f10
li x3, 0x24e7e56557981ec2 # load x3 with value 0x24e7e56557981ec2
sw x3, 0(x2) # store 0x24e7e56557981ec2 in memory
flh f8, 0(x2) # load 0x24e7e56557981ec2 from memory into f8
fnmadd.h f26, f29, f10, f8 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x8000)
li x21, 0xd20648814eb25a8d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f2, 0(x2) # load 0x00008000 from memory into f2
li x3, 0xca9c0750cf3844f6 # load x3 with value 0xca9c0750cf3844f6
sw x3, 0(x2) # store 0xca9c0750cf3844f6 in memory
flh f28, 0(x2) # load 0xca9c0750cf3844f6 from memory into f28
li x3, 0xa60d07758027c00a # load x3 with value 0xa60d07758027c00a
sw x3, 0(x2) # store 0xa60d07758027c00a in memory
flh f31, 0(x2) # load 0xa60d07758027c00a from memory into f31
fnmadd.h f21, f2, f28, f31 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x3c00)
li x5, 0xcf377e0a61e25f48 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f14, 0(x2) # load 0x00003c00 from memory into f14
li x3, 0x677271cb8b57ebcd # load x3 with value 0x677271cb8b57ebcd
sw x3, 0(x2) # store 0x677271cb8b57ebcd in memory
flh f17, 0(x2) # load 0x677271cb8b57ebcd from memory into f17
li x3, 0x386fb7472dabe6e0 # load x3 with value 0x386fb7472dabe6e0
sw x3, 0(x2) # store 0x386fb7472dabe6e0 in memory
flh f26, 0(x2) # load 0x386fb7472dabe6e0 from memory into f26
fnmadd.h f5, f14, f17, f26 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0xbc00)
li x27, 0x44db43a658eb8f3c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f30, 0(x2) # load 0x0000bc00 from memory into f30
li x3, 0x4de932e2ca653c35 # load x3 with value 0x4de932e2ca653c35
sw x3, 0(x2) # store 0x4de932e2ca653c35 in memory
flh f9, 0(x2) # load 0x4de932e2ca653c35 from memory into f9
li x3, 0x25910478ee7accc1 # load x3 with value 0x25910478ee7accc1
sw x3, 0(x2) # store 0x25910478ee7accc1 in memory
flh f15, 0(x2) # load 0x25910478ee7accc1 from memory into f15
fnmadd.h f27, f30, f9, f15 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x3e00)
li x4, 0xfd6b2308d4638b37 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f5, 0(x2) # load 0x00003e00 from memory into f5
li x3, 0x92078f08a6eb77ad # load x3 with value 0x92078f08a6eb77ad
sw x3, 0(x2) # store 0x92078f08a6eb77ad in memory
flh f12, 0(x2) # load 0x92078f08a6eb77ad from memory into f12
li x3, 0x1689ea4691c3adc8 # load x3 with value 0x1689ea4691c3adc8
sw x3, 0(x2) # store 0x1689ea4691c3adc8 in memory
flh f17, 0(x2) # load 0x1689ea4691c3adc8 from memory into f17
fnmadd.h f4, f5, f12, f17 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0xbe00)
li x10, 0x95aaa7bd4bef3aed # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f1, 0(x2) # load 0x0000be00 from memory into f1
li x3, 0x1f0e4dbe075fc195 # load x3 with value 0x1f0e4dbe075fc195
sw x3, 0(x2) # store 0x1f0e4dbe075fc195 in memory
flh f6, 0(x2) # load 0x1f0e4dbe075fc195 from memory into f6
li x3, 0xc48e2e8e02f52d05 # load x3 with value 0xc48e2e8e02f52d05
sw x3, 0(x2) # store 0xc48e2e8e02f52d05 in memory
flh f21, 0(x2) # load 0xc48e2e8e02f52d05 from memory into f21
fnmadd.h f10, f1, f6, f21 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x4000)
li x9, 0x17956f530d8e3cf1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f6, 0(x2) # load 0x00004000 from memory into f6
li x3, 0x6277867f201ca4c8 # load x3 with value 0x6277867f201ca4c8
sw x3, 0(x2) # store 0x6277867f201ca4c8 in memory
flh f7, 0(x2) # load 0x6277867f201ca4c8 from memory into f7
li x3, 0xf90722c9c1e7d28f # load x3 with value 0xf90722c9c1e7d28f
sw x3, 0(x2) # store 0xf90722c9c1e7d28f in memory
flh f15, 0(x2) # load 0xf90722c9c1e7d28f from memory into f15
fnmadd.h f9, f6, f7, f15 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0xc000)
li x20, 0x2f1df9cb82b75e22 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f25, 0(x2) # load 0x0000c000 from memory into f25
li x3, 0xa6edb3ac5aedc0f9 # load x3 with value 0xa6edb3ac5aedc0f9
sw x3, 0(x2) # store 0xa6edb3ac5aedc0f9 in memory
flh f22, 0(x2) # load 0xa6edb3ac5aedc0f9 from memory into f22
li x3, 0x33189bd990cc8549 # load x3 with value 0x33189bd990cc8549
sw x3, 0(x2) # store 0x33189bd990cc8549 in memory
flh f30, 0(x2) # load 0x33189bd990cc8549 from memory into f30
fnmadd.h f20, f25, f22, f30 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x400)
li x21, 0xfbbde97b148b75f0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f19, 0(x2) # load 0x00000400 from memory into f19
li x3, 0x9fe97859f9e240cb # load x3 with value 0x9fe97859f9e240cb
sw x3, 0(x2) # store 0x9fe97859f9e240cb in memory
flh f29, 0(x2) # load 0x9fe97859f9e240cb from memory into f29
li x3, 0x6bb228772e9ac520 # load x3 with value 0x6bb228772e9ac520
sw x3, 0(x2) # store 0x6bb228772e9ac520 in memory
flh f2, 0(x2) # load 0x6bb228772e9ac520 from memory into f2
fnmadd.h f21, f19, f29, f2 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x8400)
li x4, 0x97437b25a6dbb7a1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f16, 0(x2) # load 0x00008400 from memory into f16
li x3, 0x4affb2ecdf0e70da # load x3 with value 0x4affb2ecdf0e70da
sw x3, 0(x2) # store 0x4affb2ecdf0e70da in memory
flh f5, 0(x2) # load 0x4affb2ecdf0e70da from memory into f5
li x3, 0x8ca1c58cd8d9f32c # load x3 with value 0x8ca1c58cd8d9f32c
sw x3, 0(x2) # store 0x8ca1c58cd8d9f32c in memory
flh f23, 0(x2) # load 0x8ca1c58cd8d9f32c from memory into f23
fnmadd.h f4, f16, f5, f23 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x7bff)
li x15, 0x38e2daf134427230 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f17, 0(x2) # load 0x00007bff from memory into f17
li x3, 0x8a5200b12cc38189 # load x3 with value 0x8a5200b12cc38189
sw x3, 0(x2) # store 0x8a5200b12cc38189 in memory
flh f29, 0(x2) # load 0x8a5200b12cc38189 from memory into f29
li x3, 0xbb6c1bc11c5a3dcc # load x3 with value 0xbb6c1bc11c5a3dcc
sw x3, 0(x2) # store 0xbb6c1bc11c5a3dcc in memory
flh f27, 0(x2) # load 0xbb6c1bc11c5a3dcc from memory into f27
fnmadd.h f15, f17, f29, f27 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0xfbff)
li x16, 0x8e0e3107032b52ea # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f21, 0(x2) # load 0x0000fbff from memory into f21
li x3, 0xe9f4c78424d9ff1 # load x3 with value 0xe9f4c78424d9ff1
sw x3, 0(x2) # store 0xe9f4c78424d9ff1 in memory
flh f4, 0(x2) # load 0xe9f4c78424d9ff1 from memory into f4
li x3, 0x41269d5ac9a3ffd2 # load x3 with value 0x41269d5ac9a3ffd2
sw x3, 0(x2) # store 0x41269d5ac9a3ffd2 in memory
flh f11, 0(x2) # load 0x41269d5ac9a3ffd2 from memory into f11
fnmadd.h f16, f21, f4, f11 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x3ff)
li x28, 0x5b1be6e128074ad3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f30, 0(x2) # load 0x000003ff from memory into f30
li x3, 0x6769707729270118 # load x3 with value 0x6769707729270118
sw x3, 0(x2) # store 0x6769707729270118 in memory
flh f20, 0(x2) # load 0x6769707729270118 from memory into f20
li x3, 0xed8c22b504018d41 # load x3 with value 0xed8c22b504018d41
sw x3, 0(x2) # store 0xed8c22b504018d41 in memory
flh f9, 0(x2) # load 0xed8c22b504018d41 from memory into f9
fnmadd.h f28, f30, f20, f9 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x83ff)
li x19, 0x3e47ec6f19c13b39 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f12, 0(x2) # load 0x000083ff from memory into f12
li x3, 0xbec0c53d6fefddc5 # load x3 with value 0xbec0c53d6fefddc5
sw x3, 0(x2) # store 0xbec0c53d6fefddc5 in memory
flh f8, 0(x2) # load 0xbec0c53d6fefddc5 from memory into f8
li x3, 0x1fe6fd2c6a4db33b # load x3 with value 0x1fe6fd2c6a4db33b
sw x3, 0(x2) # store 0x1fe6fd2c6a4db33b in memory
flh f20, 0(x2) # load 0x1fe6fd2c6a4db33b from memory into f20
fnmadd.h f19, f12, f8, f20 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x200)
li x19, 0xfaedebf97e7df200 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f8, 0(x2) # load 0x00000200 from memory into f8
li x3, 0x76682c56d50913ed # load x3 with value 0x76682c56d50913ed
sw x3, 0(x2) # store 0x76682c56d50913ed in memory
flh f25, 0(x2) # load 0x76682c56d50913ed from memory into f25
li x3, 0x8ca9af4c4bfacfb # load x3 with value 0x8ca9af4c4bfacfb
sw x3, 0(x2) # store 0x8ca9af4c4bfacfb in memory
flh f30, 0(x2) # load 0x8ca9af4c4bfacfb from memory into f30
fnmadd.h f19, f8, f25, f30 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x8200)
li x9, 0x25c96ee1b532f9a7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f22, 0(x2) # load 0x00008200 from memory into f22
li x3, 0xaf9d3fd8329921d7 # load x3 with value 0xaf9d3fd8329921d7
sw x3, 0(x2) # store 0xaf9d3fd8329921d7 in memory
flh f23, 0(x2) # load 0xaf9d3fd8329921d7 from memory into f23
li x3, 0x47daea6e6924c939 # load x3 with value 0x47daea6e6924c939
sw x3, 0(x2) # store 0x47daea6e6924c939 in memory
flh f6, 0(x2) # load 0x47daea6e6924c939 from memory into f6
fnmadd.h f9, f22, f23, f6 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x1)
li x11, 0x79b75cd801592c64 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f31, 0(x2) # load 0x00000001 from memory into f31
li x3, 0x5713101c05d8b407 # load x3 with value 0x5713101c05d8b407
sw x3, 0(x2) # store 0x5713101c05d8b407 in memory
flh f22, 0(x2) # load 0x5713101c05d8b407 from memory into f22
li x3, 0x1e6a74924f3320bc # load x3 with value 0x1e6a74924f3320bc
sw x3, 0(x2) # store 0x1e6a74924f3320bc in memory
flh f25, 0(x2) # load 0x1e6a74924f3320bc from memory into f25
fnmadd.h f11, f31, f22, f25 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x8001)
li x30, 0xc59108b1e857e5fe # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f26, 0(x2) # load 0x00008001 from memory into f26
li x3, 0x6647c4bd23f570bb # load x3 with value 0x6647c4bd23f570bb
sw x3, 0(x2) # store 0x6647c4bd23f570bb in memory
flh f31, 0(x2) # load 0x6647c4bd23f570bb from memory into f31
li x3, 0x9ecd457f798eeb73 # load x3 with value 0x9ecd457f798eeb73
sw x3, 0(x2) # store 0x9ecd457f798eeb73 in memory
flh f29, 0(x2) # load 0x9ecd457f798eeb73 from memory into f29
fnmadd.h f30, f26, f31, f29 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x7c00)
li x9, 0xcf370f258e93af84 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f18, 0(x2) # load 0x00007c00 from memory into f18
li x3, 0x68c4beb9322b31eb # load x3 with value 0x68c4beb9322b31eb
sw x3, 0(x2) # store 0x68c4beb9322b31eb in memory
flh f7, 0(x2) # load 0x68c4beb9322b31eb from memory into f7
li x3, 0x8b88eb91cb565174 # load x3 with value 0x8b88eb91cb565174
sw x3, 0(x2) # store 0x8b88eb91cb565174 in memory
flh f2, 0(x2) # load 0x8b88eb91cb565174 from memory into f2
fnmadd.h f9, f18, f7, f2 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0xfc00)
li x24, 0xb0b2844001c4e354 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f16, 0(x2) # load 0x0000fc00 from memory into f16
li x3, 0x56f4f9f4565f7dc3 # load x3 with value 0x56f4f9f4565f7dc3
sw x3, 0(x2) # store 0x56f4f9f4565f7dc3 in memory
flh f13, 0(x2) # load 0x56f4f9f4565f7dc3 from memory into f13
li x3, 0x57ba48183723bc0b # load x3 with value 0x57ba48183723bc0b
sw x3, 0(x2) # store 0x57ba48183723bc0b in memory
flh f6, 0(x2) # load 0x57ba48183723bc0b from memory into f6
fnmadd.h f24, f16, f13, f6 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x7e00)
li x27, 0x1d678a695c1d5c0f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f24, 0(x2) # load 0x00007e00 from memory into f24
li x3, 0xc5afee225d00c962 # load x3 with value 0xc5afee225d00c962
sw x3, 0(x2) # store 0xc5afee225d00c962 in memory
flh f13, 0(x2) # load 0xc5afee225d00c962 from memory into f13
li x3, 0xea6656c487719c8a # load x3 with value 0xea6656c487719c8a
sw x3, 0(x2) # store 0xea6656c487719c8a in memory
flh f15, 0(x2) # load 0xea6656c487719c8a from memory into f15
fnmadd.h f27, f24, f13, f15 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x7fff)
li x30, 0x213a289cac07d31e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f12, 0(x2) # load 0x00007fff from memory into f12
li x3, 0xcd24838471775f01 # load x3 with value 0xcd24838471775f01
sw x3, 0(x2) # store 0xcd24838471775f01 in memory
flh f29, 0(x2) # load 0xcd24838471775f01 from memory into f29
li x3, 0x4dbf431f4a28c0a5 # load x3 with value 0x4dbf431f4a28c0a5
sw x3, 0(x2) # store 0x4dbf431f4a28c0a5 in memory
flh f9, 0(x2) # load 0x4dbf431f4a28c0a5 from memory into f9
fnmadd.h f30, f12, f29, f9 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x7c01)
li x12, 0x4dedd7bba939c3d5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f4, 0(x2) # load 0x00007c01 from memory into f4
li x3, 0x5b8923f2b30b43e2 # load x3 with value 0x5b8923f2b30b43e2
sw x3, 0(x2) # store 0x5b8923f2b30b43e2 in memory
flh f19, 0(x2) # load 0x5b8923f2b30b43e2 from memory into f19
li x3, 0xe6805522aa371388 # load x3 with value 0xe6805522aa371388
sw x3, 0(x2) # store 0xe6805522aa371388 in memory
flh f21, 0(x2) # load 0xe6805522aa371388 from memory into f21
fnmadd.h f12, f4, f19, f21 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x7dff)
li x30, 0x81bed823338297c9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f8, 0(x2) # load 0x00007dff from memory into f8
li x3, 0x873d0dd855acb487 # load x3 with value 0x873d0dd855acb487
sw x3, 0(x2) # store 0x873d0dd855acb487 in memory
flh f26, 0(x2) # load 0x873d0dd855acb487 from memory into f26
li x3, 0x26f1686b5f759004 # load x3 with value 0x26f1686b5f759004
sw x3, 0(x2) # store 0x26f1686b5f759004 in memory
flh f17, 0(x2) # load 0x26f1686b5f759004 from memory into f17
fnmadd.h f30, f8, f26, f17 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x58b4)
li x17, 0xa8dc918ccac75442 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f1, 0(x2) # load 0x000058b4 from memory into f1
li x3, 0x982a72a81597a922 # load x3 with value 0x982a72a81597a922
sw x3, 0(x2) # store 0x982a72a81597a922 in memory
flh f22, 0(x2) # load 0x982a72a81597a922 from memory into f22
li x3, 0x44a1733b67b25c44 # load x3 with value 0x44a1733b67b25c44
sw x3, 0(x2) # store 0x44a1733b67b25c44 in memory
flh f30, 0(x2) # load 0x44a1733b67b25c44 from memory into f30
fnmadd.h f17, f1, f22, f30 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0xc93a)
li x31, 0xc4043dbf585f9666 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f16, 0(x2) # load 0x0000c93a from memory into f16
li x3, 0xe342bd87b842afa9 # load x3 with value 0xe342bd87b842afa9
sw x3, 0(x2) # store 0xe342bd87b842afa9 in memory
flh f30, 0(x2) # load 0xe342bd87b842afa9 from memory into f30
li x3, 0xc0a444b0e5bf293c # load x3 with value 0xc0a444b0e5bf293c
sw x3, 0(x2) # store 0xc0a444b0e5bf293c in memory
flh f15, 0(x2) # load 0xc0a444b0e5bf293c from memory into f15
fnmadd.h f31, f16, f30, f15 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x0)
li x24, 0x6212aaa318e014eb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x9799ec11fe1a8546 # load x3 with value 0x9799ec11fe1a8546
sw x3, 0(x2) # store 0x9799ec11fe1a8546 in memory
flh f21, 0(x2) # load 0x9799ec11fe1a8546 from memory into f21
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f25, 0(x2) # load 0x00000000 from memory into f25
li x3, 0xb9aff255b51d5023 # load x3 with value 0xb9aff255b51d5023
sw x3, 0(x2) # store 0xb9aff255b51d5023 in memory
flh f30, 0(x2) # load 0xb9aff255b51d5023 from memory into f30
fnmadd.h f24, f21, f25, f30 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x8000)
li x13, 0x2392ec02e899c6a9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xea3ddcc4b0cb00ba # load x3 with value 0xea3ddcc4b0cb00ba
sw x3, 0(x2) # store 0xea3ddcc4b0cb00ba in memory
flh f17, 0(x2) # load 0xea3ddcc4b0cb00ba from memory into f17
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f29, 0(x2) # load 0x00008000 from memory into f29
li x3, 0x866b918b411604c5 # load x3 with value 0x866b918b411604c5
sw x3, 0(x2) # store 0x866b918b411604c5 in memory
flh f27, 0(x2) # load 0x866b918b411604c5 from memory into f27
fnmadd.h f13, f17, f29, f27 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x3c00)
li x10, 0x53065a91f28621ef # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x72ef971628ae0c9b # load x3 with value 0x72ef971628ae0c9b
sw x3, 0(x2) # store 0x72ef971628ae0c9b in memory
flh f21, 0(x2) # load 0x72ef971628ae0c9b from memory into f21
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f16, 0(x2) # load 0x00003c00 from memory into f16
li x3, 0x5a892aadf93b72da # load x3 with value 0x5a892aadf93b72da
sw x3, 0(x2) # store 0x5a892aadf93b72da in memory
flh f11, 0(x2) # load 0x5a892aadf93b72da from memory into f11
fnmadd.h f10, f21, f16, f11 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0xbc00)
li x2, 0xb270d724b14cca88 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xdeb4ea41c3a26cff # load x3 with value 0xdeb4ea41c3a26cff
sw x3, 0(x2) # store 0xdeb4ea41c3a26cff in memory
flh f23, 0(x2) # load 0xdeb4ea41c3a26cff from memory into f23
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f6, 0(x2) # load 0x0000bc00 from memory into f6
li x3, 0x4c5478725838cd2a # load x3 with value 0x4c5478725838cd2a
sw x3, 0(x2) # store 0x4c5478725838cd2a in memory
flh f30, 0(x2) # load 0x4c5478725838cd2a from memory into f30
fnmadd.h f2, f23, f6, f30 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x3e00)
li x15, 0x4a2a5e7c53a7e311 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x15e77409e95a512b # load x3 with value 0x15e77409e95a512b
sw x3, 0(x2) # store 0x15e77409e95a512b in memory
flh f26, 0(x2) # load 0x15e77409e95a512b from memory into f26
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f12, 0(x2) # load 0x00003e00 from memory into f12
li x3, 0x166b0318ab46b0fc # load x3 with value 0x166b0318ab46b0fc
sw x3, 0(x2) # store 0x166b0318ab46b0fc in memory
flh f23, 0(x2) # load 0x166b0318ab46b0fc from memory into f23
fnmadd.h f15, f26, f12, f23 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0xbe00)
li x4, 0x593e6ec9388cf38a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x8926338c8f2e0cd2 # load x3 with value 0x8926338c8f2e0cd2
sw x3, 0(x2) # store 0x8926338c8f2e0cd2 in memory
flh f3, 0(x2) # load 0x8926338c8f2e0cd2 from memory into f3
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f17, 0(x2) # load 0x0000be00 from memory into f17
li x3, 0x653b0e895822b0c # load x3 with value 0x653b0e895822b0c
sw x3, 0(x2) # store 0x653b0e895822b0c in memory
flh f20, 0(x2) # load 0x653b0e895822b0c from memory into f20
fnmadd.h f4, f3, f17, f20 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x4000)
li x28, 0x0b73938bce0ec8f8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xe8e81086bc0c63a7 # load x3 with value 0xe8e81086bc0c63a7
sw x3, 0(x2) # store 0xe8e81086bc0c63a7 in memory
flh f29, 0(x2) # load 0xe8e81086bc0c63a7 from memory into f29
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f4, 0(x2) # load 0x00004000 from memory into f4
li x3, 0x2e36afe9d7434577 # load x3 with value 0x2e36afe9d7434577
sw x3, 0(x2) # store 0x2e36afe9d7434577 in memory
flh f8, 0(x2) # load 0x2e36afe9d7434577 from memory into f8
fnmadd.h f28, f29, f4, f8 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0xc000)
li x21, 0x5a648e9bfea77054 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x8b2a7e2a723ad99e # load x3 with value 0x8b2a7e2a723ad99e
sw x3, 0(x2) # store 0x8b2a7e2a723ad99e in memory
flh f11, 0(x2) # load 0x8b2a7e2a723ad99e from memory into f11
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f3, 0(x2) # load 0x0000c000 from memory into f3
li x3, 0x1d00d9a201102513 # load x3 with value 0x1d00d9a201102513
sw x3, 0(x2) # store 0x1d00d9a201102513 in memory
flh f8, 0(x2) # load 0x1d00d9a201102513 from memory into f8
fnmadd.h f21, f11, f3, f8 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x400)
li x20, 0x022a437f61a84b8e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x6439fd661d584d63 # load x3 with value 0x6439fd661d584d63
sw x3, 0(x2) # store 0x6439fd661d584d63 in memory
flh f26, 0(x2) # load 0x6439fd661d584d63 from memory into f26
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f1, 0(x2) # load 0x00000400 from memory into f1
li x3, 0xbb07898952f6fbef # load x3 with value 0xbb07898952f6fbef
sw x3, 0(x2) # store 0xbb07898952f6fbef in memory
flh f19, 0(x2) # load 0xbb07898952f6fbef from memory into f19
fnmadd.h f20, f26, f1, f19 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x8400)
li x30, 0xa63e0943de250d0f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x1dd3cf85ffe74eb2 # load x3 with value 0x1dd3cf85ffe74eb2
sw x3, 0(x2) # store 0x1dd3cf85ffe74eb2 in memory
flh f25, 0(x2) # load 0x1dd3cf85ffe74eb2 from memory into f25
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f22, 0(x2) # load 0x00008400 from memory into f22
li x3, 0xa0b4514b6fad958f # load x3 with value 0xa0b4514b6fad958f
sw x3, 0(x2) # store 0xa0b4514b6fad958f in memory
flh f13, 0(x2) # load 0xa0b4514b6fad958f from memory into f13
fnmadd.h f30, f25, f22, f13 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x7bff)
li x29, 0x0b91200983c64232 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xad0854f06475715e # load x3 with value 0xad0854f06475715e
sw x3, 0(x2) # store 0xad0854f06475715e in memory
flh f5, 0(x2) # load 0xad0854f06475715e from memory into f5
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f27, 0(x2) # load 0x00007bff from memory into f27
li x3, 0x4b9f03c422db4e08 # load x3 with value 0x4b9f03c422db4e08
sw x3, 0(x2) # store 0x4b9f03c422db4e08 in memory
flh f21, 0(x2) # load 0x4b9f03c422db4e08 from memory into f21
fnmadd.h f29, f5, f27, f21 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0xfbff)
li x15, 0x2762e9fd2ecead02 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xe62257981a16009b # load x3 with value 0xe62257981a16009b
sw x3, 0(x2) # store 0xe62257981a16009b in memory
flh f6, 0(x2) # load 0xe62257981a16009b from memory into f6
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f24, 0(x2) # load 0x0000fbff from memory into f24
li x3, 0x375ebda20045c894 # load x3 with value 0x375ebda20045c894
sw x3, 0(x2) # store 0x375ebda20045c894 in memory
flh f1, 0(x2) # load 0x375ebda20045c894 from memory into f1
fnmadd.h f15, f6, f24, f1 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x3ff)
li x24, 0xb1069cfef211d91d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x77795144d14e62d3 # load x3 with value 0x77795144d14e62d3
sw x3, 0(x2) # store 0x77795144d14e62d3 in memory
flh f13, 0(x2) # load 0x77795144d14e62d3 from memory into f13
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f20, 0(x2) # load 0x000003ff from memory into f20
li x3, 0xed331fb7216762a4 # load x3 with value 0xed331fb7216762a4
sw x3, 0(x2) # store 0xed331fb7216762a4 in memory
flh f21, 0(x2) # load 0xed331fb7216762a4 from memory into f21
fnmadd.h f24, f13, f20, f21 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x83ff)
li x6, 0x7e15f4ada9db9a0d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x8b58b960aef5296f # load x3 with value 0x8b58b960aef5296f
sw x3, 0(x2) # store 0x8b58b960aef5296f in memory
flh f12, 0(x2) # load 0x8b58b960aef5296f from memory into f12
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f19, 0(x2) # load 0x000083ff from memory into f19
li x3, 0xf0f6a64abe2936ba # load x3 with value 0xf0f6a64abe2936ba
sw x3, 0(x2) # store 0xf0f6a64abe2936ba in memory
flh f15, 0(x2) # load 0xf0f6a64abe2936ba from memory into f15
fnmadd.h f6, f12, f19, f15 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x200)
li x13, 0xd640aa0a212ed738 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x45de72052b848927 # load x3 with value 0x45de72052b848927
sw x3, 0(x2) # store 0x45de72052b848927 in memory
flh f6, 0(x2) # load 0x45de72052b848927 from memory into f6
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f30, 0(x2) # load 0x00000200 from memory into f30
li x3, 0x3503af94beea500c # load x3 with value 0x3503af94beea500c
sw x3, 0(x2) # store 0x3503af94beea500c in memory
flh f3, 0(x2) # load 0x3503af94beea500c from memory into f3
fnmadd.h f13, f6, f30, f3 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x8200)
li x31, 0xbe7de9a62e7774d2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xdf548ff76d2adbbe # load x3 with value 0xdf548ff76d2adbbe
sw x3, 0(x2) # store 0xdf548ff76d2adbbe in memory
flh f16, 0(x2) # load 0xdf548ff76d2adbbe from memory into f16
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f12, 0(x2) # load 0x00008200 from memory into f12
li x3, 0x99722b5193e5bf09 # load x3 with value 0x99722b5193e5bf09
sw x3, 0(x2) # store 0x99722b5193e5bf09 in memory
flh f13, 0(x2) # load 0x99722b5193e5bf09 from memory into f13
fnmadd.h f31, f16, f12, f13 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x1)
li x26, 0x2b1ce0286f9421ec # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff3a6e05472afd35 # load x3 with value 0xff3a6e05472afd35
sw x3, 0(x2) # store 0xff3a6e05472afd35 in memory
flh f17, 0(x2) # load 0xff3a6e05472afd35 from memory into f17
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f18, 0(x2) # load 0x00000001 from memory into f18
li x3, 0xd5633756da752786 # load x3 with value 0xd5633756da752786
sw x3, 0(x2) # store 0xd5633756da752786 in memory
flh f13, 0(x2) # load 0xd5633756da752786 from memory into f13
fnmadd.h f26, f17, f18, f13 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x8001)
li x12, 0xbfa7d9e2652f9b77 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x2b35d9739ad40102 # load x3 with value 0x2b35d9739ad40102
sw x3, 0(x2) # store 0x2b35d9739ad40102 in memory
flh f2, 0(x2) # load 0x2b35d9739ad40102 from memory into f2
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f5, 0(x2) # load 0x00008001 from memory into f5
li x3, 0x39c2a0a9aa9bc8e5 # load x3 with value 0x39c2a0a9aa9bc8e5
sw x3, 0(x2) # store 0x39c2a0a9aa9bc8e5 in memory
flh f10, 0(x2) # load 0x39c2a0a9aa9bc8e5 from memory into f10
fnmadd.h f12, f2, f5, f10 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x7c00)
li x23, 0x530162ad6923b129 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xdbedc27e96319315 # load x3 with value 0xdbedc27e96319315
sw x3, 0(x2) # store 0xdbedc27e96319315 in memory
flh f13, 0(x2) # load 0xdbedc27e96319315 from memory into f13
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f11, 0(x2) # load 0x00007c00 from memory into f11
li x3, 0x90e0fdcc6ebd49df # load x3 with value 0x90e0fdcc6ebd49df
sw x3, 0(x2) # store 0x90e0fdcc6ebd49df in memory
flh f12, 0(x2) # load 0x90e0fdcc6ebd49df from memory into f12
fnmadd.h f23, f13, f11, f12 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0xfc00)
li x12, 0x8a1dd6c48212316f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xded2039b6481306 # load x3 with value 0xded2039b6481306
sw x3, 0(x2) # store 0xded2039b6481306 in memory
flh f31, 0(x2) # load 0xded2039b6481306 from memory into f31
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f16, 0(x2) # load 0x0000fc00 from memory into f16
li x3, 0x64e69163fd347085 # load x3 with value 0x64e69163fd347085
sw x3, 0(x2) # store 0x64e69163fd347085 in memory
flh f1, 0(x2) # load 0x64e69163fd347085 from memory into f1
fnmadd.h f12, f31, f16, f1 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x7e00)
li x22, 0xb38238082e397515 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa6f4f1fc217b49c9 # load x3 with value 0xa6f4f1fc217b49c9
sw x3, 0(x2) # store 0xa6f4f1fc217b49c9 in memory
flh f2, 0(x2) # load 0xa6f4f1fc217b49c9 from memory into f2
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f31, 0(x2) # load 0x00007e00 from memory into f31
li x3, 0x8fc6c06b1350b118 # load x3 with value 0x8fc6c06b1350b118
sw x3, 0(x2) # store 0x8fc6c06b1350b118 in memory
flh f26, 0(x2) # load 0x8fc6c06b1350b118 from memory into f26
fnmadd.h f22, f2, f31, f26 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x7fff)
li x11, 0xee5074f64fc74382 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7055e19344634b33 # load x3 with value 0x7055e19344634b33
sw x3, 0(x2) # store 0x7055e19344634b33 in memory
flh f4, 0(x2) # load 0x7055e19344634b33 from memory into f4
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f8, 0(x2) # load 0x00007fff from memory into f8
li x3, 0x1b3d78e4c6ae91e3 # load x3 with value 0x1b3d78e4c6ae91e3
sw x3, 0(x2) # store 0x1b3d78e4c6ae91e3 in memory
flh f17, 0(x2) # load 0x1b3d78e4c6ae91e3 from memory into f17
fnmadd.h f11, f4, f8, f17 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x7c01)
li x23, 0x5af53526b9b95ea7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x9bce75c5b1d79243 # load x3 with value 0x9bce75c5b1d79243
sw x3, 0(x2) # store 0x9bce75c5b1d79243 in memory
flh f26, 0(x2) # load 0x9bce75c5b1d79243 from memory into f26
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f24, 0(x2) # load 0x00007c01 from memory into f24
li x3, 0x4fe834304c8ae653 # load x3 with value 0x4fe834304c8ae653
sw x3, 0(x2) # store 0x4fe834304c8ae653 in memory
flh f2, 0(x2) # load 0x4fe834304c8ae653 from memory into f2
fnmadd.h f23, f26, f24, f2 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x7dff)
li x27, 0x0213748a8240c3dd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xab4089567ed43e89 # load x3 with value 0xab4089567ed43e89
sw x3, 0(x2) # store 0xab4089567ed43e89 in memory
flh f18, 0(x2) # load 0xab4089567ed43e89 from memory into f18
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f16, 0(x2) # load 0x00007dff from memory into f16
li x3, 0x4bc4fc44aff473ae # load x3 with value 0x4bc4fc44aff473ae
sw x3, 0(x2) # store 0x4bc4fc44aff473ae in memory
flh f25, 0(x2) # load 0x4bc4fc44aff473ae from memory into f25
fnmadd.h f27, f18, f16, f25 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x58b4)
li x28, 0x20c3c178feaac3d8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x2143bce043010d57 # load x3 with value 0x2143bce043010d57
sw x3, 0(x2) # store 0x2143bce043010d57 in memory
flh f19, 0(x2) # load 0x2143bce043010d57 from memory into f19
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f22, 0(x2) # load 0x000058b4 from memory into f22
li x3, 0xdddbcdfb4a5c3f78 # load x3 with value 0xdddbcdfb4a5c3f78
sw x3, 0(x2) # store 0xdddbcdfb4a5c3f78 in memory
flh f21, 0(x2) # load 0xdddbcdfb4a5c3f78 from memory into f21
fnmadd.h f28, f19, f22, f21 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0xc93a)
li x31, 0x10d0a25a5d015aac # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x52b05161055d3823 # load x3 with value 0x52b05161055d3823
sw x3, 0(x2) # store 0x52b05161055d3823 in memory
flh f30, 0(x2) # load 0x52b05161055d3823 from memory into f30
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f2, 0(x2) # load 0x0000c93a from memory into f2
li x3, 0xf76fbf97344fd431 # load x3 with value 0xf76fbf97344fd431
sw x3, 0(x2) # store 0xf76fbf97344fd431 in memory
flh f16, 0(x2) # load 0xf76fbf97344fd431 from memory into f16
fnmadd.h f31, f30, f2, f16 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x0)
li x5, 0x87e888ddf668a1ad # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xf87fd7176c2a170f # load x3 with value 0xf87fd7176c2a170f
sw x3, 0(x2) # store 0xf87fd7176c2a170f in memory
flh f26, 0(x2) # load 0xf87fd7176c2a170f from memory into f26
li x3, 0x2cfe83bb589261d5 # load x3 with value 0x2cfe83bb589261d5
sw x3, 0(x2) # store 0x2cfe83bb589261d5 in memory
flh f28, 0(x2) # load 0x2cfe83bb589261d5 from memory into f28
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f4, 0(x2) # load 0x00000000 from memory into f4
fnmadd.h f5, f26, f28, f4 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x8000)
li x3, 0x44488a89fc8dc5ad # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xf5eeef510b8bd7f2 # load x3 with value 0xf5eeef510b8bd7f2
sw x3, 0(x2) # store 0xf5eeef510b8bd7f2 in memory
flh f20, 0(x2) # load 0xf5eeef510b8bd7f2 from memory into f20
li x3, 0xfe2d5f1c87d79949 # load x3 with value 0xfe2d5f1c87d79949
sw x3, 0(x2) # store 0xfe2d5f1c87d79949 in memory
flh f9, 0(x2) # load 0xfe2d5f1c87d79949 from memory into f9
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f15, 0(x2) # load 0x00008000 from memory into f15
fnmadd.h f3, f20, f9, f15 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x3c00)
li x30, 0xacf693b3a815bcb8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xacfafeb3dcd9d99a # load x3 with value 0xacfafeb3dcd9d99a
sw x3, 0(x2) # store 0xacfafeb3dcd9d99a in memory
flh f5, 0(x2) # load 0xacfafeb3dcd9d99a from memory into f5
li x3, 0xb2d8aefa7b743f67 # load x3 with value 0xb2d8aefa7b743f67
sw x3, 0(x2) # store 0xb2d8aefa7b743f67 in memory
flh f15, 0(x2) # load 0xb2d8aefa7b743f67 from memory into f15
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f14, 0(x2) # load 0x00003c00 from memory into f14
fnmadd.h f30, f5, f15, f14 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0xbc00)
li x13, 0x450f312b12779bbb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x2f5958a36408e24 # load x3 with value 0x2f5958a36408e24
sw x3, 0(x2) # store 0x2f5958a36408e24 in memory
flh f21, 0(x2) # load 0x2f5958a36408e24 from memory into f21
li x3, 0x9d513f8a2f91af38 # load x3 with value 0x9d513f8a2f91af38
sw x3, 0(x2) # store 0x9d513f8a2f91af38 in memory
flh f9, 0(x2) # load 0x9d513f8a2f91af38 from memory into f9
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f6, 0(x2) # load 0x0000bc00 from memory into f6
fnmadd.h f13, f21, f9, f6 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x3e00)
li x11, 0xafceaa38739cd628 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f65d9798465afdf # load x3 with value 0x7f65d9798465afdf
sw x3, 0(x2) # store 0x7f65d9798465afdf in memory
flh f23, 0(x2) # load 0x7f65d9798465afdf from memory into f23
li x3, 0x98eec1c053a16075 # load x3 with value 0x98eec1c053a16075
sw x3, 0(x2) # store 0x98eec1c053a16075 in memory
flh f6, 0(x2) # load 0x98eec1c053a16075 from memory into f6
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f17, 0(x2) # load 0x00003e00 from memory into f17
fnmadd.h f11, f23, f6, f17 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0xbe00)
li x20, 0x0bdded4cce2505a0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xeaa2ce9efcdfb453 # load x3 with value 0xeaa2ce9efcdfb453
sw x3, 0(x2) # store 0xeaa2ce9efcdfb453 in memory
flh f21, 0(x2) # load 0xeaa2ce9efcdfb453 from memory into f21
li x3, 0x9197c7599df4c6cc # load x3 with value 0x9197c7599df4c6cc
sw x3, 0(x2) # store 0x9197c7599df4c6cc in memory
flh f25, 0(x2) # load 0x9197c7599df4c6cc from memory into f25
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f14, 0(x2) # load 0x0000be00 from memory into f14
fnmadd.h f20, f21, f25, f14 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x4000)
li x2, 0x95d0ee776c46af23 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xb0676a6ae17eb57 # load x3 with value 0xb0676a6ae17eb57
sw x3, 0(x2) # store 0xb0676a6ae17eb57 in memory
flh f11, 0(x2) # load 0xb0676a6ae17eb57 from memory into f11
li x3, 0x2632c81f26d6cf00 # load x3 with value 0x2632c81f26d6cf00
sw x3, 0(x2) # store 0x2632c81f26d6cf00 in memory
flh f5, 0(x2) # load 0x2632c81f26d6cf00 from memory into f5
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f15, 0(x2) # load 0x00004000 from memory into f15
fnmadd.h f2, f11, f5, f15 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0xc000)
li x7, 0xea37800d7f4e5912 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xb7fcfb957cdfd8b2 # load x3 with value 0xb7fcfb957cdfd8b2
sw x3, 0(x2) # store 0xb7fcfb957cdfd8b2 in memory
flh f23, 0(x2) # load 0xb7fcfb957cdfd8b2 from memory into f23
li x3, 0x552dd123ae3dd911 # load x3 with value 0x552dd123ae3dd911
sw x3, 0(x2) # store 0x552dd123ae3dd911 in memory
flh f22, 0(x2) # load 0x552dd123ae3dd911 from memory into f22
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f26, 0(x2) # load 0x0000c000 from memory into f26
fnmadd.h f7, f23, f22, f26 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x400)
li x20, 0xaee8c40b3f363480 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xb9646fdc6b87e791 # load x3 with value 0xb9646fdc6b87e791
sw x3, 0(x2) # store 0xb9646fdc6b87e791 in memory
flh f3, 0(x2) # load 0xb9646fdc6b87e791 from memory into f3
li x3, 0x79328409866a9bb0 # load x3 with value 0x79328409866a9bb0
sw x3, 0(x2) # store 0x79328409866a9bb0 in memory
flh f4, 0(x2) # load 0x79328409866a9bb0 from memory into f4
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f7, 0(x2) # load 0x00000400 from memory into f7
fnmadd.h f20, f3, f4, f7 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x8400)
li x24, 0x5f6465af41b22bc5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc1502b0138329e5d # load x3 with value 0xc1502b0138329e5d
sw x3, 0(x2) # store 0xc1502b0138329e5d in memory
flh f23, 0(x2) # load 0xc1502b0138329e5d from memory into f23
li x3, 0xdd286ded8a10da8b # load x3 with value 0xdd286ded8a10da8b
sw x3, 0(x2) # store 0xdd286ded8a10da8b in memory
flh f10, 0(x2) # load 0xdd286ded8a10da8b from memory into f10
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f13, 0(x2) # load 0x00008400 from memory into f13
fnmadd.h f24, f23, f10, f13 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x7bff)
li x24, 0x27fa303aa18485c8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3b7fca1c4df3140e # load x3 with value 0x3b7fca1c4df3140e
sw x3, 0(x2) # store 0x3b7fca1c4df3140e in memory
flh f21, 0(x2) # load 0x3b7fca1c4df3140e from memory into f21
li x3, 0xc76191e3beb34e41 # load x3 with value 0xc76191e3beb34e41
sw x3, 0(x2) # store 0xc76191e3beb34e41 in memory
flh f28, 0(x2) # load 0xc76191e3beb34e41 from memory into f28
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f8, 0(x2) # load 0x00007bff from memory into f8
fnmadd.h f24, f21, f28, f8 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0xfbff)
li x1, 0xad84f97ef05143a5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x812f75f9b8af912b # load x3 with value 0x812f75f9b8af912b
sw x3, 0(x2) # store 0x812f75f9b8af912b in memory
flh f15, 0(x2) # load 0x812f75f9b8af912b from memory into f15
li x3, 0x95701762fea6799a # load x3 with value 0x95701762fea6799a
sw x3, 0(x2) # store 0x95701762fea6799a in memory
flh f29, 0(x2) # load 0x95701762fea6799a from memory into f29
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f31, 0(x2) # load 0x0000fbff from memory into f31
fnmadd.h f1, f15, f29, f31 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x3ff)
li x28, 0x56081d70d10738fc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3aa7542207f2b3a3 # load x3 with value 0x3aa7542207f2b3a3
sw x3, 0(x2) # store 0x3aa7542207f2b3a3 in memory
flh f15, 0(x2) # load 0x3aa7542207f2b3a3 from memory into f15
li x3, 0xcea026aca453d3a4 # load x3 with value 0xcea026aca453d3a4
sw x3, 0(x2) # store 0xcea026aca453d3a4 in memory
flh f25, 0(x2) # load 0xcea026aca453d3a4 from memory into f25
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f6, 0(x2) # load 0x000003ff from memory into f6
fnmadd.h f28, f15, f25, f6 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x83ff)
li x2, 0x5679c5708779086a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xfd57c3fb71070718 # load x3 with value 0xfd57c3fb71070718
sw x3, 0(x2) # store 0xfd57c3fb71070718 in memory
flh f24, 0(x2) # load 0xfd57c3fb71070718 from memory into f24
li x3, 0x9990ec8d714cd25b # load x3 with value 0x9990ec8d714cd25b
sw x3, 0(x2) # store 0x9990ec8d714cd25b in memory
flh f30, 0(x2) # load 0x9990ec8d714cd25b from memory into f30
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f12, 0(x2) # load 0x000083ff from memory into f12
fnmadd.h f2, f24, f30, f12 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x200)
li x14, 0x67ffe5f26ed6f54d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7129b85bf1bbf763 # load x3 with value 0x7129b85bf1bbf763
sw x3, 0(x2) # store 0x7129b85bf1bbf763 in memory
flh f2, 0(x2) # load 0x7129b85bf1bbf763 from memory into f2
li x3, 0x2e0c3aecc7b9b33a # load x3 with value 0x2e0c3aecc7b9b33a
sw x3, 0(x2) # store 0x2e0c3aecc7b9b33a in memory
flh f3, 0(x2) # load 0x2e0c3aecc7b9b33a from memory into f3
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f20, 0(x2) # load 0x00000200 from memory into f20
fnmadd.h f14, f2, f3, f20 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x8200)
li x10, 0xf3d0f9557ab2e43c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xfa1cabed02ffb6d5 # load x3 with value 0xfa1cabed02ffb6d5
sw x3, 0(x2) # store 0xfa1cabed02ffb6d5 in memory
flh f4, 0(x2) # load 0xfa1cabed02ffb6d5 from memory into f4
li x3, 0xe8d9739d513215de # load x3 with value 0xe8d9739d513215de
sw x3, 0(x2) # store 0xe8d9739d513215de in memory
flh f30, 0(x2) # load 0xe8d9739d513215de from memory into f30
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f2, 0(x2) # load 0x00008200 from memory into f2
fnmadd.h f10, f4, f30, f2 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x1)
li x8, 0xf979bcf3bbb39273 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x57d4ea9db216b6e # load x3 with value 0x57d4ea9db216b6e
sw x3, 0(x2) # store 0x57d4ea9db216b6e in memory
flh f22, 0(x2) # load 0x57d4ea9db216b6e from memory into f22
li x3, 0xd09e081ce5f3b61 # load x3 with value 0xd09e081ce5f3b61
sw x3, 0(x2) # store 0xd09e081ce5f3b61 in memory
flh f31, 0(x2) # load 0xd09e081ce5f3b61 from memory into f31
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f16, 0(x2) # load 0x00000001 from memory into f16
fnmadd.h f8, f22, f31, f16 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x8001)
li x23, 0x48fa968d1b946364 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x4f49bf49c207b303 # load x3 with value 0x4f49bf49c207b303
sw x3, 0(x2) # store 0x4f49bf49c207b303 in memory
flh f29, 0(x2) # load 0x4f49bf49c207b303 from memory into f29
li x3, 0x4afb408f8a942ba9 # load x3 with value 0x4afb408f8a942ba9
sw x3, 0(x2) # store 0x4afb408f8a942ba9 in memory
flh f4, 0(x2) # load 0x4afb408f8a942ba9 from memory into f4
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f30, 0(x2) # load 0x00008001 from memory into f30
fnmadd.h f23, f29, f4, f30 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x7c00)
li x5, 0xa9e5247909ebe3d8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc3993c23a9ac8131 # load x3 with value 0xc3993c23a9ac8131
sw x3, 0(x2) # store 0xc3993c23a9ac8131 in memory
flh f21, 0(x2) # load 0xc3993c23a9ac8131 from memory into f21
li x3, 0x3431cc4a6f9dcf2b # load x3 with value 0x3431cc4a6f9dcf2b
sw x3, 0(x2) # store 0x3431cc4a6f9dcf2b in memory
flh f31, 0(x2) # load 0x3431cc4a6f9dcf2b from memory into f31
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f14, 0(x2) # load 0x00007c00 from memory into f14
fnmadd.h f5, f21, f31, f14 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0xfc00)
li x9, 0x63eee4d5cf858bd2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x51fd53e384d33596 # load x3 with value 0x51fd53e384d33596
sw x3, 0(x2) # store 0x51fd53e384d33596 in memory
flh f1, 0(x2) # load 0x51fd53e384d33596 from memory into f1
li x3, 0xb7c8ea5c812fee42 # load x3 with value 0xb7c8ea5c812fee42
sw x3, 0(x2) # store 0xb7c8ea5c812fee42 in memory
flh f25, 0(x2) # load 0xb7c8ea5c812fee42 from memory into f25
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f24, 0(x2) # load 0x0000fc00 from memory into f24
fnmadd.h f9, f1, f25, f24 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x7e00)
li x24, 0xf90459ff2d44f765 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x83b139c1e39a14d5 # load x3 with value 0x83b139c1e39a14d5
sw x3, 0(x2) # store 0x83b139c1e39a14d5 in memory
flh f2, 0(x2) # load 0x83b139c1e39a14d5 from memory into f2
li x3, 0xa7b48dfcf7541c90 # load x3 with value 0xa7b48dfcf7541c90
sw x3, 0(x2) # store 0xa7b48dfcf7541c90 in memory
flh f20, 0(x2) # load 0xa7b48dfcf7541c90 from memory into f20
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f18, 0(x2) # load 0x00007e00 from memory into f18
fnmadd.h f24, f2, f20, f18 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x7fff)
li x1, 0x58185145e4c54040 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x58eedc8a329b227d # load x3 with value 0x58eedc8a329b227d
sw x3, 0(x2) # store 0x58eedc8a329b227d in memory
flh f2, 0(x2) # load 0x58eedc8a329b227d from memory into f2
li x3, 0x78da3879cc44fdf6 # load x3 with value 0x78da3879cc44fdf6
sw x3, 0(x2) # store 0x78da3879cc44fdf6 in memory
flh f17, 0(x2) # load 0x78da3879cc44fdf6 from memory into f17
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f28, 0(x2) # load 0x00007fff from memory into f28
fnmadd.h f1, f2, f17, f28 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x7c01)
li x6, 0x5390a608b1e9f06f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xe193bc02c6b26255 # load x3 with value 0xe193bc02c6b26255
sw x3, 0(x2) # store 0xe193bc02c6b26255 in memory
flh f11, 0(x2) # load 0xe193bc02c6b26255 from memory into f11
li x3, 0x79c017d1d4a2486d # load x3 with value 0x79c017d1d4a2486d
sw x3, 0(x2) # store 0x79c017d1d4a2486d in memory
flh f3, 0(x2) # load 0x79c017d1d4a2486d from memory into f3
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f5, 0(x2) # load 0x00007c01 from memory into f5
fnmadd.h f6, f11, f3, f5 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x7dff)
li x31, 0x76b2fc19aeb15b99 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x4222f972df28c0d8 # load x3 with value 0x4222f972df28c0d8
sw x3, 0(x2) # store 0x4222f972df28c0d8 in memory
flh f29, 0(x2) # load 0x4222f972df28c0d8 from memory into f29
li x3, 0x7c44d12433c43869 # load x3 with value 0x7c44d12433c43869
sw x3, 0(x2) # store 0x7c44d12433c43869 in memory
flh f9, 0(x2) # load 0x7c44d12433c43869 from memory into f9
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f8, 0(x2) # load 0x00007dff from memory into f8
fnmadd.h f31, f29, f9, f8 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x58b4)
li x24, 0x0b370bc5ca0a66ba # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x8691b8ccd9387c30 # load x3 with value 0x8691b8ccd9387c30
sw x3, 0(x2) # store 0x8691b8ccd9387c30 in memory
flh f18, 0(x2) # load 0x8691b8ccd9387c30 from memory into f18
li x3, 0x113e34fc71189c47 # load x3 with value 0x113e34fc71189c47
sw x3, 0(x2) # store 0x113e34fc71189c47 in memory
flh f13, 0(x2) # load 0x113e34fc71189c47 from memory into f13
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f29, 0(x2) # load 0x000058b4 from memory into f29
fnmadd.h f24, f18, f13, f29 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0xc93a)
li x25, 0xb1d4e6edc5aeb0c7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x9f6df25e709b7349 # load x3 with value 0x9f6df25e709b7349
sw x3, 0(x2) # store 0x9f6df25e709b7349 in memory
flh f20, 0(x2) # load 0x9f6df25e709b7349 from memory into f20
li x3, 0xb702b81dad1fbf5e # load x3 with value 0xb702b81dad1fbf5e
sw x3, 0(x2) # store 0xb702b81dad1fbf5e in memory
flh f6, 0(x2) # load 0xb702b81dad1fbf5e from memory into f6
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f29, 0(x2) # load 0x0000c93a from memory into f29
fnmadd.h f25, f20, f6, f29 # perform operation

# Testcase cp_frm
li x24, 0x8d5490fb08e66c8d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xaec7ff15185079d0 # load x3 with value 0xaec7ff15185079d0
sw x3, 0(x2) # store 0xaec7ff15185079d0 in memory
flh f20, 0(x2) # load 0xaec7ff15185079d0 from memory into f20
li x3, 0xaf160c43f05969b6 # load x3 with value 0xaf160c43f05969b6
sw x3, 0(x2) # store 0xaf160c43f05969b6 in memory
flh f19, 0(x2) # load 0xaf160c43f05969b6 from memory into f19
li x3, 0x0000000a # load x3 with value 0x0000000a
sw x3, 0(x2) # store 0x0000000a in memory
flh f10, 0(x2) # load 0x0000000a from memory into f10
fnmadd.h f24, f20, f19, f10, dyn # perform operation
fnmadd.h f24, f20, f19, f10, rdn # perform operation
fnmadd.h f24, f20, f19, f10, rmm # perform operation
fnmadd.h f24, f20, f19, f10, rne # perform operation
fnmadd.h f24, f20, f19, f10, rtz # perform operation
fnmadd.h f24, f20, f19, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f24, f20, f19, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f24, f20, f19, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f24, f20, f19, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f24, f20, f19, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f24, f20, f19, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x0)
li x19, 0x26b872f79b3aaf9d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f25, 0(x2) # load 0x00000000 from memory into f25
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f23, 0(x2) # load 0x00000000 from memory into f23
li x3, 0x42a39a974e88780 # load x3 with value 0x42a39a974e88780
sw x3, 0(x2) # store 0x42a39a974e88780 in memory
flh f1, 0(x2) # load 0x42a39a974e88780 from memory into f1
fnmadd.h f19, f25, f23, f1, dyn # perform operation
fnmadd.h f19, f25, f23, f1, rdn # perform operation
fnmadd.h f19, f25, f23, f1, rmm # perform operation
fnmadd.h f19, f25, f23, f1, rne # perform operation
fnmadd.h f19, f25, f23, f1, rtz # perform operation
fnmadd.h f19, f25, f23, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f19, f25, f23, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f19, f25, f23, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f19, f25, f23, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f19, f25, f23, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f19, f25, f23, f1 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x8000)
li x6, 0x898886e9c8461842 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f20, 0(x2) # load 0x00000000 from memory into f20
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f16, 0(x2) # load 0x00008000 from memory into f16
li x3, 0x31c0535a9930b238 # load x3 with value 0x31c0535a9930b238
sw x3, 0(x2) # store 0x31c0535a9930b238 in memory
flh f3, 0(x2) # load 0x31c0535a9930b238 from memory into f3
fnmadd.h f6, f20, f16, f3, dyn # perform operation
fnmadd.h f6, f20, f16, f3, rdn # perform operation
fnmadd.h f6, f20, f16, f3, rmm # perform operation
fnmadd.h f6, f20, f16, f3, rne # perform operation
fnmadd.h f6, f20, f16, f3, rtz # perform operation
fnmadd.h f6, f20, f16, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f6, f20, f16, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f6, f20, f16, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f6, f20, f16, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f6, f20, f16, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f6, f20, f16, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x3c00)
li x22, 0x1b11e47d22a0c138 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f18, 0(x2) # load 0x00000000 from memory into f18
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f30, 0(x2) # load 0x00003c00 from memory into f30
li x3, 0xeb6d58aec1e8ec52 # load x3 with value 0xeb6d58aec1e8ec52
sw x3, 0(x2) # store 0xeb6d58aec1e8ec52 in memory
flh f19, 0(x2) # load 0xeb6d58aec1e8ec52 from memory into f19
fnmadd.h f22, f18, f30, f19, dyn # perform operation
fnmadd.h f22, f18, f30, f19, rdn # perform operation
fnmadd.h f22, f18, f30, f19, rmm # perform operation
fnmadd.h f22, f18, f30, f19, rne # perform operation
fnmadd.h f22, f18, f30, f19, rtz # perform operation
fnmadd.h f22, f18, f30, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f22, f18, f30, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f22, f18, f30, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f22, f18, f30, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f22, f18, f30, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f22, f18, f30, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0xbc00)
li x3, 0x6167285605feafd5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f14, 0(x2) # load 0x00000000 from memory into f14
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f10, 0(x2) # load 0x0000bc00 from memory into f10
li x3, 0x6cf6b3eae4d5e961 # load x3 with value 0x6cf6b3eae4d5e961
sw x3, 0(x2) # store 0x6cf6b3eae4d5e961 in memory
flh f11, 0(x2) # load 0x6cf6b3eae4d5e961 from memory into f11
fnmadd.h f3, f14, f10, f11, dyn # perform operation
fnmadd.h f3, f14, f10, f11, rdn # perform operation
fnmadd.h f3, f14, f10, f11, rmm # perform operation
fnmadd.h f3, f14, f10, f11, rne # perform operation
fnmadd.h f3, f14, f10, f11, rtz # perform operation
fnmadd.h f3, f14, f10, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f3, f14, f10, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f3, f14, f10, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f3, f14, f10, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f3, f14, f10, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f3, f14, f10, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x3e00)
li x19, 0x8b3dbe7439408826 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f20, 0(x2) # load 0x00000000 from memory into f20
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f18, 0(x2) # load 0x00003e00 from memory into f18
li x3, 0xf17ecfb658520835 # load x3 with value 0xf17ecfb658520835
sw x3, 0(x2) # store 0xf17ecfb658520835 in memory
flh f12, 0(x2) # load 0xf17ecfb658520835 from memory into f12
fnmadd.h f19, f20, f18, f12, dyn # perform operation
fnmadd.h f19, f20, f18, f12, rdn # perform operation
fnmadd.h f19, f20, f18, f12, rmm # perform operation
fnmadd.h f19, f20, f18, f12, rne # perform operation
fnmadd.h f19, f20, f18, f12, rtz # perform operation
fnmadd.h f19, f20, f18, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f19, f20, f18, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f19, f20, f18, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f19, f20, f18, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f19, f20, f18, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f19, f20, f18, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0xbe00)
li x23, 0x61df5bd6e696aa37 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f27, 0(x2) # load 0x00000000 from memory into f27
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f2, 0(x2) # load 0x0000be00 from memory into f2
li x3, 0x31caa4872b6a581f # load x3 with value 0x31caa4872b6a581f
sw x3, 0(x2) # store 0x31caa4872b6a581f in memory
flh f11, 0(x2) # load 0x31caa4872b6a581f from memory into f11
fnmadd.h f23, f27, f2, f11, dyn # perform operation
fnmadd.h f23, f27, f2, f11, rdn # perform operation
fnmadd.h f23, f27, f2, f11, rmm # perform operation
fnmadd.h f23, f27, f2, f11, rne # perform operation
fnmadd.h f23, f27, f2, f11, rtz # perform operation
fnmadd.h f23, f27, f2, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f23, f27, f2, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f23, f27, f2, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f23, f27, f2, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f23, f27, f2, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f23, f27, f2, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x4000)
li x31, 0x5c21d42ce42f5160 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f26, 0(x2) # load 0x00000000 from memory into f26
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f28, 0(x2) # load 0x00004000 from memory into f28
li x3, 0x801b46bf2f56d621 # load x3 with value 0x801b46bf2f56d621
sw x3, 0(x2) # store 0x801b46bf2f56d621 in memory
flh f27, 0(x2) # load 0x801b46bf2f56d621 from memory into f27
fnmadd.h f31, f26, f28, f27, dyn # perform operation
fnmadd.h f31, f26, f28, f27, rdn # perform operation
fnmadd.h f31, f26, f28, f27, rmm # perform operation
fnmadd.h f31, f26, f28, f27, rne # perform operation
fnmadd.h f31, f26, f28, f27, rtz # perform operation
fnmadd.h f31, f26, f28, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f31, f26, f28, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f31, f26, f28, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f31, f26, f28, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f31, f26, f28, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f31, f26, f28, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0xc000)
li x28, 0xb3b209ba2a02a687 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f15, 0(x2) # load 0x00000000 from memory into f15
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f29, 0(x2) # load 0x0000c000 from memory into f29
li x3, 0xccf43c6c7e9c2cf7 # load x3 with value 0xccf43c6c7e9c2cf7
sw x3, 0(x2) # store 0xccf43c6c7e9c2cf7 in memory
flh f31, 0(x2) # load 0xccf43c6c7e9c2cf7 from memory into f31
fnmadd.h f28, f15, f29, f31, dyn # perform operation
fnmadd.h f28, f15, f29, f31, rdn # perform operation
fnmadd.h f28, f15, f29, f31, rmm # perform operation
fnmadd.h f28, f15, f29, f31, rne # perform operation
fnmadd.h f28, f15, f29, f31, rtz # perform operation
fnmadd.h f28, f15, f29, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f28, f15, f29, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f28, f15, f29, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f28, f15, f29, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f28, f15, f29, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f28, f15, f29, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x400)
li x16, 0x7cea3ba2c75121c2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f29, 0(x2) # load 0x00000000 from memory into f29
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f25, 0(x2) # load 0x00000400 from memory into f25
li x3, 0x29d2a852d227c40c # load x3 with value 0x29d2a852d227c40c
sw x3, 0(x2) # store 0x29d2a852d227c40c in memory
flh f10, 0(x2) # load 0x29d2a852d227c40c from memory into f10
fnmadd.h f16, f29, f25, f10, dyn # perform operation
fnmadd.h f16, f29, f25, f10, rdn # perform operation
fnmadd.h f16, f29, f25, f10, rmm # perform operation
fnmadd.h f16, f29, f25, f10, rne # perform operation
fnmadd.h f16, f29, f25, f10, rtz # perform operation
fnmadd.h f16, f29, f25, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f16, f29, f25, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f16, f29, f25, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f16, f29, f25, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f16, f29, f25, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f16, f29, f25, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x8400)
li x4, 0x3b6a90fe527a11f6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f2, 0(x2) # load 0x00000000 from memory into f2
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f9, 0(x2) # load 0x00008400 from memory into f9
li x3, 0x9cca393fd6b21aea # load x3 with value 0x9cca393fd6b21aea
sw x3, 0(x2) # store 0x9cca393fd6b21aea in memory
flh f16, 0(x2) # load 0x9cca393fd6b21aea from memory into f16
fnmadd.h f4, f2, f9, f16, dyn # perform operation
fnmadd.h f4, f2, f9, f16, rdn # perform operation
fnmadd.h f4, f2, f9, f16, rmm # perform operation
fnmadd.h f4, f2, f9, f16, rne # perform operation
fnmadd.h f4, f2, f9, f16, rtz # perform operation
fnmadd.h f4, f2, f9, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f4, f2, f9, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f4, f2, f9, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f4, f2, f9, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f4, f2, f9, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f4, f2, f9, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x7bff)
li x30, 0x7de10018fb079540 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f16, 0(x2) # load 0x00000000 from memory into f16
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f29, 0(x2) # load 0x00007bff from memory into f29
li x3, 0x6fd7f9e5c298ea1 # load x3 with value 0x6fd7f9e5c298ea1
sw x3, 0(x2) # store 0x6fd7f9e5c298ea1 in memory
flh f28, 0(x2) # load 0x6fd7f9e5c298ea1 from memory into f28
fnmadd.h f30, f16, f29, f28, dyn # perform operation
fnmadd.h f30, f16, f29, f28, rdn # perform operation
fnmadd.h f30, f16, f29, f28, rmm # perform operation
fnmadd.h f30, f16, f29, f28, rne # perform operation
fnmadd.h f30, f16, f29, f28, rtz # perform operation
fnmadd.h f30, f16, f29, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f30, f16, f29, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f30, f16, f29, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f30, f16, f29, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f30, f16, f29, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f30, f16, f29, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0xfbff)
li x11, 0x387ecea1068f081c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f14, 0(x2) # load 0x00000000 from memory into f14
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f26, 0(x2) # load 0x0000fbff from memory into f26
li x3, 0x7aa6e1bd80d052bf # load x3 with value 0x7aa6e1bd80d052bf
sw x3, 0(x2) # store 0x7aa6e1bd80d052bf in memory
flh f9, 0(x2) # load 0x7aa6e1bd80d052bf from memory into f9
fnmadd.h f11, f14, f26, f9, dyn # perform operation
fnmadd.h f11, f14, f26, f9, rdn # perform operation
fnmadd.h f11, f14, f26, f9, rmm # perform operation
fnmadd.h f11, f14, f26, f9, rne # perform operation
fnmadd.h f11, f14, f26, f9, rtz # perform operation
fnmadd.h f11, f14, f26, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f11, f14, f26, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f11, f14, f26, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f11, f14, f26, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f11, f14, f26, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f11, f14, f26, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x3ff)
li x9, 0xec61b32bc7d7520c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f28, 0(x2) # load 0x00000000 from memory into f28
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f3, 0(x2) # load 0x000003ff from memory into f3
li x3, 0x83657fd4837e9dd4 # load x3 with value 0x83657fd4837e9dd4
sw x3, 0(x2) # store 0x83657fd4837e9dd4 in memory
flh f23, 0(x2) # load 0x83657fd4837e9dd4 from memory into f23
fnmadd.h f9, f28, f3, f23, dyn # perform operation
fnmadd.h f9, f28, f3, f23, rdn # perform operation
fnmadd.h f9, f28, f3, f23, rmm # perform operation
fnmadd.h f9, f28, f3, f23, rne # perform operation
fnmadd.h f9, f28, f3, f23, rtz # perform operation
fnmadd.h f9, f28, f3, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f9, f28, f3, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f9, f28, f3, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f9, f28, f3, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f9, f28, f3, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f9, f28, f3, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x83ff)
li x14, 0x49e7478d67c75e54 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f22, 0(x2) # load 0x00000000 from memory into f22
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f11, 0(x2) # load 0x000083ff from memory into f11
li x3, 0x9f902a4e0075523d # load x3 with value 0x9f902a4e0075523d
sw x3, 0(x2) # store 0x9f902a4e0075523d in memory
flh f17, 0(x2) # load 0x9f902a4e0075523d from memory into f17
fnmadd.h f14, f22, f11, f17, dyn # perform operation
fnmadd.h f14, f22, f11, f17, rdn # perform operation
fnmadd.h f14, f22, f11, f17, rmm # perform operation
fnmadd.h f14, f22, f11, f17, rne # perform operation
fnmadd.h f14, f22, f11, f17, rtz # perform operation
fnmadd.h f14, f22, f11, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f14, f22, f11, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f14, f22, f11, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f14, f22, f11, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f14, f22, f11, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f14, f22, f11, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x200)
li x12, 0x1b1d3c351191a340 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f25, 0(x2) # load 0x00000000 from memory into f25
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f19, 0(x2) # load 0x00000200 from memory into f19
li x3, 0x87c3fc8808fd5da1 # load x3 with value 0x87c3fc8808fd5da1
sw x3, 0(x2) # store 0x87c3fc8808fd5da1 in memory
flh f30, 0(x2) # load 0x87c3fc8808fd5da1 from memory into f30
fnmadd.h f12, f25, f19, f30, dyn # perform operation
fnmadd.h f12, f25, f19, f30, rdn # perform operation
fnmadd.h f12, f25, f19, f30, rmm # perform operation
fnmadd.h f12, f25, f19, f30, rne # perform operation
fnmadd.h f12, f25, f19, f30, rtz # perform operation
fnmadd.h f12, f25, f19, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f12, f25, f19, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f12, f25, f19, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f12, f25, f19, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f12, f25, f19, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f12, f25, f19, f30 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x8200)
li x3, 0x9e04184ed1c8e16f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f26, 0(x2) # load 0x00000000 from memory into f26
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f23, 0(x2) # load 0x00008200 from memory into f23
li x3, 0xda2d63316f6fc517 # load x3 with value 0xda2d63316f6fc517
sw x3, 0(x2) # store 0xda2d63316f6fc517 in memory
flh f10, 0(x2) # load 0xda2d63316f6fc517 from memory into f10
fnmadd.h f3, f26, f23, f10, dyn # perform operation
fnmadd.h f3, f26, f23, f10, rdn # perform operation
fnmadd.h f3, f26, f23, f10, rmm # perform operation
fnmadd.h f3, f26, f23, f10, rne # perform operation
fnmadd.h f3, f26, f23, f10, rtz # perform operation
fnmadd.h f3, f26, f23, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f3, f26, f23, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f3, f26, f23, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f3, f26, f23, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f3, f26, f23, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f3, f26, f23, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x1)
li x7, 0x0fb209a1b970888e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f16, 0(x2) # load 0x00000000 from memory into f16
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f10, 0(x2) # load 0x00000001 from memory into f10
li x3, 0x27609c19672676de # load x3 with value 0x27609c19672676de
sw x3, 0(x2) # store 0x27609c19672676de in memory
flh f4, 0(x2) # load 0x27609c19672676de from memory into f4
fnmadd.h f7, f16, f10, f4, dyn # perform operation
fnmadd.h f7, f16, f10, f4, rdn # perform operation
fnmadd.h f7, f16, f10, f4, rmm # perform operation
fnmadd.h f7, f16, f10, f4, rne # perform operation
fnmadd.h f7, f16, f10, f4, rtz # perform operation
fnmadd.h f7, f16, f10, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f7, f16, f10, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f7, f16, f10, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f7, f16, f10, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f7, f16, f10, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f7, f16, f10, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x8001)
li x17, 0xf1fd5ee2e72c085c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f6, 0(x2) # load 0x00000000 from memory into f6
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f4, 0(x2) # load 0x00008001 from memory into f4
li x3, 0x4418028afa71c7be # load x3 with value 0x4418028afa71c7be
sw x3, 0(x2) # store 0x4418028afa71c7be in memory
flh f13, 0(x2) # load 0x4418028afa71c7be from memory into f13
fnmadd.h f17, f6, f4, f13, dyn # perform operation
fnmadd.h f17, f6, f4, f13, rdn # perform operation
fnmadd.h f17, f6, f4, f13, rmm # perform operation
fnmadd.h f17, f6, f4, f13, rne # perform operation
fnmadd.h f17, f6, f4, f13, rtz # perform operation
fnmadd.h f17, f6, f4, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f17, f6, f4, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f17, f6, f4, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f17, f6, f4, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f17, f6, f4, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f17, f6, f4, f13 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x7c00)
li x7, 0x9ce88dd21310e677 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f10, 0(x2) # load 0x00000000 from memory into f10
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f14, 0(x2) # load 0x00007c00 from memory into f14
li x3, 0xe52e3a90e645f936 # load x3 with value 0xe52e3a90e645f936
sw x3, 0(x2) # store 0xe52e3a90e645f936 in memory
flh f15, 0(x2) # load 0xe52e3a90e645f936 from memory into f15
fnmadd.h f7, f10, f14, f15, dyn # perform operation
fnmadd.h f7, f10, f14, f15, rdn # perform operation
fnmadd.h f7, f10, f14, f15, rmm # perform operation
fnmadd.h f7, f10, f14, f15, rne # perform operation
fnmadd.h f7, f10, f14, f15, rtz # perform operation
fnmadd.h f7, f10, f14, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f7, f10, f14, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f7, f10, f14, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f7, f10, f14, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f7, f10, f14, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f7, f10, f14, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0xfc00)
li x31, 0xdb1fed357cf2db1d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f23, 0(x2) # load 0x00000000 from memory into f23
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f28, 0(x2) # load 0x0000fc00 from memory into f28
li x3, 0x109cf5794c92164e # load x3 with value 0x109cf5794c92164e
sw x3, 0(x2) # store 0x109cf5794c92164e in memory
flh f29, 0(x2) # load 0x109cf5794c92164e from memory into f29
fnmadd.h f31, f23, f28, f29, dyn # perform operation
fnmadd.h f31, f23, f28, f29, rdn # perform operation
fnmadd.h f31, f23, f28, f29, rmm # perform operation
fnmadd.h f31, f23, f28, f29, rne # perform operation
fnmadd.h f31, f23, f28, f29, rtz # perform operation
fnmadd.h f31, f23, f28, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f31, f23, f28, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f31, f23, f28, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f31, f23, f28, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f31, f23, f28, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f31, f23, f28, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x7e00)
li x12, 0x68a30c851dfb1dec # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f6, 0(x2) # load 0x00000000 from memory into f6
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f23, 0(x2) # load 0x00007e00 from memory into f23
li x3, 0xe4e94fd6af4d457c # load x3 with value 0xe4e94fd6af4d457c
sw x3, 0(x2) # store 0xe4e94fd6af4d457c in memory
flh f18, 0(x2) # load 0xe4e94fd6af4d457c from memory into f18
fnmadd.h f12, f6, f23, f18, dyn # perform operation
fnmadd.h f12, f6, f23, f18, rdn # perform operation
fnmadd.h f12, f6, f23, f18, rmm # perform operation
fnmadd.h f12, f6, f23, f18, rne # perform operation
fnmadd.h f12, f6, f23, f18, rtz # perform operation
fnmadd.h f12, f6, f23, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f12, f6, f23, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f12, f6, f23, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f12, f6, f23, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f12, f6, f23, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f12, f6, f23, f18 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x7fff)
li x22, 0x855520cf7d3116bb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f28, 0(x2) # load 0x00000000 from memory into f28
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f20, 0(x2) # load 0x00007fff from memory into f20
li x3, 0x5cfc99c861380b5 # load x3 with value 0x5cfc99c861380b5
sw x3, 0(x2) # store 0x5cfc99c861380b5 in memory
flh f16, 0(x2) # load 0x5cfc99c861380b5 from memory into f16
fnmadd.h f22, f28, f20, f16, dyn # perform operation
fnmadd.h f22, f28, f20, f16, rdn # perform operation
fnmadd.h f22, f28, f20, f16, rmm # perform operation
fnmadd.h f22, f28, f20, f16, rne # perform operation
fnmadd.h f22, f28, f20, f16, rtz # perform operation
fnmadd.h f22, f28, f20, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f22, f28, f20, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f22, f28, f20, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f22, f28, f20, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f22, f28, f20, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f22, f28, f20, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x7c01)
li x14, 0xddea53d10e478587 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f6, 0(x2) # load 0x00000000 from memory into f6
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f9, 0(x2) # load 0x00007c01 from memory into f9
li x3, 0xe81d82473168d402 # load x3 with value 0xe81d82473168d402
sw x3, 0(x2) # store 0xe81d82473168d402 in memory
flh f17, 0(x2) # load 0xe81d82473168d402 from memory into f17
fnmadd.h f14, f6, f9, f17, dyn # perform operation
fnmadd.h f14, f6, f9, f17, rdn # perform operation
fnmadd.h f14, f6, f9, f17, rmm # perform operation
fnmadd.h f14, f6, f9, f17, rne # perform operation
fnmadd.h f14, f6, f9, f17, rtz # perform operation
fnmadd.h f14, f6, f9, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f14, f6, f9, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f14, f6, f9, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f14, f6, f9, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f14, f6, f9, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f14, f6, f9, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x7dff)
li x26, 0xc7abe909003e919f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f10, 0(x2) # load 0x00000000 from memory into f10
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f19, 0(x2) # load 0x00007dff from memory into f19
li x3, 0xba3c53d24b640abd # load x3 with value 0xba3c53d24b640abd
sw x3, 0(x2) # store 0xba3c53d24b640abd in memory
flh f11, 0(x2) # load 0xba3c53d24b640abd from memory into f11
fnmadd.h f26, f10, f19, f11, dyn # perform operation
fnmadd.h f26, f10, f19, f11, rdn # perform operation
fnmadd.h f26, f10, f19, f11, rmm # perform operation
fnmadd.h f26, f10, f19, f11, rne # perform operation
fnmadd.h f26, f10, f19, f11, rtz # perform operation
fnmadd.h f26, f10, f19, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f26, f10, f19, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f26, f10, f19, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f26, f10, f19, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f26, f10, f19, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f26, f10, f19, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x58b4)
li x3, 0xa82c3a57ff952807 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f31, 0(x2) # load 0x00000000 from memory into f31
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f21, 0(x2) # load 0x000058b4 from memory into f21
li x3, 0x3c559f14cf0d05c7 # load x3 with value 0x3c559f14cf0d05c7
sw x3, 0(x2) # store 0x3c559f14cf0d05c7 in memory
flh f29, 0(x2) # load 0x3c559f14cf0d05c7 from memory into f29
fnmadd.h f3, f31, f21, f29, dyn # perform operation
fnmadd.h f3, f31, f21, f29, rdn # perform operation
fnmadd.h f3, f31, f21, f29, rmm # perform operation
fnmadd.h f3, f31, f21, f29, rne # perform operation
fnmadd.h f3, f31, f21, f29, rtz # perform operation
fnmadd.h f3, f31, f21, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f3, f31, f21, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f3, f31, f21, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f3, f31, f21, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f3, f31, f21, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f3, f31, f21, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0xc93a)
li x10, 0xf5f2e64977e7ee58 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f19, 0(x2) # load 0x00000000 from memory into f19
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f15, 0(x2) # load 0x0000c93a from memory into f15
li x3, 0x859bbd16e6c173ed # load x3 with value 0x859bbd16e6c173ed
sw x3, 0(x2) # store 0x859bbd16e6c173ed in memory
flh f8, 0(x2) # load 0x859bbd16e6c173ed from memory into f8
fnmadd.h f10, f19, f15, f8, dyn # perform operation
fnmadd.h f10, f19, f15, f8, rdn # perform operation
fnmadd.h f10, f19, f15, f8, rmm # perform operation
fnmadd.h f10, f19, f15, f8, rne # perform operation
fnmadd.h f10, f19, f15, f8, rtz # perform operation
fnmadd.h f10, f19, f15, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f10, f19, f15, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f10, f19, f15, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f10, f19, f15, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f10, f19, f15, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f10, f19, f15, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000 fs2 = 0x0)
li x29, 0xcf13a47def192178 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f15, 0(x2) # load 0x00008000 from memory into f15
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f22, 0(x2) # load 0x00000000 from memory into f22
li x3, 0xf3614ebb9de254f1 # load x3 with value 0xf3614ebb9de254f1
sw x3, 0(x2) # store 0xf3614ebb9de254f1 in memory
flh f21, 0(x2) # load 0xf3614ebb9de254f1 from memory into f21
fnmadd.h f29, f15, f22, f21, dyn # perform operation
fnmadd.h f29, f15, f22, f21, rdn # perform operation
fnmadd.h f29, f15, f22, f21, rmm # perform operation
fnmadd.h f29, f15, f22, f21, rne # perform operation
fnmadd.h f29, f15, f22, f21, rtz # perform operation
fnmadd.h f29, f15, f22, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f29, f15, f22, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f29, f15, f22, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f29, f15, f22, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f29, f15, f22, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f29, f15, f22, f21 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000 fs2 = 0x8000)
li x17, 0x7d4f53ff482f06a2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f31, 0(x2) # load 0x00008000 from memory into f31
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f20, 0(x2) # load 0x00008000 from memory into f20
li x3, 0xacd0d55f8cfd690b # load x3 with value 0xacd0d55f8cfd690b
sw x3, 0(x2) # store 0xacd0d55f8cfd690b in memory
flh f6, 0(x2) # load 0xacd0d55f8cfd690b from memory into f6
fnmadd.h f17, f31, f20, f6, dyn # perform operation
fnmadd.h f17, f31, f20, f6, rdn # perform operation
fnmadd.h f17, f31, f20, f6, rmm # perform operation
fnmadd.h f17, f31, f20, f6, rne # perform operation
fnmadd.h f17, f31, f20, f6, rtz # perform operation
fnmadd.h f17, f31, f20, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f17, f31, f20, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f17, f31, f20, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f17, f31, f20, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f17, f31, f20, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f17, f31, f20, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000 fs2 = 0x3c00)
li x16, 0xfc29e22c8b13a4d8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f17, 0(x2) # load 0x00008000 from memory into f17
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f2, 0(x2) # load 0x00003c00 from memory into f2
li x3, 0x1ad1d0de59eda3cc # load x3 with value 0x1ad1d0de59eda3cc
sw x3, 0(x2) # store 0x1ad1d0de59eda3cc in memory
flh f20, 0(x2) # load 0x1ad1d0de59eda3cc from memory into f20
fnmadd.h f16, f17, f2, f20, dyn # perform operation
fnmadd.h f16, f17, f2, f20, rdn # perform operation
fnmadd.h f16, f17, f2, f20, rmm # perform operation
fnmadd.h f16, f17, f2, f20, rne # perform operation
fnmadd.h f16, f17, f2, f20, rtz # perform operation
fnmadd.h f16, f17, f2, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f16, f17, f2, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f16, f17, f2, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f16, f17, f2, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f16, f17, f2, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f16, f17, f2, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000 fs2 = 0xbc00)
li x12, 0x3d70f59701f1b5d4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f18, 0(x2) # load 0x00008000 from memory into f18
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f1, 0(x2) # load 0x0000bc00 from memory into f1
li x3, 0xa71ef47179a23820 # load x3 with value 0xa71ef47179a23820
sw x3, 0(x2) # store 0xa71ef47179a23820 in memory
flh f25, 0(x2) # load 0xa71ef47179a23820 from memory into f25
fnmadd.h f12, f18, f1, f25, dyn # perform operation
fnmadd.h f12, f18, f1, f25, rdn # perform operation
fnmadd.h f12, f18, f1, f25, rmm # perform operation
fnmadd.h f12, f18, f1, f25, rne # perform operation
fnmadd.h f12, f18, f1, f25, rtz # perform operation
fnmadd.h f12, f18, f1, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f12, f18, f1, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f12, f18, f1, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f12, f18, f1, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f12, f18, f1, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f12, f18, f1, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000 fs2 = 0x3e00)
li x1, 0x781dee770823f7d4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f6, 0(x2) # load 0x00008000 from memory into f6
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f2, 0(x2) # load 0x00003e00 from memory into f2
li x3, 0x4f9e5f6a3d3f177b # load x3 with value 0x4f9e5f6a3d3f177b
sw x3, 0(x2) # store 0x4f9e5f6a3d3f177b in memory
flh f14, 0(x2) # load 0x4f9e5f6a3d3f177b from memory into f14
fnmadd.h f1, f6, f2, f14, dyn # perform operation
fnmadd.h f1, f6, f2, f14, rdn # perform operation
fnmadd.h f1, f6, f2, f14, rmm # perform operation
fnmadd.h f1, f6, f2, f14, rne # perform operation
fnmadd.h f1, f6, f2, f14, rtz # perform operation
fnmadd.h f1, f6, f2, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f1, f6, f2, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f1, f6, f2, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f1, f6, f2, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f1, f6, f2, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f1, f6, f2, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000 fs2 = 0xbe00)
li x24, 0x86963be6caaa5668 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f30, 0(x2) # load 0x00008000 from memory into f30
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f16, 0(x2) # load 0x0000be00 from memory into f16
li x3, 0xf116fdfcbd030e5f # load x3 with value 0xf116fdfcbd030e5f
sw x3, 0(x2) # store 0xf116fdfcbd030e5f in memory
flh f1, 0(x2) # load 0xf116fdfcbd030e5f from memory into f1
fnmadd.h f24, f30, f16, f1, dyn # perform operation
fnmadd.h f24, f30, f16, f1, rdn # perform operation
fnmadd.h f24, f30, f16, f1, rmm # perform operation
fnmadd.h f24, f30, f16, f1, rne # perform operation
fnmadd.h f24, f30, f16, f1, rtz # perform operation
fnmadd.h f24, f30, f16, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f24, f30, f16, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f24, f30, f16, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f24, f30, f16, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f24, f30, f16, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f24, f30, f16, f1 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000 fs2 = 0x4000)
li x12, 0x91781db94c8e3727 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f20, 0(x2) # load 0x00008000 from memory into f20
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f9, 0(x2) # load 0x00004000 from memory into f9
li x3, 0xa2ba8727989c3ca9 # load x3 with value 0xa2ba8727989c3ca9
sw x3, 0(x2) # store 0xa2ba8727989c3ca9 in memory
flh f14, 0(x2) # load 0xa2ba8727989c3ca9 from memory into f14
fnmadd.h f12, f20, f9, f14, dyn # perform operation
fnmadd.h f12, f20, f9, f14, rdn # perform operation
fnmadd.h f12, f20, f9, f14, rmm # perform operation
fnmadd.h f12, f20, f9, f14, rne # perform operation
fnmadd.h f12, f20, f9, f14, rtz # perform operation
fnmadd.h f12, f20, f9, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f12, f20, f9, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f12, f20, f9, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f12, f20, f9, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f12, f20, f9, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f12, f20, f9, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000 fs2 = 0xc000)
li x12, 0x05cb38f1b52283a6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f22, 0(x2) # load 0x00008000 from memory into f22
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f30, 0(x2) # load 0x0000c000 from memory into f30
li x3, 0x9de6fb6c87671426 # load x3 with value 0x9de6fb6c87671426
sw x3, 0(x2) # store 0x9de6fb6c87671426 in memory
flh f5, 0(x2) # load 0x9de6fb6c87671426 from memory into f5
fnmadd.h f12, f22, f30, f5, dyn # perform operation
fnmadd.h f12, f22, f30, f5, rdn # perform operation
fnmadd.h f12, f22, f30, f5, rmm # perform operation
fnmadd.h f12, f22, f30, f5, rne # perform operation
fnmadd.h f12, f22, f30, f5, rtz # perform operation
fnmadd.h f12, f22, f30, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f12, f22, f30, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f12, f22, f30, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f12, f22, f30, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f12, f22, f30, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f12, f22, f30, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000 fs2 = 0x400)
li x13, 0x84042cd8c8176278 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f20, 0(x2) # load 0x00008000 from memory into f20
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f16, 0(x2) # load 0x00000400 from memory into f16
li x3, 0xfc107fbee1a60165 # load x3 with value 0xfc107fbee1a60165
sw x3, 0(x2) # store 0xfc107fbee1a60165 in memory
flh f7, 0(x2) # load 0xfc107fbee1a60165 from memory into f7
fnmadd.h f13, f20, f16, f7, dyn # perform operation
fnmadd.h f13, f20, f16, f7, rdn # perform operation
fnmadd.h f13, f20, f16, f7, rmm # perform operation
fnmadd.h f13, f20, f16, f7, rne # perform operation
fnmadd.h f13, f20, f16, f7, rtz # perform operation
fnmadd.h f13, f20, f16, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f13, f20, f16, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f13, f20, f16, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f13, f20, f16, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f13, f20, f16, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f13, f20, f16, f7 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000 fs2 = 0x8400)
li x21, 0xc05b3be7462353be # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f17, 0(x2) # load 0x00008000 from memory into f17
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f13, 0(x2) # load 0x00008400 from memory into f13
li x3, 0x80beb092d2512d15 # load x3 with value 0x80beb092d2512d15
sw x3, 0(x2) # store 0x80beb092d2512d15 in memory
flh f16, 0(x2) # load 0x80beb092d2512d15 from memory into f16
fnmadd.h f21, f17, f13, f16, dyn # perform operation
fnmadd.h f21, f17, f13, f16, rdn # perform operation
fnmadd.h f21, f17, f13, f16, rmm # perform operation
fnmadd.h f21, f17, f13, f16, rne # perform operation
fnmadd.h f21, f17, f13, f16, rtz # perform operation
fnmadd.h f21, f17, f13, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f21, f17, f13, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f21, f17, f13, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f21, f17, f13, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f21, f17, f13, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f21, f17, f13, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000 fs2 = 0x7bff)
li x24, 0xf315ebede5e91129 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f21, 0(x2) # load 0x00008000 from memory into f21
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f3, 0(x2) # load 0x00007bff from memory into f3
li x3, 0xcdef9add6ab334cf # load x3 with value 0xcdef9add6ab334cf
sw x3, 0(x2) # store 0xcdef9add6ab334cf in memory
flh f30, 0(x2) # load 0xcdef9add6ab334cf from memory into f30
fnmadd.h f24, f21, f3, f30, dyn # perform operation
fnmadd.h f24, f21, f3, f30, rdn # perform operation
fnmadd.h f24, f21, f3, f30, rmm # perform operation
fnmadd.h f24, f21, f3, f30, rne # perform operation
fnmadd.h f24, f21, f3, f30, rtz # perform operation
fnmadd.h f24, f21, f3, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f24, f21, f3, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f24, f21, f3, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f24, f21, f3, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f24, f21, f3, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f24, f21, f3, f30 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000 fs2 = 0xfbff)
li x18, 0xe8791f3f0e37a0e8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f8, 0(x2) # load 0x00008000 from memory into f8
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f16, 0(x2) # load 0x0000fbff from memory into f16
li x3, 0x6601853ceff22f54 # load x3 with value 0x6601853ceff22f54
sw x3, 0(x2) # store 0x6601853ceff22f54 in memory
flh f3, 0(x2) # load 0x6601853ceff22f54 from memory into f3
fnmadd.h f18, f8, f16, f3, dyn # perform operation
fnmadd.h f18, f8, f16, f3, rdn # perform operation
fnmadd.h f18, f8, f16, f3, rmm # perform operation
fnmadd.h f18, f8, f16, f3, rne # perform operation
fnmadd.h f18, f8, f16, f3, rtz # perform operation
fnmadd.h f18, f8, f16, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f18, f8, f16, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f18, f8, f16, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f18, f8, f16, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f18, f8, f16, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f18, f8, f16, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000 fs2 = 0x3ff)
li x11, 0x16086e9613dc7c09 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f28, 0(x2) # load 0x00008000 from memory into f28
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f18, 0(x2) # load 0x000003ff from memory into f18
li x3, 0x93cfc918a488c502 # load x3 with value 0x93cfc918a488c502
sw x3, 0(x2) # store 0x93cfc918a488c502 in memory
flh f5, 0(x2) # load 0x93cfc918a488c502 from memory into f5
fnmadd.h f11, f28, f18, f5, dyn # perform operation
fnmadd.h f11, f28, f18, f5, rdn # perform operation
fnmadd.h f11, f28, f18, f5, rmm # perform operation
fnmadd.h f11, f28, f18, f5, rne # perform operation
fnmadd.h f11, f28, f18, f5, rtz # perform operation
fnmadd.h f11, f28, f18, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f11, f28, f18, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f11, f28, f18, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f11, f28, f18, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f11, f28, f18, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f11, f28, f18, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000 fs2 = 0x83ff)
li x18, 0x96c8ae0492219584 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f17, 0(x2) # load 0x00008000 from memory into f17
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f31, 0(x2) # load 0x000083ff from memory into f31
li x3, 0x7a9694595a91dc00 # load x3 with value 0x7a9694595a91dc00
sw x3, 0(x2) # store 0x7a9694595a91dc00 in memory
flh f5, 0(x2) # load 0x7a9694595a91dc00 from memory into f5
fnmadd.h f18, f17, f31, f5, dyn # perform operation
fnmadd.h f18, f17, f31, f5, rdn # perform operation
fnmadd.h f18, f17, f31, f5, rmm # perform operation
fnmadd.h f18, f17, f31, f5, rne # perform operation
fnmadd.h f18, f17, f31, f5, rtz # perform operation
fnmadd.h f18, f17, f31, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f18, f17, f31, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f18, f17, f31, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f18, f17, f31, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f18, f17, f31, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f18, f17, f31, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000 fs2 = 0x200)
li x3, 0x9b68c4558786f6e9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f26, 0(x2) # load 0x00008000 from memory into f26
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f19, 0(x2) # load 0x00000200 from memory into f19
li x3, 0x40bde9da096b6d9f # load x3 with value 0x40bde9da096b6d9f
sw x3, 0(x2) # store 0x40bde9da096b6d9f in memory
flh f11, 0(x2) # load 0x40bde9da096b6d9f from memory into f11
fnmadd.h f3, f26, f19, f11, dyn # perform operation
fnmadd.h f3, f26, f19, f11, rdn # perform operation
fnmadd.h f3, f26, f19, f11, rmm # perform operation
fnmadd.h f3, f26, f19, f11, rne # perform operation
fnmadd.h f3, f26, f19, f11, rtz # perform operation
fnmadd.h f3, f26, f19, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f3, f26, f19, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f3, f26, f19, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f3, f26, f19, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f3, f26, f19, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f3, f26, f19, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000 fs2 = 0x8200)
li x3, 0xd12394d411afd7c3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f25, 0(x2) # load 0x00008000 from memory into f25
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f17, 0(x2) # load 0x00008200 from memory into f17
li x3, 0xd7cad9c8c3ee1685 # load x3 with value 0xd7cad9c8c3ee1685
sw x3, 0(x2) # store 0xd7cad9c8c3ee1685 in memory
flh f23, 0(x2) # load 0xd7cad9c8c3ee1685 from memory into f23
fnmadd.h f3, f25, f17, f23, dyn # perform operation
fnmadd.h f3, f25, f17, f23, rdn # perform operation
fnmadd.h f3, f25, f17, f23, rmm # perform operation
fnmadd.h f3, f25, f17, f23, rne # perform operation
fnmadd.h f3, f25, f17, f23, rtz # perform operation
fnmadd.h f3, f25, f17, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f3, f25, f17, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f3, f25, f17, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f3, f25, f17, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f3, f25, f17, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f3, f25, f17, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000 fs2 = 0x1)
li x14, 0xaf31759a60f44835 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f30, 0(x2) # load 0x00008000 from memory into f30
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f5, 0(x2) # load 0x00000001 from memory into f5
li x3, 0x767bf0c5a8ab37c0 # load x3 with value 0x767bf0c5a8ab37c0
sw x3, 0(x2) # store 0x767bf0c5a8ab37c0 in memory
flh f6, 0(x2) # load 0x767bf0c5a8ab37c0 from memory into f6
fnmadd.h f14, f30, f5, f6, dyn # perform operation
fnmadd.h f14, f30, f5, f6, rdn # perform operation
fnmadd.h f14, f30, f5, f6, rmm # perform operation
fnmadd.h f14, f30, f5, f6, rne # perform operation
fnmadd.h f14, f30, f5, f6, rtz # perform operation
fnmadd.h f14, f30, f5, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f14, f30, f5, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f14, f30, f5, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f14, f30, f5, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f14, f30, f5, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f14, f30, f5, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000 fs2 = 0x8001)
li x21, 0x859068c9438ea015 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f25, 0(x2) # load 0x00008000 from memory into f25
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f7, 0(x2) # load 0x00008001 from memory into f7
li x3, 0xed2c16849e5825ba # load x3 with value 0xed2c16849e5825ba
sw x3, 0(x2) # store 0xed2c16849e5825ba in memory
flh f30, 0(x2) # load 0xed2c16849e5825ba from memory into f30
fnmadd.h f21, f25, f7, f30, dyn # perform operation
fnmadd.h f21, f25, f7, f30, rdn # perform operation
fnmadd.h f21, f25, f7, f30, rmm # perform operation
fnmadd.h f21, f25, f7, f30, rne # perform operation
fnmadd.h f21, f25, f7, f30, rtz # perform operation
fnmadd.h f21, f25, f7, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f21, f25, f7, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f21, f25, f7, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f21, f25, f7, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f21, f25, f7, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f21, f25, f7, f30 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000 fs2 = 0x7c00)
li x17, 0x80b81bcd802b2a13 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f24, 0(x2) # load 0x00008000 from memory into f24
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f27, 0(x2) # load 0x00007c00 from memory into f27
li x3, 0x887f7b8cf92a4788 # load x3 with value 0x887f7b8cf92a4788
sw x3, 0(x2) # store 0x887f7b8cf92a4788 in memory
flh f7, 0(x2) # load 0x887f7b8cf92a4788 from memory into f7
fnmadd.h f17, f24, f27, f7, dyn # perform operation
fnmadd.h f17, f24, f27, f7, rdn # perform operation
fnmadd.h f17, f24, f27, f7, rmm # perform operation
fnmadd.h f17, f24, f27, f7, rne # perform operation
fnmadd.h f17, f24, f27, f7, rtz # perform operation
fnmadd.h f17, f24, f27, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f17, f24, f27, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f17, f24, f27, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f17, f24, f27, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f17, f24, f27, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f17, f24, f27, f7 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000 fs2 = 0xfc00)
li x27, 0xe86bea86810ac6c8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f12, 0(x2) # load 0x00008000 from memory into f12
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f29, 0(x2) # load 0x0000fc00 from memory into f29
li x3, 0x789dec3c5f39d3b1 # load x3 with value 0x789dec3c5f39d3b1
sw x3, 0(x2) # store 0x789dec3c5f39d3b1 in memory
flh f4, 0(x2) # load 0x789dec3c5f39d3b1 from memory into f4
fnmadd.h f27, f12, f29, f4, dyn # perform operation
fnmadd.h f27, f12, f29, f4, rdn # perform operation
fnmadd.h f27, f12, f29, f4, rmm # perform operation
fnmadd.h f27, f12, f29, f4, rne # perform operation
fnmadd.h f27, f12, f29, f4, rtz # perform operation
fnmadd.h f27, f12, f29, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f27, f12, f29, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f27, f12, f29, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f27, f12, f29, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f27, f12, f29, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f27, f12, f29, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000 fs2 = 0x7e00)
li x15, 0x96e13fabeabf83b0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f14, 0(x2) # load 0x00008000 from memory into f14
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f26, 0(x2) # load 0x00007e00 from memory into f26
li x3, 0xd244193f2771b074 # load x3 with value 0xd244193f2771b074
sw x3, 0(x2) # store 0xd244193f2771b074 in memory
flh f27, 0(x2) # load 0xd244193f2771b074 from memory into f27
fnmadd.h f15, f14, f26, f27, dyn # perform operation
fnmadd.h f15, f14, f26, f27, rdn # perform operation
fnmadd.h f15, f14, f26, f27, rmm # perform operation
fnmadd.h f15, f14, f26, f27, rne # perform operation
fnmadd.h f15, f14, f26, f27, rtz # perform operation
fnmadd.h f15, f14, f26, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f15, f14, f26, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f15, f14, f26, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f15, f14, f26, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f15, f14, f26, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f15, f14, f26, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000 fs2 = 0x7fff)
li x10, 0xb0bfd288d2a67399 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f18, 0(x2) # load 0x00008000 from memory into f18
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f4, 0(x2) # load 0x00007fff from memory into f4
li x3, 0x5122a3ea2725b354 # load x3 with value 0x5122a3ea2725b354
sw x3, 0(x2) # store 0x5122a3ea2725b354 in memory
flh f5, 0(x2) # load 0x5122a3ea2725b354 from memory into f5
fnmadd.h f10, f18, f4, f5, dyn # perform operation
fnmadd.h f10, f18, f4, f5, rdn # perform operation
fnmadd.h f10, f18, f4, f5, rmm # perform operation
fnmadd.h f10, f18, f4, f5, rne # perform operation
fnmadd.h f10, f18, f4, f5, rtz # perform operation
fnmadd.h f10, f18, f4, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f10, f18, f4, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f10, f18, f4, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f10, f18, f4, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f10, f18, f4, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f10, f18, f4, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000 fs2 = 0x7c01)
li x28, 0x1fa4e2ae77e839be # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f18, 0(x2) # load 0x00008000 from memory into f18
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f22, 0(x2) # load 0x00007c01 from memory into f22
li x3, 0x9aef4d9fa3799103 # load x3 with value 0x9aef4d9fa3799103
sw x3, 0(x2) # store 0x9aef4d9fa3799103 in memory
flh f17, 0(x2) # load 0x9aef4d9fa3799103 from memory into f17
fnmadd.h f28, f18, f22, f17, dyn # perform operation
fnmadd.h f28, f18, f22, f17, rdn # perform operation
fnmadd.h f28, f18, f22, f17, rmm # perform operation
fnmadd.h f28, f18, f22, f17, rne # perform operation
fnmadd.h f28, f18, f22, f17, rtz # perform operation
fnmadd.h f28, f18, f22, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f28, f18, f22, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f28, f18, f22, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f28, f18, f22, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f28, f18, f22, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f28, f18, f22, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000 fs2 = 0x7dff)
li x15, 0x1662b0e8e8759e26 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f25, 0(x2) # load 0x00008000 from memory into f25
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f1, 0(x2) # load 0x00007dff from memory into f1
li x3, 0x30d92f89ada6a651 # load x3 with value 0x30d92f89ada6a651
sw x3, 0(x2) # store 0x30d92f89ada6a651 in memory
flh f20, 0(x2) # load 0x30d92f89ada6a651 from memory into f20
fnmadd.h f15, f25, f1, f20, dyn # perform operation
fnmadd.h f15, f25, f1, f20, rdn # perform operation
fnmadd.h f15, f25, f1, f20, rmm # perform operation
fnmadd.h f15, f25, f1, f20, rne # perform operation
fnmadd.h f15, f25, f1, f20, rtz # perform operation
fnmadd.h f15, f25, f1, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f15, f25, f1, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f15, f25, f1, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f15, f25, f1, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f15, f25, f1, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f15, f25, f1, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000 fs2 = 0x58b4)
li x12, 0x52bbc996353827f0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f7, 0(x2) # load 0x00008000 from memory into f7
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f3, 0(x2) # load 0x000058b4 from memory into f3
li x3, 0x997e2e65e26dd8d5 # load x3 with value 0x997e2e65e26dd8d5
sw x3, 0(x2) # store 0x997e2e65e26dd8d5 in memory
flh f21, 0(x2) # load 0x997e2e65e26dd8d5 from memory into f21
fnmadd.h f12, f7, f3, f21, dyn # perform operation
fnmadd.h f12, f7, f3, f21, rdn # perform operation
fnmadd.h f12, f7, f3, f21, rmm # perform operation
fnmadd.h f12, f7, f3, f21, rne # perform operation
fnmadd.h f12, f7, f3, f21, rtz # perform operation
fnmadd.h f12, f7, f3, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f12, f7, f3, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f12, f7, f3, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f12, f7, f3, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f12, f7, f3, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f12, f7, f3, f21 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000 fs2 = 0xc93a)
li x22, 0x88d67cab664ea847 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f16, 0(x2) # load 0x00008000 from memory into f16
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f23, 0(x2) # load 0x0000c93a from memory into f23
li x3, 0x4d195158e464cd2e # load x3 with value 0x4d195158e464cd2e
sw x3, 0(x2) # store 0x4d195158e464cd2e in memory
flh f9, 0(x2) # load 0x4d195158e464cd2e from memory into f9
fnmadd.h f22, f16, f23, f9, dyn # perform operation
fnmadd.h f22, f16, f23, f9, rdn # perform operation
fnmadd.h f22, f16, f23, f9, rmm # perform operation
fnmadd.h f22, f16, f23, f9, rne # perform operation
fnmadd.h f22, f16, f23, f9, rtz # perform operation
fnmadd.h f22, f16, f23, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f22, f16, f23, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f22, f16, f23, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f22, f16, f23, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f22, f16, f23, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f22, f16, f23, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3c00 fs2 = 0x0)
li x11, 0x6602c4f1e1b3a55f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f6, 0(x2) # load 0x00003c00 from memory into f6
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f13, 0(x2) # load 0x00000000 from memory into f13
li x3, 0xa1d16122999de6fb # load x3 with value 0xa1d16122999de6fb
sw x3, 0(x2) # store 0xa1d16122999de6fb in memory
flh f3, 0(x2) # load 0xa1d16122999de6fb from memory into f3
fnmadd.h f11, f6, f13, f3, dyn # perform operation
fnmadd.h f11, f6, f13, f3, rdn # perform operation
fnmadd.h f11, f6, f13, f3, rmm # perform operation
fnmadd.h f11, f6, f13, f3, rne # perform operation
fnmadd.h f11, f6, f13, f3, rtz # perform operation
fnmadd.h f11, f6, f13, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f11, f6, f13, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f11, f6, f13, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f11, f6, f13, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f11, f6, f13, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f11, f6, f13, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3c00 fs2 = 0x8000)
li x2, 0x240f1d4c96e1e166 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f17, 0(x2) # load 0x00003c00 from memory into f17
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f18, 0(x2) # load 0x00008000 from memory into f18
li x3, 0x6ce33edeb1e27a59 # load x3 with value 0x6ce33edeb1e27a59
sw x3, 0(x2) # store 0x6ce33edeb1e27a59 in memory
flh f4, 0(x2) # load 0x6ce33edeb1e27a59 from memory into f4
fnmadd.h f2, f17, f18, f4, dyn # perform operation
fnmadd.h f2, f17, f18, f4, rdn # perform operation
fnmadd.h f2, f17, f18, f4, rmm # perform operation
fnmadd.h f2, f17, f18, f4, rne # perform operation
fnmadd.h f2, f17, f18, f4, rtz # perform operation
fnmadd.h f2, f17, f18, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f2, f17, f18, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f2, f17, f18, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f2, f17, f18, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f2, f17, f18, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f2, f17, f18, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3c00 fs2 = 0x3c00)
li x13, 0x951be0aaaff57d8a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f3, 0(x2) # load 0x00003c00 from memory into f3
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f18, 0(x2) # load 0x00003c00 from memory into f18
li x3, 0xea32e27bc054f2df # load x3 with value 0xea32e27bc054f2df
sw x3, 0(x2) # store 0xea32e27bc054f2df in memory
flh f15, 0(x2) # load 0xea32e27bc054f2df from memory into f15
fnmadd.h f13, f3, f18, f15, dyn # perform operation
fnmadd.h f13, f3, f18, f15, rdn # perform operation
fnmadd.h f13, f3, f18, f15, rmm # perform operation
fnmadd.h f13, f3, f18, f15, rne # perform operation
fnmadd.h f13, f3, f18, f15, rtz # perform operation
fnmadd.h f13, f3, f18, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f13, f3, f18, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f13, f3, f18, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f13, f3, f18, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f13, f3, f18, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f13, f3, f18, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3c00 fs2 = 0xbc00)
li x23, 0x99d739bdc76a0f9e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f30, 0(x2) # load 0x00003c00 from memory into f30
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f13, 0(x2) # load 0x0000bc00 from memory into f13
li x3, 0xd562639f8d3ac104 # load x3 with value 0xd562639f8d3ac104
sw x3, 0(x2) # store 0xd562639f8d3ac104 in memory
flh f11, 0(x2) # load 0xd562639f8d3ac104 from memory into f11
fnmadd.h f23, f30, f13, f11, dyn # perform operation
fnmadd.h f23, f30, f13, f11, rdn # perform operation
fnmadd.h f23, f30, f13, f11, rmm # perform operation
fnmadd.h f23, f30, f13, f11, rne # perform operation
fnmadd.h f23, f30, f13, f11, rtz # perform operation
fnmadd.h f23, f30, f13, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f23, f30, f13, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f23, f30, f13, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f23, f30, f13, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f23, f30, f13, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f23, f30, f13, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3c00 fs2 = 0x3e00)
li x11, 0x18e3ddd719759e6e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f30, 0(x2) # load 0x00003c00 from memory into f30
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f12, 0(x2) # load 0x00003e00 from memory into f12
li x3, 0xf8b83a41f4c4a518 # load x3 with value 0xf8b83a41f4c4a518
sw x3, 0(x2) # store 0xf8b83a41f4c4a518 in memory
flh f15, 0(x2) # load 0xf8b83a41f4c4a518 from memory into f15
fnmadd.h f11, f30, f12, f15, dyn # perform operation
fnmadd.h f11, f30, f12, f15, rdn # perform operation
fnmadd.h f11, f30, f12, f15, rmm # perform operation
fnmadd.h f11, f30, f12, f15, rne # perform operation
fnmadd.h f11, f30, f12, f15, rtz # perform operation
fnmadd.h f11, f30, f12, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f11, f30, f12, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f11, f30, f12, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f11, f30, f12, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f11, f30, f12, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f11, f30, f12, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3c00 fs2 = 0xbe00)
li x26, 0x98a50540943ab715 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f17, 0(x2) # load 0x00003c00 from memory into f17
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f14, 0(x2) # load 0x0000be00 from memory into f14
li x3, 0x5a2da58612c713b9 # load x3 with value 0x5a2da58612c713b9
sw x3, 0(x2) # store 0x5a2da58612c713b9 in memory
flh f23, 0(x2) # load 0x5a2da58612c713b9 from memory into f23
fnmadd.h f26, f17, f14, f23, dyn # perform operation
fnmadd.h f26, f17, f14, f23, rdn # perform operation
fnmadd.h f26, f17, f14, f23, rmm # perform operation
fnmadd.h f26, f17, f14, f23, rne # perform operation
fnmadd.h f26, f17, f14, f23, rtz # perform operation
fnmadd.h f26, f17, f14, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f26, f17, f14, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f26, f17, f14, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f26, f17, f14, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f26, f17, f14, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f26, f17, f14, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3c00 fs2 = 0x4000)
li x21, 0x5d447e9cf28073ad # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f18, 0(x2) # load 0x00003c00 from memory into f18
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f15, 0(x2) # load 0x00004000 from memory into f15
li x3, 0xc1458755dfa6ee83 # load x3 with value 0xc1458755dfa6ee83
sw x3, 0(x2) # store 0xc1458755dfa6ee83 in memory
flh f7, 0(x2) # load 0xc1458755dfa6ee83 from memory into f7
fnmadd.h f21, f18, f15, f7, dyn # perform operation
fnmadd.h f21, f18, f15, f7, rdn # perform operation
fnmadd.h f21, f18, f15, f7, rmm # perform operation
fnmadd.h f21, f18, f15, f7, rne # perform operation
fnmadd.h f21, f18, f15, f7, rtz # perform operation
fnmadd.h f21, f18, f15, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f21, f18, f15, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f21, f18, f15, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f21, f18, f15, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f21, f18, f15, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f21, f18, f15, f7 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3c00 fs2 = 0xc000)
li x4, 0xbf9df581f55e5e04 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f21, 0(x2) # load 0x00003c00 from memory into f21
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f11, 0(x2) # load 0x0000c000 from memory into f11
li x3, 0x674a4676b3e01ee9 # load x3 with value 0x674a4676b3e01ee9
sw x3, 0(x2) # store 0x674a4676b3e01ee9 in memory
flh f14, 0(x2) # load 0x674a4676b3e01ee9 from memory into f14
fnmadd.h f4, f21, f11, f14, dyn # perform operation
fnmadd.h f4, f21, f11, f14, rdn # perform operation
fnmadd.h f4, f21, f11, f14, rmm # perform operation
fnmadd.h f4, f21, f11, f14, rne # perform operation
fnmadd.h f4, f21, f11, f14, rtz # perform operation
fnmadd.h f4, f21, f11, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f4, f21, f11, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f4, f21, f11, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f4, f21, f11, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f4, f21, f11, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f4, f21, f11, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3c00 fs2 = 0x400)
li x20, 0x9483cc842eede7bf # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f26, 0(x2) # load 0x00003c00 from memory into f26
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f14, 0(x2) # load 0x00000400 from memory into f14
li x3, 0x833ea7bd6095ad93 # load x3 with value 0x833ea7bd6095ad93
sw x3, 0(x2) # store 0x833ea7bd6095ad93 in memory
flh f31, 0(x2) # load 0x833ea7bd6095ad93 from memory into f31
fnmadd.h f20, f26, f14, f31, dyn # perform operation
fnmadd.h f20, f26, f14, f31, rdn # perform operation
fnmadd.h f20, f26, f14, f31, rmm # perform operation
fnmadd.h f20, f26, f14, f31, rne # perform operation
fnmadd.h f20, f26, f14, f31, rtz # perform operation
fnmadd.h f20, f26, f14, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f20, f26, f14, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f20, f26, f14, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f20, f26, f14, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f20, f26, f14, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f20, f26, f14, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3c00 fs2 = 0x8400)
li x22, 0x6384d8085d253d3f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f27, 0(x2) # load 0x00003c00 from memory into f27
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f5, 0(x2) # load 0x00008400 from memory into f5
li x3, 0x28ff6bb81b81ef69 # load x3 with value 0x28ff6bb81b81ef69
sw x3, 0(x2) # store 0x28ff6bb81b81ef69 in memory
flh f12, 0(x2) # load 0x28ff6bb81b81ef69 from memory into f12
fnmadd.h f22, f27, f5, f12, dyn # perform operation
fnmadd.h f22, f27, f5, f12, rdn # perform operation
fnmadd.h f22, f27, f5, f12, rmm # perform operation
fnmadd.h f22, f27, f5, f12, rne # perform operation
fnmadd.h f22, f27, f5, f12, rtz # perform operation
fnmadd.h f22, f27, f5, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f22, f27, f5, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f22, f27, f5, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f22, f27, f5, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f22, f27, f5, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f22, f27, f5, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3c00 fs2 = 0x7bff)
li x26, 0x8592a8029afc99bc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f16, 0(x2) # load 0x00003c00 from memory into f16
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f15, 0(x2) # load 0x00007bff from memory into f15
li x3, 0xf3f56c29d8675992 # load x3 with value 0xf3f56c29d8675992
sw x3, 0(x2) # store 0xf3f56c29d8675992 in memory
flh f24, 0(x2) # load 0xf3f56c29d8675992 from memory into f24
fnmadd.h f26, f16, f15, f24, dyn # perform operation
fnmadd.h f26, f16, f15, f24, rdn # perform operation
fnmadd.h f26, f16, f15, f24, rmm # perform operation
fnmadd.h f26, f16, f15, f24, rne # perform operation
fnmadd.h f26, f16, f15, f24, rtz # perform operation
fnmadd.h f26, f16, f15, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f26, f16, f15, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f26, f16, f15, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f26, f16, f15, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f26, f16, f15, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f26, f16, f15, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3c00 fs2 = 0xfbff)
li x9, 0x2105ae2f129dadd2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f14, 0(x2) # load 0x00003c00 from memory into f14
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f10, 0(x2) # load 0x0000fbff from memory into f10
li x3, 0xd7e3bd159781f09d # load x3 with value 0xd7e3bd159781f09d
sw x3, 0(x2) # store 0xd7e3bd159781f09d in memory
flh f7, 0(x2) # load 0xd7e3bd159781f09d from memory into f7
fnmadd.h f9, f14, f10, f7, dyn # perform operation
fnmadd.h f9, f14, f10, f7, rdn # perform operation
fnmadd.h f9, f14, f10, f7, rmm # perform operation
fnmadd.h f9, f14, f10, f7, rne # perform operation
fnmadd.h f9, f14, f10, f7, rtz # perform operation
fnmadd.h f9, f14, f10, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f9, f14, f10, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f9, f14, f10, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f9, f14, f10, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f9, f14, f10, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f9, f14, f10, f7 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3c00 fs2 = 0x3ff)
li x9, 0x934b9d4aad1031c0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f7, 0(x2) # load 0x00003c00 from memory into f7
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f30, 0(x2) # load 0x000003ff from memory into f30
li x3, 0xbdcd0b64d021c2f5 # load x3 with value 0xbdcd0b64d021c2f5
sw x3, 0(x2) # store 0xbdcd0b64d021c2f5 in memory
flh f21, 0(x2) # load 0xbdcd0b64d021c2f5 from memory into f21
fnmadd.h f9, f7, f30, f21, dyn # perform operation
fnmadd.h f9, f7, f30, f21, rdn # perform operation
fnmadd.h f9, f7, f30, f21, rmm # perform operation
fnmadd.h f9, f7, f30, f21, rne # perform operation
fnmadd.h f9, f7, f30, f21, rtz # perform operation
fnmadd.h f9, f7, f30, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f9, f7, f30, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f9, f7, f30, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f9, f7, f30, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f9, f7, f30, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f9, f7, f30, f21 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3c00 fs2 = 0x83ff)
li x27, 0x7f6d745fa31dc795 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f31, 0(x2) # load 0x00003c00 from memory into f31
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f9, 0(x2) # load 0x000083ff from memory into f9
li x3, 0x82b9d4f990f372ff # load x3 with value 0x82b9d4f990f372ff
sw x3, 0(x2) # store 0x82b9d4f990f372ff in memory
flh f18, 0(x2) # load 0x82b9d4f990f372ff from memory into f18
fnmadd.h f27, f31, f9, f18, dyn # perform operation
fnmadd.h f27, f31, f9, f18, rdn # perform operation
fnmadd.h f27, f31, f9, f18, rmm # perform operation
fnmadd.h f27, f31, f9, f18, rne # perform operation
fnmadd.h f27, f31, f9, f18, rtz # perform operation
fnmadd.h f27, f31, f9, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f27, f31, f9, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f27, f31, f9, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f27, f31, f9, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f27, f31, f9, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f27, f31, f9, f18 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3c00 fs2 = 0x200)
li x23, 0xd7308dfc8b557ce2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f21, 0(x2) # load 0x00003c00 from memory into f21
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f4, 0(x2) # load 0x00000200 from memory into f4
li x3, 0x27ba4df841bcb962 # load x3 with value 0x27ba4df841bcb962
sw x3, 0(x2) # store 0x27ba4df841bcb962 in memory
flh f10, 0(x2) # load 0x27ba4df841bcb962 from memory into f10
fnmadd.h f23, f21, f4, f10, dyn # perform operation
fnmadd.h f23, f21, f4, f10, rdn # perform operation
fnmadd.h f23, f21, f4, f10, rmm # perform operation
fnmadd.h f23, f21, f4, f10, rne # perform operation
fnmadd.h f23, f21, f4, f10, rtz # perform operation
fnmadd.h f23, f21, f4, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f23, f21, f4, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f23, f21, f4, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f23, f21, f4, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f23, f21, f4, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f23, f21, f4, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3c00 fs2 = 0x8200)
li x4, 0x045afb6f79d7e82a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f18, 0(x2) # load 0x00003c00 from memory into f18
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f12, 0(x2) # load 0x00008200 from memory into f12
li x3, 0xda2bf8ba9d4d67da # load x3 with value 0xda2bf8ba9d4d67da
sw x3, 0(x2) # store 0xda2bf8ba9d4d67da in memory
flh f16, 0(x2) # load 0xda2bf8ba9d4d67da from memory into f16
fnmadd.h f4, f18, f12, f16, dyn # perform operation
fnmadd.h f4, f18, f12, f16, rdn # perform operation
fnmadd.h f4, f18, f12, f16, rmm # perform operation
fnmadd.h f4, f18, f12, f16, rne # perform operation
fnmadd.h f4, f18, f12, f16, rtz # perform operation
fnmadd.h f4, f18, f12, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f4, f18, f12, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f4, f18, f12, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f4, f18, f12, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f4, f18, f12, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f4, f18, f12, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3c00 fs2 = 0x1)
li x12, 0xca5c8ae0ef93b4c4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f31, 0(x2) # load 0x00003c00 from memory into f31
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f27, 0(x2) # load 0x00000001 from memory into f27
li x3, 0xf3d747ba700c602d # load x3 with value 0xf3d747ba700c602d
sw x3, 0(x2) # store 0xf3d747ba700c602d in memory
flh f8, 0(x2) # load 0xf3d747ba700c602d from memory into f8
fnmadd.h f12, f31, f27, f8, dyn # perform operation
fnmadd.h f12, f31, f27, f8, rdn # perform operation
fnmadd.h f12, f31, f27, f8, rmm # perform operation
fnmadd.h f12, f31, f27, f8, rne # perform operation
fnmadd.h f12, f31, f27, f8, rtz # perform operation
fnmadd.h f12, f31, f27, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f12, f31, f27, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f12, f31, f27, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f12, f31, f27, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f12, f31, f27, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f12, f31, f27, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3c00 fs2 = 0x8001)
li x30, 0x7f14a5e64556d485 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f20, 0(x2) # load 0x00003c00 from memory into f20
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f27, 0(x2) # load 0x00008001 from memory into f27
li x3, 0xd209d219fb52e123 # load x3 with value 0xd209d219fb52e123
sw x3, 0(x2) # store 0xd209d219fb52e123 in memory
flh f28, 0(x2) # load 0xd209d219fb52e123 from memory into f28
fnmadd.h f30, f20, f27, f28, dyn # perform operation
fnmadd.h f30, f20, f27, f28, rdn # perform operation
fnmadd.h f30, f20, f27, f28, rmm # perform operation
fnmadd.h f30, f20, f27, f28, rne # perform operation
fnmadd.h f30, f20, f27, f28, rtz # perform operation
fnmadd.h f30, f20, f27, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f30, f20, f27, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f30, f20, f27, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f30, f20, f27, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f30, f20, f27, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f30, f20, f27, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3c00 fs2 = 0x7c00)
li x17, 0xbac08d61e54434ab # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f29, 0(x2) # load 0x00003c00 from memory into f29
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f9, 0(x2) # load 0x00007c00 from memory into f9
li x3, 0xc99f8f749135dc61 # load x3 with value 0xc99f8f749135dc61
sw x3, 0(x2) # store 0xc99f8f749135dc61 in memory
flh f5, 0(x2) # load 0xc99f8f749135dc61 from memory into f5
fnmadd.h f17, f29, f9, f5, dyn # perform operation
fnmadd.h f17, f29, f9, f5, rdn # perform operation
fnmadd.h f17, f29, f9, f5, rmm # perform operation
fnmadd.h f17, f29, f9, f5, rne # perform operation
fnmadd.h f17, f29, f9, f5, rtz # perform operation
fnmadd.h f17, f29, f9, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f17, f29, f9, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f17, f29, f9, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f17, f29, f9, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f17, f29, f9, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f17, f29, f9, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3c00 fs2 = 0xfc00)
li x23, 0x147d82d19e184f5c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f25, 0(x2) # load 0x00003c00 from memory into f25
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f9, 0(x2) # load 0x0000fc00 from memory into f9
li x3, 0x7a39c9ad5adb23ad # load x3 with value 0x7a39c9ad5adb23ad
sw x3, 0(x2) # store 0x7a39c9ad5adb23ad in memory
flh f19, 0(x2) # load 0x7a39c9ad5adb23ad from memory into f19
fnmadd.h f23, f25, f9, f19, dyn # perform operation
fnmadd.h f23, f25, f9, f19, rdn # perform operation
fnmadd.h f23, f25, f9, f19, rmm # perform operation
fnmadd.h f23, f25, f9, f19, rne # perform operation
fnmadd.h f23, f25, f9, f19, rtz # perform operation
fnmadd.h f23, f25, f9, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f23, f25, f9, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f23, f25, f9, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f23, f25, f9, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f23, f25, f9, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f23, f25, f9, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3c00 fs2 = 0x7e00)
li x8, 0xf999bfde1365cda7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f17, 0(x2) # load 0x00003c00 from memory into f17
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f3, 0(x2) # load 0x00007e00 from memory into f3
li x3, 0x6fd7d1d02f9653fd # load x3 with value 0x6fd7d1d02f9653fd
sw x3, 0(x2) # store 0x6fd7d1d02f9653fd in memory
flh f19, 0(x2) # load 0x6fd7d1d02f9653fd from memory into f19
fnmadd.h f8, f17, f3, f19, dyn # perform operation
fnmadd.h f8, f17, f3, f19, rdn # perform operation
fnmadd.h f8, f17, f3, f19, rmm # perform operation
fnmadd.h f8, f17, f3, f19, rne # perform operation
fnmadd.h f8, f17, f3, f19, rtz # perform operation
fnmadd.h f8, f17, f3, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f8, f17, f3, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f8, f17, f3, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f8, f17, f3, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f8, f17, f3, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f8, f17, f3, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3c00 fs2 = 0x7fff)
li x16, 0x6d662c81ee85fe57 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f18, 0(x2) # load 0x00003c00 from memory into f18
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f28, 0(x2) # load 0x00007fff from memory into f28
li x3, 0x5da5a3bdebb2772f # load x3 with value 0x5da5a3bdebb2772f
sw x3, 0(x2) # store 0x5da5a3bdebb2772f in memory
flh f17, 0(x2) # load 0x5da5a3bdebb2772f from memory into f17
fnmadd.h f16, f18, f28, f17, dyn # perform operation
fnmadd.h f16, f18, f28, f17, rdn # perform operation
fnmadd.h f16, f18, f28, f17, rmm # perform operation
fnmadd.h f16, f18, f28, f17, rne # perform operation
fnmadd.h f16, f18, f28, f17, rtz # perform operation
fnmadd.h f16, f18, f28, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f16, f18, f28, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f16, f18, f28, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f16, f18, f28, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f16, f18, f28, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f16, f18, f28, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3c00 fs2 = 0x7c01)
li x1, 0x6a6b7015e91a4ad4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f19, 0(x2) # load 0x00003c00 from memory into f19
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f2, 0(x2) # load 0x00007c01 from memory into f2
li x3, 0xef5cc9e82f00dae0 # load x3 with value 0xef5cc9e82f00dae0
sw x3, 0(x2) # store 0xef5cc9e82f00dae0 in memory
flh f5, 0(x2) # load 0xef5cc9e82f00dae0 from memory into f5
fnmadd.h f1, f19, f2, f5, dyn # perform operation
fnmadd.h f1, f19, f2, f5, rdn # perform operation
fnmadd.h f1, f19, f2, f5, rmm # perform operation
fnmadd.h f1, f19, f2, f5, rne # perform operation
fnmadd.h f1, f19, f2, f5, rtz # perform operation
fnmadd.h f1, f19, f2, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f1, f19, f2, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f1, f19, f2, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f1, f19, f2, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f1, f19, f2, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f1, f19, f2, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3c00 fs2 = 0x7dff)
li x19, 0xf065b0a92b05171a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f20, 0(x2) # load 0x00003c00 from memory into f20
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f16, 0(x2) # load 0x00007dff from memory into f16
li x3, 0x562f409479b4ad8a # load x3 with value 0x562f409479b4ad8a
sw x3, 0(x2) # store 0x562f409479b4ad8a in memory
flh f5, 0(x2) # load 0x562f409479b4ad8a from memory into f5
fnmadd.h f19, f20, f16, f5, dyn # perform operation
fnmadd.h f19, f20, f16, f5, rdn # perform operation
fnmadd.h f19, f20, f16, f5, rmm # perform operation
fnmadd.h f19, f20, f16, f5, rne # perform operation
fnmadd.h f19, f20, f16, f5, rtz # perform operation
fnmadd.h f19, f20, f16, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f19, f20, f16, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f19, f20, f16, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f19, f20, f16, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f19, f20, f16, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f19, f20, f16, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3c00 fs2 = 0x58b4)
li x16, 0x1313a021c7213ead # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f27, 0(x2) # load 0x00003c00 from memory into f27
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f24, 0(x2) # load 0x000058b4 from memory into f24
li x3, 0x72f79dea01df117a # load x3 with value 0x72f79dea01df117a
sw x3, 0(x2) # store 0x72f79dea01df117a in memory
flh f15, 0(x2) # load 0x72f79dea01df117a from memory into f15
fnmadd.h f16, f27, f24, f15, dyn # perform operation
fnmadd.h f16, f27, f24, f15, rdn # perform operation
fnmadd.h f16, f27, f24, f15, rmm # perform operation
fnmadd.h f16, f27, f24, f15, rne # perform operation
fnmadd.h f16, f27, f24, f15, rtz # perform operation
fnmadd.h f16, f27, f24, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f16, f27, f24, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f16, f27, f24, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f16, f27, f24, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f16, f27, f24, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f16, f27, f24, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3c00 fs2 = 0xc93a)
li x1, 0x1772550922d573de # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f30, 0(x2) # load 0x00003c00 from memory into f30
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f22, 0(x2) # load 0x0000c93a from memory into f22
li x3, 0x46236e2918908a7c # load x3 with value 0x46236e2918908a7c
sw x3, 0(x2) # store 0x46236e2918908a7c in memory
flh f24, 0(x2) # load 0x46236e2918908a7c from memory into f24
fnmadd.h f1, f30, f22, f24, dyn # perform operation
fnmadd.h f1, f30, f22, f24, rdn # perform operation
fnmadd.h f1, f30, f22, f24, rmm # perform operation
fnmadd.h f1, f30, f22, f24, rne # perform operation
fnmadd.h f1, f30, f22, f24, rtz # perform operation
fnmadd.h f1, f30, f22, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f1, f30, f22, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f1, f30, f22, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f1, f30, f22, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f1, f30, f22, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f1, f30, f22, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbc00 fs2 = 0x0)
li x2, 0x63c6f9ed160fc3db # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f24, 0(x2) # load 0x0000bc00 from memory into f24
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f10, 0(x2) # load 0x00000000 from memory into f10
li x3, 0x6ac82cf5e7eb712d # load x3 with value 0x6ac82cf5e7eb712d
sw x3, 0(x2) # store 0x6ac82cf5e7eb712d in memory
flh f27, 0(x2) # load 0x6ac82cf5e7eb712d from memory into f27
fnmadd.h f2, f24, f10, f27, dyn # perform operation
fnmadd.h f2, f24, f10, f27, rdn # perform operation
fnmadd.h f2, f24, f10, f27, rmm # perform operation
fnmadd.h f2, f24, f10, f27, rne # perform operation
fnmadd.h f2, f24, f10, f27, rtz # perform operation
fnmadd.h f2, f24, f10, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f2, f24, f10, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f2, f24, f10, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f2, f24, f10, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f2, f24, f10, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f2, f24, f10, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbc00 fs2 = 0x8000)
li x28, 0x567f05c6f710e7e6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f31, 0(x2) # load 0x0000bc00 from memory into f31
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f1, 0(x2) # load 0x00008000 from memory into f1
li x3, 0x5efb0072a5118c2c # load x3 with value 0x5efb0072a5118c2c
sw x3, 0(x2) # store 0x5efb0072a5118c2c in memory
flh f30, 0(x2) # load 0x5efb0072a5118c2c from memory into f30
fnmadd.h f28, f31, f1, f30, dyn # perform operation
fnmadd.h f28, f31, f1, f30, rdn # perform operation
fnmadd.h f28, f31, f1, f30, rmm # perform operation
fnmadd.h f28, f31, f1, f30, rne # perform operation
fnmadd.h f28, f31, f1, f30, rtz # perform operation
fnmadd.h f28, f31, f1, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f28, f31, f1, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f28, f31, f1, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f28, f31, f1, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f28, f31, f1, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f28, f31, f1, f30 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbc00 fs2 = 0x3c00)
li x7, 0xdb692c4ecf88c23d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f10, 0(x2) # load 0x0000bc00 from memory into f10
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f5, 0(x2) # load 0x00003c00 from memory into f5
li x3, 0xcc9334a68c7aa6b4 # load x3 with value 0xcc9334a68c7aa6b4
sw x3, 0(x2) # store 0xcc9334a68c7aa6b4 in memory
flh f13, 0(x2) # load 0xcc9334a68c7aa6b4 from memory into f13
fnmadd.h f7, f10, f5, f13, dyn # perform operation
fnmadd.h f7, f10, f5, f13, rdn # perform operation
fnmadd.h f7, f10, f5, f13, rmm # perform operation
fnmadd.h f7, f10, f5, f13, rne # perform operation
fnmadd.h f7, f10, f5, f13, rtz # perform operation
fnmadd.h f7, f10, f5, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f7, f10, f5, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f7, f10, f5, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f7, f10, f5, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f7, f10, f5, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f7, f10, f5, f13 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbc00 fs2 = 0xbc00)
li x12, 0xba25dfc7cad3ce29 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f22, 0(x2) # load 0x0000bc00 from memory into f22
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f25, 0(x2) # load 0x0000bc00 from memory into f25
li x3, 0xa443c36bd5756bfd # load x3 with value 0xa443c36bd5756bfd
sw x3, 0(x2) # store 0xa443c36bd5756bfd in memory
flh f15, 0(x2) # load 0xa443c36bd5756bfd from memory into f15
fnmadd.h f12, f22, f25, f15, dyn # perform operation
fnmadd.h f12, f22, f25, f15, rdn # perform operation
fnmadd.h f12, f22, f25, f15, rmm # perform operation
fnmadd.h f12, f22, f25, f15, rne # perform operation
fnmadd.h f12, f22, f25, f15, rtz # perform operation
fnmadd.h f12, f22, f25, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f12, f22, f25, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f12, f22, f25, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f12, f22, f25, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f12, f22, f25, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f12, f22, f25, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbc00 fs2 = 0x3e00)
li x29, 0xa9d63ef0e268b5a6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f28, 0(x2) # load 0x0000bc00 from memory into f28
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f7, 0(x2) # load 0x00003e00 from memory into f7
li x3, 0xc5bb452487ba8033 # load x3 with value 0xc5bb452487ba8033
sw x3, 0(x2) # store 0xc5bb452487ba8033 in memory
flh f10, 0(x2) # load 0xc5bb452487ba8033 from memory into f10
fnmadd.h f29, f28, f7, f10, dyn # perform operation
fnmadd.h f29, f28, f7, f10, rdn # perform operation
fnmadd.h f29, f28, f7, f10, rmm # perform operation
fnmadd.h f29, f28, f7, f10, rne # perform operation
fnmadd.h f29, f28, f7, f10, rtz # perform operation
fnmadd.h f29, f28, f7, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f29, f28, f7, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f29, f28, f7, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f29, f28, f7, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f29, f28, f7, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f29, f28, f7, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbc00 fs2 = 0xbe00)
li x31, 0x757285731f6c5fa0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f11, 0(x2) # load 0x0000bc00 from memory into f11
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f3, 0(x2) # load 0x0000be00 from memory into f3
li x3, 0x472cef7e6e0315df # load x3 with value 0x472cef7e6e0315df
sw x3, 0(x2) # store 0x472cef7e6e0315df in memory
flh f26, 0(x2) # load 0x472cef7e6e0315df from memory into f26
fnmadd.h f31, f11, f3, f26, dyn # perform operation
fnmadd.h f31, f11, f3, f26, rdn # perform operation
fnmadd.h f31, f11, f3, f26, rmm # perform operation
fnmadd.h f31, f11, f3, f26, rne # perform operation
fnmadd.h f31, f11, f3, f26, rtz # perform operation
fnmadd.h f31, f11, f3, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f31, f11, f3, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f31, f11, f3, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f31, f11, f3, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f31, f11, f3, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f31, f11, f3, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbc00 fs2 = 0x4000)
li x12, 0x37e4aacacb3ee9c1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f7, 0(x2) # load 0x0000bc00 from memory into f7
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f5, 0(x2) # load 0x00004000 from memory into f5
li x3, 0x3bd6544e48d8e0b2 # load x3 with value 0x3bd6544e48d8e0b2
sw x3, 0(x2) # store 0x3bd6544e48d8e0b2 in memory
flh f21, 0(x2) # load 0x3bd6544e48d8e0b2 from memory into f21
fnmadd.h f12, f7, f5, f21, dyn # perform operation
fnmadd.h f12, f7, f5, f21, rdn # perform operation
fnmadd.h f12, f7, f5, f21, rmm # perform operation
fnmadd.h f12, f7, f5, f21, rne # perform operation
fnmadd.h f12, f7, f5, f21, rtz # perform operation
fnmadd.h f12, f7, f5, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f12, f7, f5, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f12, f7, f5, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f12, f7, f5, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f12, f7, f5, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f12, f7, f5, f21 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbc00 fs2 = 0xc000)
li x3, 0x5dd49189866533aa # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f6, 0(x2) # load 0x0000bc00 from memory into f6
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f12, 0(x2) # load 0x0000c000 from memory into f12
li x3, 0xb137c9784a9cda89 # load x3 with value 0xb137c9784a9cda89
sw x3, 0(x2) # store 0xb137c9784a9cda89 in memory
flh f30, 0(x2) # load 0xb137c9784a9cda89 from memory into f30
fnmadd.h f3, f6, f12, f30, dyn # perform operation
fnmadd.h f3, f6, f12, f30, rdn # perform operation
fnmadd.h f3, f6, f12, f30, rmm # perform operation
fnmadd.h f3, f6, f12, f30, rne # perform operation
fnmadd.h f3, f6, f12, f30, rtz # perform operation
fnmadd.h f3, f6, f12, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f3, f6, f12, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f3, f6, f12, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f3, f6, f12, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f3, f6, f12, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f3, f6, f12, f30 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbc00 fs2 = 0x400)
li x11, 0x13dd14d1e6ed2878 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f22, 0(x2) # load 0x0000bc00 from memory into f22
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f19, 0(x2) # load 0x00000400 from memory into f19
li x3, 0xe967097595c5d98e # load x3 with value 0xe967097595c5d98e
sw x3, 0(x2) # store 0xe967097595c5d98e in memory
flh f16, 0(x2) # load 0xe967097595c5d98e from memory into f16
fnmadd.h f11, f22, f19, f16, dyn # perform operation
fnmadd.h f11, f22, f19, f16, rdn # perform operation
fnmadd.h f11, f22, f19, f16, rmm # perform operation
fnmadd.h f11, f22, f19, f16, rne # perform operation
fnmadd.h f11, f22, f19, f16, rtz # perform operation
fnmadd.h f11, f22, f19, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f11, f22, f19, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f11, f22, f19, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f11, f22, f19, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f11, f22, f19, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f11, f22, f19, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbc00 fs2 = 0x8400)
li x16, 0xf873cd9d4ac476a5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f28, 0(x2) # load 0x0000bc00 from memory into f28
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f23, 0(x2) # load 0x00008400 from memory into f23
li x3, 0x13003320eb1ae41e # load x3 with value 0x13003320eb1ae41e
sw x3, 0(x2) # store 0x13003320eb1ae41e in memory
flh f5, 0(x2) # load 0x13003320eb1ae41e from memory into f5
fnmadd.h f16, f28, f23, f5, dyn # perform operation
fnmadd.h f16, f28, f23, f5, rdn # perform operation
fnmadd.h f16, f28, f23, f5, rmm # perform operation
fnmadd.h f16, f28, f23, f5, rne # perform operation
fnmadd.h f16, f28, f23, f5, rtz # perform operation
fnmadd.h f16, f28, f23, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f16, f28, f23, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f16, f28, f23, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f16, f28, f23, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f16, f28, f23, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f16, f28, f23, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbc00 fs2 = 0x7bff)
li x9, 0x17779b9b64d0f33f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f6, 0(x2) # load 0x0000bc00 from memory into f6
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f20, 0(x2) # load 0x00007bff from memory into f20
li x3, 0xfdae39fa288fb4c3 # load x3 with value 0xfdae39fa288fb4c3
sw x3, 0(x2) # store 0xfdae39fa288fb4c3 in memory
flh f23, 0(x2) # load 0xfdae39fa288fb4c3 from memory into f23
fnmadd.h f9, f6, f20, f23, dyn # perform operation
fnmadd.h f9, f6, f20, f23, rdn # perform operation
fnmadd.h f9, f6, f20, f23, rmm # perform operation
fnmadd.h f9, f6, f20, f23, rne # perform operation
fnmadd.h f9, f6, f20, f23, rtz # perform operation
fnmadd.h f9, f6, f20, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f9, f6, f20, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f9, f6, f20, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f9, f6, f20, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f9, f6, f20, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f9, f6, f20, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbc00 fs2 = 0xfbff)
li x13, 0x03525a913d1d2cf3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f25, 0(x2) # load 0x0000bc00 from memory into f25
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f12, 0(x2) # load 0x0000fbff from memory into f12
li x3, 0xa9856dd0e3e13fd # load x3 with value 0xa9856dd0e3e13fd
sw x3, 0(x2) # store 0xa9856dd0e3e13fd in memory
flh f27, 0(x2) # load 0xa9856dd0e3e13fd from memory into f27
fnmadd.h f13, f25, f12, f27, dyn # perform operation
fnmadd.h f13, f25, f12, f27, rdn # perform operation
fnmadd.h f13, f25, f12, f27, rmm # perform operation
fnmadd.h f13, f25, f12, f27, rne # perform operation
fnmadd.h f13, f25, f12, f27, rtz # perform operation
fnmadd.h f13, f25, f12, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f13, f25, f12, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f13, f25, f12, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f13, f25, f12, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f13, f25, f12, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f13, f25, f12, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbc00 fs2 = 0x3ff)
li x26, 0xc9ba87e1c083d46a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f16, 0(x2) # load 0x0000bc00 from memory into f16
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f7, 0(x2) # load 0x000003ff from memory into f7
li x3, 0x1e3d018a6a85bfa # load x3 with value 0x1e3d018a6a85bfa
sw x3, 0(x2) # store 0x1e3d018a6a85bfa in memory
flh f17, 0(x2) # load 0x1e3d018a6a85bfa from memory into f17
fnmadd.h f26, f16, f7, f17, dyn # perform operation
fnmadd.h f26, f16, f7, f17, rdn # perform operation
fnmadd.h f26, f16, f7, f17, rmm # perform operation
fnmadd.h f26, f16, f7, f17, rne # perform operation
fnmadd.h f26, f16, f7, f17, rtz # perform operation
fnmadd.h f26, f16, f7, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f26, f16, f7, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f26, f16, f7, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f26, f16, f7, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f26, f16, f7, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f26, f16, f7, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbc00 fs2 = 0x83ff)
li x24, 0xd9abd06e9c9f008a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f17, 0(x2) # load 0x0000bc00 from memory into f17
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f21, 0(x2) # load 0x000083ff from memory into f21
li x3, 0x30d486ca03b85a07 # load x3 with value 0x30d486ca03b85a07
sw x3, 0(x2) # store 0x30d486ca03b85a07 in memory
flh f19, 0(x2) # load 0x30d486ca03b85a07 from memory into f19
fnmadd.h f24, f17, f21, f19, dyn # perform operation
fnmadd.h f24, f17, f21, f19, rdn # perform operation
fnmadd.h f24, f17, f21, f19, rmm # perform operation
fnmadd.h f24, f17, f21, f19, rne # perform operation
fnmadd.h f24, f17, f21, f19, rtz # perform operation
fnmadd.h f24, f17, f21, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f24, f17, f21, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f24, f17, f21, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f24, f17, f21, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f24, f17, f21, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f24, f17, f21, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbc00 fs2 = 0x200)
li x28, 0x33c5e207ab7fe63f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f21, 0(x2) # load 0x0000bc00 from memory into f21
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f3, 0(x2) # load 0x00000200 from memory into f3
li x3, 0xeeefff13bee57741 # load x3 with value 0xeeefff13bee57741
sw x3, 0(x2) # store 0xeeefff13bee57741 in memory
flh f25, 0(x2) # load 0xeeefff13bee57741 from memory into f25
fnmadd.h f28, f21, f3, f25, dyn # perform operation
fnmadd.h f28, f21, f3, f25, rdn # perform operation
fnmadd.h f28, f21, f3, f25, rmm # perform operation
fnmadd.h f28, f21, f3, f25, rne # perform operation
fnmadd.h f28, f21, f3, f25, rtz # perform operation
fnmadd.h f28, f21, f3, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f28, f21, f3, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f28, f21, f3, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f28, f21, f3, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f28, f21, f3, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f28, f21, f3, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbc00 fs2 = 0x8200)
li x11, 0xead37023b73e2952 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f7, 0(x2) # load 0x0000bc00 from memory into f7
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f15, 0(x2) # load 0x00008200 from memory into f15
li x3, 0x2cd749ce4a98e80a # load x3 with value 0x2cd749ce4a98e80a
sw x3, 0(x2) # store 0x2cd749ce4a98e80a in memory
flh f29, 0(x2) # load 0x2cd749ce4a98e80a from memory into f29
fnmadd.h f11, f7, f15, f29, dyn # perform operation
fnmadd.h f11, f7, f15, f29, rdn # perform operation
fnmadd.h f11, f7, f15, f29, rmm # perform operation
fnmadd.h f11, f7, f15, f29, rne # perform operation
fnmadd.h f11, f7, f15, f29, rtz # perform operation
fnmadd.h f11, f7, f15, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f11, f7, f15, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f11, f7, f15, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f11, f7, f15, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f11, f7, f15, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f11, f7, f15, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbc00 fs2 = 0x1)
li x7, 0x28df36a5fa6acbe7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f12, 0(x2) # load 0x0000bc00 from memory into f12
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f23, 0(x2) # load 0x00000001 from memory into f23
li x3, 0x80167a578b07e3db # load x3 with value 0x80167a578b07e3db
sw x3, 0(x2) # store 0x80167a578b07e3db in memory
flh f19, 0(x2) # load 0x80167a578b07e3db from memory into f19
fnmadd.h f7, f12, f23, f19, dyn # perform operation
fnmadd.h f7, f12, f23, f19, rdn # perform operation
fnmadd.h f7, f12, f23, f19, rmm # perform operation
fnmadd.h f7, f12, f23, f19, rne # perform operation
fnmadd.h f7, f12, f23, f19, rtz # perform operation
fnmadd.h f7, f12, f23, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f7, f12, f23, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f7, f12, f23, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f7, f12, f23, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f7, f12, f23, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f7, f12, f23, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbc00 fs2 = 0x8001)
li x17, 0xd9b265040f466fd4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f5, 0(x2) # load 0x0000bc00 from memory into f5
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f30, 0(x2) # load 0x00008001 from memory into f30
li x3, 0xf098f74cd4f43d7c # load x3 with value 0xf098f74cd4f43d7c
sw x3, 0(x2) # store 0xf098f74cd4f43d7c in memory
flh f11, 0(x2) # load 0xf098f74cd4f43d7c from memory into f11
fnmadd.h f17, f5, f30, f11, dyn # perform operation
fnmadd.h f17, f5, f30, f11, rdn # perform operation
fnmadd.h f17, f5, f30, f11, rmm # perform operation
fnmadd.h f17, f5, f30, f11, rne # perform operation
fnmadd.h f17, f5, f30, f11, rtz # perform operation
fnmadd.h f17, f5, f30, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f17, f5, f30, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f17, f5, f30, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f17, f5, f30, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f17, f5, f30, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f17, f5, f30, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbc00 fs2 = 0x7c00)
li x3, 0x6b9da446497a816e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f11, 0(x2) # load 0x0000bc00 from memory into f11
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f22, 0(x2) # load 0x00007c00 from memory into f22
li x3, 0x99d216eee9d05e49 # load x3 with value 0x99d216eee9d05e49
sw x3, 0(x2) # store 0x99d216eee9d05e49 in memory
flh f4, 0(x2) # load 0x99d216eee9d05e49 from memory into f4
fnmadd.h f3, f11, f22, f4, dyn # perform operation
fnmadd.h f3, f11, f22, f4, rdn # perform operation
fnmadd.h f3, f11, f22, f4, rmm # perform operation
fnmadd.h f3, f11, f22, f4, rne # perform operation
fnmadd.h f3, f11, f22, f4, rtz # perform operation
fnmadd.h f3, f11, f22, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f3, f11, f22, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f3, f11, f22, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f3, f11, f22, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f3, f11, f22, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f3, f11, f22, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbc00 fs2 = 0xfc00)
li x29, 0x88b868d5996b2834 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f13, 0(x2) # load 0x0000bc00 from memory into f13
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f25, 0(x2) # load 0x0000fc00 from memory into f25
li x3, 0x29d790928bc4284e # load x3 with value 0x29d790928bc4284e
sw x3, 0(x2) # store 0x29d790928bc4284e in memory
flh f5, 0(x2) # load 0x29d790928bc4284e from memory into f5
fnmadd.h f29, f13, f25, f5, dyn # perform operation
fnmadd.h f29, f13, f25, f5, rdn # perform operation
fnmadd.h f29, f13, f25, f5, rmm # perform operation
fnmadd.h f29, f13, f25, f5, rne # perform operation
fnmadd.h f29, f13, f25, f5, rtz # perform operation
fnmadd.h f29, f13, f25, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f29, f13, f25, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f29, f13, f25, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f29, f13, f25, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f29, f13, f25, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f29, f13, f25, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbc00 fs2 = 0x7e00)
li x20, 0x6acd8ce3d6070827 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f7, 0(x2) # load 0x0000bc00 from memory into f7
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f21, 0(x2) # load 0x00007e00 from memory into f21
li x3, 0x9f97bf985e5a617b # load x3 with value 0x9f97bf985e5a617b
sw x3, 0(x2) # store 0x9f97bf985e5a617b in memory
flh f10, 0(x2) # load 0x9f97bf985e5a617b from memory into f10
fnmadd.h f20, f7, f21, f10, dyn # perform operation
fnmadd.h f20, f7, f21, f10, rdn # perform operation
fnmadd.h f20, f7, f21, f10, rmm # perform operation
fnmadd.h f20, f7, f21, f10, rne # perform operation
fnmadd.h f20, f7, f21, f10, rtz # perform operation
fnmadd.h f20, f7, f21, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f20, f7, f21, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f20, f7, f21, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f20, f7, f21, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f20, f7, f21, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f20, f7, f21, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbc00 fs2 = 0x7fff)
li x23, 0x5967058d3c5b3875 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f19, 0(x2) # load 0x0000bc00 from memory into f19
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f20, 0(x2) # load 0x00007fff from memory into f20
li x3, 0x85bc04ce82e47702 # load x3 with value 0x85bc04ce82e47702
sw x3, 0(x2) # store 0x85bc04ce82e47702 in memory
flh f15, 0(x2) # load 0x85bc04ce82e47702 from memory into f15
fnmadd.h f23, f19, f20, f15, dyn # perform operation
fnmadd.h f23, f19, f20, f15, rdn # perform operation
fnmadd.h f23, f19, f20, f15, rmm # perform operation
fnmadd.h f23, f19, f20, f15, rne # perform operation
fnmadd.h f23, f19, f20, f15, rtz # perform operation
fnmadd.h f23, f19, f20, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f23, f19, f20, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f23, f19, f20, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f23, f19, f20, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f23, f19, f20, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f23, f19, f20, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbc00 fs2 = 0x7c01)
li x11, 0x42362b7ad7a37b71 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f21, 0(x2) # load 0x0000bc00 from memory into f21
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f5, 0(x2) # load 0x00007c01 from memory into f5
li x3, 0x8cdbce2d813c7bd1 # load x3 with value 0x8cdbce2d813c7bd1
sw x3, 0(x2) # store 0x8cdbce2d813c7bd1 in memory
flh f10, 0(x2) # load 0x8cdbce2d813c7bd1 from memory into f10
fnmadd.h f11, f21, f5, f10, dyn # perform operation
fnmadd.h f11, f21, f5, f10, rdn # perform operation
fnmadd.h f11, f21, f5, f10, rmm # perform operation
fnmadd.h f11, f21, f5, f10, rne # perform operation
fnmadd.h f11, f21, f5, f10, rtz # perform operation
fnmadd.h f11, f21, f5, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f11, f21, f5, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f11, f21, f5, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f11, f21, f5, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f11, f21, f5, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f11, f21, f5, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbc00 fs2 = 0x7dff)
li x26, 0xeddf7f6dc4e753b9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f28, 0(x2) # load 0x0000bc00 from memory into f28
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f13, 0(x2) # load 0x00007dff from memory into f13
li x3, 0x3ae57a0e6de0f7c1 # load x3 with value 0x3ae57a0e6de0f7c1
sw x3, 0(x2) # store 0x3ae57a0e6de0f7c1 in memory
flh f25, 0(x2) # load 0x3ae57a0e6de0f7c1 from memory into f25
fnmadd.h f26, f28, f13, f25, dyn # perform operation
fnmadd.h f26, f28, f13, f25, rdn # perform operation
fnmadd.h f26, f28, f13, f25, rmm # perform operation
fnmadd.h f26, f28, f13, f25, rne # perform operation
fnmadd.h f26, f28, f13, f25, rtz # perform operation
fnmadd.h f26, f28, f13, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f26, f28, f13, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f26, f28, f13, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f26, f28, f13, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f26, f28, f13, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f26, f28, f13, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbc00 fs2 = 0x58b4)
li x11, 0x126a58736564635e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f6, 0(x2) # load 0x0000bc00 from memory into f6
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f7, 0(x2) # load 0x000058b4 from memory into f7
li x3, 0xe8f44e7a2bf18201 # load x3 with value 0xe8f44e7a2bf18201
sw x3, 0(x2) # store 0xe8f44e7a2bf18201 in memory
flh f19, 0(x2) # load 0xe8f44e7a2bf18201 from memory into f19
fnmadd.h f11, f6, f7, f19, dyn # perform operation
fnmadd.h f11, f6, f7, f19, rdn # perform operation
fnmadd.h f11, f6, f7, f19, rmm # perform operation
fnmadd.h f11, f6, f7, f19, rne # perform operation
fnmadd.h f11, f6, f7, f19, rtz # perform operation
fnmadd.h f11, f6, f7, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f11, f6, f7, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f11, f6, f7, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f11, f6, f7, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f11, f6, f7, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f11, f6, f7, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbc00 fs2 = 0xc93a)
li x19, 0x33808b7e9b59af9e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f5, 0(x2) # load 0x0000bc00 from memory into f5
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f23, 0(x2) # load 0x0000c93a from memory into f23
li x3, 0x2931dad6219795a3 # load x3 with value 0x2931dad6219795a3
sw x3, 0(x2) # store 0x2931dad6219795a3 in memory
flh f12, 0(x2) # load 0x2931dad6219795a3 from memory into f12
fnmadd.h f19, f5, f23, f12, dyn # perform operation
fnmadd.h f19, f5, f23, f12, rdn # perform operation
fnmadd.h f19, f5, f23, f12, rmm # perform operation
fnmadd.h f19, f5, f23, f12, rne # perform operation
fnmadd.h f19, f5, f23, f12, rtz # perform operation
fnmadd.h f19, f5, f23, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f19, f5, f23, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f19, f5, f23, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f19, f5, f23, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f19, f5, f23, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f19, f5, f23, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3e00 fs2 = 0x0)
li x12, 0xf9182cfec1f0321b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f10, 0(x2) # load 0x00003e00 from memory into f10
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f23, 0(x2) # load 0x00000000 from memory into f23
li x3, 0x9c6fb7450de4aa38 # load x3 with value 0x9c6fb7450de4aa38
sw x3, 0(x2) # store 0x9c6fb7450de4aa38 in memory
flh f11, 0(x2) # load 0x9c6fb7450de4aa38 from memory into f11
fnmadd.h f12, f10, f23, f11, dyn # perform operation
fnmadd.h f12, f10, f23, f11, rdn # perform operation
fnmadd.h f12, f10, f23, f11, rmm # perform operation
fnmadd.h f12, f10, f23, f11, rne # perform operation
fnmadd.h f12, f10, f23, f11, rtz # perform operation
fnmadd.h f12, f10, f23, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f12, f10, f23, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f12, f10, f23, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f12, f10, f23, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f12, f10, f23, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f12, f10, f23, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3e00 fs2 = 0x8000)
li x29, 0xe1927cc27ba84e0f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f14, 0(x2) # load 0x00003e00 from memory into f14
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f7, 0(x2) # load 0x00008000 from memory into f7
li x3, 0xbb2e746fae3b75d9 # load x3 with value 0xbb2e746fae3b75d9
sw x3, 0(x2) # store 0xbb2e746fae3b75d9 in memory
flh f31, 0(x2) # load 0xbb2e746fae3b75d9 from memory into f31
fnmadd.h f29, f14, f7, f31, dyn # perform operation
fnmadd.h f29, f14, f7, f31, rdn # perform operation
fnmadd.h f29, f14, f7, f31, rmm # perform operation
fnmadd.h f29, f14, f7, f31, rne # perform operation
fnmadd.h f29, f14, f7, f31, rtz # perform operation
fnmadd.h f29, f14, f7, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f29, f14, f7, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f29, f14, f7, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f29, f14, f7, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f29, f14, f7, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f29, f14, f7, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3e00 fs2 = 0x3c00)
li x16, 0x698f30512c43ab02 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f7, 0(x2) # load 0x00003e00 from memory into f7
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f18, 0(x2) # load 0x00003c00 from memory into f18
li x3, 0x2c43ceb184d993bc # load x3 with value 0x2c43ceb184d993bc
sw x3, 0(x2) # store 0x2c43ceb184d993bc in memory
flh f22, 0(x2) # load 0x2c43ceb184d993bc from memory into f22
fnmadd.h f16, f7, f18, f22, dyn # perform operation
fnmadd.h f16, f7, f18, f22, rdn # perform operation
fnmadd.h f16, f7, f18, f22, rmm # perform operation
fnmadd.h f16, f7, f18, f22, rne # perform operation
fnmadd.h f16, f7, f18, f22, rtz # perform operation
fnmadd.h f16, f7, f18, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f16, f7, f18, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f16, f7, f18, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f16, f7, f18, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f16, f7, f18, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f16, f7, f18, f22 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3e00 fs2 = 0xbc00)
li x10, 0x090a310a0a3c3078 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f17, 0(x2) # load 0x00003e00 from memory into f17
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f21, 0(x2) # load 0x0000bc00 from memory into f21
li x3, 0x59cce6a8a937f991 # load x3 with value 0x59cce6a8a937f991
sw x3, 0(x2) # store 0x59cce6a8a937f991 in memory
flh f27, 0(x2) # load 0x59cce6a8a937f991 from memory into f27
fnmadd.h f10, f17, f21, f27, dyn # perform operation
fnmadd.h f10, f17, f21, f27, rdn # perform operation
fnmadd.h f10, f17, f21, f27, rmm # perform operation
fnmadd.h f10, f17, f21, f27, rne # perform operation
fnmadd.h f10, f17, f21, f27, rtz # perform operation
fnmadd.h f10, f17, f21, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f10, f17, f21, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f10, f17, f21, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f10, f17, f21, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f10, f17, f21, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f10, f17, f21, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3e00 fs2 = 0x3e00)
li x11, 0x51ece29835c05750 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f22, 0(x2) # load 0x00003e00 from memory into f22
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f1, 0(x2) # load 0x00003e00 from memory into f1
li x3, 0xb3f3b5ad7712da09 # load x3 with value 0xb3f3b5ad7712da09
sw x3, 0(x2) # store 0xb3f3b5ad7712da09 in memory
flh f13, 0(x2) # load 0xb3f3b5ad7712da09 from memory into f13
fnmadd.h f11, f22, f1, f13, dyn # perform operation
fnmadd.h f11, f22, f1, f13, rdn # perform operation
fnmadd.h f11, f22, f1, f13, rmm # perform operation
fnmadd.h f11, f22, f1, f13, rne # perform operation
fnmadd.h f11, f22, f1, f13, rtz # perform operation
fnmadd.h f11, f22, f1, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f11, f22, f1, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f11, f22, f1, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f11, f22, f1, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f11, f22, f1, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f11, f22, f1, f13 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3e00 fs2 = 0xbe00)
li x28, 0xc6705bc4a2c128db # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f6, 0(x2) # load 0x00003e00 from memory into f6
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f9, 0(x2) # load 0x0000be00 from memory into f9
li x3, 0x978896237a7fe0b1 # load x3 with value 0x978896237a7fe0b1
sw x3, 0(x2) # store 0x978896237a7fe0b1 in memory
flh f27, 0(x2) # load 0x978896237a7fe0b1 from memory into f27
fnmadd.h f28, f6, f9, f27, dyn # perform operation
fnmadd.h f28, f6, f9, f27, rdn # perform operation
fnmadd.h f28, f6, f9, f27, rmm # perform operation
fnmadd.h f28, f6, f9, f27, rne # perform operation
fnmadd.h f28, f6, f9, f27, rtz # perform operation
fnmadd.h f28, f6, f9, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f28, f6, f9, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f28, f6, f9, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f28, f6, f9, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f28, f6, f9, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f28, f6, f9, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3e00 fs2 = 0x4000)
li x21, 0xf4eaa6dda36334d6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f19, 0(x2) # load 0x00003e00 from memory into f19
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f9, 0(x2) # load 0x00004000 from memory into f9
li x3, 0x6f9edfe83657ea28 # load x3 with value 0x6f9edfe83657ea28
sw x3, 0(x2) # store 0x6f9edfe83657ea28 in memory
flh f8, 0(x2) # load 0x6f9edfe83657ea28 from memory into f8
fnmadd.h f21, f19, f9, f8, dyn # perform operation
fnmadd.h f21, f19, f9, f8, rdn # perform operation
fnmadd.h f21, f19, f9, f8, rmm # perform operation
fnmadd.h f21, f19, f9, f8, rne # perform operation
fnmadd.h f21, f19, f9, f8, rtz # perform operation
fnmadd.h f21, f19, f9, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f21, f19, f9, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f21, f19, f9, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f21, f19, f9, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f21, f19, f9, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f21, f19, f9, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3e00 fs2 = 0xc000)
li x18, 0xc33ff1a39c85b9aa # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f14, 0(x2) # load 0x00003e00 from memory into f14
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f6, 0(x2) # load 0x0000c000 from memory into f6
li x3, 0x1cdd83f6d87aa69f # load x3 with value 0x1cdd83f6d87aa69f
sw x3, 0(x2) # store 0x1cdd83f6d87aa69f in memory
flh f22, 0(x2) # load 0x1cdd83f6d87aa69f from memory into f22
fnmadd.h f18, f14, f6, f22, dyn # perform operation
fnmadd.h f18, f14, f6, f22, rdn # perform operation
fnmadd.h f18, f14, f6, f22, rmm # perform operation
fnmadd.h f18, f14, f6, f22, rne # perform operation
fnmadd.h f18, f14, f6, f22, rtz # perform operation
fnmadd.h f18, f14, f6, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f18, f14, f6, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f18, f14, f6, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f18, f14, f6, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f18, f14, f6, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f18, f14, f6, f22 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3e00 fs2 = 0x400)
li x14, 0x5652fc526024970b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f10, 0(x2) # load 0x00003e00 from memory into f10
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f12, 0(x2) # load 0x00000400 from memory into f12
li x3, 0xcd45eaf679896027 # load x3 with value 0xcd45eaf679896027
sw x3, 0(x2) # store 0xcd45eaf679896027 in memory
flh f24, 0(x2) # load 0xcd45eaf679896027 from memory into f24
fnmadd.h f14, f10, f12, f24, dyn # perform operation
fnmadd.h f14, f10, f12, f24, rdn # perform operation
fnmadd.h f14, f10, f12, f24, rmm # perform operation
fnmadd.h f14, f10, f12, f24, rne # perform operation
fnmadd.h f14, f10, f12, f24, rtz # perform operation
fnmadd.h f14, f10, f12, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f14, f10, f12, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f14, f10, f12, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f14, f10, f12, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f14, f10, f12, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f14, f10, f12, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3e00 fs2 = 0x8400)
li x4, 0xdd20fec475408ef4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f7, 0(x2) # load 0x00003e00 from memory into f7
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f9, 0(x2) # load 0x00008400 from memory into f9
li x3, 0xc6874b433ec25b0c # load x3 with value 0xc6874b433ec25b0c
sw x3, 0(x2) # store 0xc6874b433ec25b0c in memory
flh f22, 0(x2) # load 0xc6874b433ec25b0c from memory into f22
fnmadd.h f4, f7, f9, f22, dyn # perform operation
fnmadd.h f4, f7, f9, f22, rdn # perform operation
fnmadd.h f4, f7, f9, f22, rmm # perform operation
fnmadd.h f4, f7, f9, f22, rne # perform operation
fnmadd.h f4, f7, f9, f22, rtz # perform operation
fnmadd.h f4, f7, f9, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f4, f7, f9, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f4, f7, f9, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f4, f7, f9, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f4, f7, f9, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f4, f7, f9, f22 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3e00 fs2 = 0x7bff)
li x14, 0xb3e6ccfe0cff38c8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f11, 0(x2) # load 0x00003e00 from memory into f11
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f6, 0(x2) # load 0x00007bff from memory into f6
li x3, 0x4484ae48499874f4 # load x3 with value 0x4484ae48499874f4
sw x3, 0(x2) # store 0x4484ae48499874f4 in memory
flh f9, 0(x2) # load 0x4484ae48499874f4 from memory into f9
fnmadd.h f14, f11, f6, f9, dyn # perform operation
fnmadd.h f14, f11, f6, f9, rdn # perform operation
fnmadd.h f14, f11, f6, f9, rmm # perform operation
fnmadd.h f14, f11, f6, f9, rne # perform operation
fnmadd.h f14, f11, f6, f9, rtz # perform operation
fnmadd.h f14, f11, f6, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f14, f11, f6, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f14, f11, f6, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f14, f11, f6, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f14, f11, f6, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f14, f11, f6, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3e00 fs2 = 0xfbff)
li x29, 0x879209f3fc0202b1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f18, 0(x2) # load 0x00003e00 from memory into f18
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f11, 0(x2) # load 0x0000fbff from memory into f11
li x3, 0xdaefda4a9c1c8d83 # load x3 with value 0xdaefda4a9c1c8d83
sw x3, 0(x2) # store 0xdaefda4a9c1c8d83 in memory
flh f12, 0(x2) # load 0xdaefda4a9c1c8d83 from memory into f12
fnmadd.h f29, f18, f11, f12, dyn # perform operation
fnmadd.h f29, f18, f11, f12, rdn # perform operation
fnmadd.h f29, f18, f11, f12, rmm # perform operation
fnmadd.h f29, f18, f11, f12, rne # perform operation
fnmadd.h f29, f18, f11, f12, rtz # perform operation
fnmadd.h f29, f18, f11, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f29, f18, f11, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f29, f18, f11, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f29, f18, f11, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f29, f18, f11, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f29, f18, f11, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3e00 fs2 = 0x3ff)
li x22, 0x18abde73010763bc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f19, 0(x2) # load 0x00003e00 from memory into f19
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f5, 0(x2) # load 0x000003ff from memory into f5
li x3, 0x8dc72370cfabaf1c # load x3 with value 0x8dc72370cfabaf1c
sw x3, 0(x2) # store 0x8dc72370cfabaf1c in memory
flh f8, 0(x2) # load 0x8dc72370cfabaf1c from memory into f8
fnmadd.h f22, f19, f5, f8, dyn # perform operation
fnmadd.h f22, f19, f5, f8, rdn # perform operation
fnmadd.h f22, f19, f5, f8, rmm # perform operation
fnmadd.h f22, f19, f5, f8, rne # perform operation
fnmadd.h f22, f19, f5, f8, rtz # perform operation
fnmadd.h f22, f19, f5, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f22, f19, f5, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f22, f19, f5, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f22, f19, f5, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f22, f19, f5, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f22, f19, f5, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3e00 fs2 = 0x83ff)
li x15, 0x1246675450264690 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f16, 0(x2) # load 0x00003e00 from memory into f16
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f2, 0(x2) # load 0x000083ff from memory into f2
li x3, 0x92c698486d21d26f # load x3 with value 0x92c698486d21d26f
sw x3, 0(x2) # store 0x92c698486d21d26f in memory
flh f24, 0(x2) # load 0x92c698486d21d26f from memory into f24
fnmadd.h f15, f16, f2, f24, dyn # perform operation
fnmadd.h f15, f16, f2, f24, rdn # perform operation
fnmadd.h f15, f16, f2, f24, rmm # perform operation
fnmadd.h f15, f16, f2, f24, rne # perform operation
fnmadd.h f15, f16, f2, f24, rtz # perform operation
fnmadd.h f15, f16, f2, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f15, f16, f2, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f15, f16, f2, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f15, f16, f2, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f15, f16, f2, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f15, f16, f2, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3e00 fs2 = 0x200)
li x15, 0x7a143eebdcb80d1c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f8, 0(x2) # load 0x00003e00 from memory into f8
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f18, 0(x2) # load 0x00000200 from memory into f18
li x3, 0x146cd24a999f84a0 # load x3 with value 0x146cd24a999f84a0
sw x3, 0(x2) # store 0x146cd24a999f84a0 in memory
flh f10, 0(x2) # load 0x146cd24a999f84a0 from memory into f10
fnmadd.h f15, f8, f18, f10, dyn # perform operation
fnmadd.h f15, f8, f18, f10, rdn # perform operation
fnmadd.h f15, f8, f18, f10, rmm # perform operation
fnmadd.h f15, f8, f18, f10, rne # perform operation
fnmadd.h f15, f8, f18, f10, rtz # perform operation
fnmadd.h f15, f8, f18, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f15, f8, f18, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f15, f8, f18, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f15, f8, f18, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f15, f8, f18, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f15, f8, f18, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3e00 fs2 = 0x8200)
li x30, 0x48212865f1743d44 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f4, 0(x2) # load 0x00003e00 from memory into f4
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f7, 0(x2) # load 0x00008200 from memory into f7
li x3, 0x2ba0503bbded25d7 # load x3 with value 0x2ba0503bbded25d7
sw x3, 0(x2) # store 0x2ba0503bbded25d7 in memory
flh f26, 0(x2) # load 0x2ba0503bbded25d7 from memory into f26
fnmadd.h f30, f4, f7, f26, dyn # perform operation
fnmadd.h f30, f4, f7, f26, rdn # perform operation
fnmadd.h f30, f4, f7, f26, rmm # perform operation
fnmadd.h f30, f4, f7, f26, rne # perform operation
fnmadd.h f30, f4, f7, f26, rtz # perform operation
fnmadd.h f30, f4, f7, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f30, f4, f7, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f30, f4, f7, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f30, f4, f7, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f30, f4, f7, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f30, f4, f7, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3e00 fs2 = 0x1)
li x24, 0x5f5b2103722b7d26 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f30, 0(x2) # load 0x00003e00 from memory into f30
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f3, 0(x2) # load 0x00000001 from memory into f3
li x3, 0x6bb246195f7626a # load x3 with value 0x6bb246195f7626a
sw x3, 0(x2) # store 0x6bb246195f7626a in memory
flh f12, 0(x2) # load 0x6bb246195f7626a from memory into f12
fnmadd.h f24, f30, f3, f12, dyn # perform operation
fnmadd.h f24, f30, f3, f12, rdn # perform operation
fnmadd.h f24, f30, f3, f12, rmm # perform operation
fnmadd.h f24, f30, f3, f12, rne # perform operation
fnmadd.h f24, f30, f3, f12, rtz # perform operation
fnmadd.h f24, f30, f3, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f24, f30, f3, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f24, f30, f3, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f24, f30, f3, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f24, f30, f3, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f24, f30, f3, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3e00 fs2 = 0x8001)
li x31, 0x18696d9f7ac32a5a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f7, 0(x2) # load 0x00003e00 from memory into f7
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f9, 0(x2) # load 0x00008001 from memory into f9
li x3, 0xfa611989ab757532 # load x3 with value 0xfa611989ab757532
sw x3, 0(x2) # store 0xfa611989ab757532 in memory
flh f17, 0(x2) # load 0xfa611989ab757532 from memory into f17
fnmadd.h f31, f7, f9, f17, dyn # perform operation
fnmadd.h f31, f7, f9, f17, rdn # perform operation
fnmadd.h f31, f7, f9, f17, rmm # perform operation
fnmadd.h f31, f7, f9, f17, rne # perform operation
fnmadd.h f31, f7, f9, f17, rtz # perform operation
fnmadd.h f31, f7, f9, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f31, f7, f9, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f31, f7, f9, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f31, f7, f9, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f31, f7, f9, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f31, f7, f9, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3e00 fs2 = 0x7c00)
li x14, 0x17bd1610a2177526 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f15, 0(x2) # load 0x00003e00 from memory into f15
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f7, 0(x2) # load 0x00007c00 from memory into f7
li x3, 0x8f06f260962518fa # load x3 with value 0x8f06f260962518fa
sw x3, 0(x2) # store 0x8f06f260962518fa in memory
flh f31, 0(x2) # load 0x8f06f260962518fa from memory into f31
fnmadd.h f14, f15, f7, f31, dyn # perform operation
fnmadd.h f14, f15, f7, f31, rdn # perform operation
fnmadd.h f14, f15, f7, f31, rmm # perform operation
fnmadd.h f14, f15, f7, f31, rne # perform operation
fnmadd.h f14, f15, f7, f31, rtz # perform operation
fnmadd.h f14, f15, f7, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f14, f15, f7, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f14, f15, f7, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f14, f15, f7, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f14, f15, f7, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f14, f15, f7, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3e00 fs2 = 0xfc00)
li x4, 0xfc5a630965830a96 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f20, 0(x2) # load 0x00003e00 from memory into f20
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f19, 0(x2) # load 0x0000fc00 from memory into f19
li x3, 0xeaa94824cdb2283f # load x3 with value 0xeaa94824cdb2283f
sw x3, 0(x2) # store 0xeaa94824cdb2283f in memory
flh f11, 0(x2) # load 0xeaa94824cdb2283f from memory into f11
fnmadd.h f4, f20, f19, f11, dyn # perform operation
fnmadd.h f4, f20, f19, f11, rdn # perform operation
fnmadd.h f4, f20, f19, f11, rmm # perform operation
fnmadd.h f4, f20, f19, f11, rne # perform operation
fnmadd.h f4, f20, f19, f11, rtz # perform operation
fnmadd.h f4, f20, f19, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f4, f20, f19, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f4, f20, f19, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f4, f20, f19, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f4, f20, f19, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f4, f20, f19, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3e00 fs2 = 0x7e00)
li x22, 0x2cf111078d1d0993 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f3, 0(x2) # load 0x00003e00 from memory into f3
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f15, 0(x2) # load 0x00007e00 from memory into f15
li x3, 0xf86dd03e819b5814 # load x3 with value 0xf86dd03e819b5814
sw x3, 0(x2) # store 0xf86dd03e819b5814 in memory
flh f17, 0(x2) # load 0xf86dd03e819b5814 from memory into f17
fnmadd.h f22, f3, f15, f17, dyn # perform operation
fnmadd.h f22, f3, f15, f17, rdn # perform operation
fnmadd.h f22, f3, f15, f17, rmm # perform operation
fnmadd.h f22, f3, f15, f17, rne # perform operation
fnmadd.h f22, f3, f15, f17, rtz # perform operation
fnmadd.h f22, f3, f15, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f22, f3, f15, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f22, f3, f15, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f22, f3, f15, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f22, f3, f15, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f22, f3, f15, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3e00 fs2 = 0x7fff)
li x13, 0x10f29fbdabc589f6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f2, 0(x2) # load 0x00003e00 from memory into f2
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f3, 0(x2) # load 0x00007fff from memory into f3
li x3, 0x8f33af8b0b4da223 # load x3 with value 0x8f33af8b0b4da223
sw x3, 0(x2) # store 0x8f33af8b0b4da223 in memory
flh f12, 0(x2) # load 0x8f33af8b0b4da223 from memory into f12
fnmadd.h f13, f2, f3, f12, dyn # perform operation
fnmadd.h f13, f2, f3, f12, rdn # perform operation
fnmadd.h f13, f2, f3, f12, rmm # perform operation
fnmadd.h f13, f2, f3, f12, rne # perform operation
fnmadd.h f13, f2, f3, f12, rtz # perform operation
fnmadd.h f13, f2, f3, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f13, f2, f3, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f13, f2, f3, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f13, f2, f3, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f13, f2, f3, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f13, f2, f3, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3e00 fs2 = 0x7c01)
li x6, 0xc75aa4ffcd48ece5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f30, 0(x2) # load 0x00003e00 from memory into f30
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f19, 0(x2) # load 0x00007c01 from memory into f19
li x3, 0x3bf3761a094b57af # load x3 with value 0x3bf3761a094b57af
sw x3, 0(x2) # store 0x3bf3761a094b57af in memory
flh f4, 0(x2) # load 0x3bf3761a094b57af from memory into f4
fnmadd.h f6, f30, f19, f4, dyn # perform operation
fnmadd.h f6, f30, f19, f4, rdn # perform operation
fnmadd.h f6, f30, f19, f4, rmm # perform operation
fnmadd.h f6, f30, f19, f4, rne # perform operation
fnmadd.h f6, f30, f19, f4, rtz # perform operation
fnmadd.h f6, f30, f19, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f6, f30, f19, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f6, f30, f19, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f6, f30, f19, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f6, f30, f19, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f6, f30, f19, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3e00 fs2 = 0x7dff)
li x23, 0x451becc2a17eb203 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f31, 0(x2) # load 0x00003e00 from memory into f31
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f20, 0(x2) # load 0x00007dff from memory into f20
li x3, 0xf6d9fc63a5490b8e # load x3 with value 0xf6d9fc63a5490b8e
sw x3, 0(x2) # store 0xf6d9fc63a5490b8e in memory
flh f14, 0(x2) # load 0xf6d9fc63a5490b8e from memory into f14
fnmadd.h f23, f31, f20, f14, dyn # perform operation
fnmadd.h f23, f31, f20, f14, rdn # perform operation
fnmadd.h f23, f31, f20, f14, rmm # perform operation
fnmadd.h f23, f31, f20, f14, rne # perform operation
fnmadd.h f23, f31, f20, f14, rtz # perform operation
fnmadd.h f23, f31, f20, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f23, f31, f20, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f23, f31, f20, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f23, f31, f20, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f23, f31, f20, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f23, f31, f20, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3e00 fs2 = 0x58b4)
li x28, 0x4ec8d6a6ab741244 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f27, 0(x2) # load 0x00003e00 from memory into f27
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f29, 0(x2) # load 0x000058b4 from memory into f29
li x3, 0x3a06ff401b8da13f # load x3 with value 0x3a06ff401b8da13f
sw x3, 0(x2) # store 0x3a06ff401b8da13f in memory
flh f8, 0(x2) # load 0x3a06ff401b8da13f from memory into f8
fnmadd.h f28, f27, f29, f8, dyn # perform operation
fnmadd.h f28, f27, f29, f8, rdn # perform operation
fnmadd.h f28, f27, f29, f8, rmm # perform operation
fnmadd.h f28, f27, f29, f8, rne # perform operation
fnmadd.h f28, f27, f29, f8, rtz # perform operation
fnmadd.h f28, f27, f29, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f28, f27, f29, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f28, f27, f29, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f28, f27, f29, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f28, f27, f29, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f28, f27, f29, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3e00 fs2 = 0xc93a)
li x19, 0x0642f03981c70983 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f15, 0(x2) # load 0x00003e00 from memory into f15
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f11, 0(x2) # load 0x0000c93a from memory into f11
li x3, 0x7878a12b4b3889ca # load x3 with value 0x7878a12b4b3889ca
sw x3, 0(x2) # store 0x7878a12b4b3889ca in memory
flh f29, 0(x2) # load 0x7878a12b4b3889ca from memory into f29
fnmadd.h f19, f15, f11, f29, dyn # perform operation
fnmadd.h f19, f15, f11, f29, rdn # perform operation
fnmadd.h f19, f15, f11, f29, rmm # perform operation
fnmadd.h f19, f15, f11, f29, rne # perform operation
fnmadd.h f19, f15, f11, f29, rtz # perform operation
fnmadd.h f19, f15, f11, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f19, f15, f11, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f19, f15, f11, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f19, f15, f11, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f19, f15, f11, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f19, f15, f11, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbe00 fs2 = 0x0)
li x12, 0x56c9203a633073ef # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f19, 0(x2) # load 0x0000be00 from memory into f19
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f13, 0(x2) # load 0x00000000 from memory into f13
li x3, 0x60d0adf89f48ce3d # load x3 with value 0x60d0adf89f48ce3d
sw x3, 0(x2) # store 0x60d0adf89f48ce3d in memory
flh f16, 0(x2) # load 0x60d0adf89f48ce3d from memory into f16
fnmadd.h f12, f19, f13, f16, dyn # perform operation
fnmadd.h f12, f19, f13, f16, rdn # perform operation
fnmadd.h f12, f19, f13, f16, rmm # perform operation
fnmadd.h f12, f19, f13, f16, rne # perform operation
fnmadd.h f12, f19, f13, f16, rtz # perform operation
fnmadd.h f12, f19, f13, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f12, f19, f13, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f12, f19, f13, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f12, f19, f13, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f12, f19, f13, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f12, f19, f13, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbe00 fs2 = 0x8000)
li x21, 0x491c54793defda84 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f18, 0(x2) # load 0x0000be00 from memory into f18
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f20, 0(x2) # load 0x00008000 from memory into f20
li x3, 0xf31f8c8a44fd58b5 # load x3 with value 0xf31f8c8a44fd58b5
sw x3, 0(x2) # store 0xf31f8c8a44fd58b5 in memory
flh f12, 0(x2) # load 0xf31f8c8a44fd58b5 from memory into f12
fnmadd.h f21, f18, f20, f12, dyn # perform operation
fnmadd.h f21, f18, f20, f12, rdn # perform operation
fnmadd.h f21, f18, f20, f12, rmm # perform operation
fnmadd.h f21, f18, f20, f12, rne # perform operation
fnmadd.h f21, f18, f20, f12, rtz # perform operation
fnmadd.h f21, f18, f20, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f21, f18, f20, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f21, f18, f20, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f21, f18, f20, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f21, f18, f20, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f21, f18, f20, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbe00 fs2 = 0x3c00)
li x9, 0x99abda365e567ed3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f15, 0(x2) # load 0x0000be00 from memory into f15
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f16, 0(x2) # load 0x00003c00 from memory into f16
li x3, 0x1a6be1fee5906e25 # load x3 with value 0x1a6be1fee5906e25
sw x3, 0(x2) # store 0x1a6be1fee5906e25 in memory
flh f23, 0(x2) # load 0x1a6be1fee5906e25 from memory into f23
fnmadd.h f9, f15, f16, f23, dyn # perform operation
fnmadd.h f9, f15, f16, f23, rdn # perform operation
fnmadd.h f9, f15, f16, f23, rmm # perform operation
fnmadd.h f9, f15, f16, f23, rne # perform operation
fnmadd.h f9, f15, f16, f23, rtz # perform operation
fnmadd.h f9, f15, f16, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f9, f15, f16, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f9, f15, f16, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f9, f15, f16, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f9, f15, f16, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f9, f15, f16, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbe00 fs2 = 0xbc00)
li x16, 0x842aa628e5e641ca # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f12, 0(x2) # load 0x0000be00 from memory into f12
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f24, 0(x2) # load 0x0000bc00 from memory into f24
li x3, 0x8df141aeee881347 # load x3 with value 0x8df141aeee881347
sw x3, 0(x2) # store 0x8df141aeee881347 in memory
flh f6, 0(x2) # load 0x8df141aeee881347 from memory into f6
fnmadd.h f16, f12, f24, f6, dyn # perform operation
fnmadd.h f16, f12, f24, f6, rdn # perform operation
fnmadd.h f16, f12, f24, f6, rmm # perform operation
fnmadd.h f16, f12, f24, f6, rne # perform operation
fnmadd.h f16, f12, f24, f6, rtz # perform operation
fnmadd.h f16, f12, f24, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f16, f12, f24, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f16, f12, f24, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f16, f12, f24, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f16, f12, f24, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f16, f12, f24, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbe00 fs2 = 0x3e00)
li x9, 0xc154b767720d23c6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f18, 0(x2) # load 0x0000be00 from memory into f18
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f20, 0(x2) # load 0x00003e00 from memory into f20
li x3, 0xe493d4856acd01a2 # load x3 with value 0xe493d4856acd01a2
sw x3, 0(x2) # store 0xe493d4856acd01a2 in memory
flh f30, 0(x2) # load 0xe493d4856acd01a2 from memory into f30
fnmadd.h f9, f18, f20, f30, dyn # perform operation
fnmadd.h f9, f18, f20, f30, rdn # perform operation
fnmadd.h f9, f18, f20, f30, rmm # perform operation
fnmadd.h f9, f18, f20, f30, rne # perform operation
fnmadd.h f9, f18, f20, f30, rtz # perform operation
fnmadd.h f9, f18, f20, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f9, f18, f20, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f9, f18, f20, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f9, f18, f20, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f9, f18, f20, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f9, f18, f20, f30 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbe00 fs2 = 0xbe00)
li x9, 0x672b751b3e66c14c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f11, 0(x2) # load 0x0000be00 from memory into f11
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f23, 0(x2) # load 0x0000be00 from memory into f23
li x3, 0xcb30909f04db3fa2 # load x3 with value 0xcb30909f04db3fa2
sw x3, 0(x2) # store 0xcb30909f04db3fa2 in memory
flh f16, 0(x2) # load 0xcb30909f04db3fa2 from memory into f16
fnmadd.h f9, f11, f23, f16, dyn # perform operation
fnmadd.h f9, f11, f23, f16, rdn # perform operation
fnmadd.h f9, f11, f23, f16, rmm # perform operation
fnmadd.h f9, f11, f23, f16, rne # perform operation
fnmadd.h f9, f11, f23, f16, rtz # perform operation
fnmadd.h f9, f11, f23, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f9, f11, f23, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f9, f11, f23, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f9, f11, f23, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f9, f11, f23, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f9, f11, f23, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbe00 fs2 = 0x4000)
li x9, 0xe3e3a350cba8a7dd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f8, 0(x2) # load 0x0000be00 from memory into f8
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f28, 0(x2) # load 0x00004000 from memory into f28
li x3, 0xde5c2e917e6ec683 # load x3 with value 0xde5c2e917e6ec683
sw x3, 0(x2) # store 0xde5c2e917e6ec683 in memory
flh f25, 0(x2) # load 0xde5c2e917e6ec683 from memory into f25
fnmadd.h f9, f8, f28, f25, dyn # perform operation
fnmadd.h f9, f8, f28, f25, rdn # perform operation
fnmadd.h f9, f8, f28, f25, rmm # perform operation
fnmadd.h f9, f8, f28, f25, rne # perform operation
fnmadd.h f9, f8, f28, f25, rtz # perform operation
fnmadd.h f9, f8, f28, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f9, f8, f28, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f9, f8, f28, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f9, f8, f28, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f9, f8, f28, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f9, f8, f28, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbe00 fs2 = 0xc000)
li x28, 0x18fe7effab8f3219 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f15, 0(x2) # load 0x0000be00 from memory into f15
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f9, 0(x2) # load 0x0000c000 from memory into f9
li x3, 0x70b23d24f24f5e21 # load x3 with value 0x70b23d24f24f5e21
sw x3, 0(x2) # store 0x70b23d24f24f5e21 in memory
flh f17, 0(x2) # load 0x70b23d24f24f5e21 from memory into f17
fnmadd.h f28, f15, f9, f17, dyn # perform operation
fnmadd.h f28, f15, f9, f17, rdn # perform operation
fnmadd.h f28, f15, f9, f17, rmm # perform operation
fnmadd.h f28, f15, f9, f17, rne # perform operation
fnmadd.h f28, f15, f9, f17, rtz # perform operation
fnmadd.h f28, f15, f9, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f28, f15, f9, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f28, f15, f9, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f28, f15, f9, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f28, f15, f9, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f28, f15, f9, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbe00 fs2 = 0x400)
li x17, 0x8a236b85ddb57efa # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f23, 0(x2) # load 0x0000be00 from memory into f23
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f21, 0(x2) # load 0x00000400 from memory into f21
li x3, 0x71ddb04db2288f2e # load x3 with value 0x71ddb04db2288f2e
sw x3, 0(x2) # store 0x71ddb04db2288f2e in memory
flh f28, 0(x2) # load 0x71ddb04db2288f2e from memory into f28
fnmadd.h f17, f23, f21, f28, dyn # perform operation
fnmadd.h f17, f23, f21, f28, rdn # perform operation
fnmadd.h f17, f23, f21, f28, rmm # perform operation
fnmadd.h f17, f23, f21, f28, rne # perform operation
fnmadd.h f17, f23, f21, f28, rtz # perform operation
fnmadd.h f17, f23, f21, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f17, f23, f21, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f17, f23, f21, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f17, f23, f21, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f17, f23, f21, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f17, f23, f21, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbe00 fs2 = 0x8400)
li x10, 0xcb81a360c2444429 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f6, 0(x2) # load 0x0000be00 from memory into f6
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f19, 0(x2) # load 0x00008400 from memory into f19
li x3, 0x9c2cdc95b2f518c3 # load x3 with value 0x9c2cdc95b2f518c3
sw x3, 0(x2) # store 0x9c2cdc95b2f518c3 in memory
flh f12, 0(x2) # load 0x9c2cdc95b2f518c3 from memory into f12
fnmadd.h f10, f6, f19, f12, dyn # perform operation
fnmadd.h f10, f6, f19, f12, rdn # perform operation
fnmadd.h f10, f6, f19, f12, rmm # perform operation
fnmadd.h f10, f6, f19, f12, rne # perform operation
fnmadd.h f10, f6, f19, f12, rtz # perform operation
fnmadd.h f10, f6, f19, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f10, f6, f19, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f10, f6, f19, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f10, f6, f19, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f10, f6, f19, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f10, f6, f19, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbe00 fs2 = 0x7bff)
li x22, 0xa2d13f7deb9fb923 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f25, 0(x2) # load 0x0000be00 from memory into f25
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f18, 0(x2) # load 0x00007bff from memory into f18
li x3, 0x1fdecee95d0d5cba # load x3 with value 0x1fdecee95d0d5cba
sw x3, 0(x2) # store 0x1fdecee95d0d5cba in memory
flh f20, 0(x2) # load 0x1fdecee95d0d5cba from memory into f20
fnmadd.h f22, f25, f18, f20, dyn # perform operation
fnmadd.h f22, f25, f18, f20, rdn # perform operation
fnmadd.h f22, f25, f18, f20, rmm # perform operation
fnmadd.h f22, f25, f18, f20, rne # perform operation
fnmadd.h f22, f25, f18, f20, rtz # perform operation
fnmadd.h f22, f25, f18, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f22, f25, f18, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f22, f25, f18, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f22, f25, f18, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f22, f25, f18, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f22, f25, f18, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbe00 fs2 = 0xfbff)
li x2, 0xfb49128c3119c66c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f29, 0(x2) # load 0x0000be00 from memory into f29
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f13, 0(x2) # load 0x0000fbff from memory into f13
li x3, 0xfffc65e863b03c8f # load x3 with value 0xfffc65e863b03c8f
sw x3, 0(x2) # store 0xfffc65e863b03c8f in memory
flh f12, 0(x2) # load 0xfffc65e863b03c8f from memory into f12
fnmadd.h f2, f29, f13, f12, dyn # perform operation
fnmadd.h f2, f29, f13, f12, rdn # perform operation
fnmadd.h f2, f29, f13, f12, rmm # perform operation
fnmadd.h f2, f29, f13, f12, rne # perform operation
fnmadd.h f2, f29, f13, f12, rtz # perform operation
fnmadd.h f2, f29, f13, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f2, f29, f13, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f2, f29, f13, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f2, f29, f13, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f2, f29, f13, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f2, f29, f13, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbe00 fs2 = 0x3ff)
li x11, 0xcfdc740a8dc566b5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f2, 0(x2) # load 0x0000be00 from memory into f2
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f19, 0(x2) # load 0x000003ff from memory into f19
li x3, 0xbdb0cf27b289d1da # load x3 with value 0xbdb0cf27b289d1da
sw x3, 0(x2) # store 0xbdb0cf27b289d1da in memory
flh f27, 0(x2) # load 0xbdb0cf27b289d1da from memory into f27
fnmadd.h f11, f2, f19, f27, dyn # perform operation
fnmadd.h f11, f2, f19, f27, rdn # perform operation
fnmadd.h f11, f2, f19, f27, rmm # perform operation
fnmadd.h f11, f2, f19, f27, rne # perform operation
fnmadd.h f11, f2, f19, f27, rtz # perform operation
fnmadd.h f11, f2, f19, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f11, f2, f19, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f11, f2, f19, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f11, f2, f19, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f11, f2, f19, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f11, f2, f19, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbe00 fs2 = 0x83ff)
li x25, 0x938db25aa4a2a9d5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f26, 0(x2) # load 0x0000be00 from memory into f26
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f3, 0(x2) # load 0x000083ff from memory into f3
li x3, 0xdd2497f455670cda # load x3 with value 0xdd2497f455670cda
sw x3, 0(x2) # store 0xdd2497f455670cda in memory
flh f12, 0(x2) # load 0xdd2497f455670cda from memory into f12
fnmadd.h f25, f26, f3, f12, dyn # perform operation
fnmadd.h f25, f26, f3, f12, rdn # perform operation
fnmadd.h f25, f26, f3, f12, rmm # perform operation
fnmadd.h f25, f26, f3, f12, rne # perform operation
fnmadd.h f25, f26, f3, f12, rtz # perform operation
fnmadd.h f25, f26, f3, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f25, f26, f3, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f25, f26, f3, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f25, f26, f3, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f25, f26, f3, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f25, f26, f3, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbe00 fs2 = 0x200)
li x20, 0x88ddac5c838c1098 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f13, 0(x2) # load 0x0000be00 from memory into f13
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f15, 0(x2) # load 0x00000200 from memory into f15
li x3, 0xddc39d411bfb089b # load x3 with value 0xddc39d411bfb089b
sw x3, 0(x2) # store 0xddc39d411bfb089b in memory
flh f19, 0(x2) # load 0xddc39d411bfb089b from memory into f19
fnmadd.h f20, f13, f15, f19, dyn # perform operation
fnmadd.h f20, f13, f15, f19, rdn # perform operation
fnmadd.h f20, f13, f15, f19, rmm # perform operation
fnmadd.h f20, f13, f15, f19, rne # perform operation
fnmadd.h f20, f13, f15, f19, rtz # perform operation
fnmadd.h f20, f13, f15, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f20, f13, f15, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f20, f13, f15, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f20, f13, f15, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f20, f13, f15, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f20, f13, f15, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbe00 fs2 = 0x8200)
li x14, 0xcd96b55b6071a1bd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f18, 0(x2) # load 0x0000be00 from memory into f18
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f31, 0(x2) # load 0x00008200 from memory into f31
li x3, 0x23a7c0158a34eca7 # load x3 with value 0x23a7c0158a34eca7
sw x3, 0(x2) # store 0x23a7c0158a34eca7 in memory
flh f3, 0(x2) # load 0x23a7c0158a34eca7 from memory into f3
fnmadd.h f14, f18, f31, f3, dyn # perform operation
fnmadd.h f14, f18, f31, f3, rdn # perform operation
fnmadd.h f14, f18, f31, f3, rmm # perform operation
fnmadd.h f14, f18, f31, f3, rne # perform operation
fnmadd.h f14, f18, f31, f3, rtz # perform operation
fnmadd.h f14, f18, f31, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f14, f18, f31, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f14, f18, f31, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f14, f18, f31, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f14, f18, f31, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f14, f18, f31, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbe00 fs2 = 0x1)
li x28, 0x91d67fd94866a9b8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f14, 0(x2) # load 0x0000be00 from memory into f14
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f30, 0(x2) # load 0x00000001 from memory into f30
li x3, 0x7c1e1e0e39d9f4a2 # load x3 with value 0x7c1e1e0e39d9f4a2
sw x3, 0(x2) # store 0x7c1e1e0e39d9f4a2 in memory
flh f15, 0(x2) # load 0x7c1e1e0e39d9f4a2 from memory into f15
fnmadd.h f28, f14, f30, f15, dyn # perform operation
fnmadd.h f28, f14, f30, f15, rdn # perform operation
fnmadd.h f28, f14, f30, f15, rmm # perform operation
fnmadd.h f28, f14, f30, f15, rne # perform operation
fnmadd.h f28, f14, f30, f15, rtz # perform operation
fnmadd.h f28, f14, f30, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f28, f14, f30, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f28, f14, f30, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f28, f14, f30, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f28, f14, f30, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f28, f14, f30, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbe00 fs2 = 0x8001)
li x25, 0xa11159a4096389db # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f12, 0(x2) # load 0x0000be00 from memory into f12
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f22, 0(x2) # load 0x00008001 from memory into f22
li x3, 0x9e9706ba46fd1c76 # load x3 with value 0x9e9706ba46fd1c76
sw x3, 0(x2) # store 0x9e9706ba46fd1c76 in memory
flh f27, 0(x2) # load 0x9e9706ba46fd1c76 from memory into f27
fnmadd.h f25, f12, f22, f27, dyn # perform operation
fnmadd.h f25, f12, f22, f27, rdn # perform operation
fnmadd.h f25, f12, f22, f27, rmm # perform operation
fnmadd.h f25, f12, f22, f27, rne # perform operation
fnmadd.h f25, f12, f22, f27, rtz # perform operation
fnmadd.h f25, f12, f22, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f25, f12, f22, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f25, f12, f22, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f25, f12, f22, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f25, f12, f22, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f25, f12, f22, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbe00 fs2 = 0x7c00)
li x31, 0x1837f28f9da46513 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f22, 0(x2) # load 0x0000be00 from memory into f22
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f23, 0(x2) # load 0x00007c00 from memory into f23
li x3, 0x57a3696aafc9a17e # load x3 with value 0x57a3696aafc9a17e
sw x3, 0(x2) # store 0x57a3696aafc9a17e in memory
flh f27, 0(x2) # load 0x57a3696aafc9a17e from memory into f27
fnmadd.h f31, f22, f23, f27, dyn # perform operation
fnmadd.h f31, f22, f23, f27, rdn # perform operation
fnmadd.h f31, f22, f23, f27, rmm # perform operation
fnmadd.h f31, f22, f23, f27, rne # perform operation
fnmadd.h f31, f22, f23, f27, rtz # perform operation
fnmadd.h f31, f22, f23, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f31, f22, f23, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f31, f22, f23, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f31, f22, f23, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f31, f22, f23, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f31, f22, f23, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbe00 fs2 = 0xfc00)
li x28, 0x2efbd912330af43e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f20, 0(x2) # load 0x0000be00 from memory into f20
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f16, 0(x2) # load 0x0000fc00 from memory into f16
li x3, 0x459bd535771e6284 # load x3 with value 0x459bd535771e6284
sw x3, 0(x2) # store 0x459bd535771e6284 in memory
flh f15, 0(x2) # load 0x459bd535771e6284 from memory into f15
fnmadd.h f28, f20, f16, f15, dyn # perform operation
fnmadd.h f28, f20, f16, f15, rdn # perform operation
fnmadd.h f28, f20, f16, f15, rmm # perform operation
fnmadd.h f28, f20, f16, f15, rne # perform operation
fnmadd.h f28, f20, f16, f15, rtz # perform operation
fnmadd.h f28, f20, f16, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f28, f20, f16, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f28, f20, f16, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f28, f20, f16, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f28, f20, f16, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f28, f20, f16, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbe00 fs2 = 0x7e00)
li x25, 0x04b949bf308c3899 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f27, 0(x2) # load 0x0000be00 from memory into f27
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f20, 0(x2) # load 0x00007e00 from memory into f20
li x3, 0xf75d8b406e2d5d5f # load x3 with value 0xf75d8b406e2d5d5f
sw x3, 0(x2) # store 0xf75d8b406e2d5d5f in memory
flh f4, 0(x2) # load 0xf75d8b406e2d5d5f from memory into f4
fnmadd.h f25, f27, f20, f4, dyn # perform operation
fnmadd.h f25, f27, f20, f4, rdn # perform operation
fnmadd.h f25, f27, f20, f4, rmm # perform operation
fnmadd.h f25, f27, f20, f4, rne # perform operation
fnmadd.h f25, f27, f20, f4, rtz # perform operation
fnmadd.h f25, f27, f20, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f25, f27, f20, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f25, f27, f20, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f25, f27, f20, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f25, f27, f20, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f25, f27, f20, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbe00 fs2 = 0x7fff)
li x29, 0x465f2b8833b21aa2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f5, 0(x2) # load 0x0000be00 from memory into f5
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f16, 0(x2) # load 0x00007fff from memory into f16
li x3, 0x6592143f24140584 # load x3 with value 0x6592143f24140584
sw x3, 0(x2) # store 0x6592143f24140584 in memory
flh f14, 0(x2) # load 0x6592143f24140584 from memory into f14
fnmadd.h f29, f5, f16, f14, dyn # perform operation
fnmadd.h f29, f5, f16, f14, rdn # perform operation
fnmadd.h f29, f5, f16, f14, rmm # perform operation
fnmadd.h f29, f5, f16, f14, rne # perform operation
fnmadd.h f29, f5, f16, f14, rtz # perform operation
fnmadd.h f29, f5, f16, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f29, f5, f16, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f29, f5, f16, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f29, f5, f16, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f29, f5, f16, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f29, f5, f16, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbe00 fs2 = 0x7c01)
li x27, 0x62193c68c3e4470c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f23, 0(x2) # load 0x0000be00 from memory into f23
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f25, 0(x2) # load 0x00007c01 from memory into f25
li x3, 0xed07612feade44e9 # load x3 with value 0xed07612feade44e9
sw x3, 0(x2) # store 0xed07612feade44e9 in memory
flh f16, 0(x2) # load 0xed07612feade44e9 from memory into f16
fnmadd.h f27, f23, f25, f16, dyn # perform operation
fnmadd.h f27, f23, f25, f16, rdn # perform operation
fnmadd.h f27, f23, f25, f16, rmm # perform operation
fnmadd.h f27, f23, f25, f16, rne # perform operation
fnmadd.h f27, f23, f25, f16, rtz # perform operation
fnmadd.h f27, f23, f25, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f27, f23, f25, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f27, f23, f25, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f27, f23, f25, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f27, f23, f25, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f27, f23, f25, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbe00 fs2 = 0x7dff)
li x15, 0xfd0645ca1d9f0b56 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f31, 0(x2) # load 0x0000be00 from memory into f31
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f10, 0(x2) # load 0x00007dff from memory into f10
li x3, 0xad709ec22836dae9 # load x3 with value 0xad709ec22836dae9
sw x3, 0(x2) # store 0xad709ec22836dae9 in memory
flh f17, 0(x2) # load 0xad709ec22836dae9 from memory into f17
fnmadd.h f15, f31, f10, f17, dyn # perform operation
fnmadd.h f15, f31, f10, f17, rdn # perform operation
fnmadd.h f15, f31, f10, f17, rmm # perform operation
fnmadd.h f15, f31, f10, f17, rne # perform operation
fnmadd.h f15, f31, f10, f17, rtz # perform operation
fnmadd.h f15, f31, f10, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f15, f31, f10, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f15, f31, f10, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f15, f31, f10, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f15, f31, f10, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f15, f31, f10, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbe00 fs2 = 0x58b4)
li x11, 0xc41a411149839543 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f15, 0(x2) # load 0x0000be00 from memory into f15
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f24, 0(x2) # load 0x000058b4 from memory into f24
li x3, 0x50f0d5e6b90051fb # load x3 with value 0x50f0d5e6b90051fb
sw x3, 0(x2) # store 0x50f0d5e6b90051fb in memory
flh f19, 0(x2) # load 0x50f0d5e6b90051fb from memory into f19
fnmadd.h f11, f15, f24, f19, dyn # perform operation
fnmadd.h f11, f15, f24, f19, rdn # perform operation
fnmadd.h f11, f15, f24, f19, rmm # perform operation
fnmadd.h f11, f15, f24, f19, rne # perform operation
fnmadd.h f11, f15, f24, f19, rtz # perform operation
fnmadd.h f11, f15, f24, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f11, f15, f24, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f11, f15, f24, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f11, f15, f24, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f11, f15, f24, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f11, f15, f24, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbe00 fs2 = 0xc93a)
li x21, 0xb3ee12be8966a56c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f11, 0(x2) # load 0x0000be00 from memory into f11
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f15, 0(x2) # load 0x0000c93a from memory into f15
li x3, 0xcb6873254f70b1f8 # load x3 with value 0xcb6873254f70b1f8
sw x3, 0(x2) # store 0xcb6873254f70b1f8 in memory
flh f27, 0(x2) # load 0xcb6873254f70b1f8 from memory into f27
fnmadd.h f21, f11, f15, f27, dyn # perform operation
fnmadd.h f21, f11, f15, f27, rdn # perform operation
fnmadd.h f21, f11, f15, f27, rmm # perform operation
fnmadd.h f21, f11, f15, f27, rne # perform operation
fnmadd.h f21, f11, f15, f27, rtz # perform operation
fnmadd.h f21, f11, f15, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f21, f11, f15, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f21, f11, f15, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f21, f11, f15, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f21, f11, f15, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f21, f11, f15, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000 fs2 = 0x0)
li x13, 0x5dd6924d46d8e08c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f24, 0(x2) # load 0x00004000 from memory into f24
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f16, 0(x2) # load 0x00000000 from memory into f16
li x3, 0x8950c42bc8007259 # load x3 with value 0x8950c42bc8007259
sw x3, 0(x2) # store 0x8950c42bc8007259 in memory
flh f15, 0(x2) # load 0x8950c42bc8007259 from memory into f15
fnmadd.h f13, f24, f16, f15, dyn # perform operation
fnmadd.h f13, f24, f16, f15, rdn # perform operation
fnmadd.h f13, f24, f16, f15, rmm # perform operation
fnmadd.h f13, f24, f16, f15, rne # perform operation
fnmadd.h f13, f24, f16, f15, rtz # perform operation
fnmadd.h f13, f24, f16, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f13, f24, f16, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f13, f24, f16, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f13, f24, f16, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f13, f24, f16, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f13, f24, f16, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000 fs2 = 0x8000)
li x4, 0x5201dbfc60654799 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f23, 0(x2) # load 0x00004000 from memory into f23
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f21, 0(x2) # load 0x00008000 from memory into f21
li x3, 0x4cb5161769ffb83c # load x3 with value 0x4cb5161769ffb83c
sw x3, 0(x2) # store 0x4cb5161769ffb83c in memory
flh f31, 0(x2) # load 0x4cb5161769ffb83c from memory into f31
fnmadd.h f4, f23, f21, f31, dyn # perform operation
fnmadd.h f4, f23, f21, f31, rdn # perform operation
fnmadd.h f4, f23, f21, f31, rmm # perform operation
fnmadd.h f4, f23, f21, f31, rne # perform operation
fnmadd.h f4, f23, f21, f31, rtz # perform operation
fnmadd.h f4, f23, f21, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f4, f23, f21, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f4, f23, f21, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f4, f23, f21, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f4, f23, f21, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f4, f23, f21, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000 fs2 = 0x3c00)
li x3, 0x3019daf576245f78 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f4, 0(x2) # load 0x00004000 from memory into f4
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f31, 0(x2) # load 0x00003c00 from memory into f31
li x3, 0xc6d5be0b6e024f31 # load x3 with value 0xc6d5be0b6e024f31
sw x3, 0(x2) # store 0xc6d5be0b6e024f31 in memory
flh f16, 0(x2) # load 0xc6d5be0b6e024f31 from memory into f16
fnmadd.h f3, f4, f31, f16, dyn # perform operation
fnmadd.h f3, f4, f31, f16, rdn # perform operation
fnmadd.h f3, f4, f31, f16, rmm # perform operation
fnmadd.h f3, f4, f31, f16, rne # perform operation
fnmadd.h f3, f4, f31, f16, rtz # perform operation
fnmadd.h f3, f4, f31, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f3, f4, f31, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f3, f4, f31, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f3, f4, f31, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f3, f4, f31, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f3, f4, f31, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000 fs2 = 0xbc00)
li x23, 0x493cad1028feb45d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f29, 0(x2) # load 0x00004000 from memory into f29
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f1, 0(x2) # load 0x0000bc00 from memory into f1
li x3, 0xbaee8590f8ad1955 # load x3 with value 0xbaee8590f8ad1955
sw x3, 0(x2) # store 0xbaee8590f8ad1955 in memory
flh f24, 0(x2) # load 0xbaee8590f8ad1955 from memory into f24
fnmadd.h f23, f29, f1, f24, dyn # perform operation
fnmadd.h f23, f29, f1, f24, rdn # perform operation
fnmadd.h f23, f29, f1, f24, rmm # perform operation
fnmadd.h f23, f29, f1, f24, rne # perform operation
fnmadd.h f23, f29, f1, f24, rtz # perform operation
fnmadd.h f23, f29, f1, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f23, f29, f1, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f23, f29, f1, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f23, f29, f1, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f23, f29, f1, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f23, f29, f1, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000 fs2 = 0x3e00)
li x13, 0x8242a6860fce464a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f4, 0(x2) # load 0x00004000 from memory into f4
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f2, 0(x2) # load 0x00003e00 from memory into f2
li x3, 0x643d55c08599d2f5 # load x3 with value 0x643d55c08599d2f5
sw x3, 0(x2) # store 0x643d55c08599d2f5 in memory
flh f23, 0(x2) # load 0x643d55c08599d2f5 from memory into f23
fnmadd.h f13, f4, f2, f23, dyn # perform operation
fnmadd.h f13, f4, f2, f23, rdn # perform operation
fnmadd.h f13, f4, f2, f23, rmm # perform operation
fnmadd.h f13, f4, f2, f23, rne # perform operation
fnmadd.h f13, f4, f2, f23, rtz # perform operation
fnmadd.h f13, f4, f2, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f13, f4, f2, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f13, f4, f2, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f13, f4, f2, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f13, f4, f2, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f13, f4, f2, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000 fs2 = 0xbe00)
li x6, 0x5e8abb3789d0804d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f29, 0(x2) # load 0x00004000 from memory into f29
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f10, 0(x2) # load 0x0000be00 from memory into f10
li x3, 0xfce5cf1e4b479dfb # load x3 with value 0xfce5cf1e4b479dfb
sw x3, 0(x2) # store 0xfce5cf1e4b479dfb in memory
flh f28, 0(x2) # load 0xfce5cf1e4b479dfb from memory into f28
fnmadd.h f6, f29, f10, f28, dyn # perform operation
fnmadd.h f6, f29, f10, f28, rdn # perform operation
fnmadd.h f6, f29, f10, f28, rmm # perform operation
fnmadd.h f6, f29, f10, f28, rne # perform operation
fnmadd.h f6, f29, f10, f28, rtz # perform operation
fnmadd.h f6, f29, f10, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f6, f29, f10, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f6, f29, f10, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f6, f29, f10, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f6, f29, f10, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f6, f29, f10, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000 fs2 = 0x4000)
li x30, 0xc29f6043f222710f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f23, 0(x2) # load 0x00004000 from memory into f23
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f24, 0(x2) # load 0x00004000 from memory into f24
li x3, 0xf08f30f0efa0c8e1 # load x3 with value 0xf08f30f0efa0c8e1
sw x3, 0(x2) # store 0xf08f30f0efa0c8e1 in memory
flh f22, 0(x2) # load 0xf08f30f0efa0c8e1 from memory into f22
fnmadd.h f30, f23, f24, f22, dyn # perform operation
fnmadd.h f30, f23, f24, f22, rdn # perform operation
fnmadd.h f30, f23, f24, f22, rmm # perform operation
fnmadd.h f30, f23, f24, f22, rne # perform operation
fnmadd.h f30, f23, f24, f22, rtz # perform operation
fnmadd.h f30, f23, f24, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f30, f23, f24, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f30, f23, f24, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f30, f23, f24, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f30, f23, f24, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f30, f23, f24, f22 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000 fs2 = 0xc000)
li x3, 0xb3115a36d0ea6f2d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f21, 0(x2) # load 0x00004000 from memory into f21
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f28, 0(x2) # load 0x0000c000 from memory into f28
li x3, 0x88d357cb888e2629 # load x3 with value 0x88d357cb888e2629
sw x3, 0(x2) # store 0x88d357cb888e2629 in memory
flh f24, 0(x2) # load 0x88d357cb888e2629 from memory into f24
fnmadd.h f3, f21, f28, f24, dyn # perform operation
fnmadd.h f3, f21, f28, f24, rdn # perform operation
fnmadd.h f3, f21, f28, f24, rmm # perform operation
fnmadd.h f3, f21, f28, f24, rne # perform operation
fnmadd.h f3, f21, f28, f24, rtz # perform operation
fnmadd.h f3, f21, f28, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f3, f21, f28, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f3, f21, f28, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f3, f21, f28, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f3, f21, f28, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f3, f21, f28, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000 fs2 = 0x400)
li x1, 0x108bb4a004378f35 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f12, 0(x2) # load 0x00004000 from memory into f12
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f10, 0(x2) # load 0x00000400 from memory into f10
li x3, 0x9031376e534b403a # load x3 with value 0x9031376e534b403a
sw x3, 0(x2) # store 0x9031376e534b403a in memory
flh f22, 0(x2) # load 0x9031376e534b403a from memory into f22
fnmadd.h f1, f12, f10, f22, dyn # perform operation
fnmadd.h f1, f12, f10, f22, rdn # perform operation
fnmadd.h f1, f12, f10, f22, rmm # perform operation
fnmadd.h f1, f12, f10, f22, rne # perform operation
fnmadd.h f1, f12, f10, f22, rtz # perform operation
fnmadd.h f1, f12, f10, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f1, f12, f10, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f1, f12, f10, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f1, f12, f10, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f1, f12, f10, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f1, f12, f10, f22 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000 fs2 = 0x8400)
li x8, 0x01b47dcfe67526a0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f23, 0(x2) # load 0x00004000 from memory into f23
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f20, 0(x2) # load 0x00008400 from memory into f20
li x3, 0xa07aa793b4c5fff6 # load x3 with value 0xa07aa793b4c5fff6
sw x3, 0(x2) # store 0xa07aa793b4c5fff6 in memory
flh f10, 0(x2) # load 0xa07aa793b4c5fff6 from memory into f10
fnmadd.h f8, f23, f20, f10, dyn # perform operation
fnmadd.h f8, f23, f20, f10, rdn # perform operation
fnmadd.h f8, f23, f20, f10, rmm # perform operation
fnmadd.h f8, f23, f20, f10, rne # perform operation
fnmadd.h f8, f23, f20, f10, rtz # perform operation
fnmadd.h f8, f23, f20, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f8, f23, f20, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f8, f23, f20, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f8, f23, f20, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f8, f23, f20, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f8, f23, f20, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000 fs2 = 0x7bff)
li x13, 0xc473383edbb0be2e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f7, 0(x2) # load 0x00004000 from memory into f7
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f15, 0(x2) # load 0x00007bff from memory into f15
li x3, 0xfffdf6034d4fb9b8 # load x3 with value 0xfffdf6034d4fb9b8
sw x3, 0(x2) # store 0xfffdf6034d4fb9b8 in memory
flh f26, 0(x2) # load 0xfffdf6034d4fb9b8 from memory into f26
fnmadd.h f13, f7, f15, f26, dyn # perform operation
fnmadd.h f13, f7, f15, f26, rdn # perform operation
fnmadd.h f13, f7, f15, f26, rmm # perform operation
fnmadd.h f13, f7, f15, f26, rne # perform operation
fnmadd.h f13, f7, f15, f26, rtz # perform operation
fnmadd.h f13, f7, f15, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f13, f7, f15, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f13, f7, f15, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f13, f7, f15, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f13, f7, f15, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f13, f7, f15, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000 fs2 = 0xfbff)
li x12, 0x98c2524718f00ef4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f16, 0(x2) # load 0x00004000 from memory into f16
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f7, 0(x2) # load 0x0000fbff from memory into f7
li x3, 0xc450ccac53bac5a7 # load x3 with value 0xc450ccac53bac5a7
sw x3, 0(x2) # store 0xc450ccac53bac5a7 in memory
flh f10, 0(x2) # load 0xc450ccac53bac5a7 from memory into f10
fnmadd.h f12, f16, f7, f10, dyn # perform operation
fnmadd.h f12, f16, f7, f10, rdn # perform operation
fnmadd.h f12, f16, f7, f10, rmm # perform operation
fnmadd.h f12, f16, f7, f10, rne # perform operation
fnmadd.h f12, f16, f7, f10, rtz # perform operation
fnmadd.h f12, f16, f7, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f12, f16, f7, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f12, f16, f7, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f12, f16, f7, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f12, f16, f7, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f12, f16, f7, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000 fs2 = 0x3ff)
li x24, 0xf46a97ee6279a87a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f6, 0(x2) # load 0x00004000 from memory into f6
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f11, 0(x2) # load 0x000003ff from memory into f11
li x3, 0x4bb1d87cd1ee976f # load x3 with value 0x4bb1d87cd1ee976f
sw x3, 0(x2) # store 0x4bb1d87cd1ee976f in memory
flh f3, 0(x2) # load 0x4bb1d87cd1ee976f from memory into f3
fnmadd.h f24, f6, f11, f3, dyn # perform operation
fnmadd.h f24, f6, f11, f3, rdn # perform operation
fnmadd.h f24, f6, f11, f3, rmm # perform operation
fnmadd.h f24, f6, f11, f3, rne # perform operation
fnmadd.h f24, f6, f11, f3, rtz # perform operation
fnmadd.h f24, f6, f11, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f24, f6, f11, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f24, f6, f11, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f24, f6, f11, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f24, f6, f11, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f24, f6, f11, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000 fs2 = 0x83ff)
li x25, 0xa987f288c80326de # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f13, 0(x2) # load 0x00004000 from memory into f13
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f17, 0(x2) # load 0x000083ff from memory into f17
li x3, 0x241908a14a24e10f # load x3 with value 0x241908a14a24e10f
sw x3, 0(x2) # store 0x241908a14a24e10f in memory
flh f11, 0(x2) # load 0x241908a14a24e10f from memory into f11
fnmadd.h f25, f13, f17, f11, dyn # perform operation
fnmadd.h f25, f13, f17, f11, rdn # perform operation
fnmadd.h f25, f13, f17, f11, rmm # perform operation
fnmadd.h f25, f13, f17, f11, rne # perform operation
fnmadd.h f25, f13, f17, f11, rtz # perform operation
fnmadd.h f25, f13, f17, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f25, f13, f17, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f25, f13, f17, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f25, f13, f17, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f25, f13, f17, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f25, f13, f17, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000 fs2 = 0x200)
li x6, 0xa90e24c33a25c631 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f3, 0(x2) # load 0x00004000 from memory into f3
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f21, 0(x2) # load 0x00000200 from memory into f21
li x3, 0x6df0ca739db3dcc2 # load x3 with value 0x6df0ca739db3dcc2
sw x3, 0(x2) # store 0x6df0ca739db3dcc2 in memory
flh f31, 0(x2) # load 0x6df0ca739db3dcc2 from memory into f31
fnmadd.h f6, f3, f21, f31, dyn # perform operation
fnmadd.h f6, f3, f21, f31, rdn # perform operation
fnmadd.h f6, f3, f21, f31, rmm # perform operation
fnmadd.h f6, f3, f21, f31, rne # perform operation
fnmadd.h f6, f3, f21, f31, rtz # perform operation
fnmadd.h f6, f3, f21, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f6, f3, f21, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f6, f3, f21, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f6, f3, f21, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f6, f3, f21, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f6, f3, f21, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000 fs2 = 0x8200)
li x21, 0x39a980c1ddf405d0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f19, 0(x2) # load 0x00004000 from memory into f19
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f29, 0(x2) # load 0x00008200 from memory into f29
li x3, 0x91c0c9c3c52864ba # load x3 with value 0x91c0c9c3c52864ba
sw x3, 0(x2) # store 0x91c0c9c3c52864ba in memory
flh f12, 0(x2) # load 0x91c0c9c3c52864ba from memory into f12
fnmadd.h f21, f19, f29, f12, dyn # perform operation
fnmadd.h f21, f19, f29, f12, rdn # perform operation
fnmadd.h f21, f19, f29, f12, rmm # perform operation
fnmadd.h f21, f19, f29, f12, rne # perform operation
fnmadd.h f21, f19, f29, f12, rtz # perform operation
fnmadd.h f21, f19, f29, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f21, f19, f29, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f21, f19, f29, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f21, f19, f29, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f21, f19, f29, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f21, f19, f29, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000 fs2 = 0x1)
li x29, 0x693005c27fdfc3fd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f12, 0(x2) # load 0x00004000 from memory into f12
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f30, 0(x2) # load 0x00000001 from memory into f30
li x3, 0x5111497818259119 # load x3 with value 0x5111497818259119
sw x3, 0(x2) # store 0x5111497818259119 in memory
flh f15, 0(x2) # load 0x5111497818259119 from memory into f15
fnmadd.h f29, f12, f30, f15, dyn # perform operation
fnmadd.h f29, f12, f30, f15, rdn # perform operation
fnmadd.h f29, f12, f30, f15, rmm # perform operation
fnmadd.h f29, f12, f30, f15, rne # perform operation
fnmadd.h f29, f12, f30, f15, rtz # perform operation
fnmadd.h f29, f12, f30, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f29, f12, f30, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f29, f12, f30, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f29, f12, f30, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f29, f12, f30, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f29, f12, f30, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000 fs2 = 0x8001)
li x1, 0xe65d25928384f324 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f13, 0(x2) # load 0x00004000 from memory into f13
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f7, 0(x2) # load 0x00008001 from memory into f7
li x3, 0xfaabf0ca77f90ce # load x3 with value 0xfaabf0ca77f90ce
sw x3, 0(x2) # store 0xfaabf0ca77f90ce in memory
flh f14, 0(x2) # load 0xfaabf0ca77f90ce from memory into f14
fnmadd.h f1, f13, f7, f14, dyn # perform operation
fnmadd.h f1, f13, f7, f14, rdn # perform operation
fnmadd.h f1, f13, f7, f14, rmm # perform operation
fnmadd.h f1, f13, f7, f14, rne # perform operation
fnmadd.h f1, f13, f7, f14, rtz # perform operation
fnmadd.h f1, f13, f7, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f1, f13, f7, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f1, f13, f7, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f1, f13, f7, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f1, f13, f7, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f1, f13, f7, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000 fs2 = 0x7c00)
li x16, 0xc0c57648afab6821 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f20, 0(x2) # load 0x00004000 from memory into f20
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f29, 0(x2) # load 0x00007c00 from memory into f29
li x3, 0x13cc8b7aa091367a # load x3 with value 0x13cc8b7aa091367a
sw x3, 0(x2) # store 0x13cc8b7aa091367a in memory
flh f15, 0(x2) # load 0x13cc8b7aa091367a from memory into f15
fnmadd.h f16, f20, f29, f15, dyn # perform operation
fnmadd.h f16, f20, f29, f15, rdn # perform operation
fnmadd.h f16, f20, f29, f15, rmm # perform operation
fnmadd.h f16, f20, f29, f15, rne # perform operation
fnmadd.h f16, f20, f29, f15, rtz # perform operation
fnmadd.h f16, f20, f29, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f16, f20, f29, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f16, f20, f29, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f16, f20, f29, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f16, f20, f29, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f16, f20, f29, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000 fs2 = 0xfc00)
li x8, 0x3cfc516255df33ea # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f19, 0(x2) # load 0x00004000 from memory into f19
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f20, 0(x2) # load 0x0000fc00 from memory into f20
li x3, 0xdea33c2744453a3 # load x3 with value 0xdea33c2744453a3
sw x3, 0(x2) # store 0xdea33c2744453a3 in memory
flh f11, 0(x2) # load 0xdea33c2744453a3 from memory into f11
fnmadd.h f8, f19, f20, f11, dyn # perform operation
fnmadd.h f8, f19, f20, f11, rdn # perform operation
fnmadd.h f8, f19, f20, f11, rmm # perform operation
fnmadd.h f8, f19, f20, f11, rne # perform operation
fnmadd.h f8, f19, f20, f11, rtz # perform operation
fnmadd.h f8, f19, f20, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f8, f19, f20, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f8, f19, f20, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f8, f19, f20, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f8, f19, f20, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f8, f19, f20, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000 fs2 = 0x7e00)
li x22, 0xe60310f8dff2013e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f30, 0(x2) # load 0x00004000 from memory into f30
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f29, 0(x2) # load 0x00007e00 from memory into f29
li x3, 0x3e466e12308b35ed # load x3 with value 0x3e466e12308b35ed
sw x3, 0(x2) # store 0x3e466e12308b35ed in memory
flh f23, 0(x2) # load 0x3e466e12308b35ed from memory into f23
fnmadd.h f22, f30, f29, f23, dyn # perform operation
fnmadd.h f22, f30, f29, f23, rdn # perform operation
fnmadd.h f22, f30, f29, f23, rmm # perform operation
fnmadd.h f22, f30, f29, f23, rne # perform operation
fnmadd.h f22, f30, f29, f23, rtz # perform operation
fnmadd.h f22, f30, f29, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f22, f30, f29, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f22, f30, f29, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f22, f30, f29, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f22, f30, f29, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f22, f30, f29, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000 fs2 = 0x7fff)
li x15, 0xdd3e33ba25a661fd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f12, 0(x2) # load 0x00004000 from memory into f12
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f8, 0(x2) # load 0x00007fff from memory into f8
li x3, 0x9f674e8b64cb4501 # load x3 with value 0x9f674e8b64cb4501
sw x3, 0(x2) # store 0x9f674e8b64cb4501 in memory
flh f6, 0(x2) # load 0x9f674e8b64cb4501 from memory into f6
fnmadd.h f15, f12, f8, f6, dyn # perform operation
fnmadd.h f15, f12, f8, f6, rdn # perform operation
fnmadd.h f15, f12, f8, f6, rmm # perform operation
fnmadd.h f15, f12, f8, f6, rne # perform operation
fnmadd.h f15, f12, f8, f6, rtz # perform operation
fnmadd.h f15, f12, f8, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f15, f12, f8, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f15, f12, f8, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f15, f12, f8, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f15, f12, f8, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f15, f12, f8, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000 fs2 = 0x7c01)
li x29, 0xeed45dfcaa46a78b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f6, 0(x2) # load 0x00004000 from memory into f6
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f11, 0(x2) # load 0x00007c01 from memory into f11
li x3, 0xdd46936f0651bbe8 # load x3 with value 0xdd46936f0651bbe8
sw x3, 0(x2) # store 0xdd46936f0651bbe8 in memory
flh f20, 0(x2) # load 0xdd46936f0651bbe8 from memory into f20
fnmadd.h f29, f6, f11, f20, dyn # perform operation
fnmadd.h f29, f6, f11, f20, rdn # perform operation
fnmadd.h f29, f6, f11, f20, rmm # perform operation
fnmadd.h f29, f6, f11, f20, rne # perform operation
fnmadd.h f29, f6, f11, f20, rtz # perform operation
fnmadd.h f29, f6, f11, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f29, f6, f11, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f29, f6, f11, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f29, f6, f11, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f29, f6, f11, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f29, f6, f11, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000 fs2 = 0x7dff)
li x7, 0x9b2dec2537cbe493 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f29, 0(x2) # load 0x00004000 from memory into f29
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f2, 0(x2) # load 0x00007dff from memory into f2
li x3, 0x55715977d59de70 # load x3 with value 0x55715977d59de70
sw x3, 0(x2) # store 0x55715977d59de70 in memory
flh f10, 0(x2) # load 0x55715977d59de70 from memory into f10
fnmadd.h f7, f29, f2, f10, dyn # perform operation
fnmadd.h f7, f29, f2, f10, rdn # perform operation
fnmadd.h f7, f29, f2, f10, rmm # perform operation
fnmadd.h f7, f29, f2, f10, rne # perform operation
fnmadd.h f7, f29, f2, f10, rtz # perform operation
fnmadd.h f7, f29, f2, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f7, f29, f2, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f7, f29, f2, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f7, f29, f2, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f7, f29, f2, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f7, f29, f2, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000 fs2 = 0x58b4)
li x19, 0xf96648455f6a583c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f15, 0(x2) # load 0x00004000 from memory into f15
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f30, 0(x2) # load 0x000058b4 from memory into f30
li x3, 0x3bffcfb091391006 # load x3 with value 0x3bffcfb091391006
sw x3, 0(x2) # store 0x3bffcfb091391006 in memory
flh f20, 0(x2) # load 0x3bffcfb091391006 from memory into f20
fnmadd.h f19, f15, f30, f20, dyn # perform operation
fnmadd.h f19, f15, f30, f20, rdn # perform operation
fnmadd.h f19, f15, f30, f20, rmm # perform operation
fnmadd.h f19, f15, f30, f20, rne # perform operation
fnmadd.h f19, f15, f30, f20, rtz # perform operation
fnmadd.h f19, f15, f30, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f19, f15, f30, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f19, f15, f30, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f19, f15, f30, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f19, f15, f30, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f19, f15, f30, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000 fs2 = 0xc93a)
li x30, 0xc1b6c5d21a7f10e1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f19, 0(x2) # load 0x00004000 from memory into f19
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f2, 0(x2) # load 0x0000c93a from memory into f2
li x3, 0x79545b8aaeb3fafd # load x3 with value 0x79545b8aaeb3fafd
sw x3, 0(x2) # store 0x79545b8aaeb3fafd in memory
flh f7, 0(x2) # load 0x79545b8aaeb3fafd from memory into f7
fnmadd.h f30, f19, f2, f7, dyn # perform operation
fnmadd.h f30, f19, f2, f7, rdn # perform operation
fnmadd.h f30, f19, f2, f7, rmm # perform operation
fnmadd.h f30, f19, f2, f7, rne # perform operation
fnmadd.h f30, f19, f2, f7, rtz # perform operation
fnmadd.h f30, f19, f2, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f30, f19, f2, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f30, f19, f2, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f30, f19, f2, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f30, f19, f2, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f30, f19, f2, f7 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000 fs2 = 0x0)
li x26, 0xc1db9bae83192f73 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f21, 0(x2) # load 0x0000c000 from memory into f21
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f25, 0(x2) # load 0x00000000 from memory into f25
li x3, 0x9be51c7cfd84aee4 # load x3 with value 0x9be51c7cfd84aee4
sw x3, 0(x2) # store 0x9be51c7cfd84aee4 in memory
flh f22, 0(x2) # load 0x9be51c7cfd84aee4 from memory into f22
fnmadd.h f26, f21, f25, f22, dyn # perform operation
fnmadd.h f26, f21, f25, f22, rdn # perform operation
fnmadd.h f26, f21, f25, f22, rmm # perform operation
fnmadd.h f26, f21, f25, f22, rne # perform operation
fnmadd.h f26, f21, f25, f22, rtz # perform operation
fnmadd.h f26, f21, f25, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f26, f21, f25, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f26, f21, f25, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f26, f21, f25, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f26, f21, f25, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f26, f21, f25, f22 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000 fs2 = 0x8000)
li x27, 0x8cd59e8ae2f0e36d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f2, 0(x2) # load 0x0000c000 from memory into f2
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f1, 0(x2) # load 0x00008000 from memory into f1
li x3, 0xdbdad11313ff3849 # load x3 with value 0xdbdad11313ff3849
sw x3, 0(x2) # store 0xdbdad11313ff3849 in memory
flh f19, 0(x2) # load 0xdbdad11313ff3849 from memory into f19
fnmadd.h f27, f2, f1, f19, dyn # perform operation
fnmadd.h f27, f2, f1, f19, rdn # perform operation
fnmadd.h f27, f2, f1, f19, rmm # perform operation
fnmadd.h f27, f2, f1, f19, rne # perform operation
fnmadd.h f27, f2, f1, f19, rtz # perform operation
fnmadd.h f27, f2, f1, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f27, f2, f1, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f27, f2, f1, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f27, f2, f1, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f27, f2, f1, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f27, f2, f1, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000 fs2 = 0x3c00)
li x17, 0x9e1f2441a63ff24c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f26, 0(x2) # load 0x0000c000 from memory into f26
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f21, 0(x2) # load 0x00003c00 from memory into f21
li x3, 0x4368225f80e3f1b6 # load x3 with value 0x4368225f80e3f1b6
sw x3, 0(x2) # store 0x4368225f80e3f1b6 in memory
flh f13, 0(x2) # load 0x4368225f80e3f1b6 from memory into f13
fnmadd.h f17, f26, f21, f13, dyn # perform operation
fnmadd.h f17, f26, f21, f13, rdn # perform operation
fnmadd.h f17, f26, f21, f13, rmm # perform operation
fnmadd.h f17, f26, f21, f13, rne # perform operation
fnmadd.h f17, f26, f21, f13, rtz # perform operation
fnmadd.h f17, f26, f21, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f17, f26, f21, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f17, f26, f21, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f17, f26, f21, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f17, f26, f21, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f17, f26, f21, f13 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000 fs2 = 0xbc00)
li x22, 0x04af9cfda69046db # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f4, 0(x2) # load 0x0000c000 from memory into f4
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f9, 0(x2) # load 0x0000bc00 from memory into f9
li x3, 0xdf72d7d44413b9b0 # load x3 with value 0xdf72d7d44413b9b0
sw x3, 0(x2) # store 0xdf72d7d44413b9b0 in memory
flh f8, 0(x2) # load 0xdf72d7d44413b9b0 from memory into f8
fnmadd.h f22, f4, f9, f8, dyn # perform operation
fnmadd.h f22, f4, f9, f8, rdn # perform operation
fnmadd.h f22, f4, f9, f8, rmm # perform operation
fnmadd.h f22, f4, f9, f8, rne # perform operation
fnmadd.h f22, f4, f9, f8, rtz # perform operation
fnmadd.h f22, f4, f9, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f22, f4, f9, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f22, f4, f9, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f22, f4, f9, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f22, f4, f9, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f22, f4, f9, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000 fs2 = 0x3e00)
li x4, 0x4faf618c717a5ea5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f27, 0(x2) # load 0x0000c000 from memory into f27
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f13, 0(x2) # load 0x00003e00 from memory into f13
li x3, 0xa8b5a48a1a2b0e9d # load x3 with value 0xa8b5a48a1a2b0e9d
sw x3, 0(x2) # store 0xa8b5a48a1a2b0e9d in memory
flh f21, 0(x2) # load 0xa8b5a48a1a2b0e9d from memory into f21
fnmadd.h f4, f27, f13, f21, dyn # perform operation
fnmadd.h f4, f27, f13, f21, rdn # perform operation
fnmadd.h f4, f27, f13, f21, rmm # perform operation
fnmadd.h f4, f27, f13, f21, rne # perform operation
fnmadd.h f4, f27, f13, f21, rtz # perform operation
fnmadd.h f4, f27, f13, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f4, f27, f13, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f4, f27, f13, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f4, f27, f13, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f4, f27, f13, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f4, f27, f13, f21 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000 fs2 = 0xbe00)
li x30, 0x717e3060f6a96325 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f8, 0(x2) # load 0x0000c000 from memory into f8
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f31, 0(x2) # load 0x0000be00 from memory into f31
li x3, 0x8f97c26028b52840 # load x3 with value 0x8f97c26028b52840
sw x3, 0(x2) # store 0x8f97c26028b52840 in memory
flh f4, 0(x2) # load 0x8f97c26028b52840 from memory into f4
fnmadd.h f30, f8, f31, f4, dyn # perform operation
fnmadd.h f30, f8, f31, f4, rdn # perform operation
fnmadd.h f30, f8, f31, f4, rmm # perform operation
fnmadd.h f30, f8, f31, f4, rne # perform operation
fnmadd.h f30, f8, f31, f4, rtz # perform operation
fnmadd.h f30, f8, f31, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f30, f8, f31, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f30, f8, f31, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f30, f8, f31, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f30, f8, f31, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f30, f8, f31, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000 fs2 = 0x4000)
li x15, 0x390e7c5223388544 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f20, 0(x2) # load 0x0000c000 from memory into f20
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f23, 0(x2) # load 0x00004000 from memory into f23
li x3, 0xb98f7ec73e2c19e9 # load x3 with value 0xb98f7ec73e2c19e9
sw x3, 0(x2) # store 0xb98f7ec73e2c19e9 in memory
flh f22, 0(x2) # load 0xb98f7ec73e2c19e9 from memory into f22
fnmadd.h f15, f20, f23, f22, dyn # perform operation
fnmadd.h f15, f20, f23, f22, rdn # perform operation
fnmadd.h f15, f20, f23, f22, rmm # perform operation
fnmadd.h f15, f20, f23, f22, rne # perform operation
fnmadd.h f15, f20, f23, f22, rtz # perform operation
fnmadd.h f15, f20, f23, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f15, f20, f23, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f15, f20, f23, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f15, f20, f23, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f15, f20, f23, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f15, f20, f23, f22 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000 fs2 = 0xc000)
li x13, 0xb966001568380397 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f2, 0(x2) # load 0x0000c000 from memory into f2
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f12, 0(x2) # load 0x0000c000 from memory into f12
li x3, 0xc4c45097825dffe # load x3 with value 0xc4c45097825dffe
sw x3, 0(x2) # store 0xc4c45097825dffe in memory
flh f18, 0(x2) # load 0xc4c45097825dffe from memory into f18
fnmadd.h f13, f2, f12, f18, dyn # perform operation
fnmadd.h f13, f2, f12, f18, rdn # perform operation
fnmadd.h f13, f2, f12, f18, rmm # perform operation
fnmadd.h f13, f2, f12, f18, rne # perform operation
fnmadd.h f13, f2, f12, f18, rtz # perform operation
fnmadd.h f13, f2, f12, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f13, f2, f12, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f13, f2, f12, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f13, f2, f12, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f13, f2, f12, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f13, f2, f12, f18 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000 fs2 = 0x400)
li x2, 0x06296643bfe3a37d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f20, 0(x2) # load 0x0000c000 from memory into f20
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f27, 0(x2) # load 0x00000400 from memory into f27
li x3, 0x654cec78fea3477f # load x3 with value 0x654cec78fea3477f
sw x3, 0(x2) # store 0x654cec78fea3477f in memory
flh f17, 0(x2) # load 0x654cec78fea3477f from memory into f17
fnmadd.h f2, f20, f27, f17, dyn # perform operation
fnmadd.h f2, f20, f27, f17, rdn # perform operation
fnmadd.h f2, f20, f27, f17, rmm # perform operation
fnmadd.h f2, f20, f27, f17, rne # perform operation
fnmadd.h f2, f20, f27, f17, rtz # perform operation
fnmadd.h f2, f20, f27, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f2, f20, f27, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f2, f20, f27, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f2, f20, f27, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f2, f20, f27, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f2, f20, f27, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000 fs2 = 0x8400)
li x8, 0x0ed0bf6ea9aa7984 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f4, 0(x2) # load 0x0000c000 from memory into f4
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f6, 0(x2) # load 0x00008400 from memory into f6
li x3, 0x9ddbc6f95db1c5d3 # load x3 with value 0x9ddbc6f95db1c5d3
sw x3, 0(x2) # store 0x9ddbc6f95db1c5d3 in memory
flh f16, 0(x2) # load 0x9ddbc6f95db1c5d3 from memory into f16
fnmadd.h f8, f4, f6, f16, dyn # perform operation
fnmadd.h f8, f4, f6, f16, rdn # perform operation
fnmadd.h f8, f4, f6, f16, rmm # perform operation
fnmadd.h f8, f4, f6, f16, rne # perform operation
fnmadd.h f8, f4, f6, f16, rtz # perform operation
fnmadd.h f8, f4, f6, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f8, f4, f6, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f8, f4, f6, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f8, f4, f6, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f8, f4, f6, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f8, f4, f6, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000 fs2 = 0x7bff)
li x7, 0x3744be95f07291af # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f10, 0(x2) # load 0x0000c000 from memory into f10
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f13, 0(x2) # load 0x00007bff from memory into f13
li x3, 0x257efd854e630c93 # load x3 with value 0x257efd854e630c93
sw x3, 0(x2) # store 0x257efd854e630c93 in memory
flh f4, 0(x2) # load 0x257efd854e630c93 from memory into f4
fnmadd.h f7, f10, f13, f4, dyn # perform operation
fnmadd.h f7, f10, f13, f4, rdn # perform operation
fnmadd.h f7, f10, f13, f4, rmm # perform operation
fnmadd.h f7, f10, f13, f4, rne # perform operation
fnmadd.h f7, f10, f13, f4, rtz # perform operation
fnmadd.h f7, f10, f13, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f7, f10, f13, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f7, f10, f13, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f7, f10, f13, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f7, f10, f13, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f7, f10, f13, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000 fs2 = 0xfbff)
li x19, 0xd653f8eb4fd3842d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f7, 0(x2) # load 0x0000c000 from memory into f7
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f14, 0(x2) # load 0x0000fbff from memory into f14
li x3, 0xfea7deb01b597741 # load x3 with value 0xfea7deb01b597741
sw x3, 0(x2) # store 0xfea7deb01b597741 in memory
flh f3, 0(x2) # load 0xfea7deb01b597741 from memory into f3
fnmadd.h f19, f7, f14, f3, dyn # perform operation
fnmadd.h f19, f7, f14, f3, rdn # perform operation
fnmadd.h f19, f7, f14, f3, rmm # perform operation
fnmadd.h f19, f7, f14, f3, rne # perform operation
fnmadd.h f19, f7, f14, f3, rtz # perform operation
fnmadd.h f19, f7, f14, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f19, f7, f14, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f19, f7, f14, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f19, f7, f14, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f19, f7, f14, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f19, f7, f14, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000 fs2 = 0x3ff)
li x19, 0x57ff3e829e17685c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f24, 0(x2) # load 0x0000c000 from memory into f24
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f22, 0(x2) # load 0x000003ff from memory into f22
li x3, 0x185df9b6bcca2ba8 # load x3 with value 0x185df9b6bcca2ba8
sw x3, 0(x2) # store 0x185df9b6bcca2ba8 in memory
flh f3, 0(x2) # load 0x185df9b6bcca2ba8 from memory into f3
fnmadd.h f19, f24, f22, f3, dyn # perform operation
fnmadd.h f19, f24, f22, f3, rdn # perform operation
fnmadd.h f19, f24, f22, f3, rmm # perform operation
fnmadd.h f19, f24, f22, f3, rne # perform operation
fnmadd.h f19, f24, f22, f3, rtz # perform operation
fnmadd.h f19, f24, f22, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f19, f24, f22, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f19, f24, f22, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f19, f24, f22, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f19, f24, f22, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f19, f24, f22, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000 fs2 = 0x83ff)
li x8, 0xb84fb1584a1d594c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f26, 0(x2) # load 0x0000c000 from memory into f26
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f17, 0(x2) # load 0x000083ff from memory into f17
li x3, 0x9128c976ce00977e # load x3 with value 0x9128c976ce00977e
sw x3, 0(x2) # store 0x9128c976ce00977e in memory
flh f20, 0(x2) # load 0x9128c976ce00977e from memory into f20
fnmadd.h f8, f26, f17, f20, dyn # perform operation
fnmadd.h f8, f26, f17, f20, rdn # perform operation
fnmadd.h f8, f26, f17, f20, rmm # perform operation
fnmadd.h f8, f26, f17, f20, rne # perform operation
fnmadd.h f8, f26, f17, f20, rtz # perform operation
fnmadd.h f8, f26, f17, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f8, f26, f17, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f8, f26, f17, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f8, f26, f17, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f8, f26, f17, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f8, f26, f17, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000 fs2 = 0x200)
li x15, 0x26f188c33ad9ae4b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f6, 0(x2) # load 0x0000c000 from memory into f6
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f3, 0(x2) # load 0x00000200 from memory into f3
li x3, 0x8c470e4c9e893692 # load x3 with value 0x8c470e4c9e893692
sw x3, 0(x2) # store 0x8c470e4c9e893692 in memory
flh f17, 0(x2) # load 0x8c470e4c9e893692 from memory into f17
fnmadd.h f15, f6, f3, f17, dyn # perform operation
fnmadd.h f15, f6, f3, f17, rdn # perform operation
fnmadd.h f15, f6, f3, f17, rmm # perform operation
fnmadd.h f15, f6, f3, f17, rne # perform operation
fnmadd.h f15, f6, f3, f17, rtz # perform operation
fnmadd.h f15, f6, f3, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f15, f6, f3, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f15, f6, f3, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f15, f6, f3, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f15, f6, f3, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f15, f6, f3, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000 fs2 = 0x8200)
li x11, 0xcee991e49671705d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f30, 0(x2) # load 0x0000c000 from memory into f30
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f21, 0(x2) # load 0x00008200 from memory into f21
li x3, 0x7a32b44eee3dfa96 # load x3 with value 0x7a32b44eee3dfa96
sw x3, 0(x2) # store 0x7a32b44eee3dfa96 in memory
flh f12, 0(x2) # load 0x7a32b44eee3dfa96 from memory into f12
fnmadd.h f11, f30, f21, f12, dyn # perform operation
fnmadd.h f11, f30, f21, f12, rdn # perform operation
fnmadd.h f11, f30, f21, f12, rmm # perform operation
fnmadd.h f11, f30, f21, f12, rne # perform operation
fnmadd.h f11, f30, f21, f12, rtz # perform operation
fnmadd.h f11, f30, f21, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f11, f30, f21, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f11, f30, f21, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f11, f30, f21, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f11, f30, f21, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f11, f30, f21, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000 fs2 = 0x1)
li x22, 0xd44b5817977e9402 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f3, 0(x2) # load 0x0000c000 from memory into f3
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f14, 0(x2) # load 0x00000001 from memory into f14
li x3, 0x36de601f734c124c # load x3 with value 0x36de601f734c124c
sw x3, 0(x2) # store 0x36de601f734c124c in memory
flh f11, 0(x2) # load 0x36de601f734c124c from memory into f11
fnmadd.h f22, f3, f14, f11, dyn # perform operation
fnmadd.h f22, f3, f14, f11, rdn # perform operation
fnmadd.h f22, f3, f14, f11, rmm # perform operation
fnmadd.h f22, f3, f14, f11, rne # perform operation
fnmadd.h f22, f3, f14, f11, rtz # perform operation
fnmadd.h f22, f3, f14, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f22, f3, f14, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f22, f3, f14, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f22, f3, f14, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f22, f3, f14, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f22, f3, f14, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000 fs2 = 0x8001)
li x27, 0x40be0443b92d4b51 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f3, 0(x2) # load 0x0000c000 from memory into f3
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f10, 0(x2) # load 0x00008001 from memory into f10
li x3, 0xdaf4328e639a237 # load x3 with value 0xdaf4328e639a237
sw x3, 0(x2) # store 0xdaf4328e639a237 in memory
flh f15, 0(x2) # load 0xdaf4328e639a237 from memory into f15
fnmadd.h f27, f3, f10, f15, dyn # perform operation
fnmadd.h f27, f3, f10, f15, rdn # perform operation
fnmadd.h f27, f3, f10, f15, rmm # perform operation
fnmadd.h f27, f3, f10, f15, rne # perform operation
fnmadd.h f27, f3, f10, f15, rtz # perform operation
fnmadd.h f27, f3, f10, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f27, f3, f10, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f27, f3, f10, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f27, f3, f10, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f27, f3, f10, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f27, f3, f10, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000 fs2 = 0x7c00)
li x8, 0xc7b45b7ea141bbc8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f4, 0(x2) # load 0x0000c000 from memory into f4
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f21, 0(x2) # load 0x00007c00 from memory into f21
li x3, 0x626a480f54b1bd51 # load x3 with value 0x626a480f54b1bd51
sw x3, 0(x2) # store 0x626a480f54b1bd51 in memory
flh f12, 0(x2) # load 0x626a480f54b1bd51 from memory into f12
fnmadd.h f8, f4, f21, f12, dyn # perform operation
fnmadd.h f8, f4, f21, f12, rdn # perform operation
fnmadd.h f8, f4, f21, f12, rmm # perform operation
fnmadd.h f8, f4, f21, f12, rne # perform operation
fnmadd.h f8, f4, f21, f12, rtz # perform operation
fnmadd.h f8, f4, f21, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f8, f4, f21, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f8, f4, f21, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f8, f4, f21, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f8, f4, f21, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f8, f4, f21, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000 fs2 = 0xfc00)
li x2, 0x371be0f39ceff8e8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f18, 0(x2) # load 0x0000c000 from memory into f18
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f7, 0(x2) # load 0x0000fc00 from memory into f7
li x3, 0xa047f0e774bcf21b # load x3 with value 0xa047f0e774bcf21b
sw x3, 0(x2) # store 0xa047f0e774bcf21b in memory
flh f12, 0(x2) # load 0xa047f0e774bcf21b from memory into f12
fnmadd.h f2, f18, f7, f12, dyn # perform operation
fnmadd.h f2, f18, f7, f12, rdn # perform operation
fnmadd.h f2, f18, f7, f12, rmm # perform operation
fnmadd.h f2, f18, f7, f12, rne # perform operation
fnmadd.h f2, f18, f7, f12, rtz # perform operation
fnmadd.h f2, f18, f7, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f2, f18, f7, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f2, f18, f7, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f2, f18, f7, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f2, f18, f7, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f2, f18, f7, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000 fs2 = 0x7e00)
li x30, 0xbd8c2b79e6bc179c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f5, 0(x2) # load 0x0000c000 from memory into f5
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f19, 0(x2) # load 0x00007e00 from memory into f19
li x3, 0x13b3223eb5e2ad82 # load x3 with value 0x13b3223eb5e2ad82
sw x3, 0(x2) # store 0x13b3223eb5e2ad82 in memory
flh f1, 0(x2) # load 0x13b3223eb5e2ad82 from memory into f1
fnmadd.h f30, f5, f19, f1, dyn # perform operation
fnmadd.h f30, f5, f19, f1, rdn # perform operation
fnmadd.h f30, f5, f19, f1, rmm # perform operation
fnmadd.h f30, f5, f19, f1, rne # perform operation
fnmadd.h f30, f5, f19, f1, rtz # perform operation
fnmadd.h f30, f5, f19, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f30, f5, f19, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f30, f5, f19, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f30, f5, f19, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f30, f5, f19, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f30, f5, f19, f1 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000 fs2 = 0x7fff)
li x18, 0xb7405f0d9c68efc3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f25, 0(x2) # load 0x0000c000 from memory into f25
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f16, 0(x2) # load 0x00007fff from memory into f16
li x3, 0x1a9b0bbd9b61aca2 # load x3 with value 0x1a9b0bbd9b61aca2
sw x3, 0(x2) # store 0x1a9b0bbd9b61aca2 in memory
flh f2, 0(x2) # load 0x1a9b0bbd9b61aca2 from memory into f2
fnmadd.h f18, f25, f16, f2, dyn # perform operation
fnmadd.h f18, f25, f16, f2, rdn # perform operation
fnmadd.h f18, f25, f16, f2, rmm # perform operation
fnmadd.h f18, f25, f16, f2, rne # perform operation
fnmadd.h f18, f25, f16, f2, rtz # perform operation
fnmadd.h f18, f25, f16, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f18, f25, f16, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f18, f25, f16, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f18, f25, f16, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f18, f25, f16, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f18, f25, f16, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000 fs2 = 0x7c01)
li x25, 0x986b76f7a9bea89e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f16, 0(x2) # load 0x0000c000 from memory into f16
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f26, 0(x2) # load 0x00007c01 from memory into f26
li x3, 0xddbc1f492a81ac18 # load x3 with value 0xddbc1f492a81ac18
sw x3, 0(x2) # store 0xddbc1f492a81ac18 in memory
flh f17, 0(x2) # load 0xddbc1f492a81ac18 from memory into f17
fnmadd.h f25, f16, f26, f17, dyn # perform operation
fnmadd.h f25, f16, f26, f17, rdn # perform operation
fnmadd.h f25, f16, f26, f17, rmm # perform operation
fnmadd.h f25, f16, f26, f17, rne # perform operation
fnmadd.h f25, f16, f26, f17, rtz # perform operation
fnmadd.h f25, f16, f26, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f25, f16, f26, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f25, f16, f26, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f25, f16, f26, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f25, f16, f26, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f25, f16, f26, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000 fs2 = 0x7dff)
li x28, 0xe3d718af8dcd7d1f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f5, 0(x2) # load 0x0000c000 from memory into f5
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f4, 0(x2) # load 0x00007dff from memory into f4
li x3, 0xf7630352c0099e31 # load x3 with value 0xf7630352c0099e31
sw x3, 0(x2) # store 0xf7630352c0099e31 in memory
flh f18, 0(x2) # load 0xf7630352c0099e31 from memory into f18
fnmadd.h f28, f5, f4, f18, dyn # perform operation
fnmadd.h f28, f5, f4, f18, rdn # perform operation
fnmadd.h f28, f5, f4, f18, rmm # perform operation
fnmadd.h f28, f5, f4, f18, rne # perform operation
fnmadd.h f28, f5, f4, f18, rtz # perform operation
fnmadd.h f28, f5, f4, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f28, f5, f4, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f28, f5, f4, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f28, f5, f4, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f28, f5, f4, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f28, f5, f4, f18 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000 fs2 = 0x58b4)
li x18, 0x02378e36cc93b4f5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f2, 0(x2) # load 0x0000c000 from memory into f2
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f3, 0(x2) # load 0x000058b4 from memory into f3
li x3, 0x1d366ef608eb2879 # load x3 with value 0x1d366ef608eb2879
sw x3, 0(x2) # store 0x1d366ef608eb2879 in memory
flh f27, 0(x2) # load 0x1d366ef608eb2879 from memory into f27
fnmadd.h f18, f2, f3, f27, dyn # perform operation
fnmadd.h f18, f2, f3, f27, rdn # perform operation
fnmadd.h f18, f2, f3, f27, rmm # perform operation
fnmadd.h f18, f2, f3, f27, rne # perform operation
fnmadd.h f18, f2, f3, f27, rtz # perform operation
fnmadd.h f18, f2, f3, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f18, f2, f3, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f18, f2, f3, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f18, f2, f3, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f18, f2, f3, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f18, f2, f3, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000 fs2 = 0xc93a)
li x11, 0x33b2f17bdfa2cae0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f22, 0(x2) # load 0x0000c000 from memory into f22
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f21, 0(x2) # load 0x0000c93a from memory into f21
li x3, 0x8182c6a703c17ff5 # load x3 with value 0x8182c6a703c17ff5
sw x3, 0(x2) # store 0x8182c6a703c17ff5 in memory
flh f14, 0(x2) # load 0x8182c6a703c17ff5 from memory into f14
fnmadd.h f11, f22, f21, f14, dyn # perform operation
fnmadd.h f11, f22, f21, f14, rdn # perform operation
fnmadd.h f11, f22, f21, f14, rmm # perform operation
fnmadd.h f11, f22, f21, f14, rne # perform operation
fnmadd.h f11, f22, f21, f14, rtz # perform operation
fnmadd.h f11, f22, f21, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f11, f22, f21, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f11, f22, f21, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f11, f22, f21, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f11, f22, f21, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f11, f22, f21, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400 fs2 = 0x0)
li x29, 0x53e89409ff862546 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f4, 0(x2) # load 0x00000400 from memory into f4
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f12, 0(x2) # load 0x00000000 from memory into f12
li x3, 0x1af3f97e99caa89d # load x3 with value 0x1af3f97e99caa89d
sw x3, 0(x2) # store 0x1af3f97e99caa89d in memory
flh f28, 0(x2) # load 0x1af3f97e99caa89d from memory into f28
fnmadd.h f29, f4, f12, f28, dyn # perform operation
fnmadd.h f29, f4, f12, f28, rdn # perform operation
fnmadd.h f29, f4, f12, f28, rmm # perform operation
fnmadd.h f29, f4, f12, f28, rne # perform operation
fnmadd.h f29, f4, f12, f28, rtz # perform operation
fnmadd.h f29, f4, f12, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f29, f4, f12, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f29, f4, f12, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f29, f4, f12, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f29, f4, f12, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f29, f4, f12, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400 fs2 = 0x8000)
li x20, 0x05f376bb9f9088ba # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f1, 0(x2) # load 0x00000400 from memory into f1
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f28, 0(x2) # load 0x00008000 from memory into f28
li x3, 0x373f77c83212605e # load x3 with value 0x373f77c83212605e
sw x3, 0(x2) # store 0x373f77c83212605e in memory
flh f3, 0(x2) # load 0x373f77c83212605e from memory into f3
fnmadd.h f20, f1, f28, f3, dyn # perform operation
fnmadd.h f20, f1, f28, f3, rdn # perform operation
fnmadd.h f20, f1, f28, f3, rmm # perform operation
fnmadd.h f20, f1, f28, f3, rne # perform operation
fnmadd.h f20, f1, f28, f3, rtz # perform operation
fnmadd.h f20, f1, f28, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f20, f1, f28, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f20, f1, f28, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f20, f1, f28, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f20, f1, f28, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f20, f1, f28, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400 fs2 = 0x3c00)
li x1, 0xd739c7562b9b0356 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f11, 0(x2) # load 0x00000400 from memory into f11
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f21, 0(x2) # load 0x00003c00 from memory into f21
li x3, 0xef3ddd13a079318e # load x3 with value 0xef3ddd13a079318e
sw x3, 0(x2) # store 0xef3ddd13a079318e in memory
flh f22, 0(x2) # load 0xef3ddd13a079318e from memory into f22
fnmadd.h f1, f11, f21, f22, dyn # perform operation
fnmadd.h f1, f11, f21, f22, rdn # perform operation
fnmadd.h f1, f11, f21, f22, rmm # perform operation
fnmadd.h f1, f11, f21, f22, rne # perform operation
fnmadd.h f1, f11, f21, f22, rtz # perform operation
fnmadd.h f1, f11, f21, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f1, f11, f21, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f1, f11, f21, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f1, f11, f21, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f1, f11, f21, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f1, f11, f21, f22 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400 fs2 = 0xbc00)
li x20, 0x1a8be8aadd5745f7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f11, 0(x2) # load 0x00000400 from memory into f11
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f30, 0(x2) # load 0x0000bc00 from memory into f30
li x3, 0x89b9e44998b0df5c # load x3 with value 0x89b9e44998b0df5c
sw x3, 0(x2) # store 0x89b9e44998b0df5c in memory
flh f1, 0(x2) # load 0x89b9e44998b0df5c from memory into f1
fnmadd.h f20, f11, f30, f1, dyn # perform operation
fnmadd.h f20, f11, f30, f1, rdn # perform operation
fnmadd.h f20, f11, f30, f1, rmm # perform operation
fnmadd.h f20, f11, f30, f1, rne # perform operation
fnmadd.h f20, f11, f30, f1, rtz # perform operation
fnmadd.h f20, f11, f30, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f20, f11, f30, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f20, f11, f30, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f20, f11, f30, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f20, f11, f30, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f20, f11, f30, f1 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400 fs2 = 0x3e00)
li x14, 0x7757bd9ba6da7ec2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f10, 0(x2) # load 0x00000400 from memory into f10
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f4, 0(x2) # load 0x00003e00 from memory into f4
li x3, 0xf5bb24c8d12dc6f2 # load x3 with value 0xf5bb24c8d12dc6f2
sw x3, 0(x2) # store 0xf5bb24c8d12dc6f2 in memory
flh f8, 0(x2) # load 0xf5bb24c8d12dc6f2 from memory into f8
fnmadd.h f14, f10, f4, f8, dyn # perform operation
fnmadd.h f14, f10, f4, f8, rdn # perform operation
fnmadd.h f14, f10, f4, f8, rmm # perform operation
fnmadd.h f14, f10, f4, f8, rne # perform operation
fnmadd.h f14, f10, f4, f8, rtz # perform operation
fnmadd.h f14, f10, f4, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f14, f10, f4, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f14, f10, f4, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f14, f10, f4, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f14, f10, f4, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f14, f10, f4, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400 fs2 = 0xbe00)
li x11, 0xe0c1dff27f3fa0bb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f18, 0(x2) # load 0x00000400 from memory into f18
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f27, 0(x2) # load 0x0000be00 from memory into f27
li x3, 0xd975b33af1696c02 # load x3 with value 0xd975b33af1696c02
sw x3, 0(x2) # store 0xd975b33af1696c02 in memory
flh f15, 0(x2) # load 0xd975b33af1696c02 from memory into f15
fnmadd.h f11, f18, f27, f15, dyn # perform operation
fnmadd.h f11, f18, f27, f15, rdn # perform operation
fnmadd.h f11, f18, f27, f15, rmm # perform operation
fnmadd.h f11, f18, f27, f15, rne # perform operation
fnmadd.h f11, f18, f27, f15, rtz # perform operation
fnmadd.h f11, f18, f27, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f11, f18, f27, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f11, f18, f27, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f11, f18, f27, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f11, f18, f27, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f11, f18, f27, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400 fs2 = 0x4000)
li x8, 0x7b4c8556b06240bc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f9, 0(x2) # load 0x00000400 from memory into f9
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f18, 0(x2) # load 0x00004000 from memory into f18
li x3, 0x6901c7852bc48a49 # load x3 with value 0x6901c7852bc48a49
sw x3, 0(x2) # store 0x6901c7852bc48a49 in memory
flh f28, 0(x2) # load 0x6901c7852bc48a49 from memory into f28
fnmadd.h f8, f9, f18, f28, dyn # perform operation
fnmadd.h f8, f9, f18, f28, rdn # perform operation
fnmadd.h f8, f9, f18, f28, rmm # perform operation
fnmadd.h f8, f9, f18, f28, rne # perform operation
fnmadd.h f8, f9, f18, f28, rtz # perform operation
fnmadd.h f8, f9, f18, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f8, f9, f18, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f8, f9, f18, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f8, f9, f18, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f8, f9, f18, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f8, f9, f18, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400 fs2 = 0xc000)
li x3, 0x7241a8b8931c227c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f13, 0(x2) # load 0x00000400 from memory into f13
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f4, 0(x2) # load 0x0000c000 from memory into f4
li x3, 0x85f884ef68c8510c # load x3 with value 0x85f884ef68c8510c
sw x3, 0(x2) # store 0x85f884ef68c8510c in memory
flh f11, 0(x2) # load 0x85f884ef68c8510c from memory into f11
fnmadd.h f3, f13, f4, f11, dyn # perform operation
fnmadd.h f3, f13, f4, f11, rdn # perform operation
fnmadd.h f3, f13, f4, f11, rmm # perform operation
fnmadd.h f3, f13, f4, f11, rne # perform operation
fnmadd.h f3, f13, f4, f11, rtz # perform operation
fnmadd.h f3, f13, f4, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f3, f13, f4, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f3, f13, f4, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f3, f13, f4, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f3, f13, f4, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f3, f13, f4, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400 fs2 = 0x400)
li x19, 0x00a15086ed9490a1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f23, 0(x2) # load 0x00000400 from memory into f23
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f3, 0(x2) # load 0x00000400 from memory into f3
li x3, 0x82236baa2547967b # load x3 with value 0x82236baa2547967b
sw x3, 0(x2) # store 0x82236baa2547967b in memory
flh f12, 0(x2) # load 0x82236baa2547967b from memory into f12
fnmadd.h f19, f23, f3, f12, dyn # perform operation
fnmadd.h f19, f23, f3, f12, rdn # perform operation
fnmadd.h f19, f23, f3, f12, rmm # perform operation
fnmadd.h f19, f23, f3, f12, rne # perform operation
fnmadd.h f19, f23, f3, f12, rtz # perform operation
fnmadd.h f19, f23, f3, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f19, f23, f3, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f19, f23, f3, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f19, f23, f3, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f19, f23, f3, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f19, f23, f3, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400 fs2 = 0x8400)
li x25, 0x61929c9d51eff72a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f22, 0(x2) # load 0x00000400 from memory into f22
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f24, 0(x2) # load 0x00008400 from memory into f24
li x3, 0x8484d37dc16e8ff3 # load x3 with value 0x8484d37dc16e8ff3
sw x3, 0(x2) # store 0x8484d37dc16e8ff3 in memory
flh f20, 0(x2) # load 0x8484d37dc16e8ff3 from memory into f20
fnmadd.h f25, f22, f24, f20, dyn # perform operation
fnmadd.h f25, f22, f24, f20, rdn # perform operation
fnmadd.h f25, f22, f24, f20, rmm # perform operation
fnmadd.h f25, f22, f24, f20, rne # perform operation
fnmadd.h f25, f22, f24, f20, rtz # perform operation
fnmadd.h f25, f22, f24, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f25, f22, f24, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f25, f22, f24, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f25, f22, f24, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f25, f22, f24, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f25, f22, f24, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400 fs2 = 0x7bff)
li x20, 0xea163d456733f472 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f12, 0(x2) # load 0x00000400 from memory into f12
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f29, 0(x2) # load 0x00007bff from memory into f29
li x3, 0xbb66b819c16c09ac # load x3 with value 0xbb66b819c16c09ac
sw x3, 0(x2) # store 0xbb66b819c16c09ac in memory
flh f15, 0(x2) # load 0xbb66b819c16c09ac from memory into f15
fnmadd.h f20, f12, f29, f15, dyn # perform operation
fnmadd.h f20, f12, f29, f15, rdn # perform operation
fnmadd.h f20, f12, f29, f15, rmm # perform operation
fnmadd.h f20, f12, f29, f15, rne # perform operation
fnmadd.h f20, f12, f29, f15, rtz # perform operation
fnmadd.h f20, f12, f29, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f20, f12, f29, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f20, f12, f29, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f20, f12, f29, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f20, f12, f29, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f20, f12, f29, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400 fs2 = 0xfbff)
li x30, 0xd36f19947d28e140 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f3, 0(x2) # load 0x00000400 from memory into f3
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f29, 0(x2) # load 0x0000fbff from memory into f29
li x3, 0x58b5d7e3c41a9fd2 # load x3 with value 0x58b5d7e3c41a9fd2
sw x3, 0(x2) # store 0x58b5d7e3c41a9fd2 in memory
flh f9, 0(x2) # load 0x58b5d7e3c41a9fd2 from memory into f9
fnmadd.h f30, f3, f29, f9, dyn # perform operation
fnmadd.h f30, f3, f29, f9, rdn # perform operation
fnmadd.h f30, f3, f29, f9, rmm # perform operation
fnmadd.h f30, f3, f29, f9, rne # perform operation
fnmadd.h f30, f3, f29, f9, rtz # perform operation
fnmadd.h f30, f3, f29, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f30, f3, f29, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f30, f3, f29, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f30, f3, f29, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f30, f3, f29, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f30, f3, f29, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400 fs2 = 0x3ff)
li x23, 0xf5784ca5440ec17e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f5, 0(x2) # load 0x00000400 from memory into f5
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f18, 0(x2) # load 0x000003ff from memory into f18
li x3, 0xf5359fe1b9cc2321 # load x3 with value 0xf5359fe1b9cc2321
sw x3, 0(x2) # store 0xf5359fe1b9cc2321 in memory
flh f8, 0(x2) # load 0xf5359fe1b9cc2321 from memory into f8
fnmadd.h f23, f5, f18, f8, dyn # perform operation
fnmadd.h f23, f5, f18, f8, rdn # perform operation
fnmadd.h f23, f5, f18, f8, rmm # perform operation
fnmadd.h f23, f5, f18, f8, rne # perform operation
fnmadd.h f23, f5, f18, f8, rtz # perform operation
fnmadd.h f23, f5, f18, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f23, f5, f18, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f23, f5, f18, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f23, f5, f18, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f23, f5, f18, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f23, f5, f18, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400 fs2 = 0x83ff)
li x9, 0x95151015058f212d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f22, 0(x2) # load 0x00000400 from memory into f22
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f25, 0(x2) # load 0x000083ff from memory into f25
li x3, 0x66ecd580d7546f85 # load x3 with value 0x66ecd580d7546f85
sw x3, 0(x2) # store 0x66ecd580d7546f85 in memory
flh f30, 0(x2) # load 0x66ecd580d7546f85 from memory into f30
fnmadd.h f9, f22, f25, f30, dyn # perform operation
fnmadd.h f9, f22, f25, f30, rdn # perform operation
fnmadd.h f9, f22, f25, f30, rmm # perform operation
fnmadd.h f9, f22, f25, f30, rne # perform operation
fnmadd.h f9, f22, f25, f30, rtz # perform operation
fnmadd.h f9, f22, f25, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f9, f22, f25, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f9, f22, f25, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f9, f22, f25, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f9, f22, f25, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f9, f22, f25, f30 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400 fs2 = 0x200)
li x2, 0x93e23d49ef6bec29 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f7, 0(x2) # load 0x00000400 from memory into f7
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f16, 0(x2) # load 0x00000200 from memory into f16
li x3, 0xb960444ce0d39fcd # load x3 with value 0xb960444ce0d39fcd
sw x3, 0(x2) # store 0xb960444ce0d39fcd in memory
flh f6, 0(x2) # load 0xb960444ce0d39fcd from memory into f6
fnmadd.h f2, f7, f16, f6, dyn # perform operation
fnmadd.h f2, f7, f16, f6, rdn # perform operation
fnmadd.h f2, f7, f16, f6, rmm # perform operation
fnmadd.h f2, f7, f16, f6, rne # perform operation
fnmadd.h f2, f7, f16, f6, rtz # perform operation
fnmadd.h f2, f7, f16, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f2, f7, f16, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f2, f7, f16, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f2, f7, f16, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f2, f7, f16, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f2, f7, f16, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400 fs2 = 0x8200)
li x25, 0x92449cc8862fcce9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f2, 0(x2) # load 0x00000400 from memory into f2
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f22, 0(x2) # load 0x00008200 from memory into f22
li x3, 0xa91cb9e05dd3231d # load x3 with value 0xa91cb9e05dd3231d
sw x3, 0(x2) # store 0xa91cb9e05dd3231d in memory
flh f6, 0(x2) # load 0xa91cb9e05dd3231d from memory into f6
fnmadd.h f25, f2, f22, f6, dyn # perform operation
fnmadd.h f25, f2, f22, f6, rdn # perform operation
fnmadd.h f25, f2, f22, f6, rmm # perform operation
fnmadd.h f25, f2, f22, f6, rne # perform operation
fnmadd.h f25, f2, f22, f6, rtz # perform operation
fnmadd.h f25, f2, f22, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f25, f2, f22, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f25, f2, f22, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f25, f2, f22, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f25, f2, f22, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f25, f2, f22, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400 fs2 = 0x1)
li x3, 0x92591381701a58d6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f28, 0(x2) # load 0x00000400 from memory into f28
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f14, 0(x2) # load 0x00000001 from memory into f14
li x3, 0x82a695ce9bc98a82 # load x3 with value 0x82a695ce9bc98a82
sw x3, 0(x2) # store 0x82a695ce9bc98a82 in memory
flh f27, 0(x2) # load 0x82a695ce9bc98a82 from memory into f27
fnmadd.h f3, f28, f14, f27, dyn # perform operation
fnmadd.h f3, f28, f14, f27, rdn # perform operation
fnmadd.h f3, f28, f14, f27, rmm # perform operation
fnmadd.h f3, f28, f14, f27, rne # perform operation
fnmadd.h f3, f28, f14, f27, rtz # perform operation
fnmadd.h f3, f28, f14, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f3, f28, f14, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f3, f28, f14, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f3, f28, f14, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f3, f28, f14, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f3, f28, f14, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400 fs2 = 0x8001)
li x24, 0xc415f31e0f72ae88 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f8, 0(x2) # load 0x00000400 from memory into f8
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f19, 0(x2) # load 0x00008001 from memory into f19
li x3, 0xe81988f2addad221 # load x3 with value 0xe81988f2addad221
sw x3, 0(x2) # store 0xe81988f2addad221 in memory
flh f26, 0(x2) # load 0xe81988f2addad221 from memory into f26
fnmadd.h f24, f8, f19, f26, dyn # perform operation
fnmadd.h f24, f8, f19, f26, rdn # perform operation
fnmadd.h f24, f8, f19, f26, rmm # perform operation
fnmadd.h f24, f8, f19, f26, rne # perform operation
fnmadd.h f24, f8, f19, f26, rtz # perform operation
fnmadd.h f24, f8, f19, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f24, f8, f19, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f24, f8, f19, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f24, f8, f19, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f24, f8, f19, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f24, f8, f19, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400 fs2 = 0x7c00)
li x4, 0x11da97bcfee8c303 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f27, 0(x2) # load 0x00000400 from memory into f27
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f8, 0(x2) # load 0x00007c00 from memory into f8
li x3, 0x844c47deb78233c1 # load x3 with value 0x844c47deb78233c1
sw x3, 0(x2) # store 0x844c47deb78233c1 in memory
flh f14, 0(x2) # load 0x844c47deb78233c1 from memory into f14
fnmadd.h f4, f27, f8, f14, dyn # perform operation
fnmadd.h f4, f27, f8, f14, rdn # perform operation
fnmadd.h f4, f27, f8, f14, rmm # perform operation
fnmadd.h f4, f27, f8, f14, rne # perform operation
fnmadd.h f4, f27, f8, f14, rtz # perform operation
fnmadd.h f4, f27, f8, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f4, f27, f8, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f4, f27, f8, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f4, f27, f8, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f4, f27, f8, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f4, f27, f8, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400 fs2 = 0xfc00)
li x19, 0x7f5bcd048971049c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f25, 0(x2) # load 0x00000400 from memory into f25
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f13, 0(x2) # load 0x0000fc00 from memory into f13
li x3, 0xd011a0fe07529f56 # load x3 with value 0xd011a0fe07529f56
sw x3, 0(x2) # store 0xd011a0fe07529f56 in memory
flh f10, 0(x2) # load 0xd011a0fe07529f56 from memory into f10
fnmadd.h f19, f25, f13, f10, dyn # perform operation
fnmadd.h f19, f25, f13, f10, rdn # perform operation
fnmadd.h f19, f25, f13, f10, rmm # perform operation
fnmadd.h f19, f25, f13, f10, rne # perform operation
fnmadd.h f19, f25, f13, f10, rtz # perform operation
fnmadd.h f19, f25, f13, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f19, f25, f13, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f19, f25, f13, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f19, f25, f13, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f19, f25, f13, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f19, f25, f13, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400 fs2 = 0x7e00)
li x18, 0x5f45b0f911475446 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f5, 0(x2) # load 0x00000400 from memory into f5
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f9, 0(x2) # load 0x00007e00 from memory into f9
li x3, 0x3d181c3302f5c13a # load x3 with value 0x3d181c3302f5c13a
sw x3, 0(x2) # store 0x3d181c3302f5c13a in memory
flh f3, 0(x2) # load 0x3d181c3302f5c13a from memory into f3
fnmadd.h f18, f5, f9, f3, dyn # perform operation
fnmadd.h f18, f5, f9, f3, rdn # perform operation
fnmadd.h f18, f5, f9, f3, rmm # perform operation
fnmadd.h f18, f5, f9, f3, rne # perform operation
fnmadd.h f18, f5, f9, f3, rtz # perform operation
fnmadd.h f18, f5, f9, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f18, f5, f9, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f18, f5, f9, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f18, f5, f9, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f18, f5, f9, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f18, f5, f9, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400 fs2 = 0x7fff)
li x26, 0x3b58d1382a9bd05a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f10, 0(x2) # load 0x00000400 from memory into f10
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f13, 0(x2) # load 0x00007fff from memory into f13
li x3, 0x7cabb0ace19fb73c # load x3 with value 0x7cabb0ace19fb73c
sw x3, 0(x2) # store 0x7cabb0ace19fb73c in memory
flh f21, 0(x2) # load 0x7cabb0ace19fb73c from memory into f21
fnmadd.h f26, f10, f13, f21, dyn # perform operation
fnmadd.h f26, f10, f13, f21, rdn # perform operation
fnmadd.h f26, f10, f13, f21, rmm # perform operation
fnmadd.h f26, f10, f13, f21, rne # perform operation
fnmadd.h f26, f10, f13, f21, rtz # perform operation
fnmadd.h f26, f10, f13, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f26, f10, f13, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f26, f10, f13, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f26, f10, f13, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f26, f10, f13, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f26, f10, f13, f21 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400 fs2 = 0x7c01)
li x3, 0x425c24262bee2450 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f28, 0(x2) # load 0x00000400 from memory into f28
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f1, 0(x2) # load 0x00007c01 from memory into f1
li x3, 0xbcd4c982e6da0068 # load x3 with value 0xbcd4c982e6da0068
sw x3, 0(x2) # store 0xbcd4c982e6da0068 in memory
flh f16, 0(x2) # load 0xbcd4c982e6da0068 from memory into f16
fnmadd.h f3, f28, f1, f16, dyn # perform operation
fnmadd.h f3, f28, f1, f16, rdn # perform operation
fnmadd.h f3, f28, f1, f16, rmm # perform operation
fnmadd.h f3, f28, f1, f16, rne # perform operation
fnmadd.h f3, f28, f1, f16, rtz # perform operation
fnmadd.h f3, f28, f1, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f3, f28, f1, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f3, f28, f1, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f3, f28, f1, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f3, f28, f1, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f3, f28, f1, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400 fs2 = 0x7dff)
li x14, 0xe71a32f82b80159c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f22, 0(x2) # load 0x00000400 from memory into f22
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f20, 0(x2) # load 0x00007dff from memory into f20
li x3, 0xefc665aa86cca181 # load x3 with value 0xefc665aa86cca181
sw x3, 0(x2) # store 0xefc665aa86cca181 in memory
flh f27, 0(x2) # load 0xefc665aa86cca181 from memory into f27
fnmadd.h f14, f22, f20, f27, dyn # perform operation
fnmadd.h f14, f22, f20, f27, rdn # perform operation
fnmadd.h f14, f22, f20, f27, rmm # perform operation
fnmadd.h f14, f22, f20, f27, rne # perform operation
fnmadd.h f14, f22, f20, f27, rtz # perform operation
fnmadd.h f14, f22, f20, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f14, f22, f20, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f14, f22, f20, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f14, f22, f20, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f14, f22, f20, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f14, f22, f20, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400 fs2 = 0x58b4)
li x31, 0xf74526d22a8793d3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f21, 0(x2) # load 0x00000400 from memory into f21
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f2, 0(x2) # load 0x000058b4 from memory into f2
li x3, 0x2b32d2ec5db29bb9 # load x3 with value 0x2b32d2ec5db29bb9
sw x3, 0(x2) # store 0x2b32d2ec5db29bb9 in memory
flh f28, 0(x2) # load 0x2b32d2ec5db29bb9 from memory into f28
fnmadd.h f31, f21, f2, f28, dyn # perform operation
fnmadd.h f31, f21, f2, f28, rdn # perform operation
fnmadd.h f31, f21, f2, f28, rmm # perform operation
fnmadd.h f31, f21, f2, f28, rne # perform operation
fnmadd.h f31, f21, f2, f28, rtz # perform operation
fnmadd.h f31, f21, f2, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f31, f21, f2, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f31, f21, f2, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f31, f21, f2, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f31, f21, f2, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f31, f21, f2, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400 fs2 = 0xc93a)
li x28, 0x6cfd4190caf8c1ad # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f19, 0(x2) # load 0x00000400 from memory into f19
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f23, 0(x2) # load 0x0000c93a from memory into f23
li x3, 0x21e578f0bfcd1d1e # load x3 with value 0x21e578f0bfcd1d1e
sw x3, 0(x2) # store 0x21e578f0bfcd1d1e in memory
flh f12, 0(x2) # load 0x21e578f0bfcd1d1e from memory into f12
fnmadd.h f28, f19, f23, f12, dyn # perform operation
fnmadd.h f28, f19, f23, f12, rdn # perform operation
fnmadd.h f28, f19, f23, f12, rmm # perform operation
fnmadd.h f28, f19, f23, f12, rne # perform operation
fnmadd.h f28, f19, f23, f12, rtz # perform operation
fnmadd.h f28, f19, f23, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f28, f19, f23, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f28, f19, f23, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f28, f19, f23, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f28, f19, f23, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f28, f19, f23, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8400 fs2 = 0x0)
li x13, 0xb00a64b1e77fc013 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f26, 0(x2) # load 0x00008400 from memory into f26
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f23, 0(x2) # load 0x00000000 from memory into f23
li x3, 0xe4371632220ccf3 # load x3 with value 0xe4371632220ccf3
sw x3, 0(x2) # store 0xe4371632220ccf3 in memory
flh f5, 0(x2) # load 0xe4371632220ccf3 from memory into f5
fnmadd.h f13, f26, f23, f5, dyn # perform operation
fnmadd.h f13, f26, f23, f5, rdn # perform operation
fnmadd.h f13, f26, f23, f5, rmm # perform operation
fnmadd.h f13, f26, f23, f5, rne # perform operation
fnmadd.h f13, f26, f23, f5, rtz # perform operation
fnmadd.h f13, f26, f23, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f13, f26, f23, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f13, f26, f23, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f13, f26, f23, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f13, f26, f23, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f13, f26, f23, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8400 fs2 = 0x8000)
li x3, 0xfa7ab5fa714f8cfb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f16, 0(x2) # load 0x00008400 from memory into f16
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f5, 0(x2) # load 0x00008000 from memory into f5
li x3, 0x9f1970dbd652ba9c # load x3 with value 0x9f1970dbd652ba9c
sw x3, 0(x2) # store 0x9f1970dbd652ba9c in memory
flh f29, 0(x2) # load 0x9f1970dbd652ba9c from memory into f29
fnmadd.h f3, f16, f5, f29, dyn # perform operation
fnmadd.h f3, f16, f5, f29, rdn # perform operation
fnmadd.h f3, f16, f5, f29, rmm # perform operation
fnmadd.h f3, f16, f5, f29, rne # perform operation
fnmadd.h f3, f16, f5, f29, rtz # perform operation
fnmadd.h f3, f16, f5, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f3, f16, f5, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f3, f16, f5, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f3, f16, f5, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f3, f16, f5, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f3, f16, f5, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8400 fs2 = 0x3c00)
li x21, 0xbcb71cfa66cd2d94 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f30, 0(x2) # load 0x00008400 from memory into f30
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f6, 0(x2) # load 0x00003c00 from memory into f6
li x3, 0xa8b002a15dbdbd7c # load x3 with value 0xa8b002a15dbdbd7c
sw x3, 0(x2) # store 0xa8b002a15dbdbd7c in memory
flh f2, 0(x2) # load 0xa8b002a15dbdbd7c from memory into f2
fnmadd.h f21, f30, f6, f2, dyn # perform operation
fnmadd.h f21, f30, f6, f2, rdn # perform operation
fnmadd.h f21, f30, f6, f2, rmm # perform operation
fnmadd.h f21, f30, f6, f2, rne # perform operation
fnmadd.h f21, f30, f6, f2, rtz # perform operation
fnmadd.h f21, f30, f6, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f21, f30, f6, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f21, f30, f6, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f21, f30, f6, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f21, f30, f6, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f21, f30, f6, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8400 fs2 = 0xbc00)
li x16, 0x9bb5edadb9103471 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f28, 0(x2) # load 0x00008400 from memory into f28
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f14, 0(x2) # load 0x0000bc00 from memory into f14
li x3, 0x8fd8ef381b78e5d5 # load x3 with value 0x8fd8ef381b78e5d5
sw x3, 0(x2) # store 0x8fd8ef381b78e5d5 in memory
flh f6, 0(x2) # load 0x8fd8ef381b78e5d5 from memory into f6
fnmadd.h f16, f28, f14, f6, dyn # perform operation
fnmadd.h f16, f28, f14, f6, rdn # perform operation
fnmadd.h f16, f28, f14, f6, rmm # perform operation
fnmadd.h f16, f28, f14, f6, rne # perform operation
fnmadd.h f16, f28, f14, f6, rtz # perform operation
fnmadd.h f16, f28, f14, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f16, f28, f14, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f16, f28, f14, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f16, f28, f14, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f16, f28, f14, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f16, f28, f14, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8400 fs2 = 0x3e00)
li x10, 0x9ea99d8721e7f5c9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f19, 0(x2) # load 0x00008400 from memory into f19
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f26, 0(x2) # load 0x00003e00 from memory into f26
li x3, 0x4c2486b60255342c # load x3 with value 0x4c2486b60255342c
sw x3, 0(x2) # store 0x4c2486b60255342c in memory
flh f25, 0(x2) # load 0x4c2486b60255342c from memory into f25
fnmadd.h f10, f19, f26, f25, dyn # perform operation
fnmadd.h f10, f19, f26, f25, rdn # perform operation
fnmadd.h f10, f19, f26, f25, rmm # perform operation
fnmadd.h f10, f19, f26, f25, rne # perform operation
fnmadd.h f10, f19, f26, f25, rtz # perform operation
fnmadd.h f10, f19, f26, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f10, f19, f26, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f10, f19, f26, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f10, f19, f26, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f10, f19, f26, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f10, f19, f26, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8400 fs2 = 0xbe00)
li x26, 0xb628cf8680c3b52d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f27, 0(x2) # load 0x00008400 from memory into f27
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f15, 0(x2) # load 0x0000be00 from memory into f15
li x3, 0x72860bcb09d92379 # load x3 with value 0x72860bcb09d92379
sw x3, 0(x2) # store 0x72860bcb09d92379 in memory
flh f5, 0(x2) # load 0x72860bcb09d92379 from memory into f5
fnmadd.h f26, f27, f15, f5, dyn # perform operation
fnmadd.h f26, f27, f15, f5, rdn # perform operation
fnmadd.h f26, f27, f15, f5, rmm # perform operation
fnmadd.h f26, f27, f15, f5, rne # perform operation
fnmadd.h f26, f27, f15, f5, rtz # perform operation
fnmadd.h f26, f27, f15, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f26, f27, f15, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f26, f27, f15, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f26, f27, f15, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f26, f27, f15, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f26, f27, f15, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8400 fs2 = 0x4000)
li x20, 0x25a977de8d56884f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f14, 0(x2) # load 0x00008400 from memory into f14
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f21, 0(x2) # load 0x00004000 from memory into f21
li x3, 0xce32ed50bf4e1d1a # load x3 with value 0xce32ed50bf4e1d1a
sw x3, 0(x2) # store 0xce32ed50bf4e1d1a in memory
flh f15, 0(x2) # load 0xce32ed50bf4e1d1a from memory into f15
fnmadd.h f20, f14, f21, f15, dyn # perform operation
fnmadd.h f20, f14, f21, f15, rdn # perform operation
fnmadd.h f20, f14, f21, f15, rmm # perform operation
fnmadd.h f20, f14, f21, f15, rne # perform operation
fnmadd.h f20, f14, f21, f15, rtz # perform operation
fnmadd.h f20, f14, f21, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f20, f14, f21, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f20, f14, f21, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f20, f14, f21, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f20, f14, f21, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f20, f14, f21, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8400 fs2 = 0xc000)
li x21, 0x6c893c93c1ab8284 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f3, 0(x2) # load 0x00008400 from memory into f3
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f20, 0(x2) # load 0x0000c000 from memory into f20
li x3, 0x840a10c4a6275000 # load x3 with value 0x840a10c4a6275000
sw x3, 0(x2) # store 0x840a10c4a6275000 in memory
flh f11, 0(x2) # load 0x840a10c4a6275000 from memory into f11
fnmadd.h f21, f3, f20, f11, dyn # perform operation
fnmadd.h f21, f3, f20, f11, rdn # perform operation
fnmadd.h f21, f3, f20, f11, rmm # perform operation
fnmadd.h f21, f3, f20, f11, rne # perform operation
fnmadd.h f21, f3, f20, f11, rtz # perform operation
fnmadd.h f21, f3, f20, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f21, f3, f20, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f21, f3, f20, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f21, f3, f20, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f21, f3, f20, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f21, f3, f20, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8400 fs2 = 0x400)
li x24, 0xe5cf5e1e11802b94 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f5, 0(x2) # load 0x00008400 from memory into f5
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f16, 0(x2) # load 0x00000400 from memory into f16
li x3, 0x91377061eac46ee9 # load x3 with value 0x91377061eac46ee9
sw x3, 0(x2) # store 0x91377061eac46ee9 in memory
flh f4, 0(x2) # load 0x91377061eac46ee9 from memory into f4
fnmadd.h f24, f5, f16, f4, dyn # perform operation
fnmadd.h f24, f5, f16, f4, rdn # perform operation
fnmadd.h f24, f5, f16, f4, rmm # perform operation
fnmadd.h f24, f5, f16, f4, rne # perform operation
fnmadd.h f24, f5, f16, f4, rtz # perform operation
fnmadd.h f24, f5, f16, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f24, f5, f16, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f24, f5, f16, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f24, f5, f16, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f24, f5, f16, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f24, f5, f16, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8400 fs2 = 0x8400)
li x25, 0x4cddb5bffd6b532f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f11, 0(x2) # load 0x00008400 from memory into f11
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f5, 0(x2) # load 0x00008400 from memory into f5
li x3, 0x234f7be2e170cbee # load x3 with value 0x234f7be2e170cbee
sw x3, 0(x2) # store 0x234f7be2e170cbee in memory
flh f29, 0(x2) # load 0x234f7be2e170cbee from memory into f29
fnmadd.h f25, f11, f5, f29, dyn # perform operation
fnmadd.h f25, f11, f5, f29, rdn # perform operation
fnmadd.h f25, f11, f5, f29, rmm # perform operation
fnmadd.h f25, f11, f5, f29, rne # perform operation
fnmadd.h f25, f11, f5, f29, rtz # perform operation
fnmadd.h f25, f11, f5, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f25, f11, f5, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f25, f11, f5, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f25, f11, f5, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f25, f11, f5, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f25, f11, f5, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8400 fs2 = 0x7bff)
li x14, 0xdeb3d5df3c89dd85 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f13, 0(x2) # load 0x00008400 from memory into f13
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f16, 0(x2) # load 0x00007bff from memory into f16
li x3, 0x67e8bfe864d50969 # load x3 with value 0x67e8bfe864d50969
sw x3, 0(x2) # store 0x67e8bfe864d50969 in memory
flh f2, 0(x2) # load 0x67e8bfe864d50969 from memory into f2
fnmadd.h f14, f13, f16, f2, dyn # perform operation
fnmadd.h f14, f13, f16, f2, rdn # perform operation
fnmadd.h f14, f13, f16, f2, rmm # perform operation
fnmadd.h f14, f13, f16, f2, rne # perform operation
fnmadd.h f14, f13, f16, f2, rtz # perform operation
fnmadd.h f14, f13, f16, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f14, f13, f16, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f14, f13, f16, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f14, f13, f16, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f14, f13, f16, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f14, f13, f16, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8400 fs2 = 0xfbff)
li x2, 0xd1e2cfd2e2ebdb97 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f17, 0(x2) # load 0x00008400 from memory into f17
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f13, 0(x2) # load 0x0000fbff from memory into f13
li x3, 0xc2f2e43eb93411ab # load x3 with value 0xc2f2e43eb93411ab
sw x3, 0(x2) # store 0xc2f2e43eb93411ab in memory
flh f1, 0(x2) # load 0xc2f2e43eb93411ab from memory into f1
fnmadd.h f2, f17, f13, f1, dyn # perform operation
fnmadd.h f2, f17, f13, f1, rdn # perform operation
fnmadd.h f2, f17, f13, f1, rmm # perform operation
fnmadd.h f2, f17, f13, f1, rne # perform operation
fnmadd.h f2, f17, f13, f1, rtz # perform operation
fnmadd.h f2, f17, f13, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f2, f17, f13, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f2, f17, f13, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f2, f17, f13, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f2, f17, f13, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f2, f17, f13, f1 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8400 fs2 = 0x3ff)
li x28, 0xbbf7445387343e99 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f12, 0(x2) # load 0x00008400 from memory into f12
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f13, 0(x2) # load 0x000003ff from memory into f13
li x3, 0xdafc89f8d017ff71 # load x3 with value 0xdafc89f8d017ff71
sw x3, 0(x2) # store 0xdafc89f8d017ff71 in memory
flh f6, 0(x2) # load 0xdafc89f8d017ff71 from memory into f6
fnmadd.h f28, f12, f13, f6, dyn # perform operation
fnmadd.h f28, f12, f13, f6, rdn # perform operation
fnmadd.h f28, f12, f13, f6, rmm # perform operation
fnmadd.h f28, f12, f13, f6, rne # perform operation
fnmadd.h f28, f12, f13, f6, rtz # perform operation
fnmadd.h f28, f12, f13, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f28, f12, f13, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f28, f12, f13, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f28, f12, f13, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f28, f12, f13, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f28, f12, f13, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8400 fs2 = 0x83ff)
li x2, 0xad6a2ec2b5f4959f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f8, 0(x2) # load 0x00008400 from memory into f8
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f1, 0(x2) # load 0x000083ff from memory into f1
li x3, 0x223a02bd54301bfb # load x3 with value 0x223a02bd54301bfb
sw x3, 0(x2) # store 0x223a02bd54301bfb in memory
flh f4, 0(x2) # load 0x223a02bd54301bfb from memory into f4
fnmadd.h f2, f8, f1, f4, dyn # perform operation
fnmadd.h f2, f8, f1, f4, rdn # perform operation
fnmadd.h f2, f8, f1, f4, rmm # perform operation
fnmadd.h f2, f8, f1, f4, rne # perform operation
fnmadd.h f2, f8, f1, f4, rtz # perform operation
fnmadd.h f2, f8, f1, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f2, f8, f1, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f2, f8, f1, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f2, f8, f1, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f2, f8, f1, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f2, f8, f1, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8400 fs2 = 0x200)
li x31, 0x5aadc56920056b76 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f3, 0(x2) # load 0x00008400 from memory into f3
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f15, 0(x2) # load 0x00000200 from memory into f15
li x3, 0x5c66395ca6bc6b7d # load x3 with value 0x5c66395ca6bc6b7d
sw x3, 0(x2) # store 0x5c66395ca6bc6b7d in memory
flh f9, 0(x2) # load 0x5c66395ca6bc6b7d from memory into f9
fnmadd.h f31, f3, f15, f9, dyn # perform operation
fnmadd.h f31, f3, f15, f9, rdn # perform operation
fnmadd.h f31, f3, f15, f9, rmm # perform operation
fnmadd.h f31, f3, f15, f9, rne # perform operation
fnmadd.h f31, f3, f15, f9, rtz # perform operation
fnmadd.h f31, f3, f15, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f31, f3, f15, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f31, f3, f15, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f31, f3, f15, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f31, f3, f15, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f31, f3, f15, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8400 fs2 = 0x8200)
li x25, 0x050ebcf3f2fe61b8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f5, 0(x2) # load 0x00008400 from memory into f5
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f15, 0(x2) # load 0x00008200 from memory into f15
li x3, 0x3868388400ebabd6 # load x3 with value 0x3868388400ebabd6
sw x3, 0(x2) # store 0x3868388400ebabd6 in memory
flh f21, 0(x2) # load 0x3868388400ebabd6 from memory into f21
fnmadd.h f25, f5, f15, f21, dyn # perform operation
fnmadd.h f25, f5, f15, f21, rdn # perform operation
fnmadd.h f25, f5, f15, f21, rmm # perform operation
fnmadd.h f25, f5, f15, f21, rne # perform operation
fnmadd.h f25, f5, f15, f21, rtz # perform operation
fnmadd.h f25, f5, f15, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f25, f5, f15, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f25, f5, f15, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f25, f5, f15, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f25, f5, f15, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f25, f5, f15, f21 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8400 fs2 = 0x1)
li x24, 0x728431a6323cebb4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f8, 0(x2) # load 0x00008400 from memory into f8
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f29, 0(x2) # load 0x00000001 from memory into f29
li x3, 0x493fb67a1024574b # load x3 with value 0x493fb67a1024574b
sw x3, 0(x2) # store 0x493fb67a1024574b in memory
flh f31, 0(x2) # load 0x493fb67a1024574b from memory into f31
fnmadd.h f24, f8, f29, f31, dyn # perform operation
fnmadd.h f24, f8, f29, f31, rdn # perform operation
fnmadd.h f24, f8, f29, f31, rmm # perform operation
fnmadd.h f24, f8, f29, f31, rne # perform operation
fnmadd.h f24, f8, f29, f31, rtz # perform operation
fnmadd.h f24, f8, f29, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f24, f8, f29, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f24, f8, f29, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f24, f8, f29, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f24, f8, f29, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f24, f8, f29, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8400 fs2 = 0x8001)
li x9, 0xc1ad24d24d99ef56 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f24, 0(x2) # load 0x00008400 from memory into f24
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f22, 0(x2) # load 0x00008001 from memory into f22
li x3, 0x6da81e2a2bbbfeb2 # load x3 with value 0x6da81e2a2bbbfeb2
sw x3, 0(x2) # store 0x6da81e2a2bbbfeb2 in memory
flh f4, 0(x2) # load 0x6da81e2a2bbbfeb2 from memory into f4
fnmadd.h f9, f24, f22, f4, dyn # perform operation
fnmadd.h f9, f24, f22, f4, rdn # perform operation
fnmadd.h f9, f24, f22, f4, rmm # perform operation
fnmadd.h f9, f24, f22, f4, rne # perform operation
fnmadd.h f9, f24, f22, f4, rtz # perform operation
fnmadd.h f9, f24, f22, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f9, f24, f22, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f9, f24, f22, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f9, f24, f22, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f9, f24, f22, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f9, f24, f22, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8400 fs2 = 0x7c00)
li x10, 0xb50f020474194230 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f12, 0(x2) # load 0x00008400 from memory into f12
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f25, 0(x2) # load 0x00007c00 from memory into f25
li x3, 0xfb505d6d66731b9d # load x3 with value 0xfb505d6d66731b9d
sw x3, 0(x2) # store 0xfb505d6d66731b9d in memory
flh f30, 0(x2) # load 0xfb505d6d66731b9d from memory into f30
fnmadd.h f10, f12, f25, f30, dyn # perform operation
fnmadd.h f10, f12, f25, f30, rdn # perform operation
fnmadd.h f10, f12, f25, f30, rmm # perform operation
fnmadd.h f10, f12, f25, f30, rne # perform operation
fnmadd.h f10, f12, f25, f30, rtz # perform operation
fnmadd.h f10, f12, f25, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f10, f12, f25, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f10, f12, f25, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f10, f12, f25, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f10, f12, f25, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f10, f12, f25, f30 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8400 fs2 = 0xfc00)
li x14, 0xcaa6e62c27f7ebef # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f1, 0(x2) # load 0x00008400 from memory into f1
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f4, 0(x2) # load 0x0000fc00 from memory into f4
li x3, 0x271d48b045a8823f # load x3 with value 0x271d48b045a8823f
sw x3, 0(x2) # store 0x271d48b045a8823f in memory
flh f6, 0(x2) # load 0x271d48b045a8823f from memory into f6
fnmadd.h f14, f1, f4, f6, dyn # perform operation
fnmadd.h f14, f1, f4, f6, rdn # perform operation
fnmadd.h f14, f1, f4, f6, rmm # perform operation
fnmadd.h f14, f1, f4, f6, rne # perform operation
fnmadd.h f14, f1, f4, f6, rtz # perform operation
fnmadd.h f14, f1, f4, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f14, f1, f4, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f14, f1, f4, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f14, f1, f4, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f14, f1, f4, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f14, f1, f4, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8400 fs2 = 0x7e00)
li x24, 0x95e443e308cbc36f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f20, 0(x2) # load 0x00008400 from memory into f20
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f25, 0(x2) # load 0x00007e00 from memory into f25
li x3, 0x7d7fbe7cd3a266b9 # load x3 with value 0x7d7fbe7cd3a266b9
sw x3, 0(x2) # store 0x7d7fbe7cd3a266b9 in memory
flh f4, 0(x2) # load 0x7d7fbe7cd3a266b9 from memory into f4
fnmadd.h f24, f20, f25, f4, dyn # perform operation
fnmadd.h f24, f20, f25, f4, rdn # perform operation
fnmadd.h f24, f20, f25, f4, rmm # perform operation
fnmadd.h f24, f20, f25, f4, rne # perform operation
fnmadd.h f24, f20, f25, f4, rtz # perform operation
fnmadd.h f24, f20, f25, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f24, f20, f25, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f24, f20, f25, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f24, f20, f25, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f24, f20, f25, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f24, f20, f25, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8400 fs2 = 0x7fff)
li x26, 0xf91f80513283b404 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f20, 0(x2) # load 0x00008400 from memory into f20
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f9, 0(x2) # load 0x00007fff from memory into f9
li x3, 0xc5de83574efb1352 # load x3 with value 0xc5de83574efb1352
sw x3, 0(x2) # store 0xc5de83574efb1352 in memory
flh f13, 0(x2) # load 0xc5de83574efb1352 from memory into f13
fnmadd.h f26, f20, f9, f13, dyn # perform operation
fnmadd.h f26, f20, f9, f13, rdn # perform operation
fnmadd.h f26, f20, f9, f13, rmm # perform operation
fnmadd.h f26, f20, f9, f13, rne # perform operation
fnmadd.h f26, f20, f9, f13, rtz # perform operation
fnmadd.h f26, f20, f9, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f26, f20, f9, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f26, f20, f9, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f26, f20, f9, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f26, f20, f9, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f26, f20, f9, f13 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8400 fs2 = 0x7c01)
li x20, 0xb89c96c56650f6a8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f25, 0(x2) # load 0x00008400 from memory into f25
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f26, 0(x2) # load 0x00007c01 from memory into f26
li x3, 0xe96ff4aa2b440d49 # load x3 with value 0xe96ff4aa2b440d49
sw x3, 0(x2) # store 0xe96ff4aa2b440d49 in memory
flh f6, 0(x2) # load 0xe96ff4aa2b440d49 from memory into f6
fnmadd.h f20, f25, f26, f6, dyn # perform operation
fnmadd.h f20, f25, f26, f6, rdn # perform operation
fnmadd.h f20, f25, f26, f6, rmm # perform operation
fnmadd.h f20, f25, f26, f6, rne # perform operation
fnmadd.h f20, f25, f26, f6, rtz # perform operation
fnmadd.h f20, f25, f26, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f20, f25, f26, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f20, f25, f26, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f20, f25, f26, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f20, f25, f26, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f20, f25, f26, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8400 fs2 = 0x7dff)
li x24, 0x849802a7bd2d9aba # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f6, 0(x2) # load 0x00008400 from memory into f6
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f16, 0(x2) # load 0x00007dff from memory into f16
li x3, 0x529e37f698f2e770 # load x3 with value 0x529e37f698f2e770
sw x3, 0(x2) # store 0x529e37f698f2e770 in memory
flh f3, 0(x2) # load 0x529e37f698f2e770 from memory into f3
fnmadd.h f24, f6, f16, f3, dyn # perform operation
fnmadd.h f24, f6, f16, f3, rdn # perform operation
fnmadd.h f24, f6, f16, f3, rmm # perform operation
fnmadd.h f24, f6, f16, f3, rne # perform operation
fnmadd.h f24, f6, f16, f3, rtz # perform operation
fnmadd.h f24, f6, f16, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f24, f6, f16, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f24, f6, f16, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f24, f6, f16, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f24, f6, f16, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f24, f6, f16, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8400 fs2 = 0x58b4)
li x27, 0xf9dd99f26257b932 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f14, 0(x2) # load 0x00008400 from memory into f14
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f8, 0(x2) # load 0x000058b4 from memory into f8
li x3, 0x4aa399e8d4fd751d # load x3 with value 0x4aa399e8d4fd751d
sw x3, 0(x2) # store 0x4aa399e8d4fd751d in memory
flh f24, 0(x2) # load 0x4aa399e8d4fd751d from memory into f24
fnmadd.h f27, f14, f8, f24, dyn # perform operation
fnmadd.h f27, f14, f8, f24, rdn # perform operation
fnmadd.h f27, f14, f8, f24, rmm # perform operation
fnmadd.h f27, f14, f8, f24, rne # perform operation
fnmadd.h f27, f14, f8, f24, rtz # perform operation
fnmadd.h f27, f14, f8, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f27, f14, f8, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f27, f14, f8, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f27, f14, f8, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f27, f14, f8, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f27, f14, f8, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8400 fs2 = 0xc93a)
li x30, 0x0e1f4759f31b9fb7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f10, 0(x2) # load 0x00008400 from memory into f10
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f13, 0(x2) # load 0x0000c93a from memory into f13
li x3, 0xde1844547246cdf5 # load x3 with value 0xde1844547246cdf5
sw x3, 0(x2) # store 0xde1844547246cdf5 in memory
flh f31, 0(x2) # load 0xde1844547246cdf5 from memory into f31
fnmadd.h f30, f10, f13, f31, dyn # perform operation
fnmadd.h f30, f10, f13, f31, rdn # perform operation
fnmadd.h f30, f10, f13, f31, rmm # perform operation
fnmadd.h f30, f10, f13, f31, rne # perform operation
fnmadd.h f30, f10, f13, f31, rtz # perform operation
fnmadd.h f30, f10, f13, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f30, f10, f13, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f30, f10, f13, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f30, f10, f13, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f30, f10, f13, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f30, f10, f13, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7bff fs2 = 0x0)
li x23, 0x8121eec77fd9debd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f5, 0(x2) # load 0x00007bff from memory into f5
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f18, 0(x2) # load 0x00000000 from memory into f18
li x3, 0xc88d8e49aa22a8d4 # load x3 with value 0xc88d8e49aa22a8d4
sw x3, 0(x2) # store 0xc88d8e49aa22a8d4 in memory
flh f20, 0(x2) # load 0xc88d8e49aa22a8d4 from memory into f20
fnmadd.h f23, f5, f18, f20, dyn # perform operation
fnmadd.h f23, f5, f18, f20, rdn # perform operation
fnmadd.h f23, f5, f18, f20, rmm # perform operation
fnmadd.h f23, f5, f18, f20, rne # perform operation
fnmadd.h f23, f5, f18, f20, rtz # perform operation
fnmadd.h f23, f5, f18, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f23, f5, f18, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f23, f5, f18, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f23, f5, f18, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f23, f5, f18, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f23, f5, f18, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7bff fs2 = 0x8000)
li x7, 0x29bdc56d9a346e4b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f22, 0(x2) # load 0x00007bff from memory into f22
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f9, 0(x2) # load 0x00008000 from memory into f9
li x3, 0x1f4683ed58a72259 # load x3 with value 0x1f4683ed58a72259
sw x3, 0(x2) # store 0x1f4683ed58a72259 in memory
flh f15, 0(x2) # load 0x1f4683ed58a72259 from memory into f15
fnmadd.h f7, f22, f9, f15, dyn # perform operation
fnmadd.h f7, f22, f9, f15, rdn # perform operation
fnmadd.h f7, f22, f9, f15, rmm # perform operation
fnmadd.h f7, f22, f9, f15, rne # perform operation
fnmadd.h f7, f22, f9, f15, rtz # perform operation
fnmadd.h f7, f22, f9, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f7, f22, f9, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f7, f22, f9, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f7, f22, f9, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f7, f22, f9, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f7, f22, f9, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7bff fs2 = 0x3c00)
li x30, 0x4ff101b255e35097 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f20, 0(x2) # load 0x00007bff from memory into f20
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f6, 0(x2) # load 0x00003c00 from memory into f6
li x3, 0x7091b6367a55fd45 # load x3 with value 0x7091b6367a55fd45
sw x3, 0(x2) # store 0x7091b6367a55fd45 in memory
flh f23, 0(x2) # load 0x7091b6367a55fd45 from memory into f23
fnmadd.h f30, f20, f6, f23, dyn # perform operation
fnmadd.h f30, f20, f6, f23, rdn # perform operation
fnmadd.h f30, f20, f6, f23, rmm # perform operation
fnmadd.h f30, f20, f6, f23, rne # perform operation
fnmadd.h f30, f20, f6, f23, rtz # perform operation
fnmadd.h f30, f20, f6, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f30, f20, f6, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f30, f20, f6, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f30, f20, f6, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f30, f20, f6, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f30, f20, f6, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7bff fs2 = 0xbc00)
li x25, 0x6230b7ddc1c53bec # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f24, 0(x2) # load 0x00007bff from memory into f24
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f11, 0(x2) # load 0x0000bc00 from memory into f11
li x3, 0xbfb7a16cafa5b6f # load x3 with value 0xbfb7a16cafa5b6f
sw x3, 0(x2) # store 0xbfb7a16cafa5b6f in memory
flh f21, 0(x2) # load 0xbfb7a16cafa5b6f from memory into f21
fnmadd.h f25, f24, f11, f21, dyn # perform operation
fnmadd.h f25, f24, f11, f21, rdn # perform operation
fnmadd.h f25, f24, f11, f21, rmm # perform operation
fnmadd.h f25, f24, f11, f21, rne # perform operation
fnmadd.h f25, f24, f11, f21, rtz # perform operation
fnmadd.h f25, f24, f11, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f25, f24, f11, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f25, f24, f11, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f25, f24, f11, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f25, f24, f11, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f25, f24, f11, f21 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7bff fs2 = 0x3e00)
li x16, 0x529ece6935207866 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f26, 0(x2) # load 0x00007bff from memory into f26
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f2, 0(x2) # load 0x00003e00 from memory into f2
li x3, 0x99be2fc845ada3a0 # load x3 with value 0x99be2fc845ada3a0
sw x3, 0(x2) # store 0x99be2fc845ada3a0 in memory
flh f3, 0(x2) # load 0x99be2fc845ada3a0 from memory into f3
fnmadd.h f16, f26, f2, f3, dyn # perform operation
fnmadd.h f16, f26, f2, f3, rdn # perform operation
fnmadd.h f16, f26, f2, f3, rmm # perform operation
fnmadd.h f16, f26, f2, f3, rne # perform operation
fnmadd.h f16, f26, f2, f3, rtz # perform operation
fnmadd.h f16, f26, f2, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f16, f26, f2, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f16, f26, f2, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f16, f26, f2, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f16, f26, f2, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f16, f26, f2, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7bff fs2 = 0xbe00)
li x13, 0x0daf7c1917ccfe15 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f18, 0(x2) # load 0x00007bff from memory into f18
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f30, 0(x2) # load 0x0000be00 from memory into f30
li x3, 0x43e400122078bb27 # load x3 with value 0x43e400122078bb27
sw x3, 0(x2) # store 0x43e400122078bb27 in memory
flh f25, 0(x2) # load 0x43e400122078bb27 from memory into f25
fnmadd.h f13, f18, f30, f25, dyn # perform operation
fnmadd.h f13, f18, f30, f25, rdn # perform operation
fnmadd.h f13, f18, f30, f25, rmm # perform operation
fnmadd.h f13, f18, f30, f25, rne # perform operation
fnmadd.h f13, f18, f30, f25, rtz # perform operation
fnmadd.h f13, f18, f30, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f13, f18, f30, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f13, f18, f30, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f13, f18, f30, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f13, f18, f30, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f13, f18, f30, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7bff fs2 = 0x4000)
li x2, 0x040d8a30fb160242 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f5, 0(x2) # load 0x00007bff from memory into f5
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f19, 0(x2) # load 0x00004000 from memory into f19
li x3, 0xf103c26a4b5c88e3 # load x3 with value 0xf103c26a4b5c88e3
sw x3, 0(x2) # store 0xf103c26a4b5c88e3 in memory
flh f17, 0(x2) # load 0xf103c26a4b5c88e3 from memory into f17
fnmadd.h f2, f5, f19, f17, dyn # perform operation
fnmadd.h f2, f5, f19, f17, rdn # perform operation
fnmadd.h f2, f5, f19, f17, rmm # perform operation
fnmadd.h f2, f5, f19, f17, rne # perform operation
fnmadd.h f2, f5, f19, f17, rtz # perform operation
fnmadd.h f2, f5, f19, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f2, f5, f19, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f2, f5, f19, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f2, f5, f19, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f2, f5, f19, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f2, f5, f19, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7bff fs2 = 0xc000)
li x24, 0x3f4512633bf25941 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f2, 0(x2) # load 0x00007bff from memory into f2
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f22, 0(x2) # load 0x0000c000 from memory into f22
li x3, 0x44b95d94c7c8d475 # load x3 with value 0x44b95d94c7c8d475
sw x3, 0(x2) # store 0x44b95d94c7c8d475 in memory
flh f15, 0(x2) # load 0x44b95d94c7c8d475 from memory into f15
fnmadd.h f24, f2, f22, f15, dyn # perform operation
fnmadd.h f24, f2, f22, f15, rdn # perform operation
fnmadd.h f24, f2, f22, f15, rmm # perform operation
fnmadd.h f24, f2, f22, f15, rne # perform operation
fnmadd.h f24, f2, f22, f15, rtz # perform operation
fnmadd.h f24, f2, f22, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f24, f2, f22, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f24, f2, f22, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f24, f2, f22, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f24, f2, f22, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f24, f2, f22, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7bff fs2 = 0x400)
li x8, 0x5826e2e52319a172 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f6, 0(x2) # load 0x00007bff from memory into f6
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f21, 0(x2) # load 0x00000400 from memory into f21
li x3, 0x5162936afeaadab1 # load x3 with value 0x5162936afeaadab1
sw x3, 0(x2) # store 0x5162936afeaadab1 in memory
flh f24, 0(x2) # load 0x5162936afeaadab1 from memory into f24
fnmadd.h f8, f6, f21, f24, dyn # perform operation
fnmadd.h f8, f6, f21, f24, rdn # perform operation
fnmadd.h f8, f6, f21, f24, rmm # perform operation
fnmadd.h f8, f6, f21, f24, rne # perform operation
fnmadd.h f8, f6, f21, f24, rtz # perform operation
fnmadd.h f8, f6, f21, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f8, f6, f21, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f8, f6, f21, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f8, f6, f21, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f8, f6, f21, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f8, f6, f21, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7bff fs2 = 0x8400)
li x23, 0x32150235fe46a4de # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f8, 0(x2) # load 0x00007bff from memory into f8
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f3, 0(x2) # load 0x00008400 from memory into f3
li x3, 0x3cc9d73e784e4e60 # load x3 with value 0x3cc9d73e784e4e60
sw x3, 0(x2) # store 0x3cc9d73e784e4e60 in memory
flh f13, 0(x2) # load 0x3cc9d73e784e4e60 from memory into f13
fnmadd.h f23, f8, f3, f13, dyn # perform operation
fnmadd.h f23, f8, f3, f13, rdn # perform operation
fnmadd.h f23, f8, f3, f13, rmm # perform operation
fnmadd.h f23, f8, f3, f13, rne # perform operation
fnmadd.h f23, f8, f3, f13, rtz # perform operation
fnmadd.h f23, f8, f3, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f23, f8, f3, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f23, f8, f3, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f23, f8, f3, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f23, f8, f3, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f23, f8, f3, f13 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7bff fs2 = 0x7bff)
li x8, 0x9434e42b9abfc2fc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f11, 0(x2) # load 0x00007bff from memory into f11
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f16, 0(x2) # load 0x00007bff from memory into f16
li x3, 0x441bd95fa03922d5 # load x3 with value 0x441bd95fa03922d5
sw x3, 0(x2) # store 0x441bd95fa03922d5 in memory
flh f24, 0(x2) # load 0x441bd95fa03922d5 from memory into f24
fnmadd.h f8, f11, f16, f24, dyn # perform operation
fnmadd.h f8, f11, f16, f24, rdn # perform operation
fnmadd.h f8, f11, f16, f24, rmm # perform operation
fnmadd.h f8, f11, f16, f24, rne # perform operation
fnmadd.h f8, f11, f16, f24, rtz # perform operation
fnmadd.h f8, f11, f16, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f8, f11, f16, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f8, f11, f16, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f8, f11, f16, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f8, f11, f16, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f8, f11, f16, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7bff fs2 = 0xfbff)
li x21, 0xcb3a955e0b6367af # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f31, 0(x2) # load 0x00007bff from memory into f31
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f23, 0(x2) # load 0x0000fbff from memory into f23
li x3, 0xd62a083841e93fc3 # load x3 with value 0xd62a083841e93fc3
sw x3, 0(x2) # store 0xd62a083841e93fc3 in memory
flh f27, 0(x2) # load 0xd62a083841e93fc3 from memory into f27
fnmadd.h f21, f31, f23, f27, dyn # perform operation
fnmadd.h f21, f31, f23, f27, rdn # perform operation
fnmadd.h f21, f31, f23, f27, rmm # perform operation
fnmadd.h f21, f31, f23, f27, rne # perform operation
fnmadd.h f21, f31, f23, f27, rtz # perform operation
fnmadd.h f21, f31, f23, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f21, f31, f23, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f21, f31, f23, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f21, f31, f23, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f21, f31, f23, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f21, f31, f23, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7bff fs2 = 0x3ff)
li x23, 0x0f0a5a63f92fce64 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f4, 0(x2) # load 0x00007bff from memory into f4
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f16, 0(x2) # load 0x000003ff from memory into f16
li x3, 0x4cc5c72c56fa8104 # load x3 with value 0x4cc5c72c56fa8104
sw x3, 0(x2) # store 0x4cc5c72c56fa8104 in memory
flh f5, 0(x2) # load 0x4cc5c72c56fa8104 from memory into f5
fnmadd.h f23, f4, f16, f5, dyn # perform operation
fnmadd.h f23, f4, f16, f5, rdn # perform operation
fnmadd.h f23, f4, f16, f5, rmm # perform operation
fnmadd.h f23, f4, f16, f5, rne # perform operation
fnmadd.h f23, f4, f16, f5, rtz # perform operation
fnmadd.h f23, f4, f16, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f23, f4, f16, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f23, f4, f16, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f23, f4, f16, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f23, f4, f16, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f23, f4, f16, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7bff fs2 = 0x83ff)
li x12, 0x8f57a5e231f325e2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f22, 0(x2) # load 0x00007bff from memory into f22
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f1, 0(x2) # load 0x000083ff from memory into f1
li x3, 0x7e1a7fa0e00e211b # load x3 with value 0x7e1a7fa0e00e211b
sw x3, 0(x2) # store 0x7e1a7fa0e00e211b in memory
flh f26, 0(x2) # load 0x7e1a7fa0e00e211b from memory into f26
fnmadd.h f12, f22, f1, f26, dyn # perform operation
fnmadd.h f12, f22, f1, f26, rdn # perform operation
fnmadd.h f12, f22, f1, f26, rmm # perform operation
fnmadd.h f12, f22, f1, f26, rne # perform operation
fnmadd.h f12, f22, f1, f26, rtz # perform operation
fnmadd.h f12, f22, f1, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f12, f22, f1, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f12, f22, f1, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f12, f22, f1, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f12, f22, f1, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f12, f22, f1, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7bff fs2 = 0x200)
li x11, 0xdea929bea798b411 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f8, 0(x2) # load 0x00007bff from memory into f8
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f13, 0(x2) # load 0x00000200 from memory into f13
li x3, 0x381e9de5112d9aa0 # load x3 with value 0x381e9de5112d9aa0
sw x3, 0(x2) # store 0x381e9de5112d9aa0 in memory
flh f15, 0(x2) # load 0x381e9de5112d9aa0 from memory into f15
fnmadd.h f11, f8, f13, f15, dyn # perform operation
fnmadd.h f11, f8, f13, f15, rdn # perform operation
fnmadd.h f11, f8, f13, f15, rmm # perform operation
fnmadd.h f11, f8, f13, f15, rne # perform operation
fnmadd.h f11, f8, f13, f15, rtz # perform operation
fnmadd.h f11, f8, f13, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f11, f8, f13, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f11, f8, f13, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f11, f8, f13, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f11, f8, f13, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f11, f8, f13, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7bff fs2 = 0x8200)
li x25, 0x2b76dbf6cf34c1da # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f6, 0(x2) # load 0x00007bff from memory into f6
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f19, 0(x2) # load 0x00008200 from memory into f19
li x3, 0x27197f7632783404 # load x3 with value 0x27197f7632783404
sw x3, 0(x2) # store 0x27197f7632783404 in memory
flh f13, 0(x2) # load 0x27197f7632783404 from memory into f13
fnmadd.h f25, f6, f19, f13, dyn # perform operation
fnmadd.h f25, f6, f19, f13, rdn # perform operation
fnmadd.h f25, f6, f19, f13, rmm # perform operation
fnmadd.h f25, f6, f19, f13, rne # perform operation
fnmadd.h f25, f6, f19, f13, rtz # perform operation
fnmadd.h f25, f6, f19, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f25, f6, f19, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f25, f6, f19, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f25, f6, f19, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f25, f6, f19, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f25, f6, f19, f13 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7bff fs2 = 0x1)
li x1, 0x6bec9fe093550053 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f26, 0(x2) # load 0x00007bff from memory into f26
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f13, 0(x2) # load 0x00000001 from memory into f13
li x3, 0xb06a0f2f55009e11 # load x3 with value 0xb06a0f2f55009e11
sw x3, 0(x2) # store 0xb06a0f2f55009e11 in memory
flh f7, 0(x2) # load 0xb06a0f2f55009e11 from memory into f7
fnmadd.h f1, f26, f13, f7, dyn # perform operation
fnmadd.h f1, f26, f13, f7, rdn # perform operation
fnmadd.h f1, f26, f13, f7, rmm # perform operation
fnmadd.h f1, f26, f13, f7, rne # perform operation
fnmadd.h f1, f26, f13, f7, rtz # perform operation
fnmadd.h f1, f26, f13, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f1, f26, f13, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f1, f26, f13, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f1, f26, f13, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f1, f26, f13, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f1, f26, f13, f7 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7bff fs2 = 0x8001)
li x30, 0x3fe24b0b303e02cd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f24, 0(x2) # load 0x00007bff from memory into f24
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f10, 0(x2) # load 0x00008001 from memory into f10
li x3, 0xdb8c8c394d16f85f # load x3 with value 0xdb8c8c394d16f85f
sw x3, 0(x2) # store 0xdb8c8c394d16f85f in memory
flh f27, 0(x2) # load 0xdb8c8c394d16f85f from memory into f27
fnmadd.h f30, f24, f10, f27, dyn # perform operation
fnmadd.h f30, f24, f10, f27, rdn # perform operation
fnmadd.h f30, f24, f10, f27, rmm # perform operation
fnmadd.h f30, f24, f10, f27, rne # perform operation
fnmadd.h f30, f24, f10, f27, rtz # perform operation
fnmadd.h f30, f24, f10, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f30, f24, f10, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f30, f24, f10, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f30, f24, f10, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f30, f24, f10, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f30, f24, f10, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7bff fs2 = 0x7c00)
li x7, 0xbd1901371a8c8cab # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f31, 0(x2) # load 0x00007bff from memory into f31
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f30, 0(x2) # load 0x00007c00 from memory into f30
li x3, 0x90364ab2207c6257 # load x3 with value 0x90364ab2207c6257
sw x3, 0(x2) # store 0x90364ab2207c6257 in memory
flh f15, 0(x2) # load 0x90364ab2207c6257 from memory into f15
fnmadd.h f7, f31, f30, f15, dyn # perform operation
fnmadd.h f7, f31, f30, f15, rdn # perform operation
fnmadd.h f7, f31, f30, f15, rmm # perform operation
fnmadd.h f7, f31, f30, f15, rne # perform operation
fnmadd.h f7, f31, f30, f15, rtz # perform operation
fnmadd.h f7, f31, f30, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f7, f31, f30, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f7, f31, f30, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f7, f31, f30, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f7, f31, f30, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f7, f31, f30, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7bff fs2 = 0xfc00)
li x31, 0x59f211ff178d6a74 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f21, 0(x2) # load 0x00007bff from memory into f21
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f20, 0(x2) # load 0x0000fc00 from memory into f20
li x3, 0x743d9b6faddcafee # load x3 with value 0x743d9b6faddcafee
sw x3, 0(x2) # store 0x743d9b6faddcafee in memory
flh f17, 0(x2) # load 0x743d9b6faddcafee from memory into f17
fnmadd.h f31, f21, f20, f17, dyn # perform operation
fnmadd.h f31, f21, f20, f17, rdn # perform operation
fnmadd.h f31, f21, f20, f17, rmm # perform operation
fnmadd.h f31, f21, f20, f17, rne # perform operation
fnmadd.h f31, f21, f20, f17, rtz # perform operation
fnmadd.h f31, f21, f20, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f31, f21, f20, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f31, f21, f20, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f31, f21, f20, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f31, f21, f20, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f31, f21, f20, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7bff fs2 = 0x7e00)
li x25, 0xfe6f231dea96b33e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f28, 0(x2) # load 0x00007bff from memory into f28
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f29, 0(x2) # load 0x00007e00 from memory into f29
li x3, 0xf8445c3c21c52c0d # load x3 with value 0xf8445c3c21c52c0d
sw x3, 0(x2) # store 0xf8445c3c21c52c0d in memory
flh f21, 0(x2) # load 0xf8445c3c21c52c0d from memory into f21
fnmadd.h f25, f28, f29, f21, dyn # perform operation
fnmadd.h f25, f28, f29, f21, rdn # perform operation
fnmadd.h f25, f28, f29, f21, rmm # perform operation
fnmadd.h f25, f28, f29, f21, rne # perform operation
fnmadd.h f25, f28, f29, f21, rtz # perform operation
fnmadd.h f25, f28, f29, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f25, f28, f29, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f25, f28, f29, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f25, f28, f29, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f25, f28, f29, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f25, f28, f29, f21 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7bff fs2 = 0x7fff)
li x22, 0x9bd66de3529ff823 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f5, 0(x2) # load 0x00007bff from memory into f5
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f15, 0(x2) # load 0x00007fff from memory into f15
li x3, 0xb5e23a34ef785112 # load x3 with value 0xb5e23a34ef785112
sw x3, 0(x2) # store 0xb5e23a34ef785112 in memory
flh f19, 0(x2) # load 0xb5e23a34ef785112 from memory into f19
fnmadd.h f22, f5, f15, f19, dyn # perform operation
fnmadd.h f22, f5, f15, f19, rdn # perform operation
fnmadd.h f22, f5, f15, f19, rmm # perform operation
fnmadd.h f22, f5, f15, f19, rne # perform operation
fnmadd.h f22, f5, f15, f19, rtz # perform operation
fnmadd.h f22, f5, f15, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f22, f5, f15, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f22, f5, f15, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f22, f5, f15, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f22, f5, f15, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f22, f5, f15, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7bff fs2 = 0x7c01)
li x28, 0xff1313c617458b5e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f27, 0(x2) # load 0x00007bff from memory into f27
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f26, 0(x2) # load 0x00007c01 from memory into f26
li x3, 0xda0c3923de701146 # load x3 with value 0xda0c3923de701146
sw x3, 0(x2) # store 0xda0c3923de701146 in memory
flh f13, 0(x2) # load 0xda0c3923de701146 from memory into f13
fnmadd.h f28, f27, f26, f13, dyn # perform operation
fnmadd.h f28, f27, f26, f13, rdn # perform operation
fnmadd.h f28, f27, f26, f13, rmm # perform operation
fnmadd.h f28, f27, f26, f13, rne # perform operation
fnmadd.h f28, f27, f26, f13, rtz # perform operation
fnmadd.h f28, f27, f26, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f28, f27, f26, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f28, f27, f26, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f28, f27, f26, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f28, f27, f26, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f28, f27, f26, f13 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7bff fs2 = 0x7dff)
li x6, 0x6df6bd1cf69e5b78 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f12, 0(x2) # load 0x00007bff from memory into f12
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f5, 0(x2) # load 0x00007dff from memory into f5
li x3, 0xe7777218a8bfe295 # load x3 with value 0xe7777218a8bfe295
sw x3, 0(x2) # store 0xe7777218a8bfe295 in memory
flh f18, 0(x2) # load 0xe7777218a8bfe295 from memory into f18
fnmadd.h f6, f12, f5, f18, dyn # perform operation
fnmadd.h f6, f12, f5, f18, rdn # perform operation
fnmadd.h f6, f12, f5, f18, rmm # perform operation
fnmadd.h f6, f12, f5, f18, rne # perform operation
fnmadd.h f6, f12, f5, f18, rtz # perform operation
fnmadd.h f6, f12, f5, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f6, f12, f5, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f6, f12, f5, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f6, f12, f5, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f6, f12, f5, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f6, f12, f5, f18 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7bff fs2 = 0x58b4)
li x26, 0x01591e6542b07a41 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f3, 0(x2) # load 0x00007bff from memory into f3
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f5, 0(x2) # load 0x000058b4 from memory into f5
li x3, 0xa8194920ebca3be6 # load x3 with value 0xa8194920ebca3be6
sw x3, 0(x2) # store 0xa8194920ebca3be6 in memory
flh f16, 0(x2) # load 0xa8194920ebca3be6 from memory into f16
fnmadd.h f26, f3, f5, f16, dyn # perform operation
fnmadd.h f26, f3, f5, f16, rdn # perform operation
fnmadd.h f26, f3, f5, f16, rmm # perform operation
fnmadd.h f26, f3, f5, f16, rne # perform operation
fnmadd.h f26, f3, f5, f16, rtz # perform operation
fnmadd.h f26, f3, f5, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f26, f3, f5, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f26, f3, f5, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f26, f3, f5, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f26, f3, f5, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f26, f3, f5, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7bff fs2 = 0xc93a)
li x14, 0x918db5c3027afe42 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f5, 0(x2) # load 0x00007bff from memory into f5
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f9, 0(x2) # load 0x0000c93a from memory into f9
li x3, 0x67f699262b0fef27 # load x3 with value 0x67f699262b0fef27
sw x3, 0(x2) # store 0x67f699262b0fef27 in memory
flh f2, 0(x2) # load 0x67f699262b0fef27 from memory into f2
fnmadd.h f14, f5, f9, f2, dyn # perform operation
fnmadd.h f14, f5, f9, f2, rdn # perform operation
fnmadd.h f14, f5, f9, f2, rmm # perform operation
fnmadd.h f14, f5, f9, f2, rne # perform operation
fnmadd.h f14, f5, f9, f2, rtz # perform operation
fnmadd.h f14, f5, f9, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f14, f5, f9, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f14, f5, f9, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f14, f5, f9, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f14, f5, f9, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f14, f5, f9, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfbff fs2 = 0x0)
li x3, 0x302d918a63a02111 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f22, 0(x2) # load 0x0000fbff from memory into f22
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f27, 0(x2) # load 0x00000000 from memory into f27
li x3, 0xcdd9b96d95fb6703 # load x3 with value 0xcdd9b96d95fb6703
sw x3, 0(x2) # store 0xcdd9b96d95fb6703 in memory
flh f20, 0(x2) # load 0xcdd9b96d95fb6703 from memory into f20
fnmadd.h f3, f22, f27, f20, dyn # perform operation
fnmadd.h f3, f22, f27, f20, rdn # perform operation
fnmadd.h f3, f22, f27, f20, rmm # perform operation
fnmadd.h f3, f22, f27, f20, rne # perform operation
fnmadd.h f3, f22, f27, f20, rtz # perform operation
fnmadd.h f3, f22, f27, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f3, f22, f27, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f3, f22, f27, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f3, f22, f27, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f3, f22, f27, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f3, f22, f27, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfbff fs2 = 0x8000)
li x5, 0x4c1e0f849c85e9a2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f31, 0(x2) # load 0x0000fbff from memory into f31
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f20, 0(x2) # load 0x00008000 from memory into f20
li x3, 0xcd9c6c5449352b02 # load x3 with value 0xcd9c6c5449352b02
sw x3, 0(x2) # store 0xcd9c6c5449352b02 in memory
flh f9, 0(x2) # load 0xcd9c6c5449352b02 from memory into f9
fnmadd.h f5, f31, f20, f9, dyn # perform operation
fnmadd.h f5, f31, f20, f9, rdn # perform operation
fnmadd.h f5, f31, f20, f9, rmm # perform operation
fnmadd.h f5, f31, f20, f9, rne # perform operation
fnmadd.h f5, f31, f20, f9, rtz # perform operation
fnmadd.h f5, f31, f20, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f5, f31, f20, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f5, f31, f20, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f5, f31, f20, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f5, f31, f20, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f5, f31, f20, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfbff fs2 = 0x3c00)
li x5, 0x76e3329a06ce5abd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f13, 0(x2) # load 0x0000fbff from memory into f13
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f20, 0(x2) # load 0x00003c00 from memory into f20
li x3, 0x8e58254081979a04 # load x3 with value 0x8e58254081979a04
sw x3, 0(x2) # store 0x8e58254081979a04 in memory
flh f29, 0(x2) # load 0x8e58254081979a04 from memory into f29
fnmadd.h f5, f13, f20, f29, dyn # perform operation
fnmadd.h f5, f13, f20, f29, rdn # perform operation
fnmadd.h f5, f13, f20, f29, rmm # perform operation
fnmadd.h f5, f13, f20, f29, rne # perform operation
fnmadd.h f5, f13, f20, f29, rtz # perform operation
fnmadd.h f5, f13, f20, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f5, f13, f20, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f5, f13, f20, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f5, f13, f20, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f5, f13, f20, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f5, f13, f20, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfbff fs2 = 0xbc00)
li x15, 0xc7c6f48e8690f79f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f28, 0(x2) # load 0x0000fbff from memory into f28
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f17, 0(x2) # load 0x0000bc00 from memory into f17
li x3, 0x9990c1ac1093ea17 # load x3 with value 0x9990c1ac1093ea17
sw x3, 0(x2) # store 0x9990c1ac1093ea17 in memory
flh f3, 0(x2) # load 0x9990c1ac1093ea17 from memory into f3
fnmadd.h f15, f28, f17, f3, dyn # perform operation
fnmadd.h f15, f28, f17, f3, rdn # perform operation
fnmadd.h f15, f28, f17, f3, rmm # perform operation
fnmadd.h f15, f28, f17, f3, rne # perform operation
fnmadd.h f15, f28, f17, f3, rtz # perform operation
fnmadd.h f15, f28, f17, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f15, f28, f17, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f15, f28, f17, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f15, f28, f17, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f15, f28, f17, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f15, f28, f17, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfbff fs2 = 0x3e00)
li x6, 0x17a0b5e116c9219b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f29, 0(x2) # load 0x0000fbff from memory into f29
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f20, 0(x2) # load 0x00003e00 from memory into f20
li x3, 0x43fe61ee11a3d825 # load x3 with value 0x43fe61ee11a3d825
sw x3, 0(x2) # store 0x43fe61ee11a3d825 in memory
flh f13, 0(x2) # load 0x43fe61ee11a3d825 from memory into f13
fnmadd.h f6, f29, f20, f13, dyn # perform operation
fnmadd.h f6, f29, f20, f13, rdn # perform operation
fnmadd.h f6, f29, f20, f13, rmm # perform operation
fnmadd.h f6, f29, f20, f13, rne # perform operation
fnmadd.h f6, f29, f20, f13, rtz # perform operation
fnmadd.h f6, f29, f20, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f6, f29, f20, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f6, f29, f20, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f6, f29, f20, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f6, f29, f20, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f6, f29, f20, f13 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfbff fs2 = 0xbe00)
li x19, 0xdb999b4436377c9a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f29, 0(x2) # load 0x0000fbff from memory into f29
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f22, 0(x2) # load 0x0000be00 from memory into f22
li x3, 0x94264d4155ad9b07 # load x3 with value 0x94264d4155ad9b07
sw x3, 0(x2) # store 0x94264d4155ad9b07 in memory
flh f16, 0(x2) # load 0x94264d4155ad9b07 from memory into f16
fnmadd.h f19, f29, f22, f16, dyn # perform operation
fnmadd.h f19, f29, f22, f16, rdn # perform operation
fnmadd.h f19, f29, f22, f16, rmm # perform operation
fnmadd.h f19, f29, f22, f16, rne # perform operation
fnmadd.h f19, f29, f22, f16, rtz # perform operation
fnmadd.h f19, f29, f22, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f19, f29, f22, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f19, f29, f22, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f19, f29, f22, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f19, f29, f22, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f19, f29, f22, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfbff fs2 = 0x4000)
li x3, 0x6ce0d64745a2ac20 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f5, 0(x2) # load 0x0000fbff from memory into f5
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f23, 0(x2) # load 0x00004000 from memory into f23
li x3, 0x7fbf145473476ef # load x3 with value 0x7fbf145473476ef
sw x3, 0(x2) # store 0x7fbf145473476ef in memory
flh f1, 0(x2) # load 0x7fbf145473476ef from memory into f1
fnmadd.h f3, f5, f23, f1, dyn # perform operation
fnmadd.h f3, f5, f23, f1, rdn # perform operation
fnmadd.h f3, f5, f23, f1, rmm # perform operation
fnmadd.h f3, f5, f23, f1, rne # perform operation
fnmadd.h f3, f5, f23, f1, rtz # perform operation
fnmadd.h f3, f5, f23, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f3, f5, f23, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f3, f5, f23, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f3, f5, f23, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f3, f5, f23, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f3, f5, f23, f1 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfbff fs2 = 0xc000)
li x20, 0xbecb0c865884849d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f22, 0(x2) # load 0x0000fbff from memory into f22
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f17, 0(x2) # load 0x0000c000 from memory into f17
li x3, 0x34a1beb532d854d6 # load x3 with value 0x34a1beb532d854d6
sw x3, 0(x2) # store 0x34a1beb532d854d6 in memory
flh f27, 0(x2) # load 0x34a1beb532d854d6 from memory into f27
fnmadd.h f20, f22, f17, f27, dyn # perform operation
fnmadd.h f20, f22, f17, f27, rdn # perform operation
fnmadd.h f20, f22, f17, f27, rmm # perform operation
fnmadd.h f20, f22, f17, f27, rne # perform operation
fnmadd.h f20, f22, f17, f27, rtz # perform operation
fnmadd.h f20, f22, f17, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f20, f22, f17, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f20, f22, f17, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f20, f22, f17, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f20, f22, f17, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f20, f22, f17, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfbff fs2 = 0x400)
li x19, 0x22f240539deb55ab # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f4, 0(x2) # load 0x0000fbff from memory into f4
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f10, 0(x2) # load 0x00000400 from memory into f10
li x3, 0xb3169c31022369c4 # load x3 with value 0xb3169c31022369c4
sw x3, 0(x2) # store 0xb3169c31022369c4 in memory
flh f23, 0(x2) # load 0xb3169c31022369c4 from memory into f23
fnmadd.h f19, f4, f10, f23, dyn # perform operation
fnmadd.h f19, f4, f10, f23, rdn # perform operation
fnmadd.h f19, f4, f10, f23, rmm # perform operation
fnmadd.h f19, f4, f10, f23, rne # perform operation
fnmadd.h f19, f4, f10, f23, rtz # perform operation
fnmadd.h f19, f4, f10, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f19, f4, f10, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f19, f4, f10, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f19, f4, f10, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f19, f4, f10, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f19, f4, f10, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfbff fs2 = 0x8400)
li x14, 0xa2f30b14d24adc80 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f26, 0(x2) # load 0x0000fbff from memory into f26
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f29, 0(x2) # load 0x00008400 from memory into f29
li x3, 0x2b43588df6dd4c85 # load x3 with value 0x2b43588df6dd4c85
sw x3, 0(x2) # store 0x2b43588df6dd4c85 in memory
flh f1, 0(x2) # load 0x2b43588df6dd4c85 from memory into f1
fnmadd.h f14, f26, f29, f1, dyn # perform operation
fnmadd.h f14, f26, f29, f1, rdn # perform operation
fnmadd.h f14, f26, f29, f1, rmm # perform operation
fnmadd.h f14, f26, f29, f1, rne # perform operation
fnmadd.h f14, f26, f29, f1, rtz # perform operation
fnmadd.h f14, f26, f29, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f14, f26, f29, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f14, f26, f29, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f14, f26, f29, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f14, f26, f29, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f14, f26, f29, f1 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfbff fs2 = 0x7bff)
li x10, 0x97c2fe990af15ba3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f23, 0(x2) # load 0x0000fbff from memory into f23
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f18, 0(x2) # load 0x00007bff from memory into f18
li x3, 0x4cc98d79eb3c853f # load x3 with value 0x4cc98d79eb3c853f
sw x3, 0(x2) # store 0x4cc98d79eb3c853f in memory
flh f5, 0(x2) # load 0x4cc98d79eb3c853f from memory into f5
fnmadd.h f10, f23, f18, f5, dyn # perform operation
fnmadd.h f10, f23, f18, f5, rdn # perform operation
fnmadd.h f10, f23, f18, f5, rmm # perform operation
fnmadd.h f10, f23, f18, f5, rne # perform operation
fnmadd.h f10, f23, f18, f5, rtz # perform operation
fnmadd.h f10, f23, f18, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f10, f23, f18, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f10, f23, f18, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f10, f23, f18, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f10, f23, f18, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f10, f23, f18, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfbff fs2 = 0xfbff)
li x16, 0xebddeeec4eb3862c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f18, 0(x2) # load 0x0000fbff from memory into f18
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f13, 0(x2) # load 0x0000fbff from memory into f13
li x3, 0xb75fd12a2fda083d # load x3 with value 0xb75fd12a2fda083d
sw x3, 0(x2) # store 0xb75fd12a2fda083d in memory
flh f6, 0(x2) # load 0xb75fd12a2fda083d from memory into f6
fnmadd.h f16, f18, f13, f6, dyn # perform operation
fnmadd.h f16, f18, f13, f6, rdn # perform operation
fnmadd.h f16, f18, f13, f6, rmm # perform operation
fnmadd.h f16, f18, f13, f6, rne # perform operation
fnmadd.h f16, f18, f13, f6, rtz # perform operation
fnmadd.h f16, f18, f13, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f16, f18, f13, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f16, f18, f13, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f16, f18, f13, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f16, f18, f13, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f16, f18, f13, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfbff fs2 = 0x3ff)
li x30, 0x6bd047b66e5104ee # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f13, 0(x2) # load 0x0000fbff from memory into f13
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f4, 0(x2) # load 0x000003ff from memory into f4
li x3, 0xb3f44bb427a50ffb # load x3 with value 0xb3f44bb427a50ffb
sw x3, 0(x2) # store 0xb3f44bb427a50ffb in memory
flh f31, 0(x2) # load 0xb3f44bb427a50ffb from memory into f31
fnmadd.h f30, f13, f4, f31, dyn # perform operation
fnmadd.h f30, f13, f4, f31, rdn # perform operation
fnmadd.h f30, f13, f4, f31, rmm # perform operation
fnmadd.h f30, f13, f4, f31, rne # perform operation
fnmadd.h f30, f13, f4, f31, rtz # perform operation
fnmadd.h f30, f13, f4, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f30, f13, f4, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f30, f13, f4, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f30, f13, f4, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f30, f13, f4, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f30, f13, f4, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfbff fs2 = 0x83ff)
li x27, 0x3f9342aa4d52be87 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f25, 0(x2) # load 0x0000fbff from memory into f25
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f24, 0(x2) # load 0x000083ff from memory into f24
li x3, 0x709045ab0d46edd7 # load x3 with value 0x709045ab0d46edd7
sw x3, 0(x2) # store 0x709045ab0d46edd7 in memory
flh f17, 0(x2) # load 0x709045ab0d46edd7 from memory into f17
fnmadd.h f27, f25, f24, f17, dyn # perform operation
fnmadd.h f27, f25, f24, f17, rdn # perform operation
fnmadd.h f27, f25, f24, f17, rmm # perform operation
fnmadd.h f27, f25, f24, f17, rne # perform operation
fnmadd.h f27, f25, f24, f17, rtz # perform operation
fnmadd.h f27, f25, f24, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f27, f25, f24, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f27, f25, f24, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f27, f25, f24, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f27, f25, f24, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f27, f25, f24, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfbff fs2 = 0x200)
li x15, 0xc3e0c49830364b3d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f16, 0(x2) # load 0x0000fbff from memory into f16
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f23, 0(x2) # load 0x00000200 from memory into f23
li x3, 0x2be8381a88a08d36 # load x3 with value 0x2be8381a88a08d36
sw x3, 0(x2) # store 0x2be8381a88a08d36 in memory
flh f27, 0(x2) # load 0x2be8381a88a08d36 from memory into f27
fnmadd.h f15, f16, f23, f27, dyn # perform operation
fnmadd.h f15, f16, f23, f27, rdn # perform operation
fnmadd.h f15, f16, f23, f27, rmm # perform operation
fnmadd.h f15, f16, f23, f27, rne # perform operation
fnmadd.h f15, f16, f23, f27, rtz # perform operation
fnmadd.h f15, f16, f23, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f15, f16, f23, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f15, f16, f23, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f15, f16, f23, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f15, f16, f23, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f15, f16, f23, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfbff fs2 = 0x8200)
li x12, 0xd6c6246f72b9d839 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f27, 0(x2) # load 0x0000fbff from memory into f27
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f18, 0(x2) # load 0x00008200 from memory into f18
li x3, 0x61698ea83ee5fafd # load x3 with value 0x61698ea83ee5fafd
sw x3, 0(x2) # store 0x61698ea83ee5fafd in memory
flh f20, 0(x2) # load 0x61698ea83ee5fafd from memory into f20
fnmadd.h f12, f27, f18, f20, dyn # perform operation
fnmadd.h f12, f27, f18, f20, rdn # perform operation
fnmadd.h f12, f27, f18, f20, rmm # perform operation
fnmadd.h f12, f27, f18, f20, rne # perform operation
fnmadd.h f12, f27, f18, f20, rtz # perform operation
fnmadd.h f12, f27, f18, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f12, f27, f18, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f12, f27, f18, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f12, f27, f18, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f12, f27, f18, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f12, f27, f18, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfbff fs2 = 0x1)
li x7, 0x7ebbee40cb3a18d4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f16, 0(x2) # load 0x0000fbff from memory into f16
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f26, 0(x2) # load 0x00000001 from memory into f26
li x3, 0xe68edfe39b092f45 # load x3 with value 0xe68edfe39b092f45
sw x3, 0(x2) # store 0xe68edfe39b092f45 in memory
flh f1, 0(x2) # load 0xe68edfe39b092f45 from memory into f1
fnmadd.h f7, f16, f26, f1, dyn # perform operation
fnmadd.h f7, f16, f26, f1, rdn # perform operation
fnmadd.h f7, f16, f26, f1, rmm # perform operation
fnmadd.h f7, f16, f26, f1, rne # perform operation
fnmadd.h f7, f16, f26, f1, rtz # perform operation
fnmadd.h f7, f16, f26, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f7, f16, f26, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f7, f16, f26, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f7, f16, f26, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f7, f16, f26, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f7, f16, f26, f1 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfbff fs2 = 0x8001)
li x6, 0x04d30a97e4f97e88 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f3, 0(x2) # load 0x0000fbff from memory into f3
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f23, 0(x2) # load 0x00008001 from memory into f23
li x3, 0x8d30888be5e6df8d # load x3 with value 0x8d30888be5e6df8d
sw x3, 0(x2) # store 0x8d30888be5e6df8d in memory
flh f17, 0(x2) # load 0x8d30888be5e6df8d from memory into f17
fnmadd.h f6, f3, f23, f17, dyn # perform operation
fnmadd.h f6, f3, f23, f17, rdn # perform operation
fnmadd.h f6, f3, f23, f17, rmm # perform operation
fnmadd.h f6, f3, f23, f17, rne # perform operation
fnmadd.h f6, f3, f23, f17, rtz # perform operation
fnmadd.h f6, f3, f23, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f6, f3, f23, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f6, f3, f23, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f6, f3, f23, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f6, f3, f23, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f6, f3, f23, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfbff fs2 = 0x7c00)
li x27, 0xaee7a5320fae947e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f28, 0(x2) # load 0x0000fbff from memory into f28
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f30, 0(x2) # load 0x00007c00 from memory into f30
li x3, 0x55e7c9ebf22eca62 # load x3 with value 0x55e7c9ebf22eca62
sw x3, 0(x2) # store 0x55e7c9ebf22eca62 in memory
flh f20, 0(x2) # load 0x55e7c9ebf22eca62 from memory into f20
fnmadd.h f27, f28, f30, f20, dyn # perform operation
fnmadd.h f27, f28, f30, f20, rdn # perform operation
fnmadd.h f27, f28, f30, f20, rmm # perform operation
fnmadd.h f27, f28, f30, f20, rne # perform operation
fnmadd.h f27, f28, f30, f20, rtz # perform operation
fnmadd.h f27, f28, f30, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f27, f28, f30, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f27, f28, f30, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f27, f28, f30, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f27, f28, f30, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f27, f28, f30, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfbff fs2 = 0xfc00)
li x7, 0x617b90d34e6b48f4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f30, 0(x2) # load 0x0000fbff from memory into f30
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f22, 0(x2) # load 0x0000fc00 from memory into f22
li x3, 0x7172676594ee8879 # load x3 with value 0x7172676594ee8879
sw x3, 0(x2) # store 0x7172676594ee8879 in memory
flh f4, 0(x2) # load 0x7172676594ee8879 from memory into f4
fnmadd.h f7, f30, f22, f4, dyn # perform operation
fnmadd.h f7, f30, f22, f4, rdn # perform operation
fnmadd.h f7, f30, f22, f4, rmm # perform operation
fnmadd.h f7, f30, f22, f4, rne # perform operation
fnmadd.h f7, f30, f22, f4, rtz # perform operation
fnmadd.h f7, f30, f22, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f7, f30, f22, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f7, f30, f22, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f7, f30, f22, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f7, f30, f22, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f7, f30, f22, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfbff fs2 = 0x7e00)
li x23, 0x491da71b5431d41d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f20, 0(x2) # load 0x0000fbff from memory into f20
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f10, 0(x2) # load 0x00007e00 from memory into f10
li x3, 0xfc737a851aa12ae7 # load x3 with value 0xfc737a851aa12ae7
sw x3, 0(x2) # store 0xfc737a851aa12ae7 in memory
flh f30, 0(x2) # load 0xfc737a851aa12ae7 from memory into f30
fnmadd.h f23, f20, f10, f30, dyn # perform operation
fnmadd.h f23, f20, f10, f30, rdn # perform operation
fnmadd.h f23, f20, f10, f30, rmm # perform operation
fnmadd.h f23, f20, f10, f30, rne # perform operation
fnmadd.h f23, f20, f10, f30, rtz # perform operation
fnmadd.h f23, f20, f10, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f23, f20, f10, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f23, f20, f10, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f23, f20, f10, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f23, f20, f10, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f23, f20, f10, f30 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfbff fs2 = 0x7fff)
li x27, 0xc6a821c3fa899d6d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f14, 0(x2) # load 0x0000fbff from memory into f14
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f15, 0(x2) # load 0x00007fff from memory into f15
li x3, 0xc6a05272be75f7f0 # load x3 with value 0xc6a05272be75f7f0
sw x3, 0(x2) # store 0xc6a05272be75f7f0 in memory
flh f1, 0(x2) # load 0xc6a05272be75f7f0 from memory into f1
fnmadd.h f27, f14, f15, f1, dyn # perform operation
fnmadd.h f27, f14, f15, f1, rdn # perform operation
fnmadd.h f27, f14, f15, f1, rmm # perform operation
fnmadd.h f27, f14, f15, f1, rne # perform operation
fnmadd.h f27, f14, f15, f1, rtz # perform operation
fnmadd.h f27, f14, f15, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f27, f14, f15, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f27, f14, f15, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f27, f14, f15, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f27, f14, f15, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f27, f14, f15, f1 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfbff fs2 = 0x7c01)
li x27, 0x36c4c47836e83599 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f2, 0(x2) # load 0x0000fbff from memory into f2
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f5, 0(x2) # load 0x00007c01 from memory into f5
li x3, 0xcac29c03a8c108c8 # load x3 with value 0xcac29c03a8c108c8
sw x3, 0(x2) # store 0xcac29c03a8c108c8 in memory
flh f25, 0(x2) # load 0xcac29c03a8c108c8 from memory into f25
fnmadd.h f27, f2, f5, f25, dyn # perform operation
fnmadd.h f27, f2, f5, f25, rdn # perform operation
fnmadd.h f27, f2, f5, f25, rmm # perform operation
fnmadd.h f27, f2, f5, f25, rne # perform operation
fnmadd.h f27, f2, f5, f25, rtz # perform operation
fnmadd.h f27, f2, f5, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f27, f2, f5, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f27, f2, f5, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f27, f2, f5, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f27, f2, f5, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f27, f2, f5, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfbff fs2 = 0x7dff)
li x28, 0xe5bed91626f756ef # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f16, 0(x2) # load 0x0000fbff from memory into f16
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f20, 0(x2) # load 0x00007dff from memory into f20
li x3, 0x7d4bc08836ca3b10 # load x3 with value 0x7d4bc08836ca3b10
sw x3, 0(x2) # store 0x7d4bc08836ca3b10 in memory
flh f27, 0(x2) # load 0x7d4bc08836ca3b10 from memory into f27
fnmadd.h f28, f16, f20, f27, dyn # perform operation
fnmadd.h f28, f16, f20, f27, rdn # perform operation
fnmadd.h f28, f16, f20, f27, rmm # perform operation
fnmadd.h f28, f16, f20, f27, rne # perform operation
fnmadd.h f28, f16, f20, f27, rtz # perform operation
fnmadd.h f28, f16, f20, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f28, f16, f20, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f28, f16, f20, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f28, f16, f20, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f28, f16, f20, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f28, f16, f20, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfbff fs2 = 0x58b4)
li x25, 0x1a18b5b3cecc42e8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f18, 0(x2) # load 0x0000fbff from memory into f18
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f7, 0(x2) # load 0x000058b4 from memory into f7
li x3, 0x3930d10604d3ce61 # load x3 with value 0x3930d10604d3ce61
sw x3, 0(x2) # store 0x3930d10604d3ce61 in memory
flh f3, 0(x2) # load 0x3930d10604d3ce61 from memory into f3
fnmadd.h f25, f18, f7, f3, dyn # perform operation
fnmadd.h f25, f18, f7, f3, rdn # perform operation
fnmadd.h f25, f18, f7, f3, rmm # perform operation
fnmadd.h f25, f18, f7, f3, rne # perform operation
fnmadd.h f25, f18, f7, f3, rtz # perform operation
fnmadd.h f25, f18, f7, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f25, f18, f7, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f25, f18, f7, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f25, f18, f7, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f25, f18, f7, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f25, f18, f7, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfbff fs2 = 0xc93a)
li x17, 0x5330ffa6aa60e3d3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f15, 0(x2) # load 0x0000fbff from memory into f15
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f10, 0(x2) # load 0x0000c93a from memory into f10
li x3, 0x56a5cb4677cfe064 # load x3 with value 0x56a5cb4677cfe064
sw x3, 0(x2) # store 0x56a5cb4677cfe064 in memory
flh f13, 0(x2) # load 0x56a5cb4677cfe064 from memory into f13
fnmadd.h f17, f15, f10, f13, dyn # perform operation
fnmadd.h f17, f15, f10, f13, rdn # perform operation
fnmadd.h f17, f15, f10, f13, rmm # perform operation
fnmadd.h f17, f15, f10, f13, rne # perform operation
fnmadd.h f17, f15, f10, f13, rtz # perform operation
fnmadd.h f17, f15, f10, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f17, f15, f10, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f17, f15, f10, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f17, f15, f10, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f17, f15, f10, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f17, f15, f10, f13 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff fs2 = 0x0)
li x2, 0xaaca91f6601cdd74 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f21, 0(x2) # load 0x000003ff from memory into f21
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f4, 0(x2) # load 0x00000000 from memory into f4
li x3, 0x6f4fa13f0d3bc1c3 # load x3 with value 0x6f4fa13f0d3bc1c3
sw x3, 0(x2) # store 0x6f4fa13f0d3bc1c3 in memory
flh f31, 0(x2) # load 0x6f4fa13f0d3bc1c3 from memory into f31
fnmadd.h f2, f21, f4, f31, dyn # perform operation
fnmadd.h f2, f21, f4, f31, rdn # perform operation
fnmadd.h f2, f21, f4, f31, rmm # perform operation
fnmadd.h f2, f21, f4, f31, rne # perform operation
fnmadd.h f2, f21, f4, f31, rtz # perform operation
fnmadd.h f2, f21, f4, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f2, f21, f4, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f2, f21, f4, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f2, f21, f4, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f2, f21, f4, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f2, f21, f4, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff fs2 = 0x8000)
li x23, 0xb2d3b71ebab0f501 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f16, 0(x2) # load 0x000003ff from memory into f16
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f7, 0(x2) # load 0x00008000 from memory into f7
li x3, 0x2e7dd074ebc3ef11 # load x3 with value 0x2e7dd074ebc3ef11
sw x3, 0(x2) # store 0x2e7dd074ebc3ef11 in memory
flh f24, 0(x2) # load 0x2e7dd074ebc3ef11 from memory into f24
fnmadd.h f23, f16, f7, f24, dyn # perform operation
fnmadd.h f23, f16, f7, f24, rdn # perform operation
fnmadd.h f23, f16, f7, f24, rmm # perform operation
fnmadd.h f23, f16, f7, f24, rne # perform operation
fnmadd.h f23, f16, f7, f24, rtz # perform operation
fnmadd.h f23, f16, f7, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f23, f16, f7, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f23, f16, f7, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f23, f16, f7, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f23, f16, f7, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f23, f16, f7, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff fs2 = 0x3c00)
li x1, 0xc4f3a6308c84519c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f3, 0(x2) # load 0x000003ff from memory into f3
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f5, 0(x2) # load 0x00003c00 from memory into f5
li x3, 0x4cf869e498f773d0 # load x3 with value 0x4cf869e498f773d0
sw x3, 0(x2) # store 0x4cf869e498f773d0 in memory
flh f14, 0(x2) # load 0x4cf869e498f773d0 from memory into f14
fnmadd.h f1, f3, f5, f14, dyn # perform operation
fnmadd.h f1, f3, f5, f14, rdn # perform operation
fnmadd.h f1, f3, f5, f14, rmm # perform operation
fnmadd.h f1, f3, f5, f14, rne # perform operation
fnmadd.h f1, f3, f5, f14, rtz # perform operation
fnmadd.h f1, f3, f5, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f1, f3, f5, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f1, f3, f5, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f1, f3, f5, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f1, f3, f5, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f1, f3, f5, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff fs2 = 0xbc00)
li x30, 0x5718ddc965dcd319 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f10, 0(x2) # load 0x000003ff from memory into f10
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f6, 0(x2) # load 0x0000bc00 from memory into f6
li x3, 0x2452384647e170d8 # load x3 with value 0x2452384647e170d8
sw x3, 0(x2) # store 0x2452384647e170d8 in memory
flh f8, 0(x2) # load 0x2452384647e170d8 from memory into f8
fnmadd.h f30, f10, f6, f8, dyn # perform operation
fnmadd.h f30, f10, f6, f8, rdn # perform operation
fnmadd.h f30, f10, f6, f8, rmm # perform operation
fnmadd.h f30, f10, f6, f8, rne # perform operation
fnmadd.h f30, f10, f6, f8, rtz # perform operation
fnmadd.h f30, f10, f6, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f30, f10, f6, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f30, f10, f6, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f30, f10, f6, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f30, f10, f6, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f30, f10, f6, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff fs2 = 0x3e00)
li x3, 0xe0715c8524281d7d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f22, 0(x2) # load 0x000003ff from memory into f22
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f19, 0(x2) # load 0x00003e00 from memory into f19
li x3, 0xef0ac12d500d5540 # load x3 with value 0xef0ac12d500d5540
sw x3, 0(x2) # store 0xef0ac12d500d5540 in memory
flh f18, 0(x2) # load 0xef0ac12d500d5540 from memory into f18
fnmadd.h f3, f22, f19, f18, dyn # perform operation
fnmadd.h f3, f22, f19, f18, rdn # perform operation
fnmadd.h f3, f22, f19, f18, rmm # perform operation
fnmadd.h f3, f22, f19, f18, rne # perform operation
fnmadd.h f3, f22, f19, f18, rtz # perform operation
fnmadd.h f3, f22, f19, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f3, f22, f19, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f3, f22, f19, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f3, f22, f19, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f3, f22, f19, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f3, f22, f19, f18 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff fs2 = 0xbe00)
li x25, 0x4d24a9ac110f883c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f9, 0(x2) # load 0x000003ff from memory into f9
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f4, 0(x2) # load 0x0000be00 from memory into f4
li x3, 0xf7c421ae844fad85 # load x3 with value 0xf7c421ae844fad85
sw x3, 0(x2) # store 0xf7c421ae844fad85 in memory
flh f12, 0(x2) # load 0xf7c421ae844fad85 from memory into f12
fnmadd.h f25, f9, f4, f12, dyn # perform operation
fnmadd.h f25, f9, f4, f12, rdn # perform operation
fnmadd.h f25, f9, f4, f12, rmm # perform operation
fnmadd.h f25, f9, f4, f12, rne # perform operation
fnmadd.h f25, f9, f4, f12, rtz # perform operation
fnmadd.h f25, f9, f4, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f25, f9, f4, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f25, f9, f4, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f25, f9, f4, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f25, f9, f4, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f25, f9, f4, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff fs2 = 0x4000)
li x12, 0x4de56e457eb71646 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f8, 0(x2) # load 0x000003ff from memory into f8
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f19, 0(x2) # load 0x00004000 from memory into f19
li x3, 0x3bf4d33fac82b1ae # load x3 with value 0x3bf4d33fac82b1ae
sw x3, 0(x2) # store 0x3bf4d33fac82b1ae in memory
flh f6, 0(x2) # load 0x3bf4d33fac82b1ae from memory into f6
fnmadd.h f12, f8, f19, f6, dyn # perform operation
fnmadd.h f12, f8, f19, f6, rdn # perform operation
fnmadd.h f12, f8, f19, f6, rmm # perform operation
fnmadd.h f12, f8, f19, f6, rne # perform operation
fnmadd.h f12, f8, f19, f6, rtz # perform operation
fnmadd.h f12, f8, f19, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f12, f8, f19, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f12, f8, f19, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f12, f8, f19, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f12, f8, f19, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f12, f8, f19, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff fs2 = 0xc000)
li x13, 0x83970610a72fa300 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f3, 0(x2) # load 0x000003ff from memory into f3
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f22, 0(x2) # load 0x0000c000 from memory into f22
li x3, 0xc922fa52e8aec926 # load x3 with value 0xc922fa52e8aec926
sw x3, 0(x2) # store 0xc922fa52e8aec926 in memory
flh f19, 0(x2) # load 0xc922fa52e8aec926 from memory into f19
fnmadd.h f13, f3, f22, f19, dyn # perform operation
fnmadd.h f13, f3, f22, f19, rdn # perform operation
fnmadd.h f13, f3, f22, f19, rmm # perform operation
fnmadd.h f13, f3, f22, f19, rne # perform operation
fnmadd.h f13, f3, f22, f19, rtz # perform operation
fnmadd.h f13, f3, f22, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f13, f3, f22, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f13, f3, f22, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f13, f3, f22, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f13, f3, f22, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f13, f3, f22, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff fs2 = 0x400)
li x4, 0xa447b8b058f2baed # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f16, 0(x2) # load 0x000003ff from memory into f16
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f21, 0(x2) # load 0x00000400 from memory into f21
li x3, 0x5df9b9bbb3cd5ea0 # load x3 with value 0x5df9b9bbb3cd5ea0
sw x3, 0(x2) # store 0x5df9b9bbb3cd5ea0 in memory
flh f22, 0(x2) # load 0x5df9b9bbb3cd5ea0 from memory into f22
fnmadd.h f4, f16, f21, f22, dyn # perform operation
fnmadd.h f4, f16, f21, f22, rdn # perform operation
fnmadd.h f4, f16, f21, f22, rmm # perform operation
fnmadd.h f4, f16, f21, f22, rne # perform operation
fnmadd.h f4, f16, f21, f22, rtz # perform operation
fnmadd.h f4, f16, f21, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f4, f16, f21, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f4, f16, f21, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f4, f16, f21, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f4, f16, f21, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f4, f16, f21, f22 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff fs2 = 0x8400)
li x10, 0x3546bfda9d49c549 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f1, 0(x2) # load 0x000003ff from memory into f1
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f21, 0(x2) # load 0x00008400 from memory into f21
li x3, 0x8de4925ebf21a60a # load x3 with value 0x8de4925ebf21a60a
sw x3, 0(x2) # store 0x8de4925ebf21a60a in memory
flh f3, 0(x2) # load 0x8de4925ebf21a60a from memory into f3
fnmadd.h f10, f1, f21, f3, dyn # perform operation
fnmadd.h f10, f1, f21, f3, rdn # perform operation
fnmadd.h f10, f1, f21, f3, rmm # perform operation
fnmadd.h f10, f1, f21, f3, rne # perform operation
fnmadd.h f10, f1, f21, f3, rtz # perform operation
fnmadd.h f10, f1, f21, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f10, f1, f21, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f10, f1, f21, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f10, f1, f21, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f10, f1, f21, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f10, f1, f21, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff fs2 = 0x7bff)
li x29, 0x6fa10ff9f50378c5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f28, 0(x2) # load 0x000003ff from memory into f28
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f5, 0(x2) # load 0x00007bff from memory into f5
li x3, 0x5a46376171bc479a # load x3 with value 0x5a46376171bc479a
sw x3, 0(x2) # store 0x5a46376171bc479a in memory
flh f13, 0(x2) # load 0x5a46376171bc479a from memory into f13
fnmadd.h f29, f28, f5, f13, dyn # perform operation
fnmadd.h f29, f28, f5, f13, rdn # perform operation
fnmadd.h f29, f28, f5, f13, rmm # perform operation
fnmadd.h f29, f28, f5, f13, rne # perform operation
fnmadd.h f29, f28, f5, f13, rtz # perform operation
fnmadd.h f29, f28, f5, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f29, f28, f5, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f29, f28, f5, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f29, f28, f5, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f29, f28, f5, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f29, f28, f5, f13 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff fs2 = 0xfbff)
li x20, 0x5a27c617ceda8ae3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f28, 0(x2) # load 0x000003ff from memory into f28
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f12, 0(x2) # load 0x0000fbff from memory into f12
li x3, 0xee0baa7ef8aa76 # load x3 with value 0xee0baa7ef8aa76
sw x3, 0(x2) # store 0xee0baa7ef8aa76 in memory
flh f22, 0(x2) # load 0xee0baa7ef8aa76 from memory into f22
fnmadd.h f20, f28, f12, f22, dyn # perform operation
fnmadd.h f20, f28, f12, f22, rdn # perform operation
fnmadd.h f20, f28, f12, f22, rmm # perform operation
fnmadd.h f20, f28, f12, f22, rne # perform operation
fnmadd.h f20, f28, f12, f22, rtz # perform operation
fnmadd.h f20, f28, f12, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f20, f28, f12, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f20, f28, f12, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f20, f28, f12, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f20, f28, f12, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f20, f28, f12, f22 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff fs2 = 0x3ff)
li x16, 0x8ba87bc3bdf20cb8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f18, 0(x2) # load 0x000003ff from memory into f18
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f7, 0(x2) # load 0x000003ff from memory into f7
li x3, 0x377624bad7d58699 # load x3 with value 0x377624bad7d58699
sw x3, 0(x2) # store 0x377624bad7d58699 in memory
flh f27, 0(x2) # load 0x377624bad7d58699 from memory into f27
fnmadd.h f16, f18, f7, f27, dyn # perform operation
fnmadd.h f16, f18, f7, f27, rdn # perform operation
fnmadd.h f16, f18, f7, f27, rmm # perform operation
fnmadd.h f16, f18, f7, f27, rne # perform operation
fnmadd.h f16, f18, f7, f27, rtz # perform operation
fnmadd.h f16, f18, f7, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f16, f18, f7, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f16, f18, f7, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f16, f18, f7, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f16, f18, f7, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f16, f18, f7, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff fs2 = 0x83ff)
li x9, 0x56b17551fe65e040 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f30, 0(x2) # load 0x000003ff from memory into f30
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f27, 0(x2) # load 0x000083ff from memory into f27
li x3, 0xd285ddf0eedaaa80 # load x3 with value 0xd285ddf0eedaaa80
sw x3, 0(x2) # store 0xd285ddf0eedaaa80 in memory
flh f26, 0(x2) # load 0xd285ddf0eedaaa80 from memory into f26
fnmadd.h f9, f30, f27, f26, dyn # perform operation
fnmadd.h f9, f30, f27, f26, rdn # perform operation
fnmadd.h f9, f30, f27, f26, rmm # perform operation
fnmadd.h f9, f30, f27, f26, rne # perform operation
fnmadd.h f9, f30, f27, f26, rtz # perform operation
fnmadd.h f9, f30, f27, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f9, f30, f27, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f9, f30, f27, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f9, f30, f27, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f9, f30, f27, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f9, f30, f27, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff fs2 = 0x200)
li x24, 0xdd81bf56d7afd6f9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f22, 0(x2) # load 0x000003ff from memory into f22
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f26, 0(x2) # load 0x00000200 from memory into f26
li x3, 0x302a90592a7801c4 # load x3 with value 0x302a90592a7801c4
sw x3, 0(x2) # store 0x302a90592a7801c4 in memory
flh f29, 0(x2) # load 0x302a90592a7801c4 from memory into f29
fnmadd.h f24, f22, f26, f29, dyn # perform operation
fnmadd.h f24, f22, f26, f29, rdn # perform operation
fnmadd.h f24, f22, f26, f29, rmm # perform operation
fnmadd.h f24, f22, f26, f29, rne # perform operation
fnmadd.h f24, f22, f26, f29, rtz # perform operation
fnmadd.h f24, f22, f26, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f24, f22, f26, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f24, f22, f26, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f24, f22, f26, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f24, f22, f26, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f24, f22, f26, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff fs2 = 0x8200)
li x24, 0x0215c54b80a49b2a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f21, 0(x2) # load 0x000003ff from memory into f21
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f20, 0(x2) # load 0x00008200 from memory into f20
li x3, 0xfadc37f67eccfd16 # load x3 with value 0xfadc37f67eccfd16
sw x3, 0(x2) # store 0xfadc37f67eccfd16 in memory
flh f14, 0(x2) # load 0xfadc37f67eccfd16 from memory into f14
fnmadd.h f24, f21, f20, f14, dyn # perform operation
fnmadd.h f24, f21, f20, f14, rdn # perform operation
fnmadd.h f24, f21, f20, f14, rmm # perform operation
fnmadd.h f24, f21, f20, f14, rne # perform operation
fnmadd.h f24, f21, f20, f14, rtz # perform operation
fnmadd.h f24, f21, f20, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f24, f21, f20, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f24, f21, f20, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f24, f21, f20, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f24, f21, f20, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f24, f21, f20, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff fs2 = 0x1)
li x13, 0xddc96c16a005c997 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f24, 0(x2) # load 0x000003ff from memory into f24
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f10, 0(x2) # load 0x00000001 from memory into f10
li x3, 0xe11d05f0be320eac # load x3 with value 0xe11d05f0be320eac
sw x3, 0(x2) # store 0xe11d05f0be320eac in memory
flh f27, 0(x2) # load 0xe11d05f0be320eac from memory into f27
fnmadd.h f13, f24, f10, f27, dyn # perform operation
fnmadd.h f13, f24, f10, f27, rdn # perform operation
fnmadd.h f13, f24, f10, f27, rmm # perform operation
fnmadd.h f13, f24, f10, f27, rne # perform operation
fnmadd.h f13, f24, f10, f27, rtz # perform operation
fnmadd.h f13, f24, f10, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f13, f24, f10, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f13, f24, f10, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f13, f24, f10, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f13, f24, f10, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f13, f24, f10, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff fs2 = 0x8001)
li x25, 0xa548a9adc5b6d4f6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f29, 0(x2) # load 0x000003ff from memory into f29
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f1, 0(x2) # load 0x00008001 from memory into f1
li x3, 0x40bcb8c6e2ff3abf # load x3 with value 0x40bcb8c6e2ff3abf
sw x3, 0(x2) # store 0x40bcb8c6e2ff3abf in memory
flh f20, 0(x2) # load 0x40bcb8c6e2ff3abf from memory into f20
fnmadd.h f25, f29, f1, f20, dyn # perform operation
fnmadd.h f25, f29, f1, f20, rdn # perform operation
fnmadd.h f25, f29, f1, f20, rmm # perform operation
fnmadd.h f25, f29, f1, f20, rne # perform operation
fnmadd.h f25, f29, f1, f20, rtz # perform operation
fnmadd.h f25, f29, f1, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f25, f29, f1, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f25, f29, f1, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f25, f29, f1, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f25, f29, f1, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f25, f29, f1, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff fs2 = 0x7c00)
li x31, 0xac22d6b18d6cb4fa # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f4, 0(x2) # load 0x000003ff from memory into f4
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f30, 0(x2) # load 0x00007c00 from memory into f30
li x3, 0x79c0394a579761e4 # load x3 with value 0x79c0394a579761e4
sw x3, 0(x2) # store 0x79c0394a579761e4 in memory
flh f25, 0(x2) # load 0x79c0394a579761e4 from memory into f25
fnmadd.h f31, f4, f30, f25, dyn # perform operation
fnmadd.h f31, f4, f30, f25, rdn # perform operation
fnmadd.h f31, f4, f30, f25, rmm # perform operation
fnmadd.h f31, f4, f30, f25, rne # perform operation
fnmadd.h f31, f4, f30, f25, rtz # perform operation
fnmadd.h f31, f4, f30, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f31, f4, f30, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f31, f4, f30, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f31, f4, f30, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f31, f4, f30, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f31, f4, f30, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff fs2 = 0xfc00)
li x27, 0x0cec7fd82a8ac423 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f18, 0(x2) # load 0x000003ff from memory into f18
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f25, 0(x2) # load 0x0000fc00 from memory into f25
li x3, 0x1745e394984cd6ee # load x3 with value 0x1745e394984cd6ee
sw x3, 0(x2) # store 0x1745e394984cd6ee in memory
flh f29, 0(x2) # load 0x1745e394984cd6ee from memory into f29
fnmadd.h f27, f18, f25, f29, dyn # perform operation
fnmadd.h f27, f18, f25, f29, rdn # perform operation
fnmadd.h f27, f18, f25, f29, rmm # perform operation
fnmadd.h f27, f18, f25, f29, rne # perform operation
fnmadd.h f27, f18, f25, f29, rtz # perform operation
fnmadd.h f27, f18, f25, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f27, f18, f25, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f27, f18, f25, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f27, f18, f25, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f27, f18, f25, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f27, f18, f25, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff fs2 = 0x7e00)
li x14, 0xec26b7f6d1325ffb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f31, 0(x2) # load 0x000003ff from memory into f31
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f4, 0(x2) # load 0x00007e00 from memory into f4
li x3, 0xdf9be4aeb37fa55 # load x3 with value 0xdf9be4aeb37fa55
sw x3, 0(x2) # store 0xdf9be4aeb37fa55 in memory
flh f12, 0(x2) # load 0xdf9be4aeb37fa55 from memory into f12
fnmadd.h f14, f31, f4, f12, dyn # perform operation
fnmadd.h f14, f31, f4, f12, rdn # perform operation
fnmadd.h f14, f31, f4, f12, rmm # perform operation
fnmadd.h f14, f31, f4, f12, rne # perform operation
fnmadd.h f14, f31, f4, f12, rtz # perform operation
fnmadd.h f14, f31, f4, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f14, f31, f4, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f14, f31, f4, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f14, f31, f4, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f14, f31, f4, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f14, f31, f4, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff fs2 = 0x7fff)
li x12, 0x6c2894fa2218294b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f15, 0(x2) # load 0x000003ff from memory into f15
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f2, 0(x2) # load 0x00007fff from memory into f2
li x3, 0x63dc79b71ee9be5b # load x3 with value 0x63dc79b71ee9be5b
sw x3, 0(x2) # store 0x63dc79b71ee9be5b in memory
flh f17, 0(x2) # load 0x63dc79b71ee9be5b from memory into f17
fnmadd.h f12, f15, f2, f17, dyn # perform operation
fnmadd.h f12, f15, f2, f17, rdn # perform operation
fnmadd.h f12, f15, f2, f17, rmm # perform operation
fnmadd.h f12, f15, f2, f17, rne # perform operation
fnmadd.h f12, f15, f2, f17, rtz # perform operation
fnmadd.h f12, f15, f2, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f12, f15, f2, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f12, f15, f2, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f12, f15, f2, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f12, f15, f2, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f12, f15, f2, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff fs2 = 0x7c01)
li x1, 0x6f57c46e70a7351c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f12, 0(x2) # load 0x000003ff from memory into f12
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f14, 0(x2) # load 0x00007c01 from memory into f14
li x3, 0x6785382ddd312afe # load x3 with value 0x6785382ddd312afe
sw x3, 0(x2) # store 0x6785382ddd312afe in memory
flh f6, 0(x2) # load 0x6785382ddd312afe from memory into f6
fnmadd.h f1, f12, f14, f6, dyn # perform operation
fnmadd.h f1, f12, f14, f6, rdn # perform operation
fnmadd.h f1, f12, f14, f6, rmm # perform operation
fnmadd.h f1, f12, f14, f6, rne # perform operation
fnmadd.h f1, f12, f14, f6, rtz # perform operation
fnmadd.h f1, f12, f14, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f1, f12, f14, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f1, f12, f14, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f1, f12, f14, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f1, f12, f14, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f1, f12, f14, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff fs2 = 0x7dff)
li x27, 0x37cb6580d8c1ecff # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f13, 0(x2) # load 0x000003ff from memory into f13
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f19, 0(x2) # load 0x00007dff from memory into f19
li x3, 0x2e972bf49148a1e2 # load x3 with value 0x2e972bf49148a1e2
sw x3, 0(x2) # store 0x2e972bf49148a1e2 in memory
flh f8, 0(x2) # load 0x2e972bf49148a1e2 from memory into f8
fnmadd.h f27, f13, f19, f8, dyn # perform operation
fnmadd.h f27, f13, f19, f8, rdn # perform operation
fnmadd.h f27, f13, f19, f8, rmm # perform operation
fnmadd.h f27, f13, f19, f8, rne # perform operation
fnmadd.h f27, f13, f19, f8, rtz # perform operation
fnmadd.h f27, f13, f19, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f27, f13, f19, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f27, f13, f19, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f27, f13, f19, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f27, f13, f19, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f27, f13, f19, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff fs2 = 0x58b4)
li x26, 0xdb9ab7bc1731adf8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f18, 0(x2) # load 0x000003ff from memory into f18
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f29, 0(x2) # load 0x000058b4 from memory into f29
li x3, 0x9f60ded3c2cdb03d # load x3 with value 0x9f60ded3c2cdb03d
sw x3, 0(x2) # store 0x9f60ded3c2cdb03d in memory
flh f28, 0(x2) # load 0x9f60ded3c2cdb03d from memory into f28
fnmadd.h f26, f18, f29, f28, dyn # perform operation
fnmadd.h f26, f18, f29, f28, rdn # perform operation
fnmadd.h f26, f18, f29, f28, rmm # perform operation
fnmadd.h f26, f18, f29, f28, rne # perform operation
fnmadd.h f26, f18, f29, f28, rtz # perform operation
fnmadd.h f26, f18, f29, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f26, f18, f29, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f26, f18, f29, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f26, f18, f29, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f26, f18, f29, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f26, f18, f29, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff fs2 = 0xc93a)
li x9, 0x9cac8355ea6059b0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f18, 0(x2) # load 0x000003ff from memory into f18
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f16, 0(x2) # load 0x0000c93a from memory into f16
li x3, 0xd2aadff35017bf93 # load x3 with value 0xd2aadff35017bf93
sw x3, 0(x2) # store 0xd2aadff35017bf93 in memory
flh f24, 0(x2) # load 0xd2aadff35017bf93 from memory into f24
fnmadd.h f9, f18, f16, f24, dyn # perform operation
fnmadd.h f9, f18, f16, f24, rdn # perform operation
fnmadd.h f9, f18, f16, f24, rmm # perform operation
fnmadd.h f9, f18, f16, f24, rne # perform operation
fnmadd.h f9, f18, f16, f24, rtz # perform operation
fnmadd.h f9, f18, f16, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f9, f18, f16, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f9, f18, f16, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f9, f18, f16, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f9, f18, f16, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f9, f18, f16, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x83ff fs2 = 0x0)
li x31, 0x448b754b7d465c92 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f11, 0(x2) # load 0x000083ff from memory into f11
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f5, 0(x2) # load 0x00000000 from memory into f5
li x3, 0x2d553c3a09956ac8 # load x3 with value 0x2d553c3a09956ac8
sw x3, 0(x2) # store 0x2d553c3a09956ac8 in memory
flh f23, 0(x2) # load 0x2d553c3a09956ac8 from memory into f23
fnmadd.h f31, f11, f5, f23, dyn # perform operation
fnmadd.h f31, f11, f5, f23, rdn # perform operation
fnmadd.h f31, f11, f5, f23, rmm # perform operation
fnmadd.h f31, f11, f5, f23, rne # perform operation
fnmadd.h f31, f11, f5, f23, rtz # perform operation
fnmadd.h f31, f11, f5, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f31, f11, f5, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f31, f11, f5, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f31, f11, f5, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f31, f11, f5, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f31, f11, f5, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x83ff fs2 = 0x8000)
li x3, 0x49b9bd9990dbddae # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f17, 0(x2) # load 0x000083ff from memory into f17
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f1, 0(x2) # load 0x00008000 from memory into f1
li x3, 0x1a1932988b2e340e # load x3 with value 0x1a1932988b2e340e
sw x3, 0(x2) # store 0x1a1932988b2e340e in memory
flh f10, 0(x2) # load 0x1a1932988b2e340e from memory into f10
fnmadd.h f3, f17, f1, f10, dyn # perform operation
fnmadd.h f3, f17, f1, f10, rdn # perform operation
fnmadd.h f3, f17, f1, f10, rmm # perform operation
fnmadd.h f3, f17, f1, f10, rne # perform operation
fnmadd.h f3, f17, f1, f10, rtz # perform operation
fnmadd.h f3, f17, f1, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f3, f17, f1, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f3, f17, f1, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f3, f17, f1, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f3, f17, f1, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f3, f17, f1, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x83ff fs2 = 0x3c00)
li x28, 0xf5d459c371184e19 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f5, 0(x2) # load 0x000083ff from memory into f5
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f11, 0(x2) # load 0x00003c00 from memory into f11
li x3, 0x88a2e57c501ae3ef # load x3 with value 0x88a2e57c501ae3ef
sw x3, 0(x2) # store 0x88a2e57c501ae3ef in memory
flh f26, 0(x2) # load 0x88a2e57c501ae3ef from memory into f26
fnmadd.h f28, f5, f11, f26, dyn # perform operation
fnmadd.h f28, f5, f11, f26, rdn # perform operation
fnmadd.h f28, f5, f11, f26, rmm # perform operation
fnmadd.h f28, f5, f11, f26, rne # perform operation
fnmadd.h f28, f5, f11, f26, rtz # perform operation
fnmadd.h f28, f5, f11, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f28, f5, f11, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f28, f5, f11, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f28, f5, f11, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f28, f5, f11, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f28, f5, f11, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x83ff fs2 = 0xbc00)
li x23, 0xd48bb961ebc9e245 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f16, 0(x2) # load 0x000083ff from memory into f16
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f4, 0(x2) # load 0x0000bc00 from memory into f4
li x3, 0x6452bdbfb7100060 # load x3 with value 0x6452bdbfb7100060
sw x3, 0(x2) # store 0x6452bdbfb7100060 in memory
flh f14, 0(x2) # load 0x6452bdbfb7100060 from memory into f14
fnmadd.h f23, f16, f4, f14, dyn # perform operation
fnmadd.h f23, f16, f4, f14, rdn # perform operation
fnmadd.h f23, f16, f4, f14, rmm # perform operation
fnmadd.h f23, f16, f4, f14, rne # perform operation
fnmadd.h f23, f16, f4, f14, rtz # perform operation
fnmadd.h f23, f16, f4, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f23, f16, f4, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f23, f16, f4, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f23, f16, f4, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f23, f16, f4, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f23, f16, f4, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x83ff fs2 = 0x3e00)
li x19, 0x4ac29a144c16fde9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f2, 0(x2) # load 0x000083ff from memory into f2
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f9, 0(x2) # load 0x00003e00 from memory into f9
li x3, 0xb09a495b56378841 # load x3 with value 0xb09a495b56378841
sw x3, 0(x2) # store 0xb09a495b56378841 in memory
flh f17, 0(x2) # load 0xb09a495b56378841 from memory into f17
fnmadd.h f19, f2, f9, f17, dyn # perform operation
fnmadd.h f19, f2, f9, f17, rdn # perform operation
fnmadd.h f19, f2, f9, f17, rmm # perform operation
fnmadd.h f19, f2, f9, f17, rne # perform operation
fnmadd.h f19, f2, f9, f17, rtz # perform operation
fnmadd.h f19, f2, f9, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f19, f2, f9, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f19, f2, f9, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f19, f2, f9, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f19, f2, f9, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f19, f2, f9, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x83ff fs2 = 0xbe00)
li x2, 0x6706fa69ff4eceac # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f9, 0(x2) # load 0x000083ff from memory into f9
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f5, 0(x2) # load 0x0000be00 from memory into f5
li x3, 0xd7abc3ed6203e376 # load x3 with value 0xd7abc3ed6203e376
sw x3, 0(x2) # store 0xd7abc3ed6203e376 in memory
flh f13, 0(x2) # load 0xd7abc3ed6203e376 from memory into f13
fnmadd.h f2, f9, f5, f13, dyn # perform operation
fnmadd.h f2, f9, f5, f13, rdn # perform operation
fnmadd.h f2, f9, f5, f13, rmm # perform operation
fnmadd.h f2, f9, f5, f13, rne # perform operation
fnmadd.h f2, f9, f5, f13, rtz # perform operation
fnmadd.h f2, f9, f5, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f2, f9, f5, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f2, f9, f5, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f2, f9, f5, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f2, f9, f5, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f2, f9, f5, f13 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x83ff fs2 = 0x4000)
li x26, 0xd510690a2859be04 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f18, 0(x2) # load 0x000083ff from memory into f18
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f1, 0(x2) # load 0x00004000 from memory into f1
li x3, 0xceb3e9b2e6628f60 # load x3 with value 0xceb3e9b2e6628f60
sw x3, 0(x2) # store 0xceb3e9b2e6628f60 in memory
flh f31, 0(x2) # load 0xceb3e9b2e6628f60 from memory into f31
fnmadd.h f26, f18, f1, f31, dyn # perform operation
fnmadd.h f26, f18, f1, f31, rdn # perform operation
fnmadd.h f26, f18, f1, f31, rmm # perform operation
fnmadd.h f26, f18, f1, f31, rne # perform operation
fnmadd.h f26, f18, f1, f31, rtz # perform operation
fnmadd.h f26, f18, f1, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f26, f18, f1, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f26, f18, f1, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f26, f18, f1, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f26, f18, f1, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f26, f18, f1, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x83ff fs2 = 0xc000)
li x3, 0xdeb19fa19288c1c3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f1, 0(x2) # load 0x000083ff from memory into f1
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f6, 0(x2) # load 0x0000c000 from memory into f6
li x3, 0xaf0371992aa21e4 # load x3 with value 0xaf0371992aa21e4
sw x3, 0(x2) # store 0xaf0371992aa21e4 in memory
flh f19, 0(x2) # load 0xaf0371992aa21e4 from memory into f19
fnmadd.h f3, f1, f6, f19, dyn # perform operation
fnmadd.h f3, f1, f6, f19, rdn # perform operation
fnmadd.h f3, f1, f6, f19, rmm # perform operation
fnmadd.h f3, f1, f6, f19, rne # perform operation
fnmadd.h f3, f1, f6, f19, rtz # perform operation
fnmadd.h f3, f1, f6, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f3, f1, f6, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f3, f1, f6, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f3, f1, f6, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f3, f1, f6, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f3, f1, f6, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x83ff fs2 = 0x400)
li x13, 0xe7cc3c43e9d6a283 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f20, 0(x2) # load 0x000083ff from memory into f20
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f19, 0(x2) # load 0x00000400 from memory into f19
li x3, 0x55f8a975fcfcd73d # load x3 with value 0x55f8a975fcfcd73d
sw x3, 0(x2) # store 0x55f8a975fcfcd73d in memory
flh f9, 0(x2) # load 0x55f8a975fcfcd73d from memory into f9
fnmadd.h f13, f20, f19, f9, dyn # perform operation
fnmadd.h f13, f20, f19, f9, rdn # perform operation
fnmadd.h f13, f20, f19, f9, rmm # perform operation
fnmadd.h f13, f20, f19, f9, rne # perform operation
fnmadd.h f13, f20, f19, f9, rtz # perform operation
fnmadd.h f13, f20, f19, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f13, f20, f19, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f13, f20, f19, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f13, f20, f19, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f13, f20, f19, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f13, f20, f19, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x83ff fs2 = 0x8400)
li x28, 0xc27d48b3f51feb70 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f17, 0(x2) # load 0x000083ff from memory into f17
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f5, 0(x2) # load 0x00008400 from memory into f5
li x3, 0xee77af7437673b01 # load x3 with value 0xee77af7437673b01
sw x3, 0(x2) # store 0xee77af7437673b01 in memory
flh f1, 0(x2) # load 0xee77af7437673b01 from memory into f1
fnmadd.h f28, f17, f5, f1, dyn # perform operation
fnmadd.h f28, f17, f5, f1, rdn # perform operation
fnmadd.h f28, f17, f5, f1, rmm # perform operation
fnmadd.h f28, f17, f5, f1, rne # perform operation
fnmadd.h f28, f17, f5, f1, rtz # perform operation
fnmadd.h f28, f17, f5, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f28, f17, f5, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f28, f17, f5, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f28, f17, f5, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f28, f17, f5, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f28, f17, f5, f1 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x83ff fs2 = 0x7bff)
li x25, 0xa4c22ea8e7b30930 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f21, 0(x2) # load 0x000083ff from memory into f21
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f8, 0(x2) # load 0x00007bff from memory into f8
li x3, 0x53e45ce07826bf9e # load x3 with value 0x53e45ce07826bf9e
sw x3, 0(x2) # store 0x53e45ce07826bf9e in memory
flh f18, 0(x2) # load 0x53e45ce07826bf9e from memory into f18
fnmadd.h f25, f21, f8, f18, dyn # perform operation
fnmadd.h f25, f21, f8, f18, rdn # perform operation
fnmadd.h f25, f21, f8, f18, rmm # perform operation
fnmadd.h f25, f21, f8, f18, rne # perform operation
fnmadd.h f25, f21, f8, f18, rtz # perform operation
fnmadd.h f25, f21, f8, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f25, f21, f8, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f25, f21, f8, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f25, f21, f8, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f25, f21, f8, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f25, f21, f8, f18 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x83ff fs2 = 0xfbff)
li x23, 0x89ae7de092c182ff # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f14, 0(x2) # load 0x000083ff from memory into f14
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f2, 0(x2) # load 0x0000fbff from memory into f2
li x3, 0xf289e4b27458f25e # load x3 with value 0xf289e4b27458f25e
sw x3, 0(x2) # store 0xf289e4b27458f25e in memory
flh f28, 0(x2) # load 0xf289e4b27458f25e from memory into f28
fnmadd.h f23, f14, f2, f28, dyn # perform operation
fnmadd.h f23, f14, f2, f28, rdn # perform operation
fnmadd.h f23, f14, f2, f28, rmm # perform operation
fnmadd.h f23, f14, f2, f28, rne # perform operation
fnmadd.h f23, f14, f2, f28, rtz # perform operation
fnmadd.h f23, f14, f2, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f23, f14, f2, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f23, f14, f2, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f23, f14, f2, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f23, f14, f2, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f23, f14, f2, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x83ff fs2 = 0x3ff)
li x25, 0x8595e3e6165b58e4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f9, 0(x2) # load 0x000083ff from memory into f9
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f26, 0(x2) # load 0x000003ff from memory into f26
li x3, 0x7094445fc1fe868e # load x3 with value 0x7094445fc1fe868e
sw x3, 0(x2) # store 0x7094445fc1fe868e in memory
flh f13, 0(x2) # load 0x7094445fc1fe868e from memory into f13
fnmadd.h f25, f9, f26, f13, dyn # perform operation
fnmadd.h f25, f9, f26, f13, rdn # perform operation
fnmadd.h f25, f9, f26, f13, rmm # perform operation
fnmadd.h f25, f9, f26, f13, rne # perform operation
fnmadd.h f25, f9, f26, f13, rtz # perform operation
fnmadd.h f25, f9, f26, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f25, f9, f26, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f25, f9, f26, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f25, f9, f26, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f25, f9, f26, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f25, f9, f26, f13 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x83ff fs2 = 0x83ff)
li x10, 0x01acdad7d6408f0f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f2, 0(x2) # load 0x000083ff from memory into f2
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f26, 0(x2) # load 0x000083ff from memory into f26
li x3, 0x75d279ce36467458 # load x3 with value 0x75d279ce36467458
sw x3, 0(x2) # store 0x75d279ce36467458 in memory
flh f22, 0(x2) # load 0x75d279ce36467458 from memory into f22
fnmadd.h f10, f2, f26, f22, dyn # perform operation
fnmadd.h f10, f2, f26, f22, rdn # perform operation
fnmadd.h f10, f2, f26, f22, rmm # perform operation
fnmadd.h f10, f2, f26, f22, rne # perform operation
fnmadd.h f10, f2, f26, f22, rtz # perform operation
fnmadd.h f10, f2, f26, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f10, f2, f26, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f10, f2, f26, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f10, f2, f26, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f10, f2, f26, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f10, f2, f26, f22 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x83ff fs2 = 0x200)
li x1, 0x84007e27d216aa08 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f5, 0(x2) # load 0x000083ff from memory into f5
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f21, 0(x2) # load 0x00000200 from memory into f21
li x3, 0x52ad8a5d7864e59c # load x3 with value 0x52ad8a5d7864e59c
sw x3, 0(x2) # store 0x52ad8a5d7864e59c in memory
flh f11, 0(x2) # load 0x52ad8a5d7864e59c from memory into f11
fnmadd.h f1, f5, f21, f11, dyn # perform operation
fnmadd.h f1, f5, f21, f11, rdn # perform operation
fnmadd.h f1, f5, f21, f11, rmm # perform operation
fnmadd.h f1, f5, f21, f11, rne # perform operation
fnmadd.h f1, f5, f21, f11, rtz # perform operation
fnmadd.h f1, f5, f21, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f1, f5, f21, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f1, f5, f21, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f1, f5, f21, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f1, f5, f21, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f1, f5, f21, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x83ff fs2 = 0x8200)
li x6, 0x16965bca3a553190 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f23, 0(x2) # load 0x000083ff from memory into f23
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f30, 0(x2) # load 0x00008200 from memory into f30
li x3, 0xad2f06ba8c3ba5c # load x3 with value 0xad2f06ba8c3ba5c
sw x3, 0(x2) # store 0xad2f06ba8c3ba5c in memory
flh f3, 0(x2) # load 0xad2f06ba8c3ba5c from memory into f3
fnmadd.h f6, f23, f30, f3, dyn # perform operation
fnmadd.h f6, f23, f30, f3, rdn # perform operation
fnmadd.h f6, f23, f30, f3, rmm # perform operation
fnmadd.h f6, f23, f30, f3, rne # perform operation
fnmadd.h f6, f23, f30, f3, rtz # perform operation
fnmadd.h f6, f23, f30, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f6, f23, f30, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f6, f23, f30, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f6, f23, f30, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f6, f23, f30, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f6, f23, f30, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x83ff fs2 = 0x1)
li x29, 0x0fdb7aec8454f98b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f26, 0(x2) # load 0x000083ff from memory into f26
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f18, 0(x2) # load 0x00000001 from memory into f18
li x3, 0x9a9b0d4f3006d02d # load x3 with value 0x9a9b0d4f3006d02d
sw x3, 0(x2) # store 0x9a9b0d4f3006d02d in memory
flh f25, 0(x2) # load 0x9a9b0d4f3006d02d from memory into f25
fnmadd.h f29, f26, f18, f25, dyn # perform operation
fnmadd.h f29, f26, f18, f25, rdn # perform operation
fnmadd.h f29, f26, f18, f25, rmm # perform operation
fnmadd.h f29, f26, f18, f25, rne # perform operation
fnmadd.h f29, f26, f18, f25, rtz # perform operation
fnmadd.h f29, f26, f18, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f29, f26, f18, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f29, f26, f18, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f29, f26, f18, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f29, f26, f18, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f29, f26, f18, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x83ff fs2 = 0x8001)
li x3, 0xaa82f58c67cbb2cf # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f2, 0(x2) # load 0x000083ff from memory into f2
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f28, 0(x2) # load 0x00008001 from memory into f28
li x3, 0x9548b576f074051 # load x3 with value 0x9548b576f074051
sw x3, 0(x2) # store 0x9548b576f074051 in memory
flh f29, 0(x2) # load 0x9548b576f074051 from memory into f29
fnmadd.h f3, f2, f28, f29, dyn # perform operation
fnmadd.h f3, f2, f28, f29, rdn # perform operation
fnmadd.h f3, f2, f28, f29, rmm # perform operation
fnmadd.h f3, f2, f28, f29, rne # perform operation
fnmadd.h f3, f2, f28, f29, rtz # perform operation
fnmadd.h f3, f2, f28, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f3, f2, f28, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f3, f2, f28, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f3, f2, f28, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f3, f2, f28, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f3, f2, f28, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x83ff fs2 = 0x7c00)
li x24, 0xdc1ff2fca7a9c2e6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f27, 0(x2) # load 0x000083ff from memory into f27
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f29, 0(x2) # load 0x00007c00 from memory into f29
li x3, 0x5de28f3b7c63bfef # load x3 with value 0x5de28f3b7c63bfef
sw x3, 0(x2) # store 0x5de28f3b7c63bfef in memory
flh f12, 0(x2) # load 0x5de28f3b7c63bfef from memory into f12
fnmadd.h f24, f27, f29, f12, dyn # perform operation
fnmadd.h f24, f27, f29, f12, rdn # perform operation
fnmadd.h f24, f27, f29, f12, rmm # perform operation
fnmadd.h f24, f27, f29, f12, rne # perform operation
fnmadd.h f24, f27, f29, f12, rtz # perform operation
fnmadd.h f24, f27, f29, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f24, f27, f29, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f24, f27, f29, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f24, f27, f29, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f24, f27, f29, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f24, f27, f29, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x83ff fs2 = 0xfc00)
li x9, 0x7b8dedd04308e426 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f6, 0(x2) # load 0x000083ff from memory into f6
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f16, 0(x2) # load 0x0000fc00 from memory into f16
li x3, 0xbe882b1850c8d96c # load x3 with value 0xbe882b1850c8d96c
sw x3, 0(x2) # store 0xbe882b1850c8d96c in memory
flh f12, 0(x2) # load 0xbe882b1850c8d96c from memory into f12
fnmadd.h f9, f6, f16, f12, dyn # perform operation
fnmadd.h f9, f6, f16, f12, rdn # perform operation
fnmadd.h f9, f6, f16, f12, rmm # perform operation
fnmadd.h f9, f6, f16, f12, rne # perform operation
fnmadd.h f9, f6, f16, f12, rtz # perform operation
fnmadd.h f9, f6, f16, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f9, f6, f16, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f9, f6, f16, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f9, f6, f16, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f9, f6, f16, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f9, f6, f16, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x83ff fs2 = 0x7e00)
li x11, 0xec0e5dcd2d5f6952 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f9, 0(x2) # load 0x000083ff from memory into f9
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f30, 0(x2) # load 0x00007e00 from memory into f30
li x3, 0x623c769a8870c10f # load x3 with value 0x623c769a8870c10f
sw x3, 0(x2) # store 0x623c769a8870c10f in memory
flh f31, 0(x2) # load 0x623c769a8870c10f from memory into f31
fnmadd.h f11, f9, f30, f31, dyn # perform operation
fnmadd.h f11, f9, f30, f31, rdn # perform operation
fnmadd.h f11, f9, f30, f31, rmm # perform operation
fnmadd.h f11, f9, f30, f31, rne # perform operation
fnmadd.h f11, f9, f30, f31, rtz # perform operation
fnmadd.h f11, f9, f30, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f11, f9, f30, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f11, f9, f30, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f11, f9, f30, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f11, f9, f30, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f11, f9, f30, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x83ff fs2 = 0x7fff)
li x3, 0xe9f30c8bc38d1e97 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f24, 0(x2) # load 0x000083ff from memory into f24
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f9, 0(x2) # load 0x00007fff from memory into f9
li x3, 0x7a375d210935caa # load x3 with value 0x7a375d210935caa
sw x3, 0(x2) # store 0x7a375d210935caa in memory
flh f2, 0(x2) # load 0x7a375d210935caa from memory into f2
fnmadd.h f3, f24, f9, f2, dyn # perform operation
fnmadd.h f3, f24, f9, f2, rdn # perform operation
fnmadd.h f3, f24, f9, f2, rmm # perform operation
fnmadd.h f3, f24, f9, f2, rne # perform operation
fnmadd.h f3, f24, f9, f2, rtz # perform operation
fnmadd.h f3, f24, f9, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f3, f24, f9, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f3, f24, f9, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f3, f24, f9, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f3, f24, f9, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f3, f24, f9, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x83ff fs2 = 0x7c01)
li x26, 0x81ecb34c474abbe7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f25, 0(x2) # load 0x000083ff from memory into f25
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f9, 0(x2) # load 0x00007c01 from memory into f9
li x3, 0x7ee4977787427110 # load x3 with value 0x7ee4977787427110
sw x3, 0(x2) # store 0x7ee4977787427110 in memory
flh f31, 0(x2) # load 0x7ee4977787427110 from memory into f31
fnmadd.h f26, f25, f9, f31, dyn # perform operation
fnmadd.h f26, f25, f9, f31, rdn # perform operation
fnmadd.h f26, f25, f9, f31, rmm # perform operation
fnmadd.h f26, f25, f9, f31, rne # perform operation
fnmadd.h f26, f25, f9, f31, rtz # perform operation
fnmadd.h f26, f25, f9, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f26, f25, f9, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f26, f25, f9, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f26, f25, f9, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f26, f25, f9, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f26, f25, f9, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x83ff fs2 = 0x7dff)
li x14, 0xbb223830a6a2ff0c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f6, 0(x2) # load 0x000083ff from memory into f6
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f25, 0(x2) # load 0x00007dff from memory into f25
li x3, 0xdb0a365e196d2b6e # load x3 with value 0xdb0a365e196d2b6e
sw x3, 0(x2) # store 0xdb0a365e196d2b6e in memory
flh f11, 0(x2) # load 0xdb0a365e196d2b6e from memory into f11
fnmadd.h f14, f6, f25, f11, dyn # perform operation
fnmadd.h f14, f6, f25, f11, rdn # perform operation
fnmadd.h f14, f6, f25, f11, rmm # perform operation
fnmadd.h f14, f6, f25, f11, rne # perform operation
fnmadd.h f14, f6, f25, f11, rtz # perform operation
fnmadd.h f14, f6, f25, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f14, f6, f25, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f14, f6, f25, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f14, f6, f25, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f14, f6, f25, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f14, f6, f25, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x83ff fs2 = 0x58b4)
li x12, 0x1b53208ed01e1c1a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f21, 0(x2) # load 0x000083ff from memory into f21
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f11, 0(x2) # load 0x000058b4 from memory into f11
li x3, 0xf1fcf4d50e94fda0 # load x3 with value 0xf1fcf4d50e94fda0
sw x3, 0(x2) # store 0xf1fcf4d50e94fda0 in memory
flh f28, 0(x2) # load 0xf1fcf4d50e94fda0 from memory into f28
fnmadd.h f12, f21, f11, f28, dyn # perform operation
fnmadd.h f12, f21, f11, f28, rdn # perform operation
fnmadd.h f12, f21, f11, f28, rmm # perform operation
fnmadd.h f12, f21, f11, f28, rne # perform operation
fnmadd.h f12, f21, f11, f28, rtz # perform operation
fnmadd.h f12, f21, f11, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f12, f21, f11, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f12, f21, f11, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f12, f21, f11, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f12, f21, f11, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f12, f21, f11, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x83ff fs2 = 0xc93a)
li x9, 0xb9aef18935e3c09b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f20, 0(x2) # load 0x000083ff from memory into f20
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f28, 0(x2) # load 0x0000c93a from memory into f28
li x3, 0xb746fbf136027eeb # load x3 with value 0xb746fbf136027eeb
sw x3, 0(x2) # store 0xb746fbf136027eeb in memory
flh f23, 0(x2) # load 0xb746fbf136027eeb from memory into f23
fnmadd.h f9, f20, f28, f23, dyn # perform operation
fnmadd.h f9, f20, f28, f23, rdn # perform operation
fnmadd.h f9, f20, f28, f23, rmm # perform operation
fnmadd.h f9, f20, f28, f23, rne # perform operation
fnmadd.h f9, f20, f28, f23, rtz # perform operation
fnmadd.h f9, f20, f28, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f9, f20, f28, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f9, f20, f28, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f9, f20, f28, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f9, f20, f28, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f9, f20, f28, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x200 fs2 = 0x0)
li x11, 0xd78d0d55fe1b0085 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f30, 0(x2) # load 0x00000200 from memory into f30
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f21, 0(x2) # load 0x00000000 from memory into f21
li x3, 0x7530ddf1e88de711 # load x3 with value 0x7530ddf1e88de711
sw x3, 0(x2) # store 0x7530ddf1e88de711 in memory
flh f22, 0(x2) # load 0x7530ddf1e88de711 from memory into f22
fnmadd.h f11, f30, f21, f22, dyn # perform operation
fnmadd.h f11, f30, f21, f22, rdn # perform operation
fnmadd.h f11, f30, f21, f22, rmm # perform operation
fnmadd.h f11, f30, f21, f22, rne # perform operation
fnmadd.h f11, f30, f21, f22, rtz # perform operation
fnmadd.h f11, f30, f21, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f11, f30, f21, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f11, f30, f21, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f11, f30, f21, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f11, f30, f21, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f11, f30, f21, f22 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x200 fs2 = 0x8000)
li x2, 0x4b9de96cabd6814a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f20, 0(x2) # load 0x00000200 from memory into f20
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f8, 0(x2) # load 0x00008000 from memory into f8
li x3, 0x6eb24ece50daf459 # load x3 with value 0x6eb24ece50daf459
sw x3, 0(x2) # store 0x6eb24ece50daf459 in memory
flh f27, 0(x2) # load 0x6eb24ece50daf459 from memory into f27
fnmadd.h f2, f20, f8, f27, dyn # perform operation
fnmadd.h f2, f20, f8, f27, rdn # perform operation
fnmadd.h f2, f20, f8, f27, rmm # perform operation
fnmadd.h f2, f20, f8, f27, rne # perform operation
fnmadd.h f2, f20, f8, f27, rtz # perform operation
fnmadd.h f2, f20, f8, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f2, f20, f8, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f2, f20, f8, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f2, f20, f8, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f2, f20, f8, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f2, f20, f8, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x200 fs2 = 0x3c00)
li x24, 0x6751424485845b17 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f27, 0(x2) # load 0x00000200 from memory into f27
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f17, 0(x2) # load 0x00003c00 from memory into f17
li x3, 0x72e1debbbb278d35 # load x3 with value 0x72e1debbbb278d35
sw x3, 0(x2) # store 0x72e1debbbb278d35 in memory
flh f15, 0(x2) # load 0x72e1debbbb278d35 from memory into f15
fnmadd.h f24, f27, f17, f15, dyn # perform operation
fnmadd.h f24, f27, f17, f15, rdn # perform operation
fnmadd.h f24, f27, f17, f15, rmm # perform operation
fnmadd.h f24, f27, f17, f15, rne # perform operation
fnmadd.h f24, f27, f17, f15, rtz # perform operation
fnmadd.h f24, f27, f17, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f24, f27, f17, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f24, f27, f17, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f24, f27, f17, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f24, f27, f17, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f24, f27, f17, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x200 fs2 = 0xbc00)
li x17, 0xc196f66e3a29db25 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f13, 0(x2) # load 0x00000200 from memory into f13
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f10, 0(x2) # load 0x0000bc00 from memory into f10
li x3, 0xc385b007415fdf71 # load x3 with value 0xc385b007415fdf71
sw x3, 0(x2) # store 0xc385b007415fdf71 in memory
flh f6, 0(x2) # load 0xc385b007415fdf71 from memory into f6
fnmadd.h f17, f13, f10, f6, dyn # perform operation
fnmadd.h f17, f13, f10, f6, rdn # perform operation
fnmadd.h f17, f13, f10, f6, rmm # perform operation
fnmadd.h f17, f13, f10, f6, rne # perform operation
fnmadd.h f17, f13, f10, f6, rtz # perform operation
fnmadd.h f17, f13, f10, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f17, f13, f10, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f17, f13, f10, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f17, f13, f10, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f17, f13, f10, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f17, f13, f10, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x200 fs2 = 0x3e00)
li x9, 0x38b385a402b1f1a1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f17, 0(x2) # load 0x00000200 from memory into f17
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f29, 0(x2) # load 0x00003e00 from memory into f29
li x3, 0xdcf9513ca744982b # load x3 with value 0xdcf9513ca744982b
sw x3, 0(x2) # store 0xdcf9513ca744982b in memory
flh f24, 0(x2) # load 0xdcf9513ca744982b from memory into f24
fnmadd.h f9, f17, f29, f24, dyn # perform operation
fnmadd.h f9, f17, f29, f24, rdn # perform operation
fnmadd.h f9, f17, f29, f24, rmm # perform operation
fnmadd.h f9, f17, f29, f24, rne # perform operation
fnmadd.h f9, f17, f29, f24, rtz # perform operation
fnmadd.h f9, f17, f29, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f9, f17, f29, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f9, f17, f29, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f9, f17, f29, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f9, f17, f29, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f9, f17, f29, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x200 fs2 = 0xbe00)
li x27, 0xa808dc6008145244 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f25, 0(x2) # load 0x00000200 from memory into f25
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f2, 0(x2) # load 0x0000be00 from memory into f2
li x3, 0x463aafdd555171db # load x3 with value 0x463aafdd555171db
sw x3, 0(x2) # store 0x463aafdd555171db in memory
flh f29, 0(x2) # load 0x463aafdd555171db from memory into f29
fnmadd.h f27, f25, f2, f29, dyn # perform operation
fnmadd.h f27, f25, f2, f29, rdn # perform operation
fnmadd.h f27, f25, f2, f29, rmm # perform operation
fnmadd.h f27, f25, f2, f29, rne # perform operation
fnmadd.h f27, f25, f2, f29, rtz # perform operation
fnmadd.h f27, f25, f2, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f27, f25, f2, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f27, f25, f2, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f27, f25, f2, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f27, f25, f2, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f27, f25, f2, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x200 fs2 = 0x4000)
li x27, 0x049d9bd8dd72b32b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f20, 0(x2) # load 0x00000200 from memory into f20
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f21, 0(x2) # load 0x00004000 from memory into f21
li x3, 0xe4aac69a662a8bbb # load x3 with value 0xe4aac69a662a8bbb
sw x3, 0(x2) # store 0xe4aac69a662a8bbb in memory
flh f9, 0(x2) # load 0xe4aac69a662a8bbb from memory into f9
fnmadd.h f27, f20, f21, f9, dyn # perform operation
fnmadd.h f27, f20, f21, f9, rdn # perform operation
fnmadd.h f27, f20, f21, f9, rmm # perform operation
fnmadd.h f27, f20, f21, f9, rne # perform operation
fnmadd.h f27, f20, f21, f9, rtz # perform operation
fnmadd.h f27, f20, f21, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f27, f20, f21, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f27, f20, f21, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f27, f20, f21, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f27, f20, f21, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f27, f20, f21, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x200 fs2 = 0xc000)
li x6, 0x39fbf373b77ef3c8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f9, 0(x2) # load 0x00000200 from memory into f9
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f5, 0(x2) # load 0x0000c000 from memory into f5
li x3, 0xcf29f88969de3202 # load x3 with value 0xcf29f88969de3202
sw x3, 0(x2) # store 0xcf29f88969de3202 in memory
flh f13, 0(x2) # load 0xcf29f88969de3202 from memory into f13
fnmadd.h f6, f9, f5, f13, dyn # perform operation
fnmadd.h f6, f9, f5, f13, rdn # perform operation
fnmadd.h f6, f9, f5, f13, rmm # perform operation
fnmadd.h f6, f9, f5, f13, rne # perform operation
fnmadd.h f6, f9, f5, f13, rtz # perform operation
fnmadd.h f6, f9, f5, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f6, f9, f5, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f6, f9, f5, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f6, f9, f5, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f6, f9, f5, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f6, f9, f5, f13 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x200 fs2 = 0x400)
li x9, 0x1640abae90f5d445 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f18, 0(x2) # load 0x00000200 from memory into f18
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f1, 0(x2) # load 0x00000400 from memory into f1
li x3, 0xb35bded4310b7924 # load x3 with value 0xb35bded4310b7924
sw x3, 0(x2) # store 0xb35bded4310b7924 in memory
flh f23, 0(x2) # load 0xb35bded4310b7924 from memory into f23
fnmadd.h f9, f18, f1, f23, dyn # perform operation
fnmadd.h f9, f18, f1, f23, rdn # perform operation
fnmadd.h f9, f18, f1, f23, rmm # perform operation
fnmadd.h f9, f18, f1, f23, rne # perform operation
fnmadd.h f9, f18, f1, f23, rtz # perform operation
fnmadd.h f9, f18, f1, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f9, f18, f1, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f9, f18, f1, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f9, f18, f1, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f9, f18, f1, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f9, f18, f1, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x200 fs2 = 0x8400)
li x10, 0x19abb3efcaa8e517 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f31, 0(x2) # load 0x00000200 from memory into f31
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f22, 0(x2) # load 0x00008400 from memory into f22
li x3, 0xfdcab45047360dd2 # load x3 with value 0xfdcab45047360dd2
sw x3, 0(x2) # store 0xfdcab45047360dd2 in memory
flh f18, 0(x2) # load 0xfdcab45047360dd2 from memory into f18
fnmadd.h f10, f31, f22, f18, dyn # perform operation
fnmadd.h f10, f31, f22, f18, rdn # perform operation
fnmadd.h f10, f31, f22, f18, rmm # perform operation
fnmadd.h f10, f31, f22, f18, rne # perform operation
fnmadd.h f10, f31, f22, f18, rtz # perform operation
fnmadd.h f10, f31, f22, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f10, f31, f22, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f10, f31, f22, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f10, f31, f22, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f10, f31, f22, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f10, f31, f22, f18 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x200 fs2 = 0x7bff)
li x11, 0x5928789892928089 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f27, 0(x2) # load 0x00000200 from memory into f27
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f16, 0(x2) # load 0x00007bff from memory into f16
li x3, 0x704aaf898833b5b3 # load x3 with value 0x704aaf898833b5b3
sw x3, 0(x2) # store 0x704aaf898833b5b3 in memory
flh f23, 0(x2) # load 0x704aaf898833b5b3 from memory into f23
fnmadd.h f11, f27, f16, f23, dyn # perform operation
fnmadd.h f11, f27, f16, f23, rdn # perform operation
fnmadd.h f11, f27, f16, f23, rmm # perform operation
fnmadd.h f11, f27, f16, f23, rne # perform operation
fnmadd.h f11, f27, f16, f23, rtz # perform operation
fnmadd.h f11, f27, f16, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f11, f27, f16, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f11, f27, f16, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f11, f27, f16, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f11, f27, f16, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f11, f27, f16, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x200 fs2 = 0xfbff)
li x17, 0x4ce21bc5c0130ed6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f9, 0(x2) # load 0x00000200 from memory into f9
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f15, 0(x2) # load 0x0000fbff from memory into f15
li x3, 0xdc22ef37703ccc3a # load x3 with value 0xdc22ef37703ccc3a
sw x3, 0(x2) # store 0xdc22ef37703ccc3a in memory
flh f4, 0(x2) # load 0xdc22ef37703ccc3a from memory into f4
fnmadd.h f17, f9, f15, f4, dyn # perform operation
fnmadd.h f17, f9, f15, f4, rdn # perform operation
fnmadd.h f17, f9, f15, f4, rmm # perform operation
fnmadd.h f17, f9, f15, f4, rne # perform operation
fnmadd.h f17, f9, f15, f4, rtz # perform operation
fnmadd.h f17, f9, f15, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f17, f9, f15, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f17, f9, f15, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f17, f9, f15, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f17, f9, f15, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f17, f9, f15, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x200 fs2 = 0x3ff)
li x18, 0xc117a2ee24145b43 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f23, 0(x2) # load 0x00000200 from memory into f23
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f3, 0(x2) # load 0x000003ff from memory into f3
li x3, 0x3b5e9fab5c17f3ab # load x3 with value 0x3b5e9fab5c17f3ab
sw x3, 0(x2) # store 0x3b5e9fab5c17f3ab in memory
flh f12, 0(x2) # load 0x3b5e9fab5c17f3ab from memory into f12
fnmadd.h f18, f23, f3, f12, dyn # perform operation
fnmadd.h f18, f23, f3, f12, rdn # perform operation
fnmadd.h f18, f23, f3, f12, rmm # perform operation
fnmadd.h f18, f23, f3, f12, rne # perform operation
fnmadd.h f18, f23, f3, f12, rtz # perform operation
fnmadd.h f18, f23, f3, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f18, f23, f3, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f18, f23, f3, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f18, f23, f3, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f18, f23, f3, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f18, f23, f3, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x200 fs2 = 0x83ff)
li x12, 0x395455d44a807c78 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f13, 0(x2) # load 0x00000200 from memory into f13
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f17, 0(x2) # load 0x000083ff from memory into f17
li x3, 0x13c4de14a2566606 # load x3 with value 0x13c4de14a2566606
sw x3, 0(x2) # store 0x13c4de14a2566606 in memory
flh f29, 0(x2) # load 0x13c4de14a2566606 from memory into f29
fnmadd.h f12, f13, f17, f29, dyn # perform operation
fnmadd.h f12, f13, f17, f29, rdn # perform operation
fnmadd.h f12, f13, f17, f29, rmm # perform operation
fnmadd.h f12, f13, f17, f29, rne # perform operation
fnmadd.h f12, f13, f17, f29, rtz # perform operation
fnmadd.h f12, f13, f17, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f12, f13, f17, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f12, f13, f17, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f12, f13, f17, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f12, f13, f17, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f12, f13, f17, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x200 fs2 = 0x200)
li x11, 0xa4998fc2fd08a22b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f24, 0(x2) # load 0x00000200 from memory into f24
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f13, 0(x2) # load 0x00000200 from memory into f13
li x3, 0x896eff88e9d90acd # load x3 with value 0x896eff88e9d90acd
sw x3, 0(x2) # store 0x896eff88e9d90acd in memory
flh f14, 0(x2) # load 0x896eff88e9d90acd from memory into f14
fnmadd.h f11, f24, f13, f14, dyn # perform operation
fnmadd.h f11, f24, f13, f14, rdn # perform operation
fnmadd.h f11, f24, f13, f14, rmm # perform operation
fnmadd.h f11, f24, f13, f14, rne # perform operation
fnmadd.h f11, f24, f13, f14, rtz # perform operation
fnmadd.h f11, f24, f13, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f11, f24, f13, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f11, f24, f13, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f11, f24, f13, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f11, f24, f13, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f11, f24, f13, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x200 fs2 = 0x8200)
li x3, 0x546bef80d97c52e2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f16, 0(x2) # load 0x00000200 from memory into f16
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f27, 0(x2) # load 0x00008200 from memory into f27
li x3, 0xb70833fd7e6cb321 # load x3 with value 0xb70833fd7e6cb321
sw x3, 0(x2) # store 0xb70833fd7e6cb321 in memory
flh f22, 0(x2) # load 0xb70833fd7e6cb321 from memory into f22
fnmadd.h f3, f16, f27, f22, dyn # perform operation
fnmadd.h f3, f16, f27, f22, rdn # perform operation
fnmadd.h f3, f16, f27, f22, rmm # perform operation
fnmadd.h f3, f16, f27, f22, rne # perform operation
fnmadd.h f3, f16, f27, f22, rtz # perform operation
fnmadd.h f3, f16, f27, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f3, f16, f27, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f3, f16, f27, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f3, f16, f27, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f3, f16, f27, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f3, f16, f27, f22 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x200 fs2 = 0x1)
li x19, 0x08eb28b055df6ff8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f21, 0(x2) # load 0x00000200 from memory into f21
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f27, 0(x2) # load 0x00000001 from memory into f27
li x3, 0x9cbd25a60eaf3c24 # load x3 with value 0x9cbd25a60eaf3c24
sw x3, 0(x2) # store 0x9cbd25a60eaf3c24 in memory
flh f26, 0(x2) # load 0x9cbd25a60eaf3c24 from memory into f26
fnmadd.h f19, f21, f27, f26, dyn # perform operation
fnmadd.h f19, f21, f27, f26, rdn # perform operation
fnmadd.h f19, f21, f27, f26, rmm # perform operation
fnmadd.h f19, f21, f27, f26, rne # perform operation
fnmadd.h f19, f21, f27, f26, rtz # perform operation
fnmadd.h f19, f21, f27, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f19, f21, f27, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f19, f21, f27, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f19, f21, f27, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f19, f21, f27, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f19, f21, f27, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x200 fs2 = 0x8001)
li x9, 0x3e6cfcb9fc833184 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f3, 0(x2) # load 0x00000200 from memory into f3
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f31, 0(x2) # load 0x00008001 from memory into f31
li x3, 0xe0d64fff96dd37af # load x3 with value 0xe0d64fff96dd37af
sw x3, 0(x2) # store 0xe0d64fff96dd37af in memory
flh f26, 0(x2) # load 0xe0d64fff96dd37af from memory into f26
fnmadd.h f9, f3, f31, f26, dyn # perform operation
fnmadd.h f9, f3, f31, f26, rdn # perform operation
fnmadd.h f9, f3, f31, f26, rmm # perform operation
fnmadd.h f9, f3, f31, f26, rne # perform operation
fnmadd.h f9, f3, f31, f26, rtz # perform operation
fnmadd.h f9, f3, f31, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f9, f3, f31, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f9, f3, f31, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f9, f3, f31, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f9, f3, f31, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f9, f3, f31, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x200 fs2 = 0x7c00)
li x3, 0x985fe575fe79e53e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f17, 0(x2) # load 0x00000200 from memory into f17
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f26, 0(x2) # load 0x00007c00 from memory into f26
li x3, 0x8600a2f6c6ffdc56 # load x3 with value 0x8600a2f6c6ffdc56
sw x3, 0(x2) # store 0x8600a2f6c6ffdc56 in memory
flh f6, 0(x2) # load 0x8600a2f6c6ffdc56 from memory into f6
fnmadd.h f3, f17, f26, f6, dyn # perform operation
fnmadd.h f3, f17, f26, f6, rdn # perform operation
fnmadd.h f3, f17, f26, f6, rmm # perform operation
fnmadd.h f3, f17, f26, f6, rne # perform operation
fnmadd.h f3, f17, f26, f6, rtz # perform operation
fnmadd.h f3, f17, f26, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f3, f17, f26, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f3, f17, f26, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f3, f17, f26, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f3, f17, f26, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f3, f17, f26, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x200 fs2 = 0xfc00)
li x28, 0x36c660047f27dbed # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f8, 0(x2) # load 0x00000200 from memory into f8
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f1, 0(x2) # load 0x0000fc00 from memory into f1
li x3, 0xe941d13e007dc414 # load x3 with value 0xe941d13e007dc414
sw x3, 0(x2) # store 0xe941d13e007dc414 in memory
flh f20, 0(x2) # load 0xe941d13e007dc414 from memory into f20
fnmadd.h f28, f8, f1, f20, dyn # perform operation
fnmadd.h f28, f8, f1, f20, rdn # perform operation
fnmadd.h f28, f8, f1, f20, rmm # perform operation
fnmadd.h f28, f8, f1, f20, rne # perform operation
fnmadd.h f28, f8, f1, f20, rtz # perform operation
fnmadd.h f28, f8, f1, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f28, f8, f1, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f28, f8, f1, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f28, f8, f1, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f28, f8, f1, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f28, f8, f1, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x200 fs2 = 0x7e00)
li x9, 0x76b56fd3bd468a97 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f24, 0(x2) # load 0x00000200 from memory into f24
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f16, 0(x2) # load 0x00007e00 from memory into f16
li x3, 0xe365769c2a8935de # load x3 with value 0xe365769c2a8935de
sw x3, 0(x2) # store 0xe365769c2a8935de in memory
flh f7, 0(x2) # load 0xe365769c2a8935de from memory into f7
fnmadd.h f9, f24, f16, f7, dyn # perform operation
fnmadd.h f9, f24, f16, f7, rdn # perform operation
fnmadd.h f9, f24, f16, f7, rmm # perform operation
fnmadd.h f9, f24, f16, f7, rne # perform operation
fnmadd.h f9, f24, f16, f7, rtz # perform operation
fnmadd.h f9, f24, f16, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f9, f24, f16, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f9, f24, f16, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f9, f24, f16, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f9, f24, f16, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f9, f24, f16, f7 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x200 fs2 = 0x7fff)
li x28, 0x412eefe579f61b47 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f16, 0(x2) # load 0x00000200 from memory into f16
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f27, 0(x2) # load 0x00007fff from memory into f27
li x3, 0x42ea58b70ed3b9b7 # load x3 with value 0x42ea58b70ed3b9b7
sw x3, 0(x2) # store 0x42ea58b70ed3b9b7 in memory
flh f20, 0(x2) # load 0x42ea58b70ed3b9b7 from memory into f20
fnmadd.h f28, f16, f27, f20, dyn # perform operation
fnmadd.h f28, f16, f27, f20, rdn # perform operation
fnmadd.h f28, f16, f27, f20, rmm # perform operation
fnmadd.h f28, f16, f27, f20, rne # perform operation
fnmadd.h f28, f16, f27, f20, rtz # perform operation
fnmadd.h f28, f16, f27, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f28, f16, f27, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f28, f16, f27, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f28, f16, f27, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f28, f16, f27, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f28, f16, f27, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x200 fs2 = 0x7c01)
li x22, 0x17fa5a38aafbc28d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f3, 0(x2) # load 0x00000200 from memory into f3
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f30, 0(x2) # load 0x00007c01 from memory into f30
li x3, 0x91a8edc15c2ecdf6 # load x3 with value 0x91a8edc15c2ecdf6
sw x3, 0(x2) # store 0x91a8edc15c2ecdf6 in memory
flh f12, 0(x2) # load 0x91a8edc15c2ecdf6 from memory into f12
fnmadd.h f22, f3, f30, f12, dyn # perform operation
fnmadd.h f22, f3, f30, f12, rdn # perform operation
fnmadd.h f22, f3, f30, f12, rmm # perform operation
fnmadd.h f22, f3, f30, f12, rne # perform operation
fnmadd.h f22, f3, f30, f12, rtz # perform operation
fnmadd.h f22, f3, f30, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f22, f3, f30, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f22, f3, f30, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f22, f3, f30, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f22, f3, f30, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f22, f3, f30, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x200 fs2 = 0x7dff)
li x10, 0x81441902917ca349 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f16, 0(x2) # load 0x00000200 from memory into f16
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f7, 0(x2) # load 0x00007dff from memory into f7
li x3, 0x3e26c1a7a59df780 # load x3 with value 0x3e26c1a7a59df780
sw x3, 0(x2) # store 0x3e26c1a7a59df780 in memory
flh f22, 0(x2) # load 0x3e26c1a7a59df780 from memory into f22
fnmadd.h f10, f16, f7, f22, dyn # perform operation
fnmadd.h f10, f16, f7, f22, rdn # perform operation
fnmadd.h f10, f16, f7, f22, rmm # perform operation
fnmadd.h f10, f16, f7, f22, rne # perform operation
fnmadd.h f10, f16, f7, f22, rtz # perform operation
fnmadd.h f10, f16, f7, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f10, f16, f7, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f10, f16, f7, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f10, f16, f7, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f10, f16, f7, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f10, f16, f7, f22 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x200 fs2 = 0x58b4)
li x8, 0x3712862a59a0c508 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f1, 0(x2) # load 0x00000200 from memory into f1
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f24, 0(x2) # load 0x000058b4 from memory into f24
li x3, 0x3c0c7bf8bd87dc7a # load x3 with value 0x3c0c7bf8bd87dc7a
sw x3, 0(x2) # store 0x3c0c7bf8bd87dc7a in memory
flh f23, 0(x2) # load 0x3c0c7bf8bd87dc7a from memory into f23
fnmadd.h f8, f1, f24, f23, dyn # perform operation
fnmadd.h f8, f1, f24, f23, rdn # perform operation
fnmadd.h f8, f1, f24, f23, rmm # perform operation
fnmadd.h f8, f1, f24, f23, rne # perform operation
fnmadd.h f8, f1, f24, f23, rtz # perform operation
fnmadd.h f8, f1, f24, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f8, f1, f24, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f8, f1, f24, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f8, f1, f24, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f8, f1, f24, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f8, f1, f24, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x200 fs2 = 0xc93a)
li x21, 0x38d1653fd2eb24a9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f1, 0(x2) # load 0x00000200 from memory into f1
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f23, 0(x2) # load 0x0000c93a from memory into f23
li x3, 0x8e22cf0faed497e9 # load x3 with value 0x8e22cf0faed497e9
sw x3, 0(x2) # store 0x8e22cf0faed497e9 in memory
flh f14, 0(x2) # load 0x8e22cf0faed497e9 from memory into f14
fnmadd.h f21, f1, f23, f14, dyn # perform operation
fnmadd.h f21, f1, f23, f14, rdn # perform operation
fnmadd.h f21, f1, f23, f14, rmm # perform operation
fnmadd.h f21, f1, f23, f14, rne # perform operation
fnmadd.h f21, f1, f23, f14, rtz # perform operation
fnmadd.h f21, f1, f23, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f21, f1, f23, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f21, f1, f23, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f21, f1, f23, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f21, f1, f23, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f21, f1, f23, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8200 fs2 = 0x0)
li x24, 0x010a44a063212466 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f11, 0(x2) # load 0x00008200 from memory into f11
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f5, 0(x2) # load 0x00000000 from memory into f5
li x3, 0xd7b1974123ec5508 # load x3 with value 0xd7b1974123ec5508
sw x3, 0(x2) # store 0xd7b1974123ec5508 in memory
flh f23, 0(x2) # load 0xd7b1974123ec5508 from memory into f23
fnmadd.h f24, f11, f5, f23, dyn # perform operation
fnmadd.h f24, f11, f5, f23, rdn # perform operation
fnmadd.h f24, f11, f5, f23, rmm # perform operation
fnmadd.h f24, f11, f5, f23, rne # perform operation
fnmadd.h f24, f11, f5, f23, rtz # perform operation
fnmadd.h f24, f11, f5, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f24, f11, f5, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f24, f11, f5, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f24, f11, f5, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f24, f11, f5, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f24, f11, f5, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8200 fs2 = 0x8000)
li x1, 0xbf8e2d5b958e9a24 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f11, 0(x2) # load 0x00008200 from memory into f11
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f27, 0(x2) # load 0x00008000 from memory into f27
li x3, 0x5c4966c1311aa0f0 # load x3 with value 0x5c4966c1311aa0f0
sw x3, 0(x2) # store 0x5c4966c1311aa0f0 in memory
flh f19, 0(x2) # load 0x5c4966c1311aa0f0 from memory into f19
fnmadd.h f1, f11, f27, f19, dyn # perform operation
fnmadd.h f1, f11, f27, f19, rdn # perform operation
fnmadd.h f1, f11, f27, f19, rmm # perform operation
fnmadd.h f1, f11, f27, f19, rne # perform operation
fnmadd.h f1, f11, f27, f19, rtz # perform operation
fnmadd.h f1, f11, f27, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f1, f11, f27, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f1, f11, f27, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f1, f11, f27, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f1, f11, f27, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f1, f11, f27, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8200 fs2 = 0x3c00)
li x28, 0x2c5f174261366f2b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f7, 0(x2) # load 0x00008200 from memory into f7
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f1, 0(x2) # load 0x00003c00 from memory into f1
li x3, 0x2e99235699769979 # load x3 with value 0x2e99235699769979
sw x3, 0(x2) # store 0x2e99235699769979 in memory
flh f22, 0(x2) # load 0x2e99235699769979 from memory into f22
fnmadd.h f28, f7, f1, f22, dyn # perform operation
fnmadd.h f28, f7, f1, f22, rdn # perform operation
fnmadd.h f28, f7, f1, f22, rmm # perform operation
fnmadd.h f28, f7, f1, f22, rne # perform operation
fnmadd.h f28, f7, f1, f22, rtz # perform operation
fnmadd.h f28, f7, f1, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f28, f7, f1, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f28, f7, f1, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f28, f7, f1, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f28, f7, f1, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f28, f7, f1, f22 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8200 fs2 = 0xbc00)
li x26, 0xf239727abdfcd5cd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f25, 0(x2) # load 0x00008200 from memory into f25
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f5, 0(x2) # load 0x0000bc00 from memory into f5
li x3, 0x6bf396d1f3ed8a30 # load x3 with value 0x6bf396d1f3ed8a30
sw x3, 0(x2) # store 0x6bf396d1f3ed8a30 in memory
flh f6, 0(x2) # load 0x6bf396d1f3ed8a30 from memory into f6
fnmadd.h f26, f25, f5, f6, dyn # perform operation
fnmadd.h f26, f25, f5, f6, rdn # perform operation
fnmadd.h f26, f25, f5, f6, rmm # perform operation
fnmadd.h f26, f25, f5, f6, rne # perform operation
fnmadd.h f26, f25, f5, f6, rtz # perform operation
fnmadd.h f26, f25, f5, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f26, f25, f5, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f26, f25, f5, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f26, f25, f5, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f26, f25, f5, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f26, f25, f5, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8200 fs2 = 0x3e00)
li x1, 0xc13b76fb30296fa7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f21, 0(x2) # load 0x00008200 from memory into f21
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f22, 0(x2) # load 0x00003e00 from memory into f22
li x3, 0xcee9ae6c8a6ed31f # load x3 with value 0xcee9ae6c8a6ed31f
sw x3, 0(x2) # store 0xcee9ae6c8a6ed31f in memory
flh f27, 0(x2) # load 0xcee9ae6c8a6ed31f from memory into f27
fnmadd.h f1, f21, f22, f27, dyn # perform operation
fnmadd.h f1, f21, f22, f27, rdn # perform operation
fnmadd.h f1, f21, f22, f27, rmm # perform operation
fnmadd.h f1, f21, f22, f27, rne # perform operation
fnmadd.h f1, f21, f22, f27, rtz # perform operation
fnmadd.h f1, f21, f22, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f1, f21, f22, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f1, f21, f22, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f1, f21, f22, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f1, f21, f22, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f1, f21, f22, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8200 fs2 = 0xbe00)
li x25, 0x602b93f1187c3291 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f23, 0(x2) # load 0x00008200 from memory into f23
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f2, 0(x2) # load 0x0000be00 from memory into f2
li x3, 0x51a5b81a8574dcf4 # load x3 with value 0x51a5b81a8574dcf4
sw x3, 0(x2) # store 0x51a5b81a8574dcf4 in memory
flh f30, 0(x2) # load 0x51a5b81a8574dcf4 from memory into f30
fnmadd.h f25, f23, f2, f30, dyn # perform operation
fnmadd.h f25, f23, f2, f30, rdn # perform operation
fnmadd.h f25, f23, f2, f30, rmm # perform operation
fnmadd.h f25, f23, f2, f30, rne # perform operation
fnmadd.h f25, f23, f2, f30, rtz # perform operation
fnmadd.h f25, f23, f2, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f25, f23, f2, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f25, f23, f2, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f25, f23, f2, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f25, f23, f2, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f25, f23, f2, f30 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8200 fs2 = 0x4000)
li x11, 0x993a85d3a58ecc1c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f19, 0(x2) # load 0x00008200 from memory into f19
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f5, 0(x2) # load 0x00004000 from memory into f5
li x3, 0x4e13bfdbb354029 # load x3 with value 0x4e13bfdbb354029
sw x3, 0(x2) # store 0x4e13bfdbb354029 in memory
flh f24, 0(x2) # load 0x4e13bfdbb354029 from memory into f24
fnmadd.h f11, f19, f5, f24, dyn # perform operation
fnmadd.h f11, f19, f5, f24, rdn # perform operation
fnmadd.h f11, f19, f5, f24, rmm # perform operation
fnmadd.h f11, f19, f5, f24, rne # perform operation
fnmadd.h f11, f19, f5, f24, rtz # perform operation
fnmadd.h f11, f19, f5, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f11, f19, f5, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f11, f19, f5, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f11, f19, f5, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f11, f19, f5, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f11, f19, f5, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8200 fs2 = 0xc000)
li x18, 0x85a88932a64ea080 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f2, 0(x2) # load 0x00008200 from memory into f2
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f16, 0(x2) # load 0x0000c000 from memory into f16
li x3, 0xceefca948433175 # load x3 with value 0xceefca948433175
sw x3, 0(x2) # store 0xceefca948433175 in memory
flh f4, 0(x2) # load 0xceefca948433175 from memory into f4
fnmadd.h f18, f2, f16, f4, dyn # perform operation
fnmadd.h f18, f2, f16, f4, rdn # perform operation
fnmadd.h f18, f2, f16, f4, rmm # perform operation
fnmadd.h f18, f2, f16, f4, rne # perform operation
fnmadd.h f18, f2, f16, f4, rtz # perform operation
fnmadd.h f18, f2, f16, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f18, f2, f16, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f18, f2, f16, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f18, f2, f16, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f18, f2, f16, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f18, f2, f16, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8200 fs2 = 0x400)
li x20, 0x3f852fbee685fb06 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f24, 0(x2) # load 0x00008200 from memory into f24
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f11, 0(x2) # load 0x00000400 from memory into f11
li x3, 0x1cb15b5fc0857175 # load x3 with value 0x1cb15b5fc0857175
sw x3, 0(x2) # store 0x1cb15b5fc0857175 in memory
flh f26, 0(x2) # load 0x1cb15b5fc0857175 from memory into f26
fnmadd.h f20, f24, f11, f26, dyn # perform operation
fnmadd.h f20, f24, f11, f26, rdn # perform operation
fnmadd.h f20, f24, f11, f26, rmm # perform operation
fnmadd.h f20, f24, f11, f26, rne # perform operation
fnmadd.h f20, f24, f11, f26, rtz # perform operation
fnmadd.h f20, f24, f11, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f20, f24, f11, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f20, f24, f11, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f20, f24, f11, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f20, f24, f11, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f20, f24, f11, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8200 fs2 = 0x8400)
li x14, 0x2b9219ecb7e55cbe # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f28, 0(x2) # load 0x00008200 from memory into f28
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f25, 0(x2) # load 0x00008400 from memory into f25
li x3, 0xbb9bba81c97844e4 # load x3 with value 0xbb9bba81c97844e4
sw x3, 0(x2) # store 0xbb9bba81c97844e4 in memory
flh f8, 0(x2) # load 0xbb9bba81c97844e4 from memory into f8
fnmadd.h f14, f28, f25, f8, dyn # perform operation
fnmadd.h f14, f28, f25, f8, rdn # perform operation
fnmadd.h f14, f28, f25, f8, rmm # perform operation
fnmadd.h f14, f28, f25, f8, rne # perform operation
fnmadd.h f14, f28, f25, f8, rtz # perform operation
fnmadd.h f14, f28, f25, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f14, f28, f25, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f14, f28, f25, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f14, f28, f25, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f14, f28, f25, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f14, f28, f25, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8200 fs2 = 0x7bff)
li x3, 0x334085a5b2421342 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f6, 0(x2) # load 0x00008200 from memory into f6
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f31, 0(x2) # load 0x00007bff from memory into f31
li x3, 0x549177e8b7bb6354 # load x3 with value 0x549177e8b7bb6354
sw x3, 0(x2) # store 0x549177e8b7bb6354 in memory
flh f30, 0(x2) # load 0x549177e8b7bb6354 from memory into f30
fnmadd.h f3, f6, f31, f30, dyn # perform operation
fnmadd.h f3, f6, f31, f30, rdn # perform operation
fnmadd.h f3, f6, f31, f30, rmm # perform operation
fnmadd.h f3, f6, f31, f30, rne # perform operation
fnmadd.h f3, f6, f31, f30, rtz # perform operation
fnmadd.h f3, f6, f31, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f3, f6, f31, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f3, f6, f31, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f3, f6, f31, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f3, f6, f31, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f3, f6, f31, f30 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8200 fs2 = 0xfbff)
li x15, 0x1c1c1504c965f799 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f9, 0(x2) # load 0x00008200 from memory into f9
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f14, 0(x2) # load 0x0000fbff from memory into f14
li x3, 0x3b47b5deb4627e6f # load x3 with value 0x3b47b5deb4627e6f
sw x3, 0(x2) # store 0x3b47b5deb4627e6f in memory
flh f31, 0(x2) # load 0x3b47b5deb4627e6f from memory into f31
fnmadd.h f15, f9, f14, f31, dyn # perform operation
fnmadd.h f15, f9, f14, f31, rdn # perform operation
fnmadd.h f15, f9, f14, f31, rmm # perform operation
fnmadd.h f15, f9, f14, f31, rne # perform operation
fnmadd.h f15, f9, f14, f31, rtz # perform operation
fnmadd.h f15, f9, f14, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f15, f9, f14, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f15, f9, f14, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f15, f9, f14, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f15, f9, f14, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f15, f9, f14, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8200 fs2 = 0x3ff)
li x12, 0x517774724e143c2c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f28, 0(x2) # load 0x00008200 from memory into f28
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f20, 0(x2) # load 0x000003ff from memory into f20
li x3, 0x2da91738d2a09259 # load x3 with value 0x2da91738d2a09259
sw x3, 0(x2) # store 0x2da91738d2a09259 in memory
flh f24, 0(x2) # load 0x2da91738d2a09259 from memory into f24
fnmadd.h f12, f28, f20, f24, dyn # perform operation
fnmadd.h f12, f28, f20, f24, rdn # perform operation
fnmadd.h f12, f28, f20, f24, rmm # perform operation
fnmadd.h f12, f28, f20, f24, rne # perform operation
fnmadd.h f12, f28, f20, f24, rtz # perform operation
fnmadd.h f12, f28, f20, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f12, f28, f20, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f12, f28, f20, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f12, f28, f20, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f12, f28, f20, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f12, f28, f20, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8200 fs2 = 0x83ff)
li x4, 0xb26849c703938693 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f6, 0(x2) # load 0x00008200 from memory into f6
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f26, 0(x2) # load 0x000083ff from memory into f26
li x3, 0x2fdc4dceee20b489 # load x3 with value 0x2fdc4dceee20b489
sw x3, 0(x2) # store 0x2fdc4dceee20b489 in memory
flh f17, 0(x2) # load 0x2fdc4dceee20b489 from memory into f17
fnmadd.h f4, f6, f26, f17, dyn # perform operation
fnmadd.h f4, f6, f26, f17, rdn # perform operation
fnmadd.h f4, f6, f26, f17, rmm # perform operation
fnmadd.h f4, f6, f26, f17, rne # perform operation
fnmadd.h f4, f6, f26, f17, rtz # perform operation
fnmadd.h f4, f6, f26, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f4, f6, f26, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f4, f6, f26, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f4, f6, f26, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f4, f6, f26, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f4, f6, f26, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8200 fs2 = 0x200)
li x13, 0x34d057cf1806593d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f14, 0(x2) # load 0x00008200 from memory into f14
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f25, 0(x2) # load 0x00000200 from memory into f25
li x3, 0x9fda120666c93bb4 # load x3 with value 0x9fda120666c93bb4
sw x3, 0(x2) # store 0x9fda120666c93bb4 in memory
flh f6, 0(x2) # load 0x9fda120666c93bb4 from memory into f6
fnmadd.h f13, f14, f25, f6, dyn # perform operation
fnmadd.h f13, f14, f25, f6, rdn # perform operation
fnmadd.h f13, f14, f25, f6, rmm # perform operation
fnmadd.h f13, f14, f25, f6, rne # perform operation
fnmadd.h f13, f14, f25, f6, rtz # perform operation
fnmadd.h f13, f14, f25, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f13, f14, f25, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f13, f14, f25, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f13, f14, f25, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f13, f14, f25, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f13, f14, f25, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8200 fs2 = 0x8200)
li x4, 0x4c3a1e4d8c6a4a72 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f12, 0(x2) # load 0x00008200 from memory into f12
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f17, 0(x2) # load 0x00008200 from memory into f17
li x3, 0x29a20ea0f4226c1a # load x3 with value 0x29a20ea0f4226c1a
sw x3, 0(x2) # store 0x29a20ea0f4226c1a in memory
flh f16, 0(x2) # load 0x29a20ea0f4226c1a from memory into f16
fnmadd.h f4, f12, f17, f16, dyn # perform operation
fnmadd.h f4, f12, f17, f16, rdn # perform operation
fnmadd.h f4, f12, f17, f16, rmm # perform operation
fnmadd.h f4, f12, f17, f16, rne # perform operation
fnmadd.h f4, f12, f17, f16, rtz # perform operation
fnmadd.h f4, f12, f17, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f4, f12, f17, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f4, f12, f17, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f4, f12, f17, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f4, f12, f17, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f4, f12, f17, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8200 fs2 = 0x1)
li x27, 0x0a65c5b6da7e9429 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f12, 0(x2) # load 0x00008200 from memory into f12
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f24, 0(x2) # load 0x00000001 from memory into f24
li x3, 0xe199e961e109f2f7 # load x3 with value 0xe199e961e109f2f7
sw x3, 0(x2) # store 0xe199e961e109f2f7 in memory
flh f13, 0(x2) # load 0xe199e961e109f2f7 from memory into f13
fnmadd.h f27, f12, f24, f13, dyn # perform operation
fnmadd.h f27, f12, f24, f13, rdn # perform operation
fnmadd.h f27, f12, f24, f13, rmm # perform operation
fnmadd.h f27, f12, f24, f13, rne # perform operation
fnmadd.h f27, f12, f24, f13, rtz # perform operation
fnmadd.h f27, f12, f24, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f27, f12, f24, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f27, f12, f24, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f27, f12, f24, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f27, f12, f24, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f27, f12, f24, f13 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8200 fs2 = 0x8001)
li x20, 0x0162b5ce0ac169ed # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f21, 0(x2) # load 0x00008200 from memory into f21
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f3, 0(x2) # load 0x00008001 from memory into f3
li x3, 0xbcf5ddc38462216 # load x3 with value 0xbcf5ddc38462216
sw x3, 0(x2) # store 0xbcf5ddc38462216 in memory
flh f12, 0(x2) # load 0xbcf5ddc38462216 from memory into f12
fnmadd.h f20, f21, f3, f12, dyn # perform operation
fnmadd.h f20, f21, f3, f12, rdn # perform operation
fnmadd.h f20, f21, f3, f12, rmm # perform operation
fnmadd.h f20, f21, f3, f12, rne # perform operation
fnmadd.h f20, f21, f3, f12, rtz # perform operation
fnmadd.h f20, f21, f3, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f20, f21, f3, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f20, f21, f3, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f20, f21, f3, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f20, f21, f3, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f20, f21, f3, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8200 fs2 = 0x7c00)
li x27, 0x41a8eee31b0d98ec # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f29, 0(x2) # load 0x00008200 from memory into f29
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f31, 0(x2) # load 0x00007c00 from memory into f31
li x3, 0x686702f9c811d34c # load x3 with value 0x686702f9c811d34c
sw x3, 0(x2) # store 0x686702f9c811d34c in memory
flh f10, 0(x2) # load 0x686702f9c811d34c from memory into f10
fnmadd.h f27, f29, f31, f10, dyn # perform operation
fnmadd.h f27, f29, f31, f10, rdn # perform operation
fnmadd.h f27, f29, f31, f10, rmm # perform operation
fnmadd.h f27, f29, f31, f10, rne # perform operation
fnmadd.h f27, f29, f31, f10, rtz # perform operation
fnmadd.h f27, f29, f31, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f27, f29, f31, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f27, f29, f31, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f27, f29, f31, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f27, f29, f31, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f27, f29, f31, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8200 fs2 = 0xfc00)
li x19, 0x3890ef927b8a1b49 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f15, 0(x2) # load 0x00008200 from memory into f15
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f18, 0(x2) # load 0x0000fc00 from memory into f18
li x3, 0x5080397c5f6f2e6c # load x3 with value 0x5080397c5f6f2e6c
sw x3, 0(x2) # store 0x5080397c5f6f2e6c in memory
flh f24, 0(x2) # load 0x5080397c5f6f2e6c from memory into f24
fnmadd.h f19, f15, f18, f24, dyn # perform operation
fnmadd.h f19, f15, f18, f24, rdn # perform operation
fnmadd.h f19, f15, f18, f24, rmm # perform operation
fnmadd.h f19, f15, f18, f24, rne # perform operation
fnmadd.h f19, f15, f18, f24, rtz # perform operation
fnmadd.h f19, f15, f18, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f19, f15, f18, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f19, f15, f18, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f19, f15, f18, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f19, f15, f18, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f19, f15, f18, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8200 fs2 = 0x7e00)
li x20, 0xf4fcfd0c33960284 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f27, 0(x2) # load 0x00008200 from memory into f27
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f12, 0(x2) # load 0x00007e00 from memory into f12
li x3, 0xa43d42a3a871018f # load x3 with value 0xa43d42a3a871018f
sw x3, 0(x2) # store 0xa43d42a3a871018f in memory
flh f28, 0(x2) # load 0xa43d42a3a871018f from memory into f28
fnmadd.h f20, f27, f12, f28, dyn # perform operation
fnmadd.h f20, f27, f12, f28, rdn # perform operation
fnmadd.h f20, f27, f12, f28, rmm # perform operation
fnmadd.h f20, f27, f12, f28, rne # perform operation
fnmadd.h f20, f27, f12, f28, rtz # perform operation
fnmadd.h f20, f27, f12, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f20, f27, f12, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f20, f27, f12, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f20, f27, f12, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f20, f27, f12, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f20, f27, f12, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8200 fs2 = 0x7fff)
li x7, 0x09a658df200d2945 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f22, 0(x2) # load 0x00008200 from memory into f22
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f15, 0(x2) # load 0x00007fff from memory into f15
li x3, 0x3dcd6f13fca922f5 # load x3 with value 0x3dcd6f13fca922f5
sw x3, 0(x2) # store 0x3dcd6f13fca922f5 in memory
flh f3, 0(x2) # load 0x3dcd6f13fca922f5 from memory into f3
fnmadd.h f7, f22, f15, f3, dyn # perform operation
fnmadd.h f7, f22, f15, f3, rdn # perform operation
fnmadd.h f7, f22, f15, f3, rmm # perform operation
fnmadd.h f7, f22, f15, f3, rne # perform operation
fnmadd.h f7, f22, f15, f3, rtz # perform operation
fnmadd.h f7, f22, f15, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f7, f22, f15, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f7, f22, f15, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f7, f22, f15, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f7, f22, f15, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f7, f22, f15, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8200 fs2 = 0x7c01)
li x4, 0x506705c180e24355 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f6, 0(x2) # load 0x00008200 from memory into f6
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f16, 0(x2) # load 0x00007c01 from memory into f16
li x3, 0x485738323ec7956c # load x3 with value 0x485738323ec7956c
sw x3, 0(x2) # store 0x485738323ec7956c in memory
flh f30, 0(x2) # load 0x485738323ec7956c from memory into f30
fnmadd.h f4, f6, f16, f30, dyn # perform operation
fnmadd.h f4, f6, f16, f30, rdn # perform operation
fnmadd.h f4, f6, f16, f30, rmm # perform operation
fnmadd.h f4, f6, f16, f30, rne # perform operation
fnmadd.h f4, f6, f16, f30, rtz # perform operation
fnmadd.h f4, f6, f16, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f4, f6, f16, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f4, f6, f16, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f4, f6, f16, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f4, f6, f16, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f4, f6, f16, f30 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8200 fs2 = 0x7dff)
li x6, 0x23ac19fa763134d2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f21, 0(x2) # load 0x00008200 from memory into f21
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f26, 0(x2) # load 0x00007dff from memory into f26
li x3, 0x3c463e3a9a73affe # load x3 with value 0x3c463e3a9a73affe
sw x3, 0(x2) # store 0x3c463e3a9a73affe in memory
flh f1, 0(x2) # load 0x3c463e3a9a73affe from memory into f1
fnmadd.h f6, f21, f26, f1, dyn # perform operation
fnmadd.h f6, f21, f26, f1, rdn # perform operation
fnmadd.h f6, f21, f26, f1, rmm # perform operation
fnmadd.h f6, f21, f26, f1, rne # perform operation
fnmadd.h f6, f21, f26, f1, rtz # perform operation
fnmadd.h f6, f21, f26, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f6, f21, f26, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f6, f21, f26, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f6, f21, f26, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f6, f21, f26, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f6, f21, f26, f1 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8200 fs2 = 0x58b4)
li x24, 0xbabfe9d4ef76157a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f18, 0(x2) # load 0x00008200 from memory into f18
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f3, 0(x2) # load 0x000058b4 from memory into f3
li x3, 0xc6ecf714fa5e4e60 # load x3 with value 0xc6ecf714fa5e4e60
sw x3, 0(x2) # store 0xc6ecf714fa5e4e60 in memory
flh f28, 0(x2) # load 0xc6ecf714fa5e4e60 from memory into f28
fnmadd.h f24, f18, f3, f28, dyn # perform operation
fnmadd.h f24, f18, f3, f28, rdn # perform operation
fnmadd.h f24, f18, f3, f28, rmm # perform operation
fnmadd.h f24, f18, f3, f28, rne # perform operation
fnmadd.h f24, f18, f3, f28, rtz # perform operation
fnmadd.h f24, f18, f3, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f24, f18, f3, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f24, f18, f3, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f24, f18, f3, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f24, f18, f3, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f24, f18, f3, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8200 fs2 = 0xc93a)
li x25, 0x82df06e4df5d79f7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f12, 0(x2) # load 0x00008200 from memory into f12
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f2, 0(x2) # load 0x0000c93a from memory into f2
li x3, 0x317c36b1d0f0ffca # load x3 with value 0x317c36b1d0f0ffca
sw x3, 0(x2) # store 0x317c36b1d0f0ffca in memory
flh f19, 0(x2) # load 0x317c36b1d0f0ffca from memory into f19
fnmadd.h f25, f12, f2, f19, dyn # perform operation
fnmadd.h f25, f12, f2, f19, rdn # perform operation
fnmadd.h f25, f12, f2, f19, rmm # perform operation
fnmadd.h f25, f12, f2, f19, rne # perform operation
fnmadd.h f25, f12, f2, f19, rtz # perform operation
fnmadd.h f25, f12, f2, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f25, f12, f2, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f25, f12, f2, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f25, f12, f2, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f25, f12, f2, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f25, f12, f2, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x0)
li x30, 0x4720d36cb8c6e341 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f11, 0(x2) # load 0x00000001 from memory into f11
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f13, 0(x2) # load 0x00000000 from memory into f13
li x3, 0xa6f79b3c0768f731 # load x3 with value 0xa6f79b3c0768f731
sw x3, 0(x2) # store 0xa6f79b3c0768f731 in memory
flh f24, 0(x2) # load 0xa6f79b3c0768f731 from memory into f24
fnmadd.h f30, f11, f13, f24, dyn # perform operation
fnmadd.h f30, f11, f13, f24, rdn # perform operation
fnmadd.h f30, f11, f13, f24, rmm # perform operation
fnmadd.h f30, f11, f13, f24, rne # perform operation
fnmadd.h f30, f11, f13, f24, rtz # perform operation
fnmadd.h f30, f11, f13, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f30, f11, f13, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f30, f11, f13, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f30, f11, f13, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f30, f11, f13, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f30, f11, f13, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x8000)
li x19, 0x1d503301994d2d5f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f8, 0(x2) # load 0x00000001 from memory into f8
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f2, 0(x2) # load 0x00008000 from memory into f2
li x3, 0xa8f560d5bad5eeb1 # load x3 with value 0xa8f560d5bad5eeb1
sw x3, 0(x2) # store 0xa8f560d5bad5eeb1 in memory
flh f25, 0(x2) # load 0xa8f560d5bad5eeb1 from memory into f25
fnmadd.h f19, f8, f2, f25, dyn # perform operation
fnmadd.h f19, f8, f2, f25, rdn # perform operation
fnmadd.h f19, f8, f2, f25, rmm # perform operation
fnmadd.h f19, f8, f2, f25, rne # perform operation
fnmadd.h f19, f8, f2, f25, rtz # perform operation
fnmadd.h f19, f8, f2, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f19, f8, f2, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f19, f8, f2, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f19, f8, f2, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f19, f8, f2, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f19, f8, f2, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x3c00)
li x8, 0xca236d14ad818dd9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f20, 0(x2) # load 0x00000001 from memory into f20
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f17, 0(x2) # load 0x00003c00 from memory into f17
li x3, 0xd6326e1a5c8b4177 # load x3 with value 0xd6326e1a5c8b4177
sw x3, 0(x2) # store 0xd6326e1a5c8b4177 in memory
flh f12, 0(x2) # load 0xd6326e1a5c8b4177 from memory into f12
fnmadd.h f8, f20, f17, f12, dyn # perform operation
fnmadd.h f8, f20, f17, f12, rdn # perform operation
fnmadd.h f8, f20, f17, f12, rmm # perform operation
fnmadd.h f8, f20, f17, f12, rne # perform operation
fnmadd.h f8, f20, f17, f12, rtz # perform operation
fnmadd.h f8, f20, f17, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f8, f20, f17, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f8, f20, f17, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f8, f20, f17, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f8, f20, f17, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f8, f20, f17, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0xbc00)
li x31, 0x6f909e515b35cc72 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f5, 0(x2) # load 0x00000001 from memory into f5
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f1, 0(x2) # load 0x0000bc00 from memory into f1
li x3, 0xf8449e284f815981 # load x3 with value 0xf8449e284f815981
sw x3, 0(x2) # store 0xf8449e284f815981 in memory
flh f25, 0(x2) # load 0xf8449e284f815981 from memory into f25
fnmadd.h f31, f5, f1, f25, dyn # perform operation
fnmadd.h f31, f5, f1, f25, rdn # perform operation
fnmadd.h f31, f5, f1, f25, rmm # perform operation
fnmadd.h f31, f5, f1, f25, rne # perform operation
fnmadd.h f31, f5, f1, f25, rtz # perform operation
fnmadd.h f31, f5, f1, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f31, f5, f1, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f31, f5, f1, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f31, f5, f1, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f31, f5, f1, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f31, f5, f1, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x3e00)
li x9, 0xc7bbd0df5265d0c2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f2, 0(x2) # load 0x00000001 from memory into f2
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f29, 0(x2) # load 0x00003e00 from memory into f29
li x3, 0x662672ce2b7737d6 # load x3 with value 0x662672ce2b7737d6
sw x3, 0(x2) # store 0x662672ce2b7737d6 in memory
flh f11, 0(x2) # load 0x662672ce2b7737d6 from memory into f11
fnmadd.h f9, f2, f29, f11, dyn # perform operation
fnmadd.h f9, f2, f29, f11, rdn # perform operation
fnmadd.h f9, f2, f29, f11, rmm # perform operation
fnmadd.h f9, f2, f29, f11, rne # perform operation
fnmadd.h f9, f2, f29, f11, rtz # perform operation
fnmadd.h f9, f2, f29, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f9, f2, f29, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f9, f2, f29, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f9, f2, f29, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f9, f2, f29, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f9, f2, f29, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0xbe00)
li x29, 0x245de74b49493204 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f15, 0(x2) # load 0x00000001 from memory into f15
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f20, 0(x2) # load 0x0000be00 from memory into f20
li x3, 0xe7b310f41718952f # load x3 with value 0xe7b310f41718952f
sw x3, 0(x2) # store 0xe7b310f41718952f in memory
flh f2, 0(x2) # load 0xe7b310f41718952f from memory into f2
fnmadd.h f29, f15, f20, f2, dyn # perform operation
fnmadd.h f29, f15, f20, f2, rdn # perform operation
fnmadd.h f29, f15, f20, f2, rmm # perform operation
fnmadd.h f29, f15, f20, f2, rne # perform operation
fnmadd.h f29, f15, f20, f2, rtz # perform operation
fnmadd.h f29, f15, f20, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f29, f15, f20, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f29, f15, f20, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f29, f15, f20, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f29, f15, f20, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f29, f15, f20, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x4000)
li x26, 0xfa755ff81d697696 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f27, 0(x2) # load 0x00000001 from memory into f27
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f15, 0(x2) # load 0x00004000 from memory into f15
li x3, 0x32343783ac6eb903 # load x3 with value 0x32343783ac6eb903
sw x3, 0(x2) # store 0x32343783ac6eb903 in memory
flh f4, 0(x2) # load 0x32343783ac6eb903 from memory into f4
fnmadd.h f26, f27, f15, f4, dyn # perform operation
fnmadd.h f26, f27, f15, f4, rdn # perform operation
fnmadd.h f26, f27, f15, f4, rmm # perform operation
fnmadd.h f26, f27, f15, f4, rne # perform operation
fnmadd.h f26, f27, f15, f4, rtz # perform operation
fnmadd.h f26, f27, f15, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f26, f27, f15, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f26, f27, f15, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f26, f27, f15, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f26, f27, f15, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f26, f27, f15, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0xc000)
li x1, 0xa1e88b0a1734b27f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f7, 0(x2) # load 0x00000001 from memory into f7
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f30, 0(x2) # load 0x0000c000 from memory into f30
li x3, 0x40423ff68f280792 # load x3 with value 0x40423ff68f280792
sw x3, 0(x2) # store 0x40423ff68f280792 in memory
flh f28, 0(x2) # load 0x40423ff68f280792 from memory into f28
fnmadd.h f1, f7, f30, f28, dyn # perform operation
fnmadd.h f1, f7, f30, f28, rdn # perform operation
fnmadd.h f1, f7, f30, f28, rmm # perform operation
fnmadd.h f1, f7, f30, f28, rne # perform operation
fnmadd.h f1, f7, f30, f28, rtz # perform operation
fnmadd.h f1, f7, f30, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f1, f7, f30, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f1, f7, f30, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f1, f7, f30, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f1, f7, f30, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f1, f7, f30, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x400)
li x1, 0x14014ccdc35cd34e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f14, 0(x2) # load 0x00000001 from memory into f14
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f5, 0(x2) # load 0x00000400 from memory into f5
li x3, 0x973a3f66ecf1fa48 # load x3 with value 0x973a3f66ecf1fa48
sw x3, 0(x2) # store 0x973a3f66ecf1fa48 in memory
flh f8, 0(x2) # load 0x973a3f66ecf1fa48 from memory into f8
fnmadd.h f1, f14, f5, f8, dyn # perform operation
fnmadd.h f1, f14, f5, f8, rdn # perform operation
fnmadd.h f1, f14, f5, f8, rmm # perform operation
fnmadd.h f1, f14, f5, f8, rne # perform operation
fnmadd.h f1, f14, f5, f8, rtz # perform operation
fnmadd.h f1, f14, f5, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f1, f14, f5, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f1, f14, f5, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f1, f14, f5, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f1, f14, f5, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f1, f14, f5, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x8400)
li x20, 0xc0e78495ee49d992 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f14, 0(x2) # load 0x00000001 from memory into f14
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f16, 0(x2) # load 0x00008400 from memory into f16
li x3, 0x732ecf976c038a5d # load x3 with value 0x732ecf976c038a5d
sw x3, 0(x2) # store 0x732ecf976c038a5d in memory
flh f28, 0(x2) # load 0x732ecf976c038a5d from memory into f28
fnmadd.h f20, f14, f16, f28, dyn # perform operation
fnmadd.h f20, f14, f16, f28, rdn # perform operation
fnmadd.h f20, f14, f16, f28, rmm # perform operation
fnmadd.h f20, f14, f16, f28, rne # perform operation
fnmadd.h f20, f14, f16, f28, rtz # perform operation
fnmadd.h f20, f14, f16, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f20, f14, f16, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f20, f14, f16, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f20, f14, f16, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f20, f14, f16, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f20, f14, f16, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x7bff)
li x30, 0x30ce56eaaada2d40 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f17, 0(x2) # load 0x00000001 from memory into f17
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f28, 0(x2) # load 0x00007bff from memory into f28
li x3, 0xfcc2357472a52c0a # load x3 with value 0xfcc2357472a52c0a
sw x3, 0(x2) # store 0xfcc2357472a52c0a in memory
flh f24, 0(x2) # load 0xfcc2357472a52c0a from memory into f24
fnmadd.h f30, f17, f28, f24, dyn # perform operation
fnmadd.h f30, f17, f28, f24, rdn # perform operation
fnmadd.h f30, f17, f28, f24, rmm # perform operation
fnmadd.h f30, f17, f28, f24, rne # perform operation
fnmadd.h f30, f17, f28, f24, rtz # perform operation
fnmadd.h f30, f17, f28, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f30, f17, f28, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f30, f17, f28, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f30, f17, f28, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f30, f17, f28, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f30, f17, f28, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0xfbff)
li x11, 0x882cc18c8c7e7c07 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f2, 0(x2) # load 0x00000001 from memory into f2
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f30, 0(x2) # load 0x0000fbff from memory into f30
li x3, 0x9667e59c3b21df85 # load x3 with value 0x9667e59c3b21df85
sw x3, 0(x2) # store 0x9667e59c3b21df85 in memory
flh f7, 0(x2) # load 0x9667e59c3b21df85 from memory into f7
fnmadd.h f11, f2, f30, f7, dyn # perform operation
fnmadd.h f11, f2, f30, f7, rdn # perform operation
fnmadd.h f11, f2, f30, f7, rmm # perform operation
fnmadd.h f11, f2, f30, f7, rne # perform operation
fnmadd.h f11, f2, f30, f7, rtz # perform operation
fnmadd.h f11, f2, f30, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f11, f2, f30, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f11, f2, f30, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f11, f2, f30, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f11, f2, f30, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f11, f2, f30, f7 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x3ff)
li x9, 0x39246aabbef51b75 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f26, 0(x2) # load 0x00000001 from memory into f26
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f25, 0(x2) # load 0x000003ff from memory into f25
li x3, 0x31fb71657ffe78bd # load x3 with value 0x31fb71657ffe78bd
sw x3, 0(x2) # store 0x31fb71657ffe78bd in memory
flh f17, 0(x2) # load 0x31fb71657ffe78bd from memory into f17
fnmadd.h f9, f26, f25, f17, dyn # perform operation
fnmadd.h f9, f26, f25, f17, rdn # perform operation
fnmadd.h f9, f26, f25, f17, rmm # perform operation
fnmadd.h f9, f26, f25, f17, rne # perform operation
fnmadd.h f9, f26, f25, f17, rtz # perform operation
fnmadd.h f9, f26, f25, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f9, f26, f25, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f9, f26, f25, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f9, f26, f25, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f9, f26, f25, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f9, f26, f25, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x83ff)
li x22, 0xa7d50344842b89a7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f30, 0(x2) # load 0x00000001 from memory into f30
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f26, 0(x2) # load 0x000083ff from memory into f26
li x3, 0x3a91ecd570b632b1 # load x3 with value 0x3a91ecd570b632b1
sw x3, 0(x2) # store 0x3a91ecd570b632b1 in memory
flh f2, 0(x2) # load 0x3a91ecd570b632b1 from memory into f2
fnmadd.h f22, f30, f26, f2, dyn # perform operation
fnmadd.h f22, f30, f26, f2, rdn # perform operation
fnmadd.h f22, f30, f26, f2, rmm # perform operation
fnmadd.h f22, f30, f26, f2, rne # perform operation
fnmadd.h f22, f30, f26, f2, rtz # perform operation
fnmadd.h f22, f30, f26, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f22, f30, f26, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f22, f30, f26, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f22, f30, f26, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f22, f30, f26, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f22, f30, f26, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x200)
li x20, 0xef1ea64917124d6d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f22, 0(x2) # load 0x00000001 from memory into f22
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f13, 0(x2) # load 0x00000200 from memory into f13
li x3, 0x3f606703e15cdf46 # load x3 with value 0x3f606703e15cdf46
sw x3, 0(x2) # store 0x3f606703e15cdf46 in memory
flh f19, 0(x2) # load 0x3f606703e15cdf46 from memory into f19
fnmadd.h f20, f22, f13, f19, dyn # perform operation
fnmadd.h f20, f22, f13, f19, rdn # perform operation
fnmadd.h f20, f22, f13, f19, rmm # perform operation
fnmadd.h f20, f22, f13, f19, rne # perform operation
fnmadd.h f20, f22, f13, f19, rtz # perform operation
fnmadd.h f20, f22, f13, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f20, f22, f13, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f20, f22, f13, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f20, f22, f13, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f20, f22, f13, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f20, f22, f13, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x8200)
li x21, 0x45802748bf510f37 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f13, 0(x2) # load 0x00000001 from memory into f13
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f1, 0(x2) # load 0x00008200 from memory into f1
li x3, 0xae08b2ae1b2d7beb # load x3 with value 0xae08b2ae1b2d7beb
sw x3, 0(x2) # store 0xae08b2ae1b2d7beb in memory
flh f6, 0(x2) # load 0xae08b2ae1b2d7beb from memory into f6
fnmadd.h f21, f13, f1, f6, dyn # perform operation
fnmadd.h f21, f13, f1, f6, rdn # perform operation
fnmadd.h f21, f13, f1, f6, rmm # perform operation
fnmadd.h f21, f13, f1, f6, rne # perform operation
fnmadd.h f21, f13, f1, f6, rtz # perform operation
fnmadd.h f21, f13, f1, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f21, f13, f1, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f21, f13, f1, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f21, f13, f1, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f21, f13, f1, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f21, f13, f1, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x1)
li x9, 0xb5b3c1c0edb14e2f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f16, 0(x2) # load 0x00000001 from memory into f16
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f29, 0(x2) # load 0x00000001 from memory into f29
li x3, 0x2c26a00e902883a1 # load x3 with value 0x2c26a00e902883a1
sw x3, 0(x2) # store 0x2c26a00e902883a1 in memory
flh f3, 0(x2) # load 0x2c26a00e902883a1 from memory into f3
fnmadd.h f9, f16, f29, f3, dyn # perform operation
fnmadd.h f9, f16, f29, f3, rdn # perform operation
fnmadd.h f9, f16, f29, f3, rmm # perform operation
fnmadd.h f9, f16, f29, f3, rne # perform operation
fnmadd.h f9, f16, f29, f3, rtz # perform operation
fnmadd.h f9, f16, f29, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f9, f16, f29, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f9, f16, f29, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f9, f16, f29, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f9, f16, f29, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f9, f16, f29, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x8001)
li x23, 0x0684ef05f1b47ed6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f6, 0(x2) # load 0x00000001 from memory into f6
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f31, 0(x2) # load 0x00008001 from memory into f31
li x3, 0xa73197a0eb40745e # load x3 with value 0xa73197a0eb40745e
sw x3, 0(x2) # store 0xa73197a0eb40745e in memory
flh f2, 0(x2) # load 0xa73197a0eb40745e from memory into f2
fnmadd.h f23, f6, f31, f2, dyn # perform operation
fnmadd.h f23, f6, f31, f2, rdn # perform operation
fnmadd.h f23, f6, f31, f2, rmm # perform operation
fnmadd.h f23, f6, f31, f2, rne # perform operation
fnmadd.h f23, f6, f31, f2, rtz # perform operation
fnmadd.h f23, f6, f31, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f23, f6, f31, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f23, f6, f31, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f23, f6, f31, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f23, f6, f31, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f23, f6, f31, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x7c00)
li x24, 0x6a308bd2a76c7002 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f22, 0(x2) # load 0x00000001 from memory into f22
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f9, 0(x2) # load 0x00007c00 from memory into f9
li x3, 0x49dfd8ffc744ce9b # load x3 with value 0x49dfd8ffc744ce9b
sw x3, 0(x2) # store 0x49dfd8ffc744ce9b in memory
flh f25, 0(x2) # load 0x49dfd8ffc744ce9b from memory into f25
fnmadd.h f24, f22, f9, f25, dyn # perform operation
fnmadd.h f24, f22, f9, f25, rdn # perform operation
fnmadd.h f24, f22, f9, f25, rmm # perform operation
fnmadd.h f24, f22, f9, f25, rne # perform operation
fnmadd.h f24, f22, f9, f25, rtz # perform operation
fnmadd.h f24, f22, f9, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f24, f22, f9, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f24, f22, f9, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f24, f22, f9, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f24, f22, f9, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f24, f22, f9, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0xfc00)
li x6, 0x7d81f34a48eee879 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f1, 0(x2) # load 0x00000001 from memory into f1
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f4, 0(x2) # load 0x0000fc00 from memory into f4
li x3, 0x85d84392435ff628 # load x3 with value 0x85d84392435ff628
sw x3, 0(x2) # store 0x85d84392435ff628 in memory
flh f8, 0(x2) # load 0x85d84392435ff628 from memory into f8
fnmadd.h f6, f1, f4, f8, dyn # perform operation
fnmadd.h f6, f1, f4, f8, rdn # perform operation
fnmadd.h f6, f1, f4, f8, rmm # perform operation
fnmadd.h f6, f1, f4, f8, rne # perform operation
fnmadd.h f6, f1, f4, f8, rtz # perform operation
fnmadd.h f6, f1, f4, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f6, f1, f4, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f6, f1, f4, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f6, f1, f4, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f6, f1, f4, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f6, f1, f4, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x7e00)
li x8, 0x87ed19789a7fa0eb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f12, 0(x2) # load 0x00000001 from memory into f12
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f3, 0(x2) # load 0x00007e00 from memory into f3
li x3, 0xbc93bb760435ac05 # load x3 with value 0xbc93bb760435ac05
sw x3, 0(x2) # store 0xbc93bb760435ac05 in memory
flh f4, 0(x2) # load 0xbc93bb760435ac05 from memory into f4
fnmadd.h f8, f12, f3, f4, dyn # perform operation
fnmadd.h f8, f12, f3, f4, rdn # perform operation
fnmadd.h f8, f12, f3, f4, rmm # perform operation
fnmadd.h f8, f12, f3, f4, rne # perform operation
fnmadd.h f8, f12, f3, f4, rtz # perform operation
fnmadd.h f8, f12, f3, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f8, f12, f3, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f8, f12, f3, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f8, f12, f3, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f8, f12, f3, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f8, f12, f3, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x7fff)
li x21, 0x23c43dc9c650bd5b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f26, 0(x2) # load 0x00000001 from memory into f26
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f24, 0(x2) # load 0x00007fff from memory into f24
li x3, 0xd6efc8adc9a9d5af # load x3 with value 0xd6efc8adc9a9d5af
sw x3, 0(x2) # store 0xd6efc8adc9a9d5af in memory
flh f31, 0(x2) # load 0xd6efc8adc9a9d5af from memory into f31
fnmadd.h f21, f26, f24, f31, dyn # perform operation
fnmadd.h f21, f26, f24, f31, rdn # perform operation
fnmadd.h f21, f26, f24, f31, rmm # perform operation
fnmadd.h f21, f26, f24, f31, rne # perform operation
fnmadd.h f21, f26, f24, f31, rtz # perform operation
fnmadd.h f21, f26, f24, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f21, f26, f24, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f21, f26, f24, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f21, f26, f24, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f21, f26, f24, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f21, f26, f24, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x7c01)
li x21, 0x240d438ec95625e9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f20, 0(x2) # load 0x00000001 from memory into f20
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f15, 0(x2) # load 0x00007c01 from memory into f15
li x3, 0xae1a33c49decc263 # load x3 with value 0xae1a33c49decc263
sw x3, 0(x2) # store 0xae1a33c49decc263 in memory
flh f7, 0(x2) # load 0xae1a33c49decc263 from memory into f7
fnmadd.h f21, f20, f15, f7, dyn # perform operation
fnmadd.h f21, f20, f15, f7, rdn # perform operation
fnmadd.h f21, f20, f15, f7, rmm # perform operation
fnmadd.h f21, f20, f15, f7, rne # perform operation
fnmadd.h f21, f20, f15, f7, rtz # perform operation
fnmadd.h f21, f20, f15, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f21, f20, f15, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f21, f20, f15, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f21, f20, f15, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f21, f20, f15, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f21, f20, f15, f7 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x7dff)
li x4, 0xb878d4b3b4e73371 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f17, 0(x2) # load 0x00000001 from memory into f17
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f5, 0(x2) # load 0x00007dff from memory into f5
li x3, 0x6bfe476e69c5fc11 # load x3 with value 0x6bfe476e69c5fc11
sw x3, 0(x2) # store 0x6bfe476e69c5fc11 in memory
flh f8, 0(x2) # load 0x6bfe476e69c5fc11 from memory into f8
fnmadd.h f4, f17, f5, f8, dyn # perform operation
fnmadd.h f4, f17, f5, f8, rdn # perform operation
fnmadd.h f4, f17, f5, f8, rmm # perform operation
fnmadd.h f4, f17, f5, f8, rne # perform operation
fnmadd.h f4, f17, f5, f8, rtz # perform operation
fnmadd.h f4, f17, f5, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f4, f17, f5, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f4, f17, f5, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f4, f17, f5, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f4, f17, f5, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f4, f17, f5, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x58b4)
li x9, 0xf0beb1404d4e4c9b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f6, 0(x2) # load 0x00000001 from memory into f6
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f14, 0(x2) # load 0x000058b4 from memory into f14
li x3, 0x8b32784e62e90c9d # load x3 with value 0x8b32784e62e90c9d
sw x3, 0(x2) # store 0x8b32784e62e90c9d in memory
flh f8, 0(x2) # load 0x8b32784e62e90c9d from memory into f8
fnmadd.h f9, f6, f14, f8, dyn # perform operation
fnmadd.h f9, f6, f14, f8, rdn # perform operation
fnmadd.h f9, f6, f14, f8, rmm # perform operation
fnmadd.h f9, f6, f14, f8, rne # perform operation
fnmadd.h f9, f6, f14, f8, rtz # perform operation
fnmadd.h f9, f6, f14, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f9, f6, f14, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f9, f6, f14, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f9, f6, f14, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f9, f6, f14, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f9, f6, f14, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0xc93a)
li x22, 0xbcf798739ed41d4d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f1, 0(x2) # load 0x00000001 from memory into f1
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f10, 0(x2) # load 0x0000c93a from memory into f10
li x3, 0x7bd891c6446214fd # load x3 with value 0x7bd891c6446214fd
sw x3, 0(x2) # store 0x7bd891c6446214fd in memory
flh f27, 0(x2) # load 0x7bd891c6446214fd from memory into f27
fnmadd.h f22, f1, f10, f27, dyn # perform operation
fnmadd.h f22, f1, f10, f27, rdn # perform operation
fnmadd.h f22, f1, f10, f27, rmm # perform operation
fnmadd.h f22, f1, f10, f27, rne # perform operation
fnmadd.h f22, f1, f10, f27, rtz # perform operation
fnmadd.h f22, f1, f10, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f22, f1, f10, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f22, f1, f10, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f22, f1, f10, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f22, f1, f10, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f22, f1, f10, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8001 fs2 = 0x0)
li x24, 0xed75cac528c5d217 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f22, 0(x2) # load 0x00008001 from memory into f22
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f29, 0(x2) # load 0x00000000 from memory into f29
li x3, 0xa124fb89039fb330 # load x3 with value 0xa124fb89039fb330
sw x3, 0(x2) # store 0xa124fb89039fb330 in memory
flh f27, 0(x2) # load 0xa124fb89039fb330 from memory into f27
fnmadd.h f24, f22, f29, f27, dyn # perform operation
fnmadd.h f24, f22, f29, f27, rdn # perform operation
fnmadd.h f24, f22, f29, f27, rmm # perform operation
fnmadd.h f24, f22, f29, f27, rne # perform operation
fnmadd.h f24, f22, f29, f27, rtz # perform operation
fnmadd.h f24, f22, f29, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f24, f22, f29, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f24, f22, f29, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f24, f22, f29, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f24, f22, f29, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f24, f22, f29, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8001 fs2 = 0x8000)
li x7, 0xfc595a2d650e40a8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f20, 0(x2) # load 0x00008001 from memory into f20
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f13, 0(x2) # load 0x00008000 from memory into f13
li x3, 0x73a6dc874cb26b11 # load x3 with value 0x73a6dc874cb26b11
sw x3, 0(x2) # store 0x73a6dc874cb26b11 in memory
flh f23, 0(x2) # load 0x73a6dc874cb26b11 from memory into f23
fnmadd.h f7, f20, f13, f23, dyn # perform operation
fnmadd.h f7, f20, f13, f23, rdn # perform operation
fnmadd.h f7, f20, f13, f23, rmm # perform operation
fnmadd.h f7, f20, f13, f23, rne # perform operation
fnmadd.h f7, f20, f13, f23, rtz # perform operation
fnmadd.h f7, f20, f13, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f7, f20, f13, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f7, f20, f13, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f7, f20, f13, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f7, f20, f13, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f7, f20, f13, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8001 fs2 = 0x3c00)
li x16, 0xdd9caa795bb23b1c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f12, 0(x2) # load 0x00008001 from memory into f12
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f3, 0(x2) # load 0x00003c00 from memory into f3
li x3, 0x974d5922d8666a53 # load x3 with value 0x974d5922d8666a53
sw x3, 0(x2) # store 0x974d5922d8666a53 in memory
flh f19, 0(x2) # load 0x974d5922d8666a53 from memory into f19
fnmadd.h f16, f12, f3, f19, dyn # perform operation
fnmadd.h f16, f12, f3, f19, rdn # perform operation
fnmadd.h f16, f12, f3, f19, rmm # perform operation
fnmadd.h f16, f12, f3, f19, rne # perform operation
fnmadd.h f16, f12, f3, f19, rtz # perform operation
fnmadd.h f16, f12, f3, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f16, f12, f3, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f16, f12, f3, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f16, f12, f3, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f16, f12, f3, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f16, f12, f3, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8001 fs2 = 0xbc00)
li x31, 0x0fa0adbd7d610a32 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f20, 0(x2) # load 0x00008001 from memory into f20
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f22, 0(x2) # load 0x0000bc00 from memory into f22
li x3, 0xe32f187c1b5f0ea7 # load x3 with value 0xe32f187c1b5f0ea7
sw x3, 0(x2) # store 0xe32f187c1b5f0ea7 in memory
flh f16, 0(x2) # load 0xe32f187c1b5f0ea7 from memory into f16
fnmadd.h f31, f20, f22, f16, dyn # perform operation
fnmadd.h f31, f20, f22, f16, rdn # perform operation
fnmadd.h f31, f20, f22, f16, rmm # perform operation
fnmadd.h f31, f20, f22, f16, rne # perform operation
fnmadd.h f31, f20, f22, f16, rtz # perform operation
fnmadd.h f31, f20, f22, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f31, f20, f22, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f31, f20, f22, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f31, f20, f22, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f31, f20, f22, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f31, f20, f22, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8001 fs2 = 0x3e00)
li x14, 0xad42b8ac57203bfe # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f13, 0(x2) # load 0x00008001 from memory into f13
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f16, 0(x2) # load 0x00003e00 from memory into f16
li x3, 0x9f24e1d08062fef1 # load x3 with value 0x9f24e1d08062fef1
sw x3, 0(x2) # store 0x9f24e1d08062fef1 in memory
flh f10, 0(x2) # load 0x9f24e1d08062fef1 from memory into f10
fnmadd.h f14, f13, f16, f10, dyn # perform operation
fnmadd.h f14, f13, f16, f10, rdn # perform operation
fnmadd.h f14, f13, f16, f10, rmm # perform operation
fnmadd.h f14, f13, f16, f10, rne # perform operation
fnmadd.h f14, f13, f16, f10, rtz # perform operation
fnmadd.h f14, f13, f16, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f14, f13, f16, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f14, f13, f16, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f14, f13, f16, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f14, f13, f16, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f14, f13, f16, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8001 fs2 = 0xbe00)
li x16, 0xc23fe935908e99fe # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f15, 0(x2) # load 0x00008001 from memory into f15
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f30, 0(x2) # load 0x0000be00 from memory into f30
li x3, 0x45b8c8aa373055be # load x3 with value 0x45b8c8aa373055be
sw x3, 0(x2) # store 0x45b8c8aa373055be in memory
flh f24, 0(x2) # load 0x45b8c8aa373055be from memory into f24
fnmadd.h f16, f15, f30, f24, dyn # perform operation
fnmadd.h f16, f15, f30, f24, rdn # perform operation
fnmadd.h f16, f15, f30, f24, rmm # perform operation
fnmadd.h f16, f15, f30, f24, rne # perform operation
fnmadd.h f16, f15, f30, f24, rtz # perform operation
fnmadd.h f16, f15, f30, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f16, f15, f30, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f16, f15, f30, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f16, f15, f30, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f16, f15, f30, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f16, f15, f30, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8001 fs2 = 0x4000)
li x30, 0x161deb1dbb65165b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f10, 0(x2) # load 0x00008001 from memory into f10
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f8, 0(x2) # load 0x00004000 from memory into f8
li x3, 0x7a6675ee4e0420a1 # load x3 with value 0x7a6675ee4e0420a1
sw x3, 0(x2) # store 0x7a6675ee4e0420a1 in memory
flh f11, 0(x2) # load 0x7a6675ee4e0420a1 from memory into f11
fnmadd.h f30, f10, f8, f11, dyn # perform operation
fnmadd.h f30, f10, f8, f11, rdn # perform operation
fnmadd.h f30, f10, f8, f11, rmm # perform operation
fnmadd.h f30, f10, f8, f11, rne # perform operation
fnmadd.h f30, f10, f8, f11, rtz # perform operation
fnmadd.h f30, f10, f8, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f30, f10, f8, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f30, f10, f8, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f30, f10, f8, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f30, f10, f8, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f30, f10, f8, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8001 fs2 = 0xc000)
li x11, 0x9a8cdacfd5cc3d13 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f21, 0(x2) # load 0x00008001 from memory into f21
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f20, 0(x2) # load 0x0000c000 from memory into f20
li x3, 0x36d3d07e1a14ca8e # load x3 with value 0x36d3d07e1a14ca8e
sw x3, 0(x2) # store 0x36d3d07e1a14ca8e in memory
flh f29, 0(x2) # load 0x36d3d07e1a14ca8e from memory into f29
fnmadd.h f11, f21, f20, f29, dyn # perform operation
fnmadd.h f11, f21, f20, f29, rdn # perform operation
fnmadd.h f11, f21, f20, f29, rmm # perform operation
fnmadd.h f11, f21, f20, f29, rne # perform operation
fnmadd.h f11, f21, f20, f29, rtz # perform operation
fnmadd.h f11, f21, f20, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f11, f21, f20, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f11, f21, f20, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f11, f21, f20, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f11, f21, f20, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f11, f21, f20, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8001 fs2 = 0x400)
li x1, 0x6fd99ff410503c47 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f7, 0(x2) # load 0x00008001 from memory into f7
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f29, 0(x2) # load 0x00000400 from memory into f29
li x3, 0xbb79dade6b5470c4 # load x3 with value 0xbb79dade6b5470c4
sw x3, 0(x2) # store 0xbb79dade6b5470c4 in memory
flh f21, 0(x2) # load 0xbb79dade6b5470c4 from memory into f21
fnmadd.h f1, f7, f29, f21, dyn # perform operation
fnmadd.h f1, f7, f29, f21, rdn # perform operation
fnmadd.h f1, f7, f29, f21, rmm # perform operation
fnmadd.h f1, f7, f29, f21, rne # perform operation
fnmadd.h f1, f7, f29, f21, rtz # perform operation
fnmadd.h f1, f7, f29, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f1, f7, f29, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f1, f7, f29, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f1, f7, f29, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f1, f7, f29, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f1, f7, f29, f21 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8001 fs2 = 0x8400)
li x12, 0x9e8221855dd21360 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f24, 0(x2) # load 0x00008001 from memory into f24
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f18, 0(x2) # load 0x00008400 from memory into f18
li x3, 0xa27877dc2d9b5e21 # load x3 with value 0xa27877dc2d9b5e21
sw x3, 0(x2) # store 0xa27877dc2d9b5e21 in memory
flh f4, 0(x2) # load 0xa27877dc2d9b5e21 from memory into f4
fnmadd.h f12, f24, f18, f4, dyn # perform operation
fnmadd.h f12, f24, f18, f4, rdn # perform operation
fnmadd.h f12, f24, f18, f4, rmm # perform operation
fnmadd.h f12, f24, f18, f4, rne # perform operation
fnmadd.h f12, f24, f18, f4, rtz # perform operation
fnmadd.h f12, f24, f18, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f12, f24, f18, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f12, f24, f18, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f12, f24, f18, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f12, f24, f18, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f12, f24, f18, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8001 fs2 = 0x7bff)
li x7, 0xb6d408641744eb61 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f2, 0(x2) # load 0x00008001 from memory into f2
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f4, 0(x2) # load 0x00007bff from memory into f4
li x3, 0x76853bcf1a84a058 # load x3 with value 0x76853bcf1a84a058
sw x3, 0(x2) # store 0x76853bcf1a84a058 in memory
flh f12, 0(x2) # load 0x76853bcf1a84a058 from memory into f12
fnmadd.h f7, f2, f4, f12, dyn # perform operation
fnmadd.h f7, f2, f4, f12, rdn # perform operation
fnmadd.h f7, f2, f4, f12, rmm # perform operation
fnmadd.h f7, f2, f4, f12, rne # perform operation
fnmadd.h f7, f2, f4, f12, rtz # perform operation
fnmadd.h f7, f2, f4, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f7, f2, f4, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f7, f2, f4, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f7, f2, f4, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f7, f2, f4, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f7, f2, f4, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8001 fs2 = 0xfbff)
li x1, 0x0a7530832d209d56 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f17, 0(x2) # load 0x00008001 from memory into f17
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f7, 0(x2) # load 0x0000fbff from memory into f7
li x3, 0x90996bce280b5030 # load x3 with value 0x90996bce280b5030
sw x3, 0(x2) # store 0x90996bce280b5030 in memory
flh f19, 0(x2) # load 0x90996bce280b5030 from memory into f19
fnmadd.h f1, f17, f7, f19, dyn # perform operation
fnmadd.h f1, f17, f7, f19, rdn # perform operation
fnmadd.h f1, f17, f7, f19, rmm # perform operation
fnmadd.h f1, f17, f7, f19, rne # perform operation
fnmadd.h f1, f17, f7, f19, rtz # perform operation
fnmadd.h f1, f17, f7, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f1, f17, f7, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f1, f17, f7, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f1, f17, f7, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f1, f17, f7, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f1, f17, f7, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8001 fs2 = 0x3ff)
li x19, 0x8d3c815f3a63395a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f21, 0(x2) # load 0x00008001 from memory into f21
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f6, 0(x2) # load 0x000003ff from memory into f6
li x3, 0x1c400f41b927701b # load x3 with value 0x1c400f41b927701b
sw x3, 0(x2) # store 0x1c400f41b927701b in memory
flh f15, 0(x2) # load 0x1c400f41b927701b from memory into f15
fnmadd.h f19, f21, f6, f15, dyn # perform operation
fnmadd.h f19, f21, f6, f15, rdn # perform operation
fnmadd.h f19, f21, f6, f15, rmm # perform operation
fnmadd.h f19, f21, f6, f15, rne # perform operation
fnmadd.h f19, f21, f6, f15, rtz # perform operation
fnmadd.h f19, f21, f6, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f19, f21, f6, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f19, f21, f6, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f19, f21, f6, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f19, f21, f6, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f19, f21, f6, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8001 fs2 = 0x83ff)
li x9, 0x44f43ba595058947 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f6, 0(x2) # load 0x00008001 from memory into f6
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f27, 0(x2) # load 0x000083ff from memory into f27
li x3, 0x73b03a816b8e2281 # load x3 with value 0x73b03a816b8e2281
sw x3, 0(x2) # store 0x73b03a816b8e2281 in memory
flh f13, 0(x2) # load 0x73b03a816b8e2281 from memory into f13
fnmadd.h f9, f6, f27, f13, dyn # perform operation
fnmadd.h f9, f6, f27, f13, rdn # perform operation
fnmadd.h f9, f6, f27, f13, rmm # perform operation
fnmadd.h f9, f6, f27, f13, rne # perform operation
fnmadd.h f9, f6, f27, f13, rtz # perform operation
fnmadd.h f9, f6, f27, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f9, f6, f27, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f9, f6, f27, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f9, f6, f27, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f9, f6, f27, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f9, f6, f27, f13 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8001 fs2 = 0x200)
li x2, 0x1506172ddee19c77 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f29, 0(x2) # load 0x00008001 from memory into f29
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f7, 0(x2) # load 0x00000200 from memory into f7
li x3, 0x5ce983c92d0d55c9 # load x3 with value 0x5ce983c92d0d55c9
sw x3, 0(x2) # store 0x5ce983c92d0d55c9 in memory
flh f21, 0(x2) # load 0x5ce983c92d0d55c9 from memory into f21
fnmadd.h f2, f29, f7, f21, dyn # perform operation
fnmadd.h f2, f29, f7, f21, rdn # perform operation
fnmadd.h f2, f29, f7, f21, rmm # perform operation
fnmadd.h f2, f29, f7, f21, rne # perform operation
fnmadd.h f2, f29, f7, f21, rtz # perform operation
fnmadd.h f2, f29, f7, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f2, f29, f7, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f2, f29, f7, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f2, f29, f7, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f2, f29, f7, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f2, f29, f7, f21 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8001 fs2 = 0x8200)
li x7, 0xfa1d38eecaa68031 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f14, 0(x2) # load 0x00008001 from memory into f14
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f20, 0(x2) # load 0x00008200 from memory into f20
li x3, 0x7e12bf658e620e37 # load x3 with value 0x7e12bf658e620e37
sw x3, 0(x2) # store 0x7e12bf658e620e37 in memory
flh f17, 0(x2) # load 0x7e12bf658e620e37 from memory into f17
fnmadd.h f7, f14, f20, f17, dyn # perform operation
fnmadd.h f7, f14, f20, f17, rdn # perform operation
fnmadd.h f7, f14, f20, f17, rmm # perform operation
fnmadd.h f7, f14, f20, f17, rne # perform operation
fnmadd.h f7, f14, f20, f17, rtz # perform operation
fnmadd.h f7, f14, f20, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f7, f14, f20, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f7, f14, f20, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f7, f14, f20, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f7, f14, f20, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f7, f14, f20, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8001 fs2 = 0x1)
li x12, 0x96d98c305c0ed979 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f20, 0(x2) # load 0x00008001 from memory into f20
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f9, 0(x2) # load 0x00000001 from memory into f9
li x3, 0xd64110287a26d79a # load x3 with value 0xd64110287a26d79a
sw x3, 0(x2) # store 0xd64110287a26d79a in memory
flh f26, 0(x2) # load 0xd64110287a26d79a from memory into f26
fnmadd.h f12, f20, f9, f26, dyn # perform operation
fnmadd.h f12, f20, f9, f26, rdn # perform operation
fnmadd.h f12, f20, f9, f26, rmm # perform operation
fnmadd.h f12, f20, f9, f26, rne # perform operation
fnmadd.h f12, f20, f9, f26, rtz # perform operation
fnmadd.h f12, f20, f9, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f12, f20, f9, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f12, f20, f9, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f12, f20, f9, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f12, f20, f9, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f12, f20, f9, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8001 fs2 = 0x8001)
li x26, 0x1bff153abb0528cf # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f22, 0(x2) # load 0x00008001 from memory into f22
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f17, 0(x2) # load 0x00008001 from memory into f17
li x3, 0x4f6695e6ae6dc0c8 # load x3 with value 0x4f6695e6ae6dc0c8
sw x3, 0(x2) # store 0x4f6695e6ae6dc0c8 in memory
flh f23, 0(x2) # load 0x4f6695e6ae6dc0c8 from memory into f23
fnmadd.h f26, f22, f17, f23, dyn # perform operation
fnmadd.h f26, f22, f17, f23, rdn # perform operation
fnmadd.h f26, f22, f17, f23, rmm # perform operation
fnmadd.h f26, f22, f17, f23, rne # perform operation
fnmadd.h f26, f22, f17, f23, rtz # perform operation
fnmadd.h f26, f22, f17, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f26, f22, f17, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f26, f22, f17, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f26, f22, f17, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f26, f22, f17, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f26, f22, f17, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8001 fs2 = 0x7c00)
li x19, 0x198d6fdbbfc6d034 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f1, 0(x2) # load 0x00008001 from memory into f1
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f18, 0(x2) # load 0x00007c00 from memory into f18
li x3, 0x5b5a356d8343f5ee # load x3 with value 0x5b5a356d8343f5ee
sw x3, 0(x2) # store 0x5b5a356d8343f5ee in memory
flh f12, 0(x2) # load 0x5b5a356d8343f5ee from memory into f12
fnmadd.h f19, f1, f18, f12, dyn # perform operation
fnmadd.h f19, f1, f18, f12, rdn # perform operation
fnmadd.h f19, f1, f18, f12, rmm # perform operation
fnmadd.h f19, f1, f18, f12, rne # perform operation
fnmadd.h f19, f1, f18, f12, rtz # perform operation
fnmadd.h f19, f1, f18, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f19, f1, f18, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f19, f1, f18, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f19, f1, f18, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f19, f1, f18, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f19, f1, f18, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8001 fs2 = 0xfc00)
li x22, 0x0c1d77309f604784 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f3, 0(x2) # load 0x00008001 from memory into f3
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f12, 0(x2) # load 0x0000fc00 from memory into f12
li x3, 0xd0d0d1d003ab9034 # load x3 with value 0xd0d0d1d003ab9034
sw x3, 0(x2) # store 0xd0d0d1d003ab9034 in memory
flh f5, 0(x2) # load 0xd0d0d1d003ab9034 from memory into f5
fnmadd.h f22, f3, f12, f5, dyn # perform operation
fnmadd.h f22, f3, f12, f5, rdn # perform operation
fnmadd.h f22, f3, f12, f5, rmm # perform operation
fnmadd.h f22, f3, f12, f5, rne # perform operation
fnmadd.h f22, f3, f12, f5, rtz # perform operation
fnmadd.h f22, f3, f12, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f22, f3, f12, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f22, f3, f12, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f22, f3, f12, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f22, f3, f12, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f22, f3, f12, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8001 fs2 = 0x7e00)
li x19, 0xb86c70b7f4b91329 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f8, 0(x2) # load 0x00008001 from memory into f8
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f14, 0(x2) # load 0x00007e00 from memory into f14
li x3, 0x3403e3cb3f818cf # load x3 with value 0x3403e3cb3f818cf
sw x3, 0(x2) # store 0x3403e3cb3f818cf in memory
flh f16, 0(x2) # load 0x3403e3cb3f818cf from memory into f16
fnmadd.h f19, f8, f14, f16, dyn # perform operation
fnmadd.h f19, f8, f14, f16, rdn # perform operation
fnmadd.h f19, f8, f14, f16, rmm # perform operation
fnmadd.h f19, f8, f14, f16, rne # perform operation
fnmadd.h f19, f8, f14, f16, rtz # perform operation
fnmadd.h f19, f8, f14, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f19, f8, f14, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f19, f8, f14, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f19, f8, f14, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f19, f8, f14, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f19, f8, f14, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8001 fs2 = 0x7fff)
li x16, 0x65c56213afd66d7b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f12, 0(x2) # load 0x00008001 from memory into f12
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f13, 0(x2) # load 0x00007fff from memory into f13
li x3, 0x870aa73d2a04d60a # load x3 with value 0x870aa73d2a04d60a
sw x3, 0(x2) # store 0x870aa73d2a04d60a in memory
flh f4, 0(x2) # load 0x870aa73d2a04d60a from memory into f4
fnmadd.h f16, f12, f13, f4, dyn # perform operation
fnmadd.h f16, f12, f13, f4, rdn # perform operation
fnmadd.h f16, f12, f13, f4, rmm # perform operation
fnmadd.h f16, f12, f13, f4, rne # perform operation
fnmadd.h f16, f12, f13, f4, rtz # perform operation
fnmadd.h f16, f12, f13, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f16, f12, f13, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f16, f12, f13, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f16, f12, f13, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f16, f12, f13, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f16, f12, f13, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8001 fs2 = 0x7c01)
li x3, 0x1465147a93723c1a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f7, 0(x2) # load 0x00008001 from memory into f7
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f17, 0(x2) # load 0x00007c01 from memory into f17
li x3, 0x92acb2a8ae502736 # load x3 with value 0x92acb2a8ae502736
sw x3, 0(x2) # store 0x92acb2a8ae502736 in memory
flh f9, 0(x2) # load 0x92acb2a8ae502736 from memory into f9
fnmadd.h f3, f7, f17, f9, dyn # perform operation
fnmadd.h f3, f7, f17, f9, rdn # perform operation
fnmadd.h f3, f7, f17, f9, rmm # perform operation
fnmadd.h f3, f7, f17, f9, rne # perform operation
fnmadd.h f3, f7, f17, f9, rtz # perform operation
fnmadd.h f3, f7, f17, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f3, f7, f17, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f3, f7, f17, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f3, f7, f17, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f3, f7, f17, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f3, f7, f17, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8001 fs2 = 0x7dff)
li x26, 0xf40b2823d838a449 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f24, 0(x2) # load 0x00008001 from memory into f24
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f11, 0(x2) # load 0x00007dff from memory into f11
li x3, 0x4361f1751b4abb05 # load x3 with value 0x4361f1751b4abb05
sw x3, 0(x2) # store 0x4361f1751b4abb05 in memory
flh f20, 0(x2) # load 0x4361f1751b4abb05 from memory into f20
fnmadd.h f26, f24, f11, f20, dyn # perform operation
fnmadd.h f26, f24, f11, f20, rdn # perform operation
fnmadd.h f26, f24, f11, f20, rmm # perform operation
fnmadd.h f26, f24, f11, f20, rne # perform operation
fnmadd.h f26, f24, f11, f20, rtz # perform operation
fnmadd.h f26, f24, f11, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f26, f24, f11, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f26, f24, f11, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f26, f24, f11, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f26, f24, f11, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f26, f24, f11, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8001 fs2 = 0x58b4)
li x4, 0xd54001a698fbd011 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f15, 0(x2) # load 0x00008001 from memory into f15
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f19, 0(x2) # load 0x000058b4 from memory into f19
li x3, 0xa30a49718c5171f5 # load x3 with value 0xa30a49718c5171f5
sw x3, 0(x2) # store 0xa30a49718c5171f5 in memory
flh f13, 0(x2) # load 0xa30a49718c5171f5 from memory into f13
fnmadd.h f4, f15, f19, f13, dyn # perform operation
fnmadd.h f4, f15, f19, f13, rdn # perform operation
fnmadd.h f4, f15, f19, f13, rmm # perform operation
fnmadd.h f4, f15, f19, f13, rne # perform operation
fnmadd.h f4, f15, f19, f13, rtz # perform operation
fnmadd.h f4, f15, f19, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f4, f15, f19, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f4, f15, f19, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f4, f15, f19, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f4, f15, f19, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f4, f15, f19, f13 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8001 fs2 = 0xc93a)
li x30, 0xbdee07f3c0efb6d4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f27, 0(x2) # load 0x00008001 from memory into f27
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f21, 0(x2) # load 0x0000c93a from memory into f21
li x3, 0x53b05d74d6178769 # load x3 with value 0x53b05d74d6178769
sw x3, 0(x2) # store 0x53b05d74d6178769 in memory
flh f5, 0(x2) # load 0x53b05d74d6178769 from memory into f5
fnmadd.h f30, f27, f21, f5, dyn # perform operation
fnmadd.h f30, f27, f21, f5, rdn # perform operation
fnmadd.h f30, f27, f21, f5, rmm # perform operation
fnmadd.h f30, f27, f21, f5, rne # perform operation
fnmadd.h f30, f27, f21, f5, rtz # perform operation
fnmadd.h f30, f27, f21, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f30, f27, f21, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f30, f27, f21, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f30, f27, f21, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f30, f27, f21, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f30, f27, f21, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7c00 fs2 = 0x0)
li x11, 0x1a57ca3ee578b592 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f9, 0(x2) # load 0x00007c00 from memory into f9
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f1, 0(x2) # load 0x00000000 from memory into f1
li x3, 0xece1ca2a650ae5ce # load x3 with value 0xece1ca2a650ae5ce
sw x3, 0(x2) # store 0xece1ca2a650ae5ce in memory
flh f19, 0(x2) # load 0xece1ca2a650ae5ce from memory into f19
fnmadd.h f11, f9, f1, f19, dyn # perform operation
fnmadd.h f11, f9, f1, f19, rdn # perform operation
fnmadd.h f11, f9, f1, f19, rmm # perform operation
fnmadd.h f11, f9, f1, f19, rne # perform operation
fnmadd.h f11, f9, f1, f19, rtz # perform operation
fnmadd.h f11, f9, f1, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f11, f9, f1, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f11, f9, f1, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f11, f9, f1, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f11, f9, f1, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f11, f9, f1, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7c00 fs2 = 0x8000)
li x7, 0x1fa84b9e8cd402b3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f20, 0(x2) # load 0x00007c00 from memory into f20
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f17, 0(x2) # load 0x00008000 from memory into f17
li x3, 0x3b3d36103224a938 # load x3 with value 0x3b3d36103224a938
sw x3, 0(x2) # store 0x3b3d36103224a938 in memory
flh f22, 0(x2) # load 0x3b3d36103224a938 from memory into f22
fnmadd.h f7, f20, f17, f22, dyn # perform operation
fnmadd.h f7, f20, f17, f22, rdn # perform operation
fnmadd.h f7, f20, f17, f22, rmm # perform operation
fnmadd.h f7, f20, f17, f22, rne # perform operation
fnmadd.h f7, f20, f17, f22, rtz # perform operation
fnmadd.h f7, f20, f17, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f7, f20, f17, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f7, f20, f17, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f7, f20, f17, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f7, f20, f17, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f7, f20, f17, f22 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7c00 fs2 = 0x3c00)
li x6, 0x68cb827a7a226814 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f30, 0(x2) # load 0x00007c00 from memory into f30
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f20, 0(x2) # load 0x00003c00 from memory into f20
li x3, 0xafc07aafd5f4dd43 # load x3 with value 0xafc07aafd5f4dd43
sw x3, 0(x2) # store 0xafc07aafd5f4dd43 in memory
flh f8, 0(x2) # load 0xafc07aafd5f4dd43 from memory into f8
fnmadd.h f6, f30, f20, f8, dyn # perform operation
fnmadd.h f6, f30, f20, f8, rdn # perform operation
fnmadd.h f6, f30, f20, f8, rmm # perform operation
fnmadd.h f6, f30, f20, f8, rne # perform operation
fnmadd.h f6, f30, f20, f8, rtz # perform operation
fnmadd.h f6, f30, f20, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f6, f30, f20, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f6, f30, f20, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f6, f30, f20, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f6, f30, f20, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f6, f30, f20, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7c00 fs2 = 0xbc00)
li x12, 0x92d15eb7b2557f40 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f8, 0(x2) # load 0x00007c00 from memory into f8
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f21, 0(x2) # load 0x0000bc00 from memory into f21
li x3, 0xb7021a4d6b8e2c7b # load x3 with value 0xb7021a4d6b8e2c7b
sw x3, 0(x2) # store 0xb7021a4d6b8e2c7b in memory
flh f23, 0(x2) # load 0xb7021a4d6b8e2c7b from memory into f23
fnmadd.h f12, f8, f21, f23, dyn # perform operation
fnmadd.h f12, f8, f21, f23, rdn # perform operation
fnmadd.h f12, f8, f21, f23, rmm # perform operation
fnmadd.h f12, f8, f21, f23, rne # perform operation
fnmadd.h f12, f8, f21, f23, rtz # perform operation
fnmadd.h f12, f8, f21, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f12, f8, f21, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f12, f8, f21, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f12, f8, f21, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f12, f8, f21, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f12, f8, f21, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7c00 fs2 = 0x3e00)
li x12, 0xdd4389a8bd8cccd3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f5, 0(x2) # load 0x00007c00 from memory into f5
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f26, 0(x2) # load 0x00003e00 from memory into f26
li x3, 0x2efda471540c5622 # load x3 with value 0x2efda471540c5622
sw x3, 0(x2) # store 0x2efda471540c5622 in memory
flh f24, 0(x2) # load 0x2efda471540c5622 from memory into f24
fnmadd.h f12, f5, f26, f24, dyn # perform operation
fnmadd.h f12, f5, f26, f24, rdn # perform operation
fnmadd.h f12, f5, f26, f24, rmm # perform operation
fnmadd.h f12, f5, f26, f24, rne # perform operation
fnmadd.h f12, f5, f26, f24, rtz # perform operation
fnmadd.h f12, f5, f26, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f12, f5, f26, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f12, f5, f26, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f12, f5, f26, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f12, f5, f26, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f12, f5, f26, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7c00 fs2 = 0xbe00)
li x19, 0x272c88bf64d3d57a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f1, 0(x2) # load 0x00007c00 from memory into f1
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f13, 0(x2) # load 0x0000be00 from memory into f13
li x3, 0xf4fe5f305bb59b92 # load x3 with value 0xf4fe5f305bb59b92
sw x3, 0(x2) # store 0xf4fe5f305bb59b92 in memory
flh f28, 0(x2) # load 0xf4fe5f305bb59b92 from memory into f28
fnmadd.h f19, f1, f13, f28, dyn # perform operation
fnmadd.h f19, f1, f13, f28, rdn # perform operation
fnmadd.h f19, f1, f13, f28, rmm # perform operation
fnmadd.h f19, f1, f13, f28, rne # perform operation
fnmadd.h f19, f1, f13, f28, rtz # perform operation
fnmadd.h f19, f1, f13, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f19, f1, f13, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f19, f1, f13, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f19, f1, f13, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f19, f1, f13, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f19, f1, f13, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7c00 fs2 = 0x4000)
li x18, 0x403e6482363c27c2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f21, 0(x2) # load 0x00007c00 from memory into f21
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f24, 0(x2) # load 0x00004000 from memory into f24
li x3, 0x8ae5af7f0d9ca8a0 # load x3 with value 0x8ae5af7f0d9ca8a0
sw x3, 0(x2) # store 0x8ae5af7f0d9ca8a0 in memory
flh f30, 0(x2) # load 0x8ae5af7f0d9ca8a0 from memory into f30
fnmadd.h f18, f21, f24, f30, dyn # perform operation
fnmadd.h f18, f21, f24, f30, rdn # perform operation
fnmadd.h f18, f21, f24, f30, rmm # perform operation
fnmadd.h f18, f21, f24, f30, rne # perform operation
fnmadd.h f18, f21, f24, f30, rtz # perform operation
fnmadd.h f18, f21, f24, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f18, f21, f24, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f18, f21, f24, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f18, f21, f24, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f18, f21, f24, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f18, f21, f24, f30 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7c00 fs2 = 0xc000)
li x24, 0x26d3df9723263b1d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f2, 0(x2) # load 0x00007c00 from memory into f2
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f20, 0(x2) # load 0x0000c000 from memory into f20
li x3, 0xff63deab407df742 # load x3 with value 0xff63deab407df742
sw x3, 0(x2) # store 0xff63deab407df742 in memory
flh f22, 0(x2) # load 0xff63deab407df742 from memory into f22
fnmadd.h f24, f2, f20, f22, dyn # perform operation
fnmadd.h f24, f2, f20, f22, rdn # perform operation
fnmadd.h f24, f2, f20, f22, rmm # perform operation
fnmadd.h f24, f2, f20, f22, rne # perform operation
fnmadd.h f24, f2, f20, f22, rtz # perform operation
fnmadd.h f24, f2, f20, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f24, f2, f20, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f24, f2, f20, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f24, f2, f20, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f24, f2, f20, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f24, f2, f20, f22 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7c00 fs2 = 0x400)
li x25, 0x0f9c77ddbcac4c75 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f7, 0(x2) # load 0x00007c00 from memory into f7
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f23, 0(x2) # load 0x00000400 from memory into f23
li x3, 0x84ad67b94bab3598 # load x3 with value 0x84ad67b94bab3598
sw x3, 0(x2) # store 0x84ad67b94bab3598 in memory
flh f21, 0(x2) # load 0x84ad67b94bab3598 from memory into f21
fnmadd.h f25, f7, f23, f21, dyn # perform operation
fnmadd.h f25, f7, f23, f21, rdn # perform operation
fnmadd.h f25, f7, f23, f21, rmm # perform operation
fnmadd.h f25, f7, f23, f21, rne # perform operation
fnmadd.h f25, f7, f23, f21, rtz # perform operation
fnmadd.h f25, f7, f23, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f25, f7, f23, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f25, f7, f23, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f25, f7, f23, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f25, f7, f23, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f25, f7, f23, f21 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7c00 fs2 = 0x8400)
li x30, 0x99a79d13d68aebbc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f10, 0(x2) # load 0x00007c00 from memory into f10
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f25, 0(x2) # load 0x00008400 from memory into f25
li x3, 0x5e6bec3d37a32285 # load x3 with value 0x5e6bec3d37a32285
sw x3, 0(x2) # store 0x5e6bec3d37a32285 in memory
flh f19, 0(x2) # load 0x5e6bec3d37a32285 from memory into f19
fnmadd.h f30, f10, f25, f19, dyn # perform operation
fnmadd.h f30, f10, f25, f19, rdn # perform operation
fnmadd.h f30, f10, f25, f19, rmm # perform operation
fnmadd.h f30, f10, f25, f19, rne # perform operation
fnmadd.h f30, f10, f25, f19, rtz # perform operation
fnmadd.h f30, f10, f25, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f30, f10, f25, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f30, f10, f25, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f30, f10, f25, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f30, f10, f25, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f30, f10, f25, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7c00 fs2 = 0x7bff)
li x21, 0x5bdf87b5d665c740 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f31, 0(x2) # load 0x00007c00 from memory into f31
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f5, 0(x2) # load 0x00007bff from memory into f5
li x3, 0x70a8dc406475386c # load x3 with value 0x70a8dc406475386c
sw x3, 0(x2) # store 0x70a8dc406475386c in memory
flh f16, 0(x2) # load 0x70a8dc406475386c from memory into f16
fnmadd.h f21, f31, f5, f16, dyn # perform operation
fnmadd.h f21, f31, f5, f16, rdn # perform operation
fnmadd.h f21, f31, f5, f16, rmm # perform operation
fnmadd.h f21, f31, f5, f16, rne # perform operation
fnmadd.h f21, f31, f5, f16, rtz # perform operation
fnmadd.h f21, f31, f5, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f21, f31, f5, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f21, f31, f5, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f21, f31, f5, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f21, f31, f5, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f21, f31, f5, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7c00 fs2 = 0xfbff)
li x31, 0xf26b9ea61307eea1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f25, 0(x2) # load 0x00007c00 from memory into f25
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f15, 0(x2) # load 0x0000fbff from memory into f15
li x3, 0x5564ac40eba83599 # load x3 with value 0x5564ac40eba83599
sw x3, 0(x2) # store 0x5564ac40eba83599 in memory
flh f3, 0(x2) # load 0x5564ac40eba83599 from memory into f3
fnmadd.h f31, f25, f15, f3, dyn # perform operation
fnmadd.h f31, f25, f15, f3, rdn # perform operation
fnmadd.h f31, f25, f15, f3, rmm # perform operation
fnmadd.h f31, f25, f15, f3, rne # perform operation
fnmadd.h f31, f25, f15, f3, rtz # perform operation
fnmadd.h f31, f25, f15, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f31, f25, f15, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f31, f25, f15, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f31, f25, f15, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f31, f25, f15, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f31, f25, f15, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7c00 fs2 = 0x3ff)
li x26, 0x2f515943b23ce497 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f30, 0(x2) # load 0x00007c00 from memory into f30
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f19, 0(x2) # load 0x000003ff from memory into f19
li x3, 0xab230c26f69f43e5 # load x3 with value 0xab230c26f69f43e5
sw x3, 0(x2) # store 0xab230c26f69f43e5 in memory
flh f22, 0(x2) # load 0xab230c26f69f43e5 from memory into f22
fnmadd.h f26, f30, f19, f22, dyn # perform operation
fnmadd.h f26, f30, f19, f22, rdn # perform operation
fnmadd.h f26, f30, f19, f22, rmm # perform operation
fnmadd.h f26, f30, f19, f22, rne # perform operation
fnmadd.h f26, f30, f19, f22, rtz # perform operation
fnmadd.h f26, f30, f19, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f26, f30, f19, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f26, f30, f19, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f26, f30, f19, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f26, f30, f19, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f26, f30, f19, f22 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7c00 fs2 = 0x83ff)
li x28, 0x8d7de7fcca68cdcd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f13, 0(x2) # load 0x00007c00 from memory into f13
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f9, 0(x2) # load 0x000083ff from memory into f9
li x3, 0xfcae7d23b3b16c6 # load x3 with value 0xfcae7d23b3b16c6
sw x3, 0(x2) # store 0xfcae7d23b3b16c6 in memory
flh f10, 0(x2) # load 0xfcae7d23b3b16c6 from memory into f10
fnmadd.h f28, f13, f9, f10, dyn # perform operation
fnmadd.h f28, f13, f9, f10, rdn # perform operation
fnmadd.h f28, f13, f9, f10, rmm # perform operation
fnmadd.h f28, f13, f9, f10, rne # perform operation
fnmadd.h f28, f13, f9, f10, rtz # perform operation
fnmadd.h f28, f13, f9, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f28, f13, f9, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f28, f13, f9, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f28, f13, f9, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f28, f13, f9, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f28, f13, f9, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7c00 fs2 = 0x200)
li x12, 0x1eeae9e8a4e731e7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f6, 0(x2) # load 0x00007c00 from memory into f6
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f31, 0(x2) # load 0x00000200 from memory into f31
li x3, 0x56e762be10ad35f # load x3 with value 0x56e762be10ad35f
sw x3, 0(x2) # store 0x56e762be10ad35f in memory
flh f16, 0(x2) # load 0x56e762be10ad35f from memory into f16
fnmadd.h f12, f6, f31, f16, dyn # perform operation
fnmadd.h f12, f6, f31, f16, rdn # perform operation
fnmadd.h f12, f6, f31, f16, rmm # perform operation
fnmadd.h f12, f6, f31, f16, rne # perform operation
fnmadd.h f12, f6, f31, f16, rtz # perform operation
fnmadd.h f12, f6, f31, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f12, f6, f31, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f12, f6, f31, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f12, f6, f31, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f12, f6, f31, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f12, f6, f31, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7c00 fs2 = 0x8200)
li x2, 0x7a9531fb5faed0e2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f24, 0(x2) # load 0x00007c00 from memory into f24
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f28, 0(x2) # load 0x00008200 from memory into f28
li x3, 0x94c4335f5afbc3fa # load x3 with value 0x94c4335f5afbc3fa
sw x3, 0(x2) # store 0x94c4335f5afbc3fa in memory
flh f29, 0(x2) # load 0x94c4335f5afbc3fa from memory into f29
fnmadd.h f2, f24, f28, f29, dyn # perform operation
fnmadd.h f2, f24, f28, f29, rdn # perform operation
fnmadd.h f2, f24, f28, f29, rmm # perform operation
fnmadd.h f2, f24, f28, f29, rne # perform operation
fnmadd.h f2, f24, f28, f29, rtz # perform operation
fnmadd.h f2, f24, f28, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f2, f24, f28, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f2, f24, f28, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f2, f24, f28, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f2, f24, f28, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f2, f24, f28, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7c00 fs2 = 0x1)
li x6, 0x24de71d8d9032724 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f2, 0(x2) # load 0x00007c00 from memory into f2
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f26, 0(x2) # load 0x00000001 from memory into f26
li x3, 0xdece7f68e98ff1c3 # load x3 with value 0xdece7f68e98ff1c3
sw x3, 0(x2) # store 0xdece7f68e98ff1c3 in memory
flh f20, 0(x2) # load 0xdece7f68e98ff1c3 from memory into f20
fnmadd.h f6, f2, f26, f20, dyn # perform operation
fnmadd.h f6, f2, f26, f20, rdn # perform operation
fnmadd.h f6, f2, f26, f20, rmm # perform operation
fnmadd.h f6, f2, f26, f20, rne # perform operation
fnmadd.h f6, f2, f26, f20, rtz # perform operation
fnmadd.h f6, f2, f26, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f6, f2, f26, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f6, f2, f26, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f6, f2, f26, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f6, f2, f26, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f6, f2, f26, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7c00 fs2 = 0x8001)
li x29, 0xa61c33d60a005b53 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f17, 0(x2) # load 0x00007c00 from memory into f17
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f27, 0(x2) # load 0x00008001 from memory into f27
li x3, 0xc144f63fb4fe18e9 # load x3 with value 0xc144f63fb4fe18e9
sw x3, 0(x2) # store 0xc144f63fb4fe18e9 in memory
flh f8, 0(x2) # load 0xc144f63fb4fe18e9 from memory into f8
fnmadd.h f29, f17, f27, f8, dyn # perform operation
fnmadd.h f29, f17, f27, f8, rdn # perform operation
fnmadd.h f29, f17, f27, f8, rmm # perform operation
fnmadd.h f29, f17, f27, f8, rne # perform operation
fnmadd.h f29, f17, f27, f8, rtz # perform operation
fnmadd.h f29, f17, f27, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f29, f17, f27, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f29, f17, f27, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f29, f17, f27, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f29, f17, f27, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f29, f17, f27, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7c00 fs2 = 0x7c00)
li x21, 0x487cb08825f8f10d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f20, 0(x2) # load 0x00007c00 from memory into f20
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f8, 0(x2) # load 0x00007c00 from memory into f8
li x3, 0x525795a807d74987 # load x3 with value 0x525795a807d74987
sw x3, 0(x2) # store 0x525795a807d74987 in memory
flh f31, 0(x2) # load 0x525795a807d74987 from memory into f31
fnmadd.h f21, f20, f8, f31, dyn # perform operation
fnmadd.h f21, f20, f8, f31, rdn # perform operation
fnmadd.h f21, f20, f8, f31, rmm # perform operation
fnmadd.h f21, f20, f8, f31, rne # perform operation
fnmadd.h f21, f20, f8, f31, rtz # perform operation
fnmadd.h f21, f20, f8, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f21, f20, f8, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f21, f20, f8, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f21, f20, f8, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f21, f20, f8, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f21, f20, f8, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7c00 fs2 = 0xfc00)
li x23, 0xa890c503716fa514 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f10, 0(x2) # load 0x00007c00 from memory into f10
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f2, 0(x2) # load 0x0000fc00 from memory into f2
li x3, 0x6e3123e5406ee77a # load x3 with value 0x6e3123e5406ee77a
sw x3, 0(x2) # store 0x6e3123e5406ee77a in memory
flh f6, 0(x2) # load 0x6e3123e5406ee77a from memory into f6
fnmadd.h f23, f10, f2, f6, dyn # perform operation
fnmadd.h f23, f10, f2, f6, rdn # perform operation
fnmadd.h f23, f10, f2, f6, rmm # perform operation
fnmadd.h f23, f10, f2, f6, rne # perform operation
fnmadd.h f23, f10, f2, f6, rtz # perform operation
fnmadd.h f23, f10, f2, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f23, f10, f2, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f23, f10, f2, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f23, f10, f2, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f23, f10, f2, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f23, f10, f2, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7c00 fs2 = 0x7e00)
li x25, 0xeb3fb992d7d6283c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f26, 0(x2) # load 0x00007c00 from memory into f26
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f16, 0(x2) # load 0x00007e00 from memory into f16
li x3, 0x840e3d98484014f1 # load x3 with value 0x840e3d98484014f1
sw x3, 0(x2) # store 0x840e3d98484014f1 in memory
flh f18, 0(x2) # load 0x840e3d98484014f1 from memory into f18
fnmadd.h f25, f26, f16, f18, dyn # perform operation
fnmadd.h f25, f26, f16, f18, rdn # perform operation
fnmadd.h f25, f26, f16, f18, rmm # perform operation
fnmadd.h f25, f26, f16, f18, rne # perform operation
fnmadd.h f25, f26, f16, f18, rtz # perform operation
fnmadd.h f25, f26, f16, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f25, f26, f16, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f25, f26, f16, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f25, f26, f16, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f25, f26, f16, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f25, f26, f16, f18 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7c00 fs2 = 0x7fff)
li x2, 0xa2fcef6729a4ca8e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f21, 0(x2) # load 0x00007c00 from memory into f21
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f20, 0(x2) # load 0x00007fff from memory into f20
li x3, 0xdbf64138f50b2ad7 # load x3 with value 0xdbf64138f50b2ad7
sw x3, 0(x2) # store 0xdbf64138f50b2ad7 in memory
flh f8, 0(x2) # load 0xdbf64138f50b2ad7 from memory into f8
fnmadd.h f2, f21, f20, f8, dyn # perform operation
fnmadd.h f2, f21, f20, f8, rdn # perform operation
fnmadd.h f2, f21, f20, f8, rmm # perform operation
fnmadd.h f2, f21, f20, f8, rne # perform operation
fnmadd.h f2, f21, f20, f8, rtz # perform operation
fnmadd.h f2, f21, f20, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f2, f21, f20, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f2, f21, f20, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f2, f21, f20, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f2, f21, f20, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f2, f21, f20, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7c00 fs2 = 0x7c01)
li x20, 0x457e0b8a689158b8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f26, 0(x2) # load 0x00007c00 from memory into f26
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f19, 0(x2) # load 0x00007c01 from memory into f19
li x3, 0x60aecd2d6d8a63ec # load x3 with value 0x60aecd2d6d8a63ec
sw x3, 0(x2) # store 0x60aecd2d6d8a63ec in memory
flh f14, 0(x2) # load 0x60aecd2d6d8a63ec from memory into f14
fnmadd.h f20, f26, f19, f14, dyn # perform operation
fnmadd.h f20, f26, f19, f14, rdn # perform operation
fnmadd.h f20, f26, f19, f14, rmm # perform operation
fnmadd.h f20, f26, f19, f14, rne # perform operation
fnmadd.h f20, f26, f19, f14, rtz # perform operation
fnmadd.h f20, f26, f19, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f20, f26, f19, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f20, f26, f19, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f20, f26, f19, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f20, f26, f19, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f20, f26, f19, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7c00 fs2 = 0x7dff)
li x16, 0xe87140d3fe041a6f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f20, 0(x2) # load 0x00007c00 from memory into f20
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f15, 0(x2) # load 0x00007dff from memory into f15
li x3, 0x6d15daa664af7a9f # load x3 with value 0x6d15daa664af7a9f
sw x3, 0(x2) # store 0x6d15daa664af7a9f in memory
flh f2, 0(x2) # load 0x6d15daa664af7a9f from memory into f2
fnmadd.h f16, f20, f15, f2, dyn # perform operation
fnmadd.h f16, f20, f15, f2, rdn # perform operation
fnmadd.h f16, f20, f15, f2, rmm # perform operation
fnmadd.h f16, f20, f15, f2, rne # perform operation
fnmadd.h f16, f20, f15, f2, rtz # perform operation
fnmadd.h f16, f20, f15, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f16, f20, f15, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f16, f20, f15, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f16, f20, f15, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f16, f20, f15, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f16, f20, f15, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7c00 fs2 = 0x58b4)
li x18, 0xfd8cec634bda416b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f27, 0(x2) # load 0x00007c00 from memory into f27
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f14, 0(x2) # load 0x000058b4 from memory into f14
li x3, 0xeb75c5c214022e80 # load x3 with value 0xeb75c5c214022e80
sw x3, 0(x2) # store 0xeb75c5c214022e80 in memory
flh f26, 0(x2) # load 0xeb75c5c214022e80 from memory into f26
fnmadd.h f18, f27, f14, f26, dyn # perform operation
fnmadd.h f18, f27, f14, f26, rdn # perform operation
fnmadd.h f18, f27, f14, f26, rmm # perform operation
fnmadd.h f18, f27, f14, f26, rne # perform operation
fnmadd.h f18, f27, f14, f26, rtz # perform operation
fnmadd.h f18, f27, f14, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f18, f27, f14, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f18, f27, f14, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f18, f27, f14, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f18, f27, f14, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f18, f27, f14, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7c00 fs2 = 0xc93a)
li x20, 0x3c9d46a9845b6e40 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f14, 0(x2) # load 0x00007c00 from memory into f14
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f10, 0(x2) # load 0x0000c93a from memory into f10
li x3, 0x96c3ca4b61d3b9ba # load x3 with value 0x96c3ca4b61d3b9ba
sw x3, 0(x2) # store 0x96c3ca4b61d3b9ba in memory
flh f3, 0(x2) # load 0x96c3ca4b61d3b9ba from memory into f3
fnmadd.h f20, f14, f10, f3, dyn # perform operation
fnmadd.h f20, f14, f10, f3, rdn # perform operation
fnmadd.h f20, f14, f10, f3, rmm # perform operation
fnmadd.h f20, f14, f10, f3, rne # perform operation
fnmadd.h f20, f14, f10, f3, rtz # perform operation
fnmadd.h f20, f14, f10, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f20, f14, f10, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f20, f14, f10, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f20, f14, f10, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f20, f14, f10, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f20, f14, f10, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfc00 fs2 = 0x0)
li x1, 0x8b599da252482163 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f4, 0(x2) # load 0x0000fc00 from memory into f4
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f7, 0(x2) # load 0x00000000 from memory into f7
li x3, 0x9c377156969aed6f # load x3 with value 0x9c377156969aed6f
sw x3, 0(x2) # store 0x9c377156969aed6f in memory
flh f11, 0(x2) # load 0x9c377156969aed6f from memory into f11
fnmadd.h f1, f4, f7, f11, dyn # perform operation
fnmadd.h f1, f4, f7, f11, rdn # perform operation
fnmadd.h f1, f4, f7, f11, rmm # perform operation
fnmadd.h f1, f4, f7, f11, rne # perform operation
fnmadd.h f1, f4, f7, f11, rtz # perform operation
fnmadd.h f1, f4, f7, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f1, f4, f7, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f1, f4, f7, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f1, f4, f7, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f1, f4, f7, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f1, f4, f7, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfc00 fs2 = 0x8000)
li x12, 0x82d94336f8b20ddd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f29, 0(x2) # load 0x0000fc00 from memory into f29
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f26, 0(x2) # load 0x00008000 from memory into f26
li x3, 0xc50a36c4693fc78d # load x3 with value 0xc50a36c4693fc78d
sw x3, 0(x2) # store 0xc50a36c4693fc78d in memory
flh f4, 0(x2) # load 0xc50a36c4693fc78d from memory into f4
fnmadd.h f12, f29, f26, f4, dyn # perform operation
fnmadd.h f12, f29, f26, f4, rdn # perform operation
fnmadd.h f12, f29, f26, f4, rmm # perform operation
fnmadd.h f12, f29, f26, f4, rne # perform operation
fnmadd.h f12, f29, f26, f4, rtz # perform operation
fnmadd.h f12, f29, f26, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f12, f29, f26, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f12, f29, f26, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f12, f29, f26, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f12, f29, f26, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f12, f29, f26, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfc00 fs2 = 0x3c00)
li x19, 0x2ad3f94c8c42c658 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f3, 0(x2) # load 0x0000fc00 from memory into f3
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f30, 0(x2) # load 0x00003c00 from memory into f30
li x3, 0x6ba274b3e02d63a4 # load x3 with value 0x6ba274b3e02d63a4
sw x3, 0(x2) # store 0x6ba274b3e02d63a4 in memory
flh f13, 0(x2) # load 0x6ba274b3e02d63a4 from memory into f13
fnmadd.h f19, f3, f30, f13, dyn # perform operation
fnmadd.h f19, f3, f30, f13, rdn # perform operation
fnmadd.h f19, f3, f30, f13, rmm # perform operation
fnmadd.h f19, f3, f30, f13, rne # perform operation
fnmadd.h f19, f3, f30, f13, rtz # perform operation
fnmadd.h f19, f3, f30, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f19, f3, f30, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f19, f3, f30, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f19, f3, f30, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f19, f3, f30, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f19, f3, f30, f13 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfc00 fs2 = 0xbc00)
li x30, 0x6ed1757dbe38be4a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f25, 0(x2) # load 0x0000fc00 from memory into f25
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f9, 0(x2) # load 0x0000bc00 from memory into f9
li x3, 0xffce63abee5d98d1 # load x3 with value 0xffce63abee5d98d1
sw x3, 0(x2) # store 0xffce63abee5d98d1 in memory
flh f28, 0(x2) # load 0xffce63abee5d98d1 from memory into f28
fnmadd.h f30, f25, f9, f28, dyn # perform operation
fnmadd.h f30, f25, f9, f28, rdn # perform operation
fnmadd.h f30, f25, f9, f28, rmm # perform operation
fnmadd.h f30, f25, f9, f28, rne # perform operation
fnmadd.h f30, f25, f9, f28, rtz # perform operation
fnmadd.h f30, f25, f9, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f30, f25, f9, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f30, f25, f9, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f30, f25, f9, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f30, f25, f9, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f30, f25, f9, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfc00 fs2 = 0x3e00)
li x20, 0x893f03579e73ff4a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f15, 0(x2) # load 0x0000fc00 from memory into f15
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f29, 0(x2) # load 0x00003e00 from memory into f29
li x3, 0x36fce8cc3ebab8b # load x3 with value 0x36fce8cc3ebab8b
sw x3, 0(x2) # store 0x36fce8cc3ebab8b in memory
flh f23, 0(x2) # load 0x36fce8cc3ebab8b from memory into f23
fnmadd.h f20, f15, f29, f23, dyn # perform operation
fnmadd.h f20, f15, f29, f23, rdn # perform operation
fnmadd.h f20, f15, f29, f23, rmm # perform operation
fnmadd.h f20, f15, f29, f23, rne # perform operation
fnmadd.h f20, f15, f29, f23, rtz # perform operation
fnmadd.h f20, f15, f29, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f20, f15, f29, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f20, f15, f29, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f20, f15, f29, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f20, f15, f29, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f20, f15, f29, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfc00 fs2 = 0xbe00)
li x17, 0x6cdd335e7a79431c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f8, 0(x2) # load 0x0000fc00 from memory into f8
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f6, 0(x2) # load 0x0000be00 from memory into f6
li x3, 0xc675e109c03d3994 # load x3 with value 0xc675e109c03d3994
sw x3, 0(x2) # store 0xc675e109c03d3994 in memory
flh f27, 0(x2) # load 0xc675e109c03d3994 from memory into f27
fnmadd.h f17, f8, f6, f27, dyn # perform operation
fnmadd.h f17, f8, f6, f27, rdn # perform operation
fnmadd.h f17, f8, f6, f27, rmm # perform operation
fnmadd.h f17, f8, f6, f27, rne # perform operation
fnmadd.h f17, f8, f6, f27, rtz # perform operation
fnmadd.h f17, f8, f6, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f17, f8, f6, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f17, f8, f6, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f17, f8, f6, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f17, f8, f6, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f17, f8, f6, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfc00 fs2 = 0x4000)
li x24, 0xe1d537867e64fb7e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f14, 0(x2) # load 0x0000fc00 from memory into f14
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f27, 0(x2) # load 0x00004000 from memory into f27
li x3, 0xfc3579cfa46ff4b # load x3 with value 0xfc3579cfa46ff4b
sw x3, 0(x2) # store 0xfc3579cfa46ff4b in memory
flh f9, 0(x2) # load 0xfc3579cfa46ff4b from memory into f9
fnmadd.h f24, f14, f27, f9, dyn # perform operation
fnmadd.h f24, f14, f27, f9, rdn # perform operation
fnmadd.h f24, f14, f27, f9, rmm # perform operation
fnmadd.h f24, f14, f27, f9, rne # perform operation
fnmadd.h f24, f14, f27, f9, rtz # perform operation
fnmadd.h f24, f14, f27, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f24, f14, f27, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f24, f14, f27, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f24, f14, f27, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f24, f14, f27, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f24, f14, f27, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfc00 fs2 = 0xc000)
li x13, 0x8ead881de8656a5b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f2, 0(x2) # load 0x0000fc00 from memory into f2
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f8, 0(x2) # load 0x0000c000 from memory into f8
li x3, 0x7ce59b1c0f0ed159 # load x3 with value 0x7ce59b1c0f0ed159
sw x3, 0(x2) # store 0x7ce59b1c0f0ed159 in memory
flh f3, 0(x2) # load 0x7ce59b1c0f0ed159 from memory into f3
fnmadd.h f13, f2, f8, f3, dyn # perform operation
fnmadd.h f13, f2, f8, f3, rdn # perform operation
fnmadd.h f13, f2, f8, f3, rmm # perform operation
fnmadd.h f13, f2, f8, f3, rne # perform operation
fnmadd.h f13, f2, f8, f3, rtz # perform operation
fnmadd.h f13, f2, f8, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f13, f2, f8, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f13, f2, f8, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f13, f2, f8, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f13, f2, f8, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f13, f2, f8, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfc00 fs2 = 0x400)
li x26, 0xd25e5e1e6815f9b4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f18, 0(x2) # load 0x0000fc00 from memory into f18
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f19, 0(x2) # load 0x00000400 from memory into f19
li x3, 0xf5e1809c01f83e6 # load x3 with value 0xf5e1809c01f83e6
sw x3, 0(x2) # store 0xf5e1809c01f83e6 in memory
flh f4, 0(x2) # load 0xf5e1809c01f83e6 from memory into f4
fnmadd.h f26, f18, f19, f4, dyn # perform operation
fnmadd.h f26, f18, f19, f4, rdn # perform operation
fnmadd.h f26, f18, f19, f4, rmm # perform operation
fnmadd.h f26, f18, f19, f4, rne # perform operation
fnmadd.h f26, f18, f19, f4, rtz # perform operation
fnmadd.h f26, f18, f19, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f26, f18, f19, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f26, f18, f19, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f26, f18, f19, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f26, f18, f19, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f26, f18, f19, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfc00 fs2 = 0x8400)
li x17, 0xa38b208e40a79f0d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f23, 0(x2) # load 0x0000fc00 from memory into f23
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f2, 0(x2) # load 0x00008400 from memory into f2
li x3, 0xd236d9dc055c39f8 # load x3 with value 0xd236d9dc055c39f8
sw x3, 0(x2) # store 0xd236d9dc055c39f8 in memory
flh f8, 0(x2) # load 0xd236d9dc055c39f8 from memory into f8
fnmadd.h f17, f23, f2, f8, dyn # perform operation
fnmadd.h f17, f23, f2, f8, rdn # perform operation
fnmadd.h f17, f23, f2, f8, rmm # perform operation
fnmadd.h f17, f23, f2, f8, rne # perform operation
fnmadd.h f17, f23, f2, f8, rtz # perform operation
fnmadd.h f17, f23, f2, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f17, f23, f2, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f17, f23, f2, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f17, f23, f2, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f17, f23, f2, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f17, f23, f2, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfc00 fs2 = 0x7bff)
li x1, 0x787f332a5fc0eff8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f6, 0(x2) # load 0x0000fc00 from memory into f6
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f4, 0(x2) # load 0x00007bff from memory into f4
li x3, 0x2d918e930af185e2 # load x3 with value 0x2d918e930af185e2
sw x3, 0(x2) # store 0x2d918e930af185e2 in memory
flh f8, 0(x2) # load 0x2d918e930af185e2 from memory into f8
fnmadd.h f1, f6, f4, f8, dyn # perform operation
fnmadd.h f1, f6, f4, f8, rdn # perform operation
fnmadd.h f1, f6, f4, f8, rmm # perform operation
fnmadd.h f1, f6, f4, f8, rne # perform operation
fnmadd.h f1, f6, f4, f8, rtz # perform operation
fnmadd.h f1, f6, f4, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f1, f6, f4, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f1, f6, f4, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f1, f6, f4, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f1, f6, f4, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f1, f6, f4, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfc00 fs2 = 0xfbff)
li x21, 0xf5fdb017eb1ed140 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f28, 0(x2) # load 0x0000fc00 from memory into f28
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f30, 0(x2) # load 0x0000fbff from memory into f30
li x3, 0x1df64ff9b148a891 # load x3 with value 0x1df64ff9b148a891
sw x3, 0(x2) # store 0x1df64ff9b148a891 in memory
flh f17, 0(x2) # load 0x1df64ff9b148a891 from memory into f17
fnmadd.h f21, f28, f30, f17, dyn # perform operation
fnmadd.h f21, f28, f30, f17, rdn # perform operation
fnmadd.h f21, f28, f30, f17, rmm # perform operation
fnmadd.h f21, f28, f30, f17, rne # perform operation
fnmadd.h f21, f28, f30, f17, rtz # perform operation
fnmadd.h f21, f28, f30, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f21, f28, f30, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f21, f28, f30, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f21, f28, f30, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f21, f28, f30, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f21, f28, f30, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfc00 fs2 = 0x3ff)
li x15, 0xa0dc791fb2e1ac9b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f31, 0(x2) # load 0x0000fc00 from memory into f31
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f7, 0(x2) # load 0x000003ff from memory into f7
li x3, 0x1231fd0957fad26e # load x3 with value 0x1231fd0957fad26e
sw x3, 0(x2) # store 0x1231fd0957fad26e in memory
flh f27, 0(x2) # load 0x1231fd0957fad26e from memory into f27
fnmadd.h f15, f31, f7, f27, dyn # perform operation
fnmadd.h f15, f31, f7, f27, rdn # perform operation
fnmadd.h f15, f31, f7, f27, rmm # perform operation
fnmadd.h f15, f31, f7, f27, rne # perform operation
fnmadd.h f15, f31, f7, f27, rtz # perform operation
fnmadd.h f15, f31, f7, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f15, f31, f7, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f15, f31, f7, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f15, f31, f7, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f15, f31, f7, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f15, f31, f7, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfc00 fs2 = 0x83ff)
li x2, 0x9d91e3d0c7079c81 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f19, 0(x2) # load 0x0000fc00 from memory into f19
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f21, 0(x2) # load 0x000083ff from memory into f21
li x3, 0x8737dec603e8c607 # load x3 with value 0x8737dec603e8c607
sw x3, 0(x2) # store 0x8737dec603e8c607 in memory
flh f14, 0(x2) # load 0x8737dec603e8c607 from memory into f14
fnmadd.h f2, f19, f21, f14, dyn # perform operation
fnmadd.h f2, f19, f21, f14, rdn # perform operation
fnmadd.h f2, f19, f21, f14, rmm # perform operation
fnmadd.h f2, f19, f21, f14, rne # perform operation
fnmadd.h f2, f19, f21, f14, rtz # perform operation
fnmadd.h f2, f19, f21, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f2, f19, f21, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f2, f19, f21, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f2, f19, f21, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f2, f19, f21, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f2, f19, f21, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfc00 fs2 = 0x200)
li x13, 0x53f4e4112e88b4c5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f29, 0(x2) # load 0x0000fc00 from memory into f29
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f7, 0(x2) # load 0x00000200 from memory into f7
li x3, 0x30539bd41a8615a1 # load x3 with value 0x30539bd41a8615a1
sw x3, 0(x2) # store 0x30539bd41a8615a1 in memory
flh f14, 0(x2) # load 0x30539bd41a8615a1 from memory into f14
fnmadd.h f13, f29, f7, f14, dyn # perform operation
fnmadd.h f13, f29, f7, f14, rdn # perform operation
fnmadd.h f13, f29, f7, f14, rmm # perform operation
fnmadd.h f13, f29, f7, f14, rne # perform operation
fnmadd.h f13, f29, f7, f14, rtz # perform operation
fnmadd.h f13, f29, f7, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f13, f29, f7, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f13, f29, f7, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f13, f29, f7, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f13, f29, f7, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f13, f29, f7, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfc00 fs2 = 0x8200)
li x26, 0x3626ce44f5841dc8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f22, 0(x2) # load 0x0000fc00 from memory into f22
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f19, 0(x2) # load 0x00008200 from memory into f19
li x3, 0xd0efe109b9071d9f # load x3 with value 0xd0efe109b9071d9f
sw x3, 0(x2) # store 0xd0efe109b9071d9f in memory
flh f5, 0(x2) # load 0xd0efe109b9071d9f from memory into f5
fnmadd.h f26, f22, f19, f5, dyn # perform operation
fnmadd.h f26, f22, f19, f5, rdn # perform operation
fnmadd.h f26, f22, f19, f5, rmm # perform operation
fnmadd.h f26, f22, f19, f5, rne # perform operation
fnmadd.h f26, f22, f19, f5, rtz # perform operation
fnmadd.h f26, f22, f19, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f26, f22, f19, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f26, f22, f19, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f26, f22, f19, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f26, f22, f19, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f26, f22, f19, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfc00 fs2 = 0x1)
li x26, 0x3549a3b8fabe5e53 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f11, 0(x2) # load 0x0000fc00 from memory into f11
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f19, 0(x2) # load 0x00000001 from memory into f19
li x3, 0xfecf43280cd23614 # load x3 with value 0xfecf43280cd23614
sw x3, 0(x2) # store 0xfecf43280cd23614 in memory
flh f8, 0(x2) # load 0xfecf43280cd23614 from memory into f8
fnmadd.h f26, f11, f19, f8, dyn # perform operation
fnmadd.h f26, f11, f19, f8, rdn # perform operation
fnmadd.h f26, f11, f19, f8, rmm # perform operation
fnmadd.h f26, f11, f19, f8, rne # perform operation
fnmadd.h f26, f11, f19, f8, rtz # perform operation
fnmadd.h f26, f11, f19, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f26, f11, f19, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f26, f11, f19, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f26, f11, f19, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f26, f11, f19, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f26, f11, f19, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfc00 fs2 = 0x8001)
li x22, 0xc7a6ae9f6eb21c24 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f17, 0(x2) # load 0x0000fc00 from memory into f17
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f31, 0(x2) # load 0x00008001 from memory into f31
li x3, 0x5f55c59bc44f356d # load x3 with value 0x5f55c59bc44f356d
sw x3, 0(x2) # store 0x5f55c59bc44f356d in memory
flh f5, 0(x2) # load 0x5f55c59bc44f356d from memory into f5
fnmadd.h f22, f17, f31, f5, dyn # perform operation
fnmadd.h f22, f17, f31, f5, rdn # perform operation
fnmadd.h f22, f17, f31, f5, rmm # perform operation
fnmadd.h f22, f17, f31, f5, rne # perform operation
fnmadd.h f22, f17, f31, f5, rtz # perform operation
fnmadd.h f22, f17, f31, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f22, f17, f31, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f22, f17, f31, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f22, f17, f31, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f22, f17, f31, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f22, f17, f31, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfc00 fs2 = 0x7c00)
li x9, 0xe06c587e1ad07910 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f21, 0(x2) # load 0x0000fc00 from memory into f21
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f24, 0(x2) # load 0x00007c00 from memory into f24
li x3, 0xade4ce275006a1bf # load x3 with value 0xade4ce275006a1bf
sw x3, 0(x2) # store 0xade4ce275006a1bf in memory
flh f25, 0(x2) # load 0xade4ce275006a1bf from memory into f25
fnmadd.h f9, f21, f24, f25, dyn # perform operation
fnmadd.h f9, f21, f24, f25, rdn # perform operation
fnmadd.h f9, f21, f24, f25, rmm # perform operation
fnmadd.h f9, f21, f24, f25, rne # perform operation
fnmadd.h f9, f21, f24, f25, rtz # perform operation
fnmadd.h f9, f21, f24, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f9, f21, f24, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f9, f21, f24, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f9, f21, f24, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f9, f21, f24, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f9, f21, f24, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfc00 fs2 = 0xfc00)
li x30, 0x2dc52fb4f69c7947 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f23, 0(x2) # load 0x0000fc00 from memory into f23
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f21, 0(x2) # load 0x0000fc00 from memory into f21
li x3, 0x4e47dbedc43f4ff5 # load x3 with value 0x4e47dbedc43f4ff5
sw x3, 0(x2) # store 0x4e47dbedc43f4ff5 in memory
flh f24, 0(x2) # load 0x4e47dbedc43f4ff5 from memory into f24
fnmadd.h f30, f23, f21, f24, dyn # perform operation
fnmadd.h f30, f23, f21, f24, rdn # perform operation
fnmadd.h f30, f23, f21, f24, rmm # perform operation
fnmadd.h f30, f23, f21, f24, rne # perform operation
fnmadd.h f30, f23, f21, f24, rtz # perform operation
fnmadd.h f30, f23, f21, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f30, f23, f21, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f30, f23, f21, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f30, f23, f21, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f30, f23, f21, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f30, f23, f21, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfc00 fs2 = 0x7e00)
li x23, 0x9acc55ec7f1bc3fc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f20, 0(x2) # load 0x0000fc00 from memory into f20
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f13, 0(x2) # load 0x00007e00 from memory into f13
li x3, 0x2a56333933568cf8 # load x3 with value 0x2a56333933568cf8
sw x3, 0(x2) # store 0x2a56333933568cf8 in memory
flh f19, 0(x2) # load 0x2a56333933568cf8 from memory into f19
fnmadd.h f23, f20, f13, f19, dyn # perform operation
fnmadd.h f23, f20, f13, f19, rdn # perform operation
fnmadd.h f23, f20, f13, f19, rmm # perform operation
fnmadd.h f23, f20, f13, f19, rne # perform operation
fnmadd.h f23, f20, f13, f19, rtz # perform operation
fnmadd.h f23, f20, f13, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f23, f20, f13, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f23, f20, f13, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f23, f20, f13, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f23, f20, f13, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f23, f20, f13, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfc00 fs2 = 0x7fff)
li x26, 0xb730de53e7ec0f7a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f17, 0(x2) # load 0x0000fc00 from memory into f17
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f20, 0(x2) # load 0x00007fff from memory into f20
li x3, 0x7a3455db6bb08e1e # load x3 with value 0x7a3455db6bb08e1e
sw x3, 0(x2) # store 0x7a3455db6bb08e1e in memory
flh f16, 0(x2) # load 0x7a3455db6bb08e1e from memory into f16
fnmadd.h f26, f17, f20, f16, dyn # perform operation
fnmadd.h f26, f17, f20, f16, rdn # perform operation
fnmadd.h f26, f17, f20, f16, rmm # perform operation
fnmadd.h f26, f17, f20, f16, rne # perform operation
fnmadd.h f26, f17, f20, f16, rtz # perform operation
fnmadd.h f26, f17, f20, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f26, f17, f20, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f26, f17, f20, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f26, f17, f20, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f26, f17, f20, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f26, f17, f20, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfc00 fs2 = 0x7c01)
li x13, 0xf59af20b1b1ecb53 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f21, 0(x2) # load 0x0000fc00 from memory into f21
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f24, 0(x2) # load 0x00007c01 from memory into f24
li x3, 0x85979457cea472d2 # load x3 with value 0x85979457cea472d2
sw x3, 0(x2) # store 0x85979457cea472d2 in memory
flh f10, 0(x2) # load 0x85979457cea472d2 from memory into f10
fnmadd.h f13, f21, f24, f10, dyn # perform operation
fnmadd.h f13, f21, f24, f10, rdn # perform operation
fnmadd.h f13, f21, f24, f10, rmm # perform operation
fnmadd.h f13, f21, f24, f10, rne # perform operation
fnmadd.h f13, f21, f24, f10, rtz # perform operation
fnmadd.h f13, f21, f24, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f13, f21, f24, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f13, f21, f24, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f13, f21, f24, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f13, f21, f24, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f13, f21, f24, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfc00 fs2 = 0x7dff)
li x18, 0xa9d441fb9d3e0b29 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f25, 0(x2) # load 0x0000fc00 from memory into f25
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f3, 0(x2) # load 0x00007dff from memory into f3
li x3, 0xf675a2d3a44a4c92 # load x3 with value 0xf675a2d3a44a4c92
sw x3, 0(x2) # store 0xf675a2d3a44a4c92 in memory
flh f12, 0(x2) # load 0xf675a2d3a44a4c92 from memory into f12
fnmadd.h f18, f25, f3, f12, dyn # perform operation
fnmadd.h f18, f25, f3, f12, rdn # perform operation
fnmadd.h f18, f25, f3, f12, rmm # perform operation
fnmadd.h f18, f25, f3, f12, rne # perform operation
fnmadd.h f18, f25, f3, f12, rtz # perform operation
fnmadd.h f18, f25, f3, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f18, f25, f3, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f18, f25, f3, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f18, f25, f3, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f18, f25, f3, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f18, f25, f3, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfc00 fs2 = 0x58b4)
li x6, 0x934b89ab5b774653 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f3, 0(x2) # load 0x0000fc00 from memory into f3
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f28, 0(x2) # load 0x000058b4 from memory into f28
li x3, 0x7ea6e043ae187caf # load x3 with value 0x7ea6e043ae187caf
sw x3, 0(x2) # store 0x7ea6e043ae187caf in memory
flh f17, 0(x2) # load 0x7ea6e043ae187caf from memory into f17
fnmadd.h f6, f3, f28, f17, dyn # perform operation
fnmadd.h f6, f3, f28, f17, rdn # perform operation
fnmadd.h f6, f3, f28, f17, rmm # perform operation
fnmadd.h f6, f3, f28, f17, rne # perform operation
fnmadd.h f6, f3, f28, f17, rtz # perform operation
fnmadd.h f6, f3, f28, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f6, f3, f28, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f6, f3, f28, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f6, f3, f28, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f6, f3, f28, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f6, f3, f28, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfc00 fs2 = 0xc93a)
li x5, 0x9917511ca0efadec # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f3, 0(x2) # load 0x0000fc00 from memory into f3
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f15, 0(x2) # load 0x0000c93a from memory into f15
li x3, 0x54d70998579da626 # load x3 with value 0x54d70998579da626
sw x3, 0(x2) # store 0x54d70998579da626 in memory
flh f30, 0(x2) # load 0x54d70998579da626 from memory into f30
fnmadd.h f5, f3, f15, f30, dyn # perform operation
fnmadd.h f5, f3, f15, f30, rdn # perform operation
fnmadd.h f5, f3, f15, f30, rmm # perform operation
fnmadd.h f5, f3, f15, f30, rne # perform operation
fnmadd.h f5, f3, f15, f30, rtz # perform operation
fnmadd.h f5, f3, f15, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f5, f3, f15, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f5, f3, f15, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f5, f3, f15, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f5, f3, f15, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f5, f3, f15, f30 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7e00 fs2 = 0x0)
li x9, 0x62e163af02a27792 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f26, 0(x2) # load 0x00007e00 from memory into f26
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f10, 0(x2) # load 0x00000000 from memory into f10
li x3, 0xee956fddbecd9c72 # load x3 with value 0xee956fddbecd9c72
sw x3, 0(x2) # store 0xee956fddbecd9c72 in memory
flh f15, 0(x2) # load 0xee956fddbecd9c72 from memory into f15
fnmadd.h f9, f26, f10, f15, dyn # perform operation
fnmadd.h f9, f26, f10, f15, rdn # perform operation
fnmadd.h f9, f26, f10, f15, rmm # perform operation
fnmadd.h f9, f26, f10, f15, rne # perform operation
fnmadd.h f9, f26, f10, f15, rtz # perform operation
fnmadd.h f9, f26, f10, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f9, f26, f10, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f9, f26, f10, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f9, f26, f10, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f9, f26, f10, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f9, f26, f10, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7e00 fs2 = 0x8000)
li x25, 0xc6bff6f4a03902cd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f14, 0(x2) # load 0x00007e00 from memory into f14
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f17, 0(x2) # load 0x00008000 from memory into f17
li x3, 0x71ca239e698c1a2b # load x3 with value 0x71ca239e698c1a2b
sw x3, 0(x2) # store 0x71ca239e698c1a2b in memory
flh f5, 0(x2) # load 0x71ca239e698c1a2b from memory into f5
fnmadd.h f25, f14, f17, f5, dyn # perform operation
fnmadd.h f25, f14, f17, f5, rdn # perform operation
fnmadd.h f25, f14, f17, f5, rmm # perform operation
fnmadd.h f25, f14, f17, f5, rne # perform operation
fnmadd.h f25, f14, f17, f5, rtz # perform operation
fnmadd.h f25, f14, f17, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f25, f14, f17, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f25, f14, f17, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f25, f14, f17, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f25, f14, f17, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f25, f14, f17, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7e00 fs2 = 0x3c00)
li x28, 0xed4c5f5d4248b982 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f14, 0(x2) # load 0x00007e00 from memory into f14
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f31, 0(x2) # load 0x00003c00 from memory into f31
li x3, 0x123af004da1b47e7 # load x3 with value 0x123af004da1b47e7
sw x3, 0(x2) # store 0x123af004da1b47e7 in memory
flh f16, 0(x2) # load 0x123af004da1b47e7 from memory into f16
fnmadd.h f28, f14, f31, f16, dyn # perform operation
fnmadd.h f28, f14, f31, f16, rdn # perform operation
fnmadd.h f28, f14, f31, f16, rmm # perform operation
fnmadd.h f28, f14, f31, f16, rne # perform operation
fnmadd.h f28, f14, f31, f16, rtz # perform operation
fnmadd.h f28, f14, f31, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f28, f14, f31, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f28, f14, f31, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f28, f14, f31, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f28, f14, f31, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f28, f14, f31, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7e00 fs2 = 0xbc00)
li x28, 0x3376774f13e115a3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f25, 0(x2) # load 0x00007e00 from memory into f25
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f24, 0(x2) # load 0x0000bc00 from memory into f24
li x3, 0xd8d03cb231043dc5 # load x3 with value 0xd8d03cb231043dc5
sw x3, 0(x2) # store 0xd8d03cb231043dc5 in memory
flh f31, 0(x2) # load 0xd8d03cb231043dc5 from memory into f31
fnmadd.h f28, f25, f24, f31, dyn # perform operation
fnmadd.h f28, f25, f24, f31, rdn # perform operation
fnmadd.h f28, f25, f24, f31, rmm # perform operation
fnmadd.h f28, f25, f24, f31, rne # perform operation
fnmadd.h f28, f25, f24, f31, rtz # perform operation
fnmadd.h f28, f25, f24, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f28, f25, f24, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f28, f25, f24, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f28, f25, f24, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f28, f25, f24, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f28, f25, f24, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7e00 fs2 = 0x3e00)
li x23, 0xdb14268f1cf604d1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f12, 0(x2) # load 0x00007e00 from memory into f12
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f20, 0(x2) # load 0x00003e00 from memory into f20
li x3, 0x92cda5e6adb7ec15 # load x3 with value 0x92cda5e6adb7ec15
sw x3, 0(x2) # store 0x92cda5e6adb7ec15 in memory
flh f8, 0(x2) # load 0x92cda5e6adb7ec15 from memory into f8
fnmadd.h f23, f12, f20, f8, dyn # perform operation
fnmadd.h f23, f12, f20, f8, rdn # perform operation
fnmadd.h f23, f12, f20, f8, rmm # perform operation
fnmadd.h f23, f12, f20, f8, rne # perform operation
fnmadd.h f23, f12, f20, f8, rtz # perform operation
fnmadd.h f23, f12, f20, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f23, f12, f20, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f23, f12, f20, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f23, f12, f20, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f23, f12, f20, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f23, f12, f20, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7e00 fs2 = 0xbe00)
li x6, 0x2c7c9a7262ed4ab2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f18, 0(x2) # load 0x00007e00 from memory into f18
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f31, 0(x2) # load 0x0000be00 from memory into f31
li x3, 0x73121e7aae0f3a71 # load x3 with value 0x73121e7aae0f3a71
sw x3, 0(x2) # store 0x73121e7aae0f3a71 in memory
flh f9, 0(x2) # load 0x73121e7aae0f3a71 from memory into f9
fnmadd.h f6, f18, f31, f9, dyn # perform operation
fnmadd.h f6, f18, f31, f9, rdn # perform operation
fnmadd.h f6, f18, f31, f9, rmm # perform operation
fnmadd.h f6, f18, f31, f9, rne # perform operation
fnmadd.h f6, f18, f31, f9, rtz # perform operation
fnmadd.h f6, f18, f31, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f6, f18, f31, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f6, f18, f31, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f6, f18, f31, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f6, f18, f31, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f6, f18, f31, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7e00 fs2 = 0x4000)
li x14, 0xb5354f7472e893aa # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f20, 0(x2) # load 0x00007e00 from memory into f20
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f27, 0(x2) # load 0x00004000 from memory into f27
li x3, 0x4e4ff4b68a433323 # load x3 with value 0x4e4ff4b68a433323
sw x3, 0(x2) # store 0x4e4ff4b68a433323 in memory
flh f25, 0(x2) # load 0x4e4ff4b68a433323 from memory into f25
fnmadd.h f14, f20, f27, f25, dyn # perform operation
fnmadd.h f14, f20, f27, f25, rdn # perform operation
fnmadd.h f14, f20, f27, f25, rmm # perform operation
fnmadd.h f14, f20, f27, f25, rne # perform operation
fnmadd.h f14, f20, f27, f25, rtz # perform operation
fnmadd.h f14, f20, f27, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f14, f20, f27, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f14, f20, f27, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f14, f20, f27, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f14, f20, f27, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f14, f20, f27, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7e00 fs2 = 0xc000)
li x3, 0xd3a97bf76469cc58 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f29, 0(x2) # load 0x00007e00 from memory into f29
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f16, 0(x2) # load 0x0000c000 from memory into f16
li x3, 0xf1b3e55962df3466 # load x3 with value 0xf1b3e55962df3466
sw x3, 0(x2) # store 0xf1b3e55962df3466 in memory
flh f27, 0(x2) # load 0xf1b3e55962df3466 from memory into f27
fnmadd.h f3, f29, f16, f27, dyn # perform operation
fnmadd.h f3, f29, f16, f27, rdn # perform operation
fnmadd.h f3, f29, f16, f27, rmm # perform operation
fnmadd.h f3, f29, f16, f27, rne # perform operation
fnmadd.h f3, f29, f16, f27, rtz # perform operation
fnmadd.h f3, f29, f16, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f3, f29, f16, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f3, f29, f16, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f3, f29, f16, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f3, f29, f16, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f3, f29, f16, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7e00 fs2 = 0x400)
li x14, 0xe119f3529abd5e2b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f23, 0(x2) # load 0x00007e00 from memory into f23
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f25, 0(x2) # load 0x00000400 from memory into f25
li x3, 0x10ecc9fd36143ff1 # load x3 with value 0x10ecc9fd36143ff1
sw x3, 0(x2) # store 0x10ecc9fd36143ff1 in memory
flh f7, 0(x2) # load 0x10ecc9fd36143ff1 from memory into f7
fnmadd.h f14, f23, f25, f7, dyn # perform operation
fnmadd.h f14, f23, f25, f7, rdn # perform operation
fnmadd.h f14, f23, f25, f7, rmm # perform operation
fnmadd.h f14, f23, f25, f7, rne # perform operation
fnmadd.h f14, f23, f25, f7, rtz # perform operation
fnmadd.h f14, f23, f25, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f14, f23, f25, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f14, f23, f25, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f14, f23, f25, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f14, f23, f25, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f14, f23, f25, f7 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7e00 fs2 = 0x8400)
li x23, 0xf5e082f4658933fb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f29, 0(x2) # load 0x00007e00 from memory into f29
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f12, 0(x2) # load 0x00008400 from memory into f12
li x3, 0xda7635d7f91c620e # load x3 with value 0xda7635d7f91c620e
sw x3, 0(x2) # store 0xda7635d7f91c620e in memory
flh f25, 0(x2) # load 0xda7635d7f91c620e from memory into f25
fnmadd.h f23, f29, f12, f25, dyn # perform operation
fnmadd.h f23, f29, f12, f25, rdn # perform operation
fnmadd.h f23, f29, f12, f25, rmm # perform operation
fnmadd.h f23, f29, f12, f25, rne # perform operation
fnmadd.h f23, f29, f12, f25, rtz # perform operation
fnmadd.h f23, f29, f12, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f23, f29, f12, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f23, f29, f12, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f23, f29, f12, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f23, f29, f12, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f23, f29, f12, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7e00 fs2 = 0x7bff)
li x17, 0x382ddc552a143fc8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f7, 0(x2) # load 0x00007e00 from memory into f7
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f8, 0(x2) # load 0x00007bff from memory into f8
li x3, 0xc24798ed18d4be16 # load x3 with value 0xc24798ed18d4be16
sw x3, 0(x2) # store 0xc24798ed18d4be16 in memory
flh f2, 0(x2) # load 0xc24798ed18d4be16 from memory into f2
fnmadd.h f17, f7, f8, f2, dyn # perform operation
fnmadd.h f17, f7, f8, f2, rdn # perform operation
fnmadd.h f17, f7, f8, f2, rmm # perform operation
fnmadd.h f17, f7, f8, f2, rne # perform operation
fnmadd.h f17, f7, f8, f2, rtz # perform operation
fnmadd.h f17, f7, f8, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f17, f7, f8, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f17, f7, f8, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f17, f7, f8, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f17, f7, f8, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f17, f7, f8, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7e00 fs2 = 0xfbff)
li x26, 0x5b03b331d584123d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f12, 0(x2) # load 0x00007e00 from memory into f12
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f29, 0(x2) # load 0x0000fbff from memory into f29
li x3, 0x4d5f84edb9d253bc # load x3 with value 0x4d5f84edb9d253bc
sw x3, 0(x2) # store 0x4d5f84edb9d253bc in memory
flh f24, 0(x2) # load 0x4d5f84edb9d253bc from memory into f24
fnmadd.h f26, f12, f29, f24, dyn # perform operation
fnmadd.h f26, f12, f29, f24, rdn # perform operation
fnmadd.h f26, f12, f29, f24, rmm # perform operation
fnmadd.h f26, f12, f29, f24, rne # perform operation
fnmadd.h f26, f12, f29, f24, rtz # perform operation
fnmadd.h f26, f12, f29, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f26, f12, f29, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f26, f12, f29, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f26, f12, f29, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f26, f12, f29, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f26, f12, f29, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7e00 fs2 = 0x3ff)
li x21, 0x9cb4e6785681e4c2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f30, 0(x2) # load 0x00007e00 from memory into f30
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f31, 0(x2) # load 0x000003ff from memory into f31
li x3, 0xb33314a0c4f0dc86 # load x3 with value 0xb33314a0c4f0dc86
sw x3, 0(x2) # store 0xb33314a0c4f0dc86 in memory
flh f10, 0(x2) # load 0xb33314a0c4f0dc86 from memory into f10
fnmadd.h f21, f30, f31, f10, dyn # perform operation
fnmadd.h f21, f30, f31, f10, rdn # perform operation
fnmadd.h f21, f30, f31, f10, rmm # perform operation
fnmadd.h f21, f30, f31, f10, rne # perform operation
fnmadd.h f21, f30, f31, f10, rtz # perform operation
fnmadd.h f21, f30, f31, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f21, f30, f31, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f21, f30, f31, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f21, f30, f31, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f21, f30, f31, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f21, f30, f31, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7e00 fs2 = 0x83ff)
li x20, 0xab5e8e008d613cce # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f5, 0(x2) # load 0x00007e00 from memory into f5
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f8, 0(x2) # load 0x000083ff from memory into f8
li x3, 0xfba391f2421dbeaa # load x3 with value 0xfba391f2421dbeaa
sw x3, 0(x2) # store 0xfba391f2421dbeaa in memory
flh f18, 0(x2) # load 0xfba391f2421dbeaa from memory into f18
fnmadd.h f20, f5, f8, f18, dyn # perform operation
fnmadd.h f20, f5, f8, f18, rdn # perform operation
fnmadd.h f20, f5, f8, f18, rmm # perform operation
fnmadd.h f20, f5, f8, f18, rne # perform operation
fnmadd.h f20, f5, f8, f18, rtz # perform operation
fnmadd.h f20, f5, f8, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f20, f5, f8, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f20, f5, f8, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f20, f5, f8, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f20, f5, f8, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f20, f5, f8, f18 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7e00 fs2 = 0x200)
li x6, 0x72385a5780f8197c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f15, 0(x2) # load 0x00007e00 from memory into f15
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f12, 0(x2) # load 0x00000200 from memory into f12
li x3, 0xf79de948595d20e0 # load x3 with value 0xf79de948595d20e0
sw x3, 0(x2) # store 0xf79de948595d20e0 in memory
flh f3, 0(x2) # load 0xf79de948595d20e0 from memory into f3
fnmadd.h f6, f15, f12, f3, dyn # perform operation
fnmadd.h f6, f15, f12, f3, rdn # perform operation
fnmadd.h f6, f15, f12, f3, rmm # perform operation
fnmadd.h f6, f15, f12, f3, rne # perform operation
fnmadd.h f6, f15, f12, f3, rtz # perform operation
fnmadd.h f6, f15, f12, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f6, f15, f12, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f6, f15, f12, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f6, f15, f12, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f6, f15, f12, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f6, f15, f12, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7e00 fs2 = 0x8200)
li x8, 0xe134d368f4e67977 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f26, 0(x2) # load 0x00007e00 from memory into f26
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f16, 0(x2) # load 0x00008200 from memory into f16
li x3, 0xa41d8966ee7e7948 # load x3 with value 0xa41d8966ee7e7948
sw x3, 0(x2) # store 0xa41d8966ee7e7948 in memory
flh f7, 0(x2) # load 0xa41d8966ee7e7948 from memory into f7
fnmadd.h f8, f26, f16, f7, dyn # perform operation
fnmadd.h f8, f26, f16, f7, rdn # perform operation
fnmadd.h f8, f26, f16, f7, rmm # perform operation
fnmadd.h f8, f26, f16, f7, rne # perform operation
fnmadd.h f8, f26, f16, f7, rtz # perform operation
fnmadd.h f8, f26, f16, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f8, f26, f16, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f8, f26, f16, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f8, f26, f16, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f8, f26, f16, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f8, f26, f16, f7 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7e00 fs2 = 0x1)
li x17, 0x3249bf76516840f1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f16, 0(x2) # load 0x00007e00 from memory into f16
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f10, 0(x2) # load 0x00000001 from memory into f10
li x3, 0x8ebfb3de13ecd80e # load x3 with value 0x8ebfb3de13ecd80e
sw x3, 0(x2) # store 0x8ebfb3de13ecd80e in memory
flh f7, 0(x2) # load 0x8ebfb3de13ecd80e from memory into f7
fnmadd.h f17, f16, f10, f7, dyn # perform operation
fnmadd.h f17, f16, f10, f7, rdn # perform operation
fnmadd.h f17, f16, f10, f7, rmm # perform operation
fnmadd.h f17, f16, f10, f7, rne # perform operation
fnmadd.h f17, f16, f10, f7, rtz # perform operation
fnmadd.h f17, f16, f10, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f17, f16, f10, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f17, f16, f10, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f17, f16, f10, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f17, f16, f10, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f17, f16, f10, f7 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7e00 fs2 = 0x8001)
li x15, 0x208d1628b1845747 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f27, 0(x2) # load 0x00007e00 from memory into f27
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f26, 0(x2) # load 0x00008001 from memory into f26
li x3, 0x13897cb64057851f # load x3 with value 0x13897cb64057851f
sw x3, 0(x2) # store 0x13897cb64057851f in memory
flh f10, 0(x2) # load 0x13897cb64057851f from memory into f10
fnmadd.h f15, f27, f26, f10, dyn # perform operation
fnmadd.h f15, f27, f26, f10, rdn # perform operation
fnmadd.h f15, f27, f26, f10, rmm # perform operation
fnmadd.h f15, f27, f26, f10, rne # perform operation
fnmadd.h f15, f27, f26, f10, rtz # perform operation
fnmadd.h f15, f27, f26, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f15, f27, f26, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f15, f27, f26, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f15, f27, f26, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f15, f27, f26, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f15, f27, f26, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7e00 fs2 = 0x7c00)
li x24, 0xfd06a9e9304b1c7b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f25, 0(x2) # load 0x00007e00 from memory into f25
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f20, 0(x2) # load 0x00007c00 from memory into f20
li x3, 0x7405200f7e03633c # load x3 with value 0x7405200f7e03633c
sw x3, 0(x2) # store 0x7405200f7e03633c in memory
flh f29, 0(x2) # load 0x7405200f7e03633c from memory into f29
fnmadd.h f24, f25, f20, f29, dyn # perform operation
fnmadd.h f24, f25, f20, f29, rdn # perform operation
fnmadd.h f24, f25, f20, f29, rmm # perform operation
fnmadd.h f24, f25, f20, f29, rne # perform operation
fnmadd.h f24, f25, f20, f29, rtz # perform operation
fnmadd.h f24, f25, f20, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f24, f25, f20, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f24, f25, f20, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f24, f25, f20, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f24, f25, f20, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f24, f25, f20, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7e00 fs2 = 0xfc00)
li x16, 0x424f1a923d089927 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f19, 0(x2) # load 0x00007e00 from memory into f19
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f15, 0(x2) # load 0x0000fc00 from memory into f15
li x3, 0xcc137726c8b298a7 # load x3 with value 0xcc137726c8b298a7
sw x3, 0(x2) # store 0xcc137726c8b298a7 in memory
flh f18, 0(x2) # load 0xcc137726c8b298a7 from memory into f18
fnmadd.h f16, f19, f15, f18, dyn # perform operation
fnmadd.h f16, f19, f15, f18, rdn # perform operation
fnmadd.h f16, f19, f15, f18, rmm # perform operation
fnmadd.h f16, f19, f15, f18, rne # perform operation
fnmadd.h f16, f19, f15, f18, rtz # perform operation
fnmadd.h f16, f19, f15, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f16, f19, f15, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f16, f19, f15, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f16, f19, f15, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f16, f19, f15, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f16, f19, f15, f18 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7e00 fs2 = 0x7e00)
li x10, 0x69df6fe9c20526c5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f11, 0(x2) # load 0x00007e00 from memory into f11
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f21, 0(x2) # load 0x00007e00 from memory into f21
li x3, 0x2c257372424aef60 # load x3 with value 0x2c257372424aef60
sw x3, 0(x2) # store 0x2c257372424aef60 in memory
flh f24, 0(x2) # load 0x2c257372424aef60 from memory into f24
fnmadd.h f10, f11, f21, f24, dyn # perform operation
fnmadd.h f10, f11, f21, f24, rdn # perform operation
fnmadd.h f10, f11, f21, f24, rmm # perform operation
fnmadd.h f10, f11, f21, f24, rne # perform operation
fnmadd.h f10, f11, f21, f24, rtz # perform operation
fnmadd.h f10, f11, f21, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f10, f11, f21, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f10, f11, f21, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f10, f11, f21, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f10, f11, f21, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f10, f11, f21, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7e00 fs2 = 0x7fff)
li x15, 0x13ae6336321040df # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f31, 0(x2) # load 0x00007e00 from memory into f31
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f26, 0(x2) # load 0x00007fff from memory into f26
li x3, 0xf9ed68e76e78cf29 # load x3 with value 0xf9ed68e76e78cf29
sw x3, 0(x2) # store 0xf9ed68e76e78cf29 in memory
flh f12, 0(x2) # load 0xf9ed68e76e78cf29 from memory into f12
fnmadd.h f15, f31, f26, f12, dyn # perform operation
fnmadd.h f15, f31, f26, f12, rdn # perform operation
fnmadd.h f15, f31, f26, f12, rmm # perform operation
fnmadd.h f15, f31, f26, f12, rne # perform operation
fnmadd.h f15, f31, f26, f12, rtz # perform operation
fnmadd.h f15, f31, f26, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f15, f31, f26, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f15, f31, f26, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f15, f31, f26, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f15, f31, f26, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f15, f31, f26, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7e00 fs2 = 0x7c01)
li x21, 0x062bfd986531cd71 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f18, 0(x2) # load 0x00007e00 from memory into f18
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f31, 0(x2) # load 0x00007c01 from memory into f31
li x3, 0xc84297a50d009fa7 # load x3 with value 0xc84297a50d009fa7
sw x3, 0(x2) # store 0xc84297a50d009fa7 in memory
flh f9, 0(x2) # load 0xc84297a50d009fa7 from memory into f9
fnmadd.h f21, f18, f31, f9, dyn # perform operation
fnmadd.h f21, f18, f31, f9, rdn # perform operation
fnmadd.h f21, f18, f31, f9, rmm # perform operation
fnmadd.h f21, f18, f31, f9, rne # perform operation
fnmadd.h f21, f18, f31, f9, rtz # perform operation
fnmadd.h f21, f18, f31, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f21, f18, f31, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f21, f18, f31, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f21, f18, f31, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f21, f18, f31, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f21, f18, f31, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7e00 fs2 = 0x7dff)
li x1, 0x2cb7a688b4f8900d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f7, 0(x2) # load 0x00007e00 from memory into f7
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f30, 0(x2) # load 0x00007dff from memory into f30
li x3, 0x609e0ec80e70ce18 # load x3 with value 0x609e0ec80e70ce18
sw x3, 0(x2) # store 0x609e0ec80e70ce18 in memory
flh f29, 0(x2) # load 0x609e0ec80e70ce18 from memory into f29
fnmadd.h f1, f7, f30, f29, dyn # perform operation
fnmadd.h f1, f7, f30, f29, rdn # perform operation
fnmadd.h f1, f7, f30, f29, rmm # perform operation
fnmadd.h f1, f7, f30, f29, rne # perform operation
fnmadd.h f1, f7, f30, f29, rtz # perform operation
fnmadd.h f1, f7, f30, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f1, f7, f30, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f1, f7, f30, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f1, f7, f30, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f1, f7, f30, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f1, f7, f30, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7e00 fs2 = 0x58b4)
li x3, 0xa168a15a2e4b0b0a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f18, 0(x2) # load 0x00007e00 from memory into f18
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f16, 0(x2) # load 0x000058b4 from memory into f16
li x3, 0x78b958e78ede09aa # load x3 with value 0x78b958e78ede09aa
sw x3, 0(x2) # store 0x78b958e78ede09aa in memory
flh f28, 0(x2) # load 0x78b958e78ede09aa from memory into f28
fnmadd.h f3, f18, f16, f28, dyn # perform operation
fnmadd.h f3, f18, f16, f28, rdn # perform operation
fnmadd.h f3, f18, f16, f28, rmm # perform operation
fnmadd.h f3, f18, f16, f28, rne # perform operation
fnmadd.h f3, f18, f16, f28, rtz # perform operation
fnmadd.h f3, f18, f16, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f3, f18, f16, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f3, f18, f16, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f3, f18, f16, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f3, f18, f16, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f3, f18, f16, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7e00 fs2 = 0xc93a)
li x12, 0xb859a840612edbf3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f18, 0(x2) # load 0x00007e00 from memory into f18
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f5, 0(x2) # load 0x0000c93a from memory into f5
li x3, 0x26e60676c134a029 # load x3 with value 0x26e60676c134a029
sw x3, 0(x2) # store 0x26e60676c134a029 in memory
flh f15, 0(x2) # load 0x26e60676c134a029 from memory into f15
fnmadd.h f12, f18, f5, f15, dyn # perform operation
fnmadd.h f12, f18, f5, f15, rdn # perform operation
fnmadd.h f12, f18, f5, f15, rmm # perform operation
fnmadd.h f12, f18, f5, f15, rne # perform operation
fnmadd.h f12, f18, f5, f15, rtz # perform operation
fnmadd.h f12, f18, f5, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f12, f18, f5, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f12, f18, f5, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f12, f18, f5, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f12, f18, f5, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f12, f18, f5, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fff fs2 = 0x0)
li x8, 0x7d4dc8b7ee820246 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f29, 0(x2) # load 0x00007fff from memory into f29
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f3, 0(x2) # load 0x00000000 from memory into f3
li x3, 0x2d04bc8469fa6151 # load x3 with value 0x2d04bc8469fa6151
sw x3, 0(x2) # store 0x2d04bc8469fa6151 in memory
flh f25, 0(x2) # load 0x2d04bc8469fa6151 from memory into f25
fnmadd.h f8, f29, f3, f25, dyn # perform operation
fnmadd.h f8, f29, f3, f25, rdn # perform operation
fnmadd.h f8, f29, f3, f25, rmm # perform operation
fnmadd.h f8, f29, f3, f25, rne # perform operation
fnmadd.h f8, f29, f3, f25, rtz # perform operation
fnmadd.h f8, f29, f3, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f8, f29, f3, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f8, f29, f3, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f8, f29, f3, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f8, f29, f3, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f8, f29, f3, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fff fs2 = 0x8000)
li x31, 0xc28a31b1671787ea # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f1, 0(x2) # load 0x00007fff from memory into f1
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f3, 0(x2) # load 0x00008000 from memory into f3
li x3, 0xf5229f6de90d04c8 # load x3 with value 0xf5229f6de90d04c8
sw x3, 0(x2) # store 0xf5229f6de90d04c8 in memory
flh f20, 0(x2) # load 0xf5229f6de90d04c8 from memory into f20
fnmadd.h f31, f1, f3, f20, dyn # perform operation
fnmadd.h f31, f1, f3, f20, rdn # perform operation
fnmadd.h f31, f1, f3, f20, rmm # perform operation
fnmadd.h f31, f1, f3, f20, rne # perform operation
fnmadd.h f31, f1, f3, f20, rtz # perform operation
fnmadd.h f31, f1, f3, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f31, f1, f3, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f31, f1, f3, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f31, f1, f3, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f31, f1, f3, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f31, f1, f3, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fff fs2 = 0x3c00)
li x4, 0xf17f1406a35499a8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f12, 0(x2) # load 0x00007fff from memory into f12
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f31, 0(x2) # load 0x00003c00 from memory into f31
li x3, 0xe1e180f3f4b03df8 # load x3 with value 0xe1e180f3f4b03df8
sw x3, 0(x2) # store 0xe1e180f3f4b03df8 in memory
flh f27, 0(x2) # load 0xe1e180f3f4b03df8 from memory into f27
fnmadd.h f4, f12, f31, f27, dyn # perform operation
fnmadd.h f4, f12, f31, f27, rdn # perform operation
fnmadd.h f4, f12, f31, f27, rmm # perform operation
fnmadd.h f4, f12, f31, f27, rne # perform operation
fnmadd.h f4, f12, f31, f27, rtz # perform operation
fnmadd.h f4, f12, f31, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f4, f12, f31, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f4, f12, f31, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f4, f12, f31, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f4, f12, f31, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f4, f12, f31, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fff fs2 = 0xbc00)
li x4, 0x5bd1e13e8f35351f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f29, 0(x2) # load 0x00007fff from memory into f29
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f26, 0(x2) # load 0x0000bc00 from memory into f26
li x3, 0x441d5e7eba336650 # load x3 with value 0x441d5e7eba336650
sw x3, 0(x2) # store 0x441d5e7eba336650 in memory
flh f8, 0(x2) # load 0x441d5e7eba336650 from memory into f8
fnmadd.h f4, f29, f26, f8, dyn # perform operation
fnmadd.h f4, f29, f26, f8, rdn # perform operation
fnmadd.h f4, f29, f26, f8, rmm # perform operation
fnmadd.h f4, f29, f26, f8, rne # perform operation
fnmadd.h f4, f29, f26, f8, rtz # perform operation
fnmadd.h f4, f29, f26, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f4, f29, f26, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f4, f29, f26, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f4, f29, f26, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f4, f29, f26, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f4, f29, f26, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fff fs2 = 0x3e00)
li x27, 0xa2930ec127742881 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f19, 0(x2) # load 0x00007fff from memory into f19
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f2, 0(x2) # load 0x00003e00 from memory into f2
li x3, 0x7e274bf31ed4c485 # load x3 with value 0x7e274bf31ed4c485
sw x3, 0(x2) # store 0x7e274bf31ed4c485 in memory
flh f10, 0(x2) # load 0x7e274bf31ed4c485 from memory into f10
fnmadd.h f27, f19, f2, f10, dyn # perform operation
fnmadd.h f27, f19, f2, f10, rdn # perform operation
fnmadd.h f27, f19, f2, f10, rmm # perform operation
fnmadd.h f27, f19, f2, f10, rne # perform operation
fnmadd.h f27, f19, f2, f10, rtz # perform operation
fnmadd.h f27, f19, f2, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f27, f19, f2, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f27, f19, f2, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f27, f19, f2, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f27, f19, f2, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f27, f19, f2, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fff fs2 = 0xbe00)
li x20, 0x2776ddf44d04daaa # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f3, 0(x2) # load 0x00007fff from memory into f3
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f21, 0(x2) # load 0x0000be00 from memory into f21
li x3, 0x6ac9deba744b4ef9 # load x3 with value 0x6ac9deba744b4ef9
sw x3, 0(x2) # store 0x6ac9deba744b4ef9 in memory
flh f28, 0(x2) # load 0x6ac9deba744b4ef9 from memory into f28
fnmadd.h f20, f3, f21, f28, dyn # perform operation
fnmadd.h f20, f3, f21, f28, rdn # perform operation
fnmadd.h f20, f3, f21, f28, rmm # perform operation
fnmadd.h f20, f3, f21, f28, rne # perform operation
fnmadd.h f20, f3, f21, f28, rtz # perform operation
fnmadd.h f20, f3, f21, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f20, f3, f21, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f20, f3, f21, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f20, f3, f21, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f20, f3, f21, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f20, f3, f21, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fff fs2 = 0x4000)
li x12, 0xd89627b4275ad587 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f11, 0(x2) # load 0x00007fff from memory into f11
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f21, 0(x2) # load 0x00004000 from memory into f21
li x3, 0xf5dafb7d2e3917ac # load x3 with value 0xf5dafb7d2e3917ac
sw x3, 0(x2) # store 0xf5dafb7d2e3917ac in memory
flh f22, 0(x2) # load 0xf5dafb7d2e3917ac from memory into f22
fnmadd.h f12, f11, f21, f22, dyn # perform operation
fnmadd.h f12, f11, f21, f22, rdn # perform operation
fnmadd.h f12, f11, f21, f22, rmm # perform operation
fnmadd.h f12, f11, f21, f22, rne # perform operation
fnmadd.h f12, f11, f21, f22, rtz # perform operation
fnmadd.h f12, f11, f21, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f12, f11, f21, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f12, f11, f21, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f12, f11, f21, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f12, f11, f21, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f12, f11, f21, f22 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fff fs2 = 0xc000)
li x5, 0x7785765061ed6956 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f16, 0(x2) # load 0x00007fff from memory into f16
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f6, 0(x2) # load 0x0000c000 from memory into f6
li x3, 0xd91eade73a06dff2 # load x3 with value 0xd91eade73a06dff2
sw x3, 0(x2) # store 0xd91eade73a06dff2 in memory
flh f7, 0(x2) # load 0xd91eade73a06dff2 from memory into f7
fnmadd.h f5, f16, f6, f7, dyn # perform operation
fnmadd.h f5, f16, f6, f7, rdn # perform operation
fnmadd.h f5, f16, f6, f7, rmm # perform operation
fnmadd.h f5, f16, f6, f7, rne # perform operation
fnmadd.h f5, f16, f6, f7, rtz # perform operation
fnmadd.h f5, f16, f6, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f5, f16, f6, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f5, f16, f6, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f5, f16, f6, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f5, f16, f6, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f5, f16, f6, f7 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fff fs2 = 0x400)
li x11, 0x547d5124da56cdc9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f8, 0(x2) # load 0x00007fff from memory into f8
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f20, 0(x2) # load 0x00000400 from memory into f20
li x3, 0x5e1565901ec0ce1e # load x3 with value 0x5e1565901ec0ce1e
sw x3, 0(x2) # store 0x5e1565901ec0ce1e in memory
flh f1, 0(x2) # load 0x5e1565901ec0ce1e from memory into f1
fnmadd.h f11, f8, f20, f1, dyn # perform operation
fnmadd.h f11, f8, f20, f1, rdn # perform operation
fnmadd.h f11, f8, f20, f1, rmm # perform operation
fnmadd.h f11, f8, f20, f1, rne # perform operation
fnmadd.h f11, f8, f20, f1, rtz # perform operation
fnmadd.h f11, f8, f20, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f11, f8, f20, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f11, f8, f20, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f11, f8, f20, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f11, f8, f20, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f11, f8, f20, f1 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fff fs2 = 0x8400)
li x31, 0xdf250ce8e0170075 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f16, 0(x2) # load 0x00007fff from memory into f16
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f21, 0(x2) # load 0x00008400 from memory into f21
li x3, 0xf612444d43446275 # load x3 with value 0xf612444d43446275
sw x3, 0(x2) # store 0xf612444d43446275 in memory
flh f4, 0(x2) # load 0xf612444d43446275 from memory into f4
fnmadd.h f31, f16, f21, f4, dyn # perform operation
fnmadd.h f31, f16, f21, f4, rdn # perform operation
fnmadd.h f31, f16, f21, f4, rmm # perform operation
fnmadd.h f31, f16, f21, f4, rne # perform operation
fnmadd.h f31, f16, f21, f4, rtz # perform operation
fnmadd.h f31, f16, f21, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f31, f16, f21, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f31, f16, f21, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f31, f16, f21, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f31, f16, f21, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f31, f16, f21, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fff fs2 = 0x7bff)
li x11, 0x2f106f144331058e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f28, 0(x2) # load 0x00007fff from memory into f28
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f6, 0(x2) # load 0x00007bff from memory into f6
li x3, 0xd241e6ff35d3f50e # load x3 with value 0xd241e6ff35d3f50e
sw x3, 0(x2) # store 0xd241e6ff35d3f50e in memory
flh f2, 0(x2) # load 0xd241e6ff35d3f50e from memory into f2
fnmadd.h f11, f28, f6, f2, dyn # perform operation
fnmadd.h f11, f28, f6, f2, rdn # perform operation
fnmadd.h f11, f28, f6, f2, rmm # perform operation
fnmadd.h f11, f28, f6, f2, rne # perform operation
fnmadd.h f11, f28, f6, f2, rtz # perform operation
fnmadd.h f11, f28, f6, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f11, f28, f6, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f11, f28, f6, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f11, f28, f6, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f11, f28, f6, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f11, f28, f6, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fff fs2 = 0xfbff)
li x10, 0xa2237648d78597d5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f23, 0(x2) # load 0x00007fff from memory into f23
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f20, 0(x2) # load 0x0000fbff from memory into f20
li x3, 0xf4cc7fcec56c50ec # load x3 with value 0xf4cc7fcec56c50ec
sw x3, 0(x2) # store 0xf4cc7fcec56c50ec in memory
flh f11, 0(x2) # load 0xf4cc7fcec56c50ec from memory into f11
fnmadd.h f10, f23, f20, f11, dyn # perform operation
fnmadd.h f10, f23, f20, f11, rdn # perform operation
fnmadd.h f10, f23, f20, f11, rmm # perform operation
fnmadd.h f10, f23, f20, f11, rne # perform operation
fnmadd.h f10, f23, f20, f11, rtz # perform operation
fnmadd.h f10, f23, f20, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f10, f23, f20, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f10, f23, f20, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f10, f23, f20, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f10, f23, f20, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f10, f23, f20, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fff fs2 = 0x3ff)
li x6, 0x753dacc10d5fab62 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f30, 0(x2) # load 0x00007fff from memory into f30
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f23, 0(x2) # load 0x000003ff from memory into f23
li x3, 0xae163dda158d04f7 # load x3 with value 0xae163dda158d04f7
sw x3, 0(x2) # store 0xae163dda158d04f7 in memory
flh f24, 0(x2) # load 0xae163dda158d04f7 from memory into f24
fnmadd.h f6, f30, f23, f24, dyn # perform operation
fnmadd.h f6, f30, f23, f24, rdn # perform operation
fnmadd.h f6, f30, f23, f24, rmm # perform operation
fnmadd.h f6, f30, f23, f24, rne # perform operation
fnmadd.h f6, f30, f23, f24, rtz # perform operation
fnmadd.h f6, f30, f23, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f6, f30, f23, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f6, f30, f23, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f6, f30, f23, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f6, f30, f23, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f6, f30, f23, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fff fs2 = 0x83ff)
li x22, 0xa2cf6a13bafc1673 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f13, 0(x2) # load 0x00007fff from memory into f13
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f18, 0(x2) # load 0x000083ff from memory into f18
li x3, 0xc482380843621d33 # load x3 with value 0xc482380843621d33
sw x3, 0(x2) # store 0xc482380843621d33 in memory
flh f30, 0(x2) # load 0xc482380843621d33 from memory into f30
fnmadd.h f22, f13, f18, f30, dyn # perform operation
fnmadd.h f22, f13, f18, f30, rdn # perform operation
fnmadd.h f22, f13, f18, f30, rmm # perform operation
fnmadd.h f22, f13, f18, f30, rne # perform operation
fnmadd.h f22, f13, f18, f30, rtz # perform operation
fnmadd.h f22, f13, f18, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f22, f13, f18, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f22, f13, f18, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f22, f13, f18, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f22, f13, f18, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f22, f13, f18, f30 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fff fs2 = 0x200)
li x30, 0xe48b7a4e51768c9b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f10, 0(x2) # load 0x00007fff from memory into f10
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f6, 0(x2) # load 0x00000200 from memory into f6
li x3, 0x37aa361c20db2c74 # load x3 with value 0x37aa361c20db2c74
sw x3, 0(x2) # store 0x37aa361c20db2c74 in memory
flh f9, 0(x2) # load 0x37aa361c20db2c74 from memory into f9
fnmadd.h f30, f10, f6, f9, dyn # perform operation
fnmadd.h f30, f10, f6, f9, rdn # perform operation
fnmadd.h f30, f10, f6, f9, rmm # perform operation
fnmadd.h f30, f10, f6, f9, rne # perform operation
fnmadd.h f30, f10, f6, f9, rtz # perform operation
fnmadd.h f30, f10, f6, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f30, f10, f6, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f30, f10, f6, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f30, f10, f6, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f30, f10, f6, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f30, f10, f6, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fff fs2 = 0x8200)
li x27, 0xa573d3b8253f9983 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f28, 0(x2) # load 0x00007fff from memory into f28
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f17, 0(x2) # load 0x00008200 from memory into f17
li x3, 0xa695ea4f0e702017 # load x3 with value 0xa695ea4f0e702017
sw x3, 0(x2) # store 0xa695ea4f0e702017 in memory
flh f25, 0(x2) # load 0xa695ea4f0e702017 from memory into f25
fnmadd.h f27, f28, f17, f25, dyn # perform operation
fnmadd.h f27, f28, f17, f25, rdn # perform operation
fnmadd.h f27, f28, f17, f25, rmm # perform operation
fnmadd.h f27, f28, f17, f25, rne # perform operation
fnmadd.h f27, f28, f17, f25, rtz # perform operation
fnmadd.h f27, f28, f17, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f27, f28, f17, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f27, f28, f17, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f27, f28, f17, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f27, f28, f17, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f27, f28, f17, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fff fs2 = 0x1)
li x22, 0x00164c0667b94bc5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f18, 0(x2) # load 0x00007fff from memory into f18
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f15, 0(x2) # load 0x00000001 from memory into f15
li x3, 0xb8bf806faa3f37eb # load x3 with value 0xb8bf806faa3f37eb
sw x3, 0(x2) # store 0xb8bf806faa3f37eb in memory
flh f6, 0(x2) # load 0xb8bf806faa3f37eb from memory into f6
fnmadd.h f22, f18, f15, f6, dyn # perform operation
fnmadd.h f22, f18, f15, f6, rdn # perform operation
fnmadd.h f22, f18, f15, f6, rmm # perform operation
fnmadd.h f22, f18, f15, f6, rne # perform operation
fnmadd.h f22, f18, f15, f6, rtz # perform operation
fnmadd.h f22, f18, f15, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f22, f18, f15, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f22, f18, f15, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f22, f18, f15, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f22, f18, f15, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f22, f18, f15, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fff fs2 = 0x8001)
li x3, 0xa5f6a22e4bf497c8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f18, 0(x2) # load 0x00007fff from memory into f18
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f24, 0(x2) # load 0x00008001 from memory into f24
li x3, 0xebe70bc60300f41a # load x3 with value 0xebe70bc60300f41a
sw x3, 0(x2) # store 0xebe70bc60300f41a in memory
flh f2, 0(x2) # load 0xebe70bc60300f41a from memory into f2
fnmadd.h f3, f18, f24, f2, dyn # perform operation
fnmadd.h f3, f18, f24, f2, rdn # perform operation
fnmadd.h f3, f18, f24, f2, rmm # perform operation
fnmadd.h f3, f18, f24, f2, rne # perform operation
fnmadd.h f3, f18, f24, f2, rtz # perform operation
fnmadd.h f3, f18, f24, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f3, f18, f24, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f3, f18, f24, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f3, f18, f24, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f3, f18, f24, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f3, f18, f24, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fff fs2 = 0x7c00)
li x11, 0x3b4c4732b86366cd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f7, 0(x2) # load 0x00007fff from memory into f7
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f29, 0(x2) # load 0x00007c00 from memory into f29
li x3, 0x27e22a28f9f2b55a # load x3 with value 0x27e22a28f9f2b55a
sw x3, 0(x2) # store 0x27e22a28f9f2b55a in memory
flh f22, 0(x2) # load 0x27e22a28f9f2b55a from memory into f22
fnmadd.h f11, f7, f29, f22, dyn # perform operation
fnmadd.h f11, f7, f29, f22, rdn # perform operation
fnmadd.h f11, f7, f29, f22, rmm # perform operation
fnmadd.h f11, f7, f29, f22, rne # perform operation
fnmadd.h f11, f7, f29, f22, rtz # perform operation
fnmadd.h f11, f7, f29, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f11, f7, f29, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f11, f7, f29, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f11, f7, f29, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f11, f7, f29, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f11, f7, f29, f22 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fff fs2 = 0xfc00)
li x9, 0x5462f98fa989719e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f15, 0(x2) # load 0x00007fff from memory into f15
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f19, 0(x2) # load 0x0000fc00 from memory into f19
li x3, 0x24399101047f3703 # load x3 with value 0x24399101047f3703
sw x3, 0(x2) # store 0x24399101047f3703 in memory
flh f12, 0(x2) # load 0x24399101047f3703 from memory into f12
fnmadd.h f9, f15, f19, f12, dyn # perform operation
fnmadd.h f9, f15, f19, f12, rdn # perform operation
fnmadd.h f9, f15, f19, f12, rmm # perform operation
fnmadd.h f9, f15, f19, f12, rne # perform operation
fnmadd.h f9, f15, f19, f12, rtz # perform operation
fnmadd.h f9, f15, f19, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f9, f15, f19, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f9, f15, f19, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f9, f15, f19, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f9, f15, f19, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f9, f15, f19, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fff fs2 = 0x7e00)
li x20, 0x28c65d0dd5c03713 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f24, 0(x2) # load 0x00007fff from memory into f24
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f6, 0(x2) # load 0x00007e00 from memory into f6
li x3, 0x4eae721be1abe4b # load x3 with value 0x4eae721be1abe4b
sw x3, 0(x2) # store 0x4eae721be1abe4b in memory
flh f2, 0(x2) # load 0x4eae721be1abe4b from memory into f2
fnmadd.h f20, f24, f6, f2, dyn # perform operation
fnmadd.h f20, f24, f6, f2, rdn # perform operation
fnmadd.h f20, f24, f6, f2, rmm # perform operation
fnmadd.h f20, f24, f6, f2, rne # perform operation
fnmadd.h f20, f24, f6, f2, rtz # perform operation
fnmadd.h f20, f24, f6, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f20, f24, f6, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f20, f24, f6, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f20, f24, f6, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f20, f24, f6, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f20, f24, f6, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fff fs2 = 0x7fff)
li x10, 0xd597dfe20a74b15d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f23, 0(x2) # load 0x00007fff from memory into f23
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f20, 0(x2) # load 0x00007fff from memory into f20
li x3, 0x93989c85675d1457 # load x3 with value 0x93989c85675d1457
sw x3, 0(x2) # store 0x93989c85675d1457 in memory
flh f24, 0(x2) # load 0x93989c85675d1457 from memory into f24
fnmadd.h f10, f23, f20, f24, dyn # perform operation
fnmadd.h f10, f23, f20, f24, rdn # perform operation
fnmadd.h f10, f23, f20, f24, rmm # perform operation
fnmadd.h f10, f23, f20, f24, rne # perform operation
fnmadd.h f10, f23, f20, f24, rtz # perform operation
fnmadd.h f10, f23, f20, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f10, f23, f20, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f10, f23, f20, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f10, f23, f20, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f10, f23, f20, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f10, f23, f20, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fff fs2 = 0x7c01)
li x21, 0xf3317e5589fc3d17 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f6, 0(x2) # load 0x00007fff from memory into f6
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f29, 0(x2) # load 0x00007c01 from memory into f29
li x3, 0x86c640130e473916 # load x3 with value 0x86c640130e473916
sw x3, 0(x2) # store 0x86c640130e473916 in memory
flh f25, 0(x2) # load 0x86c640130e473916 from memory into f25
fnmadd.h f21, f6, f29, f25, dyn # perform operation
fnmadd.h f21, f6, f29, f25, rdn # perform operation
fnmadd.h f21, f6, f29, f25, rmm # perform operation
fnmadd.h f21, f6, f29, f25, rne # perform operation
fnmadd.h f21, f6, f29, f25, rtz # perform operation
fnmadd.h f21, f6, f29, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f21, f6, f29, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f21, f6, f29, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f21, f6, f29, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f21, f6, f29, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f21, f6, f29, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fff fs2 = 0x7dff)
li x30, 0xe733480c2daef9d6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f6, 0(x2) # load 0x00007fff from memory into f6
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f29, 0(x2) # load 0x00007dff from memory into f29
li x3, 0xffa87274ff9705e2 # load x3 with value 0xffa87274ff9705e2
sw x3, 0(x2) # store 0xffa87274ff9705e2 in memory
flh f12, 0(x2) # load 0xffa87274ff9705e2 from memory into f12
fnmadd.h f30, f6, f29, f12, dyn # perform operation
fnmadd.h f30, f6, f29, f12, rdn # perform operation
fnmadd.h f30, f6, f29, f12, rmm # perform operation
fnmadd.h f30, f6, f29, f12, rne # perform operation
fnmadd.h f30, f6, f29, f12, rtz # perform operation
fnmadd.h f30, f6, f29, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f30, f6, f29, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f30, f6, f29, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f30, f6, f29, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f30, f6, f29, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f30, f6, f29, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fff fs2 = 0x58b4)
li x20, 0xf5b93dbf582cc7d7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f3, 0(x2) # load 0x00007fff from memory into f3
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f6, 0(x2) # load 0x000058b4 from memory into f6
li x3, 0x1b538b8718a3b10f # load x3 with value 0x1b538b8718a3b10f
sw x3, 0(x2) # store 0x1b538b8718a3b10f in memory
flh f5, 0(x2) # load 0x1b538b8718a3b10f from memory into f5
fnmadd.h f20, f3, f6, f5, dyn # perform operation
fnmadd.h f20, f3, f6, f5, rdn # perform operation
fnmadd.h f20, f3, f6, f5, rmm # perform operation
fnmadd.h f20, f3, f6, f5, rne # perform operation
fnmadd.h f20, f3, f6, f5, rtz # perform operation
fnmadd.h f20, f3, f6, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f20, f3, f6, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f20, f3, f6, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f20, f3, f6, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f20, f3, f6, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f20, f3, f6, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fff fs2 = 0xc93a)
li x23, 0x14da0cd78fe0648c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f8, 0(x2) # load 0x00007fff from memory into f8
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f20, 0(x2) # load 0x0000c93a from memory into f20
li x3, 0x75891b376b8410b8 # load x3 with value 0x75891b376b8410b8
sw x3, 0(x2) # store 0x75891b376b8410b8 in memory
flh f4, 0(x2) # load 0x75891b376b8410b8 from memory into f4
fnmadd.h f23, f8, f20, f4, dyn # perform operation
fnmadd.h f23, f8, f20, f4, rdn # perform operation
fnmadd.h f23, f8, f20, f4, rmm # perform operation
fnmadd.h f23, f8, f20, f4, rne # perform operation
fnmadd.h f23, f8, f20, f4, rtz # perform operation
fnmadd.h f23, f8, f20, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f23, f8, f20, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f23, f8, f20, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f23, f8, f20, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f23, f8, f20, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f23, f8, f20, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7c01 fs2 = 0x0)
li x18, 0xc46ed8815c840d06 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f19, 0(x2) # load 0x00007c01 from memory into f19
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f9, 0(x2) # load 0x00000000 from memory into f9
li x3, 0x6e08cee0cbed1735 # load x3 with value 0x6e08cee0cbed1735
sw x3, 0(x2) # store 0x6e08cee0cbed1735 in memory
flh f3, 0(x2) # load 0x6e08cee0cbed1735 from memory into f3
fnmadd.h f18, f19, f9, f3, dyn # perform operation
fnmadd.h f18, f19, f9, f3, rdn # perform operation
fnmadd.h f18, f19, f9, f3, rmm # perform operation
fnmadd.h f18, f19, f9, f3, rne # perform operation
fnmadd.h f18, f19, f9, f3, rtz # perform operation
fnmadd.h f18, f19, f9, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f18, f19, f9, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f18, f19, f9, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f18, f19, f9, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f18, f19, f9, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f18, f19, f9, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7c01 fs2 = 0x8000)
li x5, 0x8c95b93e92bc6ad9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f10, 0(x2) # load 0x00007c01 from memory into f10
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f7, 0(x2) # load 0x00008000 from memory into f7
li x3, 0xe812e9e0c3d758b4 # load x3 with value 0xe812e9e0c3d758b4
sw x3, 0(x2) # store 0xe812e9e0c3d758b4 in memory
flh f14, 0(x2) # load 0xe812e9e0c3d758b4 from memory into f14
fnmadd.h f5, f10, f7, f14, dyn # perform operation
fnmadd.h f5, f10, f7, f14, rdn # perform operation
fnmadd.h f5, f10, f7, f14, rmm # perform operation
fnmadd.h f5, f10, f7, f14, rne # perform operation
fnmadd.h f5, f10, f7, f14, rtz # perform operation
fnmadd.h f5, f10, f7, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f5, f10, f7, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f5, f10, f7, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f5, f10, f7, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f5, f10, f7, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f5, f10, f7, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7c01 fs2 = 0x3c00)
li x27, 0xbdcafc1874b1aa65 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f9, 0(x2) # load 0x00007c01 from memory into f9
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f5, 0(x2) # load 0x00003c00 from memory into f5
li x3, 0x59c1a2a75bb8404b # load x3 with value 0x59c1a2a75bb8404b
sw x3, 0(x2) # store 0x59c1a2a75bb8404b in memory
flh f2, 0(x2) # load 0x59c1a2a75bb8404b from memory into f2
fnmadd.h f27, f9, f5, f2, dyn # perform operation
fnmadd.h f27, f9, f5, f2, rdn # perform operation
fnmadd.h f27, f9, f5, f2, rmm # perform operation
fnmadd.h f27, f9, f5, f2, rne # perform operation
fnmadd.h f27, f9, f5, f2, rtz # perform operation
fnmadd.h f27, f9, f5, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f27, f9, f5, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f27, f9, f5, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f27, f9, f5, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f27, f9, f5, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f27, f9, f5, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7c01 fs2 = 0xbc00)
li x25, 0x2cc03e091f4ca451 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f27, 0(x2) # load 0x00007c01 from memory into f27
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f17, 0(x2) # load 0x0000bc00 from memory into f17
li x3, 0x51992d97cc51afb # load x3 with value 0x51992d97cc51afb
sw x3, 0(x2) # store 0x51992d97cc51afb in memory
flh f19, 0(x2) # load 0x51992d97cc51afb from memory into f19
fnmadd.h f25, f27, f17, f19, dyn # perform operation
fnmadd.h f25, f27, f17, f19, rdn # perform operation
fnmadd.h f25, f27, f17, f19, rmm # perform operation
fnmadd.h f25, f27, f17, f19, rne # perform operation
fnmadd.h f25, f27, f17, f19, rtz # perform operation
fnmadd.h f25, f27, f17, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f25, f27, f17, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f25, f27, f17, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f25, f27, f17, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f25, f27, f17, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f25, f27, f17, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7c01 fs2 = 0x3e00)
li x5, 0xb0d3b44a1ee2ed05 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f8, 0(x2) # load 0x00007c01 from memory into f8
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f26, 0(x2) # load 0x00003e00 from memory into f26
li x3, 0xf35db86343f3ad81 # load x3 with value 0xf35db86343f3ad81
sw x3, 0(x2) # store 0xf35db86343f3ad81 in memory
flh f22, 0(x2) # load 0xf35db86343f3ad81 from memory into f22
fnmadd.h f5, f8, f26, f22, dyn # perform operation
fnmadd.h f5, f8, f26, f22, rdn # perform operation
fnmadd.h f5, f8, f26, f22, rmm # perform operation
fnmadd.h f5, f8, f26, f22, rne # perform operation
fnmadd.h f5, f8, f26, f22, rtz # perform operation
fnmadd.h f5, f8, f26, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f5, f8, f26, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f5, f8, f26, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f5, f8, f26, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f5, f8, f26, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f5, f8, f26, f22 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7c01 fs2 = 0xbe00)
li x19, 0x468ea4b2ebb025b4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f17, 0(x2) # load 0x00007c01 from memory into f17
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f1, 0(x2) # load 0x0000be00 from memory into f1
li x3, 0x9307592b2093b611 # load x3 with value 0x9307592b2093b611
sw x3, 0(x2) # store 0x9307592b2093b611 in memory
flh f11, 0(x2) # load 0x9307592b2093b611 from memory into f11
fnmadd.h f19, f17, f1, f11, dyn # perform operation
fnmadd.h f19, f17, f1, f11, rdn # perform operation
fnmadd.h f19, f17, f1, f11, rmm # perform operation
fnmadd.h f19, f17, f1, f11, rne # perform operation
fnmadd.h f19, f17, f1, f11, rtz # perform operation
fnmadd.h f19, f17, f1, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f19, f17, f1, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f19, f17, f1, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f19, f17, f1, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f19, f17, f1, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f19, f17, f1, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7c01 fs2 = 0x4000)
li x18, 0x52cb30133bc04be9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f27, 0(x2) # load 0x00007c01 from memory into f27
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f31, 0(x2) # load 0x00004000 from memory into f31
li x3, 0x3a03c2df615e4161 # load x3 with value 0x3a03c2df615e4161
sw x3, 0(x2) # store 0x3a03c2df615e4161 in memory
flh f20, 0(x2) # load 0x3a03c2df615e4161 from memory into f20
fnmadd.h f18, f27, f31, f20, dyn # perform operation
fnmadd.h f18, f27, f31, f20, rdn # perform operation
fnmadd.h f18, f27, f31, f20, rmm # perform operation
fnmadd.h f18, f27, f31, f20, rne # perform operation
fnmadd.h f18, f27, f31, f20, rtz # perform operation
fnmadd.h f18, f27, f31, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f18, f27, f31, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f18, f27, f31, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f18, f27, f31, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f18, f27, f31, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f18, f27, f31, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7c01 fs2 = 0xc000)
li x13, 0xdf8d59f9524a4875 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f14, 0(x2) # load 0x00007c01 from memory into f14
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f19, 0(x2) # load 0x0000c000 from memory into f19
li x3, 0x22f37f56c1f5aaa9 # load x3 with value 0x22f37f56c1f5aaa9
sw x3, 0(x2) # store 0x22f37f56c1f5aaa9 in memory
flh f23, 0(x2) # load 0x22f37f56c1f5aaa9 from memory into f23
fnmadd.h f13, f14, f19, f23, dyn # perform operation
fnmadd.h f13, f14, f19, f23, rdn # perform operation
fnmadd.h f13, f14, f19, f23, rmm # perform operation
fnmadd.h f13, f14, f19, f23, rne # perform operation
fnmadd.h f13, f14, f19, f23, rtz # perform operation
fnmadd.h f13, f14, f19, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f13, f14, f19, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f13, f14, f19, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f13, f14, f19, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f13, f14, f19, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f13, f14, f19, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7c01 fs2 = 0x400)
li x10, 0x178990cc08aacf91 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f5, 0(x2) # load 0x00007c01 from memory into f5
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f18, 0(x2) # load 0x00000400 from memory into f18
li x3, 0x2174277a8ad516a2 # load x3 with value 0x2174277a8ad516a2
sw x3, 0(x2) # store 0x2174277a8ad516a2 in memory
flh f20, 0(x2) # load 0x2174277a8ad516a2 from memory into f20
fnmadd.h f10, f5, f18, f20, dyn # perform operation
fnmadd.h f10, f5, f18, f20, rdn # perform operation
fnmadd.h f10, f5, f18, f20, rmm # perform operation
fnmadd.h f10, f5, f18, f20, rne # perform operation
fnmadd.h f10, f5, f18, f20, rtz # perform operation
fnmadd.h f10, f5, f18, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f10, f5, f18, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f10, f5, f18, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f10, f5, f18, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f10, f5, f18, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f10, f5, f18, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7c01 fs2 = 0x8400)
li x27, 0x2adf43c9956bd651 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f25, 0(x2) # load 0x00007c01 from memory into f25
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f20, 0(x2) # load 0x00008400 from memory into f20
li x3, 0x27f8306166742fee # load x3 with value 0x27f8306166742fee
sw x3, 0(x2) # store 0x27f8306166742fee in memory
flh f29, 0(x2) # load 0x27f8306166742fee from memory into f29
fnmadd.h f27, f25, f20, f29, dyn # perform operation
fnmadd.h f27, f25, f20, f29, rdn # perform operation
fnmadd.h f27, f25, f20, f29, rmm # perform operation
fnmadd.h f27, f25, f20, f29, rne # perform operation
fnmadd.h f27, f25, f20, f29, rtz # perform operation
fnmadd.h f27, f25, f20, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f27, f25, f20, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f27, f25, f20, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f27, f25, f20, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f27, f25, f20, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f27, f25, f20, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7c01 fs2 = 0x7bff)
li x26, 0x39ae49afa25f6650 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f10, 0(x2) # load 0x00007c01 from memory into f10
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f1, 0(x2) # load 0x00007bff from memory into f1
li x3, 0x512522dffa9ad03 # load x3 with value 0x512522dffa9ad03
sw x3, 0(x2) # store 0x512522dffa9ad03 in memory
flh f16, 0(x2) # load 0x512522dffa9ad03 from memory into f16
fnmadd.h f26, f10, f1, f16, dyn # perform operation
fnmadd.h f26, f10, f1, f16, rdn # perform operation
fnmadd.h f26, f10, f1, f16, rmm # perform operation
fnmadd.h f26, f10, f1, f16, rne # perform operation
fnmadd.h f26, f10, f1, f16, rtz # perform operation
fnmadd.h f26, f10, f1, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f26, f10, f1, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f26, f10, f1, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f26, f10, f1, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f26, f10, f1, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f26, f10, f1, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7c01 fs2 = 0xfbff)
li x18, 0xa74417d255890206 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f1, 0(x2) # load 0x00007c01 from memory into f1
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f27, 0(x2) # load 0x0000fbff from memory into f27
li x3, 0x1a7c3513cca7be88 # load x3 with value 0x1a7c3513cca7be88
sw x3, 0(x2) # store 0x1a7c3513cca7be88 in memory
flh f2, 0(x2) # load 0x1a7c3513cca7be88 from memory into f2
fnmadd.h f18, f1, f27, f2, dyn # perform operation
fnmadd.h f18, f1, f27, f2, rdn # perform operation
fnmadd.h f18, f1, f27, f2, rmm # perform operation
fnmadd.h f18, f1, f27, f2, rne # perform operation
fnmadd.h f18, f1, f27, f2, rtz # perform operation
fnmadd.h f18, f1, f27, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f18, f1, f27, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f18, f1, f27, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f18, f1, f27, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f18, f1, f27, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f18, f1, f27, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7c01 fs2 = 0x3ff)
li x7, 0x8b43e4e0c9063c1f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f22, 0(x2) # load 0x00007c01 from memory into f22
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f26, 0(x2) # load 0x000003ff from memory into f26
li x3, 0x7f2257a6f66161ac # load x3 with value 0x7f2257a6f66161ac
sw x3, 0(x2) # store 0x7f2257a6f66161ac in memory
flh f9, 0(x2) # load 0x7f2257a6f66161ac from memory into f9
fnmadd.h f7, f22, f26, f9, dyn # perform operation
fnmadd.h f7, f22, f26, f9, rdn # perform operation
fnmadd.h f7, f22, f26, f9, rmm # perform operation
fnmadd.h f7, f22, f26, f9, rne # perform operation
fnmadd.h f7, f22, f26, f9, rtz # perform operation
fnmadd.h f7, f22, f26, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f7, f22, f26, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f7, f22, f26, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f7, f22, f26, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f7, f22, f26, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f7, f22, f26, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7c01 fs2 = 0x83ff)
li x2, 0x6404529af1b7ea32 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f29, 0(x2) # load 0x00007c01 from memory into f29
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f28, 0(x2) # load 0x000083ff from memory into f28
li x3, 0xdaaff78958cbcb9f # load x3 with value 0xdaaff78958cbcb9f
sw x3, 0(x2) # store 0xdaaff78958cbcb9f in memory
flh f10, 0(x2) # load 0xdaaff78958cbcb9f from memory into f10
fnmadd.h f2, f29, f28, f10, dyn # perform operation
fnmadd.h f2, f29, f28, f10, rdn # perform operation
fnmadd.h f2, f29, f28, f10, rmm # perform operation
fnmadd.h f2, f29, f28, f10, rne # perform operation
fnmadd.h f2, f29, f28, f10, rtz # perform operation
fnmadd.h f2, f29, f28, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f2, f29, f28, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f2, f29, f28, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f2, f29, f28, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f2, f29, f28, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f2, f29, f28, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7c01 fs2 = 0x200)
li x8, 0x13a628c66c11c691 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f13, 0(x2) # load 0x00007c01 from memory into f13
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f3, 0(x2) # load 0x00000200 from memory into f3
li x3, 0xa6baa99ea160dd9b # load x3 with value 0xa6baa99ea160dd9b
sw x3, 0(x2) # store 0xa6baa99ea160dd9b in memory
flh f6, 0(x2) # load 0xa6baa99ea160dd9b from memory into f6
fnmadd.h f8, f13, f3, f6, dyn # perform operation
fnmadd.h f8, f13, f3, f6, rdn # perform operation
fnmadd.h f8, f13, f3, f6, rmm # perform operation
fnmadd.h f8, f13, f3, f6, rne # perform operation
fnmadd.h f8, f13, f3, f6, rtz # perform operation
fnmadd.h f8, f13, f3, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f8, f13, f3, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f8, f13, f3, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f8, f13, f3, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f8, f13, f3, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f8, f13, f3, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7c01 fs2 = 0x8200)
li x25, 0x16881d7c4bd55218 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f20, 0(x2) # load 0x00007c01 from memory into f20
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f1, 0(x2) # load 0x00008200 from memory into f1
li x3, 0x4462ad9fea94bafd # load x3 with value 0x4462ad9fea94bafd
sw x3, 0(x2) # store 0x4462ad9fea94bafd in memory
flh f28, 0(x2) # load 0x4462ad9fea94bafd from memory into f28
fnmadd.h f25, f20, f1, f28, dyn # perform operation
fnmadd.h f25, f20, f1, f28, rdn # perform operation
fnmadd.h f25, f20, f1, f28, rmm # perform operation
fnmadd.h f25, f20, f1, f28, rne # perform operation
fnmadd.h f25, f20, f1, f28, rtz # perform operation
fnmadd.h f25, f20, f1, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f25, f20, f1, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f25, f20, f1, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f25, f20, f1, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f25, f20, f1, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f25, f20, f1, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7c01 fs2 = 0x1)
li x15, 0xd4abc284539fbe51 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f21, 0(x2) # load 0x00007c01 from memory into f21
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f1, 0(x2) # load 0x00000001 from memory into f1
li x3, 0x43e0c50428d6a836 # load x3 with value 0x43e0c50428d6a836
sw x3, 0(x2) # store 0x43e0c50428d6a836 in memory
flh f9, 0(x2) # load 0x43e0c50428d6a836 from memory into f9
fnmadd.h f15, f21, f1, f9, dyn # perform operation
fnmadd.h f15, f21, f1, f9, rdn # perform operation
fnmadd.h f15, f21, f1, f9, rmm # perform operation
fnmadd.h f15, f21, f1, f9, rne # perform operation
fnmadd.h f15, f21, f1, f9, rtz # perform operation
fnmadd.h f15, f21, f1, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f15, f21, f1, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f15, f21, f1, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f15, f21, f1, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f15, f21, f1, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f15, f21, f1, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7c01 fs2 = 0x8001)
li x27, 0x5eb255ba3cda5e07 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f15, 0(x2) # load 0x00007c01 from memory into f15
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f25, 0(x2) # load 0x00008001 from memory into f25
li x3, 0x472117349454555c # load x3 with value 0x472117349454555c
sw x3, 0(x2) # store 0x472117349454555c in memory
flh f6, 0(x2) # load 0x472117349454555c from memory into f6
fnmadd.h f27, f15, f25, f6, dyn # perform operation
fnmadd.h f27, f15, f25, f6, rdn # perform operation
fnmadd.h f27, f15, f25, f6, rmm # perform operation
fnmadd.h f27, f15, f25, f6, rne # perform operation
fnmadd.h f27, f15, f25, f6, rtz # perform operation
fnmadd.h f27, f15, f25, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f27, f15, f25, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f27, f15, f25, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f27, f15, f25, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f27, f15, f25, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f27, f15, f25, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7c01 fs2 = 0x7c00)
li x27, 0x10c517c6564e1ab3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f1, 0(x2) # load 0x00007c01 from memory into f1
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f19, 0(x2) # load 0x00007c00 from memory into f19
li x3, 0xaab064e060cf4c1e # load x3 with value 0xaab064e060cf4c1e
sw x3, 0(x2) # store 0xaab064e060cf4c1e in memory
flh f24, 0(x2) # load 0xaab064e060cf4c1e from memory into f24
fnmadd.h f27, f1, f19, f24, dyn # perform operation
fnmadd.h f27, f1, f19, f24, rdn # perform operation
fnmadd.h f27, f1, f19, f24, rmm # perform operation
fnmadd.h f27, f1, f19, f24, rne # perform operation
fnmadd.h f27, f1, f19, f24, rtz # perform operation
fnmadd.h f27, f1, f19, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f27, f1, f19, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f27, f1, f19, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f27, f1, f19, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f27, f1, f19, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f27, f1, f19, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7c01 fs2 = 0xfc00)
li x17, 0x6f4c96af4ee70f57 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f31, 0(x2) # load 0x00007c01 from memory into f31
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f15, 0(x2) # load 0x0000fc00 from memory into f15
li x3, 0x98a49e512d8a3144 # load x3 with value 0x98a49e512d8a3144
sw x3, 0(x2) # store 0x98a49e512d8a3144 in memory
flh f13, 0(x2) # load 0x98a49e512d8a3144 from memory into f13
fnmadd.h f17, f31, f15, f13, dyn # perform operation
fnmadd.h f17, f31, f15, f13, rdn # perform operation
fnmadd.h f17, f31, f15, f13, rmm # perform operation
fnmadd.h f17, f31, f15, f13, rne # perform operation
fnmadd.h f17, f31, f15, f13, rtz # perform operation
fnmadd.h f17, f31, f15, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f17, f31, f15, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f17, f31, f15, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f17, f31, f15, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f17, f31, f15, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f17, f31, f15, f13 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7c01 fs2 = 0x7e00)
li x3, 0xa4ad86c228252c36 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f15, 0(x2) # load 0x00007c01 from memory into f15
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f11, 0(x2) # load 0x00007e00 from memory into f11
li x3, 0x1a9deba6712f1182 # load x3 with value 0x1a9deba6712f1182
sw x3, 0(x2) # store 0x1a9deba6712f1182 in memory
flh f28, 0(x2) # load 0x1a9deba6712f1182 from memory into f28
fnmadd.h f3, f15, f11, f28, dyn # perform operation
fnmadd.h f3, f15, f11, f28, rdn # perform operation
fnmadd.h f3, f15, f11, f28, rmm # perform operation
fnmadd.h f3, f15, f11, f28, rne # perform operation
fnmadd.h f3, f15, f11, f28, rtz # perform operation
fnmadd.h f3, f15, f11, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f3, f15, f11, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f3, f15, f11, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f3, f15, f11, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f3, f15, f11, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f3, f15, f11, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7c01 fs2 = 0x7fff)
li x7, 0x7ddcf4c5485276a3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f16, 0(x2) # load 0x00007c01 from memory into f16
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f12, 0(x2) # load 0x00007fff from memory into f12
li x3, 0x205e7a36daf29d71 # load x3 with value 0x205e7a36daf29d71
sw x3, 0(x2) # store 0x205e7a36daf29d71 in memory
flh f15, 0(x2) # load 0x205e7a36daf29d71 from memory into f15
fnmadd.h f7, f16, f12, f15, dyn # perform operation
fnmadd.h f7, f16, f12, f15, rdn # perform operation
fnmadd.h f7, f16, f12, f15, rmm # perform operation
fnmadd.h f7, f16, f12, f15, rne # perform operation
fnmadd.h f7, f16, f12, f15, rtz # perform operation
fnmadd.h f7, f16, f12, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f7, f16, f12, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f7, f16, f12, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f7, f16, f12, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f7, f16, f12, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f7, f16, f12, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7c01 fs2 = 0x7c01)
li x12, 0x11a07b93d1465bf3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f25, 0(x2) # load 0x00007c01 from memory into f25
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f22, 0(x2) # load 0x00007c01 from memory into f22
li x3, 0x580425b28cbc5234 # load x3 with value 0x580425b28cbc5234
sw x3, 0(x2) # store 0x580425b28cbc5234 in memory
flh f1, 0(x2) # load 0x580425b28cbc5234 from memory into f1
fnmadd.h f12, f25, f22, f1, dyn # perform operation
fnmadd.h f12, f25, f22, f1, rdn # perform operation
fnmadd.h f12, f25, f22, f1, rmm # perform operation
fnmadd.h f12, f25, f22, f1, rne # perform operation
fnmadd.h f12, f25, f22, f1, rtz # perform operation
fnmadd.h f12, f25, f22, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f12, f25, f22, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f12, f25, f22, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f12, f25, f22, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f12, f25, f22, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f12, f25, f22, f1 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7c01 fs2 = 0x7dff)
li x22, 0x7acad7104a913bdd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f15, 0(x2) # load 0x00007c01 from memory into f15
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f7, 0(x2) # load 0x00007dff from memory into f7
li x3, 0x3d3147a1d85d39a0 # load x3 with value 0x3d3147a1d85d39a0
sw x3, 0(x2) # store 0x3d3147a1d85d39a0 in memory
flh f12, 0(x2) # load 0x3d3147a1d85d39a0 from memory into f12
fnmadd.h f22, f15, f7, f12, dyn # perform operation
fnmadd.h f22, f15, f7, f12, rdn # perform operation
fnmadd.h f22, f15, f7, f12, rmm # perform operation
fnmadd.h f22, f15, f7, f12, rne # perform operation
fnmadd.h f22, f15, f7, f12, rtz # perform operation
fnmadd.h f22, f15, f7, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f22, f15, f7, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f22, f15, f7, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f22, f15, f7, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f22, f15, f7, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f22, f15, f7, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7c01 fs2 = 0x58b4)
li x25, 0xa7c42d25adf806ab # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f23, 0(x2) # load 0x00007c01 from memory into f23
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f27, 0(x2) # load 0x000058b4 from memory into f27
li x3, 0x3b3c8c11f03dc9ae # load x3 with value 0x3b3c8c11f03dc9ae
sw x3, 0(x2) # store 0x3b3c8c11f03dc9ae in memory
flh f13, 0(x2) # load 0x3b3c8c11f03dc9ae from memory into f13
fnmadd.h f25, f23, f27, f13, dyn # perform operation
fnmadd.h f25, f23, f27, f13, rdn # perform operation
fnmadd.h f25, f23, f27, f13, rmm # perform operation
fnmadd.h f25, f23, f27, f13, rne # perform operation
fnmadd.h f25, f23, f27, f13, rtz # perform operation
fnmadd.h f25, f23, f27, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f25, f23, f27, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f25, f23, f27, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f25, f23, f27, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f25, f23, f27, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f25, f23, f27, f13 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7c01 fs2 = 0xc93a)
li x25, 0xb835abd6eb20c123 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f6, 0(x2) # load 0x00007c01 from memory into f6
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f22, 0(x2) # load 0x0000c93a from memory into f22
li x3, 0x18be8d00740b7745 # load x3 with value 0x18be8d00740b7745
sw x3, 0(x2) # store 0x18be8d00740b7745 in memory
flh f10, 0(x2) # load 0x18be8d00740b7745 from memory into f10
fnmadd.h f25, f6, f22, f10, dyn # perform operation
fnmadd.h f25, f6, f22, f10, rdn # perform operation
fnmadd.h f25, f6, f22, f10, rmm # perform operation
fnmadd.h f25, f6, f22, f10, rne # perform operation
fnmadd.h f25, f6, f22, f10, rtz # perform operation
fnmadd.h f25, f6, f22, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f25, f6, f22, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f25, f6, f22, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f25, f6, f22, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f25, f6, f22, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f25, f6, f22, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7dff fs2 = 0x0)
li x14, 0x342752071b7d6751 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f19, 0(x2) # load 0x00007dff from memory into f19
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f4, 0(x2) # load 0x00000000 from memory into f4
li x3, 0xe4f16738b0862185 # load x3 with value 0xe4f16738b0862185
sw x3, 0(x2) # store 0xe4f16738b0862185 in memory
flh f27, 0(x2) # load 0xe4f16738b0862185 from memory into f27
fnmadd.h f14, f19, f4, f27, dyn # perform operation
fnmadd.h f14, f19, f4, f27, rdn # perform operation
fnmadd.h f14, f19, f4, f27, rmm # perform operation
fnmadd.h f14, f19, f4, f27, rne # perform operation
fnmadd.h f14, f19, f4, f27, rtz # perform operation
fnmadd.h f14, f19, f4, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f14, f19, f4, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f14, f19, f4, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f14, f19, f4, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f14, f19, f4, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f14, f19, f4, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7dff fs2 = 0x8000)
li x26, 0x459b4e68c1cb955e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f11, 0(x2) # load 0x00007dff from memory into f11
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f28, 0(x2) # load 0x00008000 from memory into f28
li x3, 0x55764d784b59da9f # load x3 with value 0x55764d784b59da9f
sw x3, 0(x2) # store 0x55764d784b59da9f in memory
flh f14, 0(x2) # load 0x55764d784b59da9f from memory into f14
fnmadd.h f26, f11, f28, f14, dyn # perform operation
fnmadd.h f26, f11, f28, f14, rdn # perform operation
fnmadd.h f26, f11, f28, f14, rmm # perform operation
fnmadd.h f26, f11, f28, f14, rne # perform operation
fnmadd.h f26, f11, f28, f14, rtz # perform operation
fnmadd.h f26, f11, f28, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f26, f11, f28, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f26, f11, f28, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f26, f11, f28, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f26, f11, f28, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f26, f11, f28, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7dff fs2 = 0x3c00)
li x28, 0xd39bd52d575fb2bb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f29, 0(x2) # load 0x00007dff from memory into f29
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f16, 0(x2) # load 0x00003c00 from memory into f16
li x3, 0x1f539c8399fc55e5 # load x3 with value 0x1f539c8399fc55e5
sw x3, 0(x2) # store 0x1f539c8399fc55e5 in memory
flh f27, 0(x2) # load 0x1f539c8399fc55e5 from memory into f27
fnmadd.h f28, f29, f16, f27, dyn # perform operation
fnmadd.h f28, f29, f16, f27, rdn # perform operation
fnmadd.h f28, f29, f16, f27, rmm # perform operation
fnmadd.h f28, f29, f16, f27, rne # perform operation
fnmadd.h f28, f29, f16, f27, rtz # perform operation
fnmadd.h f28, f29, f16, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f28, f29, f16, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f28, f29, f16, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f28, f29, f16, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f28, f29, f16, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f28, f29, f16, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7dff fs2 = 0xbc00)
li x24, 0xb1fc1f1bc6c0c1c3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f21, 0(x2) # load 0x00007dff from memory into f21
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f12, 0(x2) # load 0x0000bc00 from memory into f12
li x3, 0xaec79f7ba9320ba0 # load x3 with value 0xaec79f7ba9320ba0
sw x3, 0(x2) # store 0xaec79f7ba9320ba0 in memory
flh f30, 0(x2) # load 0xaec79f7ba9320ba0 from memory into f30
fnmadd.h f24, f21, f12, f30, dyn # perform operation
fnmadd.h f24, f21, f12, f30, rdn # perform operation
fnmadd.h f24, f21, f12, f30, rmm # perform operation
fnmadd.h f24, f21, f12, f30, rne # perform operation
fnmadd.h f24, f21, f12, f30, rtz # perform operation
fnmadd.h f24, f21, f12, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f24, f21, f12, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f24, f21, f12, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f24, f21, f12, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f24, f21, f12, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f24, f21, f12, f30 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7dff fs2 = 0x3e00)
li x20, 0xc2a94231d2b271c8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f1, 0(x2) # load 0x00007dff from memory into f1
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f8, 0(x2) # load 0x00003e00 from memory into f8
li x3, 0x972991e49442d53f # load x3 with value 0x972991e49442d53f
sw x3, 0(x2) # store 0x972991e49442d53f in memory
flh f29, 0(x2) # load 0x972991e49442d53f from memory into f29
fnmadd.h f20, f1, f8, f29, dyn # perform operation
fnmadd.h f20, f1, f8, f29, rdn # perform operation
fnmadd.h f20, f1, f8, f29, rmm # perform operation
fnmadd.h f20, f1, f8, f29, rne # perform operation
fnmadd.h f20, f1, f8, f29, rtz # perform operation
fnmadd.h f20, f1, f8, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f20, f1, f8, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f20, f1, f8, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f20, f1, f8, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f20, f1, f8, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f20, f1, f8, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7dff fs2 = 0xbe00)
li x17, 0x5cde33e7f32787e6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f28, 0(x2) # load 0x00007dff from memory into f28
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f14, 0(x2) # load 0x0000be00 from memory into f14
li x3, 0xe12b5c68b158f0fa # load x3 with value 0xe12b5c68b158f0fa
sw x3, 0(x2) # store 0xe12b5c68b158f0fa in memory
flh f16, 0(x2) # load 0xe12b5c68b158f0fa from memory into f16
fnmadd.h f17, f28, f14, f16, dyn # perform operation
fnmadd.h f17, f28, f14, f16, rdn # perform operation
fnmadd.h f17, f28, f14, f16, rmm # perform operation
fnmadd.h f17, f28, f14, f16, rne # perform operation
fnmadd.h f17, f28, f14, f16, rtz # perform operation
fnmadd.h f17, f28, f14, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f17, f28, f14, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f17, f28, f14, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f17, f28, f14, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f17, f28, f14, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f17, f28, f14, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7dff fs2 = 0x4000)
li x31, 0x0ab5643da0b4c86d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f21, 0(x2) # load 0x00007dff from memory into f21
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f2, 0(x2) # load 0x00004000 from memory into f2
li x3, 0x76e7aeb4d684cc5a # load x3 with value 0x76e7aeb4d684cc5a
sw x3, 0(x2) # store 0x76e7aeb4d684cc5a in memory
flh f19, 0(x2) # load 0x76e7aeb4d684cc5a from memory into f19
fnmadd.h f31, f21, f2, f19, dyn # perform operation
fnmadd.h f31, f21, f2, f19, rdn # perform operation
fnmadd.h f31, f21, f2, f19, rmm # perform operation
fnmadd.h f31, f21, f2, f19, rne # perform operation
fnmadd.h f31, f21, f2, f19, rtz # perform operation
fnmadd.h f31, f21, f2, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f31, f21, f2, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f31, f21, f2, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f31, f21, f2, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f31, f21, f2, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f31, f21, f2, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7dff fs2 = 0xc000)
li x11, 0x0eaf4397a5f5d30c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f31, 0(x2) # load 0x00007dff from memory into f31
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f19, 0(x2) # load 0x0000c000 from memory into f19
li x3, 0xf01782f6bd359d70 # load x3 with value 0xf01782f6bd359d70
sw x3, 0(x2) # store 0xf01782f6bd359d70 in memory
flh f8, 0(x2) # load 0xf01782f6bd359d70 from memory into f8
fnmadd.h f11, f31, f19, f8, dyn # perform operation
fnmadd.h f11, f31, f19, f8, rdn # perform operation
fnmadd.h f11, f31, f19, f8, rmm # perform operation
fnmadd.h f11, f31, f19, f8, rne # perform operation
fnmadd.h f11, f31, f19, f8, rtz # perform operation
fnmadd.h f11, f31, f19, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f11, f31, f19, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f11, f31, f19, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f11, f31, f19, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f11, f31, f19, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f11, f31, f19, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7dff fs2 = 0x400)
li x10, 0xd2f8d28621ba4f86 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f7, 0(x2) # load 0x00007dff from memory into f7
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f13, 0(x2) # load 0x00000400 from memory into f13
li x3, 0x3cc8ae2b23b9d560 # load x3 with value 0x3cc8ae2b23b9d560
sw x3, 0(x2) # store 0x3cc8ae2b23b9d560 in memory
flh f1, 0(x2) # load 0x3cc8ae2b23b9d560 from memory into f1
fnmadd.h f10, f7, f13, f1, dyn # perform operation
fnmadd.h f10, f7, f13, f1, rdn # perform operation
fnmadd.h f10, f7, f13, f1, rmm # perform operation
fnmadd.h f10, f7, f13, f1, rne # perform operation
fnmadd.h f10, f7, f13, f1, rtz # perform operation
fnmadd.h f10, f7, f13, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f10, f7, f13, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f10, f7, f13, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f10, f7, f13, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f10, f7, f13, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f10, f7, f13, f1 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7dff fs2 = 0x8400)
li x15, 0x4810787ac4714fdb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f1, 0(x2) # load 0x00007dff from memory into f1
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f9, 0(x2) # load 0x00008400 from memory into f9
li x3, 0x2554943b90b0b447 # load x3 with value 0x2554943b90b0b447
sw x3, 0(x2) # store 0x2554943b90b0b447 in memory
flh f18, 0(x2) # load 0x2554943b90b0b447 from memory into f18
fnmadd.h f15, f1, f9, f18, dyn # perform operation
fnmadd.h f15, f1, f9, f18, rdn # perform operation
fnmadd.h f15, f1, f9, f18, rmm # perform operation
fnmadd.h f15, f1, f9, f18, rne # perform operation
fnmadd.h f15, f1, f9, f18, rtz # perform operation
fnmadd.h f15, f1, f9, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f15, f1, f9, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f15, f1, f9, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f15, f1, f9, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f15, f1, f9, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f15, f1, f9, f18 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7dff fs2 = 0x7bff)
li x28, 0x98b02f9f64e241cf # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f9, 0(x2) # load 0x00007dff from memory into f9
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f24, 0(x2) # load 0x00007bff from memory into f24
li x3, 0x6839dd168d0158c9 # load x3 with value 0x6839dd168d0158c9
sw x3, 0(x2) # store 0x6839dd168d0158c9 in memory
flh f5, 0(x2) # load 0x6839dd168d0158c9 from memory into f5
fnmadd.h f28, f9, f24, f5, dyn # perform operation
fnmadd.h f28, f9, f24, f5, rdn # perform operation
fnmadd.h f28, f9, f24, f5, rmm # perform operation
fnmadd.h f28, f9, f24, f5, rne # perform operation
fnmadd.h f28, f9, f24, f5, rtz # perform operation
fnmadd.h f28, f9, f24, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f28, f9, f24, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f28, f9, f24, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f28, f9, f24, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f28, f9, f24, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f28, f9, f24, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7dff fs2 = 0xfbff)
li x3, 0x259152eaad5e5ed5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f5, 0(x2) # load 0x00007dff from memory into f5
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f17, 0(x2) # load 0x0000fbff from memory into f17
li x3, 0x9d0af3370323b875 # load x3 with value 0x9d0af3370323b875
sw x3, 0(x2) # store 0x9d0af3370323b875 in memory
flh f28, 0(x2) # load 0x9d0af3370323b875 from memory into f28
fnmadd.h f3, f5, f17, f28, dyn # perform operation
fnmadd.h f3, f5, f17, f28, rdn # perform operation
fnmadd.h f3, f5, f17, f28, rmm # perform operation
fnmadd.h f3, f5, f17, f28, rne # perform operation
fnmadd.h f3, f5, f17, f28, rtz # perform operation
fnmadd.h f3, f5, f17, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f3, f5, f17, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f3, f5, f17, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f3, f5, f17, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f3, f5, f17, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f3, f5, f17, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7dff fs2 = 0x3ff)
li x13, 0x888a9d5abfdb894a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f29, 0(x2) # load 0x00007dff from memory into f29
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f17, 0(x2) # load 0x000003ff from memory into f17
li x3, 0x186fa6b5cbc08532 # load x3 with value 0x186fa6b5cbc08532
sw x3, 0(x2) # store 0x186fa6b5cbc08532 in memory
flh f26, 0(x2) # load 0x186fa6b5cbc08532 from memory into f26
fnmadd.h f13, f29, f17, f26, dyn # perform operation
fnmadd.h f13, f29, f17, f26, rdn # perform operation
fnmadd.h f13, f29, f17, f26, rmm # perform operation
fnmadd.h f13, f29, f17, f26, rne # perform operation
fnmadd.h f13, f29, f17, f26, rtz # perform operation
fnmadd.h f13, f29, f17, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f13, f29, f17, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f13, f29, f17, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f13, f29, f17, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f13, f29, f17, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f13, f29, f17, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7dff fs2 = 0x83ff)
li x29, 0xdccddc2510443f85 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f21, 0(x2) # load 0x00007dff from memory into f21
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f24, 0(x2) # load 0x000083ff from memory into f24
li x3, 0x31731d1c1ba6f23d # load x3 with value 0x31731d1c1ba6f23d
sw x3, 0(x2) # store 0x31731d1c1ba6f23d in memory
flh f23, 0(x2) # load 0x31731d1c1ba6f23d from memory into f23
fnmadd.h f29, f21, f24, f23, dyn # perform operation
fnmadd.h f29, f21, f24, f23, rdn # perform operation
fnmadd.h f29, f21, f24, f23, rmm # perform operation
fnmadd.h f29, f21, f24, f23, rne # perform operation
fnmadd.h f29, f21, f24, f23, rtz # perform operation
fnmadd.h f29, f21, f24, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f29, f21, f24, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f29, f21, f24, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f29, f21, f24, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f29, f21, f24, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f29, f21, f24, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7dff fs2 = 0x200)
li x20, 0x1c9a9a8d6448d658 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f11, 0(x2) # load 0x00007dff from memory into f11
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f29, 0(x2) # load 0x00000200 from memory into f29
li x3, 0x3dd4d3ed851bfd1f # load x3 with value 0x3dd4d3ed851bfd1f
sw x3, 0(x2) # store 0x3dd4d3ed851bfd1f in memory
flh f14, 0(x2) # load 0x3dd4d3ed851bfd1f from memory into f14
fnmadd.h f20, f11, f29, f14, dyn # perform operation
fnmadd.h f20, f11, f29, f14, rdn # perform operation
fnmadd.h f20, f11, f29, f14, rmm # perform operation
fnmadd.h f20, f11, f29, f14, rne # perform operation
fnmadd.h f20, f11, f29, f14, rtz # perform operation
fnmadd.h f20, f11, f29, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f20, f11, f29, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f20, f11, f29, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f20, f11, f29, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f20, f11, f29, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f20, f11, f29, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7dff fs2 = 0x8200)
li x25, 0xb391842350fdb495 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f15, 0(x2) # load 0x00007dff from memory into f15
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f21, 0(x2) # load 0x00008200 from memory into f21
li x3, 0xeb11746a416d7066 # load x3 with value 0xeb11746a416d7066
sw x3, 0(x2) # store 0xeb11746a416d7066 in memory
flh f16, 0(x2) # load 0xeb11746a416d7066 from memory into f16
fnmadd.h f25, f15, f21, f16, dyn # perform operation
fnmadd.h f25, f15, f21, f16, rdn # perform operation
fnmadd.h f25, f15, f21, f16, rmm # perform operation
fnmadd.h f25, f15, f21, f16, rne # perform operation
fnmadd.h f25, f15, f21, f16, rtz # perform operation
fnmadd.h f25, f15, f21, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f25, f15, f21, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f25, f15, f21, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f25, f15, f21, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f25, f15, f21, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f25, f15, f21, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7dff fs2 = 0x1)
li x16, 0xb2bed3dcdecfcd73 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f28, 0(x2) # load 0x00007dff from memory into f28
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f27, 0(x2) # load 0x00000001 from memory into f27
li x3, 0x923d83bd69295c4d # load x3 with value 0x923d83bd69295c4d
sw x3, 0(x2) # store 0x923d83bd69295c4d in memory
flh f15, 0(x2) # load 0x923d83bd69295c4d from memory into f15
fnmadd.h f16, f28, f27, f15, dyn # perform operation
fnmadd.h f16, f28, f27, f15, rdn # perform operation
fnmadd.h f16, f28, f27, f15, rmm # perform operation
fnmadd.h f16, f28, f27, f15, rne # perform operation
fnmadd.h f16, f28, f27, f15, rtz # perform operation
fnmadd.h f16, f28, f27, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f16, f28, f27, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f16, f28, f27, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f16, f28, f27, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f16, f28, f27, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f16, f28, f27, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7dff fs2 = 0x8001)
li x22, 0x7227fc4d8ab21331 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f1, 0(x2) # load 0x00007dff from memory into f1
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f10, 0(x2) # load 0x00008001 from memory into f10
li x3, 0x1162fd9bf5f8b24c # load x3 with value 0x1162fd9bf5f8b24c
sw x3, 0(x2) # store 0x1162fd9bf5f8b24c in memory
flh f31, 0(x2) # load 0x1162fd9bf5f8b24c from memory into f31
fnmadd.h f22, f1, f10, f31, dyn # perform operation
fnmadd.h f22, f1, f10, f31, rdn # perform operation
fnmadd.h f22, f1, f10, f31, rmm # perform operation
fnmadd.h f22, f1, f10, f31, rne # perform operation
fnmadd.h f22, f1, f10, f31, rtz # perform operation
fnmadd.h f22, f1, f10, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f22, f1, f10, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f22, f1, f10, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f22, f1, f10, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f22, f1, f10, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f22, f1, f10, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7dff fs2 = 0x7c00)
li x15, 0x3cafb021bed72ed8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f22, 0(x2) # load 0x00007dff from memory into f22
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f3, 0(x2) # load 0x00007c00 from memory into f3
li x3, 0x1a60909cd85d77f6 # load x3 with value 0x1a60909cd85d77f6
sw x3, 0(x2) # store 0x1a60909cd85d77f6 in memory
flh f4, 0(x2) # load 0x1a60909cd85d77f6 from memory into f4
fnmadd.h f15, f22, f3, f4, dyn # perform operation
fnmadd.h f15, f22, f3, f4, rdn # perform operation
fnmadd.h f15, f22, f3, f4, rmm # perform operation
fnmadd.h f15, f22, f3, f4, rne # perform operation
fnmadd.h f15, f22, f3, f4, rtz # perform operation
fnmadd.h f15, f22, f3, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f15, f22, f3, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f15, f22, f3, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f15, f22, f3, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f15, f22, f3, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f15, f22, f3, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7dff fs2 = 0xfc00)
li x17, 0x673f5e7ff271f81a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f2, 0(x2) # load 0x00007dff from memory into f2
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f10, 0(x2) # load 0x0000fc00 from memory into f10
li x3, 0xf60ce7ddebb145d4 # load x3 with value 0xf60ce7ddebb145d4
sw x3, 0(x2) # store 0xf60ce7ddebb145d4 in memory
flh f25, 0(x2) # load 0xf60ce7ddebb145d4 from memory into f25
fnmadd.h f17, f2, f10, f25, dyn # perform operation
fnmadd.h f17, f2, f10, f25, rdn # perform operation
fnmadd.h f17, f2, f10, f25, rmm # perform operation
fnmadd.h f17, f2, f10, f25, rne # perform operation
fnmadd.h f17, f2, f10, f25, rtz # perform operation
fnmadd.h f17, f2, f10, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f17, f2, f10, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f17, f2, f10, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f17, f2, f10, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f17, f2, f10, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f17, f2, f10, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7dff fs2 = 0x7e00)
li x4, 0x2085bd90bf168a0c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f3, 0(x2) # load 0x00007dff from memory into f3
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f20, 0(x2) # load 0x00007e00 from memory into f20
li x3, 0x701f679284049d59 # load x3 with value 0x701f679284049d59
sw x3, 0(x2) # store 0x701f679284049d59 in memory
flh f13, 0(x2) # load 0x701f679284049d59 from memory into f13
fnmadd.h f4, f3, f20, f13, dyn # perform operation
fnmadd.h f4, f3, f20, f13, rdn # perform operation
fnmadd.h f4, f3, f20, f13, rmm # perform operation
fnmadd.h f4, f3, f20, f13, rne # perform operation
fnmadd.h f4, f3, f20, f13, rtz # perform operation
fnmadd.h f4, f3, f20, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f4, f3, f20, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f4, f3, f20, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f4, f3, f20, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f4, f3, f20, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f4, f3, f20, f13 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7dff fs2 = 0x7fff)
li x3, 0x3a158effd5d4ca52 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f8, 0(x2) # load 0x00007dff from memory into f8
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f27, 0(x2) # load 0x00007fff from memory into f27
li x3, 0x9b4093678d4697bb # load x3 with value 0x9b4093678d4697bb
sw x3, 0(x2) # store 0x9b4093678d4697bb in memory
flh f9, 0(x2) # load 0x9b4093678d4697bb from memory into f9
fnmadd.h f3, f8, f27, f9, dyn # perform operation
fnmadd.h f3, f8, f27, f9, rdn # perform operation
fnmadd.h f3, f8, f27, f9, rmm # perform operation
fnmadd.h f3, f8, f27, f9, rne # perform operation
fnmadd.h f3, f8, f27, f9, rtz # perform operation
fnmadd.h f3, f8, f27, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f3, f8, f27, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f3, f8, f27, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f3, f8, f27, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f3, f8, f27, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f3, f8, f27, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7dff fs2 = 0x7c01)
li x3, 0x8a3afa9a46875296 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f2, 0(x2) # load 0x00007dff from memory into f2
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f26, 0(x2) # load 0x00007c01 from memory into f26
li x3, 0xaaa80fe19aa01198 # load x3 with value 0xaaa80fe19aa01198
sw x3, 0(x2) # store 0xaaa80fe19aa01198 in memory
flh f29, 0(x2) # load 0xaaa80fe19aa01198 from memory into f29
fnmadd.h f3, f2, f26, f29, dyn # perform operation
fnmadd.h f3, f2, f26, f29, rdn # perform operation
fnmadd.h f3, f2, f26, f29, rmm # perform operation
fnmadd.h f3, f2, f26, f29, rne # perform operation
fnmadd.h f3, f2, f26, f29, rtz # perform operation
fnmadd.h f3, f2, f26, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f3, f2, f26, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f3, f2, f26, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f3, f2, f26, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f3, f2, f26, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f3, f2, f26, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7dff fs2 = 0x7dff)
li x7, 0x03a637cc703f3a80 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f16, 0(x2) # load 0x00007dff from memory into f16
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f27, 0(x2) # load 0x00007dff from memory into f27
li x3, 0xa4281b6cb141a975 # load x3 with value 0xa4281b6cb141a975
sw x3, 0(x2) # store 0xa4281b6cb141a975 in memory
flh f19, 0(x2) # load 0xa4281b6cb141a975 from memory into f19
fnmadd.h f7, f16, f27, f19, dyn # perform operation
fnmadd.h f7, f16, f27, f19, rdn # perform operation
fnmadd.h f7, f16, f27, f19, rmm # perform operation
fnmadd.h f7, f16, f27, f19, rne # perform operation
fnmadd.h f7, f16, f27, f19, rtz # perform operation
fnmadd.h f7, f16, f27, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f7, f16, f27, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f7, f16, f27, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f7, f16, f27, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f7, f16, f27, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f7, f16, f27, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7dff fs2 = 0x58b4)
li x19, 0x2dc58cba3225201c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f5, 0(x2) # load 0x00007dff from memory into f5
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f4, 0(x2) # load 0x000058b4 from memory into f4
li x3, 0x8a27f6ac93baba9d # load x3 with value 0x8a27f6ac93baba9d
sw x3, 0(x2) # store 0x8a27f6ac93baba9d in memory
flh f15, 0(x2) # load 0x8a27f6ac93baba9d from memory into f15
fnmadd.h f19, f5, f4, f15, dyn # perform operation
fnmadd.h f19, f5, f4, f15, rdn # perform operation
fnmadd.h f19, f5, f4, f15, rmm # perform operation
fnmadd.h f19, f5, f4, f15, rne # perform operation
fnmadd.h f19, f5, f4, f15, rtz # perform operation
fnmadd.h f19, f5, f4, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f19, f5, f4, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f19, f5, f4, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f19, f5, f4, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f19, f5, f4, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f19, f5, f4, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7dff fs2 = 0xc93a)
li x1, 0x1e183b6a9837f8db # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f26, 0(x2) # load 0x00007dff from memory into f26
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f17, 0(x2) # load 0x0000c93a from memory into f17
li x3, 0xa75992385bf31c03 # load x3 with value 0xa75992385bf31c03
sw x3, 0(x2) # store 0xa75992385bf31c03 in memory
flh f29, 0(x2) # load 0xa75992385bf31c03 from memory into f29
fnmadd.h f1, f26, f17, f29, dyn # perform operation
fnmadd.h f1, f26, f17, f29, rdn # perform operation
fnmadd.h f1, f26, f17, f29, rmm # perform operation
fnmadd.h f1, f26, f17, f29, rne # perform operation
fnmadd.h f1, f26, f17, f29, rtz # perform operation
fnmadd.h f1, f26, f17, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f1, f26, f17, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f1, f26, f17, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f1, f26, f17, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f1, f26, f17, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f1, f26, f17, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x58b4 fs2 = 0x0)
li x16, 0x3c888c31dc46a614 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f3, 0(x2) # load 0x000058b4 from memory into f3
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f18, 0(x2) # load 0x00000000 from memory into f18
li x3, 0x861deed477285e62 # load x3 with value 0x861deed477285e62
sw x3, 0(x2) # store 0x861deed477285e62 in memory
flh f7, 0(x2) # load 0x861deed477285e62 from memory into f7
fnmadd.h f16, f3, f18, f7, dyn # perform operation
fnmadd.h f16, f3, f18, f7, rdn # perform operation
fnmadd.h f16, f3, f18, f7, rmm # perform operation
fnmadd.h f16, f3, f18, f7, rne # perform operation
fnmadd.h f16, f3, f18, f7, rtz # perform operation
fnmadd.h f16, f3, f18, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f16, f3, f18, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f16, f3, f18, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f16, f3, f18, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f16, f3, f18, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f16, f3, f18, f7 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x58b4 fs2 = 0x8000)
li x19, 0xe5c384a78fe7e051 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f11, 0(x2) # load 0x000058b4 from memory into f11
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f29, 0(x2) # load 0x00008000 from memory into f29
li x3, 0x436556fa4cad5498 # load x3 with value 0x436556fa4cad5498
sw x3, 0(x2) # store 0x436556fa4cad5498 in memory
flh f31, 0(x2) # load 0x436556fa4cad5498 from memory into f31
fnmadd.h f19, f11, f29, f31, dyn # perform operation
fnmadd.h f19, f11, f29, f31, rdn # perform operation
fnmadd.h f19, f11, f29, f31, rmm # perform operation
fnmadd.h f19, f11, f29, f31, rne # perform operation
fnmadd.h f19, f11, f29, f31, rtz # perform operation
fnmadd.h f19, f11, f29, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f19, f11, f29, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f19, f11, f29, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f19, f11, f29, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f19, f11, f29, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f19, f11, f29, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x58b4 fs2 = 0x3c00)
li x2, 0x41e5fb467db21c2b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f19, 0(x2) # load 0x000058b4 from memory into f19
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f3, 0(x2) # load 0x00003c00 from memory into f3
li x3, 0x6e6b4101cf2f5782 # load x3 with value 0x6e6b4101cf2f5782
sw x3, 0(x2) # store 0x6e6b4101cf2f5782 in memory
flh f24, 0(x2) # load 0x6e6b4101cf2f5782 from memory into f24
fnmadd.h f2, f19, f3, f24, dyn # perform operation
fnmadd.h f2, f19, f3, f24, rdn # perform operation
fnmadd.h f2, f19, f3, f24, rmm # perform operation
fnmadd.h f2, f19, f3, f24, rne # perform operation
fnmadd.h f2, f19, f3, f24, rtz # perform operation
fnmadd.h f2, f19, f3, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f2, f19, f3, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f2, f19, f3, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f2, f19, f3, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f2, f19, f3, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f2, f19, f3, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x58b4 fs2 = 0xbc00)
li x13, 0x2052780ea0673f7f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f14, 0(x2) # load 0x000058b4 from memory into f14
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f17, 0(x2) # load 0x0000bc00 from memory into f17
li x3, 0x90b79724177cbeba # load x3 with value 0x90b79724177cbeba
sw x3, 0(x2) # store 0x90b79724177cbeba in memory
flh f28, 0(x2) # load 0x90b79724177cbeba from memory into f28
fnmadd.h f13, f14, f17, f28, dyn # perform operation
fnmadd.h f13, f14, f17, f28, rdn # perform operation
fnmadd.h f13, f14, f17, f28, rmm # perform operation
fnmadd.h f13, f14, f17, f28, rne # perform operation
fnmadd.h f13, f14, f17, f28, rtz # perform operation
fnmadd.h f13, f14, f17, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f13, f14, f17, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f13, f14, f17, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f13, f14, f17, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f13, f14, f17, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f13, f14, f17, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x58b4 fs2 = 0x3e00)
li x19, 0x9d6ed95de07e6969 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f16, 0(x2) # load 0x000058b4 from memory into f16
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f1, 0(x2) # load 0x00003e00 from memory into f1
li x3, 0x27195bf2f2710c88 # load x3 with value 0x27195bf2f2710c88
sw x3, 0(x2) # store 0x27195bf2f2710c88 in memory
flh f29, 0(x2) # load 0x27195bf2f2710c88 from memory into f29
fnmadd.h f19, f16, f1, f29, dyn # perform operation
fnmadd.h f19, f16, f1, f29, rdn # perform operation
fnmadd.h f19, f16, f1, f29, rmm # perform operation
fnmadd.h f19, f16, f1, f29, rne # perform operation
fnmadd.h f19, f16, f1, f29, rtz # perform operation
fnmadd.h f19, f16, f1, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f19, f16, f1, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f19, f16, f1, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f19, f16, f1, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f19, f16, f1, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f19, f16, f1, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x58b4 fs2 = 0xbe00)
li x27, 0x3e25738de9cef75b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f29, 0(x2) # load 0x000058b4 from memory into f29
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f19, 0(x2) # load 0x0000be00 from memory into f19
li x3, 0xc4906abbef351007 # load x3 with value 0xc4906abbef351007
sw x3, 0(x2) # store 0xc4906abbef351007 in memory
flh f7, 0(x2) # load 0xc4906abbef351007 from memory into f7
fnmadd.h f27, f29, f19, f7, dyn # perform operation
fnmadd.h f27, f29, f19, f7, rdn # perform operation
fnmadd.h f27, f29, f19, f7, rmm # perform operation
fnmadd.h f27, f29, f19, f7, rne # perform operation
fnmadd.h f27, f29, f19, f7, rtz # perform operation
fnmadd.h f27, f29, f19, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f27, f29, f19, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f27, f29, f19, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f27, f29, f19, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f27, f29, f19, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f27, f29, f19, f7 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x58b4 fs2 = 0x4000)
li x13, 0xb7083a6832213ba4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f29, 0(x2) # load 0x000058b4 from memory into f29
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f6, 0(x2) # load 0x00004000 from memory into f6
li x3, 0x6fb73b822c29ef29 # load x3 with value 0x6fb73b822c29ef29
sw x3, 0(x2) # store 0x6fb73b822c29ef29 in memory
flh f10, 0(x2) # load 0x6fb73b822c29ef29 from memory into f10
fnmadd.h f13, f29, f6, f10, dyn # perform operation
fnmadd.h f13, f29, f6, f10, rdn # perform operation
fnmadd.h f13, f29, f6, f10, rmm # perform operation
fnmadd.h f13, f29, f6, f10, rne # perform operation
fnmadd.h f13, f29, f6, f10, rtz # perform operation
fnmadd.h f13, f29, f6, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f13, f29, f6, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f13, f29, f6, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f13, f29, f6, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f13, f29, f6, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f13, f29, f6, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x58b4 fs2 = 0xc000)
li x18, 0x801f06f1900b039a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f20, 0(x2) # load 0x000058b4 from memory into f20
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f30, 0(x2) # load 0x0000c000 from memory into f30
li x3, 0x3398074c4ab46315 # load x3 with value 0x3398074c4ab46315
sw x3, 0(x2) # store 0x3398074c4ab46315 in memory
flh f1, 0(x2) # load 0x3398074c4ab46315 from memory into f1
fnmadd.h f18, f20, f30, f1, dyn # perform operation
fnmadd.h f18, f20, f30, f1, rdn # perform operation
fnmadd.h f18, f20, f30, f1, rmm # perform operation
fnmadd.h f18, f20, f30, f1, rne # perform operation
fnmadd.h f18, f20, f30, f1, rtz # perform operation
fnmadd.h f18, f20, f30, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f18, f20, f30, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f18, f20, f30, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f18, f20, f30, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f18, f20, f30, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f18, f20, f30, f1 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x58b4 fs2 = 0x400)
li x20, 0x1b3a4ed435d06c6a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f26, 0(x2) # load 0x000058b4 from memory into f26
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f10, 0(x2) # load 0x00000400 from memory into f10
li x3, 0x85a13f63bf2e59b3 # load x3 with value 0x85a13f63bf2e59b3
sw x3, 0(x2) # store 0x85a13f63bf2e59b3 in memory
flh f29, 0(x2) # load 0x85a13f63bf2e59b3 from memory into f29
fnmadd.h f20, f26, f10, f29, dyn # perform operation
fnmadd.h f20, f26, f10, f29, rdn # perform operation
fnmadd.h f20, f26, f10, f29, rmm # perform operation
fnmadd.h f20, f26, f10, f29, rne # perform operation
fnmadd.h f20, f26, f10, f29, rtz # perform operation
fnmadd.h f20, f26, f10, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f20, f26, f10, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f20, f26, f10, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f20, f26, f10, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f20, f26, f10, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f20, f26, f10, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x58b4 fs2 = 0x8400)
li x13, 0x270a52d12030eaa2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f27, 0(x2) # load 0x000058b4 from memory into f27
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f10, 0(x2) # load 0x00008400 from memory into f10
li x3, 0xf709c9de7765baec # load x3 with value 0xf709c9de7765baec
sw x3, 0(x2) # store 0xf709c9de7765baec in memory
flh f1, 0(x2) # load 0xf709c9de7765baec from memory into f1
fnmadd.h f13, f27, f10, f1, dyn # perform operation
fnmadd.h f13, f27, f10, f1, rdn # perform operation
fnmadd.h f13, f27, f10, f1, rmm # perform operation
fnmadd.h f13, f27, f10, f1, rne # perform operation
fnmadd.h f13, f27, f10, f1, rtz # perform operation
fnmadd.h f13, f27, f10, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f13, f27, f10, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f13, f27, f10, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f13, f27, f10, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f13, f27, f10, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f13, f27, f10, f1 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x58b4 fs2 = 0x7bff)
li x16, 0x364107fdff2f8036 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f4, 0(x2) # load 0x000058b4 from memory into f4
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f20, 0(x2) # load 0x00007bff from memory into f20
li x3, 0xf3d2ee0c836c8006 # load x3 with value 0xf3d2ee0c836c8006
sw x3, 0(x2) # store 0xf3d2ee0c836c8006 in memory
flh f27, 0(x2) # load 0xf3d2ee0c836c8006 from memory into f27
fnmadd.h f16, f4, f20, f27, dyn # perform operation
fnmadd.h f16, f4, f20, f27, rdn # perform operation
fnmadd.h f16, f4, f20, f27, rmm # perform operation
fnmadd.h f16, f4, f20, f27, rne # perform operation
fnmadd.h f16, f4, f20, f27, rtz # perform operation
fnmadd.h f16, f4, f20, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f16, f4, f20, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f16, f4, f20, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f16, f4, f20, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f16, f4, f20, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f16, f4, f20, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x58b4 fs2 = 0xfbff)
li x7, 0xd36197030fa44667 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f21, 0(x2) # load 0x000058b4 from memory into f21
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f20, 0(x2) # load 0x0000fbff from memory into f20
li x3, 0xd77d31dd9a4b2748 # load x3 with value 0xd77d31dd9a4b2748
sw x3, 0(x2) # store 0xd77d31dd9a4b2748 in memory
flh f25, 0(x2) # load 0xd77d31dd9a4b2748 from memory into f25
fnmadd.h f7, f21, f20, f25, dyn # perform operation
fnmadd.h f7, f21, f20, f25, rdn # perform operation
fnmadd.h f7, f21, f20, f25, rmm # perform operation
fnmadd.h f7, f21, f20, f25, rne # perform operation
fnmadd.h f7, f21, f20, f25, rtz # perform operation
fnmadd.h f7, f21, f20, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f7, f21, f20, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f7, f21, f20, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f7, f21, f20, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f7, f21, f20, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f7, f21, f20, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x58b4 fs2 = 0x3ff)
li x22, 0x152bf07d08c1ad4c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f26, 0(x2) # load 0x000058b4 from memory into f26
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f25, 0(x2) # load 0x000003ff from memory into f25
li x3, 0x83626edcfb378b25 # load x3 with value 0x83626edcfb378b25
sw x3, 0(x2) # store 0x83626edcfb378b25 in memory
flh f15, 0(x2) # load 0x83626edcfb378b25 from memory into f15
fnmadd.h f22, f26, f25, f15, dyn # perform operation
fnmadd.h f22, f26, f25, f15, rdn # perform operation
fnmadd.h f22, f26, f25, f15, rmm # perform operation
fnmadd.h f22, f26, f25, f15, rne # perform operation
fnmadd.h f22, f26, f25, f15, rtz # perform operation
fnmadd.h f22, f26, f25, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f22, f26, f25, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f22, f26, f25, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f22, f26, f25, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f22, f26, f25, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f22, f26, f25, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x58b4 fs2 = 0x83ff)
li x24, 0x7d99d86e87b2a0b1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f5, 0(x2) # load 0x000058b4 from memory into f5
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f6, 0(x2) # load 0x000083ff from memory into f6
li x3, 0x3850f0c97b9bbe60 # load x3 with value 0x3850f0c97b9bbe60
sw x3, 0(x2) # store 0x3850f0c97b9bbe60 in memory
flh f11, 0(x2) # load 0x3850f0c97b9bbe60 from memory into f11
fnmadd.h f24, f5, f6, f11, dyn # perform operation
fnmadd.h f24, f5, f6, f11, rdn # perform operation
fnmadd.h f24, f5, f6, f11, rmm # perform operation
fnmadd.h f24, f5, f6, f11, rne # perform operation
fnmadd.h f24, f5, f6, f11, rtz # perform operation
fnmadd.h f24, f5, f6, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f24, f5, f6, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f24, f5, f6, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f24, f5, f6, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f24, f5, f6, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f24, f5, f6, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x58b4 fs2 = 0x200)
li x16, 0xcbb9c914956b1c03 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f18, 0(x2) # load 0x000058b4 from memory into f18
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f6, 0(x2) # load 0x00000200 from memory into f6
li x3, 0xdc4bb270551695c5 # load x3 with value 0xdc4bb270551695c5
sw x3, 0(x2) # store 0xdc4bb270551695c5 in memory
flh f30, 0(x2) # load 0xdc4bb270551695c5 from memory into f30
fnmadd.h f16, f18, f6, f30, dyn # perform operation
fnmadd.h f16, f18, f6, f30, rdn # perform operation
fnmadd.h f16, f18, f6, f30, rmm # perform operation
fnmadd.h f16, f18, f6, f30, rne # perform operation
fnmadd.h f16, f18, f6, f30, rtz # perform operation
fnmadd.h f16, f18, f6, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f16, f18, f6, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f16, f18, f6, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f16, f18, f6, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f16, f18, f6, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f16, f18, f6, f30 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x58b4 fs2 = 0x8200)
li x31, 0x59fd5254928991bd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f20, 0(x2) # load 0x000058b4 from memory into f20
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f29, 0(x2) # load 0x00008200 from memory into f29
li x3, 0x7fe7df1cdc51c0b7 # load x3 with value 0x7fe7df1cdc51c0b7
sw x3, 0(x2) # store 0x7fe7df1cdc51c0b7 in memory
flh f30, 0(x2) # load 0x7fe7df1cdc51c0b7 from memory into f30
fnmadd.h f31, f20, f29, f30, dyn # perform operation
fnmadd.h f31, f20, f29, f30, rdn # perform operation
fnmadd.h f31, f20, f29, f30, rmm # perform operation
fnmadd.h f31, f20, f29, f30, rne # perform operation
fnmadd.h f31, f20, f29, f30, rtz # perform operation
fnmadd.h f31, f20, f29, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f31, f20, f29, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f31, f20, f29, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f31, f20, f29, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f31, f20, f29, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f31, f20, f29, f30 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x58b4 fs2 = 0x1)
li x23, 0x7c0258fe7041c13e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f16, 0(x2) # load 0x000058b4 from memory into f16
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f6, 0(x2) # load 0x00000001 from memory into f6
li x3, 0x36f3541b341d0e89 # load x3 with value 0x36f3541b341d0e89
sw x3, 0(x2) # store 0x36f3541b341d0e89 in memory
flh f25, 0(x2) # load 0x36f3541b341d0e89 from memory into f25
fnmadd.h f23, f16, f6, f25, dyn # perform operation
fnmadd.h f23, f16, f6, f25, rdn # perform operation
fnmadd.h f23, f16, f6, f25, rmm # perform operation
fnmadd.h f23, f16, f6, f25, rne # perform operation
fnmadd.h f23, f16, f6, f25, rtz # perform operation
fnmadd.h f23, f16, f6, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f23, f16, f6, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f23, f16, f6, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f23, f16, f6, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f23, f16, f6, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f23, f16, f6, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x58b4 fs2 = 0x8001)
li x22, 0xe885f75465038493 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f29, 0(x2) # load 0x000058b4 from memory into f29
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f19, 0(x2) # load 0x00008001 from memory into f19
li x3, 0x57b968278c6027d3 # load x3 with value 0x57b968278c6027d3
sw x3, 0(x2) # store 0x57b968278c6027d3 in memory
flh f17, 0(x2) # load 0x57b968278c6027d3 from memory into f17
fnmadd.h f22, f29, f19, f17, dyn # perform operation
fnmadd.h f22, f29, f19, f17, rdn # perform operation
fnmadd.h f22, f29, f19, f17, rmm # perform operation
fnmadd.h f22, f29, f19, f17, rne # perform operation
fnmadd.h f22, f29, f19, f17, rtz # perform operation
fnmadd.h f22, f29, f19, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f22, f29, f19, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f22, f29, f19, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f22, f29, f19, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f22, f29, f19, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f22, f29, f19, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x58b4 fs2 = 0x7c00)
li x27, 0xb55328eeb19b046c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f16, 0(x2) # load 0x000058b4 from memory into f16
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f6, 0(x2) # load 0x00007c00 from memory into f6
li x3, 0x487924feda717320 # load x3 with value 0x487924feda717320
sw x3, 0(x2) # store 0x487924feda717320 in memory
flh f15, 0(x2) # load 0x487924feda717320 from memory into f15
fnmadd.h f27, f16, f6, f15, dyn # perform operation
fnmadd.h f27, f16, f6, f15, rdn # perform operation
fnmadd.h f27, f16, f6, f15, rmm # perform operation
fnmadd.h f27, f16, f6, f15, rne # perform operation
fnmadd.h f27, f16, f6, f15, rtz # perform operation
fnmadd.h f27, f16, f6, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f27, f16, f6, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f27, f16, f6, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f27, f16, f6, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f27, f16, f6, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f27, f16, f6, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x58b4 fs2 = 0xfc00)
li x22, 0xf366ab21d8468d46 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f7, 0(x2) # load 0x000058b4 from memory into f7
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f23, 0(x2) # load 0x0000fc00 from memory into f23
li x3, 0xd9eb1274b4b587a4 # load x3 with value 0xd9eb1274b4b587a4
sw x3, 0(x2) # store 0xd9eb1274b4b587a4 in memory
flh f28, 0(x2) # load 0xd9eb1274b4b587a4 from memory into f28
fnmadd.h f22, f7, f23, f28, dyn # perform operation
fnmadd.h f22, f7, f23, f28, rdn # perform operation
fnmadd.h f22, f7, f23, f28, rmm # perform operation
fnmadd.h f22, f7, f23, f28, rne # perform operation
fnmadd.h f22, f7, f23, f28, rtz # perform operation
fnmadd.h f22, f7, f23, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f22, f7, f23, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f22, f7, f23, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f22, f7, f23, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f22, f7, f23, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f22, f7, f23, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x58b4 fs2 = 0x7e00)
li x26, 0xa1e8e995099d1cfa # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f10, 0(x2) # load 0x000058b4 from memory into f10
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f24, 0(x2) # load 0x00007e00 from memory into f24
li x3, 0xc9b6b578b9bdbb60 # load x3 with value 0xc9b6b578b9bdbb60
sw x3, 0(x2) # store 0xc9b6b578b9bdbb60 in memory
flh f31, 0(x2) # load 0xc9b6b578b9bdbb60 from memory into f31
fnmadd.h f26, f10, f24, f31, dyn # perform operation
fnmadd.h f26, f10, f24, f31, rdn # perform operation
fnmadd.h f26, f10, f24, f31, rmm # perform operation
fnmadd.h f26, f10, f24, f31, rne # perform operation
fnmadd.h f26, f10, f24, f31, rtz # perform operation
fnmadd.h f26, f10, f24, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f26, f10, f24, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f26, f10, f24, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f26, f10, f24, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f26, f10, f24, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f26, f10, f24, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x58b4 fs2 = 0x7fff)
li x21, 0xb77afdd7e751e62c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f19, 0(x2) # load 0x000058b4 from memory into f19
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f2, 0(x2) # load 0x00007fff from memory into f2
li x3, 0x1a54f17f7434ecb0 # load x3 with value 0x1a54f17f7434ecb0
sw x3, 0(x2) # store 0x1a54f17f7434ecb0 in memory
flh f25, 0(x2) # load 0x1a54f17f7434ecb0 from memory into f25
fnmadd.h f21, f19, f2, f25, dyn # perform operation
fnmadd.h f21, f19, f2, f25, rdn # perform operation
fnmadd.h f21, f19, f2, f25, rmm # perform operation
fnmadd.h f21, f19, f2, f25, rne # perform operation
fnmadd.h f21, f19, f2, f25, rtz # perform operation
fnmadd.h f21, f19, f2, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f21, f19, f2, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f21, f19, f2, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f21, f19, f2, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f21, f19, f2, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f21, f19, f2, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x58b4 fs2 = 0x7c01)
li x12, 0x3a5b45870ead117f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f5, 0(x2) # load 0x000058b4 from memory into f5
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f7, 0(x2) # load 0x00007c01 from memory into f7
li x3, 0xca9f6ffc20d139ed # load x3 with value 0xca9f6ffc20d139ed
sw x3, 0(x2) # store 0xca9f6ffc20d139ed in memory
flh f14, 0(x2) # load 0xca9f6ffc20d139ed from memory into f14
fnmadd.h f12, f5, f7, f14, dyn # perform operation
fnmadd.h f12, f5, f7, f14, rdn # perform operation
fnmadd.h f12, f5, f7, f14, rmm # perform operation
fnmadd.h f12, f5, f7, f14, rne # perform operation
fnmadd.h f12, f5, f7, f14, rtz # perform operation
fnmadd.h f12, f5, f7, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f12, f5, f7, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f12, f5, f7, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f12, f5, f7, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f12, f5, f7, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f12, f5, f7, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x58b4 fs2 = 0x7dff)
li x16, 0xedf54af681ab9825 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f7, 0(x2) # load 0x000058b4 from memory into f7
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f17, 0(x2) # load 0x00007dff from memory into f17
li x3, 0x5c2d963227c64789 # load x3 with value 0x5c2d963227c64789
sw x3, 0(x2) # store 0x5c2d963227c64789 in memory
flh f31, 0(x2) # load 0x5c2d963227c64789 from memory into f31
fnmadd.h f16, f7, f17, f31, dyn # perform operation
fnmadd.h f16, f7, f17, f31, rdn # perform operation
fnmadd.h f16, f7, f17, f31, rmm # perform operation
fnmadd.h f16, f7, f17, f31, rne # perform operation
fnmadd.h f16, f7, f17, f31, rtz # perform operation
fnmadd.h f16, f7, f17, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f16, f7, f17, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f16, f7, f17, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f16, f7, f17, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f16, f7, f17, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f16, f7, f17, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x58b4 fs2 = 0x58b4)
li x22, 0x6e37ea5c9f240001 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f6, 0(x2) # load 0x000058b4 from memory into f6
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f18, 0(x2) # load 0x000058b4 from memory into f18
li x3, 0x24ffd33f54e25646 # load x3 with value 0x24ffd33f54e25646
sw x3, 0(x2) # store 0x24ffd33f54e25646 in memory
flh f24, 0(x2) # load 0x24ffd33f54e25646 from memory into f24
fnmadd.h f22, f6, f18, f24, dyn # perform operation
fnmadd.h f22, f6, f18, f24, rdn # perform operation
fnmadd.h f22, f6, f18, f24, rmm # perform operation
fnmadd.h f22, f6, f18, f24, rne # perform operation
fnmadd.h f22, f6, f18, f24, rtz # perform operation
fnmadd.h f22, f6, f18, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f22, f6, f18, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f22, f6, f18, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f22, f6, f18, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f22, f6, f18, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f22, f6, f18, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x58b4 fs2 = 0xc93a)
li x23, 0x1e4949c1f516b7ae # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f27, 0(x2) # load 0x000058b4 from memory into f27
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f16, 0(x2) # load 0x0000c93a from memory into f16
li x3, 0xb2e878c63fdc3 # load x3 with value 0xb2e878c63fdc3
sw x3, 0(x2) # store 0xb2e878c63fdc3 in memory
flh f4, 0(x2) # load 0xb2e878c63fdc3 from memory into f4
fnmadd.h f23, f27, f16, f4, dyn # perform operation
fnmadd.h f23, f27, f16, f4, rdn # perform operation
fnmadd.h f23, f27, f16, f4, rmm # perform operation
fnmadd.h f23, f27, f16, f4, rne # perform operation
fnmadd.h f23, f27, f16, f4, rtz # perform operation
fnmadd.h f23, f27, f16, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f23, f27, f16, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f23, f27, f16, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f23, f27, f16, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f23, f27, f16, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f23, f27, f16, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc93a fs2 = 0x0)
li x26, 0x2e7a6d54292f41f3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f16, 0(x2) # load 0x0000c93a from memory into f16
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f30, 0(x2) # load 0x00000000 from memory into f30
li x3, 0x3ea6cefe59dcf318 # load x3 with value 0x3ea6cefe59dcf318
sw x3, 0(x2) # store 0x3ea6cefe59dcf318 in memory
flh f6, 0(x2) # load 0x3ea6cefe59dcf318 from memory into f6
fnmadd.h f26, f16, f30, f6, dyn # perform operation
fnmadd.h f26, f16, f30, f6, rdn # perform operation
fnmadd.h f26, f16, f30, f6, rmm # perform operation
fnmadd.h f26, f16, f30, f6, rne # perform operation
fnmadd.h f26, f16, f30, f6, rtz # perform operation
fnmadd.h f26, f16, f30, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f26, f16, f30, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f26, f16, f30, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f26, f16, f30, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f26, f16, f30, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f26, f16, f30, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc93a fs2 = 0x8000)
li x7, 0x37fad74087291f6a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f14, 0(x2) # load 0x0000c93a from memory into f14
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f31, 0(x2) # load 0x00008000 from memory into f31
li x3, 0x888ae1eee1b702c4 # load x3 with value 0x888ae1eee1b702c4
sw x3, 0(x2) # store 0x888ae1eee1b702c4 in memory
flh f22, 0(x2) # load 0x888ae1eee1b702c4 from memory into f22
fnmadd.h f7, f14, f31, f22, dyn # perform operation
fnmadd.h f7, f14, f31, f22, rdn # perform operation
fnmadd.h f7, f14, f31, f22, rmm # perform operation
fnmadd.h f7, f14, f31, f22, rne # perform operation
fnmadd.h f7, f14, f31, f22, rtz # perform operation
fnmadd.h f7, f14, f31, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f7, f14, f31, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f7, f14, f31, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f7, f14, f31, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f7, f14, f31, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f7, f14, f31, f22 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc93a fs2 = 0x3c00)
li x26, 0xc2cf69bb4568642c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f6, 0(x2) # load 0x0000c93a from memory into f6
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f28, 0(x2) # load 0x00003c00 from memory into f28
li x3, 0xb57bbf3769c1e108 # load x3 with value 0xb57bbf3769c1e108
sw x3, 0(x2) # store 0xb57bbf3769c1e108 in memory
flh f10, 0(x2) # load 0xb57bbf3769c1e108 from memory into f10
fnmadd.h f26, f6, f28, f10, dyn # perform operation
fnmadd.h f26, f6, f28, f10, rdn # perform operation
fnmadd.h f26, f6, f28, f10, rmm # perform operation
fnmadd.h f26, f6, f28, f10, rne # perform operation
fnmadd.h f26, f6, f28, f10, rtz # perform operation
fnmadd.h f26, f6, f28, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f26, f6, f28, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f26, f6, f28, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f26, f6, f28, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f26, f6, f28, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f26, f6, f28, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc93a fs2 = 0xbc00)
li x24, 0x56298fb29ceb2820 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f23, 0(x2) # load 0x0000c93a from memory into f23
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f19, 0(x2) # load 0x0000bc00 from memory into f19
li x3, 0xeae8653b2011b2a1 # load x3 with value 0xeae8653b2011b2a1
sw x3, 0(x2) # store 0xeae8653b2011b2a1 in memory
flh f16, 0(x2) # load 0xeae8653b2011b2a1 from memory into f16
fnmadd.h f24, f23, f19, f16, dyn # perform operation
fnmadd.h f24, f23, f19, f16, rdn # perform operation
fnmadd.h f24, f23, f19, f16, rmm # perform operation
fnmadd.h f24, f23, f19, f16, rne # perform operation
fnmadd.h f24, f23, f19, f16, rtz # perform operation
fnmadd.h f24, f23, f19, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f24, f23, f19, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f24, f23, f19, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f24, f23, f19, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f24, f23, f19, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f24, f23, f19, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc93a fs2 = 0x3e00)
li x23, 0xf7dd443e0cfe5dd3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f25, 0(x2) # load 0x0000c93a from memory into f25
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f22, 0(x2) # load 0x00003e00 from memory into f22
li x3, 0xc42dbd1d4c0c93f6 # load x3 with value 0xc42dbd1d4c0c93f6
sw x3, 0(x2) # store 0xc42dbd1d4c0c93f6 in memory
flh f19, 0(x2) # load 0xc42dbd1d4c0c93f6 from memory into f19
fnmadd.h f23, f25, f22, f19, dyn # perform operation
fnmadd.h f23, f25, f22, f19, rdn # perform operation
fnmadd.h f23, f25, f22, f19, rmm # perform operation
fnmadd.h f23, f25, f22, f19, rne # perform operation
fnmadd.h f23, f25, f22, f19, rtz # perform operation
fnmadd.h f23, f25, f22, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f23, f25, f22, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f23, f25, f22, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f23, f25, f22, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f23, f25, f22, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f23, f25, f22, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc93a fs2 = 0xbe00)
li x28, 0x24663478b034da01 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f13, 0(x2) # load 0x0000c93a from memory into f13
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f25, 0(x2) # load 0x0000be00 from memory into f25
li x3, 0xc7fd2919cbbd1fd # load x3 with value 0xc7fd2919cbbd1fd
sw x3, 0(x2) # store 0xc7fd2919cbbd1fd in memory
flh f8, 0(x2) # load 0xc7fd2919cbbd1fd from memory into f8
fnmadd.h f28, f13, f25, f8, dyn # perform operation
fnmadd.h f28, f13, f25, f8, rdn # perform operation
fnmadd.h f28, f13, f25, f8, rmm # perform operation
fnmadd.h f28, f13, f25, f8, rne # perform operation
fnmadd.h f28, f13, f25, f8, rtz # perform operation
fnmadd.h f28, f13, f25, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f28, f13, f25, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f28, f13, f25, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f28, f13, f25, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f28, f13, f25, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f28, f13, f25, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc93a fs2 = 0x4000)
li x5, 0x76eef0af06a096f9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f23, 0(x2) # load 0x0000c93a from memory into f23
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f21, 0(x2) # load 0x00004000 from memory into f21
li x3, 0xeff48323d624300d # load x3 with value 0xeff48323d624300d
sw x3, 0(x2) # store 0xeff48323d624300d in memory
flh f1, 0(x2) # load 0xeff48323d624300d from memory into f1
fnmadd.h f5, f23, f21, f1, dyn # perform operation
fnmadd.h f5, f23, f21, f1, rdn # perform operation
fnmadd.h f5, f23, f21, f1, rmm # perform operation
fnmadd.h f5, f23, f21, f1, rne # perform operation
fnmadd.h f5, f23, f21, f1, rtz # perform operation
fnmadd.h f5, f23, f21, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f5, f23, f21, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f5, f23, f21, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f5, f23, f21, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f5, f23, f21, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f5, f23, f21, f1 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc93a fs2 = 0xc000)
li x21, 0x9b7b445db5aa2779 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f20, 0(x2) # load 0x0000c93a from memory into f20
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f26, 0(x2) # load 0x0000c000 from memory into f26
li x3, 0xe0a84897386a14b0 # load x3 with value 0xe0a84897386a14b0
sw x3, 0(x2) # store 0xe0a84897386a14b0 in memory
flh f25, 0(x2) # load 0xe0a84897386a14b0 from memory into f25
fnmadd.h f21, f20, f26, f25, dyn # perform operation
fnmadd.h f21, f20, f26, f25, rdn # perform operation
fnmadd.h f21, f20, f26, f25, rmm # perform operation
fnmadd.h f21, f20, f26, f25, rne # perform operation
fnmadd.h f21, f20, f26, f25, rtz # perform operation
fnmadd.h f21, f20, f26, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f21, f20, f26, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f21, f20, f26, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f21, f20, f26, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f21, f20, f26, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f21, f20, f26, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc93a fs2 = 0x400)
li x30, 0x621cb9540fa2df09 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f26, 0(x2) # load 0x0000c93a from memory into f26
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f14, 0(x2) # load 0x00000400 from memory into f14
li x3, 0x6c4efb03509f9a0 # load x3 with value 0x6c4efb03509f9a0
sw x3, 0(x2) # store 0x6c4efb03509f9a0 in memory
flh f10, 0(x2) # load 0x6c4efb03509f9a0 from memory into f10
fnmadd.h f30, f26, f14, f10, dyn # perform operation
fnmadd.h f30, f26, f14, f10, rdn # perform operation
fnmadd.h f30, f26, f14, f10, rmm # perform operation
fnmadd.h f30, f26, f14, f10, rne # perform operation
fnmadd.h f30, f26, f14, f10, rtz # perform operation
fnmadd.h f30, f26, f14, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f30, f26, f14, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f30, f26, f14, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f30, f26, f14, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f30, f26, f14, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f30, f26, f14, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc93a fs2 = 0x8400)
li x26, 0x41d3a87912517984 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f25, 0(x2) # load 0x0000c93a from memory into f25
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f11, 0(x2) # load 0x00008400 from memory into f11
li x3, 0x8b5e7e55fe13c7fb # load x3 with value 0x8b5e7e55fe13c7fb
sw x3, 0(x2) # store 0x8b5e7e55fe13c7fb in memory
flh f20, 0(x2) # load 0x8b5e7e55fe13c7fb from memory into f20
fnmadd.h f26, f25, f11, f20, dyn # perform operation
fnmadd.h f26, f25, f11, f20, rdn # perform operation
fnmadd.h f26, f25, f11, f20, rmm # perform operation
fnmadd.h f26, f25, f11, f20, rne # perform operation
fnmadd.h f26, f25, f11, f20, rtz # perform operation
fnmadd.h f26, f25, f11, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f26, f25, f11, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f26, f25, f11, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f26, f25, f11, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f26, f25, f11, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f26, f25, f11, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc93a fs2 = 0x7bff)
li x13, 0x595e02a9a3c0b9fc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f6, 0(x2) # load 0x0000c93a from memory into f6
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f12, 0(x2) # load 0x00007bff from memory into f12
li x3, 0xe8ab63856c599d83 # load x3 with value 0xe8ab63856c599d83
sw x3, 0(x2) # store 0xe8ab63856c599d83 in memory
flh f18, 0(x2) # load 0xe8ab63856c599d83 from memory into f18
fnmadd.h f13, f6, f12, f18, dyn # perform operation
fnmadd.h f13, f6, f12, f18, rdn # perform operation
fnmadd.h f13, f6, f12, f18, rmm # perform operation
fnmadd.h f13, f6, f12, f18, rne # perform operation
fnmadd.h f13, f6, f12, f18, rtz # perform operation
fnmadd.h f13, f6, f12, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f13, f6, f12, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f13, f6, f12, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f13, f6, f12, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f13, f6, f12, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f13, f6, f12, f18 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc93a fs2 = 0xfbff)
li x2, 0xf4214f49100a5b3d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f31, 0(x2) # load 0x0000c93a from memory into f31
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f11, 0(x2) # load 0x0000fbff from memory into f11
li x3, 0xd5c49b27b67df59d # load x3 with value 0xd5c49b27b67df59d
sw x3, 0(x2) # store 0xd5c49b27b67df59d in memory
flh f16, 0(x2) # load 0xd5c49b27b67df59d from memory into f16
fnmadd.h f2, f31, f11, f16, dyn # perform operation
fnmadd.h f2, f31, f11, f16, rdn # perform operation
fnmadd.h f2, f31, f11, f16, rmm # perform operation
fnmadd.h f2, f31, f11, f16, rne # perform operation
fnmadd.h f2, f31, f11, f16, rtz # perform operation
fnmadd.h f2, f31, f11, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f2, f31, f11, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f2, f31, f11, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f2, f31, f11, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f2, f31, f11, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f2, f31, f11, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc93a fs2 = 0x3ff)
li x18, 0x3851c145ba928ed8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f3, 0(x2) # load 0x0000c93a from memory into f3
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f25, 0(x2) # load 0x000003ff from memory into f25
li x3, 0xc9b169d66e16f0bc # load x3 with value 0xc9b169d66e16f0bc
sw x3, 0(x2) # store 0xc9b169d66e16f0bc in memory
flh f12, 0(x2) # load 0xc9b169d66e16f0bc from memory into f12
fnmadd.h f18, f3, f25, f12, dyn # perform operation
fnmadd.h f18, f3, f25, f12, rdn # perform operation
fnmadd.h f18, f3, f25, f12, rmm # perform operation
fnmadd.h f18, f3, f25, f12, rne # perform operation
fnmadd.h f18, f3, f25, f12, rtz # perform operation
fnmadd.h f18, f3, f25, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f18, f3, f25, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f18, f3, f25, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f18, f3, f25, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f18, f3, f25, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f18, f3, f25, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc93a fs2 = 0x83ff)
li x12, 0xa3156909faa3e705 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f31, 0(x2) # load 0x0000c93a from memory into f31
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f24, 0(x2) # load 0x000083ff from memory into f24
li x3, 0xf95d4a040a2b1f8c # load x3 with value 0xf95d4a040a2b1f8c
sw x3, 0(x2) # store 0xf95d4a040a2b1f8c in memory
flh f7, 0(x2) # load 0xf95d4a040a2b1f8c from memory into f7
fnmadd.h f12, f31, f24, f7, dyn # perform operation
fnmadd.h f12, f31, f24, f7, rdn # perform operation
fnmadd.h f12, f31, f24, f7, rmm # perform operation
fnmadd.h f12, f31, f24, f7, rne # perform operation
fnmadd.h f12, f31, f24, f7, rtz # perform operation
fnmadd.h f12, f31, f24, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f12, f31, f24, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f12, f31, f24, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f12, f31, f24, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f12, f31, f24, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f12, f31, f24, f7 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc93a fs2 = 0x200)
li x13, 0x00e96823fe558410 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f12, 0(x2) # load 0x0000c93a from memory into f12
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f26, 0(x2) # load 0x00000200 from memory into f26
li x3, 0x192a5d35a38a5177 # load x3 with value 0x192a5d35a38a5177
sw x3, 0(x2) # store 0x192a5d35a38a5177 in memory
flh f21, 0(x2) # load 0x192a5d35a38a5177 from memory into f21
fnmadd.h f13, f12, f26, f21, dyn # perform operation
fnmadd.h f13, f12, f26, f21, rdn # perform operation
fnmadd.h f13, f12, f26, f21, rmm # perform operation
fnmadd.h f13, f12, f26, f21, rne # perform operation
fnmadd.h f13, f12, f26, f21, rtz # perform operation
fnmadd.h f13, f12, f26, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f13, f12, f26, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f13, f12, f26, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f13, f12, f26, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f13, f12, f26, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f13, f12, f26, f21 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc93a fs2 = 0x8200)
li x25, 0x038ba49815bee1cf # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f2, 0(x2) # load 0x0000c93a from memory into f2
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f9, 0(x2) # load 0x00008200 from memory into f9
li x3, 0x6ed92d4236de8237 # load x3 with value 0x6ed92d4236de8237
sw x3, 0(x2) # store 0x6ed92d4236de8237 in memory
flh f18, 0(x2) # load 0x6ed92d4236de8237 from memory into f18
fnmadd.h f25, f2, f9, f18, dyn # perform operation
fnmadd.h f25, f2, f9, f18, rdn # perform operation
fnmadd.h f25, f2, f9, f18, rmm # perform operation
fnmadd.h f25, f2, f9, f18, rne # perform operation
fnmadd.h f25, f2, f9, f18, rtz # perform operation
fnmadd.h f25, f2, f9, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f25, f2, f9, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f25, f2, f9, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f25, f2, f9, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f25, f2, f9, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f25, f2, f9, f18 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc93a fs2 = 0x1)
li x8, 0xeea46aa0172b8b1e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f3, 0(x2) # load 0x0000c93a from memory into f3
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f5, 0(x2) # load 0x00000001 from memory into f5
li x3, 0x25a411823b94c54 # load x3 with value 0x25a411823b94c54
sw x3, 0(x2) # store 0x25a411823b94c54 in memory
flh f28, 0(x2) # load 0x25a411823b94c54 from memory into f28
fnmadd.h f8, f3, f5, f28, dyn # perform operation
fnmadd.h f8, f3, f5, f28, rdn # perform operation
fnmadd.h f8, f3, f5, f28, rmm # perform operation
fnmadd.h f8, f3, f5, f28, rne # perform operation
fnmadd.h f8, f3, f5, f28, rtz # perform operation
fnmadd.h f8, f3, f5, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f8, f3, f5, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f8, f3, f5, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f8, f3, f5, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f8, f3, f5, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f8, f3, f5, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc93a fs2 = 0x8001)
li x17, 0x4e2de712ee7e988e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f21, 0(x2) # load 0x0000c93a from memory into f21
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f4, 0(x2) # load 0x00008001 from memory into f4
li x3, 0xcd5ab2217f605d11 # load x3 with value 0xcd5ab2217f605d11
sw x3, 0(x2) # store 0xcd5ab2217f605d11 in memory
flh f2, 0(x2) # load 0xcd5ab2217f605d11 from memory into f2
fnmadd.h f17, f21, f4, f2, dyn # perform operation
fnmadd.h f17, f21, f4, f2, rdn # perform operation
fnmadd.h f17, f21, f4, f2, rmm # perform operation
fnmadd.h f17, f21, f4, f2, rne # perform operation
fnmadd.h f17, f21, f4, f2, rtz # perform operation
fnmadd.h f17, f21, f4, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f17, f21, f4, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f17, f21, f4, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f17, f21, f4, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f17, f21, f4, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f17, f21, f4, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc93a fs2 = 0x7c00)
li x23, 0x150fc37a852697fa # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f16, 0(x2) # load 0x0000c93a from memory into f16
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f25, 0(x2) # load 0x00007c00 from memory into f25
li x3, 0xf58287ffd0604a9f # load x3 with value 0xf58287ffd0604a9f
sw x3, 0(x2) # store 0xf58287ffd0604a9f in memory
flh f15, 0(x2) # load 0xf58287ffd0604a9f from memory into f15
fnmadd.h f23, f16, f25, f15, dyn # perform operation
fnmadd.h f23, f16, f25, f15, rdn # perform operation
fnmadd.h f23, f16, f25, f15, rmm # perform operation
fnmadd.h f23, f16, f25, f15, rne # perform operation
fnmadd.h f23, f16, f25, f15, rtz # perform operation
fnmadd.h f23, f16, f25, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f23, f16, f25, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f23, f16, f25, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f23, f16, f25, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f23, f16, f25, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f23, f16, f25, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc93a fs2 = 0xfc00)
li x28, 0x36724554fbea9148 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f26, 0(x2) # load 0x0000c93a from memory into f26
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f13, 0(x2) # load 0x0000fc00 from memory into f13
li x3, 0x3093abc36955cf60 # load x3 with value 0x3093abc36955cf60
sw x3, 0(x2) # store 0x3093abc36955cf60 in memory
flh f7, 0(x2) # load 0x3093abc36955cf60 from memory into f7
fnmadd.h f28, f26, f13, f7, dyn # perform operation
fnmadd.h f28, f26, f13, f7, rdn # perform operation
fnmadd.h f28, f26, f13, f7, rmm # perform operation
fnmadd.h f28, f26, f13, f7, rne # perform operation
fnmadd.h f28, f26, f13, f7, rtz # perform operation
fnmadd.h f28, f26, f13, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f28, f26, f13, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f28, f26, f13, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f28, f26, f13, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f28, f26, f13, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f28, f26, f13, f7 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc93a fs2 = 0x7e00)
li x30, 0x77bc2e2669aac5fb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f4, 0(x2) # load 0x0000c93a from memory into f4
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f31, 0(x2) # load 0x00007e00 from memory into f31
li x3, 0xf4ebbe160f77b42b # load x3 with value 0xf4ebbe160f77b42b
sw x3, 0(x2) # store 0xf4ebbe160f77b42b in memory
flh f7, 0(x2) # load 0xf4ebbe160f77b42b from memory into f7
fnmadd.h f30, f4, f31, f7, dyn # perform operation
fnmadd.h f30, f4, f31, f7, rdn # perform operation
fnmadd.h f30, f4, f31, f7, rmm # perform operation
fnmadd.h f30, f4, f31, f7, rne # perform operation
fnmadd.h f30, f4, f31, f7, rtz # perform operation
fnmadd.h f30, f4, f31, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f30, f4, f31, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f30, f4, f31, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f30, f4, f31, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f30, f4, f31, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f30, f4, f31, f7 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc93a fs2 = 0x7fff)
li x23, 0x5df6e7bdb7da3f40 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f6, 0(x2) # load 0x0000c93a from memory into f6
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f1, 0(x2) # load 0x00007fff from memory into f1
li x3, 0x6c85c3fd80f808b9 # load x3 with value 0x6c85c3fd80f808b9
sw x3, 0(x2) # store 0x6c85c3fd80f808b9 in memory
flh f8, 0(x2) # load 0x6c85c3fd80f808b9 from memory into f8
fnmadd.h f23, f6, f1, f8, dyn # perform operation
fnmadd.h f23, f6, f1, f8, rdn # perform operation
fnmadd.h f23, f6, f1, f8, rmm # perform operation
fnmadd.h f23, f6, f1, f8, rne # perform operation
fnmadd.h f23, f6, f1, f8, rtz # perform operation
fnmadd.h f23, f6, f1, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f23, f6, f1, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f23, f6, f1, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f23, f6, f1, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f23, f6, f1, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f23, f6, f1, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc93a fs2 = 0x7c01)
li x21, 0xdd0974aa1c314dde # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f24, 0(x2) # load 0x0000c93a from memory into f24
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f20, 0(x2) # load 0x00007c01 from memory into f20
li x3, 0x9a4625b90138a2cc # load x3 with value 0x9a4625b90138a2cc
sw x3, 0(x2) # store 0x9a4625b90138a2cc in memory
flh f16, 0(x2) # load 0x9a4625b90138a2cc from memory into f16
fnmadd.h f21, f24, f20, f16, dyn # perform operation
fnmadd.h f21, f24, f20, f16, rdn # perform operation
fnmadd.h f21, f24, f20, f16, rmm # perform operation
fnmadd.h f21, f24, f20, f16, rne # perform operation
fnmadd.h f21, f24, f20, f16, rtz # perform operation
fnmadd.h f21, f24, f20, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f21, f24, f20, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f21, f24, f20, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f21, f24, f20, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f21, f24, f20, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f21, f24, f20, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc93a fs2 = 0x7dff)
li x20, 0x5eb26c2f49b2a529 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f13, 0(x2) # load 0x0000c93a from memory into f13
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f9, 0(x2) # load 0x00007dff from memory into f9
li x3, 0x22caf9b8e4938efc # load x3 with value 0x22caf9b8e4938efc
sw x3, 0(x2) # store 0x22caf9b8e4938efc in memory
flh f16, 0(x2) # load 0x22caf9b8e4938efc from memory into f16
fnmadd.h f20, f13, f9, f16, dyn # perform operation
fnmadd.h f20, f13, f9, f16, rdn # perform operation
fnmadd.h f20, f13, f9, f16, rmm # perform operation
fnmadd.h f20, f13, f9, f16, rne # perform operation
fnmadd.h f20, f13, f9, f16, rtz # perform operation
fnmadd.h f20, f13, f9, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f20, f13, f9, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f20, f13, f9, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f20, f13, f9, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f20, f13, f9, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f20, f13, f9, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc93a fs2 = 0x58b4)
li x4, 0x689012a321b01452 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f16, 0(x2) # load 0x0000c93a from memory into f16
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f22, 0(x2) # load 0x000058b4 from memory into f22
li x3, 0xf4cdee5df470da59 # load x3 with value 0xf4cdee5df470da59
sw x3, 0(x2) # store 0xf4cdee5df470da59 in memory
flh f12, 0(x2) # load 0xf4cdee5df470da59 from memory into f12
fnmadd.h f4, f16, f22, f12, dyn # perform operation
fnmadd.h f4, f16, f22, f12, rdn # perform operation
fnmadd.h f4, f16, f22, f12, rmm # perform operation
fnmadd.h f4, f16, f22, f12, rne # perform operation
fnmadd.h f4, f16, f22, f12, rtz # perform operation
fnmadd.h f4, f16, f22, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f4, f16, f22, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f4, f16, f22, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f4, f16, f22, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f4, f16, f22, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f4, f16, f22, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc93a fs2 = 0xc93a)
li x2, 0x55e64367bf81a76f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f9, 0(x2) # load 0x0000c93a from memory into f9
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f19, 0(x2) # load 0x0000c93a from memory into f19
li x3, 0xad9a7601a190dbd1 # load x3 with value 0xad9a7601a190dbd1
sw x3, 0(x2) # store 0xad9a7601a190dbd1 in memory
flh f6, 0(x2) # load 0xad9a7601a190dbd1 from memory into f6
fnmadd.h f2, f9, f19, f6, dyn # perform operation
fnmadd.h f2, f9, f19, f6, rdn # perform operation
fnmadd.h f2, f9, f19, f6, rmm # perform operation
fnmadd.h f2, f9, f19, f6, rne # perform operation
fnmadd.h f2, f9, f19, f6, rtz # perform operation
fnmadd.h f2, f9, f19, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f2, f9, f19, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f2, f9, f19, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f2, f9, f19, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f2, f9, f19, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f2, f9, f19, f6 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x0)
li x24, 0x83f193f5d30544dc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f28, 0(x2) # load 0x00000000 from memory into f28
li x3, 0x54f6e51fe04bb84e # load x3 with value 0x54f6e51fe04bb84e
sw x3, 0(x2) # store 0x54f6e51fe04bb84e in memory
flh f30, 0(x2) # load 0x54f6e51fe04bb84e from memory into f30
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f19, 0(x2) # load 0x00000000 from memory into f19
fnmadd.h f24, f28, f30, f19, dyn # perform operation
fnmadd.h f24, f28, f30, f19, rdn # perform operation
fnmadd.h f24, f28, f30, f19, rmm # perform operation
fnmadd.h f24, f28, f30, f19, rne # perform operation
fnmadd.h f24, f28, f30, f19, rtz # perform operation
fnmadd.h f24, f28, f30, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f24, f28, f30, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f24, f28, f30, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f24, f28, f30, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f24, f28, f30, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f24, f28, f30, f19 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x8000)
li x18, 0xc919706e3f9bab0e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f4, 0(x2) # load 0x00000000 from memory into f4
li x3, 0x936e31e69e34e425 # load x3 with value 0x936e31e69e34e425
sw x3, 0(x2) # store 0x936e31e69e34e425 in memory
flh f11, 0(x2) # load 0x936e31e69e34e425 from memory into f11
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f7, 0(x2) # load 0x00008000 from memory into f7
fnmadd.h f18, f4, f11, f7, dyn # perform operation
fnmadd.h f18, f4, f11, f7, rdn # perform operation
fnmadd.h f18, f4, f11, f7, rmm # perform operation
fnmadd.h f18, f4, f11, f7, rne # perform operation
fnmadd.h f18, f4, f11, f7, rtz # perform operation
fnmadd.h f18, f4, f11, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f18, f4, f11, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f18, f4, f11, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f18, f4, f11, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f18, f4, f11, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f18, f4, f11, f7 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x3c00)
li x19, 0x7da2d39d673a9f41 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f4, 0(x2) # load 0x00000000 from memory into f4
li x3, 0xf733a7787e078bd4 # load x3 with value 0xf733a7787e078bd4
sw x3, 0(x2) # store 0xf733a7787e078bd4 in memory
flh f8, 0(x2) # load 0xf733a7787e078bd4 from memory into f8
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f7, 0(x2) # load 0x00003c00 from memory into f7
fnmadd.h f19, f4, f8, f7, dyn # perform operation
fnmadd.h f19, f4, f8, f7, rdn # perform operation
fnmadd.h f19, f4, f8, f7, rmm # perform operation
fnmadd.h f19, f4, f8, f7, rne # perform operation
fnmadd.h f19, f4, f8, f7, rtz # perform operation
fnmadd.h f19, f4, f8, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f19, f4, f8, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f19, f4, f8, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f19, f4, f8, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f19, f4, f8, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f19, f4, f8, f7 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0xbc00)
li x1, 0x41130af4787f04cd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f14, 0(x2) # load 0x00000000 from memory into f14
li x3, 0x594522b5fbd544be # load x3 with value 0x594522b5fbd544be
sw x3, 0(x2) # store 0x594522b5fbd544be in memory
flh f3, 0(x2) # load 0x594522b5fbd544be from memory into f3
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f25, 0(x2) # load 0x0000bc00 from memory into f25
fnmadd.h f1, f14, f3, f25, dyn # perform operation
fnmadd.h f1, f14, f3, f25, rdn # perform operation
fnmadd.h f1, f14, f3, f25, rmm # perform operation
fnmadd.h f1, f14, f3, f25, rne # perform operation
fnmadd.h f1, f14, f3, f25, rtz # perform operation
fnmadd.h f1, f14, f3, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f1, f14, f3, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f1, f14, f3, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f1, f14, f3, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f1, f14, f3, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f1, f14, f3, f25 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x3e00)
li x1, 0x0423f0ec611b125e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f14, 0(x2) # load 0x00000000 from memory into f14
li x3, 0x590630a7a62d5f0e # load x3 with value 0x590630a7a62d5f0e
sw x3, 0(x2) # store 0x590630a7a62d5f0e in memory
flh f27, 0(x2) # load 0x590630a7a62d5f0e from memory into f27
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f15, 0(x2) # load 0x00003e00 from memory into f15
fnmadd.h f1, f14, f27, f15, dyn # perform operation
fnmadd.h f1, f14, f27, f15, rdn # perform operation
fnmadd.h f1, f14, f27, f15, rmm # perform operation
fnmadd.h f1, f14, f27, f15, rne # perform operation
fnmadd.h f1, f14, f27, f15, rtz # perform operation
fnmadd.h f1, f14, f27, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f1, f14, f27, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f1, f14, f27, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f1, f14, f27, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f1, f14, f27, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f1, f14, f27, f15 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0xbe00)
li x29, 0x297eb320e6447d17 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f11, 0(x2) # load 0x00000000 from memory into f11
li x3, 0x24288894a25c86b7 # load x3 with value 0x24288894a25c86b7
sw x3, 0(x2) # store 0x24288894a25c86b7 in memory
flh f30, 0(x2) # load 0x24288894a25c86b7 from memory into f30
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f9, 0(x2) # load 0x0000be00 from memory into f9
fnmadd.h f29, f11, f30, f9, dyn # perform operation
fnmadd.h f29, f11, f30, f9, rdn # perform operation
fnmadd.h f29, f11, f30, f9, rmm # perform operation
fnmadd.h f29, f11, f30, f9, rne # perform operation
fnmadd.h f29, f11, f30, f9, rtz # perform operation
fnmadd.h f29, f11, f30, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f29, f11, f30, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f29, f11, f30, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f29, f11, f30, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f29, f11, f30, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f29, f11, f30, f9 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x4000)
li x31, 0x7f19028e7950477a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f13, 0(x2) # load 0x00000000 from memory into f13
li x3, 0xfd112367da1dbf29 # load x3 with value 0xfd112367da1dbf29
sw x3, 0(x2) # store 0xfd112367da1dbf29 in memory
flh f16, 0(x2) # load 0xfd112367da1dbf29 from memory into f16
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f14, 0(x2) # load 0x00004000 from memory into f14
fnmadd.h f31, f13, f16, f14, dyn # perform operation
fnmadd.h f31, f13, f16, f14, rdn # perform operation
fnmadd.h f31, f13, f16, f14, rmm # perform operation
fnmadd.h f31, f13, f16, f14, rne # perform operation
fnmadd.h f31, f13, f16, f14, rtz # perform operation
fnmadd.h f31, f13, f16, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f31, f13, f16, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f31, f13, f16, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f31, f13, f16, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f31, f13, f16, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f31, f13, f16, f14 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0xc000)
li x13, 0x6b25118537d2c726 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f16, 0(x2) # load 0x00000000 from memory into f16
li x3, 0xd83448be2d01481a # load x3 with value 0xd83448be2d01481a
sw x3, 0(x2) # store 0xd83448be2d01481a in memory
flh f20, 0(x2) # load 0xd83448be2d01481a from memory into f20
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f4, 0(x2) # load 0x0000c000 from memory into f4
fnmadd.h f13, f16, f20, f4, dyn # perform operation
fnmadd.h f13, f16, f20, f4, rdn # perform operation
fnmadd.h f13, f16, f20, f4, rmm # perform operation
fnmadd.h f13, f16, f20, f4, rne # perform operation
fnmadd.h f13, f16, f20, f4, rtz # perform operation
fnmadd.h f13, f16, f20, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f13, f16, f20, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f13, f16, f20, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f13, f16, f20, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f13, f16, f20, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f13, f16, f20, f4 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x400)
li x22, 0x01144c9994f8c73c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f12, 0(x2) # load 0x00000000 from memory into f12
li x3, 0xc400ed0b83e6b002 # load x3 with value 0xc400ed0b83e6b002
sw x3, 0(x2) # store 0xc400ed0b83e6b002 in memory
flh f25, 0(x2) # load 0xc400ed0b83e6b002 from memory into f25
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f24, 0(x2) # load 0x00000400 from memory into f24
fnmadd.h f22, f12, f25, f24, dyn # perform operation
fnmadd.h f22, f12, f25, f24, rdn # perform operation
fnmadd.h f22, f12, f25, f24, rmm # perform operation
fnmadd.h f22, f12, f25, f24, rne # perform operation
fnmadd.h f22, f12, f25, f24, rtz # perform operation
fnmadd.h f22, f12, f25, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f22, f12, f25, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f22, f12, f25, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f22, f12, f25, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f22, f12, f25, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f22, f12, f25, f24 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x8400)
li x6, 0x600549088bdcf659 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f20, 0(x2) # load 0x00000000 from memory into f20
li x3, 0x650914e17d819fac # load x3 with value 0x650914e17d819fac
sw x3, 0(x2) # store 0x650914e17d819fac in memory
flh f24, 0(x2) # load 0x650914e17d819fac from memory into f24
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f25, 0(x2) # load 0x00008400 from memory into f25
fnmadd.h f6, f20, f24, f25, dyn # perform operation
fnmadd.h f6, f20, f24, f25, rdn # perform operation
fnmadd.h f6, f20, f24, f25, rmm # perform operation
fnmadd.h f6, f20, f24, f25, rne # perform operation
fnmadd.h f6, f20, f24, f25, rtz # perform operation
fnmadd.h f6, f20, f24, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f6, f20, f24, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f6, f20, f24, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f6, f20, f24, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f6, f20, f24, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f6, f20, f24, f25 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x7bff)
li x27, 0xea8cd12b8f506767 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f25, 0(x2) # load 0x00000000 from memory into f25
li x3, 0x95a49a8a0ef31611 # load x3 with value 0x95a49a8a0ef31611
sw x3, 0(x2) # store 0x95a49a8a0ef31611 in memory
flh f26, 0(x2) # load 0x95a49a8a0ef31611 from memory into f26
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f10, 0(x2) # load 0x00007bff from memory into f10
fnmadd.h f27, f25, f26, f10, dyn # perform operation
fnmadd.h f27, f25, f26, f10, rdn # perform operation
fnmadd.h f27, f25, f26, f10, rmm # perform operation
fnmadd.h f27, f25, f26, f10, rne # perform operation
fnmadd.h f27, f25, f26, f10, rtz # perform operation
fnmadd.h f27, f25, f26, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f27, f25, f26, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f27, f25, f26, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f27, f25, f26, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f27, f25, f26, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f27, f25, f26, f10 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0xfbff)
li x7, 0x3d335cdb5ec0f319 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f3, 0(x2) # load 0x00000000 from memory into f3
li x3, 0x4d4acb198c0eb7b9 # load x3 with value 0x4d4acb198c0eb7b9
sw x3, 0(x2) # store 0x4d4acb198c0eb7b9 in memory
flh f18, 0(x2) # load 0x4d4acb198c0eb7b9 from memory into f18
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f4, 0(x2) # load 0x0000fbff from memory into f4
fnmadd.h f7, f3, f18, f4, dyn # perform operation
fnmadd.h f7, f3, f18, f4, rdn # perform operation
fnmadd.h f7, f3, f18, f4, rmm # perform operation
fnmadd.h f7, f3, f18, f4, rne # perform operation
fnmadd.h f7, f3, f18, f4, rtz # perform operation
fnmadd.h f7, f3, f18, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f7, f3, f18, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f7, f3, f18, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f7, f3, f18, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f7, f3, f18, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f7, f3, f18, f4 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x3ff)
li x29, 0x176f854e76f79ca0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f1, 0(x2) # load 0x00000000 from memory into f1
li x3, 0x9f3bdb1f60678849 # load x3 with value 0x9f3bdb1f60678849
sw x3, 0(x2) # store 0x9f3bdb1f60678849 in memory
flh f15, 0(x2) # load 0x9f3bdb1f60678849 from memory into f15
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f22, 0(x2) # load 0x000003ff from memory into f22
fnmadd.h f29, f1, f15, f22, dyn # perform operation
fnmadd.h f29, f1, f15, f22, rdn # perform operation
fnmadd.h f29, f1, f15, f22, rmm # perform operation
fnmadd.h f29, f1, f15, f22, rne # perform operation
fnmadd.h f29, f1, f15, f22, rtz # perform operation
fnmadd.h f29, f1, f15, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f29, f1, f15, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f29, f1, f15, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f29, f1, f15, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f29, f1, f15, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f29, f1, f15, f22 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x83ff)
li x31, 0x164c56748343d6d8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f23, 0(x2) # load 0x00000000 from memory into f23
li x3, 0x931aa6d963d1e4bf # load x3 with value 0x931aa6d963d1e4bf
sw x3, 0(x2) # store 0x931aa6d963d1e4bf in memory
flh f27, 0(x2) # load 0x931aa6d963d1e4bf from memory into f27
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f12, 0(x2) # load 0x000083ff from memory into f12
fnmadd.h f31, f23, f27, f12, dyn # perform operation
fnmadd.h f31, f23, f27, f12, rdn # perform operation
fnmadd.h f31, f23, f27, f12, rmm # perform operation
fnmadd.h f31, f23, f27, f12, rne # perform operation
fnmadd.h f31, f23, f27, f12, rtz # perform operation
fnmadd.h f31, f23, f27, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f31, f23, f27, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f31, f23, f27, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f31, f23, f27, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f31, f23, f27, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f31, f23, f27, f12 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x200)
li x9, 0x39e7a66d31288f96 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f17, 0(x2) # load 0x00000000 from memory into f17
li x3, 0x2cd0b76632800bbe # load x3 with value 0x2cd0b76632800bbe
sw x3, 0(x2) # store 0x2cd0b76632800bbe in memory
flh f16, 0(x2) # load 0x2cd0b76632800bbe from memory into f16
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f6, 0(x2) # load 0x00000200 from memory into f6
fnmadd.h f9, f17, f16, f6, dyn # perform operation
fnmadd.h f9, f17, f16, f6, rdn # perform operation
fnmadd.h f9, f17, f16, f6, rmm # perform operation
fnmadd.h f9, f17, f16, f6, rne # perform operation
fnmadd.h f9, f17, f16, f6, rtz # perform operation
fnmadd.h f9, f17, f16, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f9, f17, f16, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f9, f17, f16, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f9, f17, f16, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f9, f17, f16, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f9, f17, f16, f6 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x8200)
li x17, 0x6be85abe814c4d77 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f30, 0(x2) # load 0x00000000 from memory into f30
li x3, 0xc7818197eaf72143 # load x3 with value 0xc7818197eaf72143
sw x3, 0(x2) # store 0xc7818197eaf72143 in memory
flh f22, 0(x2) # load 0xc7818197eaf72143 from memory into f22
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f4, 0(x2) # load 0x00008200 from memory into f4
fnmadd.h f17, f30, f22, f4, dyn # perform operation
fnmadd.h f17, f30, f22, f4, rdn # perform operation
fnmadd.h f17, f30, f22, f4, rmm # perform operation
fnmadd.h f17, f30, f22, f4, rne # perform operation
fnmadd.h f17, f30, f22, f4, rtz # perform operation
fnmadd.h f17, f30, f22, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f17, f30, f22, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f17, f30, f22, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f17, f30, f22, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f17, f30, f22, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f17, f30, f22, f4 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x1)
li x8, 0x322e94a6eaf3e125 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f1, 0(x2) # load 0x00000000 from memory into f1
li x3, 0x63079259b17269ff # load x3 with value 0x63079259b17269ff
sw x3, 0(x2) # store 0x63079259b17269ff in memory
flh f27, 0(x2) # load 0x63079259b17269ff from memory into f27
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f30, 0(x2) # load 0x00000001 from memory into f30
fnmadd.h f8, f1, f27, f30, dyn # perform operation
fnmadd.h f8, f1, f27, f30, rdn # perform operation
fnmadd.h f8, f1, f27, f30, rmm # perform operation
fnmadd.h f8, f1, f27, f30, rne # perform operation
fnmadd.h f8, f1, f27, f30, rtz # perform operation
fnmadd.h f8, f1, f27, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f8, f1, f27, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f8, f1, f27, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f8, f1, f27, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f8, f1, f27, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f8, f1, f27, f30 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x8001)
li x29, 0xd62864c71d758993 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f2, 0(x2) # load 0x00000000 from memory into f2
li x3, 0xbea087ab148a0154 # load x3 with value 0xbea087ab148a0154
sw x3, 0(x2) # store 0xbea087ab148a0154 in memory
flh f21, 0(x2) # load 0xbea087ab148a0154 from memory into f21
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f12, 0(x2) # load 0x00008001 from memory into f12
fnmadd.h f29, f2, f21, f12, dyn # perform operation
fnmadd.h f29, f2, f21, f12, rdn # perform operation
fnmadd.h f29, f2, f21, f12, rmm # perform operation
fnmadd.h f29, f2, f21, f12, rne # perform operation
fnmadd.h f29, f2, f21, f12, rtz # perform operation
fnmadd.h f29, f2, f21, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f29, f2, f21, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f29, f2, f21, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f29, f2, f21, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f29, f2, f21, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f29, f2, f21, f12 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x7c00)
li x11, 0xd2e953354d3e257e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f10, 0(x2) # load 0x00000000 from memory into f10
li x3, 0x75b7ef5260ace82 # load x3 with value 0x75b7ef5260ace82
sw x3, 0(x2) # store 0x75b7ef5260ace82 in memory
flh f25, 0(x2) # load 0x75b7ef5260ace82 from memory into f25
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f17, 0(x2) # load 0x00007c00 from memory into f17
fnmadd.h f11, f10, f25, f17, dyn # perform operation
fnmadd.h f11, f10, f25, f17, rdn # perform operation
fnmadd.h f11, f10, f25, f17, rmm # perform operation
fnmadd.h f11, f10, f25, f17, rne # perform operation
fnmadd.h f11, f10, f25, f17, rtz # perform operation
fnmadd.h f11, f10, f25, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f11, f10, f25, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f11, f10, f25, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f11, f10, f25, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f11, f10, f25, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f11, f10, f25, f17 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0xfc00)
li x4, 0xb02e2d7280ff077e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f16, 0(x2) # load 0x00000000 from memory into f16
li x3, 0x34f6bfee5001bb3f # load x3 with value 0x34f6bfee5001bb3f
sw x3, 0(x2) # store 0x34f6bfee5001bb3f in memory
flh f2, 0(x2) # load 0x34f6bfee5001bb3f from memory into f2
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f30, 0(x2) # load 0x0000fc00 from memory into f30
fnmadd.h f4, f16, f2, f30, dyn # perform operation
fnmadd.h f4, f16, f2, f30, rdn # perform operation
fnmadd.h f4, f16, f2, f30, rmm # perform operation
fnmadd.h f4, f16, f2, f30, rne # perform operation
fnmadd.h f4, f16, f2, f30, rtz # perform operation
fnmadd.h f4, f16, f2, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f4, f16, f2, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f4, f16, f2, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f4, f16, f2, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f4, f16, f2, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f4, f16, f2, f30 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x7e00)
li x30, 0x0b0993fe62722449 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f23, 0(x2) # load 0x00000000 from memory into f23
li x3, 0x9da33b73d215654 # load x3 with value 0x9da33b73d215654
sw x3, 0(x2) # store 0x9da33b73d215654 in memory
flh f26, 0(x2) # load 0x9da33b73d215654 from memory into f26
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f8, 0(x2) # load 0x00007e00 from memory into f8
fnmadd.h f30, f23, f26, f8, dyn # perform operation
fnmadd.h f30, f23, f26, f8, rdn # perform operation
fnmadd.h f30, f23, f26, f8, rmm # perform operation
fnmadd.h f30, f23, f26, f8, rne # perform operation
fnmadd.h f30, f23, f26, f8, rtz # perform operation
fnmadd.h f30, f23, f26, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f30, f23, f26, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f30, f23, f26, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f30, f23, f26, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f30, f23, f26, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f30, f23, f26, f8 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x7fff)
li x12, 0x0edbf5a695d2408d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f26, 0(x2) # load 0x00000000 from memory into f26
li x3, 0xfc1074e0e351f318 # load x3 with value 0xfc1074e0e351f318
sw x3, 0(x2) # store 0xfc1074e0e351f318 in memory
flh f17, 0(x2) # load 0xfc1074e0e351f318 from memory into f17
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f14, 0(x2) # load 0x00007fff from memory into f14
fnmadd.h f12, f26, f17, f14, dyn # perform operation
fnmadd.h f12, f26, f17, f14, rdn # perform operation
fnmadd.h f12, f26, f17, f14, rmm # perform operation
fnmadd.h f12, f26, f17, f14, rne # perform operation
fnmadd.h f12, f26, f17, f14, rtz # perform operation
fnmadd.h f12, f26, f17, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f12, f26, f17, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f12, f26, f17, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f12, f26, f17, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f12, f26, f17, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f12, f26, f17, f14 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x7c01)
li x22, 0xfd61417b72ff6506 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f20, 0(x2) # load 0x00000000 from memory into f20
li x3, 0x4c0da91024cdcdfe # load x3 with value 0x4c0da91024cdcdfe
sw x3, 0(x2) # store 0x4c0da91024cdcdfe in memory
flh f24, 0(x2) # load 0x4c0da91024cdcdfe from memory into f24
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f30, 0(x2) # load 0x00007c01 from memory into f30
fnmadd.h f22, f20, f24, f30, dyn # perform operation
fnmadd.h f22, f20, f24, f30, rdn # perform operation
fnmadd.h f22, f20, f24, f30, rmm # perform operation
fnmadd.h f22, f20, f24, f30, rne # perform operation
fnmadd.h f22, f20, f24, f30, rtz # perform operation
fnmadd.h f22, f20, f24, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f22, f20, f24, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f22, f20, f24, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f22, f20, f24, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f22, f20, f24, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f22, f20, f24, f30 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x7dff)
li x2, 0x2606a4cb3986c03f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f17, 0(x2) # load 0x00000000 from memory into f17
li x3, 0xb3733cd5563a6dde # load x3 with value 0xb3733cd5563a6dde
sw x3, 0(x2) # store 0xb3733cd5563a6dde in memory
flh f3, 0(x2) # load 0xb3733cd5563a6dde from memory into f3
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f27, 0(x2) # load 0x00007dff from memory into f27
fnmadd.h f2, f17, f3, f27, dyn # perform operation
fnmadd.h f2, f17, f3, f27, rdn # perform operation
fnmadd.h f2, f17, f3, f27, rmm # perform operation
fnmadd.h f2, f17, f3, f27, rne # perform operation
fnmadd.h f2, f17, f3, f27, rtz # perform operation
fnmadd.h f2, f17, f3, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f2, f17, f3, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f2, f17, f3, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f2, f17, f3, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f2, f17, f3, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f2, f17, f3, f27 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x58b4)
li x23, 0xfb68ae06401d3e3d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f9, 0(x2) # load 0x00000000 from memory into f9
li x3, 0x5b824e93fff80af6 # load x3 with value 0x5b824e93fff80af6
sw x3, 0(x2) # store 0x5b824e93fff80af6 in memory
flh f22, 0(x2) # load 0x5b824e93fff80af6 from memory into f22
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f13, 0(x2) # load 0x000058b4 from memory into f13
fnmadd.h f23, f9, f22, f13, dyn # perform operation
fnmadd.h f23, f9, f22, f13, rdn # perform operation
fnmadd.h f23, f9, f22, f13, rmm # perform operation
fnmadd.h f23, f9, f22, f13, rne # perform operation
fnmadd.h f23, f9, f22, f13, rtz # perform operation
fnmadd.h f23, f9, f22, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f23, f9, f22, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f23, f9, f22, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f23, f9, f22, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f23, f9, f22, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f23, f9, f22, f13 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0xc93a)
li x20, 0xcabff01cfb1a9888 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f3, 0(x2) # load 0x00000000 from memory into f3
li x3, 0xeadb1558f86a6ada # load x3 with value 0xeadb1558f86a6ada
sw x3, 0(x2) # store 0xeadb1558f86a6ada in memory
flh f15, 0(x2) # load 0xeadb1558f86a6ada from memory into f15
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f21, 0(x2) # load 0x0000c93a from memory into f21
fnmadd.h f20, f3, f15, f21, dyn # perform operation
fnmadd.h f20, f3, f15, f21, rdn # perform operation
fnmadd.h f20, f3, f15, f21, rmm # perform operation
fnmadd.h f20, f3, f15, f21, rne # perform operation
fnmadd.h f20, f3, f15, f21, rtz # perform operation
fnmadd.h f20, f3, f15, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f20, f3, f15, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f20, f3, f15, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f20, f3, f15, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f20, f3, f15, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f20, f3, f15, f21 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000 fs3 = 0x0)
li x5, 0x5644337795f03beb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f10, 0(x2) # load 0x00008000 from memory into f10
li x3, 0x7f21e759f96023a6 # load x3 with value 0x7f21e759f96023a6
sw x3, 0(x2) # store 0x7f21e759f96023a6 in memory
flh f23, 0(x2) # load 0x7f21e759f96023a6 from memory into f23
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f14, 0(x2) # load 0x00000000 from memory into f14
fnmadd.h f5, f10, f23, f14, dyn # perform operation
fnmadd.h f5, f10, f23, f14, rdn # perform operation
fnmadd.h f5, f10, f23, f14, rmm # perform operation
fnmadd.h f5, f10, f23, f14, rne # perform operation
fnmadd.h f5, f10, f23, f14, rtz # perform operation
fnmadd.h f5, f10, f23, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f5, f10, f23, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f5, f10, f23, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f5, f10, f23, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f5, f10, f23, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f5, f10, f23, f14 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000 fs3 = 0x8000)
li x11, 0x41db836589e5bce0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f18, 0(x2) # load 0x00008000 from memory into f18
li x3, 0xe6525eee83c23255 # load x3 with value 0xe6525eee83c23255
sw x3, 0(x2) # store 0xe6525eee83c23255 in memory
flh f26, 0(x2) # load 0xe6525eee83c23255 from memory into f26
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f19, 0(x2) # load 0x00008000 from memory into f19
fnmadd.h f11, f18, f26, f19, dyn # perform operation
fnmadd.h f11, f18, f26, f19, rdn # perform operation
fnmadd.h f11, f18, f26, f19, rmm # perform operation
fnmadd.h f11, f18, f26, f19, rne # perform operation
fnmadd.h f11, f18, f26, f19, rtz # perform operation
fnmadd.h f11, f18, f26, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f11, f18, f26, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f11, f18, f26, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f11, f18, f26, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f11, f18, f26, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f11, f18, f26, f19 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000 fs3 = 0x3c00)
li x2, 0x14625dfdb97aefc4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f14, 0(x2) # load 0x00008000 from memory into f14
li x3, 0x7a7cdb7b902c9c22 # load x3 with value 0x7a7cdb7b902c9c22
sw x3, 0(x2) # store 0x7a7cdb7b902c9c22 in memory
flh f28, 0(x2) # load 0x7a7cdb7b902c9c22 from memory into f28
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f4, 0(x2) # load 0x00003c00 from memory into f4
fnmadd.h f2, f14, f28, f4, dyn # perform operation
fnmadd.h f2, f14, f28, f4, rdn # perform operation
fnmadd.h f2, f14, f28, f4, rmm # perform operation
fnmadd.h f2, f14, f28, f4, rne # perform operation
fnmadd.h f2, f14, f28, f4, rtz # perform operation
fnmadd.h f2, f14, f28, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f2, f14, f28, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f2, f14, f28, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f2, f14, f28, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f2, f14, f28, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f2, f14, f28, f4 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000 fs3 = 0xbc00)
li x21, 0x55d355b3807a6605 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f28, 0(x2) # load 0x00008000 from memory into f28
li x3, 0x23384de507808e0c # load x3 with value 0x23384de507808e0c
sw x3, 0(x2) # store 0x23384de507808e0c in memory
flh f30, 0(x2) # load 0x23384de507808e0c from memory into f30
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f7, 0(x2) # load 0x0000bc00 from memory into f7
fnmadd.h f21, f28, f30, f7, dyn # perform operation
fnmadd.h f21, f28, f30, f7, rdn # perform operation
fnmadd.h f21, f28, f30, f7, rmm # perform operation
fnmadd.h f21, f28, f30, f7, rne # perform operation
fnmadd.h f21, f28, f30, f7, rtz # perform operation
fnmadd.h f21, f28, f30, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f21, f28, f30, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f21, f28, f30, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f21, f28, f30, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f21, f28, f30, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f21, f28, f30, f7 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000 fs3 = 0x3e00)
li x11, 0xaa5bf24f08550fdc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f30, 0(x2) # load 0x00008000 from memory into f30
li x3, 0xbbce385acd6cc142 # load x3 with value 0xbbce385acd6cc142
sw x3, 0(x2) # store 0xbbce385acd6cc142 in memory
flh f28, 0(x2) # load 0xbbce385acd6cc142 from memory into f28
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f17, 0(x2) # load 0x00003e00 from memory into f17
fnmadd.h f11, f30, f28, f17, dyn # perform operation
fnmadd.h f11, f30, f28, f17, rdn # perform operation
fnmadd.h f11, f30, f28, f17, rmm # perform operation
fnmadd.h f11, f30, f28, f17, rne # perform operation
fnmadd.h f11, f30, f28, f17, rtz # perform operation
fnmadd.h f11, f30, f28, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f11, f30, f28, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f11, f30, f28, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f11, f30, f28, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f11, f30, f28, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f11, f30, f28, f17 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000 fs3 = 0xbe00)
li x23, 0x0d7ff364d1d96ca3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f22, 0(x2) # load 0x00008000 from memory into f22
li x3, 0x33f53180d56e32c0 # load x3 with value 0x33f53180d56e32c0
sw x3, 0(x2) # store 0x33f53180d56e32c0 in memory
flh f7, 0(x2) # load 0x33f53180d56e32c0 from memory into f7
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f5, 0(x2) # load 0x0000be00 from memory into f5
fnmadd.h f23, f22, f7, f5, dyn # perform operation
fnmadd.h f23, f22, f7, f5, rdn # perform operation
fnmadd.h f23, f22, f7, f5, rmm # perform operation
fnmadd.h f23, f22, f7, f5, rne # perform operation
fnmadd.h f23, f22, f7, f5, rtz # perform operation
fnmadd.h f23, f22, f7, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f23, f22, f7, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f23, f22, f7, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f23, f22, f7, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f23, f22, f7, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f23, f22, f7, f5 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000 fs3 = 0x4000)
li x5, 0x3dbe9e74afbcd184 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f22, 0(x2) # load 0x00008000 from memory into f22
li x3, 0x456a7f1d5eda71c3 # load x3 with value 0x456a7f1d5eda71c3
sw x3, 0(x2) # store 0x456a7f1d5eda71c3 in memory
flh f27, 0(x2) # load 0x456a7f1d5eda71c3 from memory into f27
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f16, 0(x2) # load 0x00004000 from memory into f16
fnmadd.h f5, f22, f27, f16, dyn # perform operation
fnmadd.h f5, f22, f27, f16, rdn # perform operation
fnmadd.h f5, f22, f27, f16, rmm # perform operation
fnmadd.h f5, f22, f27, f16, rne # perform operation
fnmadd.h f5, f22, f27, f16, rtz # perform operation
fnmadd.h f5, f22, f27, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f5, f22, f27, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f5, f22, f27, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f5, f22, f27, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f5, f22, f27, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f5, f22, f27, f16 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000 fs3 = 0xc000)
li x4, 0xba68450243ab832e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f31, 0(x2) # load 0x00008000 from memory into f31
li x3, 0x6395b53f3adaba74 # load x3 with value 0x6395b53f3adaba74
sw x3, 0(x2) # store 0x6395b53f3adaba74 in memory
flh f16, 0(x2) # load 0x6395b53f3adaba74 from memory into f16
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f11, 0(x2) # load 0x0000c000 from memory into f11
fnmadd.h f4, f31, f16, f11, dyn # perform operation
fnmadd.h f4, f31, f16, f11, rdn # perform operation
fnmadd.h f4, f31, f16, f11, rmm # perform operation
fnmadd.h f4, f31, f16, f11, rne # perform operation
fnmadd.h f4, f31, f16, f11, rtz # perform operation
fnmadd.h f4, f31, f16, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f4, f31, f16, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f4, f31, f16, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f4, f31, f16, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f4, f31, f16, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f4, f31, f16, f11 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000 fs3 = 0x400)
li x14, 0xcacaba77627faf63 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f29, 0(x2) # load 0x00008000 from memory into f29
li x3, 0xd8f308c5e38d9456 # load x3 with value 0xd8f308c5e38d9456
sw x3, 0(x2) # store 0xd8f308c5e38d9456 in memory
flh f2, 0(x2) # load 0xd8f308c5e38d9456 from memory into f2
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f16, 0(x2) # load 0x00000400 from memory into f16
fnmadd.h f14, f29, f2, f16, dyn # perform operation
fnmadd.h f14, f29, f2, f16, rdn # perform operation
fnmadd.h f14, f29, f2, f16, rmm # perform operation
fnmadd.h f14, f29, f2, f16, rne # perform operation
fnmadd.h f14, f29, f2, f16, rtz # perform operation
fnmadd.h f14, f29, f2, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f14, f29, f2, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f14, f29, f2, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f14, f29, f2, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f14, f29, f2, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f14, f29, f2, f16 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000 fs3 = 0x8400)
li x25, 0x954aa3b83d406cbd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f18, 0(x2) # load 0x00008000 from memory into f18
li x3, 0x495d2f4f58929bb0 # load x3 with value 0x495d2f4f58929bb0
sw x3, 0(x2) # store 0x495d2f4f58929bb0 in memory
flh f20, 0(x2) # load 0x495d2f4f58929bb0 from memory into f20
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f21, 0(x2) # load 0x00008400 from memory into f21
fnmadd.h f25, f18, f20, f21, dyn # perform operation
fnmadd.h f25, f18, f20, f21, rdn # perform operation
fnmadd.h f25, f18, f20, f21, rmm # perform operation
fnmadd.h f25, f18, f20, f21, rne # perform operation
fnmadd.h f25, f18, f20, f21, rtz # perform operation
fnmadd.h f25, f18, f20, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f25, f18, f20, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f25, f18, f20, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f25, f18, f20, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f25, f18, f20, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f25, f18, f20, f21 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000 fs3 = 0x7bff)
li x16, 0x7db2b88ae9f8608a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f14, 0(x2) # load 0x00008000 from memory into f14
li x3, 0x21972b9954e49641 # load x3 with value 0x21972b9954e49641
sw x3, 0(x2) # store 0x21972b9954e49641 in memory
flh f31, 0(x2) # load 0x21972b9954e49641 from memory into f31
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f6, 0(x2) # load 0x00007bff from memory into f6
fnmadd.h f16, f14, f31, f6, dyn # perform operation
fnmadd.h f16, f14, f31, f6, rdn # perform operation
fnmadd.h f16, f14, f31, f6, rmm # perform operation
fnmadd.h f16, f14, f31, f6, rne # perform operation
fnmadd.h f16, f14, f31, f6, rtz # perform operation
fnmadd.h f16, f14, f31, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f16, f14, f31, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f16, f14, f31, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f16, f14, f31, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f16, f14, f31, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f16, f14, f31, f6 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000 fs3 = 0xfbff)
li x28, 0xca916df0fc897114 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f29, 0(x2) # load 0x00008000 from memory into f29
li x3, 0xd888cbcf79ff7112 # load x3 with value 0xd888cbcf79ff7112
sw x3, 0(x2) # store 0xd888cbcf79ff7112 in memory
flh f10, 0(x2) # load 0xd888cbcf79ff7112 from memory into f10
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f15, 0(x2) # load 0x0000fbff from memory into f15
fnmadd.h f28, f29, f10, f15, dyn # perform operation
fnmadd.h f28, f29, f10, f15, rdn # perform operation
fnmadd.h f28, f29, f10, f15, rmm # perform operation
fnmadd.h f28, f29, f10, f15, rne # perform operation
fnmadd.h f28, f29, f10, f15, rtz # perform operation
fnmadd.h f28, f29, f10, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f28, f29, f10, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f28, f29, f10, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f28, f29, f10, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f28, f29, f10, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f28, f29, f10, f15 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000 fs3 = 0x3ff)
li x27, 0x5f490f84c83cd952 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f6, 0(x2) # load 0x00008000 from memory into f6
li x3, 0xb783dd35ef61388a # load x3 with value 0xb783dd35ef61388a
sw x3, 0(x2) # store 0xb783dd35ef61388a in memory
flh f21, 0(x2) # load 0xb783dd35ef61388a from memory into f21
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f30, 0(x2) # load 0x000003ff from memory into f30
fnmadd.h f27, f6, f21, f30, dyn # perform operation
fnmadd.h f27, f6, f21, f30, rdn # perform operation
fnmadd.h f27, f6, f21, f30, rmm # perform operation
fnmadd.h f27, f6, f21, f30, rne # perform operation
fnmadd.h f27, f6, f21, f30, rtz # perform operation
fnmadd.h f27, f6, f21, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f27, f6, f21, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f27, f6, f21, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f27, f6, f21, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f27, f6, f21, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f27, f6, f21, f30 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000 fs3 = 0x83ff)
li x1, 0xb81366bcb51a818a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f25, 0(x2) # load 0x00008000 from memory into f25
li x3, 0x93c454d1bd50e7b8 # load x3 with value 0x93c454d1bd50e7b8
sw x3, 0(x2) # store 0x93c454d1bd50e7b8 in memory
flh f31, 0(x2) # load 0x93c454d1bd50e7b8 from memory into f31
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f24, 0(x2) # load 0x000083ff from memory into f24
fnmadd.h f1, f25, f31, f24, dyn # perform operation
fnmadd.h f1, f25, f31, f24, rdn # perform operation
fnmadd.h f1, f25, f31, f24, rmm # perform operation
fnmadd.h f1, f25, f31, f24, rne # perform operation
fnmadd.h f1, f25, f31, f24, rtz # perform operation
fnmadd.h f1, f25, f31, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f1, f25, f31, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f1, f25, f31, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f1, f25, f31, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f1, f25, f31, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f1, f25, f31, f24 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000 fs3 = 0x200)
li x15, 0x0cc5e57def96666f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f12, 0(x2) # load 0x00008000 from memory into f12
li x3, 0x29fb1ecba0b98685 # load x3 with value 0x29fb1ecba0b98685
sw x3, 0(x2) # store 0x29fb1ecba0b98685 in memory
flh f9, 0(x2) # load 0x29fb1ecba0b98685 from memory into f9
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f24, 0(x2) # load 0x00000200 from memory into f24
fnmadd.h f15, f12, f9, f24, dyn # perform operation
fnmadd.h f15, f12, f9, f24, rdn # perform operation
fnmadd.h f15, f12, f9, f24, rmm # perform operation
fnmadd.h f15, f12, f9, f24, rne # perform operation
fnmadd.h f15, f12, f9, f24, rtz # perform operation
fnmadd.h f15, f12, f9, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f15, f12, f9, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f15, f12, f9, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f15, f12, f9, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f15, f12, f9, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f15, f12, f9, f24 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000 fs3 = 0x8200)
li x9, 0x8f9ca33b5d461059 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f27, 0(x2) # load 0x00008000 from memory into f27
li x3, 0xa96b4a4f18b6600c # load x3 with value 0xa96b4a4f18b6600c
sw x3, 0(x2) # store 0xa96b4a4f18b6600c in memory
flh f17, 0(x2) # load 0xa96b4a4f18b6600c from memory into f17
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f28, 0(x2) # load 0x00008200 from memory into f28
fnmadd.h f9, f27, f17, f28, dyn # perform operation
fnmadd.h f9, f27, f17, f28, rdn # perform operation
fnmadd.h f9, f27, f17, f28, rmm # perform operation
fnmadd.h f9, f27, f17, f28, rne # perform operation
fnmadd.h f9, f27, f17, f28, rtz # perform operation
fnmadd.h f9, f27, f17, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f9, f27, f17, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f9, f27, f17, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f9, f27, f17, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f9, f27, f17, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f9, f27, f17, f28 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000 fs3 = 0x1)
li x13, 0xeb2dc692da9e98b7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f10, 0(x2) # load 0x00008000 from memory into f10
li x3, 0xc57dfff10d74f4fc # load x3 with value 0xc57dfff10d74f4fc
sw x3, 0(x2) # store 0xc57dfff10d74f4fc in memory
flh f21, 0(x2) # load 0xc57dfff10d74f4fc from memory into f21
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f20, 0(x2) # load 0x00000001 from memory into f20
fnmadd.h f13, f10, f21, f20, dyn # perform operation
fnmadd.h f13, f10, f21, f20, rdn # perform operation
fnmadd.h f13, f10, f21, f20, rmm # perform operation
fnmadd.h f13, f10, f21, f20, rne # perform operation
fnmadd.h f13, f10, f21, f20, rtz # perform operation
fnmadd.h f13, f10, f21, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f13, f10, f21, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f13, f10, f21, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f13, f10, f21, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f13, f10, f21, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f13, f10, f21, f20 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000 fs3 = 0x8001)
li x24, 0xc279e782bd9c9ac5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f13, 0(x2) # load 0x00008000 from memory into f13
li x3, 0x92334baa5dca2271 # load x3 with value 0x92334baa5dca2271
sw x3, 0(x2) # store 0x92334baa5dca2271 in memory
flh f22, 0(x2) # load 0x92334baa5dca2271 from memory into f22
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f5, 0(x2) # load 0x00008001 from memory into f5
fnmadd.h f24, f13, f22, f5, dyn # perform operation
fnmadd.h f24, f13, f22, f5, rdn # perform operation
fnmadd.h f24, f13, f22, f5, rmm # perform operation
fnmadd.h f24, f13, f22, f5, rne # perform operation
fnmadd.h f24, f13, f22, f5, rtz # perform operation
fnmadd.h f24, f13, f22, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f24, f13, f22, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f24, f13, f22, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f24, f13, f22, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f24, f13, f22, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f24, f13, f22, f5 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000 fs3 = 0x7c00)
li x18, 0x8ec96b910fd255d5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f30, 0(x2) # load 0x00008000 from memory into f30
li x3, 0x3a41d4babeebeeb8 # load x3 with value 0x3a41d4babeebeeb8
sw x3, 0(x2) # store 0x3a41d4babeebeeb8 in memory
flh f2, 0(x2) # load 0x3a41d4babeebeeb8 from memory into f2
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f11, 0(x2) # load 0x00007c00 from memory into f11
fnmadd.h f18, f30, f2, f11, dyn # perform operation
fnmadd.h f18, f30, f2, f11, rdn # perform operation
fnmadd.h f18, f30, f2, f11, rmm # perform operation
fnmadd.h f18, f30, f2, f11, rne # perform operation
fnmadd.h f18, f30, f2, f11, rtz # perform operation
fnmadd.h f18, f30, f2, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f18, f30, f2, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f18, f30, f2, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f18, f30, f2, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f18, f30, f2, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f18, f30, f2, f11 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000 fs3 = 0xfc00)
li x5, 0xcf4a9cef87aa1b5b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f2, 0(x2) # load 0x00008000 from memory into f2
li x3, 0x59dae9b8e1b378c1 # load x3 with value 0x59dae9b8e1b378c1
sw x3, 0(x2) # store 0x59dae9b8e1b378c1 in memory
flh f19, 0(x2) # load 0x59dae9b8e1b378c1 from memory into f19
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f8, 0(x2) # load 0x0000fc00 from memory into f8
fnmadd.h f5, f2, f19, f8, dyn # perform operation
fnmadd.h f5, f2, f19, f8, rdn # perform operation
fnmadd.h f5, f2, f19, f8, rmm # perform operation
fnmadd.h f5, f2, f19, f8, rne # perform operation
fnmadd.h f5, f2, f19, f8, rtz # perform operation
fnmadd.h f5, f2, f19, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f5, f2, f19, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f5, f2, f19, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f5, f2, f19, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f5, f2, f19, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f5, f2, f19, f8 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000 fs3 = 0x7e00)
li x11, 0x78a7b520c7c8d4ff # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f26, 0(x2) # load 0x00008000 from memory into f26
li x3, 0x7dab75ed9dfdee40 # load x3 with value 0x7dab75ed9dfdee40
sw x3, 0(x2) # store 0x7dab75ed9dfdee40 in memory
flh f23, 0(x2) # load 0x7dab75ed9dfdee40 from memory into f23
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f20, 0(x2) # load 0x00007e00 from memory into f20
fnmadd.h f11, f26, f23, f20, dyn # perform operation
fnmadd.h f11, f26, f23, f20, rdn # perform operation
fnmadd.h f11, f26, f23, f20, rmm # perform operation
fnmadd.h f11, f26, f23, f20, rne # perform operation
fnmadd.h f11, f26, f23, f20, rtz # perform operation
fnmadd.h f11, f26, f23, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f11, f26, f23, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f11, f26, f23, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f11, f26, f23, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f11, f26, f23, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f11, f26, f23, f20 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000 fs3 = 0x7fff)
li x3, 0x242b652daf66b117 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f31, 0(x2) # load 0x00008000 from memory into f31
li x3, 0xdfd124e559a1b9fd # load x3 with value 0xdfd124e559a1b9fd
sw x3, 0(x2) # store 0xdfd124e559a1b9fd in memory
flh f11, 0(x2) # load 0xdfd124e559a1b9fd from memory into f11
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f27, 0(x2) # load 0x00007fff from memory into f27
fnmadd.h f3, f31, f11, f27, dyn # perform operation
fnmadd.h f3, f31, f11, f27, rdn # perform operation
fnmadd.h f3, f31, f11, f27, rmm # perform operation
fnmadd.h f3, f31, f11, f27, rne # perform operation
fnmadd.h f3, f31, f11, f27, rtz # perform operation
fnmadd.h f3, f31, f11, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f3, f31, f11, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f3, f31, f11, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f3, f31, f11, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f3, f31, f11, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f3, f31, f11, f27 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000 fs3 = 0x7c01)
li x12, 0x155162386f2bde30 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f3, 0(x2) # load 0x00008000 from memory into f3
li x3, 0x72837697f640e76b # load x3 with value 0x72837697f640e76b
sw x3, 0(x2) # store 0x72837697f640e76b in memory
flh f17, 0(x2) # load 0x72837697f640e76b from memory into f17
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f31, 0(x2) # load 0x00007c01 from memory into f31
fnmadd.h f12, f3, f17, f31, dyn # perform operation
fnmadd.h f12, f3, f17, f31, rdn # perform operation
fnmadd.h f12, f3, f17, f31, rmm # perform operation
fnmadd.h f12, f3, f17, f31, rne # perform operation
fnmadd.h f12, f3, f17, f31, rtz # perform operation
fnmadd.h f12, f3, f17, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f12, f3, f17, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f12, f3, f17, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f12, f3, f17, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f12, f3, f17, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f12, f3, f17, f31 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000 fs3 = 0x7dff)
li x23, 0xf3c73039d1591788 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f7, 0(x2) # load 0x00008000 from memory into f7
li x3, 0xc84b8e7f654dab06 # load x3 with value 0xc84b8e7f654dab06
sw x3, 0(x2) # store 0xc84b8e7f654dab06 in memory
flh f26, 0(x2) # load 0xc84b8e7f654dab06 from memory into f26
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f8, 0(x2) # load 0x00007dff from memory into f8
fnmadd.h f23, f7, f26, f8, dyn # perform operation
fnmadd.h f23, f7, f26, f8, rdn # perform operation
fnmadd.h f23, f7, f26, f8, rmm # perform operation
fnmadd.h f23, f7, f26, f8, rne # perform operation
fnmadd.h f23, f7, f26, f8, rtz # perform operation
fnmadd.h f23, f7, f26, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f23, f7, f26, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f23, f7, f26, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f23, f7, f26, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f23, f7, f26, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f23, f7, f26, f8 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000 fs3 = 0x58b4)
li x7, 0x3a5e7e7fce0ba0cc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f10, 0(x2) # load 0x00008000 from memory into f10
li x3, 0xf8fd53494ed343af # load x3 with value 0xf8fd53494ed343af
sw x3, 0(x2) # store 0xf8fd53494ed343af in memory
flh f15, 0(x2) # load 0xf8fd53494ed343af from memory into f15
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f28, 0(x2) # load 0x000058b4 from memory into f28
fnmadd.h f7, f10, f15, f28, dyn # perform operation
fnmadd.h f7, f10, f15, f28, rdn # perform operation
fnmadd.h f7, f10, f15, f28, rmm # perform operation
fnmadd.h f7, f10, f15, f28, rne # perform operation
fnmadd.h f7, f10, f15, f28, rtz # perform operation
fnmadd.h f7, f10, f15, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f7, f10, f15, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f7, f10, f15, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f7, f10, f15, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f7, f10, f15, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f7, f10, f15, f28 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8000 fs3 = 0xc93a)
li x9, 0x362f92bef8006758 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f29, 0(x2) # load 0x00008000 from memory into f29
li x3, 0xa4fbad2da0353d47 # load x3 with value 0xa4fbad2da0353d47
sw x3, 0(x2) # store 0xa4fbad2da0353d47 in memory
flh f3, 0(x2) # load 0xa4fbad2da0353d47 from memory into f3
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f27, 0(x2) # load 0x0000c93a from memory into f27
fnmadd.h f9, f29, f3, f27, dyn # perform operation
fnmadd.h f9, f29, f3, f27, rdn # perform operation
fnmadd.h f9, f29, f3, f27, rmm # perform operation
fnmadd.h f9, f29, f3, f27, rne # perform operation
fnmadd.h f9, f29, f3, f27, rtz # perform operation
fnmadd.h f9, f29, f3, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f9, f29, f3, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f9, f29, f3, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f9, f29, f3, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f9, f29, f3, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f9, f29, f3, f27 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3c00 fs3 = 0x0)
li x3, 0x1235fe30b49853cb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f14, 0(x2) # load 0x00003c00 from memory into f14
li x3, 0xfb5bf5b786acdf7f # load x3 with value 0xfb5bf5b786acdf7f
sw x3, 0(x2) # store 0xfb5bf5b786acdf7f in memory
flh f21, 0(x2) # load 0xfb5bf5b786acdf7f from memory into f21
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f22, 0(x2) # load 0x00000000 from memory into f22
fnmadd.h f3, f14, f21, f22, dyn # perform operation
fnmadd.h f3, f14, f21, f22, rdn # perform operation
fnmadd.h f3, f14, f21, f22, rmm # perform operation
fnmadd.h f3, f14, f21, f22, rne # perform operation
fnmadd.h f3, f14, f21, f22, rtz # perform operation
fnmadd.h f3, f14, f21, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f3, f14, f21, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f3, f14, f21, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f3, f14, f21, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f3, f14, f21, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f3, f14, f21, f22 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3c00 fs3 = 0x8000)
li x12, 0xa710521764b337ad # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f27, 0(x2) # load 0x00003c00 from memory into f27
li x3, 0x2d682ea037a4c3bd # load x3 with value 0x2d682ea037a4c3bd
sw x3, 0(x2) # store 0x2d682ea037a4c3bd in memory
flh f29, 0(x2) # load 0x2d682ea037a4c3bd from memory into f29
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f8, 0(x2) # load 0x00008000 from memory into f8
fnmadd.h f12, f27, f29, f8, dyn # perform operation
fnmadd.h f12, f27, f29, f8, rdn # perform operation
fnmadd.h f12, f27, f29, f8, rmm # perform operation
fnmadd.h f12, f27, f29, f8, rne # perform operation
fnmadd.h f12, f27, f29, f8, rtz # perform operation
fnmadd.h f12, f27, f29, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f12, f27, f29, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f12, f27, f29, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f12, f27, f29, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f12, f27, f29, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f12, f27, f29, f8 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3c00 fs3 = 0x3c00)
li x24, 0xefa97e7149ffc07b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f2, 0(x2) # load 0x00003c00 from memory into f2
li x3, 0x492bd0094dee04a5 # load x3 with value 0x492bd0094dee04a5
sw x3, 0(x2) # store 0x492bd0094dee04a5 in memory
flh f12, 0(x2) # load 0x492bd0094dee04a5 from memory into f12
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f18, 0(x2) # load 0x00003c00 from memory into f18
fnmadd.h f24, f2, f12, f18, dyn # perform operation
fnmadd.h f24, f2, f12, f18, rdn # perform operation
fnmadd.h f24, f2, f12, f18, rmm # perform operation
fnmadd.h f24, f2, f12, f18, rne # perform operation
fnmadd.h f24, f2, f12, f18, rtz # perform operation
fnmadd.h f24, f2, f12, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f24, f2, f12, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f24, f2, f12, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f24, f2, f12, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f24, f2, f12, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f24, f2, f12, f18 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3c00 fs3 = 0xbc00)
li x5, 0xcb4c832785e44f8d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f7, 0(x2) # load 0x00003c00 from memory into f7
li x3, 0x78749ec7b2445d75 # load x3 with value 0x78749ec7b2445d75
sw x3, 0(x2) # store 0x78749ec7b2445d75 in memory
flh f8, 0(x2) # load 0x78749ec7b2445d75 from memory into f8
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f19, 0(x2) # load 0x0000bc00 from memory into f19
fnmadd.h f5, f7, f8, f19, dyn # perform operation
fnmadd.h f5, f7, f8, f19, rdn # perform operation
fnmadd.h f5, f7, f8, f19, rmm # perform operation
fnmadd.h f5, f7, f8, f19, rne # perform operation
fnmadd.h f5, f7, f8, f19, rtz # perform operation
fnmadd.h f5, f7, f8, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f5, f7, f8, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f5, f7, f8, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f5, f7, f8, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f5, f7, f8, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f5, f7, f8, f19 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3c00 fs3 = 0x3e00)
li x11, 0x19c27b4ac698b989 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f12, 0(x2) # load 0x00003c00 from memory into f12
li x3, 0xcb9422506eb25b3e # load x3 with value 0xcb9422506eb25b3e
sw x3, 0(x2) # store 0xcb9422506eb25b3e in memory
flh f21, 0(x2) # load 0xcb9422506eb25b3e from memory into f21
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f18, 0(x2) # load 0x00003e00 from memory into f18
fnmadd.h f11, f12, f21, f18, dyn # perform operation
fnmadd.h f11, f12, f21, f18, rdn # perform operation
fnmadd.h f11, f12, f21, f18, rmm # perform operation
fnmadd.h f11, f12, f21, f18, rne # perform operation
fnmadd.h f11, f12, f21, f18, rtz # perform operation
fnmadd.h f11, f12, f21, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f11, f12, f21, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f11, f12, f21, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f11, f12, f21, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f11, f12, f21, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f11, f12, f21, f18 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3c00 fs3 = 0xbe00)
li x16, 0xa2e09a6881e9862a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f9, 0(x2) # load 0x00003c00 from memory into f9
li x3, 0x71b5933db618d9ed # load x3 with value 0x71b5933db618d9ed
sw x3, 0(x2) # store 0x71b5933db618d9ed in memory
flh f13, 0(x2) # load 0x71b5933db618d9ed from memory into f13
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f26, 0(x2) # load 0x0000be00 from memory into f26
fnmadd.h f16, f9, f13, f26, dyn # perform operation
fnmadd.h f16, f9, f13, f26, rdn # perform operation
fnmadd.h f16, f9, f13, f26, rmm # perform operation
fnmadd.h f16, f9, f13, f26, rne # perform operation
fnmadd.h f16, f9, f13, f26, rtz # perform operation
fnmadd.h f16, f9, f13, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f16, f9, f13, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f16, f9, f13, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f16, f9, f13, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f16, f9, f13, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f16, f9, f13, f26 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3c00 fs3 = 0x4000)
li x18, 0xf34c6c62e62da72c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f13, 0(x2) # load 0x00003c00 from memory into f13
li x3, 0x6eeeac29190043e # load x3 with value 0x6eeeac29190043e
sw x3, 0(x2) # store 0x6eeeac29190043e in memory
flh f15, 0(x2) # load 0x6eeeac29190043e from memory into f15
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f28, 0(x2) # load 0x00004000 from memory into f28
fnmadd.h f18, f13, f15, f28, dyn # perform operation
fnmadd.h f18, f13, f15, f28, rdn # perform operation
fnmadd.h f18, f13, f15, f28, rmm # perform operation
fnmadd.h f18, f13, f15, f28, rne # perform operation
fnmadd.h f18, f13, f15, f28, rtz # perform operation
fnmadd.h f18, f13, f15, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f18, f13, f15, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f18, f13, f15, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f18, f13, f15, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f18, f13, f15, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f18, f13, f15, f28 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3c00 fs3 = 0xc000)
li x4, 0xf20636fb9b5eafc4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f9, 0(x2) # load 0x00003c00 from memory into f9
li x3, 0x927f608fb687f27f # load x3 with value 0x927f608fb687f27f
sw x3, 0(x2) # store 0x927f608fb687f27f in memory
flh f30, 0(x2) # load 0x927f608fb687f27f from memory into f30
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f24, 0(x2) # load 0x0000c000 from memory into f24
fnmadd.h f4, f9, f30, f24, dyn # perform operation
fnmadd.h f4, f9, f30, f24, rdn # perform operation
fnmadd.h f4, f9, f30, f24, rmm # perform operation
fnmadd.h f4, f9, f30, f24, rne # perform operation
fnmadd.h f4, f9, f30, f24, rtz # perform operation
fnmadd.h f4, f9, f30, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f4, f9, f30, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f4, f9, f30, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f4, f9, f30, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f4, f9, f30, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f4, f9, f30, f24 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3c00 fs3 = 0x400)
li x8, 0xe25b00cc8e25cd50 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f13, 0(x2) # load 0x00003c00 from memory into f13
li x3, 0xa39044b004be874c # load x3 with value 0xa39044b004be874c
sw x3, 0(x2) # store 0xa39044b004be874c in memory
flh f27, 0(x2) # load 0xa39044b004be874c from memory into f27
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f21, 0(x2) # load 0x00000400 from memory into f21
fnmadd.h f8, f13, f27, f21, dyn # perform operation
fnmadd.h f8, f13, f27, f21, rdn # perform operation
fnmadd.h f8, f13, f27, f21, rmm # perform operation
fnmadd.h f8, f13, f27, f21, rne # perform operation
fnmadd.h f8, f13, f27, f21, rtz # perform operation
fnmadd.h f8, f13, f27, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f8, f13, f27, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f8, f13, f27, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f8, f13, f27, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f8, f13, f27, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f8, f13, f27, f21 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3c00 fs3 = 0x8400)
li x30, 0x88d0b8e5d7a4d8d8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f3, 0(x2) # load 0x00003c00 from memory into f3
li x3, 0x5aed9324ba0f45ae # load x3 with value 0x5aed9324ba0f45ae
sw x3, 0(x2) # store 0x5aed9324ba0f45ae in memory
flh f24, 0(x2) # load 0x5aed9324ba0f45ae from memory into f24
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f9, 0(x2) # load 0x00008400 from memory into f9
fnmadd.h f30, f3, f24, f9, dyn # perform operation
fnmadd.h f30, f3, f24, f9, rdn # perform operation
fnmadd.h f30, f3, f24, f9, rmm # perform operation
fnmadd.h f30, f3, f24, f9, rne # perform operation
fnmadd.h f30, f3, f24, f9, rtz # perform operation
fnmadd.h f30, f3, f24, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f30, f3, f24, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f30, f3, f24, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f30, f3, f24, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f30, f3, f24, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f30, f3, f24, f9 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3c00 fs3 = 0x7bff)
li x2, 0x8021abb309f3b24f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f4, 0(x2) # load 0x00003c00 from memory into f4
li x3, 0xd494bebffdaadf6c # load x3 with value 0xd494bebffdaadf6c
sw x3, 0(x2) # store 0xd494bebffdaadf6c in memory
flh f31, 0(x2) # load 0xd494bebffdaadf6c from memory into f31
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f24, 0(x2) # load 0x00007bff from memory into f24
fnmadd.h f2, f4, f31, f24, dyn # perform operation
fnmadd.h f2, f4, f31, f24, rdn # perform operation
fnmadd.h f2, f4, f31, f24, rmm # perform operation
fnmadd.h f2, f4, f31, f24, rne # perform operation
fnmadd.h f2, f4, f31, f24, rtz # perform operation
fnmadd.h f2, f4, f31, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f2, f4, f31, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f2, f4, f31, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f2, f4, f31, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f2, f4, f31, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f2, f4, f31, f24 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3c00 fs3 = 0xfbff)
li x21, 0x0d24d49e539b8f6b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f12, 0(x2) # load 0x00003c00 from memory into f12
li x3, 0x1f4e7b1798ade910 # load x3 with value 0x1f4e7b1798ade910
sw x3, 0(x2) # store 0x1f4e7b1798ade910 in memory
flh f29, 0(x2) # load 0x1f4e7b1798ade910 from memory into f29
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f27, 0(x2) # load 0x0000fbff from memory into f27
fnmadd.h f21, f12, f29, f27, dyn # perform operation
fnmadd.h f21, f12, f29, f27, rdn # perform operation
fnmadd.h f21, f12, f29, f27, rmm # perform operation
fnmadd.h f21, f12, f29, f27, rne # perform operation
fnmadd.h f21, f12, f29, f27, rtz # perform operation
fnmadd.h f21, f12, f29, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f21, f12, f29, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f21, f12, f29, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f21, f12, f29, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f21, f12, f29, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f21, f12, f29, f27 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3c00 fs3 = 0x3ff)
li x4, 0x56e176dacaa02bf5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f18, 0(x2) # load 0x00003c00 from memory into f18
li x3, 0x9e04c9d755927fc7 # load x3 with value 0x9e04c9d755927fc7
sw x3, 0(x2) # store 0x9e04c9d755927fc7 in memory
flh f30, 0(x2) # load 0x9e04c9d755927fc7 from memory into f30
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f15, 0(x2) # load 0x000003ff from memory into f15
fnmadd.h f4, f18, f30, f15, dyn # perform operation
fnmadd.h f4, f18, f30, f15, rdn # perform operation
fnmadd.h f4, f18, f30, f15, rmm # perform operation
fnmadd.h f4, f18, f30, f15, rne # perform operation
fnmadd.h f4, f18, f30, f15, rtz # perform operation
fnmadd.h f4, f18, f30, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f4, f18, f30, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f4, f18, f30, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f4, f18, f30, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f4, f18, f30, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f4, f18, f30, f15 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3c00 fs3 = 0x83ff)
li x27, 0x00ebb81820094274 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f12, 0(x2) # load 0x00003c00 from memory into f12
li x3, 0x663449f4b81ab11e # load x3 with value 0x663449f4b81ab11e
sw x3, 0(x2) # store 0x663449f4b81ab11e in memory
flh f4, 0(x2) # load 0x663449f4b81ab11e from memory into f4
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f21, 0(x2) # load 0x000083ff from memory into f21
fnmadd.h f27, f12, f4, f21, dyn # perform operation
fnmadd.h f27, f12, f4, f21, rdn # perform operation
fnmadd.h f27, f12, f4, f21, rmm # perform operation
fnmadd.h f27, f12, f4, f21, rne # perform operation
fnmadd.h f27, f12, f4, f21, rtz # perform operation
fnmadd.h f27, f12, f4, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f27, f12, f4, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f27, f12, f4, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f27, f12, f4, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f27, f12, f4, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f27, f12, f4, f21 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3c00 fs3 = 0x200)
li x2, 0x46955f0866d3f25f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f4, 0(x2) # load 0x00003c00 from memory into f4
li x3, 0xf00df544bfa2ae6d # load x3 with value 0xf00df544bfa2ae6d
sw x3, 0(x2) # store 0xf00df544bfa2ae6d in memory
flh f15, 0(x2) # load 0xf00df544bfa2ae6d from memory into f15
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f23, 0(x2) # load 0x00000200 from memory into f23
fnmadd.h f2, f4, f15, f23, dyn # perform operation
fnmadd.h f2, f4, f15, f23, rdn # perform operation
fnmadd.h f2, f4, f15, f23, rmm # perform operation
fnmadd.h f2, f4, f15, f23, rne # perform operation
fnmadd.h f2, f4, f15, f23, rtz # perform operation
fnmadd.h f2, f4, f15, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f2, f4, f15, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f2, f4, f15, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f2, f4, f15, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f2, f4, f15, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f2, f4, f15, f23 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3c00 fs3 = 0x8200)
li x30, 0x0eb32f1b15b64c13 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f18, 0(x2) # load 0x00003c00 from memory into f18
li x3, 0xcbd20ee6a8ac210c # load x3 with value 0xcbd20ee6a8ac210c
sw x3, 0(x2) # store 0xcbd20ee6a8ac210c in memory
flh f15, 0(x2) # load 0xcbd20ee6a8ac210c from memory into f15
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f22, 0(x2) # load 0x00008200 from memory into f22
fnmadd.h f30, f18, f15, f22, dyn # perform operation
fnmadd.h f30, f18, f15, f22, rdn # perform operation
fnmadd.h f30, f18, f15, f22, rmm # perform operation
fnmadd.h f30, f18, f15, f22, rne # perform operation
fnmadd.h f30, f18, f15, f22, rtz # perform operation
fnmadd.h f30, f18, f15, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f30, f18, f15, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f30, f18, f15, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f30, f18, f15, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f30, f18, f15, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f30, f18, f15, f22 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3c00 fs3 = 0x1)
li x15, 0x46ec1a9047327f9b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f23, 0(x2) # load 0x00003c00 from memory into f23
li x3, 0x272c57e911ea96c0 # load x3 with value 0x272c57e911ea96c0
sw x3, 0(x2) # store 0x272c57e911ea96c0 in memory
flh f8, 0(x2) # load 0x272c57e911ea96c0 from memory into f8
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f11, 0(x2) # load 0x00000001 from memory into f11
fnmadd.h f15, f23, f8, f11, dyn # perform operation
fnmadd.h f15, f23, f8, f11, rdn # perform operation
fnmadd.h f15, f23, f8, f11, rmm # perform operation
fnmadd.h f15, f23, f8, f11, rne # perform operation
fnmadd.h f15, f23, f8, f11, rtz # perform operation
fnmadd.h f15, f23, f8, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f15, f23, f8, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f15, f23, f8, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f15, f23, f8, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f15, f23, f8, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f15, f23, f8, f11 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3c00 fs3 = 0x8001)
li x5, 0x776be4263a128cd1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f6, 0(x2) # load 0x00003c00 from memory into f6
li x3, 0xb1aae2bc90d95c9d # load x3 with value 0xb1aae2bc90d95c9d
sw x3, 0(x2) # store 0xb1aae2bc90d95c9d in memory
flh f30, 0(x2) # load 0xb1aae2bc90d95c9d from memory into f30
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f8, 0(x2) # load 0x00008001 from memory into f8
fnmadd.h f5, f6, f30, f8, dyn # perform operation
fnmadd.h f5, f6, f30, f8, rdn # perform operation
fnmadd.h f5, f6, f30, f8, rmm # perform operation
fnmadd.h f5, f6, f30, f8, rne # perform operation
fnmadd.h f5, f6, f30, f8, rtz # perform operation
fnmadd.h f5, f6, f30, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f5, f6, f30, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f5, f6, f30, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f5, f6, f30, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f5, f6, f30, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f5, f6, f30, f8 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3c00 fs3 = 0x7c00)
li x4, 0x9ee3ee73276229c4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f11, 0(x2) # load 0x00003c00 from memory into f11
li x3, 0xa633bb3c32ac0060 # load x3 with value 0xa633bb3c32ac0060
sw x3, 0(x2) # store 0xa633bb3c32ac0060 in memory
flh f21, 0(x2) # load 0xa633bb3c32ac0060 from memory into f21
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f8, 0(x2) # load 0x00007c00 from memory into f8
fnmadd.h f4, f11, f21, f8, dyn # perform operation
fnmadd.h f4, f11, f21, f8, rdn # perform operation
fnmadd.h f4, f11, f21, f8, rmm # perform operation
fnmadd.h f4, f11, f21, f8, rne # perform operation
fnmadd.h f4, f11, f21, f8, rtz # perform operation
fnmadd.h f4, f11, f21, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f4, f11, f21, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f4, f11, f21, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f4, f11, f21, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f4, f11, f21, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f4, f11, f21, f8 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3c00 fs3 = 0xfc00)
li x3, 0x27f7e03d659aa1b1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f2, 0(x2) # load 0x00003c00 from memory into f2
li x3, 0x914affc64341e43 # load x3 with value 0x914affc64341e43
sw x3, 0(x2) # store 0x914affc64341e43 in memory
flh f19, 0(x2) # load 0x914affc64341e43 from memory into f19
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f15, 0(x2) # load 0x0000fc00 from memory into f15
fnmadd.h f3, f2, f19, f15, dyn # perform operation
fnmadd.h f3, f2, f19, f15, rdn # perform operation
fnmadd.h f3, f2, f19, f15, rmm # perform operation
fnmadd.h f3, f2, f19, f15, rne # perform operation
fnmadd.h f3, f2, f19, f15, rtz # perform operation
fnmadd.h f3, f2, f19, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f3, f2, f19, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f3, f2, f19, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f3, f2, f19, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f3, f2, f19, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f3, f2, f19, f15 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3c00 fs3 = 0x7e00)
li x11, 0xb0e10705f3841ba1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f14, 0(x2) # load 0x00003c00 from memory into f14
li x3, 0xea42dda643f47785 # load x3 with value 0xea42dda643f47785
sw x3, 0(x2) # store 0xea42dda643f47785 in memory
flh f1, 0(x2) # load 0xea42dda643f47785 from memory into f1
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f26, 0(x2) # load 0x00007e00 from memory into f26
fnmadd.h f11, f14, f1, f26, dyn # perform operation
fnmadd.h f11, f14, f1, f26, rdn # perform operation
fnmadd.h f11, f14, f1, f26, rmm # perform operation
fnmadd.h f11, f14, f1, f26, rne # perform operation
fnmadd.h f11, f14, f1, f26, rtz # perform operation
fnmadd.h f11, f14, f1, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f11, f14, f1, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f11, f14, f1, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f11, f14, f1, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f11, f14, f1, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f11, f14, f1, f26 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3c00 fs3 = 0x7fff)
li x10, 0x87f7774abb4d25ee # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f6, 0(x2) # load 0x00003c00 from memory into f6
li x3, 0x3b0d3fbc3b54701f # load x3 with value 0x3b0d3fbc3b54701f
sw x3, 0(x2) # store 0x3b0d3fbc3b54701f in memory
flh f2, 0(x2) # load 0x3b0d3fbc3b54701f from memory into f2
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f21, 0(x2) # load 0x00007fff from memory into f21
fnmadd.h f10, f6, f2, f21, dyn # perform operation
fnmadd.h f10, f6, f2, f21, rdn # perform operation
fnmadd.h f10, f6, f2, f21, rmm # perform operation
fnmadd.h f10, f6, f2, f21, rne # perform operation
fnmadd.h f10, f6, f2, f21, rtz # perform operation
fnmadd.h f10, f6, f2, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f10, f6, f2, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f10, f6, f2, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f10, f6, f2, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f10, f6, f2, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f10, f6, f2, f21 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3c00 fs3 = 0x7c01)
li x10, 0x3666e8f9a8cf48ce # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f14, 0(x2) # load 0x00003c00 from memory into f14
li x3, 0xdd72ed4373752ab1 # load x3 with value 0xdd72ed4373752ab1
sw x3, 0(x2) # store 0xdd72ed4373752ab1 in memory
flh f21, 0(x2) # load 0xdd72ed4373752ab1 from memory into f21
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f2, 0(x2) # load 0x00007c01 from memory into f2
fnmadd.h f10, f14, f21, f2, dyn # perform operation
fnmadd.h f10, f14, f21, f2, rdn # perform operation
fnmadd.h f10, f14, f21, f2, rmm # perform operation
fnmadd.h f10, f14, f21, f2, rne # perform operation
fnmadd.h f10, f14, f21, f2, rtz # perform operation
fnmadd.h f10, f14, f21, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f10, f14, f21, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f10, f14, f21, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f10, f14, f21, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f10, f14, f21, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f10, f14, f21, f2 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3c00 fs3 = 0x7dff)
li x5, 0xb8f84b68e528649d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f22, 0(x2) # load 0x00003c00 from memory into f22
li x3, 0x946d41c6b0e2bff3 # load x3 with value 0x946d41c6b0e2bff3
sw x3, 0(x2) # store 0x946d41c6b0e2bff3 in memory
flh f30, 0(x2) # load 0x946d41c6b0e2bff3 from memory into f30
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f26, 0(x2) # load 0x00007dff from memory into f26
fnmadd.h f5, f22, f30, f26, dyn # perform operation
fnmadd.h f5, f22, f30, f26, rdn # perform operation
fnmadd.h f5, f22, f30, f26, rmm # perform operation
fnmadd.h f5, f22, f30, f26, rne # perform operation
fnmadd.h f5, f22, f30, f26, rtz # perform operation
fnmadd.h f5, f22, f30, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f5, f22, f30, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f5, f22, f30, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f5, f22, f30, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f5, f22, f30, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f5, f22, f30, f26 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3c00 fs3 = 0x58b4)
li x23, 0x17fc0ee41320fa50 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f30, 0(x2) # load 0x00003c00 from memory into f30
li x3, 0x4530291126210fcb # load x3 with value 0x4530291126210fcb
sw x3, 0(x2) # store 0x4530291126210fcb in memory
flh f12, 0(x2) # load 0x4530291126210fcb from memory into f12
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f20, 0(x2) # load 0x000058b4 from memory into f20
fnmadd.h f23, f30, f12, f20, dyn # perform operation
fnmadd.h f23, f30, f12, f20, rdn # perform operation
fnmadd.h f23, f30, f12, f20, rmm # perform operation
fnmadd.h f23, f30, f12, f20, rne # perform operation
fnmadd.h f23, f30, f12, f20, rtz # perform operation
fnmadd.h f23, f30, f12, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f23, f30, f12, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f23, f30, f12, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f23, f30, f12, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f23, f30, f12, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f23, f30, f12, f20 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3c00 fs3 = 0xc93a)
li x20, 0x3bf6e1ed5c17abee # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f27, 0(x2) # load 0x00003c00 from memory into f27
li x3, 0x98ae67e9260b423e # load x3 with value 0x98ae67e9260b423e
sw x3, 0(x2) # store 0x98ae67e9260b423e in memory
flh f13, 0(x2) # load 0x98ae67e9260b423e from memory into f13
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f22, 0(x2) # load 0x0000c93a from memory into f22
fnmadd.h f20, f27, f13, f22, dyn # perform operation
fnmadd.h f20, f27, f13, f22, rdn # perform operation
fnmadd.h f20, f27, f13, f22, rmm # perform operation
fnmadd.h f20, f27, f13, f22, rne # perform operation
fnmadd.h f20, f27, f13, f22, rtz # perform operation
fnmadd.h f20, f27, f13, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f20, f27, f13, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f20, f27, f13, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f20, f27, f13, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f20, f27, f13, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f20, f27, f13, f22 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbc00 fs3 = 0x0)
li x14, 0xd0529e58fe67b3e4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f20, 0(x2) # load 0x0000bc00 from memory into f20
li x3, 0x57c8c440d75f17fa # load x3 with value 0x57c8c440d75f17fa
sw x3, 0(x2) # store 0x57c8c440d75f17fa in memory
flh f31, 0(x2) # load 0x57c8c440d75f17fa from memory into f31
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f30, 0(x2) # load 0x00000000 from memory into f30
fnmadd.h f14, f20, f31, f30, dyn # perform operation
fnmadd.h f14, f20, f31, f30, rdn # perform operation
fnmadd.h f14, f20, f31, f30, rmm # perform operation
fnmadd.h f14, f20, f31, f30, rne # perform operation
fnmadd.h f14, f20, f31, f30, rtz # perform operation
fnmadd.h f14, f20, f31, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f14, f20, f31, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f14, f20, f31, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f14, f20, f31, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f14, f20, f31, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f14, f20, f31, f30 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbc00 fs3 = 0x8000)
li x5, 0x9b76c45e8b4befae # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f4, 0(x2) # load 0x0000bc00 from memory into f4
li x3, 0x837af361acfc9289 # load x3 with value 0x837af361acfc9289
sw x3, 0(x2) # store 0x837af361acfc9289 in memory
flh f1, 0(x2) # load 0x837af361acfc9289 from memory into f1
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f29, 0(x2) # load 0x00008000 from memory into f29
fnmadd.h f5, f4, f1, f29, dyn # perform operation
fnmadd.h f5, f4, f1, f29, rdn # perform operation
fnmadd.h f5, f4, f1, f29, rmm # perform operation
fnmadd.h f5, f4, f1, f29, rne # perform operation
fnmadd.h f5, f4, f1, f29, rtz # perform operation
fnmadd.h f5, f4, f1, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f5, f4, f1, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f5, f4, f1, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f5, f4, f1, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f5, f4, f1, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f5, f4, f1, f29 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbc00 fs3 = 0x3c00)
li x12, 0x3bc2ccaa27aaa6b9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f23, 0(x2) # load 0x0000bc00 from memory into f23
li x3, 0xde02fe536b557f8a # load x3 with value 0xde02fe536b557f8a
sw x3, 0(x2) # store 0xde02fe536b557f8a in memory
flh f1, 0(x2) # load 0xde02fe536b557f8a from memory into f1
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f2, 0(x2) # load 0x00003c00 from memory into f2
fnmadd.h f12, f23, f1, f2, dyn # perform operation
fnmadd.h f12, f23, f1, f2, rdn # perform operation
fnmadd.h f12, f23, f1, f2, rmm # perform operation
fnmadd.h f12, f23, f1, f2, rne # perform operation
fnmadd.h f12, f23, f1, f2, rtz # perform operation
fnmadd.h f12, f23, f1, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f12, f23, f1, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f12, f23, f1, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f12, f23, f1, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f12, f23, f1, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f12, f23, f1, f2 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbc00 fs3 = 0xbc00)
li x1, 0xde83cdea4575dfcd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f21, 0(x2) # load 0x0000bc00 from memory into f21
li x3, 0x7fe69afd0fe85517 # load x3 with value 0x7fe69afd0fe85517
sw x3, 0(x2) # store 0x7fe69afd0fe85517 in memory
flh f6, 0(x2) # load 0x7fe69afd0fe85517 from memory into f6
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f11, 0(x2) # load 0x0000bc00 from memory into f11
fnmadd.h f1, f21, f6, f11, dyn # perform operation
fnmadd.h f1, f21, f6, f11, rdn # perform operation
fnmadd.h f1, f21, f6, f11, rmm # perform operation
fnmadd.h f1, f21, f6, f11, rne # perform operation
fnmadd.h f1, f21, f6, f11, rtz # perform operation
fnmadd.h f1, f21, f6, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f1, f21, f6, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f1, f21, f6, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f1, f21, f6, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f1, f21, f6, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f1, f21, f6, f11 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbc00 fs3 = 0x3e00)
li x26, 0xe0180cfb4d006e71 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f5, 0(x2) # load 0x0000bc00 from memory into f5
li x3, 0x9a200c90b5e191c2 # load x3 with value 0x9a200c90b5e191c2
sw x3, 0(x2) # store 0x9a200c90b5e191c2 in memory
flh f22, 0(x2) # load 0x9a200c90b5e191c2 from memory into f22
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f27, 0(x2) # load 0x00003e00 from memory into f27
fnmadd.h f26, f5, f22, f27, dyn # perform operation
fnmadd.h f26, f5, f22, f27, rdn # perform operation
fnmadd.h f26, f5, f22, f27, rmm # perform operation
fnmadd.h f26, f5, f22, f27, rne # perform operation
fnmadd.h f26, f5, f22, f27, rtz # perform operation
fnmadd.h f26, f5, f22, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f26, f5, f22, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f26, f5, f22, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f26, f5, f22, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f26, f5, f22, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f26, f5, f22, f27 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbc00 fs3 = 0xbe00)
li x9, 0x74f269293f48f377 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f14, 0(x2) # load 0x0000bc00 from memory into f14
li x3, 0x400fb9e9a9549b0a # load x3 with value 0x400fb9e9a9549b0a
sw x3, 0(x2) # store 0x400fb9e9a9549b0a in memory
flh f11, 0(x2) # load 0x400fb9e9a9549b0a from memory into f11
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f27, 0(x2) # load 0x0000be00 from memory into f27
fnmadd.h f9, f14, f11, f27, dyn # perform operation
fnmadd.h f9, f14, f11, f27, rdn # perform operation
fnmadd.h f9, f14, f11, f27, rmm # perform operation
fnmadd.h f9, f14, f11, f27, rne # perform operation
fnmadd.h f9, f14, f11, f27, rtz # perform operation
fnmadd.h f9, f14, f11, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f9, f14, f11, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f9, f14, f11, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f9, f14, f11, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f9, f14, f11, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f9, f14, f11, f27 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbc00 fs3 = 0x4000)
li x19, 0xd6e35d5916350296 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f14, 0(x2) # load 0x0000bc00 from memory into f14
li x3, 0x60d53307b9eb41e3 # load x3 with value 0x60d53307b9eb41e3
sw x3, 0(x2) # store 0x60d53307b9eb41e3 in memory
flh f5, 0(x2) # load 0x60d53307b9eb41e3 from memory into f5
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f20, 0(x2) # load 0x00004000 from memory into f20
fnmadd.h f19, f14, f5, f20, dyn # perform operation
fnmadd.h f19, f14, f5, f20, rdn # perform operation
fnmadd.h f19, f14, f5, f20, rmm # perform operation
fnmadd.h f19, f14, f5, f20, rne # perform operation
fnmadd.h f19, f14, f5, f20, rtz # perform operation
fnmadd.h f19, f14, f5, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f19, f14, f5, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f19, f14, f5, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f19, f14, f5, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f19, f14, f5, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f19, f14, f5, f20 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbc00 fs3 = 0xc000)
li x3, 0x6fea25bbb88d477a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f11, 0(x2) # load 0x0000bc00 from memory into f11
li x3, 0x405e8a6733e854b4 # load x3 with value 0x405e8a6733e854b4
sw x3, 0(x2) # store 0x405e8a6733e854b4 in memory
flh f23, 0(x2) # load 0x405e8a6733e854b4 from memory into f23
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f4, 0(x2) # load 0x0000c000 from memory into f4
fnmadd.h f3, f11, f23, f4, dyn # perform operation
fnmadd.h f3, f11, f23, f4, rdn # perform operation
fnmadd.h f3, f11, f23, f4, rmm # perform operation
fnmadd.h f3, f11, f23, f4, rne # perform operation
fnmadd.h f3, f11, f23, f4, rtz # perform operation
fnmadd.h f3, f11, f23, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f3, f11, f23, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f3, f11, f23, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f3, f11, f23, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f3, f11, f23, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f3, f11, f23, f4 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbc00 fs3 = 0x400)
li x3, 0xeef095b798535618 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f14, 0(x2) # load 0x0000bc00 from memory into f14
li x3, 0x12a21e38d10c8ca2 # load x3 with value 0x12a21e38d10c8ca2
sw x3, 0(x2) # store 0x12a21e38d10c8ca2 in memory
flh f6, 0(x2) # load 0x12a21e38d10c8ca2 from memory into f6
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f30, 0(x2) # load 0x00000400 from memory into f30
fnmadd.h f3, f14, f6, f30, dyn # perform operation
fnmadd.h f3, f14, f6, f30, rdn # perform operation
fnmadd.h f3, f14, f6, f30, rmm # perform operation
fnmadd.h f3, f14, f6, f30, rne # perform operation
fnmadd.h f3, f14, f6, f30, rtz # perform operation
fnmadd.h f3, f14, f6, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f3, f14, f6, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f3, f14, f6, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f3, f14, f6, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f3, f14, f6, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f3, f14, f6, f30 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbc00 fs3 = 0x8400)
li x6, 0x4dbd07d90e5056e5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f16, 0(x2) # load 0x0000bc00 from memory into f16
li x3, 0x8957ccc5be8570fd # load x3 with value 0x8957ccc5be8570fd
sw x3, 0(x2) # store 0x8957ccc5be8570fd in memory
flh f5, 0(x2) # load 0x8957ccc5be8570fd from memory into f5
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f29, 0(x2) # load 0x00008400 from memory into f29
fnmadd.h f6, f16, f5, f29, dyn # perform operation
fnmadd.h f6, f16, f5, f29, rdn # perform operation
fnmadd.h f6, f16, f5, f29, rmm # perform operation
fnmadd.h f6, f16, f5, f29, rne # perform operation
fnmadd.h f6, f16, f5, f29, rtz # perform operation
fnmadd.h f6, f16, f5, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f6, f16, f5, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f6, f16, f5, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f6, f16, f5, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f6, f16, f5, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f6, f16, f5, f29 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbc00 fs3 = 0x7bff)
li x2, 0x5ce09a5816caceac # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f4, 0(x2) # load 0x0000bc00 from memory into f4
li x3, 0xec3b10cc5ed65349 # load x3 with value 0xec3b10cc5ed65349
sw x3, 0(x2) # store 0xec3b10cc5ed65349 in memory
flh f29, 0(x2) # load 0xec3b10cc5ed65349 from memory into f29
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f21, 0(x2) # load 0x00007bff from memory into f21
fnmadd.h f2, f4, f29, f21, dyn # perform operation
fnmadd.h f2, f4, f29, f21, rdn # perform operation
fnmadd.h f2, f4, f29, f21, rmm # perform operation
fnmadd.h f2, f4, f29, f21, rne # perform operation
fnmadd.h f2, f4, f29, f21, rtz # perform operation
fnmadd.h f2, f4, f29, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f2, f4, f29, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f2, f4, f29, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f2, f4, f29, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f2, f4, f29, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f2, f4, f29, f21 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbc00 fs3 = 0xfbff)
li x1, 0x77baec9e60e26151 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f11, 0(x2) # load 0x0000bc00 from memory into f11
li x3, 0x4d5793ddfafc9728 # load x3 with value 0x4d5793ddfafc9728
sw x3, 0(x2) # store 0x4d5793ddfafc9728 in memory
flh f10, 0(x2) # load 0x4d5793ddfafc9728 from memory into f10
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f6, 0(x2) # load 0x0000fbff from memory into f6
fnmadd.h f1, f11, f10, f6, dyn # perform operation
fnmadd.h f1, f11, f10, f6, rdn # perform operation
fnmadd.h f1, f11, f10, f6, rmm # perform operation
fnmadd.h f1, f11, f10, f6, rne # perform operation
fnmadd.h f1, f11, f10, f6, rtz # perform operation
fnmadd.h f1, f11, f10, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f1, f11, f10, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f1, f11, f10, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f1, f11, f10, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f1, f11, f10, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f1, f11, f10, f6 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbc00 fs3 = 0x3ff)
li x5, 0x04c3766f9514b4a0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f11, 0(x2) # load 0x0000bc00 from memory into f11
li x3, 0x1b66f7f82b260638 # load x3 with value 0x1b66f7f82b260638
sw x3, 0(x2) # store 0x1b66f7f82b260638 in memory
flh f2, 0(x2) # load 0x1b66f7f82b260638 from memory into f2
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f6, 0(x2) # load 0x000003ff from memory into f6
fnmadd.h f5, f11, f2, f6, dyn # perform operation
fnmadd.h f5, f11, f2, f6, rdn # perform operation
fnmadd.h f5, f11, f2, f6, rmm # perform operation
fnmadd.h f5, f11, f2, f6, rne # perform operation
fnmadd.h f5, f11, f2, f6, rtz # perform operation
fnmadd.h f5, f11, f2, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f5, f11, f2, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f5, f11, f2, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f5, f11, f2, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f5, f11, f2, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f5, f11, f2, f6 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbc00 fs3 = 0x83ff)
li x2, 0x11ff95d0da2e2c34 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f28, 0(x2) # load 0x0000bc00 from memory into f28
li x3, 0x959e8884c117232c # load x3 with value 0x959e8884c117232c
sw x3, 0(x2) # store 0x959e8884c117232c in memory
flh f8, 0(x2) # load 0x959e8884c117232c from memory into f8
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f26, 0(x2) # load 0x000083ff from memory into f26
fnmadd.h f2, f28, f8, f26, dyn # perform operation
fnmadd.h f2, f28, f8, f26, rdn # perform operation
fnmadd.h f2, f28, f8, f26, rmm # perform operation
fnmadd.h f2, f28, f8, f26, rne # perform operation
fnmadd.h f2, f28, f8, f26, rtz # perform operation
fnmadd.h f2, f28, f8, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f2, f28, f8, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f2, f28, f8, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f2, f28, f8, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f2, f28, f8, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f2, f28, f8, f26 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbc00 fs3 = 0x200)
li x7, 0xd9a8d00e16f8dfe0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f18, 0(x2) # load 0x0000bc00 from memory into f18
li x3, 0xa41409036bf6fe9 # load x3 with value 0xa41409036bf6fe9
sw x3, 0(x2) # store 0xa41409036bf6fe9 in memory
flh f10, 0(x2) # load 0xa41409036bf6fe9 from memory into f10
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f23, 0(x2) # load 0x00000200 from memory into f23
fnmadd.h f7, f18, f10, f23, dyn # perform operation
fnmadd.h f7, f18, f10, f23, rdn # perform operation
fnmadd.h f7, f18, f10, f23, rmm # perform operation
fnmadd.h f7, f18, f10, f23, rne # perform operation
fnmadd.h f7, f18, f10, f23, rtz # perform operation
fnmadd.h f7, f18, f10, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f7, f18, f10, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f7, f18, f10, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f7, f18, f10, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f7, f18, f10, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f7, f18, f10, f23 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbc00 fs3 = 0x8200)
li x27, 0x8d70f9393362d9bc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f26, 0(x2) # load 0x0000bc00 from memory into f26
li x3, 0xcb32c6ca2bf6fb31 # load x3 with value 0xcb32c6ca2bf6fb31
sw x3, 0(x2) # store 0xcb32c6ca2bf6fb31 in memory
flh f29, 0(x2) # load 0xcb32c6ca2bf6fb31 from memory into f29
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f28, 0(x2) # load 0x00008200 from memory into f28
fnmadd.h f27, f26, f29, f28, dyn # perform operation
fnmadd.h f27, f26, f29, f28, rdn # perform operation
fnmadd.h f27, f26, f29, f28, rmm # perform operation
fnmadd.h f27, f26, f29, f28, rne # perform operation
fnmadd.h f27, f26, f29, f28, rtz # perform operation
fnmadd.h f27, f26, f29, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f27, f26, f29, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f27, f26, f29, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f27, f26, f29, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f27, f26, f29, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f27, f26, f29, f28 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbc00 fs3 = 0x1)
li x9, 0x28beb5dac14370cb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f6, 0(x2) # load 0x0000bc00 from memory into f6
li x3, 0x39f05bd3a9609cdf # load x3 with value 0x39f05bd3a9609cdf
sw x3, 0(x2) # store 0x39f05bd3a9609cdf in memory
flh f4, 0(x2) # load 0x39f05bd3a9609cdf from memory into f4
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f12, 0(x2) # load 0x00000001 from memory into f12
fnmadd.h f9, f6, f4, f12, dyn # perform operation
fnmadd.h f9, f6, f4, f12, rdn # perform operation
fnmadd.h f9, f6, f4, f12, rmm # perform operation
fnmadd.h f9, f6, f4, f12, rne # perform operation
fnmadd.h f9, f6, f4, f12, rtz # perform operation
fnmadd.h f9, f6, f4, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f9, f6, f4, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f9, f6, f4, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f9, f6, f4, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f9, f6, f4, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f9, f6, f4, f12 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbc00 fs3 = 0x8001)
li x11, 0x8fe8945feaf2f008 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f2, 0(x2) # load 0x0000bc00 from memory into f2
li x3, 0x9ae2c1e38ef4602b # load x3 with value 0x9ae2c1e38ef4602b
sw x3, 0(x2) # store 0x9ae2c1e38ef4602b in memory
flh f23, 0(x2) # load 0x9ae2c1e38ef4602b from memory into f23
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f4, 0(x2) # load 0x00008001 from memory into f4
fnmadd.h f11, f2, f23, f4, dyn # perform operation
fnmadd.h f11, f2, f23, f4, rdn # perform operation
fnmadd.h f11, f2, f23, f4, rmm # perform operation
fnmadd.h f11, f2, f23, f4, rne # perform operation
fnmadd.h f11, f2, f23, f4, rtz # perform operation
fnmadd.h f11, f2, f23, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f11, f2, f23, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f11, f2, f23, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f11, f2, f23, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f11, f2, f23, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f11, f2, f23, f4 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbc00 fs3 = 0x7c00)
li x22, 0x41ff8ed149796ce2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f1, 0(x2) # load 0x0000bc00 from memory into f1
li x3, 0x3f4a7a72738e421e # load x3 with value 0x3f4a7a72738e421e
sw x3, 0(x2) # store 0x3f4a7a72738e421e in memory
flh f11, 0(x2) # load 0x3f4a7a72738e421e from memory into f11
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f24, 0(x2) # load 0x00007c00 from memory into f24
fnmadd.h f22, f1, f11, f24, dyn # perform operation
fnmadd.h f22, f1, f11, f24, rdn # perform operation
fnmadd.h f22, f1, f11, f24, rmm # perform operation
fnmadd.h f22, f1, f11, f24, rne # perform operation
fnmadd.h f22, f1, f11, f24, rtz # perform operation
fnmadd.h f22, f1, f11, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f22, f1, f11, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f22, f1, f11, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f22, f1, f11, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f22, f1, f11, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f22, f1, f11, f24 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbc00 fs3 = 0xfc00)
li x17, 0x18fade7a22c0d523 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f12, 0(x2) # load 0x0000bc00 from memory into f12
li x3, 0xde33ec031323bd64 # load x3 with value 0xde33ec031323bd64
sw x3, 0(x2) # store 0xde33ec031323bd64 in memory
flh f7, 0(x2) # load 0xde33ec031323bd64 from memory into f7
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f18, 0(x2) # load 0x0000fc00 from memory into f18
fnmadd.h f17, f12, f7, f18, dyn # perform operation
fnmadd.h f17, f12, f7, f18, rdn # perform operation
fnmadd.h f17, f12, f7, f18, rmm # perform operation
fnmadd.h f17, f12, f7, f18, rne # perform operation
fnmadd.h f17, f12, f7, f18, rtz # perform operation
fnmadd.h f17, f12, f7, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f17, f12, f7, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f17, f12, f7, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f17, f12, f7, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f17, f12, f7, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f17, f12, f7, f18 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbc00 fs3 = 0x7e00)
li x25, 0xf2525f68a653f275 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f8, 0(x2) # load 0x0000bc00 from memory into f8
li x3, 0x9e5f95aee17bc6ba # load x3 with value 0x9e5f95aee17bc6ba
sw x3, 0(x2) # store 0x9e5f95aee17bc6ba in memory
flh f24, 0(x2) # load 0x9e5f95aee17bc6ba from memory into f24
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f13, 0(x2) # load 0x00007e00 from memory into f13
fnmadd.h f25, f8, f24, f13, dyn # perform operation
fnmadd.h f25, f8, f24, f13, rdn # perform operation
fnmadd.h f25, f8, f24, f13, rmm # perform operation
fnmadd.h f25, f8, f24, f13, rne # perform operation
fnmadd.h f25, f8, f24, f13, rtz # perform operation
fnmadd.h f25, f8, f24, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f25, f8, f24, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f25, f8, f24, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f25, f8, f24, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f25, f8, f24, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f25, f8, f24, f13 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbc00 fs3 = 0x7fff)
li x10, 0x0c16cfef65ddfeba # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f3, 0(x2) # load 0x0000bc00 from memory into f3
li x3, 0xa78521fd45c72794 # load x3 with value 0xa78521fd45c72794
sw x3, 0(x2) # store 0xa78521fd45c72794 in memory
flh f16, 0(x2) # load 0xa78521fd45c72794 from memory into f16
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f2, 0(x2) # load 0x00007fff from memory into f2
fnmadd.h f10, f3, f16, f2, dyn # perform operation
fnmadd.h f10, f3, f16, f2, rdn # perform operation
fnmadd.h f10, f3, f16, f2, rmm # perform operation
fnmadd.h f10, f3, f16, f2, rne # perform operation
fnmadd.h f10, f3, f16, f2, rtz # perform operation
fnmadd.h f10, f3, f16, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f10, f3, f16, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f10, f3, f16, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f10, f3, f16, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f10, f3, f16, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f10, f3, f16, f2 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbc00 fs3 = 0x7c01)
li x27, 0x88c7fdf866e851db # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f7, 0(x2) # load 0x0000bc00 from memory into f7
li x3, 0xf9ab6ad40ed32a92 # load x3 with value 0xf9ab6ad40ed32a92
sw x3, 0(x2) # store 0xf9ab6ad40ed32a92 in memory
flh f14, 0(x2) # load 0xf9ab6ad40ed32a92 from memory into f14
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f30, 0(x2) # load 0x00007c01 from memory into f30
fnmadd.h f27, f7, f14, f30, dyn # perform operation
fnmadd.h f27, f7, f14, f30, rdn # perform operation
fnmadd.h f27, f7, f14, f30, rmm # perform operation
fnmadd.h f27, f7, f14, f30, rne # perform operation
fnmadd.h f27, f7, f14, f30, rtz # perform operation
fnmadd.h f27, f7, f14, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f27, f7, f14, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f27, f7, f14, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f27, f7, f14, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f27, f7, f14, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f27, f7, f14, f30 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbc00 fs3 = 0x7dff)
li x15, 0x38b514df0c8ed8e2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f23, 0(x2) # load 0x0000bc00 from memory into f23
li x3, 0x192f7f3ac2852f0a # load x3 with value 0x192f7f3ac2852f0a
sw x3, 0(x2) # store 0x192f7f3ac2852f0a in memory
flh f9, 0(x2) # load 0x192f7f3ac2852f0a from memory into f9
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f8, 0(x2) # load 0x00007dff from memory into f8
fnmadd.h f15, f23, f9, f8, dyn # perform operation
fnmadd.h f15, f23, f9, f8, rdn # perform operation
fnmadd.h f15, f23, f9, f8, rmm # perform operation
fnmadd.h f15, f23, f9, f8, rne # perform operation
fnmadd.h f15, f23, f9, f8, rtz # perform operation
fnmadd.h f15, f23, f9, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f15, f23, f9, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f15, f23, f9, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f15, f23, f9, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f15, f23, f9, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f15, f23, f9, f8 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbc00 fs3 = 0x58b4)
li x5, 0x007c1b82f1e66ece # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f12, 0(x2) # load 0x0000bc00 from memory into f12
li x3, 0xab862c34b1b70c36 # load x3 with value 0xab862c34b1b70c36
sw x3, 0(x2) # store 0xab862c34b1b70c36 in memory
flh f20, 0(x2) # load 0xab862c34b1b70c36 from memory into f20
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f14, 0(x2) # load 0x000058b4 from memory into f14
fnmadd.h f5, f12, f20, f14, dyn # perform operation
fnmadd.h f5, f12, f20, f14, rdn # perform operation
fnmadd.h f5, f12, f20, f14, rmm # perform operation
fnmadd.h f5, f12, f20, f14, rne # perform operation
fnmadd.h f5, f12, f20, f14, rtz # perform operation
fnmadd.h f5, f12, f20, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f5, f12, f20, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f5, f12, f20, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f5, f12, f20, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f5, f12, f20, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f5, f12, f20, f14 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbc00 fs3 = 0xc93a)
li x19, 0x81281d8a7e6d6204 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f18, 0(x2) # load 0x0000bc00 from memory into f18
li x3, 0x7e590fc0efff7ee6 # load x3 with value 0x7e590fc0efff7ee6
sw x3, 0(x2) # store 0x7e590fc0efff7ee6 in memory
flh f2, 0(x2) # load 0x7e590fc0efff7ee6 from memory into f2
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f1, 0(x2) # load 0x0000c93a from memory into f1
fnmadd.h f19, f18, f2, f1, dyn # perform operation
fnmadd.h f19, f18, f2, f1, rdn # perform operation
fnmadd.h f19, f18, f2, f1, rmm # perform operation
fnmadd.h f19, f18, f2, f1, rne # perform operation
fnmadd.h f19, f18, f2, f1, rtz # perform operation
fnmadd.h f19, f18, f2, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f19, f18, f2, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f19, f18, f2, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f19, f18, f2, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f19, f18, f2, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f19, f18, f2, f1 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3e00 fs3 = 0x0)
li x11, 0x79618c9d8bc89955 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f7, 0(x2) # load 0x00003e00 from memory into f7
li x3, 0xe1245ef6371442c1 # load x3 with value 0xe1245ef6371442c1
sw x3, 0(x2) # store 0xe1245ef6371442c1 in memory
flh f19, 0(x2) # load 0xe1245ef6371442c1 from memory into f19
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f4, 0(x2) # load 0x00000000 from memory into f4
fnmadd.h f11, f7, f19, f4, dyn # perform operation
fnmadd.h f11, f7, f19, f4, rdn # perform operation
fnmadd.h f11, f7, f19, f4, rmm # perform operation
fnmadd.h f11, f7, f19, f4, rne # perform operation
fnmadd.h f11, f7, f19, f4, rtz # perform operation
fnmadd.h f11, f7, f19, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f11, f7, f19, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f11, f7, f19, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f11, f7, f19, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f11, f7, f19, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f11, f7, f19, f4 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3e00 fs3 = 0x8000)
li x9, 0x6f8cc69479e78752 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f10, 0(x2) # load 0x00003e00 from memory into f10
li x3, 0x5702ff1717a59890 # load x3 with value 0x5702ff1717a59890
sw x3, 0(x2) # store 0x5702ff1717a59890 in memory
flh f21, 0(x2) # load 0x5702ff1717a59890 from memory into f21
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f19, 0(x2) # load 0x00008000 from memory into f19
fnmadd.h f9, f10, f21, f19, dyn # perform operation
fnmadd.h f9, f10, f21, f19, rdn # perform operation
fnmadd.h f9, f10, f21, f19, rmm # perform operation
fnmadd.h f9, f10, f21, f19, rne # perform operation
fnmadd.h f9, f10, f21, f19, rtz # perform operation
fnmadd.h f9, f10, f21, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f9, f10, f21, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f9, f10, f21, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f9, f10, f21, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f9, f10, f21, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f9, f10, f21, f19 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3e00 fs3 = 0x3c00)
li x15, 0x5ee68fdcfd4b6197 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f17, 0(x2) # load 0x00003e00 from memory into f17
li x3, 0x7ada4284153c653c # load x3 with value 0x7ada4284153c653c
sw x3, 0(x2) # store 0x7ada4284153c653c in memory
flh f27, 0(x2) # load 0x7ada4284153c653c from memory into f27
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f1, 0(x2) # load 0x00003c00 from memory into f1
fnmadd.h f15, f17, f27, f1, dyn # perform operation
fnmadd.h f15, f17, f27, f1, rdn # perform operation
fnmadd.h f15, f17, f27, f1, rmm # perform operation
fnmadd.h f15, f17, f27, f1, rne # perform operation
fnmadd.h f15, f17, f27, f1, rtz # perform operation
fnmadd.h f15, f17, f27, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f15, f17, f27, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f15, f17, f27, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f15, f17, f27, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f15, f17, f27, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f15, f17, f27, f1 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3e00 fs3 = 0xbc00)
li x17, 0x4237dcf74fa7e1d8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f7, 0(x2) # load 0x00003e00 from memory into f7
li x3, 0xa8bf205a2fcf941f # load x3 with value 0xa8bf205a2fcf941f
sw x3, 0(x2) # store 0xa8bf205a2fcf941f in memory
flh f13, 0(x2) # load 0xa8bf205a2fcf941f from memory into f13
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f30, 0(x2) # load 0x0000bc00 from memory into f30
fnmadd.h f17, f7, f13, f30, dyn # perform operation
fnmadd.h f17, f7, f13, f30, rdn # perform operation
fnmadd.h f17, f7, f13, f30, rmm # perform operation
fnmadd.h f17, f7, f13, f30, rne # perform operation
fnmadd.h f17, f7, f13, f30, rtz # perform operation
fnmadd.h f17, f7, f13, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f17, f7, f13, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f17, f7, f13, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f17, f7, f13, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f17, f7, f13, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f17, f7, f13, f30 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3e00 fs3 = 0x3e00)
li x7, 0x20102385e802b8b4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f11, 0(x2) # load 0x00003e00 from memory into f11
li x3, 0x647e102505615fcd # load x3 with value 0x647e102505615fcd
sw x3, 0(x2) # store 0x647e102505615fcd in memory
flh f15, 0(x2) # load 0x647e102505615fcd from memory into f15
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f16, 0(x2) # load 0x00003e00 from memory into f16
fnmadd.h f7, f11, f15, f16, dyn # perform operation
fnmadd.h f7, f11, f15, f16, rdn # perform operation
fnmadd.h f7, f11, f15, f16, rmm # perform operation
fnmadd.h f7, f11, f15, f16, rne # perform operation
fnmadd.h f7, f11, f15, f16, rtz # perform operation
fnmadd.h f7, f11, f15, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f7, f11, f15, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f7, f11, f15, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f7, f11, f15, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f7, f11, f15, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f7, f11, f15, f16 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3e00 fs3 = 0xbe00)
li x3, 0x90b02ae0b12fe0ed # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f16, 0(x2) # load 0x00003e00 from memory into f16
li x3, 0xeec429ac87dbb10e # load x3 with value 0xeec429ac87dbb10e
sw x3, 0(x2) # store 0xeec429ac87dbb10e in memory
flh f6, 0(x2) # load 0xeec429ac87dbb10e from memory into f6
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f18, 0(x2) # load 0x0000be00 from memory into f18
fnmadd.h f3, f16, f6, f18, dyn # perform operation
fnmadd.h f3, f16, f6, f18, rdn # perform operation
fnmadd.h f3, f16, f6, f18, rmm # perform operation
fnmadd.h f3, f16, f6, f18, rne # perform operation
fnmadd.h f3, f16, f6, f18, rtz # perform operation
fnmadd.h f3, f16, f6, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f3, f16, f6, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f3, f16, f6, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f3, f16, f6, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f3, f16, f6, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f3, f16, f6, f18 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3e00 fs3 = 0x4000)
li x24, 0x66589bcb67f3617c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f8, 0(x2) # load 0x00003e00 from memory into f8
li x3, 0x15f940d3b23cfd7e # load x3 with value 0x15f940d3b23cfd7e
sw x3, 0(x2) # store 0x15f940d3b23cfd7e in memory
flh f23, 0(x2) # load 0x15f940d3b23cfd7e from memory into f23
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f3, 0(x2) # load 0x00004000 from memory into f3
fnmadd.h f24, f8, f23, f3, dyn # perform operation
fnmadd.h f24, f8, f23, f3, rdn # perform operation
fnmadd.h f24, f8, f23, f3, rmm # perform operation
fnmadd.h f24, f8, f23, f3, rne # perform operation
fnmadd.h f24, f8, f23, f3, rtz # perform operation
fnmadd.h f24, f8, f23, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f24, f8, f23, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f24, f8, f23, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f24, f8, f23, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f24, f8, f23, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f24, f8, f23, f3 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3e00 fs3 = 0xc000)
li x28, 0x3962d37c82d806ad # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f22, 0(x2) # load 0x00003e00 from memory into f22
li x3, 0x98e509b4373dca0c # load x3 with value 0x98e509b4373dca0c
sw x3, 0(x2) # store 0x98e509b4373dca0c in memory
flh f8, 0(x2) # load 0x98e509b4373dca0c from memory into f8
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f21, 0(x2) # load 0x0000c000 from memory into f21
fnmadd.h f28, f22, f8, f21, dyn # perform operation
fnmadd.h f28, f22, f8, f21, rdn # perform operation
fnmadd.h f28, f22, f8, f21, rmm # perform operation
fnmadd.h f28, f22, f8, f21, rne # perform operation
fnmadd.h f28, f22, f8, f21, rtz # perform operation
fnmadd.h f28, f22, f8, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f28, f22, f8, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f28, f22, f8, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f28, f22, f8, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f28, f22, f8, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f28, f22, f8, f21 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3e00 fs3 = 0x400)
li x10, 0xffad8489622c1d83 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f26, 0(x2) # load 0x00003e00 from memory into f26
li x3, 0x64ca6d35c9a21e28 # load x3 with value 0x64ca6d35c9a21e28
sw x3, 0(x2) # store 0x64ca6d35c9a21e28 in memory
flh f18, 0(x2) # load 0x64ca6d35c9a21e28 from memory into f18
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f22, 0(x2) # load 0x00000400 from memory into f22
fnmadd.h f10, f26, f18, f22, dyn # perform operation
fnmadd.h f10, f26, f18, f22, rdn # perform operation
fnmadd.h f10, f26, f18, f22, rmm # perform operation
fnmadd.h f10, f26, f18, f22, rne # perform operation
fnmadd.h f10, f26, f18, f22, rtz # perform operation
fnmadd.h f10, f26, f18, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f10, f26, f18, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f10, f26, f18, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f10, f26, f18, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f10, f26, f18, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f10, f26, f18, f22 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3e00 fs3 = 0x8400)
li x20, 0x70d50a59c475f4f8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f17, 0(x2) # load 0x00003e00 from memory into f17
li x3, 0x5698c3b128726b54 # load x3 with value 0x5698c3b128726b54
sw x3, 0(x2) # store 0x5698c3b128726b54 in memory
flh f16, 0(x2) # load 0x5698c3b128726b54 from memory into f16
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f3, 0(x2) # load 0x00008400 from memory into f3
fnmadd.h f20, f17, f16, f3, dyn # perform operation
fnmadd.h f20, f17, f16, f3, rdn # perform operation
fnmadd.h f20, f17, f16, f3, rmm # perform operation
fnmadd.h f20, f17, f16, f3, rne # perform operation
fnmadd.h f20, f17, f16, f3, rtz # perform operation
fnmadd.h f20, f17, f16, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f20, f17, f16, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f20, f17, f16, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f20, f17, f16, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f20, f17, f16, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f20, f17, f16, f3 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3e00 fs3 = 0x7bff)
li x29, 0xcf787bc6aa8b3813 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f18, 0(x2) # load 0x00003e00 from memory into f18
li x3, 0x1f009bb6e7e3c055 # load x3 with value 0x1f009bb6e7e3c055
sw x3, 0(x2) # store 0x1f009bb6e7e3c055 in memory
flh f28, 0(x2) # load 0x1f009bb6e7e3c055 from memory into f28
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f11, 0(x2) # load 0x00007bff from memory into f11
fnmadd.h f29, f18, f28, f11, dyn # perform operation
fnmadd.h f29, f18, f28, f11, rdn # perform operation
fnmadd.h f29, f18, f28, f11, rmm # perform operation
fnmadd.h f29, f18, f28, f11, rne # perform operation
fnmadd.h f29, f18, f28, f11, rtz # perform operation
fnmadd.h f29, f18, f28, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f29, f18, f28, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f29, f18, f28, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f29, f18, f28, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f29, f18, f28, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f29, f18, f28, f11 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3e00 fs3 = 0xfbff)
li x24, 0xb7582e8b632ee7b4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f26, 0(x2) # load 0x00003e00 from memory into f26
li x3, 0xe922b40d2e6791a5 # load x3 with value 0xe922b40d2e6791a5
sw x3, 0(x2) # store 0xe922b40d2e6791a5 in memory
flh f16, 0(x2) # load 0xe922b40d2e6791a5 from memory into f16
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f13, 0(x2) # load 0x0000fbff from memory into f13
fnmadd.h f24, f26, f16, f13, dyn # perform operation
fnmadd.h f24, f26, f16, f13, rdn # perform operation
fnmadd.h f24, f26, f16, f13, rmm # perform operation
fnmadd.h f24, f26, f16, f13, rne # perform operation
fnmadd.h f24, f26, f16, f13, rtz # perform operation
fnmadd.h f24, f26, f16, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f24, f26, f16, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f24, f26, f16, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f24, f26, f16, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f24, f26, f16, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f24, f26, f16, f13 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3e00 fs3 = 0x3ff)
li x12, 0xa4fadb8b8191bf64 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f19, 0(x2) # load 0x00003e00 from memory into f19
li x3, 0x9332db6107c8a7d3 # load x3 with value 0x9332db6107c8a7d3
sw x3, 0(x2) # store 0x9332db6107c8a7d3 in memory
flh f17, 0(x2) # load 0x9332db6107c8a7d3 from memory into f17
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f27, 0(x2) # load 0x000003ff from memory into f27
fnmadd.h f12, f19, f17, f27, dyn # perform operation
fnmadd.h f12, f19, f17, f27, rdn # perform operation
fnmadd.h f12, f19, f17, f27, rmm # perform operation
fnmadd.h f12, f19, f17, f27, rne # perform operation
fnmadd.h f12, f19, f17, f27, rtz # perform operation
fnmadd.h f12, f19, f17, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f12, f19, f17, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f12, f19, f17, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f12, f19, f17, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f12, f19, f17, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f12, f19, f17, f27 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3e00 fs3 = 0x83ff)
li x10, 0xd10340ecb29a26c9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f25, 0(x2) # load 0x00003e00 from memory into f25
li x3, 0x84fd6b3637392ce8 # load x3 with value 0x84fd6b3637392ce8
sw x3, 0(x2) # store 0x84fd6b3637392ce8 in memory
flh f23, 0(x2) # load 0x84fd6b3637392ce8 from memory into f23
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f8, 0(x2) # load 0x000083ff from memory into f8
fnmadd.h f10, f25, f23, f8, dyn # perform operation
fnmadd.h f10, f25, f23, f8, rdn # perform operation
fnmadd.h f10, f25, f23, f8, rmm # perform operation
fnmadd.h f10, f25, f23, f8, rne # perform operation
fnmadd.h f10, f25, f23, f8, rtz # perform operation
fnmadd.h f10, f25, f23, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f10, f25, f23, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f10, f25, f23, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f10, f25, f23, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f10, f25, f23, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f10, f25, f23, f8 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3e00 fs3 = 0x200)
li x21, 0xb293eb8f2f62cdc1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f19, 0(x2) # load 0x00003e00 from memory into f19
li x3, 0x445df203da99db66 # load x3 with value 0x445df203da99db66
sw x3, 0(x2) # store 0x445df203da99db66 in memory
flh f26, 0(x2) # load 0x445df203da99db66 from memory into f26
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f5, 0(x2) # load 0x00000200 from memory into f5
fnmadd.h f21, f19, f26, f5, dyn # perform operation
fnmadd.h f21, f19, f26, f5, rdn # perform operation
fnmadd.h f21, f19, f26, f5, rmm # perform operation
fnmadd.h f21, f19, f26, f5, rne # perform operation
fnmadd.h f21, f19, f26, f5, rtz # perform operation
fnmadd.h f21, f19, f26, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f21, f19, f26, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f21, f19, f26, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f21, f19, f26, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f21, f19, f26, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f21, f19, f26, f5 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3e00 fs3 = 0x8200)
li x8, 0x205442bd74e37696 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f4, 0(x2) # load 0x00003e00 from memory into f4
li x3, 0xfde0c84f96d1943b # load x3 with value 0xfde0c84f96d1943b
sw x3, 0(x2) # store 0xfde0c84f96d1943b in memory
flh f9, 0(x2) # load 0xfde0c84f96d1943b from memory into f9
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f11, 0(x2) # load 0x00008200 from memory into f11
fnmadd.h f8, f4, f9, f11, dyn # perform operation
fnmadd.h f8, f4, f9, f11, rdn # perform operation
fnmadd.h f8, f4, f9, f11, rmm # perform operation
fnmadd.h f8, f4, f9, f11, rne # perform operation
fnmadd.h f8, f4, f9, f11, rtz # perform operation
fnmadd.h f8, f4, f9, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f8, f4, f9, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f8, f4, f9, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f8, f4, f9, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f8, f4, f9, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f8, f4, f9, f11 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3e00 fs3 = 0x1)
li x30, 0x12fa564fb942ecc6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f31, 0(x2) # load 0x00003e00 from memory into f31
li x3, 0x71683ed47354eb64 # load x3 with value 0x71683ed47354eb64
sw x3, 0(x2) # store 0x71683ed47354eb64 in memory
flh f13, 0(x2) # load 0x71683ed47354eb64 from memory into f13
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f11, 0(x2) # load 0x00000001 from memory into f11
fnmadd.h f30, f31, f13, f11, dyn # perform operation
fnmadd.h f30, f31, f13, f11, rdn # perform operation
fnmadd.h f30, f31, f13, f11, rmm # perform operation
fnmadd.h f30, f31, f13, f11, rne # perform operation
fnmadd.h f30, f31, f13, f11, rtz # perform operation
fnmadd.h f30, f31, f13, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f30, f31, f13, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f30, f31, f13, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f30, f31, f13, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f30, f31, f13, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f30, f31, f13, f11 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3e00 fs3 = 0x8001)
li x10, 0xf962734418e6a76b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f12, 0(x2) # load 0x00003e00 from memory into f12
li x3, 0x5dd3fc95d4b21d3f # load x3 with value 0x5dd3fc95d4b21d3f
sw x3, 0(x2) # store 0x5dd3fc95d4b21d3f in memory
flh f18, 0(x2) # load 0x5dd3fc95d4b21d3f from memory into f18
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f2, 0(x2) # load 0x00008001 from memory into f2
fnmadd.h f10, f12, f18, f2, dyn # perform operation
fnmadd.h f10, f12, f18, f2, rdn # perform operation
fnmadd.h f10, f12, f18, f2, rmm # perform operation
fnmadd.h f10, f12, f18, f2, rne # perform operation
fnmadd.h f10, f12, f18, f2, rtz # perform operation
fnmadd.h f10, f12, f18, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f10, f12, f18, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f10, f12, f18, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f10, f12, f18, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f10, f12, f18, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f10, f12, f18, f2 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3e00 fs3 = 0x7c00)
li x5, 0x8870a6cadcb6d43e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f3, 0(x2) # load 0x00003e00 from memory into f3
li x3, 0xe507de080be3b956 # load x3 with value 0xe507de080be3b956
sw x3, 0(x2) # store 0xe507de080be3b956 in memory
flh f15, 0(x2) # load 0xe507de080be3b956 from memory into f15
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f7, 0(x2) # load 0x00007c00 from memory into f7
fnmadd.h f5, f3, f15, f7, dyn # perform operation
fnmadd.h f5, f3, f15, f7, rdn # perform operation
fnmadd.h f5, f3, f15, f7, rmm # perform operation
fnmadd.h f5, f3, f15, f7, rne # perform operation
fnmadd.h f5, f3, f15, f7, rtz # perform operation
fnmadd.h f5, f3, f15, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f5, f3, f15, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f5, f3, f15, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f5, f3, f15, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f5, f3, f15, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f5, f3, f15, f7 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3e00 fs3 = 0xfc00)
li x24, 0x6d364f1daa790328 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f18, 0(x2) # load 0x00003e00 from memory into f18
li x3, 0xb9fd59c9e261e792 # load x3 with value 0xb9fd59c9e261e792
sw x3, 0(x2) # store 0xb9fd59c9e261e792 in memory
flh f26, 0(x2) # load 0xb9fd59c9e261e792 from memory into f26
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f30, 0(x2) # load 0x0000fc00 from memory into f30
fnmadd.h f24, f18, f26, f30, dyn # perform operation
fnmadd.h f24, f18, f26, f30, rdn # perform operation
fnmadd.h f24, f18, f26, f30, rmm # perform operation
fnmadd.h f24, f18, f26, f30, rne # perform operation
fnmadd.h f24, f18, f26, f30, rtz # perform operation
fnmadd.h f24, f18, f26, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f24, f18, f26, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f24, f18, f26, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f24, f18, f26, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f24, f18, f26, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f24, f18, f26, f30 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3e00 fs3 = 0x7e00)
li x28, 0x26079d3acf50f303 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f22, 0(x2) # load 0x00003e00 from memory into f22
li x3, 0xc5ff93de596c2c76 # load x3 with value 0xc5ff93de596c2c76
sw x3, 0(x2) # store 0xc5ff93de596c2c76 in memory
flh f25, 0(x2) # load 0xc5ff93de596c2c76 from memory into f25
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f2, 0(x2) # load 0x00007e00 from memory into f2
fnmadd.h f28, f22, f25, f2, dyn # perform operation
fnmadd.h f28, f22, f25, f2, rdn # perform operation
fnmadd.h f28, f22, f25, f2, rmm # perform operation
fnmadd.h f28, f22, f25, f2, rne # perform operation
fnmadd.h f28, f22, f25, f2, rtz # perform operation
fnmadd.h f28, f22, f25, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f28, f22, f25, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f28, f22, f25, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f28, f22, f25, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f28, f22, f25, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f28, f22, f25, f2 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3e00 fs3 = 0x7fff)
li x7, 0x2631dfe55638631d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f11, 0(x2) # load 0x00003e00 from memory into f11
li x3, 0x9aa392c47196c972 # load x3 with value 0x9aa392c47196c972
sw x3, 0(x2) # store 0x9aa392c47196c972 in memory
flh f3, 0(x2) # load 0x9aa392c47196c972 from memory into f3
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f23, 0(x2) # load 0x00007fff from memory into f23
fnmadd.h f7, f11, f3, f23, dyn # perform operation
fnmadd.h f7, f11, f3, f23, rdn # perform operation
fnmadd.h f7, f11, f3, f23, rmm # perform operation
fnmadd.h f7, f11, f3, f23, rne # perform operation
fnmadd.h f7, f11, f3, f23, rtz # perform operation
fnmadd.h f7, f11, f3, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f7, f11, f3, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f7, f11, f3, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f7, f11, f3, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f7, f11, f3, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f7, f11, f3, f23 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3e00 fs3 = 0x7c01)
li x23, 0xb262469c421eb97a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f8, 0(x2) # load 0x00003e00 from memory into f8
li x3, 0x1c42b419f1729a1 # load x3 with value 0x1c42b419f1729a1
sw x3, 0(x2) # store 0x1c42b419f1729a1 in memory
flh f24, 0(x2) # load 0x1c42b419f1729a1 from memory into f24
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f17, 0(x2) # load 0x00007c01 from memory into f17
fnmadd.h f23, f8, f24, f17, dyn # perform operation
fnmadd.h f23, f8, f24, f17, rdn # perform operation
fnmadd.h f23, f8, f24, f17, rmm # perform operation
fnmadd.h f23, f8, f24, f17, rne # perform operation
fnmadd.h f23, f8, f24, f17, rtz # perform operation
fnmadd.h f23, f8, f24, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f23, f8, f24, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f23, f8, f24, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f23, f8, f24, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f23, f8, f24, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f23, f8, f24, f17 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3e00 fs3 = 0x7dff)
li x24, 0xd4f77879d334ef57 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f10, 0(x2) # load 0x00003e00 from memory into f10
li x3, 0x1c86ba9b36c62880 # load x3 with value 0x1c86ba9b36c62880
sw x3, 0(x2) # store 0x1c86ba9b36c62880 in memory
flh f29, 0(x2) # load 0x1c86ba9b36c62880 from memory into f29
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f26, 0(x2) # load 0x00007dff from memory into f26
fnmadd.h f24, f10, f29, f26, dyn # perform operation
fnmadd.h f24, f10, f29, f26, rdn # perform operation
fnmadd.h f24, f10, f29, f26, rmm # perform operation
fnmadd.h f24, f10, f29, f26, rne # perform operation
fnmadd.h f24, f10, f29, f26, rtz # perform operation
fnmadd.h f24, f10, f29, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f24, f10, f29, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f24, f10, f29, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f24, f10, f29, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f24, f10, f29, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f24, f10, f29, f26 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3e00 fs3 = 0x58b4)
li x4, 0xbaa4976e66a1e1bd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f16, 0(x2) # load 0x00003e00 from memory into f16
li x3, 0xe91fc5745b0e1c76 # load x3 with value 0xe91fc5745b0e1c76
sw x3, 0(x2) # store 0xe91fc5745b0e1c76 in memory
flh f10, 0(x2) # load 0xe91fc5745b0e1c76 from memory into f10
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f21, 0(x2) # load 0x000058b4 from memory into f21
fnmadd.h f4, f16, f10, f21, dyn # perform operation
fnmadd.h f4, f16, f10, f21, rdn # perform operation
fnmadd.h f4, f16, f10, f21, rmm # perform operation
fnmadd.h f4, f16, f10, f21, rne # perform operation
fnmadd.h f4, f16, f10, f21, rtz # perform operation
fnmadd.h f4, f16, f10, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f4, f16, f10, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f4, f16, f10, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f4, f16, f10, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f4, f16, f10, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f4, f16, f10, f21 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3e00 fs3 = 0xc93a)
li x8, 0xcb59178a710adac9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f10, 0(x2) # load 0x00003e00 from memory into f10
li x3, 0xa3c0460e0f0bb7e0 # load x3 with value 0xa3c0460e0f0bb7e0
sw x3, 0(x2) # store 0xa3c0460e0f0bb7e0 in memory
flh f2, 0(x2) # load 0xa3c0460e0f0bb7e0 from memory into f2
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f19, 0(x2) # load 0x0000c93a from memory into f19
fnmadd.h f8, f10, f2, f19, dyn # perform operation
fnmadd.h f8, f10, f2, f19, rdn # perform operation
fnmadd.h f8, f10, f2, f19, rmm # perform operation
fnmadd.h f8, f10, f2, f19, rne # perform operation
fnmadd.h f8, f10, f2, f19, rtz # perform operation
fnmadd.h f8, f10, f2, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f8, f10, f2, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f8, f10, f2, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f8, f10, f2, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f8, f10, f2, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f8, f10, f2, f19 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbe00 fs3 = 0x0)
li x13, 0xcefa920300fce508 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f16, 0(x2) # load 0x0000be00 from memory into f16
li x3, 0x1c35078a7e6cce6b # load x3 with value 0x1c35078a7e6cce6b
sw x3, 0(x2) # store 0x1c35078a7e6cce6b in memory
flh f4, 0(x2) # load 0x1c35078a7e6cce6b from memory into f4
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f10, 0(x2) # load 0x00000000 from memory into f10
fnmadd.h f13, f16, f4, f10, dyn # perform operation
fnmadd.h f13, f16, f4, f10, rdn # perform operation
fnmadd.h f13, f16, f4, f10, rmm # perform operation
fnmadd.h f13, f16, f4, f10, rne # perform operation
fnmadd.h f13, f16, f4, f10, rtz # perform operation
fnmadd.h f13, f16, f4, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f13, f16, f4, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f13, f16, f4, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f13, f16, f4, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f13, f16, f4, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f13, f16, f4, f10 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbe00 fs3 = 0x8000)
li x18, 0x6f0f903b724461ab # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f30, 0(x2) # load 0x0000be00 from memory into f30
li x3, 0x5dac3bc63db69394 # load x3 with value 0x5dac3bc63db69394
sw x3, 0(x2) # store 0x5dac3bc63db69394 in memory
flh f10, 0(x2) # load 0x5dac3bc63db69394 from memory into f10
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f12, 0(x2) # load 0x00008000 from memory into f12
fnmadd.h f18, f30, f10, f12, dyn # perform operation
fnmadd.h f18, f30, f10, f12, rdn # perform operation
fnmadd.h f18, f30, f10, f12, rmm # perform operation
fnmadd.h f18, f30, f10, f12, rne # perform operation
fnmadd.h f18, f30, f10, f12, rtz # perform operation
fnmadd.h f18, f30, f10, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f18, f30, f10, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f18, f30, f10, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f18, f30, f10, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f18, f30, f10, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f18, f30, f10, f12 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbe00 fs3 = 0x3c00)
li x27, 0x2bc6903dddfc9bf3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f13, 0(x2) # load 0x0000be00 from memory into f13
li x3, 0x2c0123263e6f323f # load x3 with value 0x2c0123263e6f323f
sw x3, 0(x2) # store 0x2c0123263e6f323f in memory
flh f9, 0(x2) # load 0x2c0123263e6f323f from memory into f9
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f14, 0(x2) # load 0x00003c00 from memory into f14
fnmadd.h f27, f13, f9, f14, dyn # perform operation
fnmadd.h f27, f13, f9, f14, rdn # perform operation
fnmadd.h f27, f13, f9, f14, rmm # perform operation
fnmadd.h f27, f13, f9, f14, rne # perform operation
fnmadd.h f27, f13, f9, f14, rtz # perform operation
fnmadd.h f27, f13, f9, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f27, f13, f9, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f27, f13, f9, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f27, f13, f9, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f27, f13, f9, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f27, f13, f9, f14 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbe00 fs3 = 0xbc00)
li x10, 0x637cebe205cd62b6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f19, 0(x2) # load 0x0000be00 from memory into f19
li x3, 0x8d72e3bead6fd2b0 # load x3 with value 0x8d72e3bead6fd2b0
sw x3, 0(x2) # store 0x8d72e3bead6fd2b0 in memory
flh f2, 0(x2) # load 0x8d72e3bead6fd2b0 from memory into f2
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f21, 0(x2) # load 0x0000bc00 from memory into f21
fnmadd.h f10, f19, f2, f21, dyn # perform operation
fnmadd.h f10, f19, f2, f21, rdn # perform operation
fnmadd.h f10, f19, f2, f21, rmm # perform operation
fnmadd.h f10, f19, f2, f21, rne # perform operation
fnmadd.h f10, f19, f2, f21, rtz # perform operation
fnmadd.h f10, f19, f2, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f10, f19, f2, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f10, f19, f2, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f10, f19, f2, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f10, f19, f2, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f10, f19, f2, f21 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbe00 fs3 = 0x3e00)
li x23, 0x1e5696a34fc21f07 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f17, 0(x2) # load 0x0000be00 from memory into f17
li x3, 0x22348991a9f87208 # load x3 with value 0x22348991a9f87208
sw x3, 0(x2) # store 0x22348991a9f87208 in memory
flh f1, 0(x2) # load 0x22348991a9f87208 from memory into f1
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f27, 0(x2) # load 0x00003e00 from memory into f27
fnmadd.h f23, f17, f1, f27, dyn # perform operation
fnmadd.h f23, f17, f1, f27, rdn # perform operation
fnmadd.h f23, f17, f1, f27, rmm # perform operation
fnmadd.h f23, f17, f1, f27, rne # perform operation
fnmadd.h f23, f17, f1, f27, rtz # perform operation
fnmadd.h f23, f17, f1, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f23, f17, f1, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f23, f17, f1, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f23, f17, f1, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f23, f17, f1, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f23, f17, f1, f27 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbe00 fs3 = 0xbe00)
li x22, 0x2c3c9c427972c6e0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f20, 0(x2) # load 0x0000be00 from memory into f20
li x3, 0x2a973acc53b775e3 # load x3 with value 0x2a973acc53b775e3
sw x3, 0(x2) # store 0x2a973acc53b775e3 in memory
flh f8, 0(x2) # load 0x2a973acc53b775e3 from memory into f8
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f7, 0(x2) # load 0x0000be00 from memory into f7
fnmadd.h f22, f20, f8, f7, dyn # perform operation
fnmadd.h f22, f20, f8, f7, rdn # perform operation
fnmadd.h f22, f20, f8, f7, rmm # perform operation
fnmadd.h f22, f20, f8, f7, rne # perform operation
fnmadd.h f22, f20, f8, f7, rtz # perform operation
fnmadd.h f22, f20, f8, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f22, f20, f8, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f22, f20, f8, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f22, f20, f8, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f22, f20, f8, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f22, f20, f8, f7 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbe00 fs3 = 0x4000)
li x21, 0x0f1c73b8a23ac055 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f20, 0(x2) # load 0x0000be00 from memory into f20
li x3, 0x22fa53af5ea52f76 # load x3 with value 0x22fa53af5ea52f76
sw x3, 0(x2) # store 0x22fa53af5ea52f76 in memory
flh f3, 0(x2) # load 0x22fa53af5ea52f76 from memory into f3
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f19, 0(x2) # load 0x00004000 from memory into f19
fnmadd.h f21, f20, f3, f19, dyn # perform operation
fnmadd.h f21, f20, f3, f19, rdn # perform operation
fnmadd.h f21, f20, f3, f19, rmm # perform operation
fnmadd.h f21, f20, f3, f19, rne # perform operation
fnmadd.h f21, f20, f3, f19, rtz # perform operation
fnmadd.h f21, f20, f3, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f21, f20, f3, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f21, f20, f3, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f21, f20, f3, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f21, f20, f3, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f21, f20, f3, f19 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbe00 fs3 = 0xc000)
li x2, 0xbb06cf7bde1aa0d4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f4, 0(x2) # load 0x0000be00 from memory into f4
li x3, 0xa21a077c677f39b7 # load x3 with value 0xa21a077c677f39b7
sw x3, 0(x2) # store 0xa21a077c677f39b7 in memory
flh f21, 0(x2) # load 0xa21a077c677f39b7 from memory into f21
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f23, 0(x2) # load 0x0000c000 from memory into f23
fnmadd.h f2, f4, f21, f23, dyn # perform operation
fnmadd.h f2, f4, f21, f23, rdn # perform operation
fnmadd.h f2, f4, f21, f23, rmm # perform operation
fnmadd.h f2, f4, f21, f23, rne # perform operation
fnmadd.h f2, f4, f21, f23, rtz # perform operation
fnmadd.h f2, f4, f21, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f2, f4, f21, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f2, f4, f21, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f2, f4, f21, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f2, f4, f21, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f2, f4, f21, f23 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbe00 fs3 = 0x400)
li x16, 0x3ae32208d596465f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f31, 0(x2) # load 0x0000be00 from memory into f31
li x3, 0x35f8fc3289fbe0ad # load x3 with value 0x35f8fc3289fbe0ad
sw x3, 0(x2) # store 0x35f8fc3289fbe0ad in memory
flh f24, 0(x2) # load 0x35f8fc3289fbe0ad from memory into f24
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f7, 0(x2) # load 0x00000400 from memory into f7
fnmadd.h f16, f31, f24, f7, dyn # perform operation
fnmadd.h f16, f31, f24, f7, rdn # perform operation
fnmadd.h f16, f31, f24, f7, rmm # perform operation
fnmadd.h f16, f31, f24, f7, rne # perform operation
fnmadd.h f16, f31, f24, f7, rtz # perform operation
fnmadd.h f16, f31, f24, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f16, f31, f24, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f16, f31, f24, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f16, f31, f24, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f16, f31, f24, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f16, f31, f24, f7 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbe00 fs3 = 0x8400)
li x18, 0x608a5c827c7edd92 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f7, 0(x2) # load 0x0000be00 from memory into f7
li x3, 0x5f0f5dd3ab0110f # load x3 with value 0x5f0f5dd3ab0110f
sw x3, 0(x2) # store 0x5f0f5dd3ab0110f in memory
flh f2, 0(x2) # load 0x5f0f5dd3ab0110f from memory into f2
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f23, 0(x2) # load 0x00008400 from memory into f23
fnmadd.h f18, f7, f2, f23, dyn # perform operation
fnmadd.h f18, f7, f2, f23, rdn # perform operation
fnmadd.h f18, f7, f2, f23, rmm # perform operation
fnmadd.h f18, f7, f2, f23, rne # perform operation
fnmadd.h f18, f7, f2, f23, rtz # perform operation
fnmadd.h f18, f7, f2, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f18, f7, f2, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f18, f7, f2, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f18, f7, f2, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f18, f7, f2, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f18, f7, f2, f23 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbe00 fs3 = 0x7bff)
li x2, 0xa126efa4328cddb6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f22, 0(x2) # load 0x0000be00 from memory into f22
li x3, 0x8930eb7dd2c253fe # load x3 with value 0x8930eb7dd2c253fe
sw x3, 0(x2) # store 0x8930eb7dd2c253fe in memory
flh f24, 0(x2) # load 0x8930eb7dd2c253fe from memory into f24
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f19, 0(x2) # load 0x00007bff from memory into f19
fnmadd.h f2, f22, f24, f19, dyn # perform operation
fnmadd.h f2, f22, f24, f19, rdn # perform operation
fnmadd.h f2, f22, f24, f19, rmm # perform operation
fnmadd.h f2, f22, f24, f19, rne # perform operation
fnmadd.h f2, f22, f24, f19, rtz # perform operation
fnmadd.h f2, f22, f24, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f2, f22, f24, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f2, f22, f24, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f2, f22, f24, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f2, f22, f24, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f2, f22, f24, f19 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbe00 fs3 = 0xfbff)
li x23, 0x6f1cb2f9432d519b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f1, 0(x2) # load 0x0000be00 from memory into f1
li x3, 0x68e54b63af54aacc # load x3 with value 0x68e54b63af54aacc
sw x3, 0(x2) # store 0x68e54b63af54aacc in memory
flh f6, 0(x2) # load 0x68e54b63af54aacc from memory into f6
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f2, 0(x2) # load 0x0000fbff from memory into f2
fnmadd.h f23, f1, f6, f2, dyn # perform operation
fnmadd.h f23, f1, f6, f2, rdn # perform operation
fnmadd.h f23, f1, f6, f2, rmm # perform operation
fnmadd.h f23, f1, f6, f2, rne # perform operation
fnmadd.h f23, f1, f6, f2, rtz # perform operation
fnmadd.h f23, f1, f6, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f23, f1, f6, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f23, f1, f6, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f23, f1, f6, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f23, f1, f6, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f23, f1, f6, f2 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbe00 fs3 = 0x3ff)
li x19, 0x1c158316b1c13766 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f23, 0(x2) # load 0x0000be00 from memory into f23
li x3, 0xfeffb23aba09f97c # load x3 with value 0xfeffb23aba09f97c
sw x3, 0(x2) # store 0xfeffb23aba09f97c in memory
flh f31, 0(x2) # load 0xfeffb23aba09f97c from memory into f31
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f13, 0(x2) # load 0x000003ff from memory into f13
fnmadd.h f19, f23, f31, f13, dyn # perform operation
fnmadd.h f19, f23, f31, f13, rdn # perform operation
fnmadd.h f19, f23, f31, f13, rmm # perform operation
fnmadd.h f19, f23, f31, f13, rne # perform operation
fnmadd.h f19, f23, f31, f13, rtz # perform operation
fnmadd.h f19, f23, f31, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f19, f23, f31, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f19, f23, f31, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f19, f23, f31, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f19, f23, f31, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f19, f23, f31, f13 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbe00 fs3 = 0x83ff)
li x23, 0xd29096828508c1a7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f13, 0(x2) # load 0x0000be00 from memory into f13
li x3, 0x59a19b3862011ee0 # load x3 with value 0x59a19b3862011ee0
sw x3, 0(x2) # store 0x59a19b3862011ee0 in memory
flh f20, 0(x2) # load 0x59a19b3862011ee0 from memory into f20
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f28, 0(x2) # load 0x000083ff from memory into f28
fnmadd.h f23, f13, f20, f28, dyn # perform operation
fnmadd.h f23, f13, f20, f28, rdn # perform operation
fnmadd.h f23, f13, f20, f28, rmm # perform operation
fnmadd.h f23, f13, f20, f28, rne # perform operation
fnmadd.h f23, f13, f20, f28, rtz # perform operation
fnmadd.h f23, f13, f20, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f23, f13, f20, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f23, f13, f20, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f23, f13, f20, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f23, f13, f20, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f23, f13, f20, f28 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbe00 fs3 = 0x200)
li x30, 0xa1958090e2f6f677 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f6, 0(x2) # load 0x0000be00 from memory into f6
li x3, 0xa8fa4d2442f6a2bb # load x3 with value 0xa8fa4d2442f6a2bb
sw x3, 0(x2) # store 0xa8fa4d2442f6a2bb in memory
flh f13, 0(x2) # load 0xa8fa4d2442f6a2bb from memory into f13
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f4, 0(x2) # load 0x00000200 from memory into f4
fnmadd.h f30, f6, f13, f4, dyn # perform operation
fnmadd.h f30, f6, f13, f4, rdn # perform operation
fnmadd.h f30, f6, f13, f4, rmm # perform operation
fnmadd.h f30, f6, f13, f4, rne # perform operation
fnmadd.h f30, f6, f13, f4, rtz # perform operation
fnmadd.h f30, f6, f13, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f30, f6, f13, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f30, f6, f13, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f30, f6, f13, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f30, f6, f13, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f30, f6, f13, f4 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbe00 fs3 = 0x8200)
li x27, 0x06504850b9823b5a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f12, 0(x2) # load 0x0000be00 from memory into f12
li x3, 0x1cf89834b81d54c # load x3 with value 0x1cf89834b81d54c
sw x3, 0(x2) # store 0x1cf89834b81d54c in memory
flh f6, 0(x2) # load 0x1cf89834b81d54c from memory into f6
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f20, 0(x2) # load 0x00008200 from memory into f20
fnmadd.h f27, f12, f6, f20, dyn # perform operation
fnmadd.h f27, f12, f6, f20, rdn # perform operation
fnmadd.h f27, f12, f6, f20, rmm # perform operation
fnmadd.h f27, f12, f6, f20, rne # perform operation
fnmadd.h f27, f12, f6, f20, rtz # perform operation
fnmadd.h f27, f12, f6, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f27, f12, f6, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f27, f12, f6, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f27, f12, f6, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f27, f12, f6, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f27, f12, f6, f20 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbe00 fs3 = 0x1)
li x14, 0x504f04b6a9827947 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f21, 0(x2) # load 0x0000be00 from memory into f21
li x3, 0x74f5e4d791eb1a0c # load x3 with value 0x74f5e4d791eb1a0c
sw x3, 0(x2) # store 0x74f5e4d791eb1a0c in memory
flh f7, 0(x2) # load 0x74f5e4d791eb1a0c from memory into f7
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f9, 0(x2) # load 0x00000001 from memory into f9
fnmadd.h f14, f21, f7, f9, dyn # perform operation
fnmadd.h f14, f21, f7, f9, rdn # perform operation
fnmadd.h f14, f21, f7, f9, rmm # perform operation
fnmadd.h f14, f21, f7, f9, rne # perform operation
fnmadd.h f14, f21, f7, f9, rtz # perform operation
fnmadd.h f14, f21, f7, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f14, f21, f7, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f14, f21, f7, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f14, f21, f7, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f14, f21, f7, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f14, f21, f7, f9 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbe00 fs3 = 0x8001)
li x17, 0xa6bfc60212703670 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f22, 0(x2) # load 0x0000be00 from memory into f22
li x3, 0xf6bf61c2aeb83f7f # load x3 with value 0xf6bf61c2aeb83f7f
sw x3, 0(x2) # store 0xf6bf61c2aeb83f7f in memory
flh f2, 0(x2) # load 0xf6bf61c2aeb83f7f from memory into f2
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f21, 0(x2) # load 0x00008001 from memory into f21
fnmadd.h f17, f22, f2, f21, dyn # perform operation
fnmadd.h f17, f22, f2, f21, rdn # perform operation
fnmadd.h f17, f22, f2, f21, rmm # perform operation
fnmadd.h f17, f22, f2, f21, rne # perform operation
fnmadd.h f17, f22, f2, f21, rtz # perform operation
fnmadd.h f17, f22, f2, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f17, f22, f2, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f17, f22, f2, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f17, f22, f2, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f17, f22, f2, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f17, f22, f2, f21 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbe00 fs3 = 0x7c00)
li x9, 0xcbf6c6a40bdd7146 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f27, 0(x2) # load 0x0000be00 from memory into f27
li x3, 0x694294367356506e # load x3 with value 0x694294367356506e
sw x3, 0(x2) # store 0x694294367356506e in memory
flh f25, 0(x2) # load 0x694294367356506e from memory into f25
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f11, 0(x2) # load 0x00007c00 from memory into f11
fnmadd.h f9, f27, f25, f11, dyn # perform operation
fnmadd.h f9, f27, f25, f11, rdn # perform operation
fnmadd.h f9, f27, f25, f11, rmm # perform operation
fnmadd.h f9, f27, f25, f11, rne # perform operation
fnmadd.h f9, f27, f25, f11, rtz # perform operation
fnmadd.h f9, f27, f25, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f9, f27, f25, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f9, f27, f25, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f9, f27, f25, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f9, f27, f25, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f9, f27, f25, f11 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbe00 fs3 = 0xfc00)
li x25, 0xb82d7d1d6093c8a0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f24, 0(x2) # load 0x0000be00 from memory into f24
li x3, 0xdeaa9809b0705747 # load x3 with value 0xdeaa9809b0705747
sw x3, 0(x2) # store 0xdeaa9809b0705747 in memory
flh f14, 0(x2) # load 0xdeaa9809b0705747 from memory into f14
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f20, 0(x2) # load 0x0000fc00 from memory into f20
fnmadd.h f25, f24, f14, f20, dyn # perform operation
fnmadd.h f25, f24, f14, f20, rdn # perform operation
fnmadd.h f25, f24, f14, f20, rmm # perform operation
fnmadd.h f25, f24, f14, f20, rne # perform operation
fnmadd.h f25, f24, f14, f20, rtz # perform operation
fnmadd.h f25, f24, f14, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f25, f24, f14, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f25, f24, f14, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f25, f24, f14, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f25, f24, f14, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f25, f24, f14, f20 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbe00 fs3 = 0x7e00)
li x17, 0x3dc64bf7ad099429 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f27, 0(x2) # load 0x0000be00 from memory into f27
li x3, 0x96cdd3608959a3ec # load x3 with value 0x96cdd3608959a3ec
sw x3, 0(x2) # store 0x96cdd3608959a3ec in memory
flh f26, 0(x2) # load 0x96cdd3608959a3ec from memory into f26
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f13, 0(x2) # load 0x00007e00 from memory into f13
fnmadd.h f17, f27, f26, f13, dyn # perform operation
fnmadd.h f17, f27, f26, f13, rdn # perform operation
fnmadd.h f17, f27, f26, f13, rmm # perform operation
fnmadd.h f17, f27, f26, f13, rne # perform operation
fnmadd.h f17, f27, f26, f13, rtz # perform operation
fnmadd.h f17, f27, f26, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f17, f27, f26, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f17, f27, f26, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f17, f27, f26, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f17, f27, f26, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f17, f27, f26, f13 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbe00 fs3 = 0x7fff)
li x7, 0x2a49ba9a26e4d696 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f10, 0(x2) # load 0x0000be00 from memory into f10
li x3, 0x40971203d52df006 # load x3 with value 0x40971203d52df006
sw x3, 0(x2) # store 0x40971203d52df006 in memory
flh f20, 0(x2) # load 0x40971203d52df006 from memory into f20
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f19, 0(x2) # load 0x00007fff from memory into f19
fnmadd.h f7, f10, f20, f19, dyn # perform operation
fnmadd.h f7, f10, f20, f19, rdn # perform operation
fnmadd.h f7, f10, f20, f19, rmm # perform operation
fnmadd.h f7, f10, f20, f19, rne # perform operation
fnmadd.h f7, f10, f20, f19, rtz # perform operation
fnmadd.h f7, f10, f20, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f7, f10, f20, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f7, f10, f20, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f7, f10, f20, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f7, f10, f20, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f7, f10, f20, f19 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbe00 fs3 = 0x7c01)
li x23, 0x5907951ffded2aa4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f2, 0(x2) # load 0x0000be00 from memory into f2
li x3, 0xe59d4feb75141dc2 # load x3 with value 0xe59d4feb75141dc2
sw x3, 0(x2) # store 0xe59d4feb75141dc2 in memory
flh f8, 0(x2) # load 0xe59d4feb75141dc2 from memory into f8
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f31, 0(x2) # load 0x00007c01 from memory into f31
fnmadd.h f23, f2, f8, f31, dyn # perform operation
fnmadd.h f23, f2, f8, f31, rdn # perform operation
fnmadd.h f23, f2, f8, f31, rmm # perform operation
fnmadd.h f23, f2, f8, f31, rne # perform operation
fnmadd.h f23, f2, f8, f31, rtz # perform operation
fnmadd.h f23, f2, f8, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f23, f2, f8, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f23, f2, f8, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f23, f2, f8, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f23, f2, f8, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f23, f2, f8, f31 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbe00 fs3 = 0x7dff)
li x13, 0x94c5e8a16e37fa40 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f3, 0(x2) # load 0x0000be00 from memory into f3
li x3, 0x3957060711d89cfc # load x3 with value 0x3957060711d89cfc
sw x3, 0(x2) # store 0x3957060711d89cfc in memory
flh f16, 0(x2) # load 0x3957060711d89cfc from memory into f16
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f15, 0(x2) # load 0x00007dff from memory into f15
fnmadd.h f13, f3, f16, f15, dyn # perform operation
fnmadd.h f13, f3, f16, f15, rdn # perform operation
fnmadd.h f13, f3, f16, f15, rmm # perform operation
fnmadd.h f13, f3, f16, f15, rne # perform operation
fnmadd.h f13, f3, f16, f15, rtz # perform operation
fnmadd.h f13, f3, f16, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f13, f3, f16, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f13, f3, f16, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f13, f3, f16, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f13, f3, f16, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f13, f3, f16, f15 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbe00 fs3 = 0x58b4)
li x17, 0x062d9a0ae2f4426b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f28, 0(x2) # load 0x0000be00 from memory into f28
li x3, 0xbc37451eb86b6376 # load x3 with value 0xbc37451eb86b6376
sw x3, 0(x2) # store 0xbc37451eb86b6376 in memory
flh f20, 0(x2) # load 0xbc37451eb86b6376 from memory into f20
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f19, 0(x2) # load 0x000058b4 from memory into f19
fnmadd.h f17, f28, f20, f19, dyn # perform operation
fnmadd.h f17, f28, f20, f19, rdn # perform operation
fnmadd.h f17, f28, f20, f19, rmm # perform operation
fnmadd.h f17, f28, f20, f19, rne # perform operation
fnmadd.h f17, f28, f20, f19, rtz # perform operation
fnmadd.h f17, f28, f20, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f17, f28, f20, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f17, f28, f20, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f17, f28, f20, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f17, f28, f20, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f17, f28, f20, f19 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbe00 fs3 = 0xc93a)
li x3, 0x855339761ce1c616 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f27, 0(x2) # load 0x0000be00 from memory into f27
li x3, 0x600db0e530086bb9 # load x3 with value 0x600db0e530086bb9
sw x3, 0(x2) # store 0x600db0e530086bb9 in memory
flh f5, 0(x2) # load 0x600db0e530086bb9 from memory into f5
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f30, 0(x2) # load 0x0000c93a from memory into f30
fnmadd.h f3, f27, f5, f30, dyn # perform operation
fnmadd.h f3, f27, f5, f30, rdn # perform operation
fnmadd.h f3, f27, f5, f30, rmm # perform operation
fnmadd.h f3, f27, f5, f30, rne # perform operation
fnmadd.h f3, f27, f5, f30, rtz # perform operation
fnmadd.h f3, f27, f5, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f3, f27, f5, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f3, f27, f5, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f3, f27, f5, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f3, f27, f5, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f3, f27, f5, f30 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x4000 fs3 = 0x0)
li x26, 0x4c5fe0ff375cc8e2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f9, 0(x2) # load 0x00004000 from memory into f9
li x3, 0xbd2961b76a0496f4 # load x3 with value 0xbd2961b76a0496f4
sw x3, 0(x2) # store 0xbd2961b76a0496f4 in memory
flh f12, 0(x2) # load 0xbd2961b76a0496f4 from memory into f12
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f31, 0(x2) # load 0x00000000 from memory into f31
fnmadd.h f26, f9, f12, f31, dyn # perform operation
fnmadd.h f26, f9, f12, f31, rdn # perform operation
fnmadd.h f26, f9, f12, f31, rmm # perform operation
fnmadd.h f26, f9, f12, f31, rne # perform operation
fnmadd.h f26, f9, f12, f31, rtz # perform operation
fnmadd.h f26, f9, f12, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f26, f9, f12, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f26, f9, f12, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f26, f9, f12, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f26, f9, f12, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f26, f9, f12, f31 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x4000 fs3 = 0x8000)
li x12, 0x3a2e76bff328f321 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f29, 0(x2) # load 0x00004000 from memory into f29
li x3, 0xfa3def24313a0c97 # load x3 with value 0xfa3def24313a0c97
sw x3, 0(x2) # store 0xfa3def24313a0c97 in memory
flh f22, 0(x2) # load 0xfa3def24313a0c97 from memory into f22
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f21, 0(x2) # load 0x00008000 from memory into f21
fnmadd.h f12, f29, f22, f21, dyn # perform operation
fnmadd.h f12, f29, f22, f21, rdn # perform operation
fnmadd.h f12, f29, f22, f21, rmm # perform operation
fnmadd.h f12, f29, f22, f21, rne # perform operation
fnmadd.h f12, f29, f22, f21, rtz # perform operation
fnmadd.h f12, f29, f22, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f12, f29, f22, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f12, f29, f22, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f12, f29, f22, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f12, f29, f22, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f12, f29, f22, f21 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x4000 fs3 = 0x3c00)
li x11, 0xf9244469704e4bee # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f30, 0(x2) # load 0x00004000 from memory into f30
li x3, 0xdf08320ffcd60890 # load x3 with value 0xdf08320ffcd60890
sw x3, 0(x2) # store 0xdf08320ffcd60890 in memory
flh f17, 0(x2) # load 0xdf08320ffcd60890 from memory into f17
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f1, 0(x2) # load 0x00003c00 from memory into f1
fnmadd.h f11, f30, f17, f1, dyn # perform operation
fnmadd.h f11, f30, f17, f1, rdn # perform operation
fnmadd.h f11, f30, f17, f1, rmm # perform operation
fnmadd.h f11, f30, f17, f1, rne # perform operation
fnmadd.h f11, f30, f17, f1, rtz # perform operation
fnmadd.h f11, f30, f17, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f11, f30, f17, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f11, f30, f17, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f11, f30, f17, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f11, f30, f17, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f11, f30, f17, f1 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x4000 fs3 = 0xbc00)
li x13, 0x994696cf4f68f624 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f16, 0(x2) # load 0x00004000 from memory into f16
li x3, 0x51918e301e349271 # load x3 with value 0x51918e301e349271
sw x3, 0(x2) # store 0x51918e301e349271 in memory
flh f10, 0(x2) # load 0x51918e301e349271 from memory into f10
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f20, 0(x2) # load 0x0000bc00 from memory into f20
fnmadd.h f13, f16, f10, f20, dyn # perform operation
fnmadd.h f13, f16, f10, f20, rdn # perform operation
fnmadd.h f13, f16, f10, f20, rmm # perform operation
fnmadd.h f13, f16, f10, f20, rne # perform operation
fnmadd.h f13, f16, f10, f20, rtz # perform operation
fnmadd.h f13, f16, f10, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f13, f16, f10, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f13, f16, f10, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f13, f16, f10, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f13, f16, f10, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f13, f16, f10, f20 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x4000 fs3 = 0x3e00)
li x6, 0x924bc1fef2ebf4a9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f27, 0(x2) # load 0x00004000 from memory into f27
li x3, 0x5d78295f509883bc # load x3 with value 0x5d78295f509883bc
sw x3, 0(x2) # store 0x5d78295f509883bc in memory
flh f7, 0(x2) # load 0x5d78295f509883bc from memory into f7
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f13, 0(x2) # load 0x00003e00 from memory into f13
fnmadd.h f6, f27, f7, f13, dyn # perform operation
fnmadd.h f6, f27, f7, f13, rdn # perform operation
fnmadd.h f6, f27, f7, f13, rmm # perform operation
fnmadd.h f6, f27, f7, f13, rne # perform operation
fnmadd.h f6, f27, f7, f13, rtz # perform operation
fnmadd.h f6, f27, f7, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f6, f27, f7, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f6, f27, f7, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f6, f27, f7, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f6, f27, f7, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f6, f27, f7, f13 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x4000 fs3 = 0xbe00)
li x31, 0x454b50888caac422 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f8, 0(x2) # load 0x00004000 from memory into f8
li x3, 0xa0bc34eeeabf3f4b # load x3 with value 0xa0bc34eeeabf3f4b
sw x3, 0(x2) # store 0xa0bc34eeeabf3f4b in memory
flh f10, 0(x2) # load 0xa0bc34eeeabf3f4b from memory into f10
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f1, 0(x2) # load 0x0000be00 from memory into f1
fnmadd.h f31, f8, f10, f1, dyn # perform operation
fnmadd.h f31, f8, f10, f1, rdn # perform operation
fnmadd.h f31, f8, f10, f1, rmm # perform operation
fnmadd.h f31, f8, f10, f1, rne # perform operation
fnmadd.h f31, f8, f10, f1, rtz # perform operation
fnmadd.h f31, f8, f10, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f31, f8, f10, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f31, f8, f10, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f31, f8, f10, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f31, f8, f10, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f31, f8, f10, f1 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x4000 fs3 = 0x4000)
li x13, 0x592bde51076bedf1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f16, 0(x2) # load 0x00004000 from memory into f16
li x3, 0x9ed3611c248c4c34 # load x3 with value 0x9ed3611c248c4c34
sw x3, 0(x2) # store 0x9ed3611c248c4c34 in memory
flh f24, 0(x2) # load 0x9ed3611c248c4c34 from memory into f24
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f14, 0(x2) # load 0x00004000 from memory into f14
fnmadd.h f13, f16, f24, f14, dyn # perform operation
fnmadd.h f13, f16, f24, f14, rdn # perform operation
fnmadd.h f13, f16, f24, f14, rmm # perform operation
fnmadd.h f13, f16, f24, f14, rne # perform operation
fnmadd.h f13, f16, f24, f14, rtz # perform operation
fnmadd.h f13, f16, f24, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f13, f16, f24, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f13, f16, f24, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f13, f16, f24, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f13, f16, f24, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f13, f16, f24, f14 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x4000 fs3 = 0xc000)
li x31, 0x8399c8387b269eb2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f16, 0(x2) # load 0x00004000 from memory into f16
li x3, 0x6e8c4843247425b3 # load x3 with value 0x6e8c4843247425b3
sw x3, 0(x2) # store 0x6e8c4843247425b3 in memory
flh f6, 0(x2) # load 0x6e8c4843247425b3 from memory into f6
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f25, 0(x2) # load 0x0000c000 from memory into f25
fnmadd.h f31, f16, f6, f25, dyn # perform operation
fnmadd.h f31, f16, f6, f25, rdn # perform operation
fnmadd.h f31, f16, f6, f25, rmm # perform operation
fnmadd.h f31, f16, f6, f25, rne # perform operation
fnmadd.h f31, f16, f6, f25, rtz # perform operation
fnmadd.h f31, f16, f6, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f31, f16, f6, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f31, f16, f6, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f31, f16, f6, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f31, f16, f6, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f31, f16, f6, f25 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x4000 fs3 = 0x400)
li x1, 0x95046798ecbb4375 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f25, 0(x2) # load 0x00004000 from memory into f25
li x3, 0x19ee60d008e32ed1 # load x3 with value 0x19ee60d008e32ed1
sw x3, 0(x2) # store 0x19ee60d008e32ed1 in memory
flh f14, 0(x2) # load 0x19ee60d008e32ed1 from memory into f14
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f15, 0(x2) # load 0x00000400 from memory into f15
fnmadd.h f1, f25, f14, f15, dyn # perform operation
fnmadd.h f1, f25, f14, f15, rdn # perform operation
fnmadd.h f1, f25, f14, f15, rmm # perform operation
fnmadd.h f1, f25, f14, f15, rne # perform operation
fnmadd.h f1, f25, f14, f15, rtz # perform operation
fnmadd.h f1, f25, f14, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f1, f25, f14, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f1, f25, f14, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f1, f25, f14, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f1, f25, f14, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f1, f25, f14, f15 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x4000 fs3 = 0x8400)
li x16, 0xdc23c61633031999 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f1, 0(x2) # load 0x00004000 from memory into f1
li x3, 0xbd30fcbd81b8678a # load x3 with value 0xbd30fcbd81b8678a
sw x3, 0(x2) # store 0xbd30fcbd81b8678a in memory
flh f18, 0(x2) # load 0xbd30fcbd81b8678a from memory into f18
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f28, 0(x2) # load 0x00008400 from memory into f28
fnmadd.h f16, f1, f18, f28, dyn # perform operation
fnmadd.h f16, f1, f18, f28, rdn # perform operation
fnmadd.h f16, f1, f18, f28, rmm # perform operation
fnmadd.h f16, f1, f18, f28, rne # perform operation
fnmadd.h f16, f1, f18, f28, rtz # perform operation
fnmadd.h f16, f1, f18, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f16, f1, f18, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f16, f1, f18, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f16, f1, f18, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f16, f1, f18, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f16, f1, f18, f28 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x4000 fs3 = 0x7bff)
li x28, 0x1d3905da934b3932 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f14, 0(x2) # load 0x00004000 from memory into f14
li x3, 0xdc2742bfd406bbc1 # load x3 with value 0xdc2742bfd406bbc1
sw x3, 0(x2) # store 0xdc2742bfd406bbc1 in memory
flh f18, 0(x2) # load 0xdc2742bfd406bbc1 from memory into f18
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f19, 0(x2) # load 0x00007bff from memory into f19
fnmadd.h f28, f14, f18, f19, dyn # perform operation
fnmadd.h f28, f14, f18, f19, rdn # perform operation
fnmadd.h f28, f14, f18, f19, rmm # perform operation
fnmadd.h f28, f14, f18, f19, rne # perform operation
fnmadd.h f28, f14, f18, f19, rtz # perform operation
fnmadd.h f28, f14, f18, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f28, f14, f18, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f28, f14, f18, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f28, f14, f18, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f28, f14, f18, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f28, f14, f18, f19 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x4000 fs3 = 0xfbff)
li x12, 0x8a9af095eb81671d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f18, 0(x2) # load 0x00004000 from memory into f18
li x3, 0x4da5f53f530cb46 # load x3 with value 0x4da5f53f530cb46
sw x3, 0(x2) # store 0x4da5f53f530cb46 in memory
flh f22, 0(x2) # load 0x4da5f53f530cb46 from memory into f22
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f28, 0(x2) # load 0x0000fbff from memory into f28
fnmadd.h f12, f18, f22, f28, dyn # perform operation
fnmadd.h f12, f18, f22, f28, rdn # perform operation
fnmadd.h f12, f18, f22, f28, rmm # perform operation
fnmadd.h f12, f18, f22, f28, rne # perform operation
fnmadd.h f12, f18, f22, f28, rtz # perform operation
fnmadd.h f12, f18, f22, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f12, f18, f22, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f12, f18, f22, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f12, f18, f22, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f12, f18, f22, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f12, f18, f22, f28 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x4000 fs3 = 0x3ff)
li x21, 0xac4fc7acf61aeef3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f26, 0(x2) # load 0x00004000 from memory into f26
li x3, 0x6b03989246a27c8f # load x3 with value 0x6b03989246a27c8f
sw x3, 0(x2) # store 0x6b03989246a27c8f in memory
flh f12, 0(x2) # load 0x6b03989246a27c8f from memory into f12
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f28, 0(x2) # load 0x000003ff from memory into f28
fnmadd.h f21, f26, f12, f28, dyn # perform operation
fnmadd.h f21, f26, f12, f28, rdn # perform operation
fnmadd.h f21, f26, f12, f28, rmm # perform operation
fnmadd.h f21, f26, f12, f28, rne # perform operation
fnmadd.h f21, f26, f12, f28, rtz # perform operation
fnmadd.h f21, f26, f12, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f21, f26, f12, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f21, f26, f12, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f21, f26, f12, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f21, f26, f12, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f21, f26, f12, f28 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x4000 fs3 = 0x83ff)
li x23, 0x914ff545ad8b63a2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f25, 0(x2) # load 0x00004000 from memory into f25
li x3, 0xbe52aa11b260f9 # load x3 with value 0xbe52aa11b260f9
sw x3, 0(x2) # store 0xbe52aa11b260f9 in memory
flh f31, 0(x2) # load 0xbe52aa11b260f9 from memory into f31
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f7, 0(x2) # load 0x000083ff from memory into f7
fnmadd.h f23, f25, f31, f7, dyn # perform operation
fnmadd.h f23, f25, f31, f7, rdn # perform operation
fnmadd.h f23, f25, f31, f7, rmm # perform operation
fnmadd.h f23, f25, f31, f7, rne # perform operation
fnmadd.h f23, f25, f31, f7, rtz # perform operation
fnmadd.h f23, f25, f31, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f23, f25, f31, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f23, f25, f31, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f23, f25, f31, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f23, f25, f31, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f23, f25, f31, f7 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x4000 fs3 = 0x200)
li x1, 0x2a01b80df33a6e50 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f10, 0(x2) # load 0x00004000 from memory into f10
li x3, 0xc610d2fe547d46cf # load x3 with value 0xc610d2fe547d46cf
sw x3, 0(x2) # store 0xc610d2fe547d46cf in memory
flh f12, 0(x2) # load 0xc610d2fe547d46cf from memory into f12
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f21, 0(x2) # load 0x00000200 from memory into f21
fnmadd.h f1, f10, f12, f21, dyn # perform operation
fnmadd.h f1, f10, f12, f21, rdn # perform operation
fnmadd.h f1, f10, f12, f21, rmm # perform operation
fnmadd.h f1, f10, f12, f21, rne # perform operation
fnmadd.h f1, f10, f12, f21, rtz # perform operation
fnmadd.h f1, f10, f12, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f1, f10, f12, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f1, f10, f12, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f1, f10, f12, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f1, f10, f12, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f1, f10, f12, f21 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x4000 fs3 = 0x8200)
li x26, 0x763e2bfee1337f5f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f3, 0(x2) # load 0x00004000 from memory into f3
li x3, 0x3b9230a470961fff # load x3 with value 0x3b9230a470961fff
sw x3, 0(x2) # store 0x3b9230a470961fff in memory
flh f8, 0(x2) # load 0x3b9230a470961fff from memory into f8
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f29, 0(x2) # load 0x00008200 from memory into f29
fnmadd.h f26, f3, f8, f29, dyn # perform operation
fnmadd.h f26, f3, f8, f29, rdn # perform operation
fnmadd.h f26, f3, f8, f29, rmm # perform operation
fnmadd.h f26, f3, f8, f29, rne # perform operation
fnmadd.h f26, f3, f8, f29, rtz # perform operation
fnmadd.h f26, f3, f8, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f26, f3, f8, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f26, f3, f8, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f26, f3, f8, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f26, f3, f8, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f26, f3, f8, f29 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x4000 fs3 = 0x1)
li x1, 0xe1190c7e4f9000e7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f29, 0(x2) # load 0x00004000 from memory into f29
li x3, 0x1da3d222b8f2ea9f # load x3 with value 0x1da3d222b8f2ea9f
sw x3, 0(x2) # store 0x1da3d222b8f2ea9f in memory
flh f27, 0(x2) # load 0x1da3d222b8f2ea9f from memory into f27
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f9, 0(x2) # load 0x00000001 from memory into f9
fnmadd.h f1, f29, f27, f9, dyn # perform operation
fnmadd.h f1, f29, f27, f9, rdn # perform operation
fnmadd.h f1, f29, f27, f9, rmm # perform operation
fnmadd.h f1, f29, f27, f9, rne # perform operation
fnmadd.h f1, f29, f27, f9, rtz # perform operation
fnmadd.h f1, f29, f27, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f1, f29, f27, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f1, f29, f27, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f1, f29, f27, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f1, f29, f27, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f1, f29, f27, f9 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x4000 fs3 = 0x8001)
li x22, 0x8a3d027eb3317620 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f9, 0(x2) # load 0x00004000 from memory into f9
li x3, 0xf5b7d7512374d4ed # load x3 with value 0xf5b7d7512374d4ed
sw x3, 0(x2) # store 0xf5b7d7512374d4ed in memory
flh f21, 0(x2) # load 0xf5b7d7512374d4ed from memory into f21
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f29, 0(x2) # load 0x00008001 from memory into f29
fnmadd.h f22, f9, f21, f29, dyn # perform operation
fnmadd.h f22, f9, f21, f29, rdn # perform operation
fnmadd.h f22, f9, f21, f29, rmm # perform operation
fnmadd.h f22, f9, f21, f29, rne # perform operation
fnmadd.h f22, f9, f21, f29, rtz # perform operation
fnmadd.h f22, f9, f21, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f22, f9, f21, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f22, f9, f21, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f22, f9, f21, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f22, f9, f21, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f22, f9, f21, f29 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x4000 fs3 = 0x7c00)
li x2, 0xb13f53a16584bd9c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f27, 0(x2) # load 0x00004000 from memory into f27
li x3, 0x7b999e11a1851a9b # load x3 with value 0x7b999e11a1851a9b
sw x3, 0(x2) # store 0x7b999e11a1851a9b in memory
flh f1, 0(x2) # load 0x7b999e11a1851a9b from memory into f1
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f10, 0(x2) # load 0x00007c00 from memory into f10
fnmadd.h f2, f27, f1, f10, dyn # perform operation
fnmadd.h f2, f27, f1, f10, rdn # perform operation
fnmadd.h f2, f27, f1, f10, rmm # perform operation
fnmadd.h f2, f27, f1, f10, rne # perform operation
fnmadd.h f2, f27, f1, f10, rtz # perform operation
fnmadd.h f2, f27, f1, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f2, f27, f1, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f2, f27, f1, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f2, f27, f1, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f2, f27, f1, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f2, f27, f1, f10 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x4000 fs3 = 0xfc00)
li x30, 0x4ef6007d58e1b39a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f31, 0(x2) # load 0x00004000 from memory into f31
li x3, 0xfe64bc39e28390f6 # load x3 with value 0xfe64bc39e28390f6
sw x3, 0(x2) # store 0xfe64bc39e28390f6 in memory
flh f3, 0(x2) # load 0xfe64bc39e28390f6 from memory into f3
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f23, 0(x2) # load 0x0000fc00 from memory into f23
fnmadd.h f30, f31, f3, f23, dyn # perform operation
fnmadd.h f30, f31, f3, f23, rdn # perform operation
fnmadd.h f30, f31, f3, f23, rmm # perform operation
fnmadd.h f30, f31, f3, f23, rne # perform operation
fnmadd.h f30, f31, f3, f23, rtz # perform operation
fnmadd.h f30, f31, f3, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f30, f31, f3, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f30, f31, f3, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f30, f31, f3, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f30, f31, f3, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f30, f31, f3, f23 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x4000 fs3 = 0x7e00)
li x26, 0x21a1bcb38bc4e00d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f11, 0(x2) # load 0x00004000 from memory into f11
li x3, 0x410807281e66e258 # load x3 with value 0x410807281e66e258
sw x3, 0(x2) # store 0x410807281e66e258 in memory
flh f28, 0(x2) # load 0x410807281e66e258 from memory into f28
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f16, 0(x2) # load 0x00007e00 from memory into f16
fnmadd.h f26, f11, f28, f16, dyn # perform operation
fnmadd.h f26, f11, f28, f16, rdn # perform operation
fnmadd.h f26, f11, f28, f16, rmm # perform operation
fnmadd.h f26, f11, f28, f16, rne # perform operation
fnmadd.h f26, f11, f28, f16, rtz # perform operation
fnmadd.h f26, f11, f28, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f26, f11, f28, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f26, f11, f28, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f26, f11, f28, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f26, f11, f28, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f26, f11, f28, f16 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x4000 fs3 = 0x7fff)
li x26, 0xb79d9d7ba6f0b634 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f28, 0(x2) # load 0x00004000 from memory into f28
li x3, 0xb6dd19667b606af9 # load x3 with value 0xb6dd19667b606af9
sw x3, 0(x2) # store 0xb6dd19667b606af9 in memory
flh f25, 0(x2) # load 0xb6dd19667b606af9 from memory into f25
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f11, 0(x2) # load 0x00007fff from memory into f11
fnmadd.h f26, f28, f25, f11, dyn # perform operation
fnmadd.h f26, f28, f25, f11, rdn # perform operation
fnmadd.h f26, f28, f25, f11, rmm # perform operation
fnmadd.h f26, f28, f25, f11, rne # perform operation
fnmadd.h f26, f28, f25, f11, rtz # perform operation
fnmadd.h f26, f28, f25, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f26, f28, f25, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f26, f28, f25, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f26, f28, f25, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f26, f28, f25, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f26, f28, f25, f11 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x4000 fs3 = 0x7c01)
li x4, 0x43c27108f725db1c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f18, 0(x2) # load 0x00004000 from memory into f18
li x3, 0xc7aa6b05bf655791 # load x3 with value 0xc7aa6b05bf655791
sw x3, 0(x2) # store 0xc7aa6b05bf655791 in memory
flh f16, 0(x2) # load 0xc7aa6b05bf655791 from memory into f16
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f5, 0(x2) # load 0x00007c01 from memory into f5
fnmadd.h f4, f18, f16, f5, dyn # perform operation
fnmadd.h f4, f18, f16, f5, rdn # perform operation
fnmadd.h f4, f18, f16, f5, rmm # perform operation
fnmadd.h f4, f18, f16, f5, rne # perform operation
fnmadd.h f4, f18, f16, f5, rtz # perform operation
fnmadd.h f4, f18, f16, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f4, f18, f16, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f4, f18, f16, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f4, f18, f16, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f4, f18, f16, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f4, f18, f16, f5 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x4000 fs3 = 0x7dff)
li x24, 0xef4c7ca83b3a959d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f19, 0(x2) # load 0x00004000 from memory into f19
li x3, 0xfff4eb572baefb25 # load x3 with value 0xfff4eb572baefb25
sw x3, 0(x2) # store 0xfff4eb572baefb25 in memory
flh f31, 0(x2) # load 0xfff4eb572baefb25 from memory into f31
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f23, 0(x2) # load 0x00007dff from memory into f23
fnmadd.h f24, f19, f31, f23, dyn # perform operation
fnmadd.h f24, f19, f31, f23, rdn # perform operation
fnmadd.h f24, f19, f31, f23, rmm # perform operation
fnmadd.h f24, f19, f31, f23, rne # perform operation
fnmadd.h f24, f19, f31, f23, rtz # perform operation
fnmadd.h f24, f19, f31, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f24, f19, f31, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f24, f19, f31, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f24, f19, f31, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f24, f19, f31, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f24, f19, f31, f23 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x4000 fs3 = 0x58b4)
li x6, 0x3bbe894a81836c0d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f4, 0(x2) # load 0x00004000 from memory into f4
li x3, 0xbb8d609f3729da17 # load x3 with value 0xbb8d609f3729da17
sw x3, 0(x2) # store 0xbb8d609f3729da17 in memory
flh f23, 0(x2) # load 0xbb8d609f3729da17 from memory into f23
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f5, 0(x2) # load 0x000058b4 from memory into f5
fnmadd.h f6, f4, f23, f5, dyn # perform operation
fnmadd.h f6, f4, f23, f5, rdn # perform operation
fnmadd.h f6, f4, f23, f5, rmm # perform operation
fnmadd.h f6, f4, f23, f5, rne # perform operation
fnmadd.h f6, f4, f23, f5, rtz # perform operation
fnmadd.h f6, f4, f23, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f6, f4, f23, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f6, f4, f23, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f6, f4, f23, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f6, f4, f23, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f6, f4, f23, f5 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x4000 fs3 = 0xc93a)
li x9, 0x57508de8d0b529f6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f19, 0(x2) # load 0x00004000 from memory into f19
li x3, 0x5a35e8cff8ded5af # load x3 with value 0x5a35e8cff8ded5af
sw x3, 0(x2) # store 0x5a35e8cff8ded5af in memory
flh f17, 0(x2) # load 0x5a35e8cff8ded5af from memory into f17
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f2, 0(x2) # load 0x0000c93a from memory into f2
fnmadd.h f9, f19, f17, f2, dyn # perform operation
fnmadd.h f9, f19, f17, f2, rdn # perform operation
fnmadd.h f9, f19, f17, f2, rmm # perform operation
fnmadd.h f9, f19, f17, f2, rne # perform operation
fnmadd.h f9, f19, f17, f2, rtz # perform operation
fnmadd.h f9, f19, f17, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f9, f19, f17, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f9, f19, f17, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f9, f19, f17, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f9, f19, f17, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f9, f19, f17, f2 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc000 fs3 = 0x0)
li x2, 0x1e23cc5403c54eb2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f14, 0(x2) # load 0x0000c000 from memory into f14
li x3, 0x2621ada791cf511a # load x3 with value 0x2621ada791cf511a
sw x3, 0(x2) # store 0x2621ada791cf511a in memory
flh f8, 0(x2) # load 0x2621ada791cf511a from memory into f8
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f30, 0(x2) # load 0x00000000 from memory into f30
fnmadd.h f2, f14, f8, f30, dyn # perform operation
fnmadd.h f2, f14, f8, f30, rdn # perform operation
fnmadd.h f2, f14, f8, f30, rmm # perform operation
fnmadd.h f2, f14, f8, f30, rne # perform operation
fnmadd.h f2, f14, f8, f30, rtz # perform operation
fnmadd.h f2, f14, f8, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f2, f14, f8, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f2, f14, f8, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f2, f14, f8, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f2, f14, f8, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f2, f14, f8, f30 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc000 fs3 = 0x8000)
li x19, 0x6d477c2a38b0a9e6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f29, 0(x2) # load 0x0000c000 from memory into f29
li x3, 0x3d4b4522e84d170e # load x3 with value 0x3d4b4522e84d170e
sw x3, 0(x2) # store 0x3d4b4522e84d170e in memory
flh f23, 0(x2) # load 0x3d4b4522e84d170e from memory into f23
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f17, 0(x2) # load 0x00008000 from memory into f17
fnmadd.h f19, f29, f23, f17, dyn # perform operation
fnmadd.h f19, f29, f23, f17, rdn # perform operation
fnmadd.h f19, f29, f23, f17, rmm # perform operation
fnmadd.h f19, f29, f23, f17, rne # perform operation
fnmadd.h f19, f29, f23, f17, rtz # perform operation
fnmadd.h f19, f29, f23, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f19, f29, f23, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f19, f29, f23, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f19, f29, f23, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f19, f29, f23, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f19, f29, f23, f17 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc000 fs3 = 0x3c00)
li x21, 0xed0fd21783adc664 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f5, 0(x2) # load 0x0000c000 from memory into f5
li x3, 0x873621ccb81f665b # load x3 with value 0x873621ccb81f665b
sw x3, 0(x2) # store 0x873621ccb81f665b in memory
flh f17, 0(x2) # load 0x873621ccb81f665b from memory into f17
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f14, 0(x2) # load 0x00003c00 from memory into f14
fnmadd.h f21, f5, f17, f14, dyn # perform operation
fnmadd.h f21, f5, f17, f14, rdn # perform operation
fnmadd.h f21, f5, f17, f14, rmm # perform operation
fnmadd.h f21, f5, f17, f14, rne # perform operation
fnmadd.h f21, f5, f17, f14, rtz # perform operation
fnmadd.h f21, f5, f17, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f21, f5, f17, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f21, f5, f17, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f21, f5, f17, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f21, f5, f17, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f21, f5, f17, f14 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc000 fs3 = 0xbc00)
li x2, 0x1d42ab5e4966c1a3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f6, 0(x2) # load 0x0000c000 from memory into f6
li x3, 0x2969d7d37fd45f6 # load x3 with value 0x2969d7d37fd45f6
sw x3, 0(x2) # store 0x2969d7d37fd45f6 in memory
flh f7, 0(x2) # load 0x2969d7d37fd45f6 from memory into f7
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f29, 0(x2) # load 0x0000bc00 from memory into f29
fnmadd.h f2, f6, f7, f29, dyn # perform operation
fnmadd.h f2, f6, f7, f29, rdn # perform operation
fnmadd.h f2, f6, f7, f29, rmm # perform operation
fnmadd.h f2, f6, f7, f29, rne # perform operation
fnmadd.h f2, f6, f7, f29, rtz # perform operation
fnmadd.h f2, f6, f7, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f2, f6, f7, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f2, f6, f7, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f2, f6, f7, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f2, f6, f7, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f2, f6, f7, f29 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc000 fs3 = 0x3e00)
li x17, 0x947f2e05448f8557 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f20, 0(x2) # load 0x0000c000 from memory into f20
li x3, 0xed6ad0924e3245c # load x3 with value 0xed6ad0924e3245c
sw x3, 0(x2) # store 0xed6ad0924e3245c in memory
flh f11, 0(x2) # load 0xed6ad0924e3245c from memory into f11
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f27, 0(x2) # load 0x00003e00 from memory into f27
fnmadd.h f17, f20, f11, f27, dyn # perform operation
fnmadd.h f17, f20, f11, f27, rdn # perform operation
fnmadd.h f17, f20, f11, f27, rmm # perform operation
fnmadd.h f17, f20, f11, f27, rne # perform operation
fnmadd.h f17, f20, f11, f27, rtz # perform operation
fnmadd.h f17, f20, f11, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f17, f20, f11, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f17, f20, f11, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f17, f20, f11, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f17, f20, f11, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f17, f20, f11, f27 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc000 fs3 = 0xbe00)
li x23, 0x048a2580c2fd797a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f19, 0(x2) # load 0x0000c000 from memory into f19
li x3, 0xa13879d481e9e51e # load x3 with value 0xa13879d481e9e51e
sw x3, 0(x2) # store 0xa13879d481e9e51e in memory
flh f2, 0(x2) # load 0xa13879d481e9e51e from memory into f2
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f30, 0(x2) # load 0x0000be00 from memory into f30
fnmadd.h f23, f19, f2, f30, dyn # perform operation
fnmadd.h f23, f19, f2, f30, rdn # perform operation
fnmadd.h f23, f19, f2, f30, rmm # perform operation
fnmadd.h f23, f19, f2, f30, rne # perform operation
fnmadd.h f23, f19, f2, f30, rtz # perform operation
fnmadd.h f23, f19, f2, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f23, f19, f2, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f23, f19, f2, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f23, f19, f2, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f23, f19, f2, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f23, f19, f2, f30 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc000 fs3 = 0x4000)
li x27, 0x251ab1b2a2aeb4cb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f31, 0(x2) # load 0x0000c000 from memory into f31
li x3, 0x647e21e331d0843 # load x3 with value 0x647e21e331d0843
sw x3, 0(x2) # store 0x647e21e331d0843 in memory
flh f11, 0(x2) # load 0x647e21e331d0843 from memory into f11
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f22, 0(x2) # load 0x00004000 from memory into f22
fnmadd.h f27, f31, f11, f22, dyn # perform operation
fnmadd.h f27, f31, f11, f22, rdn # perform operation
fnmadd.h f27, f31, f11, f22, rmm # perform operation
fnmadd.h f27, f31, f11, f22, rne # perform operation
fnmadd.h f27, f31, f11, f22, rtz # perform operation
fnmadd.h f27, f31, f11, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f27, f31, f11, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f27, f31, f11, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f27, f31, f11, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f27, f31, f11, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f27, f31, f11, f22 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc000 fs3 = 0xc000)
li x25, 0xa8b1f458e46d2916 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f30, 0(x2) # load 0x0000c000 from memory into f30
li x3, 0x5056270cf80aa748 # load x3 with value 0x5056270cf80aa748
sw x3, 0(x2) # store 0x5056270cf80aa748 in memory
flh f10, 0(x2) # load 0x5056270cf80aa748 from memory into f10
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f2, 0(x2) # load 0x0000c000 from memory into f2
fnmadd.h f25, f30, f10, f2, dyn # perform operation
fnmadd.h f25, f30, f10, f2, rdn # perform operation
fnmadd.h f25, f30, f10, f2, rmm # perform operation
fnmadd.h f25, f30, f10, f2, rne # perform operation
fnmadd.h f25, f30, f10, f2, rtz # perform operation
fnmadd.h f25, f30, f10, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f25, f30, f10, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f25, f30, f10, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f25, f30, f10, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f25, f30, f10, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f25, f30, f10, f2 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc000 fs3 = 0x400)
li x20, 0x60c54033d4651d1c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f9, 0(x2) # load 0x0000c000 from memory into f9
li x3, 0x30a5ab7ea1b36cc6 # load x3 with value 0x30a5ab7ea1b36cc6
sw x3, 0(x2) # store 0x30a5ab7ea1b36cc6 in memory
flh f15, 0(x2) # load 0x30a5ab7ea1b36cc6 from memory into f15
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f30, 0(x2) # load 0x00000400 from memory into f30
fnmadd.h f20, f9, f15, f30, dyn # perform operation
fnmadd.h f20, f9, f15, f30, rdn # perform operation
fnmadd.h f20, f9, f15, f30, rmm # perform operation
fnmadd.h f20, f9, f15, f30, rne # perform operation
fnmadd.h f20, f9, f15, f30, rtz # perform operation
fnmadd.h f20, f9, f15, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f20, f9, f15, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f20, f9, f15, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f20, f9, f15, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f20, f9, f15, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f20, f9, f15, f30 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc000 fs3 = 0x8400)
li x25, 0x64129f0506b17180 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f3, 0(x2) # load 0x0000c000 from memory into f3
li x3, 0x48a9bb927e101302 # load x3 with value 0x48a9bb927e101302
sw x3, 0(x2) # store 0x48a9bb927e101302 in memory
flh f2, 0(x2) # load 0x48a9bb927e101302 from memory into f2
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f27, 0(x2) # load 0x00008400 from memory into f27
fnmadd.h f25, f3, f2, f27, dyn # perform operation
fnmadd.h f25, f3, f2, f27, rdn # perform operation
fnmadd.h f25, f3, f2, f27, rmm # perform operation
fnmadd.h f25, f3, f2, f27, rne # perform operation
fnmadd.h f25, f3, f2, f27, rtz # perform operation
fnmadd.h f25, f3, f2, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f25, f3, f2, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f25, f3, f2, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f25, f3, f2, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f25, f3, f2, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f25, f3, f2, f27 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc000 fs3 = 0x7bff)
li x13, 0xe69b9d5971888fc1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f9, 0(x2) # load 0x0000c000 from memory into f9
li x3, 0x11e1fb5c69c8df96 # load x3 with value 0x11e1fb5c69c8df96
sw x3, 0(x2) # store 0x11e1fb5c69c8df96 in memory
flh f26, 0(x2) # load 0x11e1fb5c69c8df96 from memory into f26
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f20, 0(x2) # load 0x00007bff from memory into f20
fnmadd.h f13, f9, f26, f20, dyn # perform operation
fnmadd.h f13, f9, f26, f20, rdn # perform operation
fnmadd.h f13, f9, f26, f20, rmm # perform operation
fnmadd.h f13, f9, f26, f20, rne # perform operation
fnmadd.h f13, f9, f26, f20, rtz # perform operation
fnmadd.h f13, f9, f26, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f13, f9, f26, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f13, f9, f26, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f13, f9, f26, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f13, f9, f26, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f13, f9, f26, f20 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc000 fs3 = 0xfbff)
li x2, 0x823aaa9ceac01cc0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f18, 0(x2) # load 0x0000c000 from memory into f18
li x3, 0x148a0db709540bd3 # load x3 with value 0x148a0db709540bd3
sw x3, 0(x2) # store 0x148a0db709540bd3 in memory
flh f3, 0(x2) # load 0x148a0db709540bd3 from memory into f3
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f19, 0(x2) # load 0x0000fbff from memory into f19
fnmadd.h f2, f18, f3, f19, dyn # perform operation
fnmadd.h f2, f18, f3, f19, rdn # perform operation
fnmadd.h f2, f18, f3, f19, rmm # perform operation
fnmadd.h f2, f18, f3, f19, rne # perform operation
fnmadd.h f2, f18, f3, f19, rtz # perform operation
fnmadd.h f2, f18, f3, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f2, f18, f3, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f2, f18, f3, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f2, f18, f3, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f2, f18, f3, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f2, f18, f3, f19 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc000 fs3 = 0x3ff)
li x25, 0x4678aa6e75b966f0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f26, 0(x2) # load 0x0000c000 from memory into f26
li x3, 0x7695ebf6046c6e35 # load x3 with value 0x7695ebf6046c6e35
sw x3, 0(x2) # store 0x7695ebf6046c6e35 in memory
flh f19, 0(x2) # load 0x7695ebf6046c6e35 from memory into f19
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f16, 0(x2) # load 0x000003ff from memory into f16
fnmadd.h f25, f26, f19, f16, dyn # perform operation
fnmadd.h f25, f26, f19, f16, rdn # perform operation
fnmadd.h f25, f26, f19, f16, rmm # perform operation
fnmadd.h f25, f26, f19, f16, rne # perform operation
fnmadd.h f25, f26, f19, f16, rtz # perform operation
fnmadd.h f25, f26, f19, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f25, f26, f19, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f25, f26, f19, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f25, f26, f19, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f25, f26, f19, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f25, f26, f19, f16 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc000 fs3 = 0x83ff)
li x28, 0x55f4e378105afcfb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f27, 0(x2) # load 0x0000c000 from memory into f27
li x3, 0x4717faa93ebeb4a1 # load x3 with value 0x4717faa93ebeb4a1
sw x3, 0(x2) # store 0x4717faa93ebeb4a1 in memory
flh f7, 0(x2) # load 0x4717faa93ebeb4a1 from memory into f7
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f2, 0(x2) # load 0x000083ff from memory into f2
fnmadd.h f28, f27, f7, f2, dyn # perform operation
fnmadd.h f28, f27, f7, f2, rdn # perform operation
fnmadd.h f28, f27, f7, f2, rmm # perform operation
fnmadd.h f28, f27, f7, f2, rne # perform operation
fnmadd.h f28, f27, f7, f2, rtz # perform operation
fnmadd.h f28, f27, f7, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f28, f27, f7, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f28, f27, f7, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f28, f27, f7, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f28, f27, f7, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f28, f27, f7, f2 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc000 fs3 = 0x200)
li x25, 0xf3cbf560ece33007 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f6, 0(x2) # load 0x0000c000 from memory into f6
li x3, 0xc0db8249b167a7d4 # load x3 with value 0xc0db8249b167a7d4
sw x3, 0(x2) # store 0xc0db8249b167a7d4 in memory
flh f8, 0(x2) # load 0xc0db8249b167a7d4 from memory into f8
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f26, 0(x2) # load 0x00000200 from memory into f26
fnmadd.h f25, f6, f8, f26, dyn # perform operation
fnmadd.h f25, f6, f8, f26, rdn # perform operation
fnmadd.h f25, f6, f8, f26, rmm # perform operation
fnmadd.h f25, f6, f8, f26, rne # perform operation
fnmadd.h f25, f6, f8, f26, rtz # perform operation
fnmadd.h f25, f6, f8, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f25, f6, f8, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f25, f6, f8, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f25, f6, f8, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f25, f6, f8, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f25, f6, f8, f26 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc000 fs3 = 0x8200)
li x23, 0x8db1a9d74e03dbae # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f16, 0(x2) # load 0x0000c000 from memory into f16
li x3, 0x72ff3fd7ce59ae9a # load x3 with value 0x72ff3fd7ce59ae9a
sw x3, 0(x2) # store 0x72ff3fd7ce59ae9a in memory
flh f14, 0(x2) # load 0x72ff3fd7ce59ae9a from memory into f14
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f13, 0(x2) # load 0x00008200 from memory into f13
fnmadd.h f23, f16, f14, f13, dyn # perform operation
fnmadd.h f23, f16, f14, f13, rdn # perform operation
fnmadd.h f23, f16, f14, f13, rmm # perform operation
fnmadd.h f23, f16, f14, f13, rne # perform operation
fnmadd.h f23, f16, f14, f13, rtz # perform operation
fnmadd.h f23, f16, f14, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f23, f16, f14, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f23, f16, f14, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f23, f16, f14, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f23, f16, f14, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f23, f16, f14, f13 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc000 fs3 = 0x1)
li x3, 0x4a59c34290a16594 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f17, 0(x2) # load 0x0000c000 from memory into f17
li x3, 0x1f9bdb94d77d4228 # load x3 with value 0x1f9bdb94d77d4228
sw x3, 0(x2) # store 0x1f9bdb94d77d4228 in memory
flh f30, 0(x2) # load 0x1f9bdb94d77d4228 from memory into f30
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f15, 0(x2) # load 0x00000001 from memory into f15
fnmadd.h f3, f17, f30, f15, dyn # perform operation
fnmadd.h f3, f17, f30, f15, rdn # perform operation
fnmadd.h f3, f17, f30, f15, rmm # perform operation
fnmadd.h f3, f17, f30, f15, rne # perform operation
fnmadd.h f3, f17, f30, f15, rtz # perform operation
fnmadd.h f3, f17, f30, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f3, f17, f30, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f3, f17, f30, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f3, f17, f30, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f3, f17, f30, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f3, f17, f30, f15 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc000 fs3 = 0x8001)
li x11, 0x5a1340429f78719a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f17, 0(x2) # load 0x0000c000 from memory into f17
li x3, 0xdab9f1778f5f60d3 # load x3 with value 0xdab9f1778f5f60d3
sw x3, 0(x2) # store 0xdab9f1778f5f60d3 in memory
flh f20, 0(x2) # load 0xdab9f1778f5f60d3 from memory into f20
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f14, 0(x2) # load 0x00008001 from memory into f14
fnmadd.h f11, f17, f20, f14, dyn # perform operation
fnmadd.h f11, f17, f20, f14, rdn # perform operation
fnmadd.h f11, f17, f20, f14, rmm # perform operation
fnmadd.h f11, f17, f20, f14, rne # perform operation
fnmadd.h f11, f17, f20, f14, rtz # perform operation
fnmadd.h f11, f17, f20, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f11, f17, f20, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f11, f17, f20, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f11, f17, f20, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f11, f17, f20, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f11, f17, f20, f14 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc000 fs3 = 0x7c00)
li x18, 0xb23f2a99688c280e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f10, 0(x2) # load 0x0000c000 from memory into f10
li x3, 0x4037d6cee55f662f # load x3 with value 0x4037d6cee55f662f
sw x3, 0(x2) # store 0x4037d6cee55f662f in memory
flh f29, 0(x2) # load 0x4037d6cee55f662f from memory into f29
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f15, 0(x2) # load 0x00007c00 from memory into f15
fnmadd.h f18, f10, f29, f15, dyn # perform operation
fnmadd.h f18, f10, f29, f15, rdn # perform operation
fnmadd.h f18, f10, f29, f15, rmm # perform operation
fnmadd.h f18, f10, f29, f15, rne # perform operation
fnmadd.h f18, f10, f29, f15, rtz # perform operation
fnmadd.h f18, f10, f29, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f18, f10, f29, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f18, f10, f29, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f18, f10, f29, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f18, f10, f29, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f18, f10, f29, f15 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc000 fs3 = 0xfc00)
li x22, 0xa5f2d6bcc4c6daee # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f10, 0(x2) # load 0x0000c000 from memory into f10
li x3, 0x2f5ab001722ae603 # load x3 with value 0x2f5ab001722ae603
sw x3, 0(x2) # store 0x2f5ab001722ae603 in memory
flh f5, 0(x2) # load 0x2f5ab001722ae603 from memory into f5
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f8, 0(x2) # load 0x0000fc00 from memory into f8
fnmadd.h f22, f10, f5, f8, dyn # perform operation
fnmadd.h f22, f10, f5, f8, rdn # perform operation
fnmadd.h f22, f10, f5, f8, rmm # perform operation
fnmadd.h f22, f10, f5, f8, rne # perform operation
fnmadd.h f22, f10, f5, f8, rtz # perform operation
fnmadd.h f22, f10, f5, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f22, f10, f5, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f22, f10, f5, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f22, f10, f5, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f22, f10, f5, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f22, f10, f5, f8 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc000 fs3 = 0x7e00)
li x22, 0xde8214e96fee28ef # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f21, 0(x2) # load 0x0000c000 from memory into f21
li x3, 0xb84eae5747e4d9c4 # load x3 with value 0xb84eae5747e4d9c4
sw x3, 0(x2) # store 0xb84eae5747e4d9c4 in memory
flh f26, 0(x2) # load 0xb84eae5747e4d9c4 from memory into f26
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f7, 0(x2) # load 0x00007e00 from memory into f7
fnmadd.h f22, f21, f26, f7, dyn # perform operation
fnmadd.h f22, f21, f26, f7, rdn # perform operation
fnmadd.h f22, f21, f26, f7, rmm # perform operation
fnmadd.h f22, f21, f26, f7, rne # perform operation
fnmadd.h f22, f21, f26, f7, rtz # perform operation
fnmadd.h f22, f21, f26, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f22, f21, f26, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f22, f21, f26, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f22, f21, f26, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f22, f21, f26, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f22, f21, f26, f7 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc000 fs3 = 0x7fff)
li x15, 0xff4776b81c0c9fd3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f11, 0(x2) # load 0x0000c000 from memory into f11
li x3, 0x7a9302c3728e33f0 # load x3 with value 0x7a9302c3728e33f0
sw x3, 0(x2) # store 0x7a9302c3728e33f0 in memory
flh f4, 0(x2) # load 0x7a9302c3728e33f0 from memory into f4
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f6, 0(x2) # load 0x00007fff from memory into f6
fnmadd.h f15, f11, f4, f6, dyn # perform operation
fnmadd.h f15, f11, f4, f6, rdn # perform operation
fnmadd.h f15, f11, f4, f6, rmm # perform operation
fnmadd.h f15, f11, f4, f6, rne # perform operation
fnmadd.h f15, f11, f4, f6, rtz # perform operation
fnmadd.h f15, f11, f4, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f15, f11, f4, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f15, f11, f4, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f15, f11, f4, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f15, f11, f4, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f15, f11, f4, f6 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc000 fs3 = 0x7c01)
li x15, 0xdd8189298ca48287 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f21, 0(x2) # load 0x0000c000 from memory into f21
li x3, 0xc15dc6d97f198ea3 # load x3 with value 0xc15dc6d97f198ea3
sw x3, 0(x2) # store 0xc15dc6d97f198ea3 in memory
flh f1, 0(x2) # load 0xc15dc6d97f198ea3 from memory into f1
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f27, 0(x2) # load 0x00007c01 from memory into f27
fnmadd.h f15, f21, f1, f27, dyn # perform operation
fnmadd.h f15, f21, f1, f27, rdn # perform operation
fnmadd.h f15, f21, f1, f27, rmm # perform operation
fnmadd.h f15, f21, f1, f27, rne # perform operation
fnmadd.h f15, f21, f1, f27, rtz # perform operation
fnmadd.h f15, f21, f1, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f15, f21, f1, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f15, f21, f1, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f15, f21, f1, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f15, f21, f1, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f15, f21, f1, f27 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc000 fs3 = 0x7dff)
li x20, 0x5d10515e375fefa0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f25, 0(x2) # load 0x0000c000 from memory into f25
li x3, 0x34e21d0017c5651b # load x3 with value 0x34e21d0017c5651b
sw x3, 0(x2) # store 0x34e21d0017c5651b in memory
flh f8, 0(x2) # load 0x34e21d0017c5651b from memory into f8
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f6, 0(x2) # load 0x00007dff from memory into f6
fnmadd.h f20, f25, f8, f6, dyn # perform operation
fnmadd.h f20, f25, f8, f6, rdn # perform operation
fnmadd.h f20, f25, f8, f6, rmm # perform operation
fnmadd.h f20, f25, f8, f6, rne # perform operation
fnmadd.h f20, f25, f8, f6, rtz # perform operation
fnmadd.h f20, f25, f8, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f20, f25, f8, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f20, f25, f8, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f20, f25, f8, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f20, f25, f8, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f20, f25, f8, f6 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc000 fs3 = 0x58b4)
li x28, 0xcadda69e929f6d0b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f19, 0(x2) # load 0x0000c000 from memory into f19
li x3, 0xf5260841a324037c # load x3 with value 0xf5260841a324037c
sw x3, 0(x2) # store 0xf5260841a324037c in memory
flh f31, 0(x2) # load 0xf5260841a324037c from memory into f31
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f21, 0(x2) # load 0x000058b4 from memory into f21
fnmadd.h f28, f19, f31, f21, dyn # perform operation
fnmadd.h f28, f19, f31, f21, rdn # perform operation
fnmadd.h f28, f19, f31, f21, rmm # perform operation
fnmadd.h f28, f19, f31, f21, rne # perform operation
fnmadd.h f28, f19, f31, f21, rtz # perform operation
fnmadd.h f28, f19, f31, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f28, f19, f31, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f28, f19, f31, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f28, f19, f31, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f28, f19, f31, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f28, f19, f31, f21 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc000 fs3 = 0xc93a)
li x24, 0xd55002fde2dbdf88 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f14, 0(x2) # load 0x0000c000 from memory into f14
li x3, 0x1b87c646341fbdcf # load x3 with value 0x1b87c646341fbdcf
sw x3, 0(x2) # store 0x1b87c646341fbdcf in memory
flh f26, 0(x2) # load 0x1b87c646341fbdcf from memory into f26
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f31, 0(x2) # load 0x0000c93a from memory into f31
fnmadd.h f24, f14, f26, f31, dyn # perform operation
fnmadd.h f24, f14, f26, f31, rdn # perform operation
fnmadd.h f24, f14, f26, f31, rmm # perform operation
fnmadd.h f24, f14, f26, f31, rne # perform operation
fnmadd.h f24, f14, f26, f31, rtz # perform operation
fnmadd.h f24, f14, f26, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f24, f14, f26, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f24, f14, f26, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f24, f14, f26, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f24, f14, f26, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f24, f14, f26, f31 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400 fs3 = 0x0)
li x22, 0x2658dbbd2a735a36 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f1, 0(x2) # load 0x00000400 from memory into f1
li x3, 0x459f3949fcff40d7 # load x3 with value 0x459f3949fcff40d7
sw x3, 0(x2) # store 0x459f3949fcff40d7 in memory
flh f30, 0(x2) # load 0x459f3949fcff40d7 from memory into f30
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f4, 0(x2) # load 0x00000000 from memory into f4
fnmadd.h f22, f1, f30, f4, dyn # perform operation
fnmadd.h f22, f1, f30, f4, rdn # perform operation
fnmadd.h f22, f1, f30, f4, rmm # perform operation
fnmadd.h f22, f1, f30, f4, rne # perform operation
fnmadd.h f22, f1, f30, f4, rtz # perform operation
fnmadd.h f22, f1, f30, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f22, f1, f30, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f22, f1, f30, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f22, f1, f30, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f22, f1, f30, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f22, f1, f30, f4 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400 fs3 = 0x8000)
li x12, 0xdde7e75cbf4ce298 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f9, 0(x2) # load 0x00000400 from memory into f9
li x3, 0x22e6e969881c4a52 # load x3 with value 0x22e6e969881c4a52
sw x3, 0(x2) # store 0x22e6e969881c4a52 in memory
flh f24, 0(x2) # load 0x22e6e969881c4a52 from memory into f24
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f10, 0(x2) # load 0x00008000 from memory into f10
fnmadd.h f12, f9, f24, f10, dyn # perform operation
fnmadd.h f12, f9, f24, f10, rdn # perform operation
fnmadd.h f12, f9, f24, f10, rmm # perform operation
fnmadd.h f12, f9, f24, f10, rne # perform operation
fnmadd.h f12, f9, f24, f10, rtz # perform operation
fnmadd.h f12, f9, f24, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f12, f9, f24, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f12, f9, f24, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f12, f9, f24, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f12, f9, f24, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f12, f9, f24, f10 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400 fs3 = 0x3c00)
li x22, 0xede6c9d18afd5f9e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f13, 0(x2) # load 0x00000400 from memory into f13
li x3, 0x7c6ecee7e22cb56f # load x3 with value 0x7c6ecee7e22cb56f
sw x3, 0(x2) # store 0x7c6ecee7e22cb56f in memory
flh f10, 0(x2) # load 0x7c6ecee7e22cb56f from memory into f10
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f8, 0(x2) # load 0x00003c00 from memory into f8
fnmadd.h f22, f13, f10, f8, dyn # perform operation
fnmadd.h f22, f13, f10, f8, rdn # perform operation
fnmadd.h f22, f13, f10, f8, rmm # perform operation
fnmadd.h f22, f13, f10, f8, rne # perform operation
fnmadd.h f22, f13, f10, f8, rtz # perform operation
fnmadd.h f22, f13, f10, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f22, f13, f10, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f22, f13, f10, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f22, f13, f10, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f22, f13, f10, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f22, f13, f10, f8 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400 fs3 = 0xbc00)
li x24, 0x1f6901b43327e7cd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f1, 0(x2) # load 0x00000400 from memory into f1
li x3, 0x95858d0397c3a534 # load x3 with value 0x95858d0397c3a534
sw x3, 0(x2) # store 0x95858d0397c3a534 in memory
flh f29, 0(x2) # load 0x95858d0397c3a534 from memory into f29
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f6, 0(x2) # load 0x0000bc00 from memory into f6
fnmadd.h f24, f1, f29, f6, dyn # perform operation
fnmadd.h f24, f1, f29, f6, rdn # perform operation
fnmadd.h f24, f1, f29, f6, rmm # perform operation
fnmadd.h f24, f1, f29, f6, rne # perform operation
fnmadd.h f24, f1, f29, f6, rtz # perform operation
fnmadd.h f24, f1, f29, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f24, f1, f29, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f24, f1, f29, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f24, f1, f29, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f24, f1, f29, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f24, f1, f29, f6 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400 fs3 = 0x3e00)
li x3, 0xf70b88afa442813a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f4, 0(x2) # load 0x00000400 from memory into f4
li x3, 0xfb7636699025d07b # load x3 with value 0xfb7636699025d07b
sw x3, 0(x2) # store 0xfb7636699025d07b in memory
flh f8, 0(x2) # load 0xfb7636699025d07b from memory into f8
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f10, 0(x2) # load 0x00003e00 from memory into f10
fnmadd.h f3, f4, f8, f10, dyn # perform operation
fnmadd.h f3, f4, f8, f10, rdn # perform operation
fnmadd.h f3, f4, f8, f10, rmm # perform operation
fnmadd.h f3, f4, f8, f10, rne # perform operation
fnmadd.h f3, f4, f8, f10, rtz # perform operation
fnmadd.h f3, f4, f8, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f3, f4, f8, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f3, f4, f8, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f3, f4, f8, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f3, f4, f8, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f3, f4, f8, f10 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400 fs3 = 0xbe00)
li x21, 0x0befc987bdba9c32 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f13, 0(x2) # load 0x00000400 from memory into f13
li x3, 0x281b06e505505655 # load x3 with value 0x281b06e505505655
sw x3, 0(x2) # store 0x281b06e505505655 in memory
flh f27, 0(x2) # load 0x281b06e505505655 from memory into f27
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f8, 0(x2) # load 0x0000be00 from memory into f8
fnmadd.h f21, f13, f27, f8, dyn # perform operation
fnmadd.h f21, f13, f27, f8, rdn # perform operation
fnmadd.h f21, f13, f27, f8, rmm # perform operation
fnmadd.h f21, f13, f27, f8, rne # perform operation
fnmadd.h f21, f13, f27, f8, rtz # perform operation
fnmadd.h f21, f13, f27, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f21, f13, f27, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f21, f13, f27, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f21, f13, f27, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f21, f13, f27, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f21, f13, f27, f8 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400 fs3 = 0x4000)
li x9, 0xed89ed152d2a0049 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f12, 0(x2) # load 0x00000400 from memory into f12
li x3, 0xf49a8397a8f66df # load x3 with value 0xf49a8397a8f66df
sw x3, 0(x2) # store 0xf49a8397a8f66df in memory
flh f17, 0(x2) # load 0xf49a8397a8f66df from memory into f17
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f30, 0(x2) # load 0x00004000 from memory into f30
fnmadd.h f9, f12, f17, f30, dyn # perform operation
fnmadd.h f9, f12, f17, f30, rdn # perform operation
fnmadd.h f9, f12, f17, f30, rmm # perform operation
fnmadd.h f9, f12, f17, f30, rne # perform operation
fnmadd.h f9, f12, f17, f30, rtz # perform operation
fnmadd.h f9, f12, f17, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f9, f12, f17, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f9, f12, f17, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f9, f12, f17, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f9, f12, f17, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f9, f12, f17, f30 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400 fs3 = 0xc000)
li x4, 0xd16d45e40d3dd35a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f1, 0(x2) # load 0x00000400 from memory into f1
li x3, 0x29a3d9cd479e0a0d # load x3 with value 0x29a3d9cd479e0a0d
sw x3, 0(x2) # store 0x29a3d9cd479e0a0d in memory
flh f29, 0(x2) # load 0x29a3d9cd479e0a0d from memory into f29
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f16, 0(x2) # load 0x0000c000 from memory into f16
fnmadd.h f4, f1, f29, f16, dyn # perform operation
fnmadd.h f4, f1, f29, f16, rdn # perform operation
fnmadd.h f4, f1, f29, f16, rmm # perform operation
fnmadd.h f4, f1, f29, f16, rne # perform operation
fnmadd.h f4, f1, f29, f16, rtz # perform operation
fnmadd.h f4, f1, f29, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f4, f1, f29, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f4, f1, f29, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f4, f1, f29, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f4, f1, f29, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f4, f1, f29, f16 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400 fs3 = 0x400)
li x31, 0xa71141d2d985dcf1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f15, 0(x2) # load 0x00000400 from memory into f15
li x3, 0xba10ed28927a336d # load x3 with value 0xba10ed28927a336d
sw x3, 0(x2) # store 0xba10ed28927a336d in memory
flh f17, 0(x2) # load 0xba10ed28927a336d from memory into f17
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f9, 0(x2) # load 0x00000400 from memory into f9
fnmadd.h f31, f15, f17, f9, dyn # perform operation
fnmadd.h f31, f15, f17, f9, rdn # perform operation
fnmadd.h f31, f15, f17, f9, rmm # perform operation
fnmadd.h f31, f15, f17, f9, rne # perform operation
fnmadd.h f31, f15, f17, f9, rtz # perform operation
fnmadd.h f31, f15, f17, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f31, f15, f17, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f31, f15, f17, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f31, f15, f17, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f31, f15, f17, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f31, f15, f17, f9 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400 fs3 = 0x8400)
li x12, 0x0ee2fd5af67b0d03 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f29, 0(x2) # load 0x00000400 from memory into f29
li x3, 0xcaeed8f761f71dc2 # load x3 with value 0xcaeed8f761f71dc2
sw x3, 0(x2) # store 0xcaeed8f761f71dc2 in memory
flh f15, 0(x2) # load 0xcaeed8f761f71dc2 from memory into f15
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f4, 0(x2) # load 0x00008400 from memory into f4
fnmadd.h f12, f29, f15, f4, dyn # perform operation
fnmadd.h f12, f29, f15, f4, rdn # perform operation
fnmadd.h f12, f29, f15, f4, rmm # perform operation
fnmadd.h f12, f29, f15, f4, rne # perform operation
fnmadd.h f12, f29, f15, f4, rtz # perform operation
fnmadd.h f12, f29, f15, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f12, f29, f15, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f12, f29, f15, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f12, f29, f15, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f12, f29, f15, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f12, f29, f15, f4 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400 fs3 = 0x7bff)
li x21, 0x769275f4161585ba # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f4, 0(x2) # load 0x00000400 from memory into f4
li x3, 0xb2626563711f6665 # load x3 with value 0xb2626563711f6665
sw x3, 0(x2) # store 0xb2626563711f6665 in memory
flh f7, 0(x2) # load 0xb2626563711f6665 from memory into f7
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f17, 0(x2) # load 0x00007bff from memory into f17
fnmadd.h f21, f4, f7, f17, dyn # perform operation
fnmadd.h f21, f4, f7, f17, rdn # perform operation
fnmadd.h f21, f4, f7, f17, rmm # perform operation
fnmadd.h f21, f4, f7, f17, rne # perform operation
fnmadd.h f21, f4, f7, f17, rtz # perform operation
fnmadd.h f21, f4, f7, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f21, f4, f7, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f21, f4, f7, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f21, f4, f7, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f21, f4, f7, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f21, f4, f7, f17 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400 fs3 = 0xfbff)
li x23, 0xa747b26fb3ac2779 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f18, 0(x2) # load 0x00000400 from memory into f18
li x3, 0xbd384a74f52d5c30 # load x3 with value 0xbd384a74f52d5c30
sw x3, 0(x2) # store 0xbd384a74f52d5c30 in memory
flh f30, 0(x2) # load 0xbd384a74f52d5c30 from memory into f30
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f14, 0(x2) # load 0x0000fbff from memory into f14
fnmadd.h f23, f18, f30, f14, dyn # perform operation
fnmadd.h f23, f18, f30, f14, rdn # perform operation
fnmadd.h f23, f18, f30, f14, rmm # perform operation
fnmadd.h f23, f18, f30, f14, rne # perform operation
fnmadd.h f23, f18, f30, f14, rtz # perform operation
fnmadd.h f23, f18, f30, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f23, f18, f30, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f23, f18, f30, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f23, f18, f30, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f23, f18, f30, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f23, f18, f30, f14 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400 fs3 = 0x3ff)
li x17, 0x7b54ee88f88d5eaf # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f25, 0(x2) # load 0x00000400 from memory into f25
li x3, 0x198f021d08c36cb1 # load x3 with value 0x198f021d08c36cb1
sw x3, 0(x2) # store 0x198f021d08c36cb1 in memory
flh f10, 0(x2) # load 0x198f021d08c36cb1 from memory into f10
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f9, 0(x2) # load 0x000003ff from memory into f9
fnmadd.h f17, f25, f10, f9, dyn # perform operation
fnmadd.h f17, f25, f10, f9, rdn # perform operation
fnmadd.h f17, f25, f10, f9, rmm # perform operation
fnmadd.h f17, f25, f10, f9, rne # perform operation
fnmadd.h f17, f25, f10, f9, rtz # perform operation
fnmadd.h f17, f25, f10, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f17, f25, f10, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f17, f25, f10, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f17, f25, f10, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f17, f25, f10, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f17, f25, f10, f9 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400 fs3 = 0x83ff)
li x5, 0x2898d6ad45e7c459 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f12, 0(x2) # load 0x00000400 from memory into f12
li x3, 0x25bc89c48c5e49ba # load x3 with value 0x25bc89c48c5e49ba
sw x3, 0(x2) # store 0x25bc89c48c5e49ba in memory
flh f9, 0(x2) # load 0x25bc89c48c5e49ba from memory into f9
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f18, 0(x2) # load 0x000083ff from memory into f18
fnmadd.h f5, f12, f9, f18, dyn # perform operation
fnmadd.h f5, f12, f9, f18, rdn # perform operation
fnmadd.h f5, f12, f9, f18, rmm # perform operation
fnmadd.h f5, f12, f9, f18, rne # perform operation
fnmadd.h f5, f12, f9, f18, rtz # perform operation
fnmadd.h f5, f12, f9, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f5, f12, f9, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f5, f12, f9, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f5, f12, f9, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f5, f12, f9, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f5, f12, f9, f18 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400 fs3 = 0x200)
li x29, 0xfb0093450dae56c5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f18, 0(x2) # load 0x00000400 from memory into f18
li x3, 0x8b52a91da9adbc03 # load x3 with value 0x8b52a91da9adbc03
sw x3, 0(x2) # store 0x8b52a91da9adbc03 in memory
flh f8, 0(x2) # load 0x8b52a91da9adbc03 from memory into f8
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f5, 0(x2) # load 0x00000200 from memory into f5
fnmadd.h f29, f18, f8, f5, dyn # perform operation
fnmadd.h f29, f18, f8, f5, rdn # perform operation
fnmadd.h f29, f18, f8, f5, rmm # perform operation
fnmadd.h f29, f18, f8, f5, rne # perform operation
fnmadd.h f29, f18, f8, f5, rtz # perform operation
fnmadd.h f29, f18, f8, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f29, f18, f8, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f29, f18, f8, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f29, f18, f8, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f29, f18, f8, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f29, f18, f8, f5 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400 fs3 = 0x8200)
li x14, 0xd17f35b71fb650aa # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f7, 0(x2) # load 0x00000400 from memory into f7
li x3, 0x1d4df3d21dc8a770 # load x3 with value 0x1d4df3d21dc8a770
sw x3, 0(x2) # store 0x1d4df3d21dc8a770 in memory
flh f16, 0(x2) # load 0x1d4df3d21dc8a770 from memory into f16
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f25, 0(x2) # load 0x00008200 from memory into f25
fnmadd.h f14, f7, f16, f25, dyn # perform operation
fnmadd.h f14, f7, f16, f25, rdn # perform operation
fnmadd.h f14, f7, f16, f25, rmm # perform operation
fnmadd.h f14, f7, f16, f25, rne # perform operation
fnmadd.h f14, f7, f16, f25, rtz # perform operation
fnmadd.h f14, f7, f16, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f14, f7, f16, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f14, f7, f16, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f14, f7, f16, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f14, f7, f16, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f14, f7, f16, f25 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400 fs3 = 0x1)
li x22, 0xda09e0a30d3971ef # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f31, 0(x2) # load 0x00000400 from memory into f31
li x3, 0xa7a8bba3551e4c03 # load x3 with value 0xa7a8bba3551e4c03
sw x3, 0(x2) # store 0xa7a8bba3551e4c03 in memory
flh f7, 0(x2) # load 0xa7a8bba3551e4c03 from memory into f7
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f25, 0(x2) # load 0x00000001 from memory into f25
fnmadd.h f22, f31, f7, f25, dyn # perform operation
fnmadd.h f22, f31, f7, f25, rdn # perform operation
fnmadd.h f22, f31, f7, f25, rmm # perform operation
fnmadd.h f22, f31, f7, f25, rne # perform operation
fnmadd.h f22, f31, f7, f25, rtz # perform operation
fnmadd.h f22, f31, f7, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f22, f31, f7, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f22, f31, f7, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f22, f31, f7, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f22, f31, f7, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f22, f31, f7, f25 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400 fs3 = 0x8001)
li x8, 0x38ed84673c6c9e34 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f26, 0(x2) # load 0x00000400 from memory into f26
li x3, 0x66ebbeaacd162c8 # load x3 with value 0x66ebbeaacd162c8
sw x3, 0(x2) # store 0x66ebbeaacd162c8 in memory
flh f10, 0(x2) # load 0x66ebbeaacd162c8 from memory into f10
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f19, 0(x2) # load 0x00008001 from memory into f19
fnmadd.h f8, f26, f10, f19, dyn # perform operation
fnmadd.h f8, f26, f10, f19, rdn # perform operation
fnmadd.h f8, f26, f10, f19, rmm # perform operation
fnmadd.h f8, f26, f10, f19, rne # perform operation
fnmadd.h f8, f26, f10, f19, rtz # perform operation
fnmadd.h f8, f26, f10, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f8, f26, f10, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f8, f26, f10, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f8, f26, f10, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f8, f26, f10, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f8, f26, f10, f19 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400 fs3 = 0x7c00)
li x6, 0x43906240928f1164 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f3, 0(x2) # load 0x00000400 from memory into f3
li x3, 0x2730ddf274ab7fe1 # load x3 with value 0x2730ddf274ab7fe1
sw x3, 0(x2) # store 0x2730ddf274ab7fe1 in memory
flh f9, 0(x2) # load 0x2730ddf274ab7fe1 from memory into f9
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f26, 0(x2) # load 0x00007c00 from memory into f26
fnmadd.h f6, f3, f9, f26, dyn # perform operation
fnmadd.h f6, f3, f9, f26, rdn # perform operation
fnmadd.h f6, f3, f9, f26, rmm # perform operation
fnmadd.h f6, f3, f9, f26, rne # perform operation
fnmadd.h f6, f3, f9, f26, rtz # perform operation
fnmadd.h f6, f3, f9, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f6, f3, f9, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f6, f3, f9, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f6, f3, f9, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f6, f3, f9, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f6, f3, f9, f26 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400 fs3 = 0xfc00)
li x19, 0x7fc2d34728df6d11 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f14, 0(x2) # load 0x00000400 from memory into f14
li x3, 0x189743d2ad3aa26b # load x3 with value 0x189743d2ad3aa26b
sw x3, 0(x2) # store 0x189743d2ad3aa26b in memory
flh f15, 0(x2) # load 0x189743d2ad3aa26b from memory into f15
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f12, 0(x2) # load 0x0000fc00 from memory into f12
fnmadd.h f19, f14, f15, f12, dyn # perform operation
fnmadd.h f19, f14, f15, f12, rdn # perform operation
fnmadd.h f19, f14, f15, f12, rmm # perform operation
fnmadd.h f19, f14, f15, f12, rne # perform operation
fnmadd.h f19, f14, f15, f12, rtz # perform operation
fnmadd.h f19, f14, f15, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f19, f14, f15, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f19, f14, f15, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f19, f14, f15, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f19, f14, f15, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f19, f14, f15, f12 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400 fs3 = 0x7e00)
li x6, 0x16f17b2f441e3736 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f4, 0(x2) # load 0x00000400 from memory into f4
li x3, 0x4a21e0d89950000b # load x3 with value 0x4a21e0d89950000b
sw x3, 0(x2) # store 0x4a21e0d89950000b in memory
flh f2, 0(x2) # load 0x4a21e0d89950000b from memory into f2
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f28, 0(x2) # load 0x00007e00 from memory into f28
fnmadd.h f6, f4, f2, f28, dyn # perform operation
fnmadd.h f6, f4, f2, f28, rdn # perform operation
fnmadd.h f6, f4, f2, f28, rmm # perform operation
fnmadd.h f6, f4, f2, f28, rne # perform operation
fnmadd.h f6, f4, f2, f28, rtz # perform operation
fnmadd.h f6, f4, f2, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f6, f4, f2, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f6, f4, f2, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f6, f4, f2, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f6, f4, f2, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f6, f4, f2, f28 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400 fs3 = 0x7fff)
li x2, 0xa79313ed0375f9eb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f29, 0(x2) # load 0x00000400 from memory into f29
li x3, 0xca9ade59479098dd # load x3 with value 0xca9ade59479098dd
sw x3, 0(x2) # store 0xca9ade59479098dd in memory
flh f16, 0(x2) # load 0xca9ade59479098dd from memory into f16
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f18, 0(x2) # load 0x00007fff from memory into f18
fnmadd.h f2, f29, f16, f18, dyn # perform operation
fnmadd.h f2, f29, f16, f18, rdn # perform operation
fnmadd.h f2, f29, f16, f18, rmm # perform operation
fnmadd.h f2, f29, f16, f18, rne # perform operation
fnmadd.h f2, f29, f16, f18, rtz # perform operation
fnmadd.h f2, f29, f16, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f2, f29, f16, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f2, f29, f16, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f2, f29, f16, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f2, f29, f16, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f2, f29, f16, f18 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400 fs3 = 0x7c01)
li x17, 0xca9a5c91f417fb64 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f7, 0(x2) # load 0x00000400 from memory into f7
li x3, 0x969d09a74547caf # load x3 with value 0x969d09a74547caf
sw x3, 0(x2) # store 0x969d09a74547caf in memory
flh f4, 0(x2) # load 0x969d09a74547caf from memory into f4
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f2, 0(x2) # load 0x00007c01 from memory into f2
fnmadd.h f17, f7, f4, f2, dyn # perform operation
fnmadd.h f17, f7, f4, f2, rdn # perform operation
fnmadd.h f17, f7, f4, f2, rmm # perform operation
fnmadd.h f17, f7, f4, f2, rne # perform operation
fnmadd.h f17, f7, f4, f2, rtz # perform operation
fnmadd.h f17, f7, f4, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f17, f7, f4, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f17, f7, f4, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f17, f7, f4, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f17, f7, f4, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f17, f7, f4, f2 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400 fs3 = 0x7dff)
li x2, 0x9e000a050f332842 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f29, 0(x2) # load 0x00000400 from memory into f29
li x3, 0x2f7e97105d53f647 # load x3 with value 0x2f7e97105d53f647
sw x3, 0(x2) # store 0x2f7e97105d53f647 in memory
flh f10, 0(x2) # load 0x2f7e97105d53f647 from memory into f10
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f13, 0(x2) # load 0x00007dff from memory into f13
fnmadd.h f2, f29, f10, f13, dyn # perform operation
fnmadd.h f2, f29, f10, f13, rdn # perform operation
fnmadd.h f2, f29, f10, f13, rmm # perform operation
fnmadd.h f2, f29, f10, f13, rne # perform operation
fnmadd.h f2, f29, f10, f13, rtz # perform operation
fnmadd.h f2, f29, f10, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f2, f29, f10, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f2, f29, f10, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f2, f29, f10, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f2, f29, f10, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f2, f29, f10, f13 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400 fs3 = 0x58b4)
li x17, 0xa4b07e44b7663856 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f22, 0(x2) # load 0x00000400 from memory into f22
li x3, 0x22fab4951e3bb1ca # load x3 with value 0x22fab4951e3bb1ca
sw x3, 0(x2) # store 0x22fab4951e3bb1ca in memory
flh f12, 0(x2) # load 0x22fab4951e3bb1ca from memory into f12
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f10, 0(x2) # load 0x000058b4 from memory into f10
fnmadd.h f17, f22, f12, f10, dyn # perform operation
fnmadd.h f17, f22, f12, f10, rdn # perform operation
fnmadd.h f17, f22, f12, f10, rmm # perform operation
fnmadd.h f17, f22, f12, f10, rne # perform operation
fnmadd.h f17, f22, f12, f10, rtz # perform operation
fnmadd.h f17, f22, f12, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f17, f22, f12, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f17, f22, f12, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f17, f22, f12, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f17, f22, f12, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f17, f22, f12, f10 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400 fs3 = 0xc93a)
li x4, 0x3575fe06cca1756d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f5, 0(x2) # load 0x00000400 from memory into f5
li x3, 0xc2fe6fe85e9c8094 # load x3 with value 0xc2fe6fe85e9c8094
sw x3, 0(x2) # store 0xc2fe6fe85e9c8094 in memory
flh f18, 0(x2) # load 0xc2fe6fe85e9c8094 from memory into f18
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f25, 0(x2) # load 0x0000c93a from memory into f25
fnmadd.h f4, f5, f18, f25, dyn # perform operation
fnmadd.h f4, f5, f18, f25, rdn # perform operation
fnmadd.h f4, f5, f18, f25, rmm # perform operation
fnmadd.h f4, f5, f18, f25, rne # perform operation
fnmadd.h f4, f5, f18, f25, rtz # perform operation
fnmadd.h f4, f5, f18, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f4, f5, f18, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f4, f5, f18, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f4, f5, f18, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f4, f5, f18, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f4, f5, f18, f25 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8400 fs3 = 0x0)
li x7, 0xf9b65fb6a46c129e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f18, 0(x2) # load 0x00008400 from memory into f18
li x3, 0xdd36435f167ced36 # load x3 with value 0xdd36435f167ced36
sw x3, 0(x2) # store 0xdd36435f167ced36 in memory
flh f28, 0(x2) # load 0xdd36435f167ced36 from memory into f28
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f22, 0(x2) # load 0x00000000 from memory into f22
fnmadd.h f7, f18, f28, f22, dyn # perform operation
fnmadd.h f7, f18, f28, f22, rdn # perform operation
fnmadd.h f7, f18, f28, f22, rmm # perform operation
fnmadd.h f7, f18, f28, f22, rne # perform operation
fnmadd.h f7, f18, f28, f22, rtz # perform operation
fnmadd.h f7, f18, f28, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f7, f18, f28, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f7, f18, f28, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f7, f18, f28, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f7, f18, f28, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f7, f18, f28, f22 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8400 fs3 = 0x8000)
li x27, 0x794bb825897c44dd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f24, 0(x2) # load 0x00008400 from memory into f24
li x3, 0x3671e84bdc74b947 # load x3 with value 0x3671e84bdc74b947
sw x3, 0(x2) # store 0x3671e84bdc74b947 in memory
flh f12, 0(x2) # load 0x3671e84bdc74b947 from memory into f12
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f18, 0(x2) # load 0x00008000 from memory into f18
fnmadd.h f27, f24, f12, f18, dyn # perform operation
fnmadd.h f27, f24, f12, f18, rdn # perform operation
fnmadd.h f27, f24, f12, f18, rmm # perform operation
fnmadd.h f27, f24, f12, f18, rne # perform operation
fnmadd.h f27, f24, f12, f18, rtz # perform operation
fnmadd.h f27, f24, f12, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f27, f24, f12, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f27, f24, f12, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f27, f24, f12, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f27, f24, f12, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f27, f24, f12, f18 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8400 fs3 = 0x3c00)
li x18, 0x37643cbd4352a254 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f19, 0(x2) # load 0x00008400 from memory into f19
li x3, 0x2e9a924377280265 # load x3 with value 0x2e9a924377280265
sw x3, 0(x2) # store 0x2e9a924377280265 in memory
flh f14, 0(x2) # load 0x2e9a924377280265 from memory into f14
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f20, 0(x2) # load 0x00003c00 from memory into f20
fnmadd.h f18, f19, f14, f20, dyn # perform operation
fnmadd.h f18, f19, f14, f20, rdn # perform operation
fnmadd.h f18, f19, f14, f20, rmm # perform operation
fnmadd.h f18, f19, f14, f20, rne # perform operation
fnmadd.h f18, f19, f14, f20, rtz # perform operation
fnmadd.h f18, f19, f14, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f18, f19, f14, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f18, f19, f14, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f18, f19, f14, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f18, f19, f14, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f18, f19, f14, f20 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8400 fs3 = 0xbc00)
li x23, 0x38473388df352215 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f25, 0(x2) # load 0x00008400 from memory into f25
li x3, 0xab4c6474f6ccf282 # load x3 with value 0xab4c6474f6ccf282
sw x3, 0(x2) # store 0xab4c6474f6ccf282 in memory
flh f12, 0(x2) # load 0xab4c6474f6ccf282 from memory into f12
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f4, 0(x2) # load 0x0000bc00 from memory into f4
fnmadd.h f23, f25, f12, f4, dyn # perform operation
fnmadd.h f23, f25, f12, f4, rdn # perform operation
fnmadd.h f23, f25, f12, f4, rmm # perform operation
fnmadd.h f23, f25, f12, f4, rne # perform operation
fnmadd.h f23, f25, f12, f4, rtz # perform operation
fnmadd.h f23, f25, f12, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f23, f25, f12, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f23, f25, f12, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f23, f25, f12, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f23, f25, f12, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f23, f25, f12, f4 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8400 fs3 = 0x3e00)
li x11, 0xd44fc5ff7f07d4fd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f27, 0(x2) # load 0x00008400 from memory into f27
li x3, 0x98e01c07c544d7cf # load x3 with value 0x98e01c07c544d7cf
sw x3, 0(x2) # store 0x98e01c07c544d7cf in memory
flh f22, 0(x2) # load 0x98e01c07c544d7cf from memory into f22
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f24, 0(x2) # load 0x00003e00 from memory into f24
fnmadd.h f11, f27, f22, f24, dyn # perform operation
fnmadd.h f11, f27, f22, f24, rdn # perform operation
fnmadd.h f11, f27, f22, f24, rmm # perform operation
fnmadd.h f11, f27, f22, f24, rne # perform operation
fnmadd.h f11, f27, f22, f24, rtz # perform operation
fnmadd.h f11, f27, f22, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f11, f27, f22, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f11, f27, f22, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f11, f27, f22, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f11, f27, f22, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f11, f27, f22, f24 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8400 fs3 = 0xbe00)
li x9, 0x7fdca781c6da2908 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f30, 0(x2) # load 0x00008400 from memory into f30
li x3, 0x7894870bec60e545 # load x3 with value 0x7894870bec60e545
sw x3, 0(x2) # store 0x7894870bec60e545 in memory
flh f6, 0(x2) # load 0x7894870bec60e545 from memory into f6
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f14, 0(x2) # load 0x0000be00 from memory into f14
fnmadd.h f9, f30, f6, f14, dyn # perform operation
fnmadd.h f9, f30, f6, f14, rdn # perform operation
fnmadd.h f9, f30, f6, f14, rmm # perform operation
fnmadd.h f9, f30, f6, f14, rne # perform operation
fnmadd.h f9, f30, f6, f14, rtz # perform operation
fnmadd.h f9, f30, f6, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f9, f30, f6, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f9, f30, f6, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f9, f30, f6, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f9, f30, f6, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f9, f30, f6, f14 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8400 fs3 = 0x4000)
li x16, 0xd77d80bdc50577ee # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f1, 0(x2) # load 0x00008400 from memory into f1
li x3, 0xdee583c551044af4 # load x3 with value 0xdee583c551044af4
sw x3, 0(x2) # store 0xdee583c551044af4 in memory
flh f9, 0(x2) # load 0xdee583c551044af4 from memory into f9
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f3, 0(x2) # load 0x00004000 from memory into f3
fnmadd.h f16, f1, f9, f3, dyn # perform operation
fnmadd.h f16, f1, f9, f3, rdn # perform operation
fnmadd.h f16, f1, f9, f3, rmm # perform operation
fnmadd.h f16, f1, f9, f3, rne # perform operation
fnmadd.h f16, f1, f9, f3, rtz # perform operation
fnmadd.h f16, f1, f9, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f16, f1, f9, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f16, f1, f9, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f16, f1, f9, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f16, f1, f9, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f16, f1, f9, f3 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8400 fs3 = 0xc000)
li x27, 0xc66e8281163f60fa # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f4, 0(x2) # load 0x00008400 from memory into f4
li x3, 0xa646c0b1e185b005 # load x3 with value 0xa646c0b1e185b005
sw x3, 0(x2) # store 0xa646c0b1e185b005 in memory
flh f20, 0(x2) # load 0xa646c0b1e185b005 from memory into f20
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f19, 0(x2) # load 0x0000c000 from memory into f19
fnmadd.h f27, f4, f20, f19, dyn # perform operation
fnmadd.h f27, f4, f20, f19, rdn # perform operation
fnmadd.h f27, f4, f20, f19, rmm # perform operation
fnmadd.h f27, f4, f20, f19, rne # perform operation
fnmadd.h f27, f4, f20, f19, rtz # perform operation
fnmadd.h f27, f4, f20, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f27, f4, f20, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f27, f4, f20, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f27, f4, f20, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f27, f4, f20, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f27, f4, f20, f19 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8400 fs3 = 0x400)
li x20, 0x64d9156388fa7aa8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f28, 0(x2) # load 0x00008400 from memory into f28
li x3, 0x36580b555dbdf55f # load x3 with value 0x36580b555dbdf55f
sw x3, 0(x2) # store 0x36580b555dbdf55f in memory
flh f4, 0(x2) # load 0x36580b555dbdf55f from memory into f4
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f27, 0(x2) # load 0x00000400 from memory into f27
fnmadd.h f20, f28, f4, f27, dyn # perform operation
fnmadd.h f20, f28, f4, f27, rdn # perform operation
fnmadd.h f20, f28, f4, f27, rmm # perform operation
fnmadd.h f20, f28, f4, f27, rne # perform operation
fnmadd.h f20, f28, f4, f27, rtz # perform operation
fnmadd.h f20, f28, f4, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f20, f28, f4, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f20, f28, f4, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f20, f28, f4, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f20, f28, f4, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f20, f28, f4, f27 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8400 fs3 = 0x8400)
li x2, 0xde2c1c0b30fe871e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f20, 0(x2) # load 0x00008400 from memory into f20
li x3, 0x66740ed4d0f05199 # load x3 with value 0x66740ed4d0f05199
sw x3, 0(x2) # store 0x66740ed4d0f05199 in memory
flh f5, 0(x2) # load 0x66740ed4d0f05199 from memory into f5
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f15, 0(x2) # load 0x00008400 from memory into f15
fnmadd.h f2, f20, f5, f15, dyn # perform operation
fnmadd.h f2, f20, f5, f15, rdn # perform operation
fnmadd.h f2, f20, f5, f15, rmm # perform operation
fnmadd.h f2, f20, f5, f15, rne # perform operation
fnmadd.h f2, f20, f5, f15, rtz # perform operation
fnmadd.h f2, f20, f5, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f2, f20, f5, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f2, f20, f5, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f2, f20, f5, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f2, f20, f5, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f2, f20, f5, f15 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8400 fs3 = 0x7bff)
li x15, 0xa2d4d275939b11eb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f27, 0(x2) # load 0x00008400 from memory into f27
li x3, 0x5bc738364462462 # load x3 with value 0x5bc738364462462
sw x3, 0(x2) # store 0x5bc738364462462 in memory
flh f3, 0(x2) # load 0x5bc738364462462 from memory into f3
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f31, 0(x2) # load 0x00007bff from memory into f31
fnmadd.h f15, f27, f3, f31, dyn # perform operation
fnmadd.h f15, f27, f3, f31, rdn # perform operation
fnmadd.h f15, f27, f3, f31, rmm # perform operation
fnmadd.h f15, f27, f3, f31, rne # perform operation
fnmadd.h f15, f27, f3, f31, rtz # perform operation
fnmadd.h f15, f27, f3, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f15, f27, f3, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f15, f27, f3, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f15, f27, f3, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f15, f27, f3, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f15, f27, f3, f31 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8400 fs3 = 0xfbff)
li x31, 0xa39015b079595a8b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f15, 0(x2) # load 0x00008400 from memory into f15
li x3, 0xd8ad2a4cc041e8d3 # load x3 with value 0xd8ad2a4cc041e8d3
sw x3, 0(x2) # store 0xd8ad2a4cc041e8d3 in memory
flh f11, 0(x2) # load 0xd8ad2a4cc041e8d3 from memory into f11
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f1, 0(x2) # load 0x0000fbff from memory into f1
fnmadd.h f31, f15, f11, f1, dyn # perform operation
fnmadd.h f31, f15, f11, f1, rdn # perform operation
fnmadd.h f31, f15, f11, f1, rmm # perform operation
fnmadd.h f31, f15, f11, f1, rne # perform operation
fnmadd.h f31, f15, f11, f1, rtz # perform operation
fnmadd.h f31, f15, f11, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f31, f15, f11, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f31, f15, f11, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f31, f15, f11, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f31, f15, f11, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f31, f15, f11, f1 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8400 fs3 = 0x3ff)
li x4, 0x0f8baf52e71b5572 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f7, 0(x2) # load 0x00008400 from memory into f7
li x3, 0xaf931660f7e2ec12 # load x3 with value 0xaf931660f7e2ec12
sw x3, 0(x2) # store 0xaf931660f7e2ec12 in memory
flh f22, 0(x2) # load 0xaf931660f7e2ec12 from memory into f22
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f11, 0(x2) # load 0x000003ff from memory into f11
fnmadd.h f4, f7, f22, f11, dyn # perform operation
fnmadd.h f4, f7, f22, f11, rdn # perform operation
fnmadd.h f4, f7, f22, f11, rmm # perform operation
fnmadd.h f4, f7, f22, f11, rne # perform operation
fnmadd.h f4, f7, f22, f11, rtz # perform operation
fnmadd.h f4, f7, f22, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f4, f7, f22, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f4, f7, f22, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f4, f7, f22, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f4, f7, f22, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f4, f7, f22, f11 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8400 fs3 = 0x83ff)
li x21, 0xb451f8f9dcd5cab3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f19, 0(x2) # load 0x00008400 from memory into f19
li x3, 0xf28f70726dc6d06f # load x3 with value 0xf28f70726dc6d06f
sw x3, 0(x2) # store 0xf28f70726dc6d06f in memory
flh f30, 0(x2) # load 0xf28f70726dc6d06f from memory into f30
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f16, 0(x2) # load 0x000083ff from memory into f16
fnmadd.h f21, f19, f30, f16, dyn # perform operation
fnmadd.h f21, f19, f30, f16, rdn # perform operation
fnmadd.h f21, f19, f30, f16, rmm # perform operation
fnmadd.h f21, f19, f30, f16, rne # perform operation
fnmadd.h f21, f19, f30, f16, rtz # perform operation
fnmadd.h f21, f19, f30, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f21, f19, f30, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f21, f19, f30, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f21, f19, f30, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f21, f19, f30, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f21, f19, f30, f16 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8400 fs3 = 0x200)
li x22, 0xf5d62a7c847d7478 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f31, 0(x2) # load 0x00008400 from memory into f31
li x3, 0x39089311c95007e5 # load x3 with value 0x39089311c95007e5
sw x3, 0(x2) # store 0x39089311c95007e5 in memory
flh f25, 0(x2) # load 0x39089311c95007e5 from memory into f25
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f7, 0(x2) # load 0x00000200 from memory into f7
fnmadd.h f22, f31, f25, f7, dyn # perform operation
fnmadd.h f22, f31, f25, f7, rdn # perform operation
fnmadd.h f22, f31, f25, f7, rmm # perform operation
fnmadd.h f22, f31, f25, f7, rne # perform operation
fnmadd.h f22, f31, f25, f7, rtz # perform operation
fnmadd.h f22, f31, f25, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f22, f31, f25, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f22, f31, f25, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f22, f31, f25, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f22, f31, f25, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f22, f31, f25, f7 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8400 fs3 = 0x8200)
li x10, 0x36120937f8def3d7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f17, 0(x2) # load 0x00008400 from memory into f17
li x3, 0x98a518ddb6e3345d # load x3 with value 0x98a518ddb6e3345d
sw x3, 0(x2) # store 0x98a518ddb6e3345d in memory
flh f4, 0(x2) # load 0x98a518ddb6e3345d from memory into f4
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f5, 0(x2) # load 0x00008200 from memory into f5
fnmadd.h f10, f17, f4, f5, dyn # perform operation
fnmadd.h f10, f17, f4, f5, rdn # perform operation
fnmadd.h f10, f17, f4, f5, rmm # perform operation
fnmadd.h f10, f17, f4, f5, rne # perform operation
fnmadd.h f10, f17, f4, f5, rtz # perform operation
fnmadd.h f10, f17, f4, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f10, f17, f4, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f10, f17, f4, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f10, f17, f4, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f10, f17, f4, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f10, f17, f4, f5 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8400 fs3 = 0x1)
li x14, 0x6b5aee916a785a90 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f17, 0(x2) # load 0x00008400 from memory into f17
li x3, 0x43574e84c328e425 # load x3 with value 0x43574e84c328e425
sw x3, 0(x2) # store 0x43574e84c328e425 in memory
flh f27, 0(x2) # load 0x43574e84c328e425 from memory into f27
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f28, 0(x2) # load 0x00000001 from memory into f28
fnmadd.h f14, f17, f27, f28, dyn # perform operation
fnmadd.h f14, f17, f27, f28, rdn # perform operation
fnmadd.h f14, f17, f27, f28, rmm # perform operation
fnmadd.h f14, f17, f27, f28, rne # perform operation
fnmadd.h f14, f17, f27, f28, rtz # perform operation
fnmadd.h f14, f17, f27, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f14, f17, f27, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f14, f17, f27, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f14, f17, f27, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f14, f17, f27, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f14, f17, f27, f28 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8400 fs3 = 0x8001)
li x19, 0xf252373292abc144 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f22, 0(x2) # load 0x00008400 from memory into f22
li x3, 0x85ad11fa378f9aae # load x3 with value 0x85ad11fa378f9aae
sw x3, 0(x2) # store 0x85ad11fa378f9aae in memory
flh f31, 0(x2) # load 0x85ad11fa378f9aae from memory into f31
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f24, 0(x2) # load 0x00008001 from memory into f24
fnmadd.h f19, f22, f31, f24, dyn # perform operation
fnmadd.h f19, f22, f31, f24, rdn # perform operation
fnmadd.h f19, f22, f31, f24, rmm # perform operation
fnmadd.h f19, f22, f31, f24, rne # perform operation
fnmadd.h f19, f22, f31, f24, rtz # perform operation
fnmadd.h f19, f22, f31, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f19, f22, f31, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f19, f22, f31, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f19, f22, f31, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f19, f22, f31, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f19, f22, f31, f24 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8400 fs3 = 0x7c00)
li x21, 0x4b164adc405cab43 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f16, 0(x2) # load 0x00008400 from memory into f16
li x3, 0xc95ae82423243b4b # load x3 with value 0xc95ae82423243b4b
sw x3, 0(x2) # store 0xc95ae82423243b4b in memory
flh f1, 0(x2) # load 0xc95ae82423243b4b from memory into f1
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f22, 0(x2) # load 0x00007c00 from memory into f22
fnmadd.h f21, f16, f1, f22, dyn # perform operation
fnmadd.h f21, f16, f1, f22, rdn # perform operation
fnmadd.h f21, f16, f1, f22, rmm # perform operation
fnmadd.h f21, f16, f1, f22, rne # perform operation
fnmadd.h f21, f16, f1, f22, rtz # perform operation
fnmadd.h f21, f16, f1, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f21, f16, f1, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f21, f16, f1, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f21, f16, f1, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f21, f16, f1, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f21, f16, f1, f22 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8400 fs3 = 0xfc00)
li x2, 0xd83d784b568bb76c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f13, 0(x2) # load 0x00008400 from memory into f13
li x3, 0x383548d34f11fe1c # load x3 with value 0x383548d34f11fe1c
sw x3, 0(x2) # store 0x383548d34f11fe1c in memory
flh f25, 0(x2) # load 0x383548d34f11fe1c from memory into f25
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f10, 0(x2) # load 0x0000fc00 from memory into f10
fnmadd.h f2, f13, f25, f10, dyn # perform operation
fnmadd.h f2, f13, f25, f10, rdn # perform operation
fnmadd.h f2, f13, f25, f10, rmm # perform operation
fnmadd.h f2, f13, f25, f10, rne # perform operation
fnmadd.h f2, f13, f25, f10, rtz # perform operation
fnmadd.h f2, f13, f25, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f2, f13, f25, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f2, f13, f25, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f2, f13, f25, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f2, f13, f25, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f2, f13, f25, f10 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8400 fs3 = 0x7e00)
li x2, 0x04ab19507bef2bfd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f31, 0(x2) # load 0x00008400 from memory into f31
li x3, 0xbf7031f3e7c0ebdb # load x3 with value 0xbf7031f3e7c0ebdb
sw x3, 0(x2) # store 0xbf7031f3e7c0ebdb in memory
flh f18, 0(x2) # load 0xbf7031f3e7c0ebdb from memory into f18
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f24, 0(x2) # load 0x00007e00 from memory into f24
fnmadd.h f2, f31, f18, f24, dyn # perform operation
fnmadd.h f2, f31, f18, f24, rdn # perform operation
fnmadd.h f2, f31, f18, f24, rmm # perform operation
fnmadd.h f2, f31, f18, f24, rne # perform operation
fnmadd.h f2, f31, f18, f24, rtz # perform operation
fnmadd.h f2, f31, f18, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f2, f31, f18, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f2, f31, f18, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f2, f31, f18, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f2, f31, f18, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f2, f31, f18, f24 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8400 fs3 = 0x7fff)
li x16, 0xa444af505e812a53 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f25, 0(x2) # load 0x00008400 from memory into f25
li x3, 0x7986bffc9960838f # load x3 with value 0x7986bffc9960838f
sw x3, 0(x2) # store 0x7986bffc9960838f in memory
flh f1, 0(x2) # load 0x7986bffc9960838f from memory into f1
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f23, 0(x2) # load 0x00007fff from memory into f23
fnmadd.h f16, f25, f1, f23, dyn # perform operation
fnmadd.h f16, f25, f1, f23, rdn # perform operation
fnmadd.h f16, f25, f1, f23, rmm # perform operation
fnmadd.h f16, f25, f1, f23, rne # perform operation
fnmadd.h f16, f25, f1, f23, rtz # perform operation
fnmadd.h f16, f25, f1, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f16, f25, f1, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f16, f25, f1, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f16, f25, f1, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f16, f25, f1, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f16, f25, f1, f23 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8400 fs3 = 0x7c01)
li x8, 0x67cdc0d155c1c9cd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f5, 0(x2) # load 0x00008400 from memory into f5
li x3, 0xef49834c2be2cabc # load x3 with value 0xef49834c2be2cabc
sw x3, 0(x2) # store 0xef49834c2be2cabc in memory
flh f30, 0(x2) # load 0xef49834c2be2cabc from memory into f30
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f16, 0(x2) # load 0x00007c01 from memory into f16
fnmadd.h f8, f5, f30, f16, dyn # perform operation
fnmadd.h f8, f5, f30, f16, rdn # perform operation
fnmadd.h f8, f5, f30, f16, rmm # perform operation
fnmadd.h f8, f5, f30, f16, rne # perform operation
fnmadd.h f8, f5, f30, f16, rtz # perform operation
fnmadd.h f8, f5, f30, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f8, f5, f30, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f8, f5, f30, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f8, f5, f30, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f8, f5, f30, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f8, f5, f30, f16 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8400 fs3 = 0x7dff)
li x4, 0x10fffc1b79bc0904 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f14, 0(x2) # load 0x00008400 from memory into f14
li x3, 0xebe2f7594f1107cb # load x3 with value 0xebe2f7594f1107cb
sw x3, 0(x2) # store 0xebe2f7594f1107cb in memory
flh f31, 0(x2) # load 0xebe2f7594f1107cb from memory into f31
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f16, 0(x2) # load 0x00007dff from memory into f16
fnmadd.h f4, f14, f31, f16, dyn # perform operation
fnmadd.h f4, f14, f31, f16, rdn # perform operation
fnmadd.h f4, f14, f31, f16, rmm # perform operation
fnmadd.h f4, f14, f31, f16, rne # perform operation
fnmadd.h f4, f14, f31, f16, rtz # perform operation
fnmadd.h f4, f14, f31, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f4, f14, f31, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f4, f14, f31, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f4, f14, f31, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f4, f14, f31, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f4, f14, f31, f16 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8400 fs3 = 0x58b4)
li x4, 0x85d22777af25bbd1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f25, 0(x2) # load 0x00008400 from memory into f25
li x3, 0x74009bce80264f7a # load x3 with value 0x74009bce80264f7a
sw x3, 0(x2) # store 0x74009bce80264f7a in memory
flh f28, 0(x2) # load 0x74009bce80264f7a from memory into f28
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f7, 0(x2) # load 0x000058b4 from memory into f7
fnmadd.h f4, f25, f28, f7, dyn # perform operation
fnmadd.h f4, f25, f28, f7, rdn # perform operation
fnmadd.h f4, f25, f28, f7, rmm # perform operation
fnmadd.h f4, f25, f28, f7, rne # perform operation
fnmadd.h f4, f25, f28, f7, rtz # perform operation
fnmadd.h f4, f25, f28, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f4, f25, f28, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f4, f25, f28, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f4, f25, f28, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f4, f25, f28, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f4, f25, f28, f7 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8400 fs3 = 0xc93a)
li x14, 0xdb6b5529a14daee8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f23, 0(x2) # load 0x00008400 from memory into f23
li x3, 0xbd11592db2c4d7ef # load x3 with value 0xbd11592db2c4d7ef
sw x3, 0(x2) # store 0xbd11592db2c4d7ef in memory
flh f11, 0(x2) # load 0xbd11592db2c4d7ef from memory into f11
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f22, 0(x2) # load 0x0000c93a from memory into f22
fnmadd.h f14, f23, f11, f22, dyn # perform operation
fnmadd.h f14, f23, f11, f22, rdn # perform operation
fnmadd.h f14, f23, f11, f22, rmm # perform operation
fnmadd.h f14, f23, f11, f22, rne # perform operation
fnmadd.h f14, f23, f11, f22, rtz # perform operation
fnmadd.h f14, f23, f11, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f14, f23, f11, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f14, f23, f11, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f14, f23, f11, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f14, f23, f11, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f14, f23, f11, f22 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7bff fs3 = 0x0)
li x12, 0x26f46c614040cbfc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f25, 0(x2) # load 0x00007bff from memory into f25
li x3, 0x5072418d083f7e6d # load x3 with value 0x5072418d083f7e6d
sw x3, 0(x2) # store 0x5072418d083f7e6d in memory
flh f16, 0(x2) # load 0x5072418d083f7e6d from memory into f16
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f18, 0(x2) # load 0x00000000 from memory into f18
fnmadd.h f12, f25, f16, f18, dyn # perform operation
fnmadd.h f12, f25, f16, f18, rdn # perform operation
fnmadd.h f12, f25, f16, f18, rmm # perform operation
fnmadd.h f12, f25, f16, f18, rne # perform operation
fnmadd.h f12, f25, f16, f18, rtz # perform operation
fnmadd.h f12, f25, f16, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f12, f25, f16, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f12, f25, f16, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f12, f25, f16, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f12, f25, f16, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f12, f25, f16, f18 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7bff fs3 = 0x8000)
li x21, 0x8d232acab9e3b973 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f25, 0(x2) # load 0x00007bff from memory into f25
li x3, 0x5261a990b035791f # load x3 with value 0x5261a990b035791f
sw x3, 0(x2) # store 0x5261a990b035791f in memory
flh f9, 0(x2) # load 0x5261a990b035791f from memory into f9
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f6, 0(x2) # load 0x00008000 from memory into f6
fnmadd.h f21, f25, f9, f6, dyn # perform operation
fnmadd.h f21, f25, f9, f6, rdn # perform operation
fnmadd.h f21, f25, f9, f6, rmm # perform operation
fnmadd.h f21, f25, f9, f6, rne # perform operation
fnmadd.h f21, f25, f9, f6, rtz # perform operation
fnmadd.h f21, f25, f9, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f21, f25, f9, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f21, f25, f9, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f21, f25, f9, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f21, f25, f9, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f21, f25, f9, f6 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7bff fs3 = 0x3c00)
li x6, 0x1c339dc175be5e2a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f27, 0(x2) # load 0x00007bff from memory into f27
li x3, 0xa90d3c33722a4cf3 # load x3 with value 0xa90d3c33722a4cf3
sw x3, 0(x2) # store 0xa90d3c33722a4cf3 in memory
flh f17, 0(x2) # load 0xa90d3c33722a4cf3 from memory into f17
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f26, 0(x2) # load 0x00003c00 from memory into f26
fnmadd.h f6, f27, f17, f26, dyn # perform operation
fnmadd.h f6, f27, f17, f26, rdn # perform operation
fnmadd.h f6, f27, f17, f26, rmm # perform operation
fnmadd.h f6, f27, f17, f26, rne # perform operation
fnmadd.h f6, f27, f17, f26, rtz # perform operation
fnmadd.h f6, f27, f17, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f6, f27, f17, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f6, f27, f17, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f6, f27, f17, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f6, f27, f17, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f6, f27, f17, f26 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7bff fs3 = 0xbc00)
li x26, 0xe217c236b43f121a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f24, 0(x2) # load 0x00007bff from memory into f24
li x3, 0x9ea9d63cefa1ebd1 # load x3 with value 0x9ea9d63cefa1ebd1
sw x3, 0(x2) # store 0x9ea9d63cefa1ebd1 in memory
flh f28, 0(x2) # load 0x9ea9d63cefa1ebd1 from memory into f28
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f14, 0(x2) # load 0x0000bc00 from memory into f14
fnmadd.h f26, f24, f28, f14, dyn # perform operation
fnmadd.h f26, f24, f28, f14, rdn # perform operation
fnmadd.h f26, f24, f28, f14, rmm # perform operation
fnmadd.h f26, f24, f28, f14, rne # perform operation
fnmadd.h f26, f24, f28, f14, rtz # perform operation
fnmadd.h f26, f24, f28, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f26, f24, f28, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f26, f24, f28, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f26, f24, f28, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f26, f24, f28, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f26, f24, f28, f14 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7bff fs3 = 0x3e00)
li x27, 0xf4301f741f61c7bb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f22, 0(x2) # load 0x00007bff from memory into f22
li x3, 0x4c400d43f5c4f51 # load x3 with value 0x4c400d43f5c4f51
sw x3, 0(x2) # store 0x4c400d43f5c4f51 in memory
flh f12, 0(x2) # load 0x4c400d43f5c4f51 from memory into f12
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f26, 0(x2) # load 0x00003e00 from memory into f26
fnmadd.h f27, f22, f12, f26, dyn # perform operation
fnmadd.h f27, f22, f12, f26, rdn # perform operation
fnmadd.h f27, f22, f12, f26, rmm # perform operation
fnmadd.h f27, f22, f12, f26, rne # perform operation
fnmadd.h f27, f22, f12, f26, rtz # perform operation
fnmadd.h f27, f22, f12, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f27, f22, f12, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f27, f22, f12, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f27, f22, f12, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f27, f22, f12, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f27, f22, f12, f26 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7bff fs3 = 0xbe00)
li x10, 0x2a3a6f6d3dc84a19 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f31, 0(x2) # load 0x00007bff from memory into f31
li x3, 0x3ca23e08a458f6dc # load x3 with value 0x3ca23e08a458f6dc
sw x3, 0(x2) # store 0x3ca23e08a458f6dc in memory
flh f2, 0(x2) # load 0x3ca23e08a458f6dc from memory into f2
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f23, 0(x2) # load 0x0000be00 from memory into f23
fnmadd.h f10, f31, f2, f23, dyn # perform operation
fnmadd.h f10, f31, f2, f23, rdn # perform operation
fnmadd.h f10, f31, f2, f23, rmm # perform operation
fnmadd.h f10, f31, f2, f23, rne # perform operation
fnmadd.h f10, f31, f2, f23, rtz # perform operation
fnmadd.h f10, f31, f2, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f10, f31, f2, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f10, f31, f2, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f10, f31, f2, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f10, f31, f2, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f10, f31, f2, f23 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7bff fs3 = 0x4000)
li x26, 0x33f29570802a3b7f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f5, 0(x2) # load 0x00007bff from memory into f5
li x3, 0x2db9bd2fd585116a # load x3 with value 0x2db9bd2fd585116a
sw x3, 0(x2) # store 0x2db9bd2fd585116a in memory
flh f28, 0(x2) # load 0x2db9bd2fd585116a from memory into f28
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f11, 0(x2) # load 0x00004000 from memory into f11
fnmadd.h f26, f5, f28, f11, dyn # perform operation
fnmadd.h f26, f5, f28, f11, rdn # perform operation
fnmadd.h f26, f5, f28, f11, rmm # perform operation
fnmadd.h f26, f5, f28, f11, rne # perform operation
fnmadd.h f26, f5, f28, f11, rtz # perform operation
fnmadd.h f26, f5, f28, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f26, f5, f28, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f26, f5, f28, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f26, f5, f28, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f26, f5, f28, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f26, f5, f28, f11 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7bff fs3 = 0xc000)
li x24, 0x7b4db6702a7efffe # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f31, 0(x2) # load 0x00007bff from memory into f31
li x3, 0xb5b4bb6ab2a822b9 # load x3 with value 0xb5b4bb6ab2a822b9
sw x3, 0(x2) # store 0xb5b4bb6ab2a822b9 in memory
flh f11, 0(x2) # load 0xb5b4bb6ab2a822b9 from memory into f11
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f5, 0(x2) # load 0x0000c000 from memory into f5
fnmadd.h f24, f31, f11, f5, dyn # perform operation
fnmadd.h f24, f31, f11, f5, rdn # perform operation
fnmadd.h f24, f31, f11, f5, rmm # perform operation
fnmadd.h f24, f31, f11, f5, rne # perform operation
fnmadd.h f24, f31, f11, f5, rtz # perform operation
fnmadd.h f24, f31, f11, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f24, f31, f11, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f24, f31, f11, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f24, f31, f11, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f24, f31, f11, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f24, f31, f11, f5 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7bff fs3 = 0x400)
li x7, 0x70941f6fe34a008a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f16, 0(x2) # load 0x00007bff from memory into f16
li x3, 0x4fdfa4d68d03f185 # load x3 with value 0x4fdfa4d68d03f185
sw x3, 0(x2) # store 0x4fdfa4d68d03f185 in memory
flh f21, 0(x2) # load 0x4fdfa4d68d03f185 from memory into f21
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f10, 0(x2) # load 0x00000400 from memory into f10
fnmadd.h f7, f16, f21, f10, dyn # perform operation
fnmadd.h f7, f16, f21, f10, rdn # perform operation
fnmadd.h f7, f16, f21, f10, rmm # perform operation
fnmadd.h f7, f16, f21, f10, rne # perform operation
fnmadd.h f7, f16, f21, f10, rtz # perform operation
fnmadd.h f7, f16, f21, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f7, f16, f21, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f7, f16, f21, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f7, f16, f21, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f7, f16, f21, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f7, f16, f21, f10 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7bff fs3 = 0x8400)
li x5, 0x2733b3a0bfad138a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f21, 0(x2) # load 0x00007bff from memory into f21
li x3, 0xa5a36bf1ee6a6a83 # load x3 with value 0xa5a36bf1ee6a6a83
sw x3, 0(x2) # store 0xa5a36bf1ee6a6a83 in memory
flh f31, 0(x2) # load 0xa5a36bf1ee6a6a83 from memory into f31
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f23, 0(x2) # load 0x00008400 from memory into f23
fnmadd.h f5, f21, f31, f23, dyn # perform operation
fnmadd.h f5, f21, f31, f23, rdn # perform operation
fnmadd.h f5, f21, f31, f23, rmm # perform operation
fnmadd.h f5, f21, f31, f23, rne # perform operation
fnmadd.h f5, f21, f31, f23, rtz # perform operation
fnmadd.h f5, f21, f31, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f5, f21, f31, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f5, f21, f31, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f5, f21, f31, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f5, f21, f31, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f5, f21, f31, f23 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7bff fs3 = 0x7bff)
li x15, 0xb29f7a51b3597fe5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f27, 0(x2) # load 0x00007bff from memory into f27
li x3, 0x1624c078220a24bc # load x3 with value 0x1624c078220a24bc
sw x3, 0(x2) # store 0x1624c078220a24bc in memory
flh f21, 0(x2) # load 0x1624c078220a24bc from memory into f21
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f1, 0(x2) # load 0x00007bff from memory into f1
fnmadd.h f15, f27, f21, f1, dyn # perform operation
fnmadd.h f15, f27, f21, f1, rdn # perform operation
fnmadd.h f15, f27, f21, f1, rmm # perform operation
fnmadd.h f15, f27, f21, f1, rne # perform operation
fnmadd.h f15, f27, f21, f1, rtz # perform operation
fnmadd.h f15, f27, f21, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f15, f27, f21, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f15, f27, f21, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f15, f27, f21, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f15, f27, f21, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f15, f27, f21, f1 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7bff fs3 = 0xfbff)
li x14, 0xcd34c7199b06fb2f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f16, 0(x2) # load 0x00007bff from memory into f16
li x3, 0xd449abb5ec178b7a # load x3 with value 0xd449abb5ec178b7a
sw x3, 0(x2) # store 0xd449abb5ec178b7a in memory
flh f13, 0(x2) # load 0xd449abb5ec178b7a from memory into f13
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f9, 0(x2) # load 0x0000fbff from memory into f9
fnmadd.h f14, f16, f13, f9, dyn # perform operation
fnmadd.h f14, f16, f13, f9, rdn # perform operation
fnmadd.h f14, f16, f13, f9, rmm # perform operation
fnmadd.h f14, f16, f13, f9, rne # perform operation
fnmadd.h f14, f16, f13, f9, rtz # perform operation
fnmadd.h f14, f16, f13, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f14, f16, f13, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f14, f16, f13, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f14, f16, f13, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f14, f16, f13, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f14, f16, f13, f9 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7bff fs3 = 0x3ff)
li x11, 0x6c5c033359fe0d83 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f9, 0(x2) # load 0x00007bff from memory into f9
li x3, 0x8e50baae134226a9 # load x3 with value 0x8e50baae134226a9
sw x3, 0(x2) # store 0x8e50baae134226a9 in memory
flh f19, 0(x2) # load 0x8e50baae134226a9 from memory into f19
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f7, 0(x2) # load 0x000003ff from memory into f7
fnmadd.h f11, f9, f19, f7, dyn # perform operation
fnmadd.h f11, f9, f19, f7, rdn # perform operation
fnmadd.h f11, f9, f19, f7, rmm # perform operation
fnmadd.h f11, f9, f19, f7, rne # perform operation
fnmadd.h f11, f9, f19, f7, rtz # perform operation
fnmadd.h f11, f9, f19, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f11, f9, f19, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f11, f9, f19, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f11, f9, f19, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f11, f9, f19, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f11, f9, f19, f7 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7bff fs3 = 0x83ff)
li x16, 0xaa91f447589bb03e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f7, 0(x2) # load 0x00007bff from memory into f7
li x3, 0x549861c8c3e89f60 # load x3 with value 0x549861c8c3e89f60
sw x3, 0(x2) # store 0x549861c8c3e89f60 in memory
flh f6, 0(x2) # load 0x549861c8c3e89f60 from memory into f6
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f13, 0(x2) # load 0x000083ff from memory into f13
fnmadd.h f16, f7, f6, f13, dyn # perform operation
fnmadd.h f16, f7, f6, f13, rdn # perform operation
fnmadd.h f16, f7, f6, f13, rmm # perform operation
fnmadd.h f16, f7, f6, f13, rne # perform operation
fnmadd.h f16, f7, f6, f13, rtz # perform operation
fnmadd.h f16, f7, f6, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f16, f7, f6, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f16, f7, f6, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f16, f7, f6, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f16, f7, f6, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f16, f7, f6, f13 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7bff fs3 = 0x200)
li x5, 0xdee5c53a599c675c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f2, 0(x2) # load 0x00007bff from memory into f2
li x3, 0x3bc1ed3de3e8f404 # load x3 with value 0x3bc1ed3de3e8f404
sw x3, 0(x2) # store 0x3bc1ed3de3e8f404 in memory
flh f7, 0(x2) # load 0x3bc1ed3de3e8f404 from memory into f7
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f3, 0(x2) # load 0x00000200 from memory into f3
fnmadd.h f5, f2, f7, f3, dyn # perform operation
fnmadd.h f5, f2, f7, f3, rdn # perform operation
fnmadd.h f5, f2, f7, f3, rmm # perform operation
fnmadd.h f5, f2, f7, f3, rne # perform operation
fnmadd.h f5, f2, f7, f3, rtz # perform operation
fnmadd.h f5, f2, f7, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f5, f2, f7, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f5, f2, f7, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f5, f2, f7, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f5, f2, f7, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f5, f2, f7, f3 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7bff fs3 = 0x8200)
li x27, 0xebcd9a21fda697b5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f16, 0(x2) # load 0x00007bff from memory into f16
li x3, 0x4c5fec4bf0078e72 # load x3 with value 0x4c5fec4bf0078e72
sw x3, 0(x2) # store 0x4c5fec4bf0078e72 in memory
flh f12, 0(x2) # load 0x4c5fec4bf0078e72 from memory into f12
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f13, 0(x2) # load 0x00008200 from memory into f13
fnmadd.h f27, f16, f12, f13, dyn # perform operation
fnmadd.h f27, f16, f12, f13, rdn # perform operation
fnmadd.h f27, f16, f12, f13, rmm # perform operation
fnmadd.h f27, f16, f12, f13, rne # perform operation
fnmadd.h f27, f16, f12, f13, rtz # perform operation
fnmadd.h f27, f16, f12, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f27, f16, f12, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f27, f16, f12, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f27, f16, f12, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f27, f16, f12, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f27, f16, f12, f13 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7bff fs3 = 0x1)
li x16, 0x3eca2539e96ac3bb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f29, 0(x2) # load 0x00007bff from memory into f29
li x3, 0xf149f40d8f14f48e # load x3 with value 0xf149f40d8f14f48e
sw x3, 0(x2) # store 0xf149f40d8f14f48e in memory
flh f26, 0(x2) # load 0xf149f40d8f14f48e from memory into f26
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f14, 0(x2) # load 0x00000001 from memory into f14
fnmadd.h f16, f29, f26, f14, dyn # perform operation
fnmadd.h f16, f29, f26, f14, rdn # perform operation
fnmadd.h f16, f29, f26, f14, rmm # perform operation
fnmadd.h f16, f29, f26, f14, rne # perform operation
fnmadd.h f16, f29, f26, f14, rtz # perform operation
fnmadd.h f16, f29, f26, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f16, f29, f26, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f16, f29, f26, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f16, f29, f26, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f16, f29, f26, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f16, f29, f26, f14 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7bff fs3 = 0x8001)
li x25, 0xcacaec90c1b8aaf2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f16, 0(x2) # load 0x00007bff from memory into f16
li x3, 0xbca65edc2de7306e # load x3 with value 0xbca65edc2de7306e
sw x3, 0(x2) # store 0xbca65edc2de7306e in memory
flh f1, 0(x2) # load 0xbca65edc2de7306e from memory into f1
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f31, 0(x2) # load 0x00008001 from memory into f31
fnmadd.h f25, f16, f1, f31, dyn # perform operation
fnmadd.h f25, f16, f1, f31, rdn # perform operation
fnmadd.h f25, f16, f1, f31, rmm # perform operation
fnmadd.h f25, f16, f1, f31, rne # perform operation
fnmadd.h f25, f16, f1, f31, rtz # perform operation
fnmadd.h f25, f16, f1, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f25, f16, f1, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f25, f16, f1, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f25, f16, f1, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f25, f16, f1, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f25, f16, f1, f31 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7bff fs3 = 0x7c00)
li x6, 0x33eb11cd211f20f6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f20, 0(x2) # load 0x00007bff from memory into f20
li x3, 0x7e9e6657f778a3df # load x3 with value 0x7e9e6657f778a3df
sw x3, 0(x2) # store 0x7e9e6657f778a3df in memory
flh f10, 0(x2) # load 0x7e9e6657f778a3df from memory into f10
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f29, 0(x2) # load 0x00007c00 from memory into f29
fnmadd.h f6, f20, f10, f29, dyn # perform operation
fnmadd.h f6, f20, f10, f29, rdn # perform operation
fnmadd.h f6, f20, f10, f29, rmm # perform operation
fnmadd.h f6, f20, f10, f29, rne # perform operation
fnmadd.h f6, f20, f10, f29, rtz # perform operation
fnmadd.h f6, f20, f10, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f6, f20, f10, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f6, f20, f10, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f6, f20, f10, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f6, f20, f10, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f6, f20, f10, f29 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7bff fs3 = 0xfc00)
li x7, 0xf3a98f6178e0d12b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f19, 0(x2) # load 0x00007bff from memory into f19
li x3, 0x8c694dd0fa30c229 # load x3 with value 0x8c694dd0fa30c229
sw x3, 0(x2) # store 0x8c694dd0fa30c229 in memory
flh f17, 0(x2) # load 0x8c694dd0fa30c229 from memory into f17
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f27, 0(x2) # load 0x0000fc00 from memory into f27
fnmadd.h f7, f19, f17, f27, dyn # perform operation
fnmadd.h f7, f19, f17, f27, rdn # perform operation
fnmadd.h f7, f19, f17, f27, rmm # perform operation
fnmadd.h f7, f19, f17, f27, rne # perform operation
fnmadd.h f7, f19, f17, f27, rtz # perform operation
fnmadd.h f7, f19, f17, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f7, f19, f17, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f7, f19, f17, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f7, f19, f17, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f7, f19, f17, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f7, f19, f17, f27 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7bff fs3 = 0x7e00)
li x4, 0x8419789afc8ebf6e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f27, 0(x2) # load 0x00007bff from memory into f27
li x3, 0x67ebea558a554d04 # load x3 with value 0x67ebea558a554d04
sw x3, 0(x2) # store 0x67ebea558a554d04 in memory
flh f18, 0(x2) # load 0x67ebea558a554d04 from memory into f18
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f20, 0(x2) # load 0x00007e00 from memory into f20
fnmadd.h f4, f27, f18, f20, dyn # perform operation
fnmadd.h f4, f27, f18, f20, rdn # perform operation
fnmadd.h f4, f27, f18, f20, rmm # perform operation
fnmadd.h f4, f27, f18, f20, rne # perform operation
fnmadd.h f4, f27, f18, f20, rtz # perform operation
fnmadd.h f4, f27, f18, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f4, f27, f18, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f4, f27, f18, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f4, f27, f18, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f4, f27, f18, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f4, f27, f18, f20 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7bff fs3 = 0x7fff)
li x13, 0x11b82f9bed6298d1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f25, 0(x2) # load 0x00007bff from memory into f25
li x3, 0x38be5016ef3e5532 # load x3 with value 0x38be5016ef3e5532
sw x3, 0(x2) # store 0x38be5016ef3e5532 in memory
flh f17, 0(x2) # load 0x38be5016ef3e5532 from memory into f17
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f4, 0(x2) # load 0x00007fff from memory into f4
fnmadd.h f13, f25, f17, f4, dyn # perform operation
fnmadd.h f13, f25, f17, f4, rdn # perform operation
fnmadd.h f13, f25, f17, f4, rmm # perform operation
fnmadd.h f13, f25, f17, f4, rne # perform operation
fnmadd.h f13, f25, f17, f4, rtz # perform operation
fnmadd.h f13, f25, f17, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f13, f25, f17, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f13, f25, f17, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f13, f25, f17, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f13, f25, f17, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f13, f25, f17, f4 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7bff fs3 = 0x7c01)
li x20, 0xa43d7b9fe2f2d13c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f25, 0(x2) # load 0x00007bff from memory into f25
li x3, 0x416d2c7ec1d3a65c # load x3 with value 0x416d2c7ec1d3a65c
sw x3, 0(x2) # store 0x416d2c7ec1d3a65c in memory
flh f9, 0(x2) # load 0x416d2c7ec1d3a65c from memory into f9
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f12, 0(x2) # load 0x00007c01 from memory into f12
fnmadd.h f20, f25, f9, f12, dyn # perform operation
fnmadd.h f20, f25, f9, f12, rdn # perform operation
fnmadd.h f20, f25, f9, f12, rmm # perform operation
fnmadd.h f20, f25, f9, f12, rne # perform operation
fnmadd.h f20, f25, f9, f12, rtz # perform operation
fnmadd.h f20, f25, f9, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f20, f25, f9, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f20, f25, f9, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f20, f25, f9, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f20, f25, f9, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f20, f25, f9, f12 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7bff fs3 = 0x7dff)
li x12, 0x78a2d8b8f2a031c8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f6, 0(x2) # load 0x00007bff from memory into f6
li x3, 0xbe09cbb24da4eeab # load x3 with value 0xbe09cbb24da4eeab
sw x3, 0(x2) # store 0xbe09cbb24da4eeab in memory
flh f19, 0(x2) # load 0xbe09cbb24da4eeab from memory into f19
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f27, 0(x2) # load 0x00007dff from memory into f27
fnmadd.h f12, f6, f19, f27, dyn # perform operation
fnmadd.h f12, f6, f19, f27, rdn # perform operation
fnmadd.h f12, f6, f19, f27, rmm # perform operation
fnmadd.h f12, f6, f19, f27, rne # perform operation
fnmadd.h f12, f6, f19, f27, rtz # perform operation
fnmadd.h f12, f6, f19, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f12, f6, f19, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f12, f6, f19, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f12, f6, f19, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f12, f6, f19, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f12, f6, f19, f27 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7bff fs3 = 0x58b4)
li x8, 0x984bbd82861c743b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f28, 0(x2) # load 0x00007bff from memory into f28
li x3, 0x739173731edf9138 # load x3 with value 0x739173731edf9138
sw x3, 0(x2) # store 0x739173731edf9138 in memory
flh f13, 0(x2) # load 0x739173731edf9138 from memory into f13
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f27, 0(x2) # load 0x000058b4 from memory into f27
fnmadd.h f8, f28, f13, f27, dyn # perform operation
fnmadd.h f8, f28, f13, f27, rdn # perform operation
fnmadd.h f8, f28, f13, f27, rmm # perform operation
fnmadd.h f8, f28, f13, f27, rne # perform operation
fnmadd.h f8, f28, f13, f27, rtz # perform operation
fnmadd.h f8, f28, f13, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f8, f28, f13, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f8, f28, f13, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f8, f28, f13, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f8, f28, f13, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f8, f28, f13, f27 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7bff fs3 = 0xc93a)
li x30, 0x13446437b24fccad # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f18, 0(x2) # load 0x00007bff from memory into f18
li x3, 0xa8d9263ede74c1f7 # load x3 with value 0xa8d9263ede74c1f7
sw x3, 0(x2) # store 0xa8d9263ede74c1f7 in memory
flh f26, 0(x2) # load 0xa8d9263ede74c1f7 from memory into f26
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f12, 0(x2) # load 0x0000c93a from memory into f12
fnmadd.h f30, f18, f26, f12, dyn # perform operation
fnmadd.h f30, f18, f26, f12, rdn # perform operation
fnmadd.h f30, f18, f26, f12, rmm # perform operation
fnmadd.h f30, f18, f26, f12, rne # perform operation
fnmadd.h f30, f18, f26, f12, rtz # perform operation
fnmadd.h f30, f18, f26, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f30, f18, f26, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f30, f18, f26, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f30, f18, f26, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f30, f18, f26, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f30, f18, f26, f12 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfbff fs3 = 0x0)
li x30, 0x69fd5a27b3635b9e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f15, 0(x2) # load 0x0000fbff from memory into f15
li x3, 0x10e268fe8cb06b53 # load x3 with value 0x10e268fe8cb06b53
sw x3, 0(x2) # store 0x10e268fe8cb06b53 in memory
flh f17, 0(x2) # load 0x10e268fe8cb06b53 from memory into f17
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f31, 0(x2) # load 0x00000000 from memory into f31
fnmadd.h f30, f15, f17, f31, dyn # perform operation
fnmadd.h f30, f15, f17, f31, rdn # perform operation
fnmadd.h f30, f15, f17, f31, rmm # perform operation
fnmadd.h f30, f15, f17, f31, rne # perform operation
fnmadd.h f30, f15, f17, f31, rtz # perform operation
fnmadd.h f30, f15, f17, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f30, f15, f17, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f30, f15, f17, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f30, f15, f17, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f30, f15, f17, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f30, f15, f17, f31 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfbff fs3 = 0x8000)
li x19, 0xe190dd651622e8b0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f6, 0(x2) # load 0x0000fbff from memory into f6
li x3, 0xe392904ea9d98639 # load x3 with value 0xe392904ea9d98639
sw x3, 0(x2) # store 0xe392904ea9d98639 in memory
flh f25, 0(x2) # load 0xe392904ea9d98639 from memory into f25
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f21, 0(x2) # load 0x00008000 from memory into f21
fnmadd.h f19, f6, f25, f21, dyn # perform operation
fnmadd.h f19, f6, f25, f21, rdn # perform operation
fnmadd.h f19, f6, f25, f21, rmm # perform operation
fnmadd.h f19, f6, f25, f21, rne # perform operation
fnmadd.h f19, f6, f25, f21, rtz # perform operation
fnmadd.h f19, f6, f25, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f19, f6, f25, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f19, f6, f25, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f19, f6, f25, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f19, f6, f25, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f19, f6, f25, f21 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfbff fs3 = 0x3c00)
li x16, 0xa6c4a7269021ee06 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f2, 0(x2) # load 0x0000fbff from memory into f2
li x3, 0xbabd4ac95041e862 # load x3 with value 0xbabd4ac95041e862
sw x3, 0(x2) # store 0xbabd4ac95041e862 in memory
flh f25, 0(x2) # load 0xbabd4ac95041e862 from memory into f25
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f15, 0(x2) # load 0x00003c00 from memory into f15
fnmadd.h f16, f2, f25, f15, dyn # perform operation
fnmadd.h f16, f2, f25, f15, rdn # perform operation
fnmadd.h f16, f2, f25, f15, rmm # perform operation
fnmadd.h f16, f2, f25, f15, rne # perform operation
fnmadd.h f16, f2, f25, f15, rtz # perform operation
fnmadd.h f16, f2, f25, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f16, f2, f25, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f16, f2, f25, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f16, f2, f25, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f16, f2, f25, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f16, f2, f25, f15 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfbff fs3 = 0xbc00)
li x21, 0xfc616579c7291a11 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f24, 0(x2) # load 0x0000fbff from memory into f24
li x3, 0x9b8a20c234421e15 # load x3 with value 0x9b8a20c234421e15
sw x3, 0(x2) # store 0x9b8a20c234421e15 in memory
flh f3, 0(x2) # load 0x9b8a20c234421e15 from memory into f3
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f8, 0(x2) # load 0x0000bc00 from memory into f8
fnmadd.h f21, f24, f3, f8, dyn # perform operation
fnmadd.h f21, f24, f3, f8, rdn # perform operation
fnmadd.h f21, f24, f3, f8, rmm # perform operation
fnmadd.h f21, f24, f3, f8, rne # perform operation
fnmadd.h f21, f24, f3, f8, rtz # perform operation
fnmadd.h f21, f24, f3, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f21, f24, f3, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f21, f24, f3, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f21, f24, f3, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f21, f24, f3, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f21, f24, f3, f8 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfbff fs3 = 0x3e00)
li x25, 0xb066a80459c1dcbe # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f15, 0(x2) # load 0x0000fbff from memory into f15
li x3, 0xab8482039b362b # load x3 with value 0xab8482039b362b
sw x3, 0(x2) # store 0xab8482039b362b in memory
flh f7, 0(x2) # load 0xab8482039b362b from memory into f7
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f5, 0(x2) # load 0x00003e00 from memory into f5
fnmadd.h f25, f15, f7, f5, dyn # perform operation
fnmadd.h f25, f15, f7, f5, rdn # perform operation
fnmadd.h f25, f15, f7, f5, rmm # perform operation
fnmadd.h f25, f15, f7, f5, rne # perform operation
fnmadd.h f25, f15, f7, f5, rtz # perform operation
fnmadd.h f25, f15, f7, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f25, f15, f7, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f25, f15, f7, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f25, f15, f7, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f25, f15, f7, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f25, f15, f7, f5 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfbff fs3 = 0xbe00)
li x7, 0x771adeea8bf145cf # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f15, 0(x2) # load 0x0000fbff from memory into f15
li x3, 0x2069f56624ba2a47 # load x3 with value 0x2069f56624ba2a47
sw x3, 0(x2) # store 0x2069f56624ba2a47 in memory
flh f18, 0(x2) # load 0x2069f56624ba2a47 from memory into f18
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f21, 0(x2) # load 0x0000be00 from memory into f21
fnmadd.h f7, f15, f18, f21, dyn # perform operation
fnmadd.h f7, f15, f18, f21, rdn # perform operation
fnmadd.h f7, f15, f18, f21, rmm # perform operation
fnmadd.h f7, f15, f18, f21, rne # perform operation
fnmadd.h f7, f15, f18, f21, rtz # perform operation
fnmadd.h f7, f15, f18, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f7, f15, f18, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f7, f15, f18, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f7, f15, f18, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f7, f15, f18, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f7, f15, f18, f21 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfbff fs3 = 0x4000)
li x25, 0x7f124e96a322b2f6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f1, 0(x2) # load 0x0000fbff from memory into f1
li x3, 0xeac7dace4ca733d6 # load x3 with value 0xeac7dace4ca733d6
sw x3, 0(x2) # store 0xeac7dace4ca733d6 in memory
flh f28, 0(x2) # load 0xeac7dace4ca733d6 from memory into f28
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f19, 0(x2) # load 0x00004000 from memory into f19
fnmadd.h f25, f1, f28, f19, dyn # perform operation
fnmadd.h f25, f1, f28, f19, rdn # perform operation
fnmadd.h f25, f1, f28, f19, rmm # perform operation
fnmadd.h f25, f1, f28, f19, rne # perform operation
fnmadd.h f25, f1, f28, f19, rtz # perform operation
fnmadd.h f25, f1, f28, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f25, f1, f28, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f25, f1, f28, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f25, f1, f28, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f25, f1, f28, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f25, f1, f28, f19 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfbff fs3 = 0xc000)
li x30, 0xbea7baae2fa12b38 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f28, 0(x2) # load 0x0000fbff from memory into f28
li x3, 0x5dffe7046cde7b74 # load x3 with value 0x5dffe7046cde7b74
sw x3, 0(x2) # store 0x5dffe7046cde7b74 in memory
flh f19, 0(x2) # load 0x5dffe7046cde7b74 from memory into f19
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f3, 0(x2) # load 0x0000c000 from memory into f3
fnmadd.h f30, f28, f19, f3, dyn # perform operation
fnmadd.h f30, f28, f19, f3, rdn # perform operation
fnmadd.h f30, f28, f19, f3, rmm # perform operation
fnmadd.h f30, f28, f19, f3, rne # perform operation
fnmadd.h f30, f28, f19, f3, rtz # perform operation
fnmadd.h f30, f28, f19, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f30, f28, f19, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f30, f28, f19, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f30, f28, f19, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f30, f28, f19, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f30, f28, f19, f3 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfbff fs3 = 0x400)
li x3, 0x31ea186f54ef5bdc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f21, 0(x2) # load 0x0000fbff from memory into f21
li x3, 0xbe40b89d32b79f75 # load x3 with value 0xbe40b89d32b79f75
sw x3, 0(x2) # store 0xbe40b89d32b79f75 in memory
flh f5, 0(x2) # load 0xbe40b89d32b79f75 from memory into f5
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f23, 0(x2) # load 0x00000400 from memory into f23
fnmadd.h f3, f21, f5, f23, dyn # perform operation
fnmadd.h f3, f21, f5, f23, rdn # perform operation
fnmadd.h f3, f21, f5, f23, rmm # perform operation
fnmadd.h f3, f21, f5, f23, rne # perform operation
fnmadd.h f3, f21, f5, f23, rtz # perform operation
fnmadd.h f3, f21, f5, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f3, f21, f5, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f3, f21, f5, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f3, f21, f5, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f3, f21, f5, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f3, f21, f5, f23 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfbff fs3 = 0x8400)
li x30, 0x77b4b8254a057c9f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f12, 0(x2) # load 0x0000fbff from memory into f12
li x3, 0x847f96105194139f # load x3 with value 0x847f96105194139f
sw x3, 0(x2) # store 0x847f96105194139f in memory
flh f16, 0(x2) # load 0x847f96105194139f from memory into f16
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f28, 0(x2) # load 0x00008400 from memory into f28
fnmadd.h f30, f12, f16, f28, dyn # perform operation
fnmadd.h f30, f12, f16, f28, rdn # perform operation
fnmadd.h f30, f12, f16, f28, rmm # perform operation
fnmadd.h f30, f12, f16, f28, rne # perform operation
fnmadd.h f30, f12, f16, f28, rtz # perform operation
fnmadd.h f30, f12, f16, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f30, f12, f16, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f30, f12, f16, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f30, f12, f16, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f30, f12, f16, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f30, f12, f16, f28 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfbff fs3 = 0x7bff)
li x11, 0xb50d06c066730a41 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f12, 0(x2) # load 0x0000fbff from memory into f12
li x3, 0x2dbde7e0016f7228 # load x3 with value 0x2dbde7e0016f7228
sw x3, 0(x2) # store 0x2dbde7e0016f7228 in memory
flh f29, 0(x2) # load 0x2dbde7e0016f7228 from memory into f29
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f23, 0(x2) # load 0x00007bff from memory into f23
fnmadd.h f11, f12, f29, f23, dyn # perform operation
fnmadd.h f11, f12, f29, f23, rdn # perform operation
fnmadd.h f11, f12, f29, f23, rmm # perform operation
fnmadd.h f11, f12, f29, f23, rne # perform operation
fnmadd.h f11, f12, f29, f23, rtz # perform operation
fnmadd.h f11, f12, f29, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f11, f12, f29, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f11, f12, f29, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f11, f12, f29, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f11, f12, f29, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f11, f12, f29, f23 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfbff fs3 = 0xfbff)
li x1, 0x7ac4ba8eb3c6c473 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f25, 0(x2) # load 0x0000fbff from memory into f25
li x3, 0x2b4c95f318a01a61 # load x3 with value 0x2b4c95f318a01a61
sw x3, 0(x2) # store 0x2b4c95f318a01a61 in memory
flh f8, 0(x2) # load 0x2b4c95f318a01a61 from memory into f8
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f3, 0(x2) # load 0x0000fbff from memory into f3
fnmadd.h f1, f25, f8, f3, dyn # perform operation
fnmadd.h f1, f25, f8, f3, rdn # perform operation
fnmadd.h f1, f25, f8, f3, rmm # perform operation
fnmadd.h f1, f25, f8, f3, rne # perform operation
fnmadd.h f1, f25, f8, f3, rtz # perform operation
fnmadd.h f1, f25, f8, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f1, f25, f8, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f1, f25, f8, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f1, f25, f8, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f1, f25, f8, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f1, f25, f8, f3 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfbff fs3 = 0x3ff)
li x18, 0xb2aa49942cafc0fd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f17, 0(x2) # load 0x0000fbff from memory into f17
li x3, 0x3b817216d150f80 # load x3 with value 0x3b817216d150f80
sw x3, 0(x2) # store 0x3b817216d150f80 in memory
flh f20, 0(x2) # load 0x3b817216d150f80 from memory into f20
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f4, 0(x2) # load 0x000003ff from memory into f4
fnmadd.h f18, f17, f20, f4, dyn # perform operation
fnmadd.h f18, f17, f20, f4, rdn # perform operation
fnmadd.h f18, f17, f20, f4, rmm # perform operation
fnmadd.h f18, f17, f20, f4, rne # perform operation
fnmadd.h f18, f17, f20, f4, rtz # perform operation
fnmadd.h f18, f17, f20, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f18, f17, f20, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f18, f17, f20, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f18, f17, f20, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f18, f17, f20, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f18, f17, f20, f4 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfbff fs3 = 0x83ff)
li x20, 0x51827a3b54f8e72f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f15, 0(x2) # load 0x0000fbff from memory into f15
li x3, 0x6990e3240e68355a # load x3 with value 0x6990e3240e68355a
sw x3, 0(x2) # store 0x6990e3240e68355a in memory
flh f21, 0(x2) # load 0x6990e3240e68355a from memory into f21
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f28, 0(x2) # load 0x000083ff from memory into f28
fnmadd.h f20, f15, f21, f28, dyn # perform operation
fnmadd.h f20, f15, f21, f28, rdn # perform operation
fnmadd.h f20, f15, f21, f28, rmm # perform operation
fnmadd.h f20, f15, f21, f28, rne # perform operation
fnmadd.h f20, f15, f21, f28, rtz # perform operation
fnmadd.h f20, f15, f21, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f20, f15, f21, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f20, f15, f21, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f20, f15, f21, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f20, f15, f21, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f20, f15, f21, f28 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfbff fs3 = 0x200)
li x18, 0x1cd54014cfd59379 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f12, 0(x2) # load 0x0000fbff from memory into f12
li x3, 0x8cdc317dc9943831 # load x3 with value 0x8cdc317dc9943831
sw x3, 0(x2) # store 0x8cdc317dc9943831 in memory
flh f31, 0(x2) # load 0x8cdc317dc9943831 from memory into f31
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f6, 0(x2) # load 0x00000200 from memory into f6
fnmadd.h f18, f12, f31, f6, dyn # perform operation
fnmadd.h f18, f12, f31, f6, rdn # perform operation
fnmadd.h f18, f12, f31, f6, rmm # perform operation
fnmadd.h f18, f12, f31, f6, rne # perform operation
fnmadd.h f18, f12, f31, f6, rtz # perform operation
fnmadd.h f18, f12, f31, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f18, f12, f31, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f18, f12, f31, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f18, f12, f31, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f18, f12, f31, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f18, f12, f31, f6 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfbff fs3 = 0x8200)
li x28, 0xa5cd75ea63c0ee26 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f9, 0(x2) # load 0x0000fbff from memory into f9
li x3, 0xc5db6385b2e740fe # load x3 with value 0xc5db6385b2e740fe
sw x3, 0(x2) # store 0xc5db6385b2e740fe in memory
flh f5, 0(x2) # load 0xc5db6385b2e740fe from memory into f5
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f17, 0(x2) # load 0x00008200 from memory into f17
fnmadd.h f28, f9, f5, f17, dyn # perform operation
fnmadd.h f28, f9, f5, f17, rdn # perform operation
fnmadd.h f28, f9, f5, f17, rmm # perform operation
fnmadd.h f28, f9, f5, f17, rne # perform operation
fnmadd.h f28, f9, f5, f17, rtz # perform operation
fnmadd.h f28, f9, f5, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f28, f9, f5, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f28, f9, f5, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f28, f9, f5, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f28, f9, f5, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f28, f9, f5, f17 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfbff fs3 = 0x1)
li x3, 0x16923477c18d81f7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f7, 0(x2) # load 0x0000fbff from memory into f7
li x3, 0x7a0ab63f77838c0 # load x3 with value 0x7a0ab63f77838c0
sw x3, 0(x2) # store 0x7a0ab63f77838c0 in memory
flh f2, 0(x2) # load 0x7a0ab63f77838c0 from memory into f2
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f30, 0(x2) # load 0x00000001 from memory into f30
fnmadd.h f3, f7, f2, f30, dyn # perform operation
fnmadd.h f3, f7, f2, f30, rdn # perform operation
fnmadd.h f3, f7, f2, f30, rmm # perform operation
fnmadd.h f3, f7, f2, f30, rne # perform operation
fnmadd.h f3, f7, f2, f30, rtz # perform operation
fnmadd.h f3, f7, f2, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f3, f7, f2, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f3, f7, f2, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f3, f7, f2, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f3, f7, f2, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f3, f7, f2, f30 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfbff fs3 = 0x8001)
li x25, 0x7fa992f9b49b2743 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f29, 0(x2) # load 0x0000fbff from memory into f29
li x3, 0x9eab6d30671f8c2f # load x3 with value 0x9eab6d30671f8c2f
sw x3, 0(x2) # store 0x9eab6d30671f8c2f in memory
flh f12, 0(x2) # load 0x9eab6d30671f8c2f from memory into f12
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f28, 0(x2) # load 0x00008001 from memory into f28
fnmadd.h f25, f29, f12, f28, dyn # perform operation
fnmadd.h f25, f29, f12, f28, rdn # perform operation
fnmadd.h f25, f29, f12, f28, rmm # perform operation
fnmadd.h f25, f29, f12, f28, rne # perform operation
fnmadd.h f25, f29, f12, f28, rtz # perform operation
fnmadd.h f25, f29, f12, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f25, f29, f12, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f25, f29, f12, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f25, f29, f12, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f25, f29, f12, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f25, f29, f12, f28 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfbff fs3 = 0x7c00)
li x11, 0x0495caa7620d2f04 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f29, 0(x2) # load 0x0000fbff from memory into f29
li x3, 0x116531e408e19618 # load x3 with value 0x116531e408e19618
sw x3, 0(x2) # store 0x116531e408e19618 in memory
flh f4, 0(x2) # load 0x116531e408e19618 from memory into f4
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f12, 0(x2) # load 0x00007c00 from memory into f12
fnmadd.h f11, f29, f4, f12, dyn # perform operation
fnmadd.h f11, f29, f4, f12, rdn # perform operation
fnmadd.h f11, f29, f4, f12, rmm # perform operation
fnmadd.h f11, f29, f4, f12, rne # perform operation
fnmadd.h f11, f29, f4, f12, rtz # perform operation
fnmadd.h f11, f29, f4, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f11, f29, f4, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f11, f29, f4, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f11, f29, f4, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f11, f29, f4, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f11, f29, f4, f12 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfbff fs3 = 0xfc00)
li x17, 0x7754bfbbfe9a32e0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f18, 0(x2) # load 0x0000fbff from memory into f18
li x3, 0xc2e4a1739d1eb45a # load x3 with value 0xc2e4a1739d1eb45a
sw x3, 0(x2) # store 0xc2e4a1739d1eb45a in memory
flh f1, 0(x2) # load 0xc2e4a1739d1eb45a from memory into f1
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f9, 0(x2) # load 0x0000fc00 from memory into f9
fnmadd.h f17, f18, f1, f9, dyn # perform operation
fnmadd.h f17, f18, f1, f9, rdn # perform operation
fnmadd.h f17, f18, f1, f9, rmm # perform operation
fnmadd.h f17, f18, f1, f9, rne # perform operation
fnmadd.h f17, f18, f1, f9, rtz # perform operation
fnmadd.h f17, f18, f1, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f17, f18, f1, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f17, f18, f1, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f17, f18, f1, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f17, f18, f1, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f17, f18, f1, f9 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfbff fs3 = 0x7e00)
li x25, 0x0ff72ee1deedcbb7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f18, 0(x2) # load 0x0000fbff from memory into f18
li x3, 0x6e3f7fc8caffcb73 # load x3 with value 0x6e3f7fc8caffcb73
sw x3, 0(x2) # store 0x6e3f7fc8caffcb73 in memory
flh f26, 0(x2) # load 0x6e3f7fc8caffcb73 from memory into f26
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f14, 0(x2) # load 0x00007e00 from memory into f14
fnmadd.h f25, f18, f26, f14, dyn # perform operation
fnmadd.h f25, f18, f26, f14, rdn # perform operation
fnmadd.h f25, f18, f26, f14, rmm # perform operation
fnmadd.h f25, f18, f26, f14, rne # perform operation
fnmadd.h f25, f18, f26, f14, rtz # perform operation
fnmadd.h f25, f18, f26, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f25, f18, f26, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f25, f18, f26, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f25, f18, f26, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f25, f18, f26, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f25, f18, f26, f14 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfbff fs3 = 0x7fff)
li x22, 0x27104aef1f79f216 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f15, 0(x2) # load 0x0000fbff from memory into f15
li x3, 0xf04f0f2ebf1c3bf0 # load x3 with value 0xf04f0f2ebf1c3bf0
sw x3, 0(x2) # store 0xf04f0f2ebf1c3bf0 in memory
flh f8, 0(x2) # load 0xf04f0f2ebf1c3bf0 from memory into f8
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f25, 0(x2) # load 0x00007fff from memory into f25
fnmadd.h f22, f15, f8, f25, dyn # perform operation
fnmadd.h f22, f15, f8, f25, rdn # perform operation
fnmadd.h f22, f15, f8, f25, rmm # perform operation
fnmadd.h f22, f15, f8, f25, rne # perform operation
fnmadd.h f22, f15, f8, f25, rtz # perform operation
fnmadd.h f22, f15, f8, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f22, f15, f8, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f22, f15, f8, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f22, f15, f8, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f22, f15, f8, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f22, f15, f8, f25 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfbff fs3 = 0x7c01)
li x3, 0x8af8dad261192a44 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f22, 0(x2) # load 0x0000fbff from memory into f22
li x3, 0xa0e5532d82149969 # load x3 with value 0xa0e5532d82149969
sw x3, 0(x2) # store 0xa0e5532d82149969 in memory
flh f16, 0(x2) # load 0xa0e5532d82149969 from memory into f16
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f20, 0(x2) # load 0x00007c01 from memory into f20
fnmadd.h f3, f22, f16, f20, dyn # perform operation
fnmadd.h f3, f22, f16, f20, rdn # perform operation
fnmadd.h f3, f22, f16, f20, rmm # perform operation
fnmadd.h f3, f22, f16, f20, rne # perform operation
fnmadd.h f3, f22, f16, f20, rtz # perform operation
fnmadd.h f3, f22, f16, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f3, f22, f16, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f3, f22, f16, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f3, f22, f16, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f3, f22, f16, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f3, f22, f16, f20 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfbff fs3 = 0x7dff)
li x4, 0x7d89dd875c3e1fee # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f14, 0(x2) # load 0x0000fbff from memory into f14
li x3, 0xc0dfa29bdc4e48ed # load x3 with value 0xc0dfa29bdc4e48ed
sw x3, 0(x2) # store 0xc0dfa29bdc4e48ed in memory
flh f24, 0(x2) # load 0xc0dfa29bdc4e48ed from memory into f24
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f7, 0(x2) # load 0x00007dff from memory into f7
fnmadd.h f4, f14, f24, f7, dyn # perform operation
fnmadd.h f4, f14, f24, f7, rdn # perform operation
fnmadd.h f4, f14, f24, f7, rmm # perform operation
fnmadd.h f4, f14, f24, f7, rne # perform operation
fnmadd.h f4, f14, f24, f7, rtz # perform operation
fnmadd.h f4, f14, f24, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f4, f14, f24, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f4, f14, f24, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f4, f14, f24, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f4, f14, f24, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f4, f14, f24, f7 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfbff fs3 = 0x58b4)
li x27, 0xdaa2649540c45121 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f9, 0(x2) # load 0x0000fbff from memory into f9
li x3, 0x77091fde8e62a724 # load x3 with value 0x77091fde8e62a724
sw x3, 0(x2) # store 0x77091fde8e62a724 in memory
flh f6, 0(x2) # load 0x77091fde8e62a724 from memory into f6
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f2, 0(x2) # load 0x000058b4 from memory into f2
fnmadd.h f27, f9, f6, f2, dyn # perform operation
fnmadd.h f27, f9, f6, f2, rdn # perform operation
fnmadd.h f27, f9, f6, f2, rmm # perform operation
fnmadd.h f27, f9, f6, f2, rne # perform operation
fnmadd.h f27, f9, f6, f2, rtz # perform operation
fnmadd.h f27, f9, f6, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f27, f9, f6, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f27, f9, f6, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f27, f9, f6, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f27, f9, f6, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f27, f9, f6, f2 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfbff fs3 = 0xc93a)
li x22, 0x1c6d444f89cff9de # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f13, 0(x2) # load 0x0000fbff from memory into f13
li x3, 0x1bf3d3c0aa525522 # load x3 with value 0x1bf3d3c0aa525522
sw x3, 0(x2) # store 0x1bf3d3c0aa525522 in memory
flh f8, 0(x2) # load 0x1bf3d3c0aa525522 from memory into f8
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f16, 0(x2) # load 0x0000c93a from memory into f16
fnmadd.h f22, f13, f8, f16, dyn # perform operation
fnmadd.h f22, f13, f8, f16, rdn # perform operation
fnmadd.h f22, f13, f8, f16, rmm # perform operation
fnmadd.h f22, f13, f8, f16, rne # perform operation
fnmadd.h f22, f13, f8, f16, rtz # perform operation
fnmadd.h f22, f13, f8, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f22, f13, f8, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f22, f13, f8, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f22, f13, f8, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f22, f13, f8, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f22, f13, f8, f16 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3ff fs3 = 0x0)
li x14, 0x4edc75d09f5735e1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f9, 0(x2) # load 0x000003ff from memory into f9
li x3, 0x338e81d5479fd24d # load x3 with value 0x338e81d5479fd24d
sw x3, 0(x2) # store 0x338e81d5479fd24d in memory
flh f19, 0(x2) # load 0x338e81d5479fd24d from memory into f19
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f25, 0(x2) # load 0x00000000 from memory into f25
fnmadd.h f14, f9, f19, f25, dyn # perform operation
fnmadd.h f14, f9, f19, f25, rdn # perform operation
fnmadd.h f14, f9, f19, f25, rmm # perform operation
fnmadd.h f14, f9, f19, f25, rne # perform operation
fnmadd.h f14, f9, f19, f25, rtz # perform operation
fnmadd.h f14, f9, f19, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f14, f9, f19, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f14, f9, f19, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f14, f9, f19, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f14, f9, f19, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f14, f9, f19, f25 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3ff fs3 = 0x8000)
li x24, 0xfed9dd655250d2ad # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f31, 0(x2) # load 0x000003ff from memory into f31
li x3, 0xbfb1c58865ba5d09 # load x3 with value 0xbfb1c58865ba5d09
sw x3, 0(x2) # store 0xbfb1c58865ba5d09 in memory
flh f3, 0(x2) # load 0xbfb1c58865ba5d09 from memory into f3
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f9, 0(x2) # load 0x00008000 from memory into f9
fnmadd.h f24, f31, f3, f9, dyn # perform operation
fnmadd.h f24, f31, f3, f9, rdn # perform operation
fnmadd.h f24, f31, f3, f9, rmm # perform operation
fnmadd.h f24, f31, f3, f9, rne # perform operation
fnmadd.h f24, f31, f3, f9, rtz # perform operation
fnmadd.h f24, f31, f3, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f24, f31, f3, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f24, f31, f3, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f24, f31, f3, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f24, f31, f3, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f24, f31, f3, f9 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3ff fs3 = 0x3c00)
li x12, 0x04f1e41c5fbb011e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f8, 0(x2) # load 0x000003ff from memory into f8
li x3, 0x6ac44558a7317e6c # load x3 with value 0x6ac44558a7317e6c
sw x3, 0(x2) # store 0x6ac44558a7317e6c in memory
flh f30, 0(x2) # load 0x6ac44558a7317e6c from memory into f30
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f6, 0(x2) # load 0x00003c00 from memory into f6
fnmadd.h f12, f8, f30, f6, dyn # perform operation
fnmadd.h f12, f8, f30, f6, rdn # perform operation
fnmadd.h f12, f8, f30, f6, rmm # perform operation
fnmadd.h f12, f8, f30, f6, rne # perform operation
fnmadd.h f12, f8, f30, f6, rtz # perform operation
fnmadd.h f12, f8, f30, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f12, f8, f30, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f12, f8, f30, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f12, f8, f30, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f12, f8, f30, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f12, f8, f30, f6 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3ff fs3 = 0xbc00)
li x5, 0xd1af840160bf0d57 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f20, 0(x2) # load 0x000003ff from memory into f20
li x3, 0xa1998bcfc32f28f4 # load x3 with value 0xa1998bcfc32f28f4
sw x3, 0(x2) # store 0xa1998bcfc32f28f4 in memory
flh f23, 0(x2) # load 0xa1998bcfc32f28f4 from memory into f23
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f16, 0(x2) # load 0x0000bc00 from memory into f16
fnmadd.h f5, f20, f23, f16, dyn # perform operation
fnmadd.h f5, f20, f23, f16, rdn # perform operation
fnmadd.h f5, f20, f23, f16, rmm # perform operation
fnmadd.h f5, f20, f23, f16, rne # perform operation
fnmadd.h f5, f20, f23, f16, rtz # perform operation
fnmadd.h f5, f20, f23, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f5, f20, f23, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f5, f20, f23, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f5, f20, f23, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f5, f20, f23, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f5, f20, f23, f16 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3ff fs3 = 0x3e00)
li x30, 0xd206bedac13b0962 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f5, 0(x2) # load 0x000003ff from memory into f5
li x3, 0x8e1433050db0e8a7 # load x3 with value 0x8e1433050db0e8a7
sw x3, 0(x2) # store 0x8e1433050db0e8a7 in memory
flh f13, 0(x2) # load 0x8e1433050db0e8a7 from memory into f13
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f24, 0(x2) # load 0x00003e00 from memory into f24
fnmadd.h f30, f5, f13, f24, dyn # perform operation
fnmadd.h f30, f5, f13, f24, rdn # perform operation
fnmadd.h f30, f5, f13, f24, rmm # perform operation
fnmadd.h f30, f5, f13, f24, rne # perform operation
fnmadd.h f30, f5, f13, f24, rtz # perform operation
fnmadd.h f30, f5, f13, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f30, f5, f13, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f30, f5, f13, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f30, f5, f13, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f30, f5, f13, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f30, f5, f13, f24 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3ff fs3 = 0xbe00)
li x18, 0x860d14e0d423dfc7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f4, 0(x2) # load 0x000003ff from memory into f4
li x3, 0x8305ab94c665912f # load x3 with value 0x8305ab94c665912f
sw x3, 0(x2) # store 0x8305ab94c665912f in memory
flh f25, 0(x2) # load 0x8305ab94c665912f from memory into f25
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f29, 0(x2) # load 0x0000be00 from memory into f29
fnmadd.h f18, f4, f25, f29, dyn # perform operation
fnmadd.h f18, f4, f25, f29, rdn # perform operation
fnmadd.h f18, f4, f25, f29, rmm # perform operation
fnmadd.h f18, f4, f25, f29, rne # perform operation
fnmadd.h f18, f4, f25, f29, rtz # perform operation
fnmadd.h f18, f4, f25, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f18, f4, f25, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f18, f4, f25, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f18, f4, f25, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f18, f4, f25, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f18, f4, f25, f29 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3ff fs3 = 0x4000)
li x30, 0xe354f300cad4ff2b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f5, 0(x2) # load 0x000003ff from memory into f5
li x3, 0x19b57c4826495169 # load x3 with value 0x19b57c4826495169
sw x3, 0(x2) # store 0x19b57c4826495169 in memory
flh f27, 0(x2) # load 0x19b57c4826495169 from memory into f27
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f10, 0(x2) # load 0x00004000 from memory into f10
fnmadd.h f30, f5, f27, f10, dyn # perform operation
fnmadd.h f30, f5, f27, f10, rdn # perform operation
fnmadd.h f30, f5, f27, f10, rmm # perform operation
fnmadd.h f30, f5, f27, f10, rne # perform operation
fnmadd.h f30, f5, f27, f10, rtz # perform operation
fnmadd.h f30, f5, f27, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f30, f5, f27, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f30, f5, f27, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f30, f5, f27, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f30, f5, f27, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f30, f5, f27, f10 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3ff fs3 = 0xc000)
li x28, 0xa915b55ed86fdf62 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f11, 0(x2) # load 0x000003ff from memory into f11
li x3, 0xe10c9cff59fdf782 # load x3 with value 0xe10c9cff59fdf782
sw x3, 0(x2) # store 0xe10c9cff59fdf782 in memory
flh f6, 0(x2) # load 0xe10c9cff59fdf782 from memory into f6
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f2, 0(x2) # load 0x0000c000 from memory into f2
fnmadd.h f28, f11, f6, f2, dyn # perform operation
fnmadd.h f28, f11, f6, f2, rdn # perform operation
fnmadd.h f28, f11, f6, f2, rmm # perform operation
fnmadd.h f28, f11, f6, f2, rne # perform operation
fnmadd.h f28, f11, f6, f2, rtz # perform operation
fnmadd.h f28, f11, f6, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f28, f11, f6, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f28, f11, f6, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f28, f11, f6, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f28, f11, f6, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f28, f11, f6, f2 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3ff fs3 = 0x400)
li x28, 0xbf2c054ec973a541 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f27, 0(x2) # load 0x000003ff from memory into f27
li x3, 0xe63229b85a7cb671 # load x3 with value 0xe63229b85a7cb671
sw x3, 0(x2) # store 0xe63229b85a7cb671 in memory
flh f3, 0(x2) # load 0xe63229b85a7cb671 from memory into f3
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f13, 0(x2) # load 0x00000400 from memory into f13
fnmadd.h f28, f27, f3, f13, dyn # perform operation
fnmadd.h f28, f27, f3, f13, rdn # perform operation
fnmadd.h f28, f27, f3, f13, rmm # perform operation
fnmadd.h f28, f27, f3, f13, rne # perform operation
fnmadd.h f28, f27, f3, f13, rtz # perform operation
fnmadd.h f28, f27, f3, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f28, f27, f3, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f28, f27, f3, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f28, f27, f3, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f28, f27, f3, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f28, f27, f3, f13 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3ff fs3 = 0x8400)
li x11, 0x4a94fb280d0af18d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f9, 0(x2) # load 0x000003ff from memory into f9
li x3, 0x39ea3da8cdefd8d6 # load x3 with value 0x39ea3da8cdefd8d6
sw x3, 0(x2) # store 0x39ea3da8cdefd8d6 in memory
flh f18, 0(x2) # load 0x39ea3da8cdefd8d6 from memory into f18
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f16, 0(x2) # load 0x00008400 from memory into f16
fnmadd.h f11, f9, f18, f16, dyn # perform operation
fnmadd.h f11, f9, f18, f16, rdn # perform operation
fnmadd.h f11, f9, f18, f16, rmm # perform operation
fnmadd.h f11, f9, f18, f16, rne # perform operation
fnmadd.h f11, f9, f18, f16, rtz # perform operation
fnmadd.h f11, f9, f18, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f11, f9, f18, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f11, f9, f18, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f11, f9, f18, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f11, f9, f18, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f11, f9, f18, f16 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3ff fs3 = 0x7bff)
li x11, 0xe1327d5e23581169 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f4, 0(x2) # load 0x000003ff from memory into f4
li x3, 0x1e8c0f473708ba9a # load x3 with value 0x1e8c0f473708ba9a
sw x3, 0(x2) # store 0x1e8c0f473708ba9a in memory
flh f28, 0(x2) # load 0x1e8c0f473708ba9a from memory into f28
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f8, 0(x2) # load 0x00007bff from memory into f8
fnmadd.h f11, f4, f28, f8, dyn # perform operation
fnmadd.h f11, f4, f28, f8, rdn # perform operation
fnmadd.h f11, f4, f28, f8, rmm # perform operation
fnmadd.h f11, f4, f28, f8, rne # perform operation
fnmadd.h f11, f4, f28, f8, rtz # perform operation
fnmadd.h f11, f4, f28, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f11, f4, f28, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f11, f4, f28, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f11, f4, f28, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f11, f4, f28, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f11, f4, f28, f8 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3ff fs3 = 0xfbff)
li x14, 0x3f7f2a99c67a86a3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f20, 0(x2) # load 0x000003ff from memory into f20
li x3, 0x44adc346284bdda2 # load x3 with value 0x44adc346284bdda2
sw x3, 0(x2) # store 0x44adc346284bdda2 in memory
flh f6, 0(x2) # load 0x44adc346284bdda2 from memory into f6
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f7, 0(x2) # load 0x0000fbff from memory into f7
fnmadd.h f14, f20, f6, f7, dyn # perform operation
fnmadd.h f14, f20, f6, f7, rdn # perform operation
fnmadd.h f14, f20, f6, f7, rmm # perform operation
fnmadd.h f14, f20, f6, f7, rne # perform operation
fnmadd.h f14, f20, f6, f7, rtz # perform operation
fnmadd.h f14, f20, f6, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f14, f20, f6, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f14, f20, f6, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f14, f20, f6, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f14, f20, f6, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f14, f20, f6, f7 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3ff fs3 = 0x3ff)
li x13, 0xb6966fceafb8bed5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f29, 0(x2) # load 0x000003ff from memory into f29
li x3, 0x7d89c9f4daeb1d09 # load x3 with value 0x7d89c9f4daeb1d09
sw x3, 0(x2) # store 0x7d89c9f4daeb1d09 in memory
flh f27, 0(x2) # load 0x7d89c9f4daeb1d09 from memory into f27
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f18, 0(x2) # load 0x000003ff from memory into f18
fnmadd.h f13, f29, f27, f18, dyn # perform operation
fnmadd.h f13, f29, f27, f18, rdn # perform operation
fnmadd.h f13, f29, f27, f18, rmm # perform operation
fnmadd.h f13, f29, f27, f18, rne # perform operation
fnmadd.h f13, f29, f27, f18, rtz # perform operation
fnmadd.h f13, f29, f27, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f13, f29, f27, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f13, f29, f27, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f13, f29, f27, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f13, f29, f27, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f13, f29, f27, f18 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3ff fs3 = 0x83ff)
li x6, 0x040e6cc1ef602234 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f10, 0(x2) # load 0x000003ff from memory into f10
li x3, 0x18526af46c619760 # load x3 with value 0x18526af46c619760
sw x3, 0(x2) # store 0x18526af46c619760 in memory
flh f18, 0(x2) # load 0x18526af46c619760 from memory into f18
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f19, 0(x2) # load 0x000083ff from memory into f19
fnmadd.h f6, f10, f18, f19, dyn # perform operation
fnmadd.h f6, f10, f18, f19, rdn # perform operation
fnmadd.h f6, f10, f18, f19, rmm # perform operation
fnmadd.h f6, f10, f18, f19, rne # perform operation
fnmadd.h f6, f10, f18, f19, rtz # perform operation
fnmadd.h f6, f10, f18, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f6, f10, f18, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f6, f10, f18, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f6, f10, f18, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f6, f10, f18, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f6, f10, f18, f19 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3ff fs3 = 0x200)
li x23, 0xf71a0d398b8b141b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f25, 0(x2) # load 0x000003ff from memory into f25
li x3, 0x653f8508493e4d2a # load x3 with value 0x653f8508493e4d2a
sw x3, 0(x2) # store 0x653f8508493e4d2a in memory
flh f13, 0(x2) # load 0x653f8508493e4d2a from memory into f13
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f14, 0(x2) # load 0x00000200 from memory into f14
fnmadd.h f23, f25, f13, f14, dyn # perform operation
fnmadd.h f23, f25, f13, f14, rdn # perform operation
fnmadd.h f23, f25, f13, f14, rmm # perform operation
fnmadd.h f23, f25, f13, f14, rne # perform operation
fnmadd.h f23, f25, f13, f14, rtz # perform operation
fnmadd.h f23, f25, f13, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f23, f25, f13, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f23, f25, f13, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f23, f25, f13, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f23, f25, f13, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f23, f25, f13, f14 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3ff fs3 = 0x8200)
li x2, 0xab3ad4b7f134cc21 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f12, 0(x2) # load 0x000003ff from memory into f12
li x3, 0xbc3ac2cc81cad19a # load x3 with value 0xbc3ac2cc81cad19a
sw x3, 0(x2) # store 0xbc3ac2cc81cad19a in memory
flh f16, 0(x2) # load 0xbc3ac2cc81cad19a from memory into f16
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f14, 0(x2) # load 0x00008200 from memory into f14
fnmadd.h f2, f12, f16, f14, dyn # perform operation
fnmadd.h f2, f12, f16, f14, rdn # perform operation
fnmadd.h f2, f12, f16, f14, rmm # perform operation
fnmadd.h f2, f12, f16, f14, rne # perform operation
fnmadd.h f2, f12, f16, f14, rtz # perform operation
fnmadd.h f2, f12, f16, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f2, f12, f16, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f2, f12, f16, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f2, f12, f16, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f2, f12, f16, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f2, f12, f16, f14 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3ff fs3 = 0x1)
li x10, 0xfb68df964553682f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f13, 0(x2) # load 0x000003ff from memory into f13
li x3, 0xdbbafcab84b70156 # load x3 with value 0xdbbafcab84b70156
sw x3, 0(x2) # store 0xdbbafcab84b70156 in memory
flh f22, 0(x2) # load 0xdbbafcab84b70156 from memory into f22
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f5, 0(x2) # load 0x00000001 from memory into f5
fnmadd.h f10, f13, f22, f5, dyn # perform operation
fnmadd.h f10, f13, f22, f5, rdn # perform operation
fnmadd.h f10, f13, f22, f5, rmm # perform operation
fnmadd.h f10, f13, f22, f5, rne # perform operation
fnmadd.h f10, f13, f22, f5, rtz # perform operation
fnmadd.h f10, f13, f22, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f10, f13, f22, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f10, f13, f22, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f10, f13, f22, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f10, f13, f22, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f10, f13, f22, f5 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3ff fs3 = 0x8001)
li x12, 0xee381de1e145a202 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f23, 0(x2) # load 0x000003ff from memory into f23
li x3, 0xb42b26ae08f856e0 # load x3 with value 0xb42b26ae08f856e0
sw x3, 0(x2) # store 0xb42b26ae08f856e0 in memory
flh f19, 0(x2) # load 0xb42b26ae08f856e0 from memory into f19
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f13, 0(x2) # load 0x00008001 from memory into f13
fnmadd.h f12, f23, f19, f13, dyn # perform operation
fnmadd.h f12, f23, f19, f13, rdn # perform operation
fnmadd.h f12, f23, f19, f13, rmm # perform operation
fnmadd.h f12, f23, f19, f13, rne # perform operation
fnmadd.h f12, f23, f19, f13, rtz # perform operation
fnmadd.h f12, f23, f19, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f12, f23, f19, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f12, f23, f19, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f12, f23, f19, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f12, f23, f19, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f12, f23, f19, f13 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3ff fs3 = 0x7c00)
li x7, 0x169ea9123a938701 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f15, 0(x2) # load 0x000003ff from memory into f15
li x3, 0x3b7da823d1b2abd2 # load x3 with value 0x3b7da823d1b2abd2
sw x3, 0(x2) # store 0x3b7da823d1b2abd2 in memory
flh f19, 0(x2) # load 0x3b7da823d1b2abd2 from memory into f19
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f16, 0(x2) # load 0x00007c00 from memory into f16
fnmadd.h f7, f15, f19, f16, dyn # perform operation
fnmadd.h f7, f15, f19, f16, rdn # perform operation
fnmadd.h f7, f15, f19, f16, rmm # perform operation
fnmadd.h f7, f15, f19, f16, rne # perform operation
fnmadd.h f7, f15, f19, f16, rtz # perform operation
fnmadd.h f7, f15, f19, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f7, f15, f19, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f7, f15, f19, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f7, f15, f19, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f7, f15, f19, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f7, f15, f19, f16 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3ff fs3 = 0xfc00)
li x10, 0xc616fcb65e5e8980 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f4, 0(x2) # load 0x000003ff from memory into f4
li x3, 0xa7c069eeafba8bb4 # load x3 with value 0xa7c069eeafba8bb4
sw x3, 0(x2) # store 0xa7c069eeafba8bb4 in memory
flh f5, 0(x2) # load 0xa7c069eeafba8bb4 from memory into f5
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f2, 0(x2) # load 0x0000fc00 from memory into f2
fnmadd.h f10, f4, f5, f2, dyn # perform operation
fnmadd.h f10, f4, f5, f2, rdn # perform operation
fnmadd.h f10, f4, f5, f2, rmm # perform operation
fnmadd.h f10, f4, f5, f2, rne # perform operation
fnmadd.h f10, f4, f5, f2, rtz # perform operation
fnmadd.h f10, f4, f5, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f10, f4, f5, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f10, f4, f5, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f10, f4, f5, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f10, f4, f5, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f10, f4, f5, f2 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3ff fs3 = 0x7e00)
li x28, 0x8c38f4d7ae6b02c1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f29, 0(x2) # load 0x000003ff from memory into f29
li x3, 0xc809c9a8b538bb79 # load x3 with value 0xc809c9a8b538bb79
sw x3, 0(x2) # store 0xc809c9a8b538bb79 in memory
flh f13, 0(x2) # load 0xc809c9a8b538bb79 from memory into f13
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f22, 0(x2) # load 0x00007e00 from memory into f22
fnmadd.h f28, f29, f13, f22, dyn # perform operation
fnmadd.h f28, f29, f13, f22, rdn # perform operation
fnmadd.h f28, f29, f13, f22, rmm # perform operation
fnmadd.h f28, f29, f13, f22, rne # perform operation
fnmadd.h f28, f29, f13, f22, rtz # perform operation
fnmadd.h f28, f29, f13, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f28, f29, f13, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f28, f29, f13, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f28, f29, f13, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f28, f29, f13, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f28, f29, f13, f22 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3ff fs3 = 0x7fff)
li x23, 0x4eb706ddefebb198 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f27, 0(x2) # load 0x000003ff from memory into f27
li x3, 0xae7ba8cb98f9c61d # load x3 with value 0xae7ba8cb98f9c61d
sw x3, 0(x2) # store 0xae7ba8cb98f9c61d in memory
flh f3, 0(x2) # load 0xae7ba8cb98f9c61d from memory into f3
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f7, 0(x2) # load 0x00007fff from memory into f7
fnmadd.h f23, f27, f3, f7, dyn # perform operation
fnmadd.h f23, f27, f3, f7, rdn # perform operation
fnmadd.h f23, f27, f3, f7, rmm # perform operation
fnmadd.h f23, f27, f3, f7, rne # perform operation
fnmadd.h f23, f27, f3, f7, rtz # perform operation
fnmadd.h f23, f27, f3, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f23, f27, f3, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f23, f27, f3, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f23, f27, f3, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f23, f27, f3, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f23, f27, f3, f7 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3ff fs3 = 0x7c01)
li x12, 0x5fb3f04f7db29ab1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f2, 0(x2) # load 0x000003ff from memory into f2
li x3, 0x29d496c5cf96c9e3 # load x3 with value 0x29d496c5cf96c9e3
sw x3, 0(x2) # store 0x29d496c5cf96c9e3 in memory
flh f24, 0(x2) # load 0x29d496c5cf96c9e3 from memory into f24
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f4, 0(x2) # load 0x00007c01 from memory into f4
fnmadd.h f12, f2, f24, f4, dyn # perform operation
fnmadd.h f12, f2, f24, f4, rdn # perform operation
fnmadd.h f12, f2, f24, f4, rmm # perform operation
fnmadd.h f12, f2, f24, f4, rne # perform operation
fnmadd.h f12, f2, f24, f4, rtz # perform operation
fnmadd.h f12, f2, f24, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f12, f2, f24, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f12, f2, f24, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f12, f2, f24, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f12, f2, f24, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f12, f2, f24, f4 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3ff fs3 = 0x7dff)
li x11, 0xfe67ab7cb0a65ca2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f7, 0(x2) # load 0x000003ff from memory into f7
li x3, 0x733a9bb012d4ece0 # load x3 with value 0x733a9bb012d4ece0
sw x3, 0(x2) # store 0x733a9bb012d4ece0 in memory
flh f13, 0(x2) # load 0x733a9bb012d4ece0 from memory into f13
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f21, 0(x2) # load 0x00007dff from memory into f21
fnmadd.h f11, f7, f13, f21, dyn # perform operation
fnmadd.h f11, f7, f13, f21, rdn # perform operation
fnmadd.h f11, f7, f13, f21, rmm # perform operation
fnmadd.h f11, f7, f13, f21, rne # perform operation
fnmadd.h f11, f7, f13, f21, rtz # perform operation
fnmadd.h f11, f7, f13, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f11, f7, f13, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f11, f7, f13, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f11, f7, f13, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f11, f7, f13, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f11, f7, f13, f21 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3ff fs3 = 0x58b4)
li x21, 0x364a0453b8ce4588 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f12, 0(x2) # load 0x000003ff from memory into f12
li x3, 0xdbccad4964fec7e7 # load x3 with value 0xdbccad4964fec7e7
sw x3, 0(x2) # store 0xdbccad4964fec7e7 in memory
flh f1, 0(x2) # load 0xdbccad4964fec7e7 from memory into f1
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f23, 0(x2) # load 0x000058b4 from memory into f23
fnmadd.h f21, f12, f1, f23, dyn # perform operation
fnmadd.h f21, f12, f1, f23, rdn # perform operation
fnmadd.h f21, f12, f1, f23, rmm # perform operation
fnmadd.h f21, f12, f1, f23, rne # perform operation
fnmadd.h f21, f12, f1, f23, rtz # perform operation
fnmadd.h f21, f12, f1, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f21, f12, f1, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f21, f12, f1, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f21, f12, f1, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f21, f12, f1, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f21, f12, f1, f23 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3ff fs3 = 0xc93a)
li x16, 0x584e2ad2e2abf38c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f17, 0(x2) # load 0x000003ff from memory into f17
li x3, 0xe77155ae44f11e9b # load x3 with value 0xe77155ae44f11e9b
sw x3, 0(x2) # store 0xe77155ae44f11e9b in memory
flh f28, 0(x2) # load 0xe77155ae44f11e9b from memory into f28
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f10, 0(x2) # load 0x0000c93a from memory into f10
fnmadd.h f16, f17, f28, f10, dyn # perform operation
fnmadd.h f16, f17, f28, f10, rdn # perform operation
fnmadd.h f16, f17, f28, f10, rmm # perform operation
fnmadd.h f16, f17, f28, f10, rne # perform operation
fnmadd.h f16, f17, f28, f10, rtz # perform operation
fnmadd.h f16, f17, f28, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f16, f17, f28, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f16, f17, f28, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f16, f17, f28, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f16, f17, f28, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f16, f17, f28, f10 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x83ff fs3 = 0x0)
li x17, 0x886a28af30dc4af5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f7, 0(x2) # load 0x000083ff from memory into f7
li x3, 0xcf5a030f89b971a1 # load x3 with value 0xcf5a030f89b971a1
sw x3, 0(x2) # store 0xcf5a030f89b971a1 in memory
flh f29, 0(x2) # load 0xcf5a030f89b971a1 from memory into f29
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f6, 0(x2) # load 0x00000000 from memory into f6
fnmadd.h f17, f7, f29, f6, dyn # perform operation
fnmadd.h f17, f7, f29, f6, rdn # perform operation
fnmadd.h f17, f7, f29, f6, rmm # perform operation
fnmadd.h f17, f7, f29, f6, rne # perform operation
fnmadd.h f17, f7, f29, f6, rtz # perform operation
fnmadd.h f17, f7, f29, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f17, f7, f29, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f17, f7, f29, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f17, f7, f29, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f17, f7, f29, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f17, f7, f29, f6 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x83ff fs3 = 0x8000)
li x12, 0x909c0566e506953d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f19, 0(x2) # load 0x000083ff from memory into f19
li x3, 0x65213a024fd63294 # load x3 with value 0x65213a024fd63294
sw x3, 0(x2) # store 0x65213a024fd63294 in memory
flh f15, 0(x2) # load 0x65213a024fd63294 from memory into f15
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f8, 0(x2) # load 0x00008000 from memory into f8
fnmadd.h f12, f19, f15, f8, dyn # perform operation
fnmadd.h f12, f19, f15, f8, rdn # perform operation
fnmadd.h f12, f19, f15, f8, rmm # perform operation
fnmadd.h f12, f19, f15, f8, rne # perform operation
fnmadd.h f12, f19, f15, f8, rtz # perform operation
fnmadd.h f12, f19, f15, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f12, f19, f15, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f12, f19, f15, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f12, f19, f15, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f12, f19, f15, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f12, f19, f15, f8 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x83ff fs3 = 0x3c00)
li x27, 0x38f6a9ce41846cb6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f4, 0(x2) # load 0x000083ff from memory into f4
li x3, 0x67368fd22f5d05a9 # load x3 with value 0x67368fd22f5d05a9
sw x3, 0(x2) # store 0x67368fd22f5d05a9 in memory
flh f15, 0(x2) # load 0x67368fd22f5d05a9 from memory into f15
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f12, 0(x2) # load 0x00003c00 from memory into f12
fnmadd.h f27, f4, f15, f12, dyn # perform operation
fnmadd.h f27, f4, f15, f12, rdn # perform operation
fnmadd.h f27, f4, f15, f12, rmm # perform operation
fnmadd.h f27, f4, f15, f12, rne # perform operation
fnmadd.h f27, f4, f15, f12, rtz # perform operation
fnmadd.h f27, f4, f15, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f27, f4, f15, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f27, f4, f15, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f27, f4, f15, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f27, f4, f15, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f27, f4, f15, f12 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x83ff fs3 = 0xbc00)
li x15, 0x03f6684c9d690ad2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f31, 0(x2) # load 0x000083ff from memory into f31
li x3, 0xd24ff5d0ab67c4f # load x3 with value 0xd24ff5d0ab67c4f
sw x3, 0(x2) # store 0xd24ff5d0ab67c4f in memory
flh f29, 0(x2) # load 0xd24ff5d0ab67c4f from memory into f29
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f9, 0(x2) # load 0x0000bc00 from memory into f9
fnmadd.h f15, f31, f29, f9, dyn # perform operation
fnmadd.h f15, f31, f29, f9, rdn # perform operation
fnmadd.h f15, f31, f29, f9, rmm # perform operation
fnmadd.h f15, f31, f29, f9, rne # perform operation
fnmadd.h f15, f31, f29, f9, rtz # perform operation
fnmadd.h f15, f31, f29, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f15, f31, f29, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f15, f31, f29, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f15, f31, f29, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f15, f31, f29, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f15, f31, f29, f9 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x83ff fs3 = 0x3e00)
li x17, 0xeea2e01a94ee5220 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f7, 0(x2) # load 0x000083ff from memory into f7
li x3, 0x9f9a7ece8d6cb337 # load x3 with value 0x9f9a7ece8d6cb337
sw x3, 0(x2) # store 0x9f9a7ece8d6cb337 in memory
flh f6, 0(x2) # load 0x9f9a7ece8d6cb337 from memory into f6
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f9, 0(x2) # load 0x00003e00 from memory into f9
fnmadd.h f17, f7, f6, f9, dyn # perform operation
fnmadd.h f17, f7, f6, f9, rdn # perform operation
fnmadd.h f17, f7, f6, f9, rmm # perform operation
fnmadd.h f17, f7, f6, f9, rne # perform operation
fnmadd.h f17, f7, f6, f9, rtz # perform operation
fnmadd.h f17, f7, f6, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f17, f7, f6, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f17, f7, f6, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f17, f7, f6, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f17, f7, f6, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f17, f7, f6, f9 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x83ff fs3 = 0xbe00)
li x11, 0x5eaac7cb818f6b1e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f5, 0(x2) # load 0x000083ff from memory into f5
li x3, 0xd6aefeb58962c95c # load x3 with value 0xd6aefeb58962c95c
sw x3, 0(x2) # store 0xd6aefeb58962c95c in memory
flh f12, 0(x2) # load 0xd6aefeb58962c95c from memory into f12
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f25, 0(x2) # load 0x0000be00 from memory into f25
fnmadd.h f11, f5, f12, f25, dyn # perform operation
fnmadd.h f11, f5, f12, f25, rdn # perform operation
fnmadd.h f11, f5, f12, f25, rmm # perform operation
fnmadd.h f11, f5, f12, f25, rne # perform operation
fnmadd.h f11, f5, f12, f25, rtz # perform operation
fnmadd.h f11, f5, f12, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f11, f5, f12, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f11, f5, f12, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f11, f5, f12, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f11, f5, f12, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f11, f5, f12, f25 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x83ff fs3 = 0x4000)
li x24, 0x0f9e5ff8e0833691 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f1, 0(x2) # load 0x000083ff from memory into f1
li x3, 0xf0d542d9c08a625 # load x3 with value 0xf0d542d9c08a625
sw x3, 0(x2) # store 0xf0d542d9c08a625 in memory
flh f11, 0(x2) # load 0xf0d542d9c08a625 from memory into f11
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f23, 0(x2) # load 0x00004000 from memory into f23
fnmadd.h f24, f1, f11, f23, dyn # perform operation
fnmadd.h f24, f1, f11, f23, rdn # perform operation
fnmadd.h f24, f1, f11, f23, rmm # perform operation
fnmadd.h f24, f1, f11, f23, rne # perform operation
fnmadd.h f24, f1, f11, f23, rtz # perform operation
fnmadd.h f24, f1, f11, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f24, f1, f11, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f24, f1, f11, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f24, f1, f11, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f24, f1, f11, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f24, f1, f11, f23 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x83ff fs3 = 0xc000)
li x30, 0x812aa80162dcb071 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f3, 0(x2) # load 0x000083ff from memory into f3
li x3, 0xdae83e4f180b5dce # load x3 with value 0xdae83e4f180b5dce
sw x3, 0(x2) # store 0xdae83e4f180b5dce in memory
flh f4, 0(x2) # load 0xdae83e4f180b5dce from memory into f4
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f24, 0(x2) # load 0x0000c000 from memory into f24
fnmadd.h f30, f3, f4, f24, dyn # perform operation
fnmadd.h f30, f3, f4, f24, rdn # perform operation
fnmadd.h f30, f3, f4, f24, rmm # perform operation
fnmadd.h f30, f3, f4, f24, rne # perform operation
fnmadd.h f30, f3, f4, f24, rtz # perform operation
fnmadd.h f30, f3, f4, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f30, f3, f4, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f30, f3, f4, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f30, f3, f4, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f30, f3, f4, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f30, f3, f4, f24 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x83ff fs3 = 0x400)
li x12, 0xfdeed752d905e28a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f24, 0(x2) # load 0x000083ff from memory into f24
li x3, 0x93a1ece5f60fbf69 # load x3 with value 0x93a1ece5f60fbf69
sw x3, 0(x2) # store 0x93a1ece5f60fbf69 in memory
flh f29, 0(x2) # load 0x93a1ece5f60fbf69 from memory into f29
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f17, 0(x2) # load 0x00000400 from memory into f17
fnmadd.h f12, f24, f29, f17, dyn # perform operation
fnmadd.h f12, f24, f29, f17, rdn # perform operation
fnmadd.h f12, f24, f29, f17, rmm # perform operation
fnmadd.h f12, f24, f29, f17, rne # perform operation
fnmadd.h f12, f24, f29, f17, rtz # perform operation
fnmadd.h f12, f24, f29, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f12, f24, f29, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f12, f24, f29, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f12, f24, f29, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f12, f24, f29, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f12, f24, f29, f17 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x83ff fs3 = 0x8400)
li x14, 0x571ed8d2a6c0b30f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f13, 0(x2) # load 0x000083ff from memory into f13
li x3, 0xec879157f2f4cd7b # load x3 with value 0xec879157f2f4cd7b
sw x3, 0(x2) # store 0xec879157f2f4cd7b in memory
flh f28, 0(x2) # load 0xec879157f2f4cd7b from memory into f28
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f26, 0(x2) # load 0x00008400 from memory into f26
fnmadd.h f14, f13, f28, f26, dyn # perform operation
fnmadd.h f14, f13, f28, f26, rdn # perform operation
fnmadd.h f14, f13, f28, f26, rmm # perform operation
fnmadd.h f14, f13, f28, f26, rne # perform operation
fnmadd.h f14, f13, f28, f26, rtz # perform operation
fnmadd.h f14, f13, f28, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f14, f13, f28, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f14, f13, f28, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f14, f13, f28, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f14, f13, f28, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f14, f13, f28, f26 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x83ff fs3 = 0x7bff)
li x4, 0x1a7c3dca28e65f4d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f17, 0(x2) # load 0x000083ff from memory into f17
li x3, 0x13c0632797566732 # load x3 with value 0x13c0632797566732
sw x3, 0(x2) # store 0x13c0632797566732 in memory
flh f21, 0(x2) # load 0x13c0632797566732 from memory into f21
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f29, 0(x2) # load 0x00007bff from memory into f29
fnmadd.h f4, f17, f21, f29, dyn # perform operation
fnmadd.h f4, f17, f21, f29, rdn # perform operation
fnmadd.h f4, f17, f21, f29, rmm # perform operation
fnmadd.h f4, f17, f21, f29, rne # perform operation
fnmadd.h f4, f17, f21, f29, rtz # perform operation
fnmadd.h f4, f17, f21, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f4, f17, f21, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f4, f17, f21, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f4, f17, f21, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f4, f17, f21, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f4, f17, f21, f29 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x83ff fs3 = 0xfbff)
li x10, 0x05b1248e458ebb8f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f14, 0(x2) # load 0x000083ff from memory into f14
li x3, 0x5194e2943934662b # load x3 with value 0x5194e2943934662b
sw x3, 0(x2) # store 0x5194e2943934662b in memory
flh f16, 0(x2) # load 0x5194e2943934662b from memory into f16
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f4, 0(x2) # load 0x0000fbff from memory into f4
fnmadd.h f10, f14, f16, f4, dyn # perform operation
fnmadd.h f10, f14, f16, f4, rdn # perform operation
fnmadd.h f10, f14, f16, f4, rmm # perform operation
fnmadd.h f10, f14, f16, f4, rne # perform operation
fnmadd.h f10, f14, f16, f4, rtz # perform operation
fnmadd.h f10, f14, f16, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f10, f14, f16, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f10, f14, f16, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f10, f14, f16, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f10, f14, f16, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f10, f14, f16, f4 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x83ff fs3 = 0x3ff)
li x10, 0xb7a4a9817b149398 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f2, 0(x2) # load 0x000083ff from memory into f2
li x3, 0xba14cc22dde5589a # load x3 with value 0xba14cc22dde5589a
sw x3, 0(x2) # store 0xba14cc22dde5589a in memory
flh f1, 0(x2) # load 0xba14cc22dde5589a from memory into f1
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f7, 0(x2) # load 0x000003ff from memory into f7
fnmadd.h f10, f2, f1, f7, dyn # perform operation
fnmadd.h f10, f2, f1, f7, rdn # perform operation
fnmadd.h f10, f2, f1, f7, rmm # perform operation
fnmadd.h f10, f2, f1, f7, rne # perform operation
fnmadd.h f10, f2, f1, f7, rtz # perform operation
fnmadd.h f10, f2, f1, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f10, f2, f1, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f10, f2, f1, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f10, f2, f1, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f10, f2, f1, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f10, f2, f1, f7 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x83ff fs3 = 0x83ff)
li x11, 0x28d5e4aeaaa134fd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f30, 0(x2) # load 0x000083ff from memory into f30
li x3, 0x8ee5f40f1fd602b2 # load x3 with value 0x8ee5f40f1fd602b2
sw x3, 0(x2) # store 0x8ee5f40f1fd602b2 in memory
flh f16, 0(x2) # load 0x8ee5f40f1fd602b2 from memory into f16
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f20, 0(x2) # load 0x000083ff from memory into f20
fnmadd.h f11, f30, f16, f20, dyn # perform operation
fnmadd.h f11, f30, f16, f20, rdn # perform operation
fnmadd.h f11, f30, f16, f20, rmm # perform operation
fnmadd.h f11, f30, f16, f20, rne # perform operation
fnmadd.h f11, f30, f16, f20, rtz # perform operation
fnmadd.h f11, f30, f16, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f11, f30, f16, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f11, f30, f16, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f11, f30, f16, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f11, f30, f16, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f11, f30, f16, f20 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x83ff fs3 = 0x200)
li x2, 0x6b99a330129ce58c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f13, 0(x2) # load 0x000083ff from memory into f13
li x3, 0x7e6af0463949c1ef # load x3 with value 0x7e6af0463949c1ef
sw x3, 0(x2) # store 0x7e6af0463949c1ef in memory
flh f16, 0(x2) # load 0x7e6af0463949c1ef from memory into f16
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f6, 0(x2) # load 0x00000200 from memory into f6
fnmadd.h f2, f13, f16, f6, dyn # perform operation
fnmadd.h f2, f13, f16, f6, rdn # perform operation
fnmadd.h f2, f13, f16, f6, rmm # perform operation
fnmadd.h f2, f13, f16, f6, rne # perform operation
fnmadd.h f2, f13, f16, f6, rtz # perform operation
fnmadd.h f2, f13, f16, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f2, f13, f16, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f2, f13, f16, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f2, f13, f16, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f2, f13, f16, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f2, f13, f16, f6 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x83ff fs3 = 0x8200)
li x20, 0x8b4e37788ad1cda7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f10, 0(x2) # load 0x000083ff from memory into f10
li x3, 0x8caf5f0939cc266d # load x3 with value 0x8caf5f0939cc266d
sw x3, 0(x2) # store 0x8caf5f0939cc266d in memory
flh f6, 0(x2) # load 0x8caf5f0939cc266d from memory into f6
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f3, 0(x2) # load 0x00008200 from memory into f3
fnmadd.h f20, f10, f6, f3, dyn # perform operation
fnmadd.h f20, f10, f6, f3, rdn # perform operation
fnmadd.h f20, f10, f6, f3, rmm # perform operation
fnmadd.h f20, f10, f6, f3, rne # perform operation
fnmadd.h f20, f10, f6, f3, rtz # perform operation
fnmadd.h f20, f10, f6, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f20, f10, f6, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f20, f10, f6, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f20, f10, f6, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f20, f10, f6, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f20, f10, f6, f3 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x83ff fs3 = 0x1)
li x23, 0x00604539dd2780c8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f24, 0(x2) # load 0x000083ff from memory into f24
li x3, 0x5ccf9745fa05c476 # load x3 with value 0x5ccf9745fa05c476
sw x3, 0(x2) # store 0x5ccf9745fa05c476 in memory
flh f16, 0(x2) # load 0x5ccf9745fa05c476 from memory into f16
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f6, 0(x2) # load 0x00000001 from memory into f6
fnmadd.h f23, f24, f16, f6, dyn # perform operation
fnmadd.h f23, f24, f16, f6, rdn # perform operation
fnmadd.h f23, f24, f16, f6, rmm # perform operation
fnmadd.h f23, f24, f16, f6, rne # perform operation
fnmadd.h f23, f24, f16, f6, rtz # perform operation
fnmadd.h f23, f24, f16, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f23, f24, f16, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f23, f24, f16, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f23, f24, f16, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f23, f24, f16, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f23, f24, f16, f6 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x83ff fs3 = 0x8001)
li x2, 0xbeaa790bcf6d7faf # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f22, 0(x2) # load 0x000083ff from memory into f22
li x3, 0x10654b7a4c5ca237 # load x3 with value 0x10654b7a4c5ca237
sw x3, 0(x2) # store 0x10654b7a4c5ca237 in memory
flh f7, 0(x2) # load 0x10654b7a4c5ca237 from memory into f7
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f8, 0(x2) # load 0x00008001 from memory into f8
fnmadd.h f2, f22, f7, f8, dyn # perform operation
fnmadd.h f2, f22, f7, f8, rdn # perform operation
fnmadd.h f2, f22, f7, f8, rmm # perform operation
fnmadd.h f2, f22, f7, f8, rne # perform operation
fnmadd.h f2, f22, f7, f8, rtz # perform operation
fnmadd.h f2, f22, f7, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f2, f22, f7, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f2, f22, f7, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f2, f22, f7, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f2, f22, f7, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f2, f22, f7, f8 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x83ff fs3 = 0x7c00)
li x22, 0xa4bc4cee18f0c27f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f23, 0(x2) # load 0x000083ff from memory into f23
li x3, 0x2217676835037c8f # load x3 with value 0x2217676835037c8f
sw x3, 0(x2) # store 0x2217676835037c8f in memory
flh f30, 0(x2) # load 0x2217676835037c8f from memory into f30
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f19, 0(x2) # load 0x00007c00 from memory into f19
fnmadd.h f22, f23, f30, f19, dyn # perform operation
fnmadd.h f22, f23, f30, f19, rdn # perform operation
fnmadd.h f22, f23, f30, f19, rmm # perform operation
fnmadd.h f22, f23, f30, f19, rne # perform operation
fnmadd.h f22, f23, f30, f19, rtz # perform operation
fnmadd.h f22, f23, f30, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f22, f23, f30, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f22, f23, f30, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f22, f23, f30, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f22, f23, f30, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f22, f23, f30, f19 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x83ff fs3 = 0xfc00)
li x16, 0x790f70a65e79ffec # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f18, 0(x2) # load 0x000083ff from memory into f18
li x3, 0x543e2f8f041d144 # load x3 with value 0x543e2f8f041d144
sw x3, 0(x2) # store 0x543e2f8f041d144 in memory
flh f4, 0(x2) # load 0x543e2f8f041d144 from memory into f4
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f10, 0(x2) # load 0x0000fc00 from memory into f10
fnmadd.h f16, f18, f4, f10, dyn # perform operation
fnmadd.h f16, f18, f4, f10, rdn # perform operation
fnmadd.h f16, f18, f4, f10, rmm # perform operation
fnmadd.h f16, f18, f4, f10, rne # perform operation
fnmadd.h f16, f18, f4, f10, rtz # perform operation
fnmadd.h f16, f18, f4, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f16, f18, f4, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f16, f18, f4, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f16, f18, f4, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f16, f18, f4, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f16, f18, f4, f10 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x83ff fs3 = 0x7e00)
li x22, 0x15fc97ea8d0a5d29 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f25, 0(x2) # load 0x000083ff from memory into f25
li x3, 0xf37de5f475c55e6b # load x3 with value 0xf37de5f475c55e6b
sw x3, 0(x2) # store 0xf37de5f475c55e6b in memory
flh f20, 0(x2) # load 0xf37de5f475c55e6b from memory into f20
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f10, 0(x2) # load 0x00007e00 from memory into f10
fnmadd.h f22, f25, f20, f10, dyn # perform operation
fnmadd.h f22, f25, f20, f10, rdn # perform operation
fnmadd.h f22, f25, f20, f10, rmm # perform operation
fnmadd.h f22, f25, f20, f10, rne # perform operation
fnmadd.h f22, f25, f20, f10, rtz # perform operation
fnmadd.h f22, f25, f20, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f22, f25, f20, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f22, f25, f20, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f22, f25, f20, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f22, f25, f20, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f22, f25, f20, f10 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x83ff fs3 = 0x7fff)
li x16, 0x835efe71bd4a30f9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f15, 0(x2) # load 0x000083ff from memory into f15
li x3, 0x46c2e5dd4837dba8 # load x3 with value 0x46c2e5dd4837dba8
sw x3, 0(x2) # store 0x46c2e5dd4837dba8 in memory
flh f26, 0(x2) # load 0x46c2e5dd4837dba8 from memory into f26
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f2, 0(x2) # load 0x00007fff from memory into f2
fnmadd.h f16, f15, f26, f2, dyn # perform operation
fnmadd.h f16, f15, f26, f2, rdn # perform operation
fnmadd.h f16, f15, f26, f2, rmm # perform operation
fnmadd.h f16, f15, f26, f2, rne # perform operation
fnmadd.h f16, f15, f26, f2, rtz # perform operation
fnmadd.h f16, f15, f26, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f16, f15, f26, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f16, f15, f26, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f16, f15, f26, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f16, f15, f26, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f16, f15, f26, f2 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x83ff fs3 = 0x7c01)
li x2, 0x2b5a090d9a2a3e28 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f12, 0(x2) # load 0x000083ff from memory into f12
li x3, 0xc99876e1a2894b3d # load x3 with value 0xc99876e1a2894b3d
sw x3, 0(x2) # store 0xc99876e1a2894b3d in memory
flh f27, 0(x2) # load 0xc99876e1a2894b3d from memory into f27
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f13, 0(x2) # load 0x00007c01 from memory into f13
fnmadd.h f2, f12, f27, f13, dyn # perform operation
fnmadd.h f2, f12, f27, f13, rdn # perform operation
fnmadd.h f2, f12, f27, f13, rmm # perform operation
fnmadd.h f2, f12, f27, f13, rne # perform operation
fnmadd.h f2, f12, f27, f13, rtz # perform operation
fnmadd.h f2, f12, f27, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f2, f12, f27, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f2, f12, f27, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f2, f12, f27, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f2, f12, f27, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f2, f12, f27, f13 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x83ff fs3 = 0x7dff)
li x27, 0x8a64cdf752e100df # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f25, 0(x2) # load 0x000083ff from memory into f25
li x3, 0x4c5087af10dc52c5 # load x3 with value 0x4c5087af10dc52c5
sw x3, 0(x2) # store 0x4c5087af10dc52c5 in memory
flh f19, 0(x2) # load 0x4c5087af10dc52c5 from memory into f19
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f26, 0(x2) # load 0x00007dff from memory into f26
fnmadd.h f27, f25, f19, f26, dyn # perform operation
fnmadd.h f27, f25, f19, f26, rdn # perform operation
fnmadd.h f27, f25, f19, f26, rmm # perform operation
fnmadd.h f27, f25, f19, f26, rne # perform operation
fnmadd.h f27, f25, f19, f26, rtz # perform operation
fnmadd.h f27, f25, f19, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f27, f25, f19, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f27, f25, f19, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f27, f25, f19, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f27, f25, f19, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f27, f25, f19, f26 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x83ff fs3 = 0x58b4)
li x8, 0xa2588e45fac2deee # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f31, 0(x2) # load 0x000083ff from memory into f31
li x3, 0x3115913fe5ec293a # load x3 with value 0x3115913fe5ec293a
sw x3, 0(x2) # store 0x3115913fe5ec293a in memory
flh f20, 0(x2) # load 0x3115913fe5ec293a from memory into f20
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f26, 0(x2) # load 0x000058b4 from memory into f26
fnmadd.h f8, f31, f20, f26, dyn # perform operation
fnmadd.h f8, f31, f20, f26, rdn # perform operation
fnmadd.h f8, f31, f20, f26, rmm # perform operation
fnmadd.h f8, f31, f20, f26, rne # perform operation
fnmadd.h f8, f31, f20, f26, rtz # perform operation
fnmadd.h f8, f31, f20, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f8, f31, f20, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f8, f31, f20, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f8, f31, f20, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f8, f31, f20, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f8, f31, f20, f26 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x83ff fs3 = 0xc93a)
li x26, 0x53a015b409b69686 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f24, 0(x2) # load 0x000083ff from memory into f24
li x3, 0x993e3f9fe96c2fdc # load x3 with value 0x993e3f9fe96c2fdc
sw x3, 0(x2) # store 0x993e3f9fe96c2fdc in memory
flh f23, 0(x2) # load 0x993e3f9fe96c2fdc from memory into f23
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f10, 0(x2) # load 0x0000c93a from memory into f10
fnmadd.h f26, f24, f23, f10, dyn # perform operation
fnmadd.h f26, f24, f23, f10, rdn # perform operation
fnmadd.h f26, f24, f23, f10, rmm # perform operation
fnmadd.h f26, f24, f23, f10, rne # perform operation
fnmadd.h f26, f24, f23, f10, rtz # perform operation
fnmadd.h f26, f24, f23, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f26, f24, f23, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f26, f24, f23, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f26, f24, f23, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f26, f24, f23, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f26, f24, f23, f10 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x200 fs3 = 0x0)
li x11, 0x9bc672d4398d12d7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f6, 0(x2) # load 0x00000200 from memory into f6
li x3, 0xa4551c93c083b0ec # load x3 with value 0xa4551c93c083b0ec
sw x3, 0(x2) # store 0xa4551c93c083b0ec in memory
flh f18, 0(x2) # load 0xa4551c93c083b0ec from memory into f18
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f4, 0(x2) # load 0x00000000 from memory into f4
fnmadd.h f11, f6, f18, f4, dyn # perform operation
fnmadd.h f11, f6, f18, f4, rdn # perform operation
fnmadd.h f11, f6, f18, f4, rmm # perform operation
fnmadd.h f11, f6, f18, f4, rne # perform operation
fnmadd.h f11, f6, f18, f4, rtz # perform operation
fnmadd.h f11, f6, f18, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f11, f6, f18, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f11, f6, f18, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f11, f6, f18, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f11, f6, f18, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f11, f6, f18, f4 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x200 fs3 = 0x8000)
li x12, 0x522f8eeb41cdfcee # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f14, 0(x2) # load 0x00000200 from memory into f14
li x3, 0x9ecd7bef6b416bdb # load x3 with value 0x9ecd7bef6b416bdb
sw x3, 0(x2) # store 0x9ecd7bef6b416bdb in memory
flh f16, 0(x2) # load 0x9ecd7bef6b416bdb from memory into f16
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f23, 0(x2) # load 0x00008000 from memory into f23
fnmadd.h f12, f14, f16, f23, dyn # perform operation
fnmadd.h f12, f14, f16, f23, rdn # perform operation
fnmadd.h f12, f14, f16, f23, rmm # perform operation
fnmadd.h f12, f14, f16, f23, rne # perform operation
fnmadd.h f12, f14, f16, f23, rtz # perform operation
fnmadd.h f12, f14, f16, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f12, f14, f16, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f12, f14, f16, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f12, f14, f16, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f12, f14, f16, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f12, f14, f16, f23 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x200 fs3 = 0x3c00)
li x28, 0x2aa76019aa087a61 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f14, 0(x2) # load 0x00000200 from memory into f14
li x3, 0xb79c3c4077244c19 # load x3 with value 0xb79c3c4077244c19
sw x3, 0(x2) # store 0xb79c3c4077244c19 in memory
flh f16, 0(x2) # load 0xb79c3c4077244c19 from memory into f16
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f3, 0(x2) # load 0x00003c00 from memory into f3
fnmadd.h f28, f14, f16, f3, dyn # perform operation
fnmadd.h f28, f14, f16, f3, rdn # perform operation
fnmadd.h f28, f14, f16, f3, rmm # perform operation
fnmadd.h f28, f14, f16, f3, rne # perform operation
fnmadd.h f28, f14, f16, f3, rtz # perform operation
fnmadd.h f28, f14, f16, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f28, f14, f16, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f28, f14, f16, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f28, f14, f16, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f28, f14, f16, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f28, f14, f16, f3 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x200 fs3 = 0xbc00)
li x26, 0xaa6aec91c5ebef0d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f15, 0(x2) # load 0x00000200 from memory into f15
li x3, 0xc2c3a38d7f982b34 # load x3 with value 0xc2c3a38d7f982b34
sw x3, 0(x2) # store 0xc2c3a38d7f982b34 in memory
flh f3, 0(x2) # load 0xc2c3a38d7f982b34 from memory into f3
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f24, 0(x2) # load 0x0000bc00 from memory into f24
fnmadd.h f26, f15, f3, f24, dyn # perform operation
fnmadd.h f26, f15, f3, f24, rdn # perform operation
fnmadd.h f26, f15, f3, f24, rmm # perform operation
fnmadd.h f26, f15, f3, f24, rne # perform operation
fnmadd.h f26, f15, f3, f24, rtz # perform operation
fnmadd.h f26, f15, f3, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f26, f15, f3, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f26, f15, f3, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f26, f15, f3, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f26, f15, f3, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f26, f15, f3, f24 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x200 fs3 = 0x3e00)
li x1, 0x82240ae7ad09dc5a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f28, 0(x2) # load 0x00000200 from memory into f28
li x3, 0x71000234a806b739 # load x3 with value 0x71000234a806b739
sw x3, 0(x2) # store 0x71000234a806b739 in memory
flh f16, 0(x2) # load 0x71000234a806b739 from memory into f16
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f17, 0(x2) # load 0x00003e00 from memory into f17
fnmadd.h f1, f28, f16, f17, dyn # perform operation
fnmadd.h f1, f28, f16, f17, rdn # perform operation
fnmadd.h f1, f28, f16, f17, rmm # perform operation
fnmadd.h f1, f28, f16, f17, rne # perform operation
fnmadd.h f1, f28, f16, f17, rtz # perform operation
fnmadd.h f1, f28, f16, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f1, f28, f16, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f1, f28, f16, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f1, f28, f16, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f1, f28, f16, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f1, f28, f16, f17 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x200 fs3 = 0xbe00)
li x10, 0x4ba9970e6fdd6acf # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f28, 0(x2) # load 0x00000200 from memory into f28
li x3, 0x49dc017d3dbd2512 # load x3 with value 0x49dc017d3dbd2512
sw x3, 0(x2) # store 0x49dc017d3dbd2512 in memory
flh f30, 0(x2) # load 0x49dc017d3dbd2512 from memory into f30
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f2, 0(x2) # load 0x0000be00 from memory into f2
fnmadd.h f10, f28, f30, f2, dyn # perform operation
fnmadd.h f10, f28, f30, f2, rdn # perform operation
fnmadd.h f10, f28, f30, f2, rmm # perform operation
fnmadd.h f10, f28, f30, f2, rne # perform operation
fnmadd.h f10, f28, f30, f2, rtz # perform operation
fnmadd.h f10, f28, f30, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f10, f28, f30, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f10, f28, f30, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f10, f28, f30, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f10, f28, f30, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f10, f28, f30, f2 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x200 fs3 = 0x4000)
li x30, 0xf4a1d5ebf1b25ee8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f23, 0(x2) # load 0x00000200 from memory into f23
li x3, 0x4e6f4919f942eb6d # load x3 with value 0x4e6f4919f942eb6d
sw x3, 0(x2) # store 0x4e6f4919f942eb6d in memory
flh f6, 0(x2) # load 0x4e6f4919f942eb6d from memory into f6
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f12, 0(x2) # load 0x00004000 from memory into f12
fnmadd.h f30, f23, f6, f12, dyn # perform operation
fnmadd.h f30, f23, f6, f12, rdn # perform operation
fnmadd.h f30, f23, f6, f12, rmm # perform operation
fnmadd.h f30, f23, f6, f12, rne # perform operation
fnmadd.h f30, f23, f6, f12, rtz # perform operation
fnmadd.h f30, f23, f6, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f30, f23, f6, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f30, f23, f6, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f30, f23, f6, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f30, f23, f6, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f30, f23, f6, f12 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x200 fs3 = 0xc000)
li x26, 0x160984f926e80350 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f27, 0(x2) # load 0x00000200 from memory into f27
li x3, 0x967de3bd2d23d5cc # load x3 with value 0x967de3bd2d23d5cc
sw x3, 0(x2) # store 0x967de3bd2d23d5cc in memory
flh f22, 0(x2) # load 0x967de3bd2d23d5cc from memory into f22
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f23, 0(x2) # load 0x0000c000 from memory into f23
fnmadd.h f26, f27, f22, f23, dyn # perform operation
fnmadd.h f26, f27, f22, f23, rdn # perform operation
fnmadd.h f26, f27, f22, f23, rmm # perform operation
fnmadd.h f26, f27, f22, f23, rne # perform operation
fnmadd.h f26, f27, f22, f23, rtz # perform operation
fnmadd.h f26, f27, f22, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f26, f27, f22, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f26, f27, f22, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f26, f27, f22, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f26, f27, f22, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f26, f27, f22, f23 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x200 fs3 = 0x400)
li x16, 0xa7fe228887a9c358 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f27, 0(x2) # load 0x00000200 from memory into f27
li x3, 0xd2bd53b5e89538ec # load x3 with value 0xd2bd53b5e89538ec
sw x3, 0(x2) # store 0xd2bd53b5e89538ec in memory
flh f24, 0(x2) # load 0xd2bd53b5e89538ec from memory into f24
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f31, 0(x2) # load 0x00000400 from memory into f31
fnmadd.h f16, f27, f24, f31, dyn # perform operation
fnmadd.h f16, f27, f24, f31, rdn # perform operation
fnmadd.h f16, f27, f24, f31, rmm # perform operation
fnmadd.h f16, f27, f24, f31, rne # perform operation
fnmadd.h f16, f27, f24, f31, rtz # perform operation
fnmadd.h f16, f27, f24, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f16, f27, f24, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f16, f27, f24, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f16, f27, f24, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f16, f27, f24, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f16, f27, f24, f31 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x200 fs3 = 0x8400)
li x11, 0xb2afc4f63ddc5032 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f5, 0(x2) # load 0x00000200 from memory into f5
li x3, 0x68f7f5803b17bf80 # load x3 with value 0x68f7f5803b17bf80
sw x3, 0(x2) # store 0x68f7f5803b17bf80 in memory
flh f2, 0(x2) # load 0x68f7f5803b17bf80 from memory into f2
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f10, 0(x2) # load 0x00008400 from memory into f10
fnmadd.h f11, f5, f2, f10, dyn # perform operation
fnmadd.h f11, f5, f2, f10, rdn # perform operation
fnmadd.h f11, f5, f2, f10, rmm # perform operation
fnmadd.h f11, f5, f2, f10, rne # perform operation
fnmadd.h f11, f5, f2, f10, rtz # perform operation
fnmadd.h f11, f5, f2, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f11, f5, f2, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f11, f5, f2, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f11, f5, f2, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f11, f5, f2, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f11, f5, f2, f10 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x200 fs3 = 0x7bff)
li x14, 0x015ba8a4e0ce5389 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f8, 0(x2) # load 0x00000200 from memory into f8
li x3, 0x46ba9f16d3299139 # load x3 with value 0x46ba9f16d3299139
sw x3, 0(x2) # store 0x46ba9f16d3299139 in memory
flh f23, 0(x2) # load 0x46ba9f16d3299139 from memory into f23
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f17, 0(x2) # load 0x00007bff from memory into f17
fnmadd.h f14, f8, f23, f17, dyn # perform operation
fnmadd.h f14, f8, f23, f17, rdn # perform operation
fnmadd.h f14, f8, f23, f17, rmm # perform operation
fnmadd.h f14, f8, f23, f17, rne # perform operation
fnmadd.h f14, f8, f23, f17, rtz # perform operation
fnmadd.h f14, f8, f23, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f14, f8, f23, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f14, f8, f23, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f14, f8, f23, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f14, f8, f23, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f14, f8, f23, f17 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x200 fs3 = 0xfbff)
li x12, 0x5350fdb187c1b453 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f17, 0(x2) # load 0x00000200 from memory into f17
li x3, 0x1f9bc2fdc31ab606 # load x3 with value 0x1f9bc2fdc31ab606
sw x3, 0(x2) # store 0x1f9bc2fdc31ab606 in memory
flh f26, 0(x2) # load 0x1f9bc2fdc31ab606 from memory into f26
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f1, 0(x2) # load 0x0000fbff from memory into f1
fnmadd.h f12, f17, f26, f1, dyn # perform operation
fnmadd.h f12, f17, f26, f1, rdn # perform operation
fnmadd.h f12, f17, f26, f1, rmm # perform operation
fnmadd.h f12, f17, f26, f1, rne # perform operation
fnmadd.h f12, f17, f26, f1, rtz # perform operation
fnmadd.h f12, f17, f26, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f12, f17, f26, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f12, f17, f26, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f12, f17, f26, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f12, f17, f26, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f12, f17, f26, f1 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x200 fs3 = 0x3ff)
li x21, 0x571e4d1977493157 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f3, 0(x2) # load 0x00000200 from memory into f3
li x3, 0x888e7b15cdeb098f # load x3 with value 0x888e7b15cdeb098f
sw x3, 0(x2) # store 0x888e7b15cdeb098f in memory
flh f15, 0(x2) # load 0x888e7b15cdeb098f from memory into f15
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f23, 0(x2) # load 0x000003ff from memory into f23
fnmadd.h f21, f3, f15, f23, dyn # perform operation
fnmadd.h f21, f3, f15, f23, rdn # perform operation
fnmadd.h f21, f3, f15, f23, rmm # perform operation
fnmadd.h f21, f3, f15, f23, rne # perform operation
fnmadd.h f21, f3, f15, f23, rtz # perform operation
fnmadd.h f21, f3, f15, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f21, f3, f15, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f21, f3, f15, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f21, f3, f15, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f21, f3, f15, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f21, f3, f15, f23 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x200 fs3 = 0x83ff)
li x3, 0xca0feba6440ff0c9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f24, 0(x2) # load 0x00000200 from memory into f24
li x3, 0x4a570c63bd405c1d # load x3 with value 0x4a570c63bd405c1d
sw x3, 0(x2) # store 0x4a570c63bd405c1d in memory
flh f7, 0(x2) # load 0x4a570c63bd405c1d from memory into f7
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f10, 0(x2) # load 0x000083ff from memory into f10
fnmadd.h f3, f24, f7, f10, dyn # perform operation
fnmadd.h f3, f24, f7, f10, rdn # perform operation
fnmadd.h f3, f24, f7, f10, rmm # perform operation
fnmadd.h f3, f24, f7, f10, rne # perform operation
fnmadd.h f3, f24, f7, f10, rtz # perform operation
fnmadd.h f3, f24, f7, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f3, f24, f7, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f3, f24, f7, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f3, f24, f7, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f3, f24, f7, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f3, f24, f7, f10 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x200 fs3 = 0x200)
li x27, 0x67ddd65757d54f39 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f14, 0(x2) # load 0x00000200 from memory into f14
li x3, 0x42800e95baad7a2c # load x3 with value 0x42800e95baad7a2c
sw x3, 0(x2) # store 0x42800e95baad7a2c in memory
flh f8, 0(x2) # load 0x42800e95baad7a2c from memory into f8
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f24, 0(x2) # load 0x00000200 from memory into f24
fnmadd.h f27, f14, f8, f24, dyn # perform operation
fnmadd.h f27, f14, f8, f24, rdn # perform operation
fnmadd.h f27, f14, f8, f24, rmm # perform operation
fnmadd.h f27, f14, f8, f24, rne # perform operation
fnmadd.h f27, f14, f8, f24, rtz # perform operation
fnmadd.h f27, f14, f8, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f27, f14, f8, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f27, f14, f8, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f27, f14, f8, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f27, f14, f8, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f27, f14, f8, f24 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x200 fs3 = 0x8200)
li x25, 0x3f51594e2ee53d55 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f14, 0(x2) # load 0x00000200 from memory into f14
li x3, 0x229594f1044d4653 # load x3 with value 0x229594f1044d4653
sw x3, 0(x2) # store 0x229594f1044d4653 in memory
flh f18, 0(x2) # load 0x229594f1044d4653 from memory into f18
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f20, 0(x2) # load 0x00008200 from memory into f20
fnmadd.h f25, f14, f18, f20, dyn # perform operation
fnmadd.h f25, f14, f18, f20, rdn # perform operation
fnmadd.h f25, f14, f18, f20, rmm # perform operation
fnmadd.h f25, f14, f18, f20, rne # perform operation
fnmadd.h f25, f14, f18, f20, rtz # perform operation
fnmadd.h f25, f14, f18, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f25, f14, f18, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f25, f14, f18, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f25, f14, f18, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f25, f14, f18, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f25, f14, f18, f20 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x200 fs3 = 0x1)
li x20, 0x87b5a19fec5edf04 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f25, 0(x2) # load 0x00000200 from memory into f25
li x3, 0x13158b262a513194 # load x3 with value 0x13158b262a513194
sw x3, 0(x2) # store 0x13158b262a513194 in memory
flh f6, 0(x2) # load 0x13158b262a513194 from memory into f6
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f30, 0(x2) # load 0x00000001 from memory into f30
fnmadd.h f20, f25, f6, f30, dyn # perform operation
fnmadd.h f20, f25, f6, f30, rdn # perform operation
fnmadd.h f20, f25, f6, f30, rmm # perform operation
fnmadd.h f20, f25, f6, f30, rne # perform operation
fnmadd.h f20, f25, f6, f30, rtz # perform operation
fnmadd.h f20, f25, f6, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f20, f25, f6, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f20, f25, f6, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f20, f25, f6, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f20, f25, f6, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f20, f25, f6, f30 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x200 fs3 = 0x8001)
li x26, 0xbc8db321a5029203 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f30, 0(x2) # load 0x00000200 from memory into f30
li x3, 0xe5fb49178449de2 # load x3 with value 0xe5fb49178449de2
sw x3, 0(x2) # store 0xe5fb49178449de2 in memory
flh f9, 0(x2) # load 0xe5fb49178449de2 from memory into f9
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f19, 0(x2) # load 0x00008001 from memory into f19
fnmadd.h f26, f30, f9, f19, dyn # perform operation
fnmadd.h f26, f30, f9, f19, rdn # perform operation
fnmadd.h f26, f30, f9, f19, rmm # perform operation
fnmadd.h f26, f30, f9, f19, rne # perform operation
fnmadd.h f26, f30, f9, f19, rtz # perform operation
fnmadd.h f26, f30, f9, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f26, f30, f9, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f26, f30, f9, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f26, f30, f9, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f26, f30, f9, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f26, f30, f9, f19 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x200 fs3 = 0x7c00)
li x17, 0x28bc84c40bb05215 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f6, 0(x2) # load 0x00000200 from memory into f6
li x3, 0xd2a0bf5083988593 # load x3 with value 0xd2a0bf5083988593
sw x3, 0(x2) # store 0xd2a0bf5083988593 in memory
flh f8, 0(x2) # load 0xd2a0bf5083988593 from memory into f8
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f9, 0(x2) # load 0x00007c00 from memory into f9
fnmadd.h f17, f6, f8, f9, dyn # perform operation
fnmadd.h f17, f6, f8, f9, rdn # perform operation
fnmadd.h f17, f6, f8, f9, rmm # perform operation
fnmadd.h f17, f6, f8, f9, rne # perform operation
fnmadd.h f17, f6, f8, f9, rtz # perform operation
fnmadd.h f17, f6, f8, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f17, f6, f8, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f17, f6, f8, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f17, f6, f8, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f17, f6, f8, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f17, f6, f8, f9 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x200 fs3 = 0xfc00)
li x3, 0x0c0493c9a20c0ae1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f5, 0(x2) # load 0x00000200 from memory into f5
li x3, 0xa7c99c7f3e042e48 # load x3 with value 0xa7c99c7f3e042e48
sw x3, 0(x2) # store 0xa7c99c7f3e042e48 in memory
flh f6, 0(x2) # load 0xa7c99c7f3e042e48 from memory into f6
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f13, 0(x2) # load 0x0000fc00 from memory into f13
fnmadd.h f3, f5, f6, f13, dyn # perform operation
fnmadd.h f3, f5, f6, f13, rdn # perform operation
fnmadd.h f3, f5, f6, f13, rmm # perform operation
fnmadd.h f3, f5, f6, f13, rne # perform operation
fnmadd.h f3, f5, f6, f13, rtz # perform operation
fnmadd.h f3, f5, f6, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f3, f5, f6, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f3, f5, f6, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f3, f5, f6, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f3, f5, f6, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f3, f5, f6, f13 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x200 fs3 = 0x7e00)
li x6, 0x84a8a03a286c863b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f27, 0(x2) # load 0x00000200 from memory into f27
li x3, 0xb9310f3867b0c570 # load x3 with value 0xb9310f3867b0c570
sw x3, 0(x2) # store 0xb9310f3867b0c570 in memory
flh f18, 0(x2) # load 0xb9310f3867b0c570 from memory into f18
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f5, 0(x2) # load 0x00007e00 from memory into f5
fnmadd.h f6, f27, f18, f5, dyn # perform operation
fnmadd.h f6, f27, f18, f5, rdn # perform operation
fnmadd.h f6, f27, f18, f5, rmm # perform operation
fnmadd.h f6, f27, f18, f5, rne # perform operation
fnmadd.h f6, f27, f18, f5, rtz # perform operation
fnmadd.h f6, f27, f18, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f6, f27, f18, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f6, f27, f18, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f6, f27, f18, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f6, f27, f18, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f6, f27, f18, f5 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x200 fs3 = 0x7fff)
li x29, 0xfba858f471f3f3ea # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f27, 0(x2) # load 0x00000200 from memory into f27
li x3, 0x4492bad60e81b49a # load x3 with value 0x4492bad60e81b49a
sw x3, 0(x2) # store 0x4492bad60e81b49a in memory
flh f8, 0(x2) # load 0x4492bad60e81b49a from memory into f8
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f21, 0(x2) # load 0x00007fff from memory into f21
fnmadd.h f29, f27, f8, f21, dyn # perform operation
fnmadd.h f29, f27, f8, f21, rdn # perform operation
fnmadd.h f29, f27, f8, f21, rmm # perform operation
fnmadd.h f29, f27, f8, f21, rne # perform operation
fnmadd.h f29, f27, f8, f21, rtz # perform operation
fnmadd.h f29, f27, f8, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f29, f27, f8, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f29, f27, f8, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f29, f27, f8, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f29, f27, f8, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f29, f27, f8, f21 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x200 fs3 = 0x7c01)
li x9, 0xcf7b42886b356ed1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f21, 0(x2) # load 0x00000200 from memory into f21
li x3, 0xb10b4d17854152b6 # load x3 with value 0xb10b4d17854152b6
sw x3, 0(x2) # store 0xb10b4d17854152b6 in memory
flh f23, 0(x2) # load 0xb10b4d17854152b6 from memory into f23
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f20, 0(x2) # load 0x00007c01 from memory into f20
fnmadd.h f9, f21, f23, f20, dyn # perform operation
fnmadd.h f9, f21, f23, f20, rdn # perform operation
fnmadd.h f9, f21, f23, f20, rmm # perform operation
fnmadd.h f9, f21, f23, f20, rne # perform operation
fnmadd.h f9, f21, f23, f20, rtz # perform operation
fnmadd.h f9, f21, f23, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f9, f21, f23, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f9, f21, f23, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f9, f21, f23, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f9, f21, f23, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f9, f21, f23, f20 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x200 fs3 = 0x7dff)
li x22, 0x10d6e64e292553dc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f20, 0(x2) # load 0x00000200 from memory into f20
li x3, 0x236a08141b1aac04 # load x3 with value 0x236a08141b1aac04
sw x3, 0(x2) # store 0x236a08141b1aac04 in memory
flh f12, 0(x2) # load 0x236a08141b1aac04 from memory into f12
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f23, 0(x2) # load 0x00007dff from memory into f23
fnmadd.h f22, f20, f12, f23, dyn # perform operation
fnmadd.h f22, f20, f12, f23, rdn # perform operation
fnmadd.h f22, f20, f12, f23, rmm # perform operation
fnmadd.h f22, f20, f12, f23, rne # perform operation
fnmadd.h f22, f20, f12, f23, rtz # perform operation
fnmadd.h f22, f20, f12, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f22, f20, f12, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f22, f20, f12, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f22, f20, f12, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f22, f20, f12, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f22, f20, f12, f23 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x200 fs3 = 0x58b4)
li x14, 0x8b028047e2c6286b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f29, 0(x2) # load 0x00000200 from memory into f29
li x3, 0x39dd2f50f7b6a23f # load x3 with value 0x39dd2f50f7b6a23f
sw x3, 0(x2) # store 0x39dd2f50f7b6a23f in memory
flh f21, 0(x2) # load 0x39dd2f50f7b6a23f from memory into f21
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f25, 0(x2) # load 0x000058b4 from memory into f25
fnmadd.h f14, f29, f21, f25, dyn # perform operation
fnmadd.h f14, f29, f21, f25, rdn # perform operation
fnmadd.h f14, f29, f21, f25, rmm # perform operation
fnmadd.h f14, f29, f21, f25, rne # perform operation
fnmadd.h f14, f29, f21, f25, rtz # perform operation
fnmadd.h f14, f29, f21, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f14, f29, f21, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f14, f29, f21, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f14, f29, f21, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f14, f29, f21, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f14, f29, f21, f25 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x200 fs3 = 0xc93a)
li x3, 0x2d078e3cfe49841d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f22, 0(x2) # load 0x00000200 from memory into f22
li x3, 0xf01e33a5ed607b6c # load x3 with value 0xf01e33a5ed607b6c
sw x3, 0(x2) # store 0xf01e33a5ed607b6c in memory
flh f23, 0(x2) # load 0xf01e33a5ed607b6c from memory into f23
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f31, 0(x2) # load 0x0000c93a from memory into f31
fnmadd.h f3, f22, f23, f31, dyn # perform operation
fnmadd.h f3, f22, f23, f31, rdn # perform operation
fnmadd.h f3, f22, f23, f31, rmm # perform operation
fnmadd.h f3, f22, f23, f31, rne # perform operation
fnmadd.h f3, f22, f23, f31, rtz # perform operation
fnmadd.h f3, f22, f23, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f3, f22, f23, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f3, f22, f23, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f3, f22, f23, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f3, f22, f23, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f3, f22, f23, f31 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8200 fs3 = 0x0)
li x26, 0xabfefcccb7133dda # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f25, 0(x2) # load 0x00008200 from memory into f25
li x3, 0x686e2a0e11ee0273 # load x3 with value 0x686e2a0e11ee0273
sw x3, 0(x2) # store 0x686e2a0e11ee0273 in memory
flh f11, 0(x2) # load 0x686e2a0e11ee0273 from memory into f11
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f12, 0(x2) # load 0x00000000 from memory into f12
fnmadd.h f26, f25, f11, f12, dyn # perform operation
fnmadd.h f26, f25, f11, f12, rdn # perform operation
fnmadd.h f26, f25, f11, f12, rmm # perform operation
fnmadd.h f26, f25, f11, f12, rne # perform operation
fnmadd.h f26, f25, f11, f12, rtz # perform operation
fnmadd.h f26, f25, f11, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f26, f25, f11, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f26, f25, f11, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f26, f25, f11, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f26, f25, f11, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f26, f25, f11, f12 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8200 fs3 = 0x8000)
li x3, 0x4d4e7ede4461f413 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f4, 0(x2) # load 0x00008200 from memory into f4
li x3, 0x76fe63863faa2245 # load x3 with value 0x76fe63863faa2245
sw x3, 0(x2) # store 0x76fe63863faa2245 in memory
flh f9, 0(x2) # load 0x76fe63863faa2245 from memory into f9
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f21, 0(x2) # load 0x00008000 from memory into f21
fnmadd.h f3, f4, f9, f21, dyn # perform operation
fnmadd.h f3, f4, f9, f21, rdn # perform operation
fnmadd.h f3, f4, f9, f21, rmm # perform operation
fnmadd.h f3, f4, f9, f21, rne # perform operation
fnmadd.h f3, f4, f9, f21, rtz # perform operation
fnmadd.h f3, f4, f9, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f3, f4, f9, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f3, f4, f9, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f3, f4, f9, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f3, f4, f9, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f3, f4, f9, f21 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8200 fs3 = 0x3c00)
li x5, 0x5518eee433989b49 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f23, 0(x2) # load 0x00008200 from memory into f23
li x3, 0xa533d06f328d68a5 # load x3 with value 0xa533d06f328d68a5
sw x3, 0(x2) # store 0xa533d06f328d68a5 in memory
flh f14, 0(x2) # load 0xa533d06f328d68a5 from memory into f14
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f3, 0(x2) # load 0x00003c00 from memory into f3
fnmadd.h f5, f23, f14, f3, dyn # perform operation
fnmadd.h f5, f23, f14, f3, rdn # perform operation
fnmadd.h f5, f23, f14, f3, rmm # perform operation
fnmadd.h f5, f23, f14, f3, rne # perform operation
fnmadd.h f5, f23, f14, f3, rtz # perform operation
fnmadd.h f5, f23, f14, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f5, f23, f14, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f5, f23, f14, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f5, f23, f14, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f5, f23, f14, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f5, f23, f14, f3 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8200 fs3 = 0xbc00)
li x16, 0x00d7307fd676a134 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f21, 0(x2) # load 0x00008200 from memory into f21
li x3, 0x34a2404d3a7ece40 # load x3 with value 0x34a2404d3a7ece40
sw x3, 0(x2) # store 0x34a2404d3a7ece40 in memory
flh f30, 0(x2) # load 0x34a2404d3a7ece40 from memory into f30
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f25, 0(x2) # load 0x0000bc00 from memory into f25
fnmadd.h f16, f21, f30, f25, dyn # perform operation
fnmadd.h f16, f21, f30, f25, rdn # perform operation
fnmadd.h f16, f21, f30, f25, rmm # perform operation
fnmadd.h f16, f21, f30, f25, rne # perform operation
fnmadd.h f16, f21, f30, f25, rtz # perform operation
fnmadd.h f16, f21, f30, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f16, f21, f30, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f16, f21, f30, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f16, f21, f30, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f16, f21, f30, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f16, f21, f30, f25 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8200 fs3 = 0x3e00)
li x5, 0x0d7de76bb397dba4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f17, 0(x2) # load 0x00008200 from memory into f17
li x3, 0xa2b9f0e3ace3578e # load x3 with value 0xa2b9f0e3ace3578e
sw x3, 0(x2) # store 0xa2b9f0e3ace3578e in memory
flh f22, 0(x2) # load 0xa2b9f0e3ace3578e from memory into f22
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f13, 0(x2) # load 0x00003e00 from memory into f13
fnmadd.h f5, f17, f22, f13, dyn # perform operation
fnmadd.h f5, f17, f22, f13, rdn # perform operation
fnmadd.h f5, f17, f22, f13, rmm # perform operation
fnmadd.h f5, f17, f22, f13, rne # perform operation
fnmadd.h f5, f17, f22, f13, rtz # perform operation
fnmadd.h f5, f17, f22, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f5, f17, f22, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f5, f17, f22, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f5, f17, f22, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f5, f17, f22, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f5, f17, f22, f13 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8200 fs3 = 0xbe00)
li x17, 0xaf28fa8e5df1ad29 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f31, 0(x2) # load 0x00008200 from memory into f31
li x3, 0xde1770eb87a18b84 # load x3 with value 0xde1770eb87a18b84
sw x3, 0(x2) # store 0xde1770eb87a18b84 in memory
flh f12, 0(x2) # load 0xde1770eb87a18b84 from memory into f12
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f16, 0(x2) # load 0x0000be00 from memory into f16
fnmadd.h f17, f31, f12, f16, dyn # perform operation
fnmadd.h f17, f31, f12, f16, rdn # perform operation
fnmadd.h f17, f31, f12, f16, rmm # perform operation
fnmadd.h f17, f31, f12, f16, rne # perform operation
fnmadd.h f17, f31, f12, f16, rtz # perform operation
fnmadd.h f17, f31, f12, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f17, f31, f12, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f17, f31, f12, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f17, f31, f12, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f17, f31, f12, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f17, f31, f12, f16 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8200 fs3 = 0x4000)
li x11, 0x1b0fd0e9a5e974d5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f16, 0(x2) # load 0x00008200 from memory into f16
li x3, 0x251772a15c6ceb34 # load x3 with value 0x251772a15c6ceb34
sw x3, 0(x2) # store 0x251772a15c6ceb34 in memory
flh f25, 0(x2) # load 0x251772a15c6ceb34 from memory into f25
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f13, 0(x2) # load 0x00004000 from memory into f13
fnmadd.h f11, f16, f25, f13, dyn # perform operation
fnmadd.h f11, f16, f25, f13, rdn # perform operation
fnmadd.h f11, f16, f25, f13, rmm # perform operation
fnmadd.h f11, f16, f25, f13, rne # perform operation
fnmadd.h f11, f16, f25, f13, rtz # perform operation
fnmadd.h f11, f16, f25, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f11, f16, f25, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f11, f16, f25, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f11, f16, f25, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f11, f16, f25, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f11, f16, f25, f13 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8200 fs3 = 0xc000)
li x24, 0xf5e75d53a639350d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f8, 0(x2) # load 0x00008200 from memory into f8
li x3, 0xb15a533b14933337 # load x3 with value 0xb15a533b14933337
sw x3, 0(x2) # store 0xb15a533b14933337 in memory
flh f31, 0(x2) # load 0xb15a533b14933337 from memory into f31
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f3, 0(x2) # load 0x0000c000 from memory into f3
fnmadd.h f24, f8, f31, f3, dyn # perform operation
fnmadd.h f24, f8, f31, f3, rdn # perform operation
fnmadd.h f24, f8, f31, f3, rmm # perform operation
fnmadd.h f24, f8, f31, f3, rne # perform operation
fnmadd.h f24, f8, f31, f3, rtz # perform operation
fnmadd.h f24, f8, f31, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f24, f8, f31, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f24, f8, f31, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f24, f8, f31, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f24, f8, f31, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f24, f8, f31, f3 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8200 fs3 = 0x400)
li x25, 0xf0222cb749dae289 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f16, 0(x2) # load 0x00008200 from memory into f16
li x3, 0x99eace0f7f1235df # load x3 with value 0x99eace0f7f1235df
sw x3, 0(x2) # store 0x99eace0f7f1235df in memory
flh f29, 0(x2) # load 0x99eace0f7f1235df from memory into f29
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f31, 0(x2) # load 0x00000400 from memory into f31
fnmadd.h f25, f16, f29, f31, dyn # perform operation
fnmadd.h f25, f16, f29, f31, rdn # perform operation
fnmadd.h f25, f16, f29, f31, rmm # perform operation
fnmadd.h f25, f16, f29, f31, rne # perform operation
fnmadd.h f25, f16, f29, f31, rtz # perform operation
fnmadd.h f25, f16, f29, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f25, f16, f29, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f25, f16, f29, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f25, f16, f29, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f25, f16, f29, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f25, f16, f29, f31 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8200 fs3 = 0x8400)
li x3, 0xf072798b2201c404 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f27, 0(x2) # load 0x00008200 from memory into f27
li x3, 0xa3872093b646e1e8 # load x3 with value 0xa3872093b646e1e8
sw x3, 0(x2) # store 0xa3872093b646e1e8 in memory
flh f21, 0(x2) # load 0xa3872093b646e1e8 from memory into f21
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f30, 0(x2) # load 0x00008400 from memory into f30
fnmadd.h f3, f27, f21, f30, dyn # perform operation
fnmadd.h f3, f27, f21, f30, rdn # perform operation
fnmadd.h f3, f27, f21, f30, rmm # perform operation
fnmadd.h f3, f27, f21, f30, rne # perform operation
fnmadd.h f3, f27, f21, f30, rtz # perform operation
fnmadd.h f3, f27, f21, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f3, f27, f21, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f3, f27, f21, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f3, f27, f21, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f3, f27, f21, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f3, f27, f21, f30 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8200 fs3 = 0x7bff)
li x27, 0xf3db48b65561519e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f11, 0(x2) # load 0x00008200 from memory into f11
li x3, 0x5d131a1f179c1403 # load x3 with value 0x5d131a1f179c1403
sw x3, 0(x2) # store 0x5d131a1f179c1403 in memory
flh f6, 0(x2) # load 0x5d131a1f179c1403 from memory into f6
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f20, 0(x2) # load 0x00007bff from memory into f20
fnmadd.h f27, f11, f6, f20, dyn # perform operation
fnmadd.h f27, f11, f6, f20, rdn # perform operation
fnmadd.h f27, f11, f6, f20, rmm # perform operation
fnmadd.h f27, f11, f6, f20, rne # perform operation
fnmadd.h f27, f11, f6, f20, rtz # perform operation
fnmadd.h f27, f11, f6, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f27, f11, f6, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f27, f11, f6, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f27, f11, f6, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f27, f11, f6, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f27, f11, f6, f20 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8200 fs3 = 0xfbff)
li x4, 0x99d7178a672f7603 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f2, 0(x2) # load 0x00008200 from memory into f2
li x3, 0xa3942adc86a4774b # load x3 with value 0xa3942adc86a4774b
sw x3, 0(x2) # store 0xa3942adc86a4774b in memory
flh f23, 0(x2) # load 0xa3942adc86a4774b from memory into f23
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f14, 0(x2) # load 0x0000fbff from memory into f14
fnmadd.h f4, f2, f23, f14, dyn # perform operation
fnmadd.h f4, f2, f23, f14, rdn # perform operation
fnmadd.h f4, f2, f23, f14, rmm # perform operation
fnmadd.h f4, f2, f23, f14, rne # perform operation
fnmadd.h f4, f2, f23, f14, rtz # perform operation
fnmadd.h f4, f2, f23, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f4, f2, f23, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f4, f2, f23, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f4, f2, f23, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f4, f2, f23, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f4, f2, f23, f14 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8200 fs3 = 0x3ff)
li x15, 0x191db68e2b8e97e0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f20, 0(x2) # load 0x00008200 from memory into f20
li x3, 0xc18555d063c89275 # load x3 with value 0xc18555d063c89275
sw x3, 0(x2) # store 0xc18555d063c89275 in memory
flh f9, 0(x2) # load 0xc18555d063c89275 from memory into f9
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f4, 0(x2) # load 0x000003ff from memory into f4
fnmadd.h f15, f20, f9, f4, dyn # perform operation
fnmadd.h f15, f20, f9, f4, rdn # perform operation
fnmadd.h f15, f20, f9, f4, rmm # perform operation
fnmadd.h f15, f20, f9, f4, rne # perform operation
fnmadd.h f15, f20, f9, f4, rtz # perform operation
fnmadd.h f15, f20, f9, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f15, f20, f9, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f15, f20, f9, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f15, f20, f9, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f15, f20, f9, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f15, f20, f9, f4 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8200 fs3 = 0x83ff)
li x10, 0xf65707ef014fc945 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f7, 0(x2) # load 0x00008200 from memory into f7
li x3, 0x3cd6ce800dce8878 # load x3 with value 0x3cd6ce800dce8878
sw x3, 0(x2) # store 0x3cd6ce800dce8878 in memory
flh f19, 0(x2) # load 0x3cd6ce800dce8878 from memory into f19
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f3, 0(x2) # load 0x000083ff from memory into f3
fnmadd.h f10, f7, f19, f3, dyn # perform operation
fnmadd.h f10, f7, f19, f3, rdn # perform operation
fnmadd.h f10, f7, f19, f3, rmm # perform operation
fnmadd.h f10, f7, f19, f3, rne # perform operation
fnmadd.h f10, f7, f19, f3, rtz # perform operation
fnmadd.h f10, f7, f19, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f10, f7, f19, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f10, f7, f19, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f10, f7, f19, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f10, f7, f19, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f10, f7, f19, f3 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8200 fs3 = 0x200)
li x19, 0x183a0d15f6e5265f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f21, 0(x2) # load 0x00008200 from memory into f21
li x3, 0x620b8558cf8faa0b # load x3 with value 0x620b8558cf8faa0b
sw x3, 0(x2) # store 0x620b8558cf8faa0b in memory
flh f20, 0(x2) # load 0x620b8558cf8faa0b from memory into f20
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f7, 0(x2) # load 0x00000200 from memory into f7
fnmadd.h f19, f21, f20, f7, dyn # perform operation
fnmadd.h f19, f21, f20, f7, rdn # perform operation
fnmadd.h f19, f21, f20, f7, rmm # perform operation
fnmadd.h f19, f21, f20, f7, rne # perform operation
fnmadd.h f19, f21, f20, f7, rtz # perform operation
fnmadd.h f19, f21, f20, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f19, f21, f20, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f19, f21, f20, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f19, f21, f20, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f19, f21, f20, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f19, f21, f20, f7 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8200 fs3 = 0x8200)
li x31, 0xa4f4e956507122c6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f28, 0(x2) # load 0x00008200 from memory into f28
li x3, 0x2875a0d431ccaf6f # load x3 with value 0x2875a0d431ccaf6f
sw x3, 0(x2) # store 0x2875a0d431ccaf6f in memory
flh f16, 0(x2) # load 0x2875a0d431ccaf6f from memory into f16
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f29, 0(x2) # load 0x00008200 from memory into f29
fnmadd.h f31, f28, f16, f29, dyn # perform operation
fnmadd.h f31, f28, f16, f29, rdn # perform operation
fnmadd.h f31, f28, f16, f29, rmm # perform operation
fnmadd.h f31, f28, f16, f29, rne # perform operation
fnmadd.h f31, f28, f16, f29, rtz # perform operation
fnmadd.h f31, f28, f16, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f31, f28, f16, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f31, f28, f16, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f31, f28, f16, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f31, f28, f16, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f31, f28, f16, f29 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8200 fs3 = 0x1)
li x21, 0xb8289ccdda64f8fa # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f14, 0(x2) # load 0x00008200 from memory into f14
li x3, 0xe41d4316b38820a5 # load x3 with value 0xe41d4316b38820a5
sw x3, 0(x2) # store 0xe41d4316b38820a5 in memory
flh f22, 0(x2) # load 0xe41d4316b38820a5 from memory into f22
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f7, 0(x2) # load 0x00000001 from memory into f7
fnmadd.h f21, f14, f22, f7, dyn # perform operation
fnmadd.h f21, f14, f22, f7, rdn # perform operation
fnmadd.h f21, f14, f22, f7, rmm # perform operation
fnmadd.h f21, f14, f22, f7, rne # perform operation
fnmadd.h f21, f14, f22, f7, rtz # perform operation
fnmadd.h f21, f14, f22, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f21, f14, f22, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f21, f14, f22, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f21, f14, f22, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f21, f14, f22, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f21, f14, f22, f7 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8200 fs3 = 0x8001)
li x15, 0xa209fd123231a263 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f23, 0(x2) # load 0x00008200 from memory into f23
li x3, 0x5bc12786381f4834 # load x3 with value 0x5bc12786381f4834
sw x3, 0(x2) # store 0x5bc12786381f4834 in memory
flh f27, 0(x2) # load 0x5bc12786381f4834 from memory into f27
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f7, 0(x2) # load 0x00008001 from memory into f7
fnmadd.h f15, f23, f27, f7, dyn # perform operation
fnmadd.h f15, f23, f27, f7, rdn # perform operation
fnmadd.h f15, f23, f27, f7, rmm # perform operation
fnmadd.h f15, f23, f27, f7, rne # perform operation
fnmadd.h f15, f23, f27, f7, rtz # perform operation
fnmadd.h f15, f23, f27, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f15, f23, f27, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f15, f23, f27, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f15, f23, f27, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f15, f23, f27, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f15, f23, f27, f7 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8200 fs3 = 0x7c00)
li x8, 0x95c45625a22bbb3d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f27, 0(x2) # load 0x00008200 from memory into f27
li x3, 0xdef9ed41723cae23 # load x3 with value 0xdef9ed41723cae23
sw x3, 0(x2) # store 0xdef9ed41723cae23 in memory
flh f13, 0(x2) # load 0xdef9ed41723cae23 from memory into f13
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f18, 0(x2) # load 0x00007c00 from memory into f18
fnmadd.h f8, f27, f13, f18, dyn # perform operation
fnmadd.h f8, f27, f13, f18, rdn # perform operation
fnmadd.h f8, f27, f13, f18, rmm # perform operation
fnmadd.h f8, f27, f13, f18, rne # perform operation
fnmadd.h f8, f27, f13, f18, rtz # perform operation
fnmadd.h f8, f27, f13, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f8, f27, f13, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f8, f27, f13, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f8, f27, f13, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f8, f27, f13, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f8, f27, f13, f18 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8200 fs3 = 0xfc00)
li x20, 0x0f0eeef00ae55c8e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f8, 0(x2) # load 0x00008200 from memory into f8
li x3, 0xa49f498910a25fd9 # load x3 with value 0xa49f498910a25fd9
sw x3, 0(x2) # store 0xa49f498910a25fd9 in memory
flh f5, 0(x2) # load 0xa49f498910a25fd9 from memory into f5
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f13, 0(x2) # load 0x0000fc00 from memory into f13
fnmadd.h f20, f8, f5, f13, dyn # perform operation
fnmadd.h f20, f8, f5, f13, rdn # perform operation
fnmadd.h f20, f8, f5, f13, rmm # perform operation
fnmadd.h f20, f8, f5, f13, rne # perform operation
fnmadd.h f20, f8, f5, f13, rtz # perform operation
fnmadd.h f20, f8, f5, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f20, f8, f5, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f20, f8, f5, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f20, f8, f5, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f20, f8, f5, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f20, f8, f5, f13 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8200 fs3 = 0x7e00)
li x13, 0x8eef5f7886eb839e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f9, 0(x2) # load 0x00008200 from memory into f9
li x3, 0x82df1c0666eae9a # load x3 with value 0x82df1c0666eae9a
sw x3, 0(x2) # store 0x82df1c0666eae9a in memory
flh f22, 0(x2) # load 0x82df1c0666eae9a from memory into f22
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f17, 0(x2) # load 0x00007e00 from memory into f17
fnmadd.h f13, f9, f22, f17, dyn # perform operation
fnmadd.h f13, f9, f22, f17, rdn # perform operation
fnmadd.h f13, f9, f22, f17, rmm # perform operation
fnmadd.h f13, f9, f22, f17, rne # perform operation
fnmadd.h f13, f9, f22, f17, rtz # perform operation
fnmadd.h f13, f9, f22, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f13, f9, f22, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f13, f9, f22, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f13, f9, f22, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f13, f9, f22, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f13, f9, f22, f17 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8200 fs3 = 0x7fff)
li x22, 0xf080d36e14b306fc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f24, 0(x2) # load 0x00008200 from memory into f24
li x3, 0xd5a9c31be01a522a # load x3 with value 0xd5a9c31be01a522a
sw x3, 0(x2) # store 0xd5a9c31be01a522a in memory
flh f16, 0(x2) # load 0xd5a9c31be01a522a from memory into f16
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f19, 0(x2) # load 0x00007fff from memory into f19
fnmadd.h f22, f24, f16, f19, dyn # perform operation
fnmadd.h f22, f24, f16, f19, rdn # perform operation
fnmadd.h f22, f24, f16, f19, rmm # perform operation
fnmadd.h f22, f24, f16, f19, rne # perform operation
fnmadd.h f22, f24, f16, f19, rtz # perform operation
fnmadd.h f22, f24, f16, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f22, f24, f16, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f22, f24, f16, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f22, f24, f16, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f22, f24, f16, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f22, f24, f16, f19 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8200 fs3 = 0x7c01)
li x20, 0x2f2f900680eb5208 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f1, 0(x2) # load 0x00008200 from memory into f1
li x3, 0xbe387c1167c1e86f # load x3 with value 0xbe387c1167c1e86f
sw x3, 0(x2) # store 0xbe387c1167c1e86f in memory
flh f5, 0(x2) # load 0xbe387c1167c1e86f from memory into f5
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f24, 0(x2) # load 0x00007c01 from memory into f24
fnmadd.h f20, f1, f5, f24, dyn # perform operation
fnmadd.h f20, f1, f5, f24, rdn # perform operation
fnmadd.h f20, f1, f5, f24, rmm # perform operation
fnmadd.h f20, f1, f5, f24, rne # perform operation
fnmadd.h f20, f1, f5, f24, rtz # perform operation
fnmadd.h f20, f1, f5, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f20, f1, f5, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f20, f1, f5, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f20, f1, f5, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f20, f1, f5, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f20, f1, f5, f24 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8200 fs3 = 0x7dff)
li x22, 0x32d98a274edcdf6b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f16, 0(x2) # load 0x00008200 from memory into f16
li x3, 0xc41966f03d3700b3 # load x3 with value 0xc41966f03d3700b3
sw x3, 0(x2) # store 0xc41966f03d3700b3 in memory
flh f27, 0(x2) # load 0xc41966f03d3700b3 from memory into f27
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f7, 0(x2) # load 0x00007dff from memory into f7
fnmadd.h f22, f16, f27, f7, dyn # perform operation
fnmadd.h f22, f16, f27, f7, rdn # perform operation
fnmadd.h f22, f16, f27, f7, rmm # perform operation
fnmadd.h f22, f16, f27, f7, rne # perform operation
fnmadd.h f22, f16, f27, f7, rtz # perform operation
fnmadd.h f22, f16, f27, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f22, f16, f27, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f22, f16, f27, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f22, f16, f27, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f22, f16, f27, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f22, f16, f27, f7 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8200 fs3 = 0x58b4)
li x17, 0xb0c0e3b0f005d396 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f31, 0(x2) # load 0x00008200 from memory into f31
li x3, 0xadaaa82d47e2c398 # load x3 with value 0xadaaa82d47e2c398
sw x3, 0(x2) # store 0xadaaa82d47e2c398 in memory
flh f5, 0(x2) # load 0xadaaa82d47e2c398 from memory into f5
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f4, 0(x2) # load 0x000058b4 from memory into f4
fnmadd.h f17, f31, f5, f4, dyn # perform operation
fnmadd.h f17, f31, f5, f4, rdn # perform operation
fnmadd.h f17, f31, f5, f4, rmm # perform operation
fnmadd.h f17, f31, f5, f4, rne # perform operation
fnmadd.h f17, f31, f5, f4, rtz # perform operation
fnmadd.h f17, f31, f5, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f17, f31, f5, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f17, f31, f5, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f17, f31, f5, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f17, f31, f5, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f17, f31, f5, f4 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8200 fs3 = 0xc93a)
li x4, 0xcb48401c0ce97245 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f14, 0(x2) # load 0x00008200 from memory into f14
li x3, 0xa0b0ef2397dbb47e # load x3 with value 0xa0b0ef2397dbb47e
sw x3, 0(x2) # store 0xa0b0ef2397dbb47e in memory
flh f31, 0(x2) # load 0xa0b0ef2397dbb47e from memory into f31
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f22, 0(x2) # load 0x0000c93a from memory into f22
fnmadd.h f4, f14, f31, f22, dyn # perform operation
fnmadd.h f4, f14, f31, f22, rdn # perform operation
fnmadd.h f4, f14, f31, f22, rmm # perform operation
fnmadd.h f4, f14, f31, f22, rne # perform operation
fnmadd.h f4, f14, f31, f22, rtz # perform operation
fnmadd.h f4, f14, f31, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f4, f14, f31, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f4, f14, f31, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f4, f14, f31, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f4, f14, f31, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f4, f14, f31, f22 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x0)
li x10, 0x17cc7a86d58e1da8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f3, 0(x2) # load 0x00000001 from memory into f3
li x3, 0xbe557d0ffa2b412b # load x3 with value 0xbe557d0ffa2b412b
sw x3, 0(x2) # store 0xbe557d0ffa2b412b in memory
flh f12, 0(x2) # load 0xbe557d0ffa2b412b from memory into f12
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f21, 0(x2) # load 0x00000000 from memory into f21
fnmadd.h f10, f3, f12, f21, dyn # perform operation
fnmadd.h f10, f3, f12, f21, rdn # perform operation
fnmadd.h f10, f3, f12, f21, rmm # perform operation
fnmadd.h f10, f3, f12, f21, rne # perform operation
fnmadd.h f10, f3, f12, f21, rtz # perform operation
fnmadd.h f10, f3, f12, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f10, f3, f12, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f10, f3, f12, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f10, f3, f12, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f10, f3, f12, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f10, f3, f12, f21 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x8000)
li x27, 0x15537640a01d7239 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f4, 0(x2) # load 0x00000001 from memory into f4
li x3, 0xd3c37f6f56e620c8 # load x3 with value 0xd3c37f6f56e620c8
sw x3, 0(x2) # store 0xd3c37f6f56e620c8 in memory
flh f30, 0(x2) # load 0xd3c37f6f56e620c8 from memory into f30
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f12, 0(x2) # load 0x00008000 from memory into f12
fnmadd.h f27, f4, f30, f12, dyn # perform operation
fnmadd.h f27, f4, f30, f12, rdn # perform operation
fnmadd.h f27, f4, f30, f12, rmm # perform operation
fnmadd.h f27, f4, f30, f12, rne # perform operation
fnmadd.h f27, f4, f30, f12, rtz # perform operation
fnmadd.h f27, f4, f30, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f27, f4, f30, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f27, f4, f30, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f27, f4, f30, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f27, f4, f30, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f27, f4, f30, f12 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x3c00)
li x4, 0x11ca2cea129569a2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f3, 0(x2) # load 0x00000001 from memory into f3
li x3, 0x51f9bd9a9189b8f5 # load x3 with value 0x51f9bd9a9189b8f5
sw x3, 0(x2) # store 0x51f9bd9a9189b8f5 in memory
flh f18, 0(x2) # load 0x51f9bd9a9189b8f5 from memory into f18
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f20, 0(x2) # load 0x00003c00 from memory into f20
fnmadd.h f4, f3, f18, f20, dyn # perform operation
fnmadd.h f4, f3, f18, f20, rdn # perform operation
fnmadd.h f4, f3, f18, f20, rmm # perform operation
fnmadd.h f4, f3, f18, f20, rne # perform operation
fnmadd.h f4, f3, f18, f20, rtz # perform operation
fnmadd.h f4, f3, f18, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f4, f3, f18, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f4, f3, f18, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f4, f3, f18, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f4, f3, f18, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f4, f3, f18, f20 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0xbc00)
li x11, 0x78d2842b21709daa # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f24, 0(x2) # load 0x00000001 from memory into f24
li x3, 0x5e15a8912a45d110 # load x3 with value 0x5e15a8912a45d110
sw x3, 0(x2) # store 0x5e15a8912a45d110 in memory
flh f15, 0(x2) # load 0x5e15a8912a45d110 from memory into f15
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f6, 0(x2) # load 0x0000bc00 from memory into f6
fnmadd.h f11, f24, f15, f6, dyn # perform operation
fnmadd.h f11, f24, f15, f6, rdn # perform operation
fnmadd.h f11, f24, f15, f6, rmm # perform operation
fnmadd.h f11, f24, f15, f6, rne # perform operation
fnmadd.h f11, f24, f15, f6, rtz # perform operation
fnmadd.h f11, f24, f15, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f11, f24, f15, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f11, f24, f15, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f11, f24, f15, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f11, f24, f15, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f11, f24, f15, f6 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x3e00)
li x2, 0x141f62972df50e6f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f3, 0(x2) # load 0x00000001 from memory into f3
li x3, 0x96c4d9e3b18036bd # load x3 with value 0x96c4d9e3b18036bd
sw x3, 0(x2) # store 0x96c4d9e3b18036bd in memory
flh f19, 0(x2) # load 0x96c4d9e3b18036bd from memory into f19
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f10, 0(x2) # load 0x00003e00 from memory into f10
fnmadd.h f2, f3, f19, f10, dyn # perform operation
fnmadd.h f2, f3, f19, f10, rdn # perform operation
fnmadd.h f2, f3, f19, f10, rmm # perform operation
fnmadd.h f2, f3, f19, f10, rne # perform operation
fnmadd.h f2, f3, f19, f10, rtz # perform operation
fnmadd.h f2, f3, f19, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f2, f3, f19, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f2, f3, f19, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f2, f3, f19, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f2, f3, f19, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f2, f3, f19, f10 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0xbe00)
li x6, 0xe8ece9e22dfb8561 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f18, 0(x2) # load 0x00000001 from memory into f18
li x3, 0x4a4032424ab59c69 # load x3 with value 0x4a4032424ab59c69
sw x3, 0(x2) # store 0x4a4032424ab59c69 in memory
flh f12, 0(x2) # load 0x4a4032424ab59c69 from memory into f12
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f17, 0(x2) # load 0x0000be00 from memory into f17
fnmadd.h f6, f18, f12, f17, dyn # perform operation
fnmadd.h f6, f18, f12, f17, rdn # perform operation
fnmadd.h f6, f18, f12, f17, rmm # perform operation
fnmadd.h f6, f18, f12, f17, rne # perform operation
fnmadd.h f6, f18, f12, f17, rtz # perform operation
fnmadd.h f6, f18, f12, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f6, f18, f12, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f6, f18, f12, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f6, f18, f12, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f6, f18, f12, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f6, f18, f12, f17 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x4000)
li x7, 0x8dc6ea6f8b48222d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f30, 0(x2) # load 0x00000001 from memory into f30
li x3, 0x1edf4b4ecded8114 # load x3 with value 0x1edf4b4ecded8114
sw x3, 0(x2) # store 0x1edf4b4ecded8114 in memory
flh f31, 0(x2) # load 0x1edf4b4ecded8114 from memory into f31
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f21, 0(x2) # load 0x00004000 from memory into f21
fnmadd.h f7, f30, f31, f21, dyn # perform operation
fnmadd.h f7, f30, f31, f21, rdn # perform operation
fnmadd.h f7, f30, f31, f21, rmm # perform operation
fnmadd.h f7, f30, f31, f21, rne # perform operation
fnmadd.h f7, f30, f31, f21, rtz # perform operation
fnmadd.h f7, f30, f31, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f7, f30, f31, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f7, f30, f31, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f7, f30, f31, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f7, f30, f31, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f7, f30, f31, f21 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0xc000)
li x21, 0x5fee2f6c695e65b3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f8, 0(x2) # load 0x00000001 from memory into f8
li x3, 0xb327d99d2161ecea # load x3 with value 0xb327d99d2161ecea
sw x3, 0(x2) # store 0xb327d99d2161ecea in memory
flh f3, 0(x2) # load 0xb327d99d2161ecea from memory into f3
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f1, 0(x2) # load 0x0000c000 from memory into f1
fnmadd.h f21, f8, f3, f1, dyn # perform operation
fnmadd.h f21, f8, f3, f1, rdn # perform operation
fnmadd.h f21, f8, f3, f1, rmm # perform operation
fnmadd.h f21, f8, f3, f1, rne # perform operation
fnmadd.h f21, f8, f3, f1, rtz # perform operation
fnmadd.h f21, f8, f3, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f21, f8, f3, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f21, f8, f3, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f21, f8, f3, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f21, f8, f3, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f21, f8, f3, f1 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x400)
li x20, 0x4a72bb4ef34a384b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f6, 0(x2) # load 0x00000001 from memory into f6
li x3, 0x8ca2dcfcf27d4aea # load x3 with value 0x8ca2dcfcf27d4aea
sw x3, 0(x2) # store 0x8ca2dcfcf27d4aea in memory
flh f5, 0(x2) # load 0x8ca2dcfcf27d4aea from memory into f5
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f9, 0(x2) # load 0x00000400 from memory into f9
fnmadd.h f20, f6, f5, f9, dyn # perform operation
fnmadd.h f20, f6, f5, f9, rdn # perform operation
fnmadd.h f20, f6, f5, f9, rmm # perform operation
fnmadd.h f20, f6, f5, f9, rne # perform operation
fnmadd.h f20, f6, f5, f9, rtz # perform operation
fnmadd.h f20, f6, f5, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f20, f6, f5, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f20, f6, f5, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f20, f6, f5, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f20, f6, f5, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f20, f6, f5, f9 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x8400)
li x15, 0x9a53ce25b9b852f8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f5, 0(x2) # load 0x00000001 from memory into f5
li x3, 0xd80ba5cbec7430d4 # load x3 with value 0xd80ba5cbec7430d4
sw x3, 0(x2) # store 0xd80ba5cbec7430d4 in memory
flh f24, 0(x2) # load 0xd80ba5cbec7430d4 from memory into f24
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f20, 0(x2) # load 0x00008400 from memory into f20
fnmadd.h f15, f5, f24, f20, dyn # perform operation
fnmadd.h f15, f5, f24, f20, rdn # perform operation
fnmadd.h f15, f5, f24, f20, rmm # perform operation
fnmadd.h f15, f5, f24, f20, rne # perform operation
fnmadd.h f15, f5, f24, f20, rtz # perform operation
fnmadd.h f15, f5, f24, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f15, f5, f24, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f15, f5, f24, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f15, f5, f24, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f15, f5, f24, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f15, f5, f24, f20 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x7bff)
li x26, 0x40455055074ee0a3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f10, 0(x2) # load 0x00000001 from memory into f10
li x3, 0x8e265113f3ec3a8 # load x3 with value 0x8e265113f3ec3a8
sw x3, 0(x2) # store 0x8e265113f3ec3a8 in memory
flh f4, 0(x2) # load 0x8e265113f3ec3a8 from memory into f4
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f30, 0(x2) # load 0x00007bff from memory into f30
fnmadd.h f26, f10, f4, f30, dyn # perform operation
fnmadd.h f26, f10, f4, f30, rdn # perform operation
fnmadd.h f26, f10, f4, f30, rmm # perform operation
fnmadd.h f26, f10, f4, f30, rne # perform operation
fnmadd.h f26, f10, f4, f30, rtz # perform operation
fnmadd.h f26, f10, f4, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f26, f10, f4, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f26, f10, f4, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f26, f10, f4, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f26, f10, f4, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f26, f10, f4, f30 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0xfbff)
li x4, 0xac6545611c8255ad # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f5, 0(x2) # load 0x00000001 from memory into f5
li x3, 0xb9d92aad0a84757f # load x3 with value 0xb9d92aad0a84757f
sw x3, 0(x2) # store 0xb9d92aad0a84757f in memory
flh f19, 0(x2) # load 0xb9d92aad0a84757f from memory into f19
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f21, 0(x2) # load 0x0000fbff from memory into f21
fnmadd.h f4, f5, f19, f21, dyn # perform operation
fnmadd.h f4, f5, f19, f21, rdn # perform operation
fnmadd.h f4, f5, f19, f21, rmm # perform operation
fnmadd.h f4, f5, f19, f21, rne # perform operation
fnmadd.h f4, f5, f19, f21, rtz # perform operation
fnmadd.h f4, f5, f19, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f4, f5, f19, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f4, f5, f19, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f4, f5, f19, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f4, f5, f19, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f4, f5, f19, f21 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x3ff)
li x3, 0x6d915050fa178709 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f24, 0(x2) # load 0x00000001 from memory into f24
li x3, 0xc2ce663aaa874451 # load x3 with value 0xc2ce663aaa874451
sw x3, 0(x2) # store 0xc2ce663aaa874451 in memory
flh f22, 0(x2) # load 0xc2ce663aaa874451 from memory into f22
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f31, 0(x2) # load 0x000003ff from memory into f31
fnmadd.h f3, f24, f22, f31, dyn # perform operation
fnmadd.h f3, f24, f22, f31, rdn # perform operation
fnmadd.h f3, f24, f22, f31, rmm # perform operation
fnmadd.h f3, f24, f22, f31, rne # perform operation
fnmadd.h f3, f24, f22, f31, rtz # perform operation
fnmadd.h f3, f24, f22, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f3, f24, f22, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f3, f24, f22, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f3, f24, f22, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f3, f24, f22, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f3, f24, f22, f31 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x83ff)
li x6, 0x27ef2b7e1eab48cd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f8, 0(x2) # load 0x00000001 from memory into f8
li x3, 0xe931fe2c39aa2ec0 # load x3 with value 0xe931fe2c39aa2ec0
sw x3, 0(x2) # store 0xe931fe2c39aa2ec0 in memory
flh f12, 0(x2) # load 0xe931fe2c39aa2ec0 from memory into f12
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f29, 0(x2) # load 0x000083ff from memory into f29
fnmadd.h f6, f8, f12, f29, dyn # perform operation
fnmadd.h f6, f8, f12, f29, rdn # perform operation
fnmadd.h f6, f8, f12, f29, rmm # perform operation
fnmadd.h f6, f8, f12, f29, rne # perform operation
fnmadd.h f6, f8, f12, f29, rtz # perform operation
fnmadd.h f6, f8, f12, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f6, f8, f12, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f6, f8, f12, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f6, f8, f12, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f6, f8, f12, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f6, f8, f12, f29 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x200)
li x4, 0x7d54cd270fb9ad81 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f2, 0(x2) # load 0x00000001 from memory into f2
li x3, 0x5e2b53dbd471b979 # load x3 with value 0x5e2b53dbd471b979
sw x3, 0(x2) # store 0x5e2b53dbd471b979 in memory
flh f17, 0(x2) # load 0x5e2b53dbd471b979 from memory into f17
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f9, 0(x2) # load 0x00000200 from memory into f9
fnmadd.h f4, f2, f17, f9, dyn # perform operation
fnmadd.h f4, f2, f17, f9, rdn # perform operation
fnmadd.h f4, f2, f17, f9, rmm # perform operation
fnmadd.h f4, f2, f17, f9, rne # perform operation
fnmadd.h f4, f2, f17, f9, rtz # perform operation
fnmadd.h f4, f2, f17, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f4, f2, f17, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f4, f2, f17, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f4, f2, f17, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f4, f2, f17, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f4, f2, f17, f9 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x8200)
li x11, 0x574e2352052a62e4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f26, 0(x2) # load 0x00000001 from memory into f26
li x3, 0x4f389f57b5932541 # load x3 with value 0x4f389f57b5932541
sw x3, 0(x2) # store 0x4f389f57b5932541 in memory
flh f21, 0(x2) # load 0x4f389f57b5932541 from memory into f21
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f27, 0(x2) # load 0x00008200 from memory into f27
fnmadd.h f11, f26, f21, f27, dyn # perform operation
fnmadd.h f11, f26, f21, f27, rdn # perform operation
fnmadd.h f11, f26, f21, f27, rmm # perform operation
fnmadd.h f11, f26, f21, f27, rne # perform operation
fnmadd.h f11, f26, f21, f27, rtz # perform operation
fnmadd.h f11, f26, f21, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f11, f26, f21, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f11, f26, f21, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f11, f26, f21, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f11, f26, f21, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f11, f26, f21, f27 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x1)
li x25, 0xcc78e9c6c1e8807f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f10, 0(x2) # load 0x00000001 from memory into f10
li x3, 0x638b1a5079f2a492 # load x3 with value 0x638b1a5079f2a492
sw x3, 0(x2) # store 0x638b1a5079f2a492 in memory
flh f18, 0(x2) # load 0x638b1a5079f2a492 from memory into f18
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f26, 0(x2) # load 0x00000001 from memory into f26
fnmadd.h f25, f10, f18, f26, dyn # perform operation
fnmadd.h f25, f10, f18, f26, rdn # perform operation
fnmadd.h f25, f10, f18, f26, rmm # perform operation
fnmadd.h f25, f10, f18, f26, rne # perform operation
fnmadd.h f25, f10, f18, f26, rtz # perform operation
fnmadd.h f25, f10, f18, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f25, f10, f18, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f25, f10, f18, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f25, f10, f18, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f25, f10, f18, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f25, f10, f18, f26 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x8001)
li x24, 0xf63cdca99daf2cb7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f9, 0(x2) # load 0x00000001 from memory into f9
li x3, 0xef167445e84a5d0b # load x3 with value 0xef167445e84a5d0b
sw x3, 0(x2) # store 0xef167445e84a5d0b in memory
flh f3, 0(x2) # load 0xef167445e84a5d0b from memory into f3
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f21, 0(x2) # load 0x00008001 from memory into f21
fnmadd.h f24, f9, f3, f21, dyn # perform operation
fnmadd.h f24, f9, f3, f21, rdn # perform operation
fnmadd.h f24, f9, f3, f21, rmm # perform operation
fnmadd.h f24, f9, f3, f21, rne # perform operation
fnmadd.h f24, f9, f3, f21, rtz # perform operation
fnmadd.h f24, f9, f3, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f24, f9, f3, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f24, f9, f3, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f24, f9, f3, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f24, f9, f3, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f24, f9, f3, f21 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x7c00)
li x31, 0x2beda550eb2ebd7f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f22, 0(x2) # load 0x00000001 from memory into f22
li x3, 0x846ed1e23b0ae15a # load x3 with value 0x846ed1e23b0ae15a
sw x3, 0(x2) # store 0x846ed1e23b0ae15a in memory
flh f13, 0(x2) # load 0x846ed1e23b0ae15a from memory into f13
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f21, 0(x2) # load 0x00007c00 from memory into f21
fnmadd.h f31, f22, f13, f21, dyn # perform operation
fnmadd.h f31, f22, f13, f21, rdn # perform operation
fnmadd.h f31, f22, f13, f21, rmm # perform operation
fnmadd.h f31, f22, f13, f21, rne # perform operation
fnmadd.h f31, f22, f13, f21, rtz # perform operation
fnmadd.h f31, f22, f13, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f31, f22, f13, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f31, f22, f13, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f31, f22, f13, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f31, f22, f13, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f31, f22, f13, f21 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0xfc00)
li x25, 0xb818c1de711eab75 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f7, 0(x2) # load 0x00000001 from memory into f7
li x3, 0x216e947d7652f368 # load x3 with value 0x216e947d7652f368
sw x3, 0(x2) # store 0x216e947d7652f368 in memory
flh f9, 0(x2) # load 0x216e947d7652f368 from memory into f9
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f22, 0(x2) # load 0x0000fc00 from memory into f22
fnmadd.h f25, f7, f9, f22, dyn # perform operation
fnmadd.h f25, f7, f9, f22, rdn # perform operation
fnmadd.h f25, f7, f9, f22, rmm # perform operation
fnmadd.h f25, f7, f9, f22, rne # perform operation
fnmadd.h f25, f7, f9, f22, rtz # perform operation
fnmadd.h f25, f7, f9, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f25, f7, f9, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f25, f7, f9, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f25, f7, f9, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f25, f7, f9, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f25, f7, f9, f22 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x7e00)
li x22, 0x834a615f162dff4e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f13, 0(x2) # load 0x00000001 from memory into f13
li x3, 0xb470b92f27a45d09 # load x3 with value 0xb470b92f27a45d09
sw x3, 0(x2) # store 0xb470b92f27a45d09 in memory
flh f27, 0(x2) # load 0xb470b92f27a45d09 from memory into f27
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f12, 0(x2) # load 0x00007e00 from memory into f12
fnmadd.h f22, f13, f27, f12, dyn # perform operation
fnmadd.h f22, f13, f27, f12, rdn # perform operation
fnmadd.h f22, f13, f27, f12, rmm # perform operation
fnmadd.h f22, f13, f27, f12, rne # perform operation
fnmadd.h f22, f13, f27, f12, rtz # perform operation
fnmadd.h f22, f13, f27, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f22, f13, f27, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f22, f13, f27, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f22, f13, f27, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f22, f13, f27, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f22, f13, f27, f12 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x7fff)
li x11, 0x68c77dee569fd542 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f25, 0(x2) # load 0x00000001 from memory into f25
li x3, 0xff2942ddb698ca87 # load x3 with value 0xff2942ddb698ca87
sw x3, 0(x2) # store 0xff2942ddb698ca87 in memory
flh f16, 0(x2) # load 0xff2942ddb698ca87 from memory into f16
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f3, 0(x2) # load 0x00007fff from memory into f3
fnmadd.h f11, f25, f16, f3, dyn # perform operation
fnmadd.h f11, f25, f16, f3, rdn # perform operation
fnmadd.h f11, f25, f16, f3, rmm # perform operation
fnmadd.h f11, f25, f16, f3, rne # perform operation
fnmadd.h f11, f25, f16, f3, rtz # perform operation
fnmadd.h f11, f25, f16, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f11, f25, f16, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f11, f25, f16, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f11, f25, f16, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f11, f25, f16, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f11, f25, f16, f3 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x7c01)
li x27, 0xd5c23b4cbb57021c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f22, 0(x2) # load 0x00000001 from memory into f22
li x3, 0x6dee5807e288ee98 # load x3 with value 0x6dee5807e288ee98
sw x3, 0(x2) # store 0x6dee5807e288ee98 in memory
flh f10, 0(x2) # load 0x6dee5807e288ee98 from memory into f10
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f17, 0(x2) # load 0x00007c01 from memory into f17
fnmadd.h f27, f22, f10, f17, dyn # perform operation
fnmadd.h f27, f22, f10, f17, rdn # perform operation
fnmadd.h f27, f22, f10, f17, rmm # perform operation
fnmadd.h f27, f22, f10, f17, rne # perform operation
fnmadd.h f27, f22, f10, f17, rtz # perform operation
fnmadd.h f27, f22, f10, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f27, f22, f10, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f27, f22, f10, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f27, f22, f10, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f27, f22, f10, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f27, f22, f10, f17 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x7dff)
li x17, 0x7d751089db498d99 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f24, 0(x2) # load 0x00000001 from memory into f24
li x3, 0x725832af645f7665 # load x3 with value 0x725832af645f7665
sw x3, 0(x2) # store 0x725832af645f7665 in memory
flh f19, 0(x2) # load 0x725832af645f7665 from memory into f19
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f15, 0(x2) # load 0x00007dff from memory into f15
fnmadd.h f17, f24, f19, f15, dyn # perform operation
fnmadd.h f17, f24, f19, f15, rdn # perform operation
fnmadd.h f17, f24, f19, f15, rmm # perform operation
fnmadd.h f17, f24, f19, f15, rne # perform operation
fnmadd.h f17, f24, f19, f15, rtz # perform operation
fnmadd.h f17, f24, f19, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f17, f24, f19, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f17, f24, f19, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f17, f24, f19, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f17, f24, f19, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f17, f24, f19, f15 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x58b4)
li x18, 0x657829e45a2b9525 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f15, 0(x2) # load 0x00000001 from memory into f15
li x3, 0xc9ddb0f2818e5952 # load x3 with value 0xc9ddb0f2818e5952
sw x3, 0(x2) # store 0xc9ddb0f2818e5952 in memory
flh f20, 0(x2) # load 0xc9ddb0f2818e5952 from memory into f20
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f27, 0(x2) # load 0x000058b4 from memory into f27
fnmadd.h f18, f15, f20, f27, dyn # perform operation
fnmadd.h f18, f15, f20, f27, rdn # perform operation
fnmadd.h f18, f15, f20, f27, rmm # perform operation
fnmadd.h f18, f15, f20, f27, rne # perform operation
fnmadd.h f18, f15, f20, f27, rtz # perform operation
fnmadd.h f18, f15, f20, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f18, f15, f20, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f18, f15, f20, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f18, f15, f20, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f18, f15, f20, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f18, f15, f20, f27 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0xc93a)
li x28, 0x41b63d606187ab48 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f21, 0(x2) # load 0x00000001 from memory into f21
li x3, 0x1d78c87e15733b10 # load x3 with value 0x1d78c87e15733b10
sw x3, 0(x2) # store 0x1d78c87e15733b10 in memory
flh f29, 0(x2) # load 0x1d78c87e15733b10 from memory into f29
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f8, 0(x2) # load 0x0000c93a from memory into f8
fnmadd.h f28, f21, f29, f8, dyn # perform operation
fnmadd.h f28, f21, f29, f8, rdn # perform operation
fnmadd.h f28, f21, f29, f8, rmm # perform operation
fnmadd.h f28, f21, f29, f8, rne # perform operation
fnmadd.h f28, f21, f29, f8, rtz # perform operation
fnmadd.h f28, f21, f29, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f28, f21, f29, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f28, f21, f29, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f28, f21, f29, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f28, f21, f29, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f28, f21, f29, f8 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8001 fs3 = 0x0)
li x28, 0xd3ef214f2948332c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f22, 0(x2) # load 0x00008001 from memory into f22
li x3, 0x140bd5affef1c0d7 # load x3 with value 0x140bd5affef1c0d7
sw x3, 0(x2) # store 0x140bd5affef1c0d7 in memory
flh f29, 0(x2) # load 0x140bd5affef1c0d7 from memory into f29
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f18, 0(x2) # load 0x00000000 from memory into f18
fnmadd.h f28, f22, f29, f18, dyn # perform operation
fnmadd.h f28, f22, f29, f18, rdn # perform operation
fnmadd.h f28, f22, f29, f18, rmm # perform operation
fnmadd.h f28, f22, f29, f18, rne # perform operation
fnmadd.h f28, f22, f29, f18, rtz # perform operation
fnmadd.h f28, f22, f29, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f28, f22, f29, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f28, f22, f29, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f28, f22, f29, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f28, f22, f29, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f28, f22, f29, f18 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8001 fs3 = 0x8000)
li x20, 0x668bd5183333c83c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f17, 0(x2) # load 0x00008001 from memory into f17
li x3, 0x4d0c3ace812a2c3a # load x3 with value 0x4d0c3ace812a2c3a
sw x3, 0(x2) # store 0x4d0c3ace812a2c3a in memory
flh f1, 0(x2) # load 0x4d0c3ace812a2c3a from memory into f1
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f31, 0(x2) # load 0x00008000 from memory into f31
fnmadd.h f20, f17, f1, f31, dyn # perform operation
fnmadd.h f20, f17, f1, f31, rdn # perform operation
fnmadd.h f20, f17, f1, f31, rmm # perform operation
fnmadd.h f20, f17, f1, f31, rne # perform operation
fnmadd.h f20, f17, f1, f31, rtz # perform operation
fnmadd.h f20, f17, f1, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f20, f17, f1, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f20, f17, f1, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f20, f17, f1, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f20, f17, f1, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f20, f17, f1, f31 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8001 fs3 = 0x3c00)
li x18, 0x959c406d25aac70e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f14, 0(x2) # load 0x00008001 from memory into f14
li x3, 0xab81bae205127a92 # load x3 with value 0xab81bae205127a92
sw x3, 0(x2) # store 0xab81bae205127a92 in memory
flh f3, 0(x2) # load 0xab81bae205127a92 from memory into f3
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f10, 0(x2) # load 0x00003c00 from memory into f10
fnmadd.h f18, f14, f3, f10, dyn # perform operation
fnmadd.h f18, f14, f3, f10, rdn # perform operation
fnmadd.h f18, f14, f3, f10, rmm # perform operation
fnmadd.h f18, f14, f3, f10, rne # perform operation
fnmadd.h f18, f14, f3, f10, rtz # perform operation
fnmadd.h f18, f14, f3, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f18, f14, f3, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f18, f14, f3, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f18, f14, f3, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f18, f14, f3, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f18, f14, f3, f10 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8001 fs3 = 0xbc00)
li x23, 0x56bc586a3fd9c9f0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f7, 0(x2) # load 0x00008001 from memory into f7
li x3, 0x821ec00e2b910f90 # load x3 with value 0x821ec00e2b910f90
sw x3, 0(x2) # store 0x821ec00e2b910f90 in memory
flh f2, 0(x2) # load 0x821ec00e2b910f90 from memory into f2
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f31, 0(x2) # load 0x0000bc00 from memory into f31
fnmadd.h f23, f7, f2, f31, dyn # perform operation
fnmadd.h f23, f7, f2, f31, rdn # perform operation
fnmadd.h f23, f7, f2, f31, rmm # perform operation
fnmadd.h f23, f7, f2, f31, rne # perform operation
fnmadd.h f23, f7, f2, f31, rtz # perform operation
fnmadd.h f23, f7, f2, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f23, f7, f2, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f23, f7, f2, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f23, f7, f2, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f23, f7, f2, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f23, f7, f2, f31 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8001 fs3 = 0x3e00)
li x3, 0xb885126c6d13ffbc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f17, 0(x2) # load 0x00008001 from memory into f17
li x3, 0x63bca256fd617d58 # load x3 with value 0x63bca256fd617d58
sw x3, 0(x2) # store 0x63bca256fd617d58 in memory
flh f30, 0(x2) # load 0x63bca256fd617d58 from memory into f30
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f29, 0(x2) # load 0x00003e00 from memory into f29
fnmadd.h f3, f17, f30, f29, dyn # perform operation
fnmadd.h f3, f17, f30, f29, rdn # perform operation
fnmadd.h f3, f17, f30, f29, rmm # perform operation
fnmadd.h f3, f17, f30, f29, rne # perform operation
fnmadd.h f3, f17, f30, f29, rtz # perform operation
fnmadd.h f3, f17, f30, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f3, f17, f30, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f3, f17, f30, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f3, f17, f30, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f3, f17, f30, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f3, f17, f30, f29 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8001 fs3 = 0xbe00)
li x6, 0x4a65ef24b17dd248 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f5, 0(x2) # load 0x00008001 from memory into f5
li x3, 0x29b3b028880bcbf4 # load x3 with value 0x29b3b028880bcbf4
sw x3, 0(x2) # store 0x29b3b028880bcbf4 in memory
flh f2, 0(x2) # load 0x29b3b028880bcbf4 from memory into f2
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f21, 0(x2) # load 0x0000be00 from memory into f21
fnmadd.h f6, f5, f2, f21, dyn # perform operation
fnmadd.h f6, f5, f2, f21, rdn # perform operation
fnmadd.h f6, f5, f2, f21, rmm # perform operation
fnmadd.h f6, f5, f2, f21, rne # perform operation
fnmadd.h f6, f5, f2, f21, rtz # perform operation
fnmadd.h f6, f5, f2, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f6, f5, f2, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f6, f5, f2, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f6, f5, f2, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f6, f5, f2, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f6, f5, f2, f21 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8001 fs3 = 0x4000)
li x21, 0xc1a30a759730e5ea # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f9, 0(x2) # load 0x00008001 from memory into f9
li x3, 0x78547afbd53ba5da # load x3 with value 0x78547afbd53ba5da
sw x3, 0(x2) # store 0x78547afbd53ba5da in memory
flh f10, 0(x2) # load 0x78547afbd53ba5da from memory into f10
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f29, 0(x2) # load 0x00004000 from memory into f29
fnmadd.h f21, f9, f10, f29, dyn # perform operation
fnmadd.h f21, f9, f10, f29, rdn # perform operation
fnmadd.h f21, f9, f10, f29, rmm # perform operation
fnmadd.h f21, f9, f10, f29, rne # perform operation
fnmadd.h f21, f9, f10, f29, rtz # perform operation
fnmadd.h f21, f9, f10, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f21, f9, f10, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f21, f9, f10, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f21, f9, f10, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f21, f9, f10, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f21, f9, f10, f29 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8001 fs3 = 0xc000)
li x3, 0xfadadab6d3c7eb7b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f17, 0(x2) # load 0x00008001 from memory into f17
li x3, 0x897765cf9706c704 # load x3 with value 0x897765cf9706c704
sw x3, 0(x2) # store 0x897765cf9706c704 in memory
flh f13, 0(x2) # load 0x897765cf9706c704 from memory into f13
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f14, 0(x2) # load 0x0000c000 from memory into f14
fnmadd.h f3, f17, f13, f14, dyn # perform operation
fnmadd.h f3, f17, f13, f14, rdn # perform operation
fnmadd.h f3, f17, f13, f14, rmm # perform operation
fnmadd.h f3, f17, f13, f14, rne # perform operation
fnmadd.h f3, f17, f13, f14, rtz # perform operation
fnmadd.h f3, f17, f13, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f3, f17, f13, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f3, f17, f13, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f3, f17, f13, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f3, f17, f13, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f3, f17, f13, f14 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8001 fs3 = 0x400)
li x14, 0x80b5db600df8b443 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f7, 0(x2) # load 0x00008001 from memory into f7
li x3, 0x21ab2a7d47f12632 # load x3 with value 0x21ab2a7d47f12632
sw x3, 0(x2) # store 0x21ab2a7d47f12632 in memory
flh f21, 0(x2) # load 0x21ab2a7d47f12632 from memory into f21
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f17, 0(x2) # load 0x00000400 from memory into f17
fnmadd.h f14, f7, f21, f17, dyn # perform operation
fnmadd.h f14, f7, f21, f17, rdn # perform operation
fnmadd.h f14, f7, f21, f17, rmm # perform operation
fnmadd.h f14, f7, f21, f17, rne # perform operation
fnmadd.h f14, f7, f21, f17, rtz # perform operation
fnmadd.h f14, f7, f21, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f14, f7, f21, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f14, f7, f21, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f14, f7, f21, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f14, f7, f21, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f14, f7, f21, f17 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8001 fs3 = 0x8400)
li x17, 0xfb41a9590164f104 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f7, 0(x2) # load 0x00008001 from memory into f7
li x3, 0x8bf3b849e8afef31 # load x3 with value 0x8bf3b849e8afef31
sw x3, 0(x2) # store 0x8bf3b849e8afef31 in memory
flh f22, 0(x2) # load 0x8bf3b849e8afef31 from memory into f22
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f31, 0(x2) # load 0x00008400 from memory into f31
fnmadd.h f17, f7, f22, f31, dyn # perform operation
fnmadd.h f17, f7, f22, f31, rdn # perform operation
fnmadd.h f17, f7, f22, f31, rmm # perform operation
fnmadd.h f17, f7, f22, f31, rne # perform operation
fnmadd.h f17, f7, f22, f31, rtz # perform operation
fnmadd.h f17, f7, f22, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f17, f7, f22, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f17, f7, f22, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f17, f7, f22, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f17, f7, f22, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f17, f7, f22, f31 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8001 fs3 = 0x7bff)
li x2, 0x6a63681acc7db623 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f6, 0(x2) # load 0x00008001 from memory into f6
li x3, 0x20100cf091a35e15 # load x3 with value 0x20100cf091a35e15
sw x3, 0(x2) # store 0x20100cf091a35e15 in memory
flh f17, 0(x2) # load 0x20100cf091a35e15 from memory into f17
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f27, 0(x2) # load 0x00007bff from memory into f27
fnmadd.h f2, f6, f17, f27, dyn # perform operation
fnmadd.h f2, f6, f17, f27, rdn # perform operation
fnmadd.h f2, f6, f17, f27, rmm # perform operation
fnmadd.h f2, f6, f17, f27, rne # perform operation
fnmadd.h f2, f6, f17, f27, rtz # perform operation
fnmadd.h f2, f6, f17, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f2, f6, f17, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f2, f6, f17, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f2, f6, f17, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f2, f6, f17, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f2, f6, f17, f27 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8001 fs3 = 0xfbff)
li x23, 0xcbe52bab0f6949e1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f11, 0(x2) # load 0x00008001 from memory into f11
li x3, 0x1924fdac80b7a820 # load x3 with value 0x1924fdac80b7a820
sw x3, 0(x2) # store 0x1924fdac80b7a820 in memory
flh f15, 0(x2) # load 0x1924fdac80b7a820 from memory into f15
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f1, 0(x2) # load 0x0000fbff from memory into f1
fnmadd.h f23, f11, f15, f1, dyn # perform operation
fnmadd.h f23, f11, f15, f1, rdn # perform operation
fnmadd.h f23, f11, f15, f1, rmm # perform operation
fnmadd.h f23, f11, f15, f1, rne # perform operation
fnmadd.h f23, f11, f15, f1, rtz # perform operation
fnmadd.h f23, f11, f15, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f23, f11, f15, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f23, f11, f15, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f23, f11, f15, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f23, f11, f15, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f23, f11, f15, f1 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8001 fs3 = 0x3ff)
li x24, 0x5a906dc2559063e7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f21, 0(x2) # load 0x00008001 from memory into f21
li x3, 0x47c1a0e90333ebc4 # load x3 with value 0x47c1a0e90333ebc4
sw x3, 0(x2) # store 0x47c1a0e90333ebc4 in memory
flh f14, 0(x2) # load 0x47c1a0e90333ebc4 from memory into f14
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f13, 0(x2) # load 0x000003ff from memory into f13
fnmadd.h f24, f21, f14, f13, dyn # perform operation
fnmadd.h f24, f21, f14, f13, rdn # perform operation
fnmadd.h f24, f21, f14, f13, rmm # perform operation
fnmadd.h f24, f21, f14, f13, rne # perform operation
fnmadd.h f24, f21, f14, f13, rtz # perform operation
fnmadd.h f24, f21, f14, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f24, f21, f14, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f24, f21, f14, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f24, f21, f14, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f24, f21, f14, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f24, f21, f14, f13 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8001 fs3 = 0x83ff)
li x9, 0x7601a69d6e62aaa1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f7, 0(x2) # load 0x00008001 from memory into f7
li x3, 0xcf2a35f84701fb71 # load x3 with value 0xcf2a35f84701fb71
sw x3, 0(x2) # store 0xcf2a35f84701fb71 in memory
flh f5, 0(x2) # load 0xcf2a35f84701fb71 from memory into f5
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f6, 0(x2) # load 0x000083ff from memory into f6
fnmadd.h f9, f7, f5, f6, dyn # perform operation
fnmadd.h f9, f7, f5, f6, rdn # perform operation
fnmadd.h f9, f7, f5, f6, rmm # perform operation
fnmadd.h f9, f7, f5, f6, rne # perform operation
fnmadd.h f9, f7, f5, f6, rtz # perform operation
fnmadd.h f9, f7, f5, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f9, f7, f5, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f9, f7, f5, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f9, f7, f5, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f9, f7, f5, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f9, f7, f5, f6 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8001 fs3 = 0x200)
li x16, 0x2c1cfa55d103b6e5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f5, 0(x2) # load 0x00008001 from memory into f5
li x3, 0x8eaa1477ea8cf7ad # load x3 with value 0x8eaa1477ea8cf7ad
sw x3, 0(x2) # store 0x8eaa1477ea8cf7ad in memory
flh f6, 0(x2) # load 0x8eaa1477ea8cf7ad from memory into f6
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f31, 0(x2) # load 0x00000200 from memory into f31
fnmadd.h f16, f5, f6, f31, dyn # perform operation
fnmadd.h f16, f5, f6, f31, rdn # perform operation
fnmadd.h f16, f5, f6, f31, rmm # perform operation
fnmadd.h f16, f5, f6, f31, rne # perform operation
fnmadd.h f16, f5, f6, f31, rtz # perform operation
fnmadd.h f16, f5, f6, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f16, f5, f6, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f16, f5, f6, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f16, f5, f6, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f16, f5, f6, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f16, f5, f6, f31 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8001 fs3 = 0x8200)
li x13, 0xc6967bb92f5387cd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f22, 0(x2) # load 0x00008001 from memory into f22
li x3, 0x3ee26b95eff17311 # load x3 with value 0x3ee26b95eff17311
sw x3, 0(x2) # store 0x3ee26b95eff17311 in memory
flh f12, 0(x2) # load 0x3ee26b95eff17311 from memory into f12
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f24, 0(x2) # load 0x00008200 from memory into f24
fnmadd.h f13, f22, f12, f24, dyn # perform operation
fnmadd.h f13, f22, f12, f24, rdn # perform operation
fnmadd.h f13, f22, f12, f24, rmm # perform operation
fnmadd.h f13, f22, f12, f24, rne # perform operation
fnmadd.h f13, f22, f12, f24, rtz # perform operation
fnmadd.h f13, f22, f12, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f13, f22, f12, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f13, f22, f12, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f13, f22, f12, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f13, f22, f12, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f13, f22, f12, f24 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8001 fs3 = 0x1)
li x18, 0x2f98fd0960f4c922 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f21, 0(x2) # load 0x00008001 from memory into f21
li x3, 0xaee31e865160fa29 # load x3 with value 0xaee31e865160fa29
sw x3, 0(x2) # store 0xaee31e865160fa29 in memory
flh f20, 0(x2) # load 0xaee31e865160fa29 from memory into f20
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f22, 0(x2) # load 0x00000001 from memory into f22
fnmadd.h f18, f21, f20, f22, dyn # perform operation
fnmadd.h f18, f21, f20, f22, rdn # perform operation
fnmadd.h f18, f21, f20, f22, rmm # perform operation
fnmadd.h f18, f21, f20, f22, rne # perform operation
fnmadd.h f18, f21, f20, f22, rtz # perform operation
fnmadd.h f18, f21, f20, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f18, f21, f20, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f18, f21, f20, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f18, f21, f20, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f18, f21, f20, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f18, f21, f20, f22 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8001 fs3 = 0x8001)
li x7, 0x904233d079e3de10 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f9, 0(x2) # load 0x00008001 from memory into f9
li x3, 0xcb933401dcf7e0a0 # load x3 with value 0xcb933401dcf7e0a0
sw x3, 0(x2) # store 0xcb933401dcf7e0a0 in memory
flh f21, 0(x2) # load 0xcb933401dcf7e0a0 from memory into f21
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f1, 0(x2) # load 0x00008001 from memory into f1
fnmadd.h f7, f9, f21, f1, dyn # perform operation
fnmadd.h f7, f9, f21, f1, rdn # perform operation
fnmadd.h f7, f9, f21, f1, rmm # perform operation
fnmadd.h f7, f9, f21, f1, rne # perform operation
fnmadd.h f7, f9, f21, f1, rtz # perform operation
fnmadd.h f7, f9, f21, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f7, f9, f21, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f7, f9, f21, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f7, f9, f21, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f7, f9, f21, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f7, f9, f21, f1 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8001 fs3 = 0x7c00)
li x15, 0x079082da84c2a7cb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f14, 0(x2) # load 0x00008001 from memory into f14
li x3, 0x83f47c9ec0a98a77 # load x3 with value 0x83f47c9ec0a98a77
sw x3, 0(x2) # store 0x83f47c9ec0a98a77 in memory
flh f29, 0(x2) # load 0x83f47c9ec0a98a77 from memory into f29
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f23, 0(x2) # load 0x00007c00 from memory into f23
fnmadd.h f15, f14, f29, f23, dyn # perform operation
fnmadd.h f15, f14, f29, f23, rdn # perform operation
fnmadd.h f15, f14, f29, f23, rmm # perform operation
fnmadd.h f15, f14, f29, f23, rne # perform operation
fnmadd.h f15, f14, f29, f23, rtz # perform operation
fnmadd.h f15, f14, f29, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f15, f14, f29, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f15, f14, f29, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f15, f14, f29, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f15, f14, f29, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f15, f14, f29, f23 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8001 fs3 = 0xfc00)
li x17, 0x1a9aa91e91d8541c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f2, 0(x2) # load 0x00008001 from memory into f2
li x3, 0xcb2b389d0bea37bc # load x3 with value 0xcb2b389d0bea37bc
sw x3, 0(x2) # store 0xcb2b389d0bea37bc in memory
flh f10, 0(x2) # load 0xcb2b389d0bea37bc from memory into f10
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f29, 0(x2) # load 0x0000fc00 from memory into f29
fnmadd.h f17, f2, f10, f29, dyn # perform operation
fnmadd.h f17, f2, f10, f29, rdn # perform operation
fnmadd.h f17, f2, f10, f29, rmm # perform operation
fnmadd.h f17, f2, f10, f29, rne # perform operation
fnmadd.h f17, f2, f10, f29, rtz # perform operation
fnmadd.h f17, f2, f10, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f17, f2, f10, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f17, f2, f10, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f17, f2, f10, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f17, f2, f10, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f17, f2, f10, f29 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8001 fs3 = 0x7e00)
li x16, 0xe6b76db142f1240e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f9, 0(x2) # load 0x00008001 from memory into f9
li x3, 0x5ef9fa0bb11efdc0 # load x3 with value 0x5ef9fa0bb11efdc0
sw x3, 0(x2) # store 0x5ef9fa0bb11efdc0 in memory
flh f30, 0(x2) # load 0x5ef9fa0bb11efdc0 from memory into f30
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f5, 0(x2) # load 0x00007e00 from memory into f5
fnmadd.h f16, f9, f30, f5, dyn # perform operation
fnmadd.h f16, f9, f30, f5, rdn # perform operation
fnmadd.h f16, f9, f30, f5, rmm # perform operation
fnmadd.h f16, f9, f30, f5, rne # perform operation
fnmadd.h f16, f9, f30, f5, rtz # perform operation
fnmadd.h f16, f9, f30, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f16, f9, f30, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f16, f9, f30, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f16, f9, f30, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f16, f9, f30, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f16, f9, f30, f5 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8001 fs3 = 0x7fff)
li x17, 0x9223e94931120d08 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f21, 0(x2) # load 0x00008001 from memory into f21
li x3, 0x239290d7492800c # load x3 with value 0x239290d7492800c
sw x3, 0(x2) # store 0x239290d7492800c in memory
flh f16, 0(x2) # load 0x239290d7492800c from memory into f16
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f12, 0(x2) # load 0x00007fff from memory into f12
fnmadd.h f17, f21, f16, f12, dyn # perform operation
fnmadd.h f17, f21, f16, f12, rdn # perform operation
fnmadd.h f17, f21, f16, f12, rmm # perform operation
fnmadd.h f17, f21, f16, f12, rne # perform operation
fnmadd.h f17, f21, f16, f12, rtz # perform operation
fnmadd.h f17, f21, f16, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f17, f21, f16, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f17, f21, f16, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f17, f21, f16, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f17, f21, f16, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f17, f21, f16, f12 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8001 fs3 = 0x7c01)
li x28, 0x2ca0df4c2a9a7e9b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f26, 0(x2) # load 0x00008001 from memory into f26
li x3, 0x92cd497a3231dc10 # load x3 with value 0x92cd497a3231dc10
sw x3, 0(x2) # store 0x92cd497a3231dc10 in memory
flh f20, 0(x2) # load 0x92cd497a3231dc10 from memory into f20
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f13, 0(x2) # load 0x00007c01 from memory into f13
fnmadd.h f28, f26, f20, f13, dyn # perform operation
fnmadd.h f28, f26, f20, f13, rdn # perform operation
fnmadd.h f28, f26, f20, f13, rmm # perform operation
fnmadd.h f28, f26, f20, f13, rne # perform operation
fnmadd.h f28, f26, f20, f13, rtz # perform operation
fnmadd.h f28, f26, f20, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f28, f26, f20, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f28, f26, f20, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f28, f26, f20, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f28, f26, f20, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f28, f26, f20, f13 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8001 fs3 = 0x7dff)
li x27, 0x371cdef2557b6ead # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f5, 0(x2) # load 0x00008001 from memory into f5
li x3, 0x7fbfdf9843e2d051 # load x3 with value 0x7fbfdf9843e2d051
sw x3, 0(x2) # store 0x7fbfdf9843e2d051 in memory
flh f14, 0(x2) # load 0x7fbfdf9843e2d051 from memory into f14
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f18, 0(x2) # load 0x00007dff from memory into f18
fnmadd.h f27, f5, f14, f18, dyn # perform operation
fnmadd.h f27, f5, f14, f18, rdn # perform operation
fnmadd.h f27, f5, f14, f18, rmm # perform operation
fnmadd.h f27, f5, f14, f18, rne # perform operation
fnmadd.h f27, f5, f14, f18, rtz # perform operation
fnmadd.h f27, f5, f14, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f27, f5, f14, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f27, f5, f14, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f27, f5, f14, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f27, f5, f14, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f27, f5, f14, f18 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8001 fs3 = 0x58b4)
li x21, 0x992726e3ec09addc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f23, 0(x2) # load 0x00008001 from memory into f23
li x3, 0x4b4ff42ad46cd319 # load x3 with value 0x4b4ff42ad46cd319
sw x3, 0(x2) # store 0x4b4ff42ad46cd319 in memory
flh f3, 0(x2) # load 0x4b4ff42ad46cd319 from memory into f3
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f14, 0(x2) # load 0x000058b4 from memory into f14
fnmadd.h f21, f23, f3, f14, dyn # perform operation
fnmadd.h f21, f23, f3, f14, rdn # perform operation
fnmadd.h f21, f23, f3, f14, rmm # perform operation
fnmadd.h f21, f23, f3, f14, rne # perform operation
fnmadd.h f21, f23, f3, f14, rtz # perform operation
fnmadd.h f21, f23, f3, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f21, f23, f3, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f21, f23, f3, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f21, f23, f3, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f21, f23, f3, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f21, f23, f3, f14 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x8001 fs3 = 0xc93a)
li x12, 0x177a09380d35f234 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f14, 0(x2) # load 0x00008001 from memory into f14
li x3, 0xf94eed693e4934fe # load x3 with value 0xf94eed693e4934fe
sw x3, 0(x2) # store 0xf94eed693e4934fe in memory
flh f31, 0(x2) # load 0xf94eed693e4934fe from memory into f31
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f8, 0(x2) # load 0x0000c93a from memory into f8
fnmadd.h f12, f14, f31, f8, dyn # perform operation
fnmadd.h f12, f14, f31, f8, rdn # perform operation
fnmadd.h f12, f14, f31, f8, rmm # perform operation
fnmadd.h f12, f14, f31, f8, rne # perform operation
fnmadd.h f12, f14, f31, f8, rtz # perform operation
fnmadd.h f12, f14, f31, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f12, f14, f31, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f12, f14, f31, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f12, f14, f31, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f12, f14, f31, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f12, f14, f31, f8 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7c00 fs3 = 0x0)
li x7, 0x87231b2c2cc87387 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f16, 0(x2) # load 0x00007c00 from memory into f16
li x3, 0xb0a15ac6540707b3 # load x3 with value 0xb0a15ac6540707b3
sw x3, 0(x2) # store 0xb0a15ac6540707b3 in memory
flh f8, 0(x2) # load 0xb0a15ac6540707b3 from memory into f8
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f3, 0(x2) # load 0x00000000 from memory into f3
fnmadd.h f7, f16, f8, f3, dyn # perform operation
fnmadd.h f7, f16, f8, f3, rdn # perform operation
fnmadd.h f7, f16, f8, f3, rmm # perform operation
fnmadd.h f7, f16, f8, f3, rne # perform operation
fnmadd.h f7, f16, f8, f3, rtz # perform operation
fnmadd.h f7, f16, f8, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f7, f16, f8, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f7, f16, f8, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f7, f16, f8, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f7, f16, f8, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f7, f16, f8, f3 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7c00 fs3 = 0x8000)
li x1, 0xcbea5662c8a632f9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f6, 0(x2) # load 0x00007c00 from memory into f6
li x3, 0xf342b204ad64699b # load x3 with value 0xf342b204ad64699b
sw x3, 0(x2) # store 0xf342b204ad64699b in memory
flh f30, 0(x2) # load 0xf342b204ad64699b from memory into f30
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f25, 0(x2) # load 0x00008000 from memory into f25
fnmadd.h f1, f6, f30, f25, dyn # perform operation
fnmadd.h f1, f6, f30, f25, rdn # perform operation
fnmadd.h f1, f6, f30, f25, rmm # perform operation
fnmadd.h f1, f6, f30, f25, rne # perform operation
fnmadd.h f1, f6, f30, f25, rtz # perform operation
fnmadd.h f1, f6, f30, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f1, f6, f30, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f1, f6, f30, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f1, f6, f30, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f1, f6, f30, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f1, f6, f30, f25 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7c00 fs3 = 0x3c00)
li x2, 0xf49bfe962acc17e5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f30, 0(x2) # load 0x00007c00 from memory into f30
li x3, 0x61c332fa2de62f48 # load x3 with value 0x61c332fa2de62f48
sw x3, 0(x2) # store 0x61c332fa2de62f48 in memory
flh f9, 0(x2) # load 0x61c332fa2de62f48 from memory into f9
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f1, 0(x2) # load 0x00003c00 from memory into f1
fnmadd.h f2, f30, f9, f1, dyn # perform operation
fnmadd.h f2, f30, f9, f1, rdn # perform operation
fnmadd.h f2, f30, f9, f1, rmm # perform operation
fnmadd.h f2, f30, f9, f1, rne # perform operation
fnmadd.h f2, f30, f9, f1, rtz # perform operation
fnmadd.h f2, f30, f9, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f2, f30, f9, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f2, f30, f9, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f2, f30, f9, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f2, f30, f9, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f2, f30, f9, f1 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7c00 fs3 = 0xbc00)
li x23, 0x04fe629b48c8aa71 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f8, 0(x2) # load 0x00007c00 from memory into f8
li x3, 0x39e8266bd26fb046 # load x3 with value 0x39e8266bd26fb046
sw x3, 0(x2) # store 0x39e8266bd26fb046 in memory
flh f29, 0(x2) # load 0x39e8266bd26fb046 from memory into f29
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f27, 0(x2) # load 0x0000bc00 from memory into f27
fnmadd.h f23, f8, f29, f27, dyn # perform operation
fnmadd.h f23, f8, f29, f27, rdn # perform operation
fnmadd.h f23, f8, f29, f27, rmm # perform operation
fnmadd.h f23, f8, f29, f27, rne # perform operation
fnmadd.h f23, f8, f29, f27, rtz # perform operation
fnmadd.h f23, f8, f29, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f23, f8, f29, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f23, f8, f29, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f23, f8, f29, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f23, f8, f29, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f23, f8, f29, f27 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7c00 fs3 = 0x3e00)
li x13, 0x9db005303ede017b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f22, 0(x2) # load 0x00007c00 from memory into f22
li x3, 0xe56788fdd45c997e # load x3 with value 0xe56788fdd45c997e
sw x3, 0(x2) # store 0xe56788fdd45c997e in memory
flh f5, 0(x2) # load 0xe56788fdd45c997e from memory into f5
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f7, 0(x2) # load 0x00003e00 from memory into f7
fnmadd.h f13, f22, f5, f7, dyn # perform operation
fnmadd.h f13, f22, f5, f7, rdn # perform operation
fnmadd.h f13, f22, f5, f7, rmm # perform operation
fnmadd.h f13, f22, f5, f7, rne # perform operation
fnmadd.h f13, f22, f5, f7, rtz # perform operation
fnmadd.h f13, f22, f5, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f13, f22, f5, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f13, f22, f5, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f13, f22, f5, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f13, f22, f5, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f13, f22, f5, f7 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7c00 fs3 = 0xbe00)
li x14, 0x0c0cac772cfa6333 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f3, 0(x2) # load 0x00007c00 from memory into f3
li x3, 0xa0a433ddc0eb0ca2 # load x3 with value 0xa0a433ddc0eb0ca2
sw x3, 0(x2) # store 0xa0a433ddc0eb0ca2 in memory
flh f9, 0(x2) # load 0xa0a433ddc0eb0ca2 from memory into f9
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f8, 0(x2) # load 0x0000be00 from memory into f8
fnmadd.h f14, f3, f9, f8, dyn # perform operation
fnmadd.h f14, f3, f9, f8, rdn # perform operation
fnmadd.h f14, f3, f9, f8, rmm # perform operation
fnmadd.h f14, f3, f9, f8, rne # perform operation
fnmadd.h f14, f3, f9, f8, rtz # perform operation
fnmadd.h f14, f3, f9, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f14, f3, f9, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f14, f3, f9, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f14, f3, f9, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f14, f3, f9, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f14, f3, f9, f8 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7c00 fs3 = 0x4000)
li x12, 0x75f8fcebc352f8a3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f8, 0(x2) # load 0x00007c00 from memory into f8
li x3, 0x2946bcafe01fc944 # load x3 with value 0x2946bcafe01fc944
sw x3, 0(x2) # store 0x2946bcafe01fc944 in memory
flh f29, 0(x2) # load 0x2946bcafe01fc944 from memory into f29
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f3, 0(x2) # load 0x00004000 from memory into f3
fnmadd.h f12, f8, f29, f3, dyn # perform operation
fnmadd.h f12, f8, f29, f3, rdn # perform operation
fnmadd.h f12, f8, f29, f3, rmm # perform operation
fnmadd.h f12, f8, f29, f3, rne # perform operation
fnmadd.h f12, f8, f29, f3, rtz # perform operation
fnmadd.h f12, f8, f29, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f12, f8, f29, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f12, f8, f29, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f12, f8, f29, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f12, f8, f29, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f12, f8, f29, f3 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7c00 fs3 = 0xc000)
li x25, 0x3e9c723442abf7df # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f11, 0(x2) # load 0x00007c00 from memory into f11
li x3, 0x4532613a560c3dbc # load x3 with value 0x4532613a560c3dbc
sw x3, 0(x2) # store 0x4532613a560c3dbc in memory
flh f6, 0(x2) # load 0x4532613a560c3dbc from memory into f6
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f9, 0(x2) # load 0x0000c000 from memory into f9
fnmadd.h f25, f11, f6, f9, dyn # perform operation
fnmadd.h f25, f11, f6, f9, rdn # perform operation
fnmadd.h f25, f11, f6, f9, rmm # perform operation
fnmadd.h f25, f11, f6, f9, rne # perform operation
fnmadd.h f25, f11, f6, f9, rtz # perform operation
fnmadd.h f25, f11, f6, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f25, f11, f6, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f25, f11, f6, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f25, f11, f6, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f25, f11, f6, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f25, f11, f6, f9 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7c00 fs3 = 0x400)
li x29, 0xd5fe99efcd578fe8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f10, 0(x2) # load 0x00007c00 from memory into f10
li x3, 0x2ffc33cb60c4787a # load x3 with value 0x2ffc33cb60c4787a
sw x3, 0(x2) # store 0x2ffc33cb60c4787a in memory
flh f1, 0(x2) # load 0x2ffc33cb60c4787a from memory into f1
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f12, 0(x2) # load 0x00000400 from memory into f12
fnmadd.h f29, f10, f1, f12, dyn # perform operation
fnmadd.h f29, f10, f1, f12, rdn # perform operation
fnmadd.h f29, f10, f1, f12, rmm # perform operation
fnmadd.h f29, f10, f1, f12, rne # perform operation
fnmadd.h f29, f10, f1, f12, rtz # perform operation
fnmadd.h f29, f10, f1, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f29, f10, f1, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f29, f10, f1, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f29, f10, f1, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f29, f10, f1, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f29, f10, f1, f12 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7c00 fs3 = 0x8400)
li x23, 0x6b525ae33cb90372 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f22, 0(x2) # load 0x00007c00 from memory into f22
li x3, 0x9cde138a0d94a814 # load x3 with value 0x9cde138a0d94a814
sw x3, 0(x2) # store 0x9cde138a0d94a814 in memory
flh f29, 0(x2) # load 0x9cde138a0d94a814 from memory into f29
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f24, 0(x2) # load 0x00008400 from memory into f24
fnmadd.h f23, f22, f29, f24, dyn # perform operation
fnmadd.h f23, f22, f29, f24, rdn # perform operation
fnmadd.h f23, f22, f29, f24, rmm # perform operation
fnmadd.h f23, f22, f29, f24, rne # perform operation
fnmadd.h f23, f22, f29, f24, rtz # perform operation
fnmadd.h f23, f22, f29, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f23, f22, f29, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f23, f22, f29, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f23, f22, f29, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f23, f22, f29, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f23, f22, f29, f24 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7c00 fs3 = 0x7bff)
li x1, 0x3220291fe8bc01f6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f4, 0(x2) # load 0x00007c00 from memory into f4
li x3, 0x5f7421fef32f6112 # load x3 with value 0x5f7421fef32f6112
sw x3, 0(x2) # store 0x5f7421fef32f6112 in memory
flh f30, 0(x2) # load 0x5f7421fef32f6112 from memory into f30
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f20, 0(x2) # load 0x00007bff from memory into f20
fnmadd.h f1, f4, f30, f20, dyn # perform operation
fnmadd.h f1, f4, f30, f20, rdn # perform operation
fnmadd.h f1, f4, f30, f20, rmm # perform operation
fnmadd.h f1, f4, f30, f20, rne # perform operation
fnmadd.h f1, f4, f30, f20, rtz # perform operation
fnmadd.h f1, f4, f30, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f1, f4, f30, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f1, f4, f30, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f1, f4, f30, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f1, f4, f30, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f1, f4, f30, f20 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7c00 fs3 = 0xfbff)
li x26, 0xd663e3da86e06624 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f19, 0(x2) # load 0x00007c00 from memory into f19
li x3, 0xbda312490c01f980 # load x3 with value 0xbda312490c01f980
sw x3, 0(x2) # store 0xbda312490c01f980 in memory
flh f27, 0(x2) # load 0xbda312490c01f980 from memory into f27
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f16, 0(x2) # load 0x0000fbff from memory into f16
fnmadd.h f26, f19, f27, f16, dyn # perform operation
fnmadd.h f26, f19, f27, f16, rdn # perform operation
fnmadd.h f26, f19, f27, f16, rmm # perform operation
fnmadd.h f26, f19, f27, f16, rne # perform operation
fnmadd.h f26, f19, f27, f16, rtz # perform operation
fnmadd.h f26, f19, f27, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f26, f19, f27, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f26, f19, f27, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f26, f19, f27, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f26, f19, f27, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f26, f19, f27, f16 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7c00 fs3 = 0x3ff)
li x20, 0xcdfc3eac63a30559 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f9, 0(x2) # load 0x00007c00 from memory into f9
li x3, 0x23c4618a453a6064 # load x3 with value 0x23c4618a453a6064
sw x3, 0(x2) # store 0x23c4618a453a6064 in memory
flh f1, 0(x2) # load 0x23c4618a453a6064 from memory into f1
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f21, 0(x2) # load 0x000003ff from memory into f21
fnmadd.h f20, f9, f1, f21, dyn # perform operation
fnmadd.h f20, f9, f1, f21, rdn # perform operation
fnmadd.h f20, f9, f1, f21, rmm # perform operation
fnmadd.h f20, f9, f1, f21, rne # perform operation
fnmadd.h f20, f9, f1, f21, rtz # perform operation
fnmadd.h f20, f9, f1, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f20, f9, f1, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f20, f9, f1, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f20, f9, f1, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f20, f9, f1, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f20, f9, f1, f21 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7c00 fs3 = 0x83ff)
li x8, 0x8c97be9a25938f90 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f3, 0(x2) # load 0x00007c00 from memory into f3
li x3, 0x61db351d363e9dda # load x3 with value 0x61db351d363e9dda
sw x3, 0(x2) # store 0x61db351d363e9dda in memory
flh f28, 0(x2) # load 0x61db351d363e9dda from memory into f28
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f18, 0(x2) # load 0x000083ff from memory into f18
fnmadd.h f8, f3, f28, f18, dyn # perform operation
fnmadd.h f8, f3, f28, f18, rdn # perform operation
fnmadd.h f8, f3, f28, f18, rmm # perform operation
fnmadd.h f8, f3, f28, f18, rne # perform operation
fnmadd.h f8, f3, f28, f18, rtz # perform operation
fnmadd.h f8, f3, f28, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f8, f3, f28, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f8, f3, f28, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f8, f3, f28, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f8, f3, f28, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f8, f3, f28, f18 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7c00 fs3 = 0x200)
li x17, 0x2a573facec89ded7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f23, 0(x2) # load 0x00007c00 from memory into f23
li x3, 0x9606c6749e56ba6b # load x3 with value 0x9606c6749e56ba6b
sw x3, 0(x2) # store 0x9606c6749e56ba6b in memory
flh f1, 0(x2) # load 0x9606c6749e56ba6b from memory into f1
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f11, 0(x2) # load 0x00000200 from memory into f11
fnmadd.h f17, f23, f1, f11, dyn # perform operation
fnmadd.h f17, f23, f1, f11, rdn # perform operation
fnmadd.h f17, f23, f1, f11, rmm # perform operation
fnmadd.h f17, f23, f1, f11, rne # perform operation
fnmadd.h f17, f23, f1, f11, rtz # perform operation
fnmadd.h f17, f23, f1, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f17, f23, f1, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f17, f23, f1, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f17, f23, f1, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f17, f23, f1, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f17, f23, f1, f11 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7c00 fs3 = 0x8200)
li x8, 0xc8c6eac988691005 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f9, 0(x2) # load 0x00007c00 from memory into f9
li x3, 0xd453f06b1ff5778c # load x3 with value 0xd453f06b1ff5778c
sw x3, 0(x2) # store 0xd453f06b1ff5778c in memory
flh f14, 0(x2) # load 0xd453f06b1ff5778c from memory into f14
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f6, 0(x2) # load 0x00008200 from memory into f6
fnmadd.h f8, f9, f14, f6, dyn # perform operation
fnmadd.h f8, f9, f14, f6, rdn # perform operation
fnmadd.h f8, f9, f14, f6, rmm # perform operation
fnmadd.h f8, f9, f14, f6, rne # perform operation
fnmadd.h f8, f9, f14, f6, rtz # perform operation
fnmadd.h f8, f9, f14, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f8, f9, f14, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f8, f9, f14, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f8, f9, f14, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f8, f9, f14, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f8, f9, f14, f6 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7c00 fs3 = 0x1)
li x3, 0x07e88cdce9025068 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f5, 0(x2) # load 0x00007c00 from memory into f5
li x3, 0xe9af95d82100ff1e # load x3 with value 0xe9af95d82100ff1e
sw x3, 0(x2) # store 0xe9af95d82100ff1e in memory
flh f31, 0(x2) # load 0xe9af95d82100ff1e from memory into f31
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f29, 0(x2) # load 0x00000001 from memory into f29
fnmadd.h f3, f5, f31, f29, dyn # perform operation
fnmadd.h f3, f5, f31, f29, rdn # perform operation
fnmadd.h f3, f5, f31, f29, rmm # perform operation
fnmadd.h f3, f5, f31, f29, rne # perform operation
fnmadd.h f3, f5, f31, f29, rtz # perform operation
fnmadd.h f3, f5, f31, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f3, f5, f31, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f3, f5, f31, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f3, f5, f31, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f3, f5, f31, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f3, f5, f31, f29 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7c00 fs3 = 0x8001)
li x25, 0x01a26e6ce9dafc37 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f13, 0(x2) # load 0x00007c00 from memory into f13
li x3, 0x4abb1cc551ab9c7a # load x3 with value 0x4abb1cc551ab9c7a
sw x3, 0(x2) # store 0x4abb1cc551ab9c7a in memory
flh f19, 0(x2) # load 0x4abb1cc551ab9c7a from memory into f19
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f15, 0(x2) # load 0x00008001 from memory into f15
fnmadd.h f25, f13, f19, f15, dyn # perform operation
fnmadd.h f25, f13, f19, f15, rdn # perform operation
fnmadd.h f25, f13, f19, f15, rmm # perform operation
fnmadd.h f25, f13, f19, f15, rne # perform operation
fnmadd.h f25, f13, f19, f15, rtz # perform operation
fnmadd.h f25, f13, f19, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f25, f13, f19, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f25, f13, f19, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f25, f13, f19, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f25, f13, f19, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f25, f13, f19, f15 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7c00 fs3 = 0x7c00)
li x30, 0x786adf94ae6aa293 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f9, 0(x2) # load 0x00007c00 from memory into f9
li x3, 0xda6608b611cbe89a # load x3 with value 0xda6608b611cbe89a
sw x3, 0(x2) # store 0xda6608b611cbe89a in memory
flh f12, 0(x2) # load 0xda6608b611cbe89a from memory into f12
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f11, 0(x2) # load 0x00007c00 from memory into f11
fnmadd.h f30, f9, f12, f11, dyn # perform operation
fnmadd.h f30, f9, f12, f11, rdn # perform operation
fnmadd.h f30, f9, f12, f11, rmm # perform operation
fnmadd.h f30, f9, f12, f11, rne # perform operation
fnmadd.h f30, f9, f12, f11, rtz # perform operation
fnmadd.h f30, f9, f12, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f30, f9, f12, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f30, f9, f12, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f30, f9, f12, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f30, f9, f12, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f30, f9, f12, f11 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7c00 fs3 = 0xfc00)
li x31, 0x40e52aa535374086 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f9, 0(x2) # load 0x00007c00 from memory into f9
li x3, 0xa83d55453caa909e # load x3 with value 0xa83d55453caa909e
sw x3, 0(x2) # store 0xa83d55453caa909e in memory
flh f12, 0(x2) # load 0xa83d55453caa909e from memory into f12
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f11, 0(x2) # load 0x0000fc00 from memory into f11
fnmadd.h f31, f9, f12, f11, dyn # perform operation
fnmadd.h f31, f9, f12, f11, rdn # perform operation
fnmadd.h f31, f9, f12, f11, rmm # perform operation
fnmadd.h f31, f9, f12, f11, rne # perform operation
fnmadd.h f31, f9, f12, f11, rtz # perform operation
fnmadd.h f31, f9, f12, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f31, f9, f12, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f31, f9, f12, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f31, f9, f12, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f31, f9, f12, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f31, f9, f12, f11 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7c00 fs3 = 0x7e00)
li x31, 0x5a351254e902372a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f4, 0(x2) # load 0x00007c00 from memory into f4
li x3, 0x331b6dd725df519c # load x3 with value 0x331b6dd725df519c
sw x3, 0(x2) # store 0x331b6dd725df519c in memory
flh f19, 0(x2) # load 0x331b6dd725df519c from memory into f19
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f23, 0(x2) # load 0x00007e00 from memory into f23
fnmadd.h f31, f4, f19, f23, dyn # perform operation
fnmadd.h f31, f4, f19, f23, rdn # perform operation
fnmadd.h f31, f4, f19, f23, rmm # perform operation
fnmadd.h f31, f4, f19, f23, rne # perform operation
fnmadd.h f31, f4, f19, f23, rtz # perform operation
fnmadd.h f31, f4, f19, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f31, f4, f19, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f31, f4, f19, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f31, f4, f19, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f31, f4, f19, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f31, f4, f19, f23 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7c00 fs3 = 0x7fff)
li x6, 0x985785ac198f551e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f19, 0(x2) # load 0x00007c00 from memory into f19
li x3, 0x513297bdabeeb323 # load x3 with value 0x513297bdabeeb323
sw x3, 0(x2) # store 0x513297bdabeeb323 in memory
flh f28, 0(x2) # load 0x513297bdabeeb323 from memory into f28
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f24, 0(x2) # load 0x00007fff from memory into f24
fnmadd.h f6, f19, f28, f24, dyn # perform operation
fnmadd.h f6, f19, f28, f24, rdn # perform operation
fnmadd.h f6, f19, f28, f24, rmm # perform operation
fnmadd.h f6, f19, f28, f24, rne # perform operation
fnmadd.h f6, f19, f28, f24, rtz # perform operation
fnmadd.h f6, f19, f28, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f6, f19, f28, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f6, f19, f28, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f6, f19, f28, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f6, f19, f28, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f6, f19, f28, f24 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7c00 fs3 = 0x7c01)
li x15, 0x88eb4ef186b951a0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f4, 0(x2) # load 0x00007c00 from memory into f4
li x3, 0x59509a86cf69c300 # load x3 with value 0x59509a86cf69c300
sw x3, 0(x2) # store 0x59509a86cf69c300 in memory
flh f24, 0(x2) # load 0x59509a86cf69c300 from memory into f24
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f26, 0(x2) # load 0x00007c01 from memory into f26
fnmadd.h f15, f4, f24, f26, dyn # perform operation
fnmadd.h f15, f4, f24, f26, rdn # perform operation
fnmadd.h f15, f4, f24, f26, rmm # perform operation
fnmadd.h f15, f4, f24, f26, rne # perform operation
fnmadd.h f15, f4, f24, f26, rtz # perform operation
fnmadd.h f15, f4, f24, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f15, f4, f24, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f15, f4, f24, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f15, f4, f24, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f15, f4, f24, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f15, f4, f24, f26 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7c00 fs3 = 0x7dff)
li x13, 0x542513704469ae3d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f20, 0(x2) # load 0x00007c00 from memory into f20
li x3, 0x88fb5a3efc1fb4e1 # load x3 with value 0x88fb5a3efc1fb4e1
sw x3, 0(x2) # store 0x88fb5a3efc1fb4e1 in memory
flh f29, 0(x2) # load 0x88fb5a3efc1fb4e1 from memory into f29
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f12, 0(x2) # load 0x00007dff from memory into f12
fnmadd.h f13, f20, f29, f12, dyn # perform operation
fnmadd.h f13, f20, f29, f12, rdn # perform operation
fnmadd.h f13, f20, f29, f12, rmm # perform operation
fnmadd.h f13, f20, f29, f12, rne # perform operation
fnmadd.h f13, f20, f29, f12, rtz # perform operation
fnmadd.h f13, f20, f29, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f13, f20, f29, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f13, f20, f29, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f13, f20, f29, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f13, f20, f29, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f13, f20, f29, f12 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7c00 fs3 = 0x58b4)
li x22, 0x5497c483f7eb3ee6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f12, 0(x2) # load 0x00007c00 from memory into f12
li x3, 0xb930c53573484d52 # load x3 with value 0xb930c53573484d52
sw x3, 0(x2) # store 0xb930c53573484d52 in memory
flh f21, 0(x2) # load 0xb930c53573484d52 from memory into f21
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f25, 0(x2) # load 0x000058b4 from memory into f25
fnmadd.h f22, f12, f21, f25, dyn # perform operation
fnmadd.h f22, f12, f21, f25, rdn # perform operation
fnmadd.h f22, f12, f21, f25, rmm # perform operation
fnmadd.h f22, f12, f21, f25, rne # perform operation
fnmadd.h f22, f12, f21, f25, rtz # perform operation
fnmadd.h f22, f12, f21, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f22, f12, f21, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f22, f12, f21, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f22, f12, f21, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f22, f12, f21, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f22, f12, f21, f25 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7c00 fs3 = 0xc93a)
li x22, 0x3d5184c6acb4df09 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f14, 0(x2) # load 0x00007c00 from memory into f14
li x3, 0x29c511858737463d # load x3 with value 0x29c511858737463d
sw x3, 0(x2) # store 0x29c511858737463d in memory
flh f16, 0(x2) # load 0x29c511858737463d from memory into f16
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f23, 0(x2) # load 0x0000c93a from memory into f23
fnmadd.h f22, f14, f16, f23, dyn # perform operation
fnmadd.h f22, f14, f16, f23, rdn # perform operation
fnmadd.h f22, f14, f16, f23, rmm # perform operation
fnmadd.h f22, f14, f16, f23, rne # perform operation
fnmadd.h f22, f14, f16, f23, rtz # perform operation
fnmadd.h f22, f14, f16, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f22, f14, f16, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f22, f14, f16, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f22, f14, f16, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f22, f14, f16, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f22, f14, f16, f23 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfc00 fs3 = 0x0)
li x6, 0x4322a02e500fcc79 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f14, 0(x2) # load 0x0000fc00 from memory into f14
li x3, 0x87ad6df93f4812a1 # load x3 with value 0x87ad6df93f4812a1
sw x3, 0(x2) # store 0x87ad6df93f4812a1 in memory
flh f2, 0(x2) # load 0x87ad6df93f4812a1 from memory into f2
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f25, 0(x2) # load 0x00000000 from memory into f25
fnmadd.h f6, f14, f2, f25, dyn # perform operation
fnmadd.h f6, f14, f2, f25, rdn # perform operation
fnmadd.h f6, f14, f2, f25, rmm # perform operation
fnmadd.h f6, f14, f2, f25, rne # perform operation
fnmadd.h f6, f14, f2, f25, rtz # perform operation
fnmadd.h f6, f14, f2, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f6, f14, f2, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f6, f14, f2, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f6, f14, f2, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f6, f14, f2, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f6, f14, f2, f25 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfc00 fs3 = 0x8000)
li x3, 0x3e59bf6ffda1d506 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f27, 0(x2) # load 0x0000fc00 from memory into f27
li x3, 0x452437c74b2b6aa8 # load x3 with value 0x452437c74b2b6aa8
sw x3, 0(x2) # store 0x452437c74b2b6aa8 in memory
flh f11, 0(x2) # load 0x452437c74b2b6aa8 from memory into f11
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f18, 0(x2) # load 0x00008000 from memory into f18
fnmadd.h f3, f27, f11, f18, dyn # perform operation
fnmadd.h f3, f27, f11, f18, rdn # perform operation
fnmadd.h f3, f27, f11, f18, rmm # perform operation
fnmadd.h f3, f27, f11, f18, rne # perform operation
fnmadd.h f3, f27, f11, f18, rtz # perform operation
fnmadd.h f3, f27, f11, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f3, f27, f11, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f3, f27, f11, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f3, f27, f11, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f3, f27, f11, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f3, f27, f11, f18 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfc00 fs3 = 0x3c00)
li x4, 0x1a1c88557eb19280 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f3, 0(x2) # load 0x0000fc00 from memory into f3
li x3, 0x4bfc53c8cf7b285b # load x3 with value 0x4bfc53c8cf7b285b
sw x3, 0(x2) # store 0x4bfc53c8cf7b285b in memory
flh f6, 0(x2) # load 0x4bfc53c8cf7b285b from memory into f6
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f9, 0(x2) # load 0x00003c00 from memory into f9
fnmadd.h f4, f3, f6, f9, dyn # perform operation
fnmadd.h f4, f3, f6, f9, rdn # perform operation
fnmadd.h f4, f3, f6, f9, rmm # perform operation
fnmadd.h f4, f3, f6, f9, rne # perform operation
fnmadd.h f4, f3, f6, f9, rtz # perform operation
fnmadd.h f4, f3, f6, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f4, f3, f6, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f4, f3, f6, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f4, f3, f6, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f4, f3, f6, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f4, f3, f6, f9 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfc00 fs3 = 0xbc00)
li x22, 0x5a33eff327a505c6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f1, 0(x2) # load 0x0000fc00 from memory into f1
li x3, 0xa7a491a8222bdcfd # load x3 with value 0xa7a491a8222bdcfd
sw x3, 0(x2) # store 0xa7a491a8222bdcfd in memory
flh f11, 0(x2) # load 0xa7a491a8222bdcfd from memory into f11
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f24, 0(x2) # load 0x0000bc00 from memory into f24
fnmadd.h f22, f1, f11, f24, dyn # perform operation
fnmadd.h f22, f1, f11, f24, rdn # perform operation
fnmadd.h f22, f1, f11, f24, rmm # perform operation
fnmadd.h f22, f1, f11, f24, rne # perform operation
fnmadd.h f22, f1, f11, f24, rtz # perform operation
fnmadd.h f22, f1, f11, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f22, f1, f11, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f22, f1, f11, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f22, f1, f11, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f22, f1, f11, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f22, f1, f11, f24 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfc00 fs3 = 0x3e00)
li x4, 0x5ef51d9753984c44 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f29, 0(x2) # load 0x0000fc00 from memory into f29
li x3, 0x69440c4c019f647 # load x3 with value 0x69440c4c019f647
sw x3, 0(x2) # store 0x69440c4c019f647 in memory
flh f27, 0(x2) # load 0x69440c4c019f647 from memory into f27
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f13, 0(x2) # load 0x00003e00 from memory into f13
fnmadd.h f4, f29, f27, f13, dyn # perform operation
fnmadd.h f4, f29, f27, f13, rdn # perform operation
fnmadd.h f4, f29, f27, f13, rmm # perform operation
fnmadd.h f4, f29, f27, f13, rne # perform operation
fnmadd.h f4, f29, f27, f13, rtz # perform operation
fnmadd.h f4, f29, f27, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f4, f29, f27, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f4, f29, f27, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f4, f29, f27, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f4, f29, f27, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f4, f29, f27, f13 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfc00 fs3 = 0xbe00)
li x6, 0x927cd82f0aac3767 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f3, 0(x2) # load 0x0000fc00 from memory into f3
li x3, 0x897c7d4fc6ee520f # load x3 with value 0x897c7d4fc6ee520f
sw x3, 0(x2) # store 0x897c7d4fc6ee520f in memory
flh f20, 0(x2) # load 0x897c7d4fc6ee520f from memory into f20
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f30, 0(x2) # load 0x0000be00 from memory into f30
fnmadd.h f6, f3, f20, f30, dyn # perform operation
fnmadd.h f6, f3, f20, f30, rdn # perform operation
fnmadd.h f6, f3, f20, f30, rmm # perform operation
fnmadd.h f6, f3, f20, f30, rne # perform operation
fnmadd.h f6, f3, f20, f30, rtz # perform operation
fnmadd.h f6, f3, f20, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f6, f3, f20, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f6, f3, f20, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f6, f3, f20, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f6, f3, f20, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f6, f3, f20, f30 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfc00 fs3 = 0x4000)
li x11, 0x4e27b182da8b1783 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f9, 0(x2) # load 0x0000fc00 from memory into f9
li x3, 0xe1d89a7551ace569 # load x3 with value 0xe1d89a7551ace569
sw x3, 0(x2) # store 0xe1d89a7551ace569 in memory
flh f21, 0(x2) # load 0xe1d89a7551ace569 from memory into f21
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f2, 0(x2) # load 0x00004000 from memory into f2
fnmadd.h f11, f9, f21, f2, dyn # perform operation
fnmadd.h f11, f9, f21, f2, rdn # perform operation
fnmadd.h f11, f9, f21, f2, rmm # perform operation
fnmadd.h f11, f9, f21, f2, rne # perform operation
fnmadd.h f11, f9, f21, f2, rtz # perform operation
fnmadd.h f11, f9, f21, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f11, f9, f21, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f11, f9, f21, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f11, f9, f21, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f11, f9, f21, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f11, f9, f21, f2 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfc00 fs3 = 0xc000)
li x21, 0x7550dab8d53957b7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f17, 0(x2) # load 0x0000fc00 from memory into f17
li x3, 0x72632a809d1eb176 # load x3 with value 0x72632a809d1eb176
sw x3, 0(x2) # store 0x72632a809d1eb176 in memory
flh f2, 0(x2) # load 0x72632a809d1eb176 from memory into f2
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f5, 0(x2) # load 0x0000c000 from memory into f5
fnmadd.h f21, f17, f2, f5, dyn # perform operation
fnmadd.h f21, f17, f2, f5, rdn # perform operation
fnmadd.h f21, f17, f2, f5, rmm # perform operation
fnmadd.h f21, f17, f2, f5, rne # perform operation
fnmadd.h f21, f17, f2, f5, rtz # perform operation
fnmadd.h f21, f17, f2, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f21, f17, f2, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f21, f17, f2, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f21, f17, f2, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f21, f17, f2, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f21, f17, f2, f5 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfc00 fs3 = 0x400)
li x24, 0xa6e7435f899d3567 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f9, 0(x2) # load 0x0000fc00 from memory into f9
li x3, 0x5ca6a1ce64c7cf80 # load x3 with value 0x5ca6a1ce64c7cf80
sw x3, 0(x2) # store 0x5ca6a1ce64c7cf80 in memory
flh f13, 0(x2) # load 0x5ca6a1ce64c7cf80 from memory into f13
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f3, 0(x2) # load 0x00000400 from memory into f3
fnmadd.h f24, f9, f13, f3, dyn # perform operation
fnmadd.h f24, f9, f13, f3, rdn # perform operation
fnmadd.h f24, f9, f13, f3, rmm # perform operation
fnmadd.h f24, f9, f13, f3, rne # perform operation
fnmadd.h f24, f9, f13, f3, rtz # perform operation
fnmadd.h f24, f9, f13, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f24, f9, f13, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f24, f9, f13, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f24, f9, f13, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f24, f9, f13, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f24, f9, f13, f3 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfc00 fs3 = 0x8400)
li x16, 0x3d9c34f120950f92 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f17, 0(x2) # load 0x0000fc00 from memory into f17
li x3, 0x516380a7cbd0b915 # load x3 with value 0x516380a7cbd0b915
sw x3, 0(x2) # store 0x516380a7cbd0b915 in memory
flh f26, 0(x2) # load 0x516380a7cbd0b915 from memory into f26
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f31, 0(x2) # load 0x00008400 from memory into f31
fnmadd.h f16, f17, f26, f31, dyn # perform operation
fnmadd.h f16, f17, f26, f31, rdn # perform operation
fnmadd.h f16, f17, f26, f31, rmm # perform operation
fnmadd.h f16, f17, f26, f31, rne # perform operation
fnmadd.h f16, f17, f26, f31, rtz # perform operation
fnmadd.h f16, f17, f26, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f16, f17, f26, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f16, f17, f26, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f16, f17, f26, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f16, f17, f26, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f16, f17, f26, f31 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfc00 fs3 = 0x7bff)
li x3, 0xce68f915a384d104 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f12, 0(x2) # load 0x0000fc00 from memory into f12
li x3, 0xe15df8c58d3d8703 # load x3 with value 0xe15df8c58d3d8703
sw x3, 0(x2) # store 0xe15df8c58d3d8703 in memory
flh f24, 0(x2) # load 0xe15df8c58d3d8703 from memory into f24
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f15, 0(x2) # load 0x00007bff from memory into f15
fnmadd.h f3, f12, f24, f15, dyn # perform operation
fnmadd.h f3, f12, f24, f15, rdn # perform operation
fnmadd.h f3, f12, f24, f15, rmm # perform operation
fnmadd.h f3, f12, f24, f15, rne # perform operation
fnmadd.h f3, f12, f24, f15, rtz # perform operation
fnmadd.h f3, f12, f24, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f3, f12, f24, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f3, f12, f24, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f3, f12, f24, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f3, f12, f24, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f3, f12, f24, f15 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfc00 fs3 = 0xfbff)
li x16, 0xcf32e56e1eeae560 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f27, 0(x2) # load 0x0000fc00 from memory into f27
li x3, 0x27c1421ddddd4f13 # load x3 with value 0x27c1421ddddd4f13
sw x3, 0(x2) # store 0x27c1421ddddd4f13 in memory
flh f8, 0(x2) # load 0x27c1421ddddd4f13 from memory into f8
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f22, 0(x2) # load 0x0000fbff from memory into f22
fnmadd.h f16, f27, f8, f22, dyn # perform operation
fnmadd.h f16, f27, f8, f22, rdn # perform operation
fnmadd.h f16, f27, f8, f22, rmm # perform operation
fnmadd.h f16, f27, f8, f22, rne # perform operation
fnmadd.h f16, f27, f8, f22, rtz # perform operation
fnmadd.h f16, f27, f8, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f16, f27, f8, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f16, f27, f8, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f16, f27, f8, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f16, f27, f8, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f16, f27, f8, f22 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfc00 fs3 = 0x3ff)
li x18, 0xda7b46212548cfb5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f24, 0(x2) # load 0x0000fc00 from memory into f24
li x3, 0x8de496fbcc2ed883 # load x3 with value 0x8de496fbcc2ed883
sw x3, 0(x2) # store 0x8de496fbcc2ed883 in memory
flh f25, 0(x2) # load 0x8de496fbcc2ed883 from memory into f25
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f15, 0(x2) # load 0x000003ff from memory into f15
fnmadd.h f18, f24, f25, f15, dyn # perform operation
fnmadd.h f18, f24, f25, f15, rdn # perform operation
fnmadd.h f18, f24, f25, f15, rmm # perform operation
fnmadd.h f18, f24, f25, f15, rne # perform operation
fnmadd.h f18, f24, f25, f15, rtz # perform operation
fnmadd.h f18, f24, f25, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f18, f24, f25, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f18, f24, f25, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f18, f24, f25, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f18, f24, f25, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f18, f24, f25, f15 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfc00 fs3 = 0x83ff)
li x17, 0xdc10ffc7ef172a18 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f26, 0(x2) # load 0x0000fc00 from memory into f26
li x3, 0xba7f0b16cdb18365 # load x3 with value 0xba7f0b16cdb18365
sw x3, 0(x2) # store 0xba7f0b16cdb18365 in memory
flh f29, 0(x2) # load 0xba7f0b16cdb18365 from memory into f29
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f19, 0(x2) # load 0x000083ff from memory into f19
fnmadd.h f17, f26, f29, f19, dyn # perform operation
fnmadd.h f17, f26, f29, f19, rdn # perform operation
fnmadd.h f17, f26, f29, f19, rmm # perform operation
fnmadd.h f17, f26, f29, f19, rne # perform operation
fnmadd.h f17, f26, f29, f19, rtz # perform operation
fnmadd.h f17, f26, f29, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f17, f26, f29, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f17, f26, f29, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f17, f26, f29, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f17, f26, f29, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f17, f26, f29, f19 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfc00 fs3 = 0x200)
li x10, 0xf9eb93369b5d352c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f17, 0(x2) # load 0x0000fc00 from memory into f17
li x3, 0x624cfa8c8aa2f4e0 # load x3 with value 0x624cfa8c8aa2f4e0
sw x3, 0(x2) # store 0x624cfa8c8aa2f4e0 in memory
flh f15, 0(x2) # load 0x624cfa8c8aa2f4e0 from memory into f15
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f8, 0(x2) # load 0x00000200 from memory into f8
fnmadd.h f10, f17, f15, f8, dyn # perform operation
fnmadd.h f10, f17, f15, f8, rdn # perform operation
fnmadd.h f10, f17, f15, f8, rmm # perform operation
fnmadd.h f10, f17, f15, f8, rne # perform operation
fnmadd.h f10, f17, f15, f8, rtz # perform operation
fnmadd.h f10, f17, f15, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f10, f17, f15, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f10, f17, f15, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f10, f17, f15, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f10, f17, f15, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f10, f17, f15, f8 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfc00 fs3 = 0x8200)
li x17, 0xe54f15ca90fefa79 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f25, 0(x2) # load 0x0000fc00 from memory into f25
li x3, 0xf872bb86e60edf70 # load x3 with value 0xf872bb86e60edf70
sw x3, 0(x2) # store 0xf872bb86e60edf70 in memory
flh f28, 0(x2) # load 0xf872bb86e60edf70 from memory into f28
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f10, 0(x2) # load 0x00008200 from memory into f10
fnmadd.h f17, f25, f28, f10, dyn # perform operation
fnmadd.h f17, f25, f28, f10, rdn # perform operation
fnmadd.h f17, f25, f28, f10, rmm # perform operation
fnmadd.h f17, f25, f28, f10, rne # perform operation
fnmadd.h f17, f25, f28, f10, rtz # perform operation
fnmadd.h f17, f25, f28, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f17, f25, f28, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f17, f25, f28, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f17, f25, f28, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f17, f25, f28, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f17, f25, f28, f10 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfc00 fs3 = 0x1)
li x25, 0xd09118b1548ca1fa # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f8, 0(x2) # load 0x0000fc00 from memory into f8
li x3, 0xba901d8572376d57 # load x3 with value 0xba901d8572376d57
sw x3, 0(x2) # store 0xba901d8572376d57 in memory
flh f7, 0(x2) # load 0xba901d8572376d57 from memory into f7
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f10, 0(x2) # load 0x00000001 from memory into f10
fnmadd.h f25, f8, f7, f10, dyn # perform operation
fnmadd.h f25, f8, f7, f10, rdn # perform operation
fnmadd.h f25, f8, f7, f10, rmm # perform operation
fnmadd.h f25, f8, f7, f10, rne # perform operation
fnmadd.h f25, f8, f7, f10, rtz # perform operation
fnmadd.h f25, f8, f7, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f25, f8, f7, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f25, f8, f7, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f25, f8, f7, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f25, f8, f7, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f25, f8, f7, f10 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfc00 fs3 = 0x8001)
li x3, 0x601bed3aad1ffdf6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f10, 0(x2) # load 0x0000fc00 from memory into f10
li x3, 0xf3b220b25b61a28a # load x3 with value 0xf3b220b25b61a28a
sw x3, 0(x2) # store 0xf3b220b25b61a28a in memory
flh f23, 0(x2) # load 0xf3b220b25b61a28a from memory into f23
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f9, 0(x2) # load 0x00008001 from memory into f9
fnmadd.h f3, f10, f23, f9, dyn # perform operation
fnmadd.h f3, f10, f23, f9, rdn # perform operation
fnmadd.h f3, f10, f23, f9, rmm # perform operation
fnmadd.h f3, f10, f23, f9, rne # perform operation
fnmadd.h f3, f10, f23, f9, rtz # perform operation
fnmadd.h f3, f10, f23, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f3, f10, f23, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f3, f10, f23, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f3, f10, f23, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f3, f10, f23, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f3, f10, f23, f9 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfc00 fs3 = 0x7c00)
li x3, 0x46ad10feb62d1ea2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f26, 0(x2) # load 0x0000fc00 from memory into f26
li x3, 0xed3731e99f422a20 # load x3 with value 0xed3731e99f422a20
sw x3, 0(x2) # store 0xed3731e99f422a20 in memory
flh f21, 0(x2) # load 0xed3731e99f422a20 from memory into f21
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f5, 0(x2) # load 0x00007c00 from memory into f5
fnmadd.h f3, f26, f21, f5, dyn # perform operation
fnmadd.h f3, f26, f21, f5, rdn # perform operation
fnmadd.h f3, f26, f21, f5, rmm # perform operation
fnmadd.h f3, f26, f21, f5, rne # perform operation
fnmadd.h f3, f26, f21, f5, rtz # perform operation
fnmadd.h f3, f26, f21, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f3, f26, f21, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f3, f26, f21, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f3, f26, f21, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f3, f26, f21, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f3, f26, f21, f5 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfc00 fs3 = 0xfc00)
li x3, 0x19fefeaf2875bfdb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f12, 0(x2) # load 0x0000fc00 from memory into f12
li x3, 0x2fbb19b28d4db1db # load x3 with value 0x2fbb19b28d4db1db
sw x3, 0(x2) # store 0x2fbb19b28d4db1db in memory
flh f5, 0(x2) # load 0x2fbb19b28d4db1db from memory into f5
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f9, 0(x2) # load 0x0000fc00 from memory into f9
fnmadd.h f3, f12, f5, f9, dyn # perform operation
fnmadd.h f3, f12, f5, f9, rdn # perform operation
fnmadd.h f3, f12, f5, f9, rmm # perform operation
fnmadd.h f3, f12, f5, f9, rne # perform operation
fnmadd.h f3, f12, f5, f9, rtz # perform operation
fnmadd.h f3, f12, f5, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f3, f12, f5, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f3, f12, f5, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f3, f12, f5, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f3, f12, f5, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f3, f12, f5, f9 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfc00 fs3 = 0x7e00)
li x18, 0xa02af3e8abf433ea # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f12, 0(x2) # load 0x0000fc00 from memory into f12
li x3, 0x5c2c624439da68a # load x3 with value 0x5c2c624439da68a
sw x3, 0(x2) # store 0x5c2c624439da68a in memory
flh f20, 0(x2) # load 0x5c2c624439da68a from memory into f20
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f5, 0(x2) # load 0x00007e00 from memory into f5
fnmadd.h f18, f12, f20, f5, dyn # perform operation
fnmadd.h f18, f12, f20, f5, rdn # perform operation
fnmadd.h f18, f12, f20, f5, rmm # perform operation
fnmadd.h f18, f12, f20, f5, rne # perform operation
fnmadd.h f18, f12, f20, f5, rtz # perform operation
fnmadd.h f18, f12, f20, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f18, f12, f20, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f18, f12, f20, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f18, f12, f20, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f18, f12, f20, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f18, f12, f20, f5 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfc00 fs3 = 0x7fff)
li x30, 0x4b48edce933129df # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f26, 0(x2) # load 0x0000fc00 from memory into f26
li x3, 0x668c4bf93d9e8e4e # load x3 with value 0x668c4bf93d9e8e4e
sw x3, 0(x2) # store 0x668c4bf93d9e8e4e in memory
flh f2, 0(x2) # load 0x668c4bf93d9e8e4e from memory into f2
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f24, 0(x2) # load 0x00007fff from memory into f24
fnmadd.h f30, f26, f2, f24, dyn # perform operation
fnmadd.h f30, f26, f2, f24, rdn # perform operation
fnmadd.h f30, f26, f2, f24, rmm # perform operation
fnmadd.h f30, f26, f2, f24, rne # perform operation
fnmadd.h f30, f26, f2, f24, rtz # perform operation
fnmadd.h f30, f26, f2, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f30, f26, f2, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f30, f26, f2, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f30, f26, f2, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f30, f26, f2, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f30, f26, f2, f24 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfc00 fs3 = 0x7c01)
li x24, 0xa35025b08f3af7ac # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f30, 0(x2) # load 0x0000fc00 from memory into f30
li x3, 0x6d8e7c6671af542 # load x3 with value 0x6d8e7c6671af542
sw x3, 0(x2) # store 0x6d8e7c6671af542 in memory
flh f26, 0(x2) # load 0x6d8e7c6671af542 from memory into f26
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f1, 0(x2) # load 0x00007c01 from memory into f1
fnmadd.h f24, f30, f26, f1, dyn # perform operation
fnmadd.h f24, f30, f26, f1, rdn # perform operation
fnmadd.h f24, f30, f26, f1, rmm # perform operation
fnmadd.h f24, f30, f26, f1, rne # perform operation
fnmadd.h f24, f30, f26, f1, rtz # perform operation
fnmadd.h f24, f30, f26, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f24, f30, f26, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f24, f30, f26, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f24, f30, f26, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f24, f30, f26, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f24, f30, f26, f1 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfc00 fs3 = 0x7dff)
li x8, 0xc4054414e1f15137 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f26, 0(x2) # load 0x0000fc00 from memory into f26
li x3, 0xe9459428a5a84e67 # load x3 with value 0xe9459428a5a84e67
sw x3, 0(x2) # store 0xe9459428a5a84e67 in memory
flh f23, 0(x2) # load 0xe9459428a5a84e67 from memory into f23
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f3, 0(x2) # load 0x00007dff from memory into f3
fnmadd.h f8, f26, f23, f3, dyn # perform operation
fnmadd.h f8, f26, f23, f3, rdn # perform operation
fnmadd.h f8, f26, f23, f3, rmm # perform operation
fnmadd.h f8, f26, f23, f3, rne # perform operation
fnmadd.h f8, f26, f23, f3, rtz # perform operation
fnmadd.h f8, f26, f23, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f8, f26, f23, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f8, f26, f23, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f8, f26, f23, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f8, f26, f23, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f8, f26, f23, f3 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfc00 fs3 = 0x58b4)
li x23, 0xf85e64757212377a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f15, 0(x2) # load 0x0000fc00 from memory into f15
li x3, 0xc78151d88d73a5cc # load x3 with value 0xc78151d88d73a5cc
sw x3, 0(x2) # store 0xc78151d88d73a5cc in memory
flh f10, 0(x2) # load 0xc78151d88d73a5cc from memory into f10
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f19, 0(x2) # load 0x000058b4 from memory into f19
fnmadd.h f23, f15, f10, f19, dyn # perform operation
fnmadd.h f23, f15, f10, f19, rdn # perform operation
fnmadd.h f23, f15, f10, f19, rmm # perform operation
fnmadd.h f23, f15, f10, f19, rne # perform operation
fnmadd.h f23, f15, f10, f19, rtz # perform operation
fnmadd.h f23, f15, f10, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f23, f15, f10, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f23, f15, f10, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f23, f15, f10, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f23, f15, f10, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f23, f15, f10, f19 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xfc00 fs3 = 0xc93a)
li x27, 0x61b2138dbd140e7b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f2, 0(x2) # load 0x0000fc00 from memory into f2
li x3, 0x5611980d1cf2c1d # load x3 with value 0x5611980d1cf2c1d
sw x3, 0(x2) # store 0x5611980d1cf2c1d in memory
flh f29, 0(x2) # load 0x5611980d1cf2c1d from memory into f29
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f28, 0(x2) # load 0x0000c93a from memory into f28
fnmadd.h f27, f2, f29, f28, dyn # perform operation
fnmadd.h f27, f2, f29, f28, rdn # perform operation
fnmadd.h f27, f2, f29, f28, rmm # perform operation
fnmadd.h f27, f2, f29, f28, rne # perform operation
fnmadd.h f27, f2, f29, f28, rtz # perform operation
fnmadd.h f27, f2, f29, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f27, f2, f29, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f27, f2, f29, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f27, f2, f29, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f27, f2, f29, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f27, f2, f29, f28 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7e00 fs3 = 0x0)
li x6, 0x9a25f067e230d028 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f31, 0(x2) # load 0x00007e00 from memory into f31
li x3, 0xa01cb57689058b8e # load x3 with value 0xa01cb57689058b8e
sw x3, 0(x2) # store 0xa01cb57689058b8e in memory
flh f2, 0(x2) # load 0xa01cb57689058b8e from memory into f2
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f26, 0(x2) # load 0x00000000 from memory into f26
fnmadd.h f6, f31, f2, f26, dyn # perform operation
fnmadd.h f6, f31, f2, f26, rdn # perform operation
fnmadd.h f6, f31, f2, f26, rmm # perform operation
fnmadd.h f6, f31, f2, f26, rne # perform operation
fnmadd.h f6, f31, f2, f26, rtz # perform operation
fnmadd.h f6, f31, f2, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f6, f31, f2, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f6, f31, f2, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f6, f31, f2, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f6, f31, f2, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f6, f31, f2, f26 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7e00 fs3 = 0x8000)
li x12, 0x6646b0212b376e18 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f17, 0(x2) # load 0x00007e00 from memory into f17
li x3, 0xdd77d9abc86a9776 # load x3 with value 0xdd77d9abc86a9776
sw x3, 0(x2) # store 0xdd77d9abc86a9776 in memory
flh f20, 0(x2) # load 0xdd77d9abc86a9776 from memory into f20
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f2, 0(x2) # load 0x00008000 from memory into f2
fnmadd.h f12, f17, f20, f2, dyn # perform operation
fnmadd.h f12, f17, f20, f2, rdn # perform operation
fnmadd.h f12, f17, f20, f2, rmm # perform operation
fnmadd.h f12, f17, f20, f2, rne # perform operation
fnmadd.h f12, f17, f20, f2, rtz # perform operation
fnmadd.h f12, f17, f20, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f12, f17, f20, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f12, f17, f20, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f12, f17, f20, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f12, f17, f20, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f12, f17, f20, f2 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7e00 fs3 = 0x3c00)
li x29, 0x4d0406eefab9d379 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f11, 0(x2) # load 0x00007e00 from memory into f11
li x3, 0x8cf25676adc92584 # load x3 with value 0x8cf25676adc92584
sw x3, 0(x2) # store 0x8cf25676adc92584 in memory
flh f6, 0(x2) # load 0x8cf25676adc92584 from memory into f6
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f4, 0(x2) # load 0x00003c00 from memory into f4
fnmadd.h f29, f11, f6, f4, dyn # perform operation
fnmadd.h f29, f11, f6, f4, rdn # perform operation
fnmadd.h f29, f11, f6, f4, rmm # perform operation
fnmadd.h f29, f11, f6, f4, rne # perform operation
fnmadd.h f29, f11, f6, f4, rtz # perform operation
fnmadd.h f29, f11, f6, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f29, f11, f6, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f29, f11, f6, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f29, f11, f6, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f29, f11, f6, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f29, f11, f6, f4 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7e00 fs3 = 0xbc00)
li x20, 0xeb5fc0ab5b49c5fc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f25, 0(x2) # load 0x00007e00 from memory into f25
li x3, 0x7518c1bd36a0250a # load x3 with value 0x7518c1bd36a0250a
sw x3, 0(x2) # store 0x7518c1bd36a0250a in memory
flh f31, 0(x2) # load 0x7518c1bd36a0250a from memory into f31
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f8, 0(x2) # load 0x0000bc00 from memory into f8
fnmadd.h f20, f25, f31, f8, dyn # perform operation
fnmadd.h f20, f25, f31, f8, rdn # perform operation
fnmadd.h f20, f25, f31, f8, rmm # perform operation
fnmadd.h f20, f25, f31, f8, rne # perform operation
fnmadd.h f20, f25, f31, f8, rtz # perform operation
fnmadd.h f20, f25, f31, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f20, f25, f31, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f20, f25, f31, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f20, f25, f31, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f20, f25, f31, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f20, f25, f31, f8 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7e00 fs3 = 0x3e00)
li x18, 0x2a45667ca7cc8742 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f20, 0(x2) # load 0x00007e00 from memory into f20
li x3, 0xf756398857bac7e2 # load x3 with value 0xf756398857bac7e2
sw x3, 0(x2) # store 0xf756398857bac7e2 in memory
flh f17, 0(x2) # load 0xf756398857bac7e2 from memory into f17
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f28, 0(x2) # load 0x00003e00 from memory into f28
fnmadd.h f18, f20, f17, f28, dyn # perform operation
fnmadd.h f18, f20, f17, f28, rdn # perform operation
fnmadd.h f18, f20, f17, f28, rmm # perform operation
fnmadd.h f18, f20, f17, f28, rne # perform operation
fnmadd.h f18, f20, f17, f28, rtz # perform operation
fnmadd.h f18, f20, f17, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f18, f20, f17, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f18, f20, f17, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f18, f20, f17, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f18, f20, f17, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f18, f20, f17, f28 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7e00 fs3 = 0xbe00)
li x7, 0x6ca1b3f933e5709b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f6, 0(x2) # load 0x00007e00 from memory into f6
li x3, 0xe414335eb6a0a7bc # load x3 with value 0xe414335eb6a0a7bc
sw x3, 0(x2) # store 0xe414335eb6a0a7bc in memory
flh f22, 0(x2) # load 0xe414335eb6a0a7bc from memory into f22
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f5, 0(x2) # load 0x0000be00 from memory into f5
fnmadd.h f7, f6, f22, f5, dyn # perform operation
fnmadd.h f7, f6, f22, f5, rdn # perform operation
fnmadd.h f7, f6, f22, f5, rmm # perform operation
fnmadd.h f7, f6, f22, f5, rne # perform operation
fnmadd.h f7, f6, f22, f5, rtz # perform operation
fnmadd.h f7, f6, f22, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f7, f6, f22, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f7, f6, f22, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f7, f6, f22, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f7, f6, f22, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f7, f6, f22, f5 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7e00 fs3 = 0x4000)
li x14, 0xd38d6a5e92cf8356 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f31, 0(x2) # load 0x00007e00 from memory into f31
li x3, 0x6301b4498569e9f1 # load x3 with value 0x6301b4498569e9f1
sw x3, 0(x2) # store 0x6301b4498569e9f1 in memory
flh f17, 0(x2) # load 0x6301b4498569e9f1 from memory into f17
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f26, 0(x2) # load 0x00004000 from memory into f26
fnmadd.h f14, f31, f17, f26, dyn # perform operation
fnmadd.h f14, f31, f17, f26, rdn # perform operation
fnmadd.h f14, f31, f17, f26, rmm # perform operation
fnmadd.h f14, f31, f17, f26, rne # perform operation
fnmadd.h f14, f31, f17, f26, rtz # perform operation
fnmadd.h f14, f31, f17, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f14, f31, f17, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f14, f31, f17, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f14, f31, f17, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f14, f31, f17, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f14, f31, f17, f26 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7e00 fs3 = 0xc000)
li x22, 0xb224b0c87055468a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f5, 0(x2) # load 0x00007e00 from memory into f5
li x3, 0x97da2e026c2adab0 # load x3 with value 0x97da2e026c2adab0
sw x3, 0(x2) # store 0x97da2e026c2adab0 in memory
flh f8, 0(x2) # load 0x97da2e026c2adab0 from memory into f8
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f20, 0(x2) # load 0x0000c000 from memory into f20
fnmadd.h f22, f5, f8, f20, dyn # perform operation
fnmadd.h f22, f5, f8, f20, rdn # perform operation
fnmadd.h f22, f5, f8, f20, rmm # perform operation
fnmadd.h f22, f5, f8, f20, rne # perform operation
fnmadd.h f22, f5, f8, f20, rtz # perform operation
fnmadd.h f22, f5, f8, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f22, f5, f8, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f22, f5, f8, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f22, f5, f8, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f22, f5, f8, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f22, f5, f8, f20 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7e00 fs3 = 0x400)
li x15, 0x31089c7bd3bc00ff # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f13, 0(x2) # load 0x00007e00 from memory into f13
li x3, 0xfba7f418320cb08c # load x3 with value 0xfba7f418320cb08c
sw x3, 0(x2) # store 0xfba7f418320cb08c in memory
flh f27, 0(x2) # load 0xfba7f418320cb08c from memory into f27
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f5, 0(x2) # load 0x00000400 from memory into f5
fnmadd.h f15, f13, f27, f5, dyn # perform operation
fnmadd.h f15, f13, f27, f5, rdn # perform operation
fnmadd.h f15, f13, f27, f5, rmm # perform operation
fnmadd.h f15, f13, f27, f5, rne # perform operation
fnmadd.h f15, f13, f27, f5, rtz # perform operation
fnmadd.h f15, f13, f27, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f15, f13, f27, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f15, f13, f27, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f15, f13, f27, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f15, f13, f27, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f15, f13, f27, f5 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7e00 fs3 = 0x8400)
li x30, 0x324c0f84470c9f23 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f18, 0(x2) # load 0x00007e00 from memory into f18
li x3, 0x7cb5208934bcdc38 # load x3 with value 0x7cb5208934bcdc38
sw x3, 0(x2) # store 0x7cb5208934bcdc38 in memory
flh f14, 0(x2) # load 0x7cb5208934bcdc38 from memory into f14
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f17, 0(x2) # load 0x00008400 from memory into f17
fnmadd.h f30, f18, f14, f17, dyn # perform operation
fnmadd.h f30, f18, f14, f17, rdn # perform operation
fnmadd.h f30, f18, f14, f17, rmm # perform operation
fnmadd.h f30, f18, f14, f17, rne # perform operation
fnmadd.h f30, f18, f14, f17, rtz # perform operation
fnmadd.h f30, f18, f14, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f30, f18, f14, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f30, f18, f14, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f30, f18, f14, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f30, f18, f14, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f30, f18, f14, f17 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7e00 fs3 = 0x7bff)
li x9, 0x3c4c04b65763effc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f18, 0(x2) # load 0x00007e00 from memory into f18
li x3, 0x64b6daa5e647ba6a # load x3 with value 0x64b6daa5e647ba6a
sw x3, 0(x2) # store 0x64b6daa5e647ba6a in memory
flh f10, 0(x2) # load 0x64b6daa5e647ba6a from memory into f10
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f3, 0(x2) # load 0x00007bff from memory into f3
fnmadd.h f9, f18, f10, f3, dyn # perform operation
fnmadd.h f9, f18, f10, f3, rdn # perform operation
fnmadd.h f9, f18, f10, f3, rmm # perform operation
fnmadd.h f9, f18, f10, f3, rne # perform operation
fnmadd.h f9, f18, f10, f3, rtz # perform operation
fnmadd.h f9, f18, f10, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f9, f18, f10, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f9, f18, f10, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f9, f18, f10, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f9, f18, f10, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f9, f18, f10, f3 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7e00 fs3 = 0xfbff)
li x4, 0xe64e465c38bdfca4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f17, 0(x2) # load 0x00007e00 from memory into f17
li x3, 0xf3b9392c83a88148 # load x3 with value 0xf3b9392c83a88148
sw x3, 0(x2) # store 0xf3b9392c83a88148 in memory
flh f7, 0(x2) # load 0xf3b9392c83a88148 from memory into f7
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f30, 0(x2) # load 0x0000fbff from memory into f30
fnmadd.h f4, f17, f7, f30, dyn # perform operation
fnmadd.h f4, f17, f7, f30, rdn # perform operation
fnmadd.h f4, f17, f7, f30, rmm # perform operation
fnmadd.h f4, f17, f7, f30, rne # perform operation
fnmadd.h f4, f17, f7, f30, rtz # perform operation
fnmadd.h f4, f17, f7, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f4, f17, f7, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f4, f17, f7, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f4, f17, f7, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f4, f17, f7, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f4, f17, f7, f30 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7e00 fs3 = 0x3ff)
li x17, 0x918658fd9fb63088 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f16, 0(x2) # load 0x00007e00 from memory into f16
li x3, 0x895c664b295680f5 # load x3 with value 0x895c664b295680f5
sw x3, 0(x2) # store 0x895c664b295680f5 in memory
flh f20, 0(x2) # load 0x895c664b295680f5 from memory into f20
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f4, 0(x2) # load 0x000003ff from memory into f4
fnmadd.h f17, f16, f20, f4, dyn # perform operation
fnmadd.h f17, f16, f20, f4, rdn # perform operation
fnmadd.h f17, f16, f20, f4, rmm # perform operation
fnmadd.h f17, f16, f20, f4, rne # perform operation
fnmadd.h f17, f16, f20, f4, rtz # perform operation
fnmadd.h f17, f16, f20, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f17, f16, f20, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f17, f16, f20, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f17, f16, f20, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f17, f16, f20, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f17, f16, f20, f4 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7e00 fs3 = 0x83ff)
li x6, 0x11105b28b35ad3ee # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f10, 0(x2) # load 0x00007e00 from memory into f10
li x3, 0x8c85a7c25978c9fe # load x3 with value 0x8c85a7c25978c9fe
sw x3, 0(x2) # store 0x8c85a7c25978c9fe in memory
flh f31, 0(x2) # load 0x8c85a7c25978c9fe from memory into f31
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f17, 0(x2) # load 0x000083ff from memory into f17
fnmadd.h f6, f10, f31, f17, dyn # perform operation
fnmadd.h f6, f10, f31, f17, rdn # perform operation
fnmadd.h f6, f10, f31, f17, rmm # perform operation
fnmadd.h f6, f10, f31, f17, rne # perform operation
fnmadd.h f6, f10, f31, f17, rtz # perform operation
fnmadd.h f6, f10, f31, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f6, f10, f31, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f6, f10, f31, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f6, f10, f31, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f6, f10, f31, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f6, f10, f31, f17 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7e00 fs3 = 0x200)
li x5, 0x48fe41c34b9c9eab # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f7, 0(x2) # load 0x00007e00 from memory into f7
li x3, 0xcaa866beb4c82570 # load x3 with value 0xcaa866beb4c82570
sw x3, 0(x2) # store 0xcaa866beb4c82570 in memory
flh f25, 0(x2) # load 0xcaa866beb4c82570 from memory into f25
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f21, 0(x2) # load 0x00000200 from memory into f21
fnmadd.h f5, f7, f25, f21, dyn # perform operation
fnmadd.h f5, f7, f25, f21, rdn # perform operation
fnmadd.h f5, f7, f25, f21, rmm # perform operation
fnmadd.h f5, f7, f25, f21, rne # perform operation
fnmadd.h f5, f7, f25, f21, rtz # perform operation
fnmadd.h f5, f7, f25, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f5, f7, f25, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f5, f7, f25, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f5, f7, f25, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f5, f7, f25, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f5, f7, f25, f21 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7e00 fs3 = 0x8200)
li x24, 0xed7eac4265ec348c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f30, 0(x2) # load 0x00007e00 from memory into f30
li x3, 0x2d5506106553e800 # load x3 with value 0x2d5506106553e800
sw x3, 0(x2) # store 0x2d5506106553e800 in memory
flh f21, 0(x2) # load 0x2d5506106553e800 from memory into f21
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f7, 0(x2) # load 0x00008200 from memory into f7
fnmadd.h f24, f30, f21, f7, dyn # perform operation
fnmadd.h f24, f30, f21, f7, rdn # perform operation
fnmadd.h f24, f30, f21, f7, rmm # perform operation
fnmadd.h f24, f30, f21, f7, rne # perform operation
fnmadd.h f24, f30, f21, f7, rtz # perform operation
fnmadd.h f24, f30, f21, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f24, f30, f21, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f24, f30, f21, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f24, f30, f21, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f24, f30, f21, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f24, f30, f21, f7 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7e00 fs3 = 0x1)
li x31, 0xf89d4a8a109cbc2c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f11, 0(x2) # load 0x00007e00 from memory into f11
li x3, 0x564c4edd727c8ee5 # load x3 with value 0x564c4edd727c8ee5
sw x3, 0(x2) # store 0x564c4edd727c8ee5 in memory
flh f15, 0(x2) # load 0x564c4edd727c8ee5 from memory into f15
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f17, 0(x2) # load 0x00000001 from memory into f17
fnmadd.h f31, f11, f15, f17, dyn # perform operation
fnmadd.h f31, f11, f15, f17, rdn # perform operation
fnmadd.h f31, f11, f15, f17, rmm # perform operation
fnmadd.h f31, f11, f15, f17, rne # perform operation
fnmadd.h f31, f11, f15, f17, rtz # perform operation
fnmadd.h f31, f11, f15, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f31, f11, f15, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f31, f11, f15, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f31, f11, f15, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f31, f11, f15, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f31, f11, f15, f17 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7e00 fs3 = 0x8001)
li x6, 0xe8cd5640df2a684b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f30, 0(x2) # load 0x00007e00 from memory into f30
li x3, 0x2fa6d1f801f5d444 # load x3 with value 0x2fa6d1f801f5d444
sw x3, 0(x2) # store 0x2fa6d1f801f5d444 in memory
flh f31, 0(x2) # load 0x2fa6d1f801f5d444 from memory into f31
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f20, 0(x2) # load 0x00008001 from memory into f20
fnmadd.h f6, f30, f31, f20, dyn # perform operation
fnmadd.h f6, f30, f31, f20, rdn # perform operation
fnmadd.h f6, f30, f31, f20, rmm # perform operation
fnmadd.h f6, f30, f31, f20, rne # perform operation
fnmadd.h f6, f30, f31, f20, rtz # perform operation
fnmadd.h f6, f30, f31, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f6, f30, f31, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f6, f30, f31, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f6, f30, f31, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f6, f30, f31, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f6, f30, f31, f20 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7e00 fs3 = 0x7c00)
li x10, 0x1f16c24ca5db90d4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f2, 0(x2) # load 0x00007e00 from memory into f2
li x3, 0x5ab67fb651e5d977 # load x3 with value 0x5ab67fb651e5d977
sw x3, 0(x2) # store 0x5ab67fb651e5d977 in memory
flh f26, 0(x2) # load 0x5ab67fb651e5d977 from memory into f26
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f17, 0(x2) # load 0x00007c00 from memory into f17
fnmadd.h f10, f2, f26, f17, dyn # perform operation
fnmadd.h f10, f2, f26, f17, rdn # perform operation
fnmadd.h f10, f2, f26, f17, rmm # perform operation
fnmadd.h f10, f2, f26, f17, rne # perform operation
fnmadd.h f10, f2, f26, f17, rtz # perform operation
fnmadd.h f10, f2, f26, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f10, f2, f26, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f10, f2, f26, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f10, f2, f26, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f10, f2, f26, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f10, f2, f26, f17 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7e00 fs3 = 0xfc00)
li x25, 0x16538258c90e7fe0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f23, 0(x2) # load 0x00007e00 from memory into f23
li x3, 0x580253c72b7a941f # load x3 with value 0x580253c72b7a941f
sw x3, 0(x2) # store 0x580253c72b7a941f in memory
flh f7, 0(x2) # load 0x580253c72b7a941f from memory into f7
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f13, 0(x2) # load 0x0000fc00 from memory into f13
fnmadd.h f25, f23, f7, f13, dyn # perform operation
fnmadd.h f25, f23, f7, f13, rdn # perform operation
fnmadd.h f25, f23, f7, f13, rmm # perform operation
fnmadd.h f25, f23, f7, f13, rne # perform operation
fnmadd.h f25, f23, f7, f13, rtz # perform operation
fnmadd.h f25, f23, f7, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f25, f23, f7, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f25, f23, f7, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f25, f23, f7, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f25, f23, f7, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f25, f23, f7, f13 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7e00 fs3 = 0x7e00)
li x6, 0x443e3a273708c1ec # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f19, 0(x2) # load 0x00007e00 from memory into f19
li x3, 0x7ea46126ee310224 # load x3 with value 0x7ea46126ee310224
sw x3, 0(x2) # store 0x7ea46126ee310224 in memory
flh f3, 0(x2) # load 0x7ea46126ee310224 from memory into f3
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f5, 0(x2) # load 0x00007e00 from memory into f5
fnmadd.h f6, f19, f3, f5, dyn # perform operation
fnmadd.h f6, f19, f3, f5, rdn # perform operation
fnmadd.h f6, f19, f3, f5, rmm # perform operation
fnmadd.h f6, f19, f3, f5, rne # perform operation
fnmadd.h f6, f19, f3, f5, rtz # perform operation
fnmadd.h f6, f19, f3, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f6, f19, f3, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f6, f19, f3, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f6, f19, f3, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f6, f19, f3, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f6, f19, f3, f5 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7e00 fs3 = 0x7fff)
li x20, 0xadd086cbc4e0ce85 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f11, 0(x2) # load 0x00007e00 from memory into f11
li x3, 0x808cfd0a60f0f4d6 # load x3 with value 0x808cfd0a60f0f4d6
sw x3, 0(x2) # store 0x808cfd0a60f0f4d6 in memory
flh f15, 0(x2) # load 0x808cfd0a60f0f4d6 from memory into f15
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f2, 0(x2) # load 0x00007fff from memory into f2
fnmadd.h f20, f11, f15, f2, dyn # perform operation
fnmadd.h f20, f11, f15, f2, rdn # perform operation
fnmadd.h f20, f11, f15, f2, rmm # perform operation
fnmadd.h f20, f11, f15, f2, rne # perform operation
fnmadd.h f20, f11, f15, f2, rtz # perform operation
fnmadd.h f20, f11, f15, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f20, f11, f15, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f20, f11, f15, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f20, f11, f15, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f20, f11, f15, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f20, f11, f15, f2 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7e00 fs3 = 0x7c01)
li x25, 0xf6c038555a80d6a8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f17, 0(x2) # load 0x00007e00 from memory into f17
li x3, 0x596d0756ca79d33f # load x3 with value 0x596d0756ca79d33f
sw x3, 0(x2) # store 0x596d0756ca79d33f in memory
flh f31, 0(x2) # load 0x596d0756ca79d33f from memory into f31
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f8, 0(x2) # load 0x00007c01 from memory into f8
fnmadd.h f25, f17, f31, f8, dyn # perform operation
fnmadd.h f25, f17, f31, f8, rdn # perform operation
fnmadd.h f25, f17, f31, f8, rmm # perform operation
fnmadd.h f25, f17, f31, f8, rne # perform operation
fnmadd.h f25, f17, f31, f8, rtz # perform operation
fnmadd.h f25, f17, f31, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f25, f17, f31, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f25, f17, f31, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f25, f17, f31, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f25, f17, f31, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f25, f17, f31, f8 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7e00 fs3 = 0x7dff)
li x19, 0xc5d9fefcb74353f4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f9, 0(x2) # load 0x00007e00 from memory into f9
li x3, 0xba1d2c235157f20a # load x3 with value 0xba1d2c235157f20a
sw x3, 0(x2) # store 0xba1d2c235157f20a in memory
flh f4, 0(x2) # load 0xba1d2c235157f20a from memory into f4
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f29, 0(x2) # load 0x00007dff from memory into f29
fnmadd.h f19, f9, f4, f29, dyn # perform operation
fnmadd.h f19, f9, f4, f29, rdn # perform operation
fnmadd.h f19, f9, f4, f29, rmm # perform operation
fnmadd.h f19, f9, f4, f29, rne # perform operation
fnmadd.h f19, f9, f4, f29, rtz # perform operation
fnmadd.h f19, f9, f4, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f19, f9, f4, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f19, f9, f4, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f19, f9, f4, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f19, f9, f4, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f19, f9, f4, f29 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7e00 fs3 = 0x58b4)
li x18, 0xf44bf347d9343fe9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f23, 0(x2) # load 0x00007e00 from memory into f23
li x3, 0x9f9cd40a5b80d24c # load x3 with value 0x9f9cd40a5b80d24c
sw x3, 0(x2) # store 0x9f9cd40a5b80d24c in memory
flh f31, 0(x2) # load 0x9f9cd40a5b80d24c from memory into f31
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f10, 0(x2) # load 0x000058b4 from memory into f10
fnmadd.h f18, f23, f31, f10, dyn # perform operation
fnmadd.h f18, f23, f31, f10, rdn # perform operation
fnmadd.h f18, f23, f31, f10, rmm # perform operation
fnmadd.h f18, f23, f31, f10, rne # perform operation
fnmadd.h f18, f23, f31, f10, rtz # perform operation
fnmadd.h f18, f23, f31, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f18, f23, f31, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f18, f23, f31, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f18, f23, f31, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f18, f23, f31, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f18, f23, f31, f10 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7e00 fs3 = 0xc93a)
li x21, 0x075699439b3b253d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f2, 0(x2) # load 0x00007e00 from memory into f2
li x3, 0xd2033484b43daa92 # load x3 with value 0xd2033484b43daa92
sw x3, 0(x2) # store 0xd2033484b43daa92 in memory
flh f5, 0(x2) # load 0xd2033484b43daa92 from memory into f5
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f23, 0(x2) # load 0x0000c93a from memory into f23
fnmadd.h f21, f2, f5, f23, dyn # perform operation
fnmadd.h f21, f2, f5, f23, rdn # perform operation
fnmadd.h f21, f2, f5, f23, rmm # perform operation
fnmadd.h f21, f2, f5, f23, rne # perform operation
fnmadd.h f21, f2, f5, f23, rtz # perform operation
fnmadd.h f21, f2, f5, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f21, f2, f5, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f21, f2, f5, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f21, f2, f5, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f21, f2, f5, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f21, f2, f5, f23 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fff fs3 = 0x0)
li x16, 0x4fd7e3cc083b8f4e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f26, 0(x2) # load 0x00007fff from memory into f26
li x3, 0x9ee4b18a104d4085 # load x3 with value 0x9ee4b18a104d4085
sw x3, 0(x2) # store 0x9ee4b18a104d4085 in memory
flh f21, 0(x2) # load 0x9ee4b18a104d4085 from memory into f21
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f6, 0(x2) # load 0x00000000 from memory into f6
fnmadd.h f16, f26, f21, f6, dyn # perform operation
fnmadd.h f16, f26, f21, f6, rdn # perform operation
fnmadd.h f16, f26, f21, f6, rmm # perform operation
fnmadd.h f16, f26, f21, f6, rne # perform operation
fnmadd.h f16, f26, f21, f6, rtz # perform operation
fnmadd.h f16, f26, f21, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f16, f26, f21, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f16, f26, f21, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f16, f26, f21, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f16, f26, f21, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f16, f26, f21, f6 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fff fs3 = 0x8000)
li x11, 0x05ac03550befbfc1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f15, 0(x2) # load 0x00007fff from memory into f15
li x3, 0xcddbc0312ba241d3 # load x3 with value 0xcddbc0312ba241d3
sw x3, 0(x2) # store 0xcddbc0312ba241d3 in memory
flh f12, 0(x2) # load 0xcddbc0312ba241d3 from memory into f12
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f10, 0(x2) # load 0x00008000 from memory into f10
fnmadd.h f11, f15, f12, f10, dyn # perform operation
fnmadd.h f11, f15, f12, f10, rdn # perform operation
fnmadd.h f11, f15, f12, f10, rmm # perform operation
fnmadd.h f11, f15, f12, f10, rne # perform operation
fnmadd.h f11, f15, f12, f10, rtz # perform operation
fnmadd.h f11, f15, f12, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f11, f15, f12, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f11, f15, f12, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f11, f15, f12, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f11, f15, f12, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f11, f15, f12, f10 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fff fs3 = 0x3c00)
li x27, 0x58f395d332408065 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f14, 0(x2) # load 0x00007fff from memory into f14
li x3, 0x338fd8555b440e72 # load x3 with value 0x338fd8555b440e72
sw x3, 0(x2) # store 0x338fd8555b440e72 in memory
flh f7, 0(x2) # load 0x338fd8555b440e72 from memory into f7
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f28, 0(x2) # load 0x00003c00 from memory into f28
fnmadd.h f27, f14, f7, f28, dyn # perform operation
fnmadd.h f27, f14, f7, f28, rdn # perform operation
fnmadd.h f27, f14, f7, f28, rmm # perform operation
fnmadd.h f27, f14, f7, f28, rne # perform operation
fnmadd.h f27, f14, f7, f28, rtz # perform operation
fnmadd.h f27, f14, f7, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f27, f14, f7, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f27, f14, f7, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f27, f14, f7, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f27, f14, f7, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f27, f14, f7, f28 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fff fs3 = 0xbc00)
li x14, 0x2e7b07b26fd2dc13 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f21, 0(x2) # load 0x00007fff from memory into f21
li x3, 0xa87690cd3072c7ea # load x3 with value 0xa87690cd3072c7ea
sw x3, 0(x2) # store 0xa87690cd3072c7ea in memory
flh f16, 0(x2) # load 0xa87690cd3072c7ea from memory into f16
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f28, 0(x2) # load 0x0000bc00 from memory into f28
fnmadd.h f14, f21, f16, f28, dyn # perform operation
fnmadd.h f14, f21, f16, f28, rdn # perform operation
fnmadd.h f14, f21, f16, f28, rmm # perform operation
fnmadd.h f14, f21, f16, f28, rne # perform operation
fnmadd.h f14, f21, f16, f28, rtz # perform operation
fnmadd.h f14, f21, f16, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f14, f21, f16, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f14, f21, f16, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f14, f21, f16, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f14, f21, f16, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f14, f21, f16, f28 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fff fs3 = 0x3e00)
li x28, 0x0bf2f0ba2ca0e4c8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f20, 0(x2) # load 0x00007fff from memory into f20
li x3, 0x30d8db3e61896851 # load x3 with value 0x30d8db3e61896851
sw x3, 0(x2) # store 0x30d8db3e61896851 in memory
flh f18, 0(x2) # load 0x30d8db3e61896851 from memory into f18
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f14, 0(x2) # load 0x00003e00 from memory into f14
fnmadd.h f28, f20, f18, f14, dyn # perform operation
fnmadd.h f28, f20, f18, f14, rdn # perform operation
fnmadd.h f28, f20, f18, f14, rmm # perform operation
fnmadd.h f28, f20, f18, f14, rne # perform operation
fnmadd.h f28, f20, f18, f14, rtz # perform operation
fnmadd.h f28, f20, f18, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f28, f20, f18, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f28, f20, f18, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f28, f20, f18, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f28, f20, f18, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f28, f20, f18, f14 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fff fs3 = 0xbe00)
li x19, 0x49be94f420e11595 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f5, 0(x2) # load 0x00007fff from memory into f5
li x3, 0xcf3fe2d35e2735d7 # load x3 with value 0xcf3fe2d35e2735d7
sw x3, 0(x2) # store 0xcf3fe2d35e2735d7 in memory
flh f24, 0(x2) # load 0xcf3fe2d35e2735d7 from memory into f24
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f28, 0(x2) # load 0x0000be00 from memory into f28
fnmadd.h f19, f5, f24, f28, dyn # perform operation
fnmadd.h f19, f5, f24, f28, rdn # perform operation
fnmadd.h f19, f5, f24, f28, rmm # perform operation
fnmadd.h f19, f5, f24, f28, rne # perform operation
fnmadd.h f19, f5, f24, f28, rtz # perform operation
fnmadd.h f19, f5, f24, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f19, f5, f24, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f19, f5, f24, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f19, f5, f24, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f19, f5, f24, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f19, f5, f24, f28 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fff fs3 = 0x4000)
li x14, 0x5f147f6fcd43d4fb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f20, 0(x2) # load 0x00007fff from memory into f20
li x3, 0x62dbb553366aedbd # load x3 with value 0x62dbb553366aedbd
sw x3, 0(x2) # store 0x62dbb553366aedbd in memory
flh f15, 0(x2) # load 0x62dbb553366aedbd from memory into f15
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f5, 0(x2) # load 0x00004000 from memory into f5
fnmadd.h f14, f20, f15, f5, dyn # perform operation
fnmadd.h f14, f20, f15, f5, rdn # perform operation
fnmadd.h f14, f20, f15, f5, rmm # perform operation
fnmadd.h f14, f20, f15, f5, rne # perform operation
fnmadd.h f14, f20, f15, f5, rtz # perform operation
fnmadd.h f14, f20, f15, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f14, f20, f15, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f14, f20, f15, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f14, f20, f15, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f14, f20, f15, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f14, f20, f15, f5 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fff fs3 = 0xc000)
li x26, 0x9d290b2661058866 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f16, 0(x2) # load 0x00007fff from memory into f16
li x3, 0x836d4c3032ea4fac # load x3 with value 0x836d4c3032ea4fac
sw x3, 0(x2) # store 0x836d4c3032ea4fac in memory
flh f24, 0(x2) # load 0x836d4c3032ea4fac from memory into f24
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f27, 0(x2) # load 0x0000c000 from memory into f27
fnmadd.h f26, f16, f24, f27, dyn # perform operation
fnmadd.h f26, f16, f24, f27, rdn # perform operation
fnmadd.h f26, f16, f24, f27, rmm # perform operation
fnmadd.h f26, f16, f24, f27, rne # perform operation
fnmadd.h f26, f16, f24, f27, rtz # perform operation
fnmadd.h f26, f16, f24, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f26, f16, f24, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f26, f16, f24, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f26, f16, f24, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f26, f16, f24, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f26, f16, f24, f27 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fff fs3 = 0x400)
li x1, 0x2df2869bf56389e3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f15, 0(x2) # load 0x00007fff from memory into f15
li x3, 0x84fbdf6dd36e1d92 # load x3 with value 0x84fbdf6dd36e1d92
sw x3, 0(x2) # store 0x84fbdf6dd36e1d92 in memory
flh f11, 0(x2) # load 0x84fbdf6dd36e1d92 from memory into f11
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f23, 0(x2) # load 0x00000400 from memory into f23
fnmadd.h f1, f15, f11, f23, dyn # perform operation
fnmadd.h f1, f15, f11, f23, rdn # perform operation
fnmadd.h f1, f15, f11, f23, rmm # perform operation
fnmadd.h f1, f15, f11, f23, rne # perform operation
fnmadd.h f1, f15, f11, f23, rtz # perform operation
fnmadd.h f1, f15, f11, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f1, f15, f11, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f1, f15, f11, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f1, f15, f11, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f1, f15, f11, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f1, f15, f11, f23 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fff fs3 = 0x8400)
li x20, 0x6fbf5f7cca45ad29 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f28, 0(x2) # load 0x00007fff from memory into f28
li x3, 0xe514090112cda181 # load x3 with value 0xe514090112cda181
sw x3, 0(x2) # store 0xe514090112cda181 in memory
flh f9, 0(x2) # load 0xe514090112cda181 from memory into f9
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f23, 0(x2) # load 0x00008400 from memory into f23
fnmadd.h f20, f28, f9, f23, dyn # perform operation
fnmadd.h f20, f28, f9, f23, rdn # perform operation
fnmadd.h f20, f28, f9, f23, rmm # perform operation
fnmadd.h f20, f28, f9, f23, rne # perform operation
fnmadd.h f20, f28, f9, f23, rtz # perform operation
fnmadd.h f20, f28, f9, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f20, f28, f9, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f20, f28, f9, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f20, f28, f9, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f20, f28, f9, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f20, f28, f9, f23 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fff fs3 = 0x7bff)
li x4, 0x99e02099a1df19f7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f30, 0(x2) # load 0x00007fff from memory into f30
li x3, 0xb6c378acf9b0f757 # load x3 with value 0xb6c378acf9b0f757
sw x3, 0(x2) # store 0xb6c378acf9b0f757 in memory
flh f25, 0(x2) # load 0xb6c378acf9b0f757 from memory into f25
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f21, 0(x2) # load 0x00007bff from memory into f21
fnmadd.h f4, f30, f25, f21, dyn # perform operation
fnmadd.h f4, f30, f25, f21, rdn # perform operation
fnmadd.h f4, f30, f25, f21, rmm # perform operation
fnmadd.h f4, f30, f25, f21, rne # perform operation
fnmadd.h f4, f30, f25, f21, rtz # perform operation
fnmadd.h f4, f30, f25, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f4, f30, f25, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f4, f30, f25, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f4, f30, f25, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f4, f30, f25, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f4, f30, f25, f21 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fff fs3 = 0xfbff)
li x12, 0xb103b04102a91b93 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f11, 0(x2) # load 0x00007fff from memory into f11
li x3, 0x3a24b625c9d33003 # load x3 with value 0x3a24b625c9d33003
sw x3, 0(x2) # store 0x3a24b625c9d33003 in memory
flh f7, 0(x2) # load 0x3a24b625c9d33003 from memory into f7
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f10, 0(x2) # load 0x0000fbff from memory into f10
fnmadd.h f12, f11, f7, f10, dyn # perform operation
fnmadd.h f12, f11, f7, f10, rdn # perform operation
fnmadd.h f12, f11, f7, f10, rmm # perform operation
fnmadd.h f12, f11, f7, f10, rne # perform operation
fnmadd.h f12, f11, f7, f10, rtz # perform operation
fnmadd.h f12, f11, f7, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f12, f11, f7, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f12, f11, f7, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f12, f11, f7, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f12, f11, f7, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f12, f11, f7, f10 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fff fs3 = 0x3ff)
li x11, 0x25c17dc9b8100d69 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f5, 0(x2) # load 0x00007fff from memory into f5
li x3, 0xd2bb1a0de4d77dc7 # load x3 with value 0xd2bb1a0de4d77dc7
sw x3, 0(x2) # store 0xd2bb1a0de4d77dc7 in memory
flh f16, 0(x2) # load 0xd2bb1a0de4d77dc7 from memory into f16
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f12, 0(x2) # load 0x000003ff from memory into f12
fnmadd.h f11, f5, f16, f12, dyn # perform operation
fnmadd.h f11, f5, f16, f12, rdn # perform operation
fnmadd.h f11, f5, f16, f12, rmm # perform operation
fnmadd.h f11, f5, f16, f12, rne # perform operation
fnmadd.h f11, f5, f16, f12, rtz # perform operation
fnmadd.h f11, f5, f16, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f11, f5, f16, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f11, f5, f16, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f11, f5, f16, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f11, f5, f16, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f11, f5, f16, f12 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fff fs3 = 0x83ff)
li x13, 0x2e72014649a8c0fa # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f10, 0(x2) # load 0x00007fff from memory into f10
li x3, 0x47eb82db8c53641d # load x3 with value 0x47eb82db8c53641d
sw x3, 0(x2) # store 0x47eb82db8c53641d in memory
flh f6, 0(x2) # load 0x47eb82db8c53641d from memory into f6
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f19, 0(x2) # load 0x000083ff from memory into f19
fnmadd.h f13, f10, f6, f19, dyn # perform operation
fnmadd.h f13, f10, f6, f19, rdn # perform operation
fnmadd.h f13, f10, f6, f19, rmm # perform operation
fnmadd.h f13, f10, f6, f19, rne # perform operation
fnmadd.h f13, f10, f6, f19, rtz # perform operation
fnmadd.h f13, f10, f6, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f13, f10, f6, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f13, f10, f6, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f13, f10, f6, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f13, f10, f6, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f13, f10, f6, f19 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fff fs3 = 0x200)
li x4, 0xd7c842a7570a27e2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f14, 0(x2) # load 0x00007fff from memory into f14
li x3, 0x5957802238e45ae5 # load x3 with value 0x5957802238e45ae5
sw x3, 0(x2) # store 0x5957802238e45ae5 in memory
flh f24, 0(x2) # load 0x5957802238e45ae5 from memory into f24
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f16, 0(x2) # load 0x00000200 from memory into f16
fnmadd.h f4, f14, f24, f16, dyn # perform operation
fnmadd.h f4, f14, f24, f16, rdn # perform operation
fnmadd.h f4, f14, f24, f16, rmm # perform operation
fnmadd.h f4, f14, f24, f16, rne # perform operation
fnmadd.h f4, f14, f24, f16, rtz # perform operation
fnmadd.h f4, f14, f24, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f4, f14, f24, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f4, f14, f24, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f4, f14, f24, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f4, f14, f24, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f4, f14, f24, f16 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fff fs3 = 0x8200)
li x10, 0x157732352856c07b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f8, 0(x2) # load 0x00007fff from memory into f8
li x3, 0x2e2a058581d81f7a # load x3 with value 0x2e2a058581d81f7a
sw x3, 0(x2) # store 0x2e2a058581d81f7a in memory
flh f21, 0(x2) # load 0x2e2a058581d81f7a from memory into f21
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f5, 0(x2) # load 0x00008200 from memory into f5
fnmadd.h f10, f8, f21, f5, dyn # perform operation
fnmadd.h f10, f8, f21, f5, rdn # perform operation
fnmadd.h f10, f8, f21, f5, rmm # perform operation
fnmadd.h f10, f8, f21, f5, rne # perform operation
fnmadd.h f10, f8, f21, f5, rtz # perform operation
fnmadd.h f10, f8, f21, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f10, f8, f21, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f10, f8, f21, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f10, f8, f21, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f10, f8, f21, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f10, f8, f21, f5 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fff fs3 = 0x1)
li x5, 0x290cb46c47b50a26 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f31, 0(x2) # load 0x00007fff from memory into f31
li x3, 0x918daf21a5fe1a7f # load x3 with value 0x918daf21a5fe1a7f
sw x3, 0(x2) # store 0x918daf21a5fe1a7f in memory
flh f1, 0(x2) # load 0x918daf21a5fe1a7f from memory into f1
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f26, 0(x2) # load 0x00000001 from memory into f26
fnmadd.h f5, f31, f1, f26, dyn # perform operation
fnmadd.h f5, f31, f1, f26, rdn # perform operation
fnmadd.h f5, f31, f1, f26, rmm # perform operation
fnmadd.h f5, f31, f1, f26, rne # perform operation
fnmadd.h f5, f31, f1, f26, rtz # perform operation
fnmadd.h f5, f31, f1, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f5, f31, f1, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f5, f31, f1, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f5, f31, f1, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f5, f31, f1, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f5, f31, f1, f26 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fff fs3 = 0x8001)
li x18, 0x91e176782d8de91b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f21, 0(x2) # load 0x00007fff from memory into f21
li x3, 0x4960dc23bdad906e # load x3 with value 0x4960dc23bdad906e
sw x3, 0(x2) # store 0x4960dc23bdad906e in memory
flh f11, 0(x2) # load 0x4960dc23bdad906e from memory into f11
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f24, 0(x2) # load 0x00008001 from memory into f24
fnmadd.h f18, f21, f11, f24, dyn # perform operation
fnmadd.h f18, f21, f11, f24, rdn # perform operation
fnmadd.h f18, f21, f11, f24, rmm # perform operation
fnmadd.h f18, f21, f11, f24, rne # perform operation
fnmadd.h f18, f21, f11, f24, rtz # perform operation
fnmadd.h f18, f21, f11, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f18, f21, f11, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f18, f21, f11, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f18, f21, f11, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f18, f21, f11, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f18, f21, f11, f24 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fff fs3 = 0x7c00)
li x4, 0xec866fc279a5455a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f12, 0(x2) # load 0x00007fff from memory into f12
li x3, 0xe2eee9357e5a38c6 # load x3 with value 0xe2eee9357e5a38c6
sw x3, 0(x2) # store 0xe2eee9357e5a38c6 in memory
flh f14, 0(x2) # load 0xe2eee9357e5a38c6 from memory into f14
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f16, 0(x2) # load 0x00007c00 from memory into f16
fnmadd.h f4, f12, f14, f16, dyn # perform operation
fnmadd.h f4, f12, f14, f16, rdn # perform operation
fnmadd.h f4, f12, f14, f16, rmm # perform operation
fnmadd.h f4, f12, f14, f16, rne # perform operation
fnmadd.h f4, f12, f14, f16, rtz # perform operation
fnmadd.h f4, f12, f14, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f4, f12, f14, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f4, f12, f14, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f4, f12, f14, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f4, f12, f14, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f4, f12, f14, f16 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fff fs3 = 0xfc00)
li x18, 0x2d855cc2907e8c5c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f15, 0(x2) # load 0x00007fff from memory into f15
li x3, 0xfba3812030833c57 # load x3 with value 0xfba3812030833c57
sw x3, 0(x2) # store 0xfba3812030833c57 in memory
flh f14, 0(x2) # load 0xfba3812030833c57 from memory into f14
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f11, 0(x2) # load 0x0000fc00 from memory into f11
fnmadd.h f18, f15, f14, f11, dyn # perform operation
fnmadd.h f18, f15, f14, f11, rdn # perform operation
fnmadd.h f18, f15, f14, f11, rmm # perform operation
fnmadd.h f18, f15, f14, f11, rne # perform operation
fnmadd.h f18, f15, f14, f11, rtz # perform operation
fnmadd.h f18, f15, f14, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f18, f15, f14, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f18, f15, f14, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f18, f15, f14, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f18, f15, f14, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f18, f15, f14, f11 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fff fs3 = 0x7e00)
li x21, 0x568b70fce0f2a877 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f5, 0(x2) # load 0x00007fff from memory into f5
li x3, 0x984721b18b1c7b5c # load x3 with value 0x984721b18b1c7b5c
sw x3, 0(x2) # store 0x984721b18b1c7b5c in memory
flh f23, 0(x2) # load 0x984721b18b1c7b5c from memory into f23
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f30, 0(x2) # load 0x00007e00 from memory into f30
fnmadd.h f21, f5, f23, f30, dyn # perform operation
fnmadd.h f21, f5, f23, f30, rdn # perform operation
fnmadd.h f21, f5, f23, f30, rmm # perform operation
fnmadd.h f21, f5, f23, f30, rne # perform operation
fnmadd.h f21, f5, f23, f30, rtz # perform operation
fnmadd.h f21, f5, f23, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f21, f5, f23, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f21, f5, f23, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f21, f5, f23, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f21, f5, f23, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f21, f5, f23, f30 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fff fs3 = 0x7fff)
li x6, 0xcf8203b5de33cf82 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f11, 0(x2) # load 0x00007fff from memory into f11
li x3, 0xcef3e1278dfa3c45 # load x3 with value 0xcef3e1278dfa3c45
sw x3, 0(x2) # store 0xcef3e1278dfa3c45 in memory
flh f30, 0(x2) # load 0xcef3e1278dfa3c45 from memory into f30
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f7, 0(x2) # load 0x00007fff from memory into f7
fnmadd.h f6, f11, f30, f7, dyn # perform operation
fnmadd.h f6, f11, f30, f7, rdn # perform operation
fnmadd.h f6, f11, f30, f7, rmm # perform operation
fnmadd.h f6, f11, f30, f7, rne # perform operation
fnmadd.h f6, f11, f30, f7, rtz # perform operation
fnmadd.h f6, f11, f30, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f6, f11, f30, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f6, f11, f30, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f6, f11, f30, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f6, f11, f30, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f6, f11, f30, f7 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fff fs3 = 0x7c01)
li x23, 0x0ee06390bef64f22 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f5, 0(x2) # load 0x00007fff from memory into f5
li x3, 0xf821e726b6969a4e # load x3 with value 0xf821e726b6969a4e
sw x3, 0(x2) # store 0xf821e726b6969a4e in memory
flh f26, 0(x2) # load 0xf821e726b6969a4e from memory into f26
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f25, 0(x2) # load 0x00007c01 from memory into f25
fnmadd.h f23, f5, f26, f25, dyn # perform operation
fnmadd.h f23, f5, f26, f25, rdn # perform operation
fnmadd.h f23, f5, f26, f25, rmm # perform operation
fnmadd.h f23, f5, f26, f25, rne # perform operation
fnmadd.h f23, f5, f26, f25, rtz # perform operation
fnmadd.h f23, f5, f26, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f23, f5, f26, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f23, f5, f26, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f23, f5, f26, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f23, f5, f26, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f23, f5, f26, f25 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fff fs3 = 0x7dff)
li x5, 0x4809e59c51da041c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f21, 0(x2) # load 0x00007fff from memory into f21
li x3, 0x4c06863484bc0dc0 # load x3 with value 0x4c06863484bc0dc0
sw x3, 0(x2) # store 0x4c06863484bc0dc0 in memory
flh f14, 0(x2) # load 0x4c06863484bc0dc0 from memory into f14
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f10, 0(x2) # load 0x00007dff from memory into f10
fnmadd.h f5, f21, f14, f10, dyn # perform operation
fnmadd.h f5, f21, f14, f10, rdn # perform operation
fnmadd.h f5, f21, f14, f10, rmm # perform operation
fnmadd.h f5, f21, f14, f10, rne # perform operation
fnmadd.h f5, f21, f14, f10, rtz # perform operation
fnmadd.h f5, f21, f14, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f5, f21, f14, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f5, f21, f14, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f5, f21, f14, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f5, f21, f14, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f5, f21, f14, f10 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fff fs3 = 0x58b4)
li x24, 0x5b29f148cf99f7d6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f27, 0(x2) # load 0x00007fff from memory into f27
li x3, 0x1c3968874c1d090a # load x3 with value 0x1c3968874c1d090a
sw x3, 0(x2) # store 0x1c3968874c1d090a in memory
flh f20, 0(x2) # load 0x1c3968874c1d090a from memory into f20
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f21, 0(x2) # load 0x000058b4 from memory into f21
fnmadd.h f24, f27, f20, f21, dyn # perform operation
fnmadd.h f24, f27, f20, f21, rdn # perform operation
fnmadd.h f24, f27, f20, f21, rmm # perform operation
fnmadd.h f24, f27, f20, f21, rne # perform operation
fnmadd.h f24, f27, f20, f21, rtz # perform operation
fnmadd.h f24, f27, f20, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f24, f27, f20, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f24, f27, f20, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f24, f27, f20, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f24, f27, f20, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f24, f27, f20, f21 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fff fs3 = 0xc93a)
li x18, 0xc913391b39106d41 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f17, 0(x2) # load 0x00007fff from memory into f17
li x3, 0xf5137c66dd5f1bef # load x3 with value 0xf5137c66dd5f1bef
sw x3, 0(x2) # store 0xf5137c66dd5f1bef in memory
flh f26, 0(x2) # load 0xf5137c66dd5f1bef from memory into f26
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f10, 0(x2) # load 0x0000c93a from memory into f10
fnmadd.h f18, f17, f26, f10, dyn # perform operation
fnmadd.h f18, f17, f26, f10, rdn # perform operation
fnmadd.h f18, f17, f26, f10, rmm # perform operation
fnmadd.h f18, f17, f26, f10, rne # perform operation
fnmadd.h f18, f17, f26, f10, rtz # perform operation
fnmadd.h f18, f17, f26, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f18, f17, f26, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f18, f17, f26, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f18, f17, f26, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f18, f17, f26, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f18, f17, f26, f10 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7c01 fs3 = 0x0)
li x9, 0xc6f3e00a38a9e7b1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f12, 0(x2) # load 0x00007c01 from memory into f12
li x3, 0xf99f95b3d819d38d # load x3 with value 0xf99f95b3d819d38d
sw x3, 0(x2) # store 0xf99f95b3d819d38d in memory
flh f1, 0(x2) # load 0xf99f95b3d819d38d from memory into f1
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f10, 0(x2) # load 0x00000000 from memory into f10
fnmadd.h f9, f12, f1, f10, dyn # perform operation
fnmadd.h f9, f12, f1, f10, rdn # perform operation
fnmadd.h f9, f12, f1, f10, rmm # perform operation
fnmadd.h f9, f12, f1, f10, rne # perform operation
fnmadd.h f9, f12, f1, f10, rtz # perform operation
fnmadd.h f9, f12, f1, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f9, f12, f1, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f9, f12, f1, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f9, f12, f1, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f9, f12, f1, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f9, f12, f1, f10 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7c01 fs3 = 0x8000)
li x29, 0x3ec6f768825f670e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f1, 0(x2) # load 0x00007c01 from memory into f1
li x3, 0xc27915b7fda6ba61 # load x3 with value 0xc27915b7fda6ba61
sw x3, 0(x2) # store 0xc27915b7fda6ba61 in memory
flh f25, 0(x2) # load 0xc27915b7fda6ba61 from memory into f25
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f4, 0(x2) # load 0x00008000 from memory into f4
fnmadd.h f29, f1, f25, f4, dyn # perform operation
fnmadd.h f29, f1, f25, f4, rdn # perform operation
fnmadd.h f29, f1, f25, f4, rmm # perform operation
fnmadd.h f29, f1, f25, f4, rne # perform operation
fnmadd.h f29, f1, f25, f4, rtz # perform operation
fnmadd.h f29, f1, f25, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f29, f1, f25, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f29, f1, f25, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f29, f1, f25, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f29, f1, f25, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f29, f1, f25, f4 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7c01 fs3 = 0x3c00)
li x28, 0x9dfd7111065447b0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f4, 0(x2) # load 0x00007c01 from memory into f4
li x3, 0xdc4e01434fc07f5c # load x3 with value 0xdc4e01434fc07f5c
sw x3, 0(x2) # store 0xdc4e01434fc07f5c in memory
flh f31, 0(x2) # load 0xdc4e01434fc07f5c from memory into f31
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f9, 0(x2) # load 0x00003c00 from memory into f9
fnmadd.h f28, f4, f31, f9, dyn # perform operation
fnmadd.h f28, f4, f31, f9, rdn # perform operation
fnmadd.h f28, f4, f31, f9, rmm # perform operation
fnmadd.h f28, f4, f31, f9, rne # perform operation
fnmadd.h f28, f4, f31, f9, rtz # perform operation
fnmadd.h f28, f4, f31, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f28, f4, f31, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f28, f4, f31, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f28, f4, f31, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f28, f4, f31, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f28, f4, f31, f9 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7c01 fs3 = 0xbc00)
li x10, 0xf4cda6ca4e4cbccf # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f7, 0(x2) # load 0x00007c01 from memory into f7
li x3, 0xdee3a1daa8ec47a7 # load x3 with value 0xdee3a1daa8ec47a7
sw x3, 0(x2) # store 0xdee3a1daa8ec47a7 in memory
flh f21, 0(x2) # load 0xdee3a1daa8ec47a7 from memory into f21
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f26, 0(x2) # load 0x0000bc00 from memory into f26
fnmadd.h f10, f7, f21, f26, dyn # perform operation
fnmadd.h f10, f7, f21, f26, rdn # perform operation
fnmadd.h f10, f7, f21, f26, rmm # perform operation
fnmadd.h f10, f7, f21, f26, rne # perform operation
fnmadd.h f10, f7, f21, f26, rtz # perform operation
fnmadd.h f10, f7, f21, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f10, f7, f21, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f10, f7, f21, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f10, f7, f21, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f10, f7, f21, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f10, f7, f21, f26 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7c01 fs3 = 0x3e00)
li x30, 0xf6b78f83dbf77adc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f9, 0(x2) # load 0x00007c01 from memory into f9
li x3, 0x8284a9692228bca6 # load x3 with value 0x8284a9692228bca6
sw x3, 0(x2) # store 0x8284a9692228bca6 in memory
flh f5, 0(x2) # load 0x8284a9692228bca6 from memory into f5
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f4, 0(x2) # load 0x00003e00 from memory into f4
fnmadd.h f30, f9, f5, f4, dyn # perform operation
fnmadd.h f30, f9, f5, f4, rdn # perform operation
fnmadd.h f30, f9, f5, f4, rmm # perform operation
fnmadd.h f30, f9, f5, f4, rne # perform operation
fnmadd.h f30, f9, f5, f4, rtz # perform operation
fnmadd.h f30, f9, f5, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f30, f9, f5, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f30, f9, f5, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f30, f9, f5, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f30, f9, f5, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f30, f9, f5, f4 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7c01 fs3 = 0xbe00)
li x22, 0x3052a0a19879ba8e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f24, 0(x2) # load 0x00007c01 from memory into f24
li x3, 0x563a2c83031261c # load x3 with value 0x563a2c83031261c
sw x3, 0(x2) # store 0x563a2c83031261c in memory
flh f26, 0(x2) # load 0x563a2c83031261c from memory into f26
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f9, 0(x2) # load 0x0000be00 from memory into f9
fnmadd.h f22, f24, f26, f9, dyn # perform operation
fnmadd.h f22, f24, f26, f9, rdn # perform operation
fnmadd.h f22, f24, f26, f9, rmm # perform operation
fnmadd.h f22, f24, f26, f9, rne # perform operation
fnmadd.h f22, f24, f26, f9, rtz # perform operation
fnmadd.h f22, f24, f26, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f22, f24, f26, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f22, f24, f26, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f22, f24, f26, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f22, f24, f26, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f22, f24, f26, f9 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7c01 fs3 = 0x4000)
li x19, 0x252fa1c7726b13ad # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f17, 0(x2) # load 0x00007c01 from memory into f17
li x3, 0x18be443c6b8be56d # load x3 with value 0x18be443c6b8be56d
sw x3, 0(x2) # store 0x18be443c6b8be56d in memory
flh f21, 0(x2) # load 0x18be443c6b8be56d from memory into f21
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f23, 0(x2) # load 0x00004000 from memory into f23
fnmadd.h f19, f17, f21, f23, dyn # perform operation
fnmadd.h f19, f17, f21, f23, rdn # perform operation
fnmadd.h f19, f17, f21, f23, rmm # perform operation
fnmadd.h f19, f17, f21, f23, rne # perform operation
fnmadd.h f19, f17, f21, f23, rtz # perform operation
fnmadd.h f19, f17, f21, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f19, f17, f21, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f19, f17, f21, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f19, f17, f21, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f19, f17, f21, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f19, f17, f21, f23 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7c01 fs3 = 0xc000)
li x24, 0x42e03b7881ad56e7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f19, 0(x2) # load 0x00007c01 from memory into f19
li x3, 0x2943a6b0c80420ff # load x3 with value 0x2943a6b0c80420ff
sw x3, 0(x2) # store 0x2943a6b0c80420ff in memory
flh f27, 0(x2) # load 0x2943a6b0c80420ff from memory into f27
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f31, 0(x2) # load 0x0000c000 from memory into f31
fnmadd.h f24, f19, f27, f31, dyn # perform operation
fnmadd.h f24, f19, f27, f31, rdn # perform operation
fnmadd.h f24, f19, f27, f31, rmm # perform operation
fnmadd.h f24, f19, f27, f31, rne # perform operation
fnmadd.h f24, f19, f27, f31, rtz # perform operation
fnmadd.h f24, f19, f27, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f24, f19, f27, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f24, f19, f27, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f24, f19, f27, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f24, f19, f27, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f24, f19, f27, f31 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7c01 fs3 = 0x400)
li x14, 0x937f76b2a7fda00a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f30, 0(x2) # load 0x00007c01 from memory into f30
li x3, 0x4ec010efa032b7b9 # load x3 with value 0x4ec010efa032b7b9
sw x3, 0(x2) # store 0x4ec010efa032b7b9 in memory
flh f13, 0(x2) # load 0x4ec010efa032b7b9 from memory into f13
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f4, 0(x2) # load 0x00000400 from memory into f4
fnmadd.h f14, f30, f13, f4, dyn # perform operation
fnmadd.h f14, f30, f13, f4, rdn # perform operation
fnmadd.h f14, f30, f13, f4, rmm # perform operation
fnmadd.h f14, f30, f13, f4, rne # perform operation
fnmadd.h f14, f30, f13, f4, rtz # perform operation
fnmadd.h f14, f30, f13, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f14, f30, f13, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f14, f30, f13, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f14, f30, f13, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f14, f30, f13, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f14, f30, f13, f4 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7c01 fs3 = 0x8400)
li x19, 0x66eb1051aea1b546 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f1, 0(x2) # load 0x00007c01 from memory into f1
li x3, 0x9dcc8bc61c248933 # load x3 with value 0x9dcc8bc61c248933
sw x3, 0(x2) # store 0x9dcc8bc61c248933 in memory
flh f14, 0(x2) # load 0x9dcc8bc61c248933 from memory into f14
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f18, 0(x2) # load 0x00008400 from memory into f18
fnmadd.h f19, f1, f14, f18, dyn # perform operation
fnmadd.h f19, f1, f14, f18, rdn # perform operation
fnmadd.h f19, f1, f14, f18, rmm # perform operation
fnmadd.h f19, f1, f14, f18, rne # perform operation
fnmadd.h f19, f1, f14, f18, rtz # perform operation
fnmadd.h f19, f1, f14, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f19, f1, f14, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f19, f1, f14, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f19, f1, f14, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f19, f1, f14, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f19, f1, f14, f18 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7c01 fs3 = 0x7bff)
li x4, 0xde8664ba3382b26a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f30, 0(x2) # load 0x00007c01 from memory into f30
li x3, 0x28a6eacabc446785 # load x3 with value 0x28a6eacabc446785
sw x3, 0(x2) # store 0x28a6eacabc446785 in memory
flh f22, 0(x2) # load 0x28a6eacabc446785 from memory into f22
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f10, 0(x2) # load 0x00007bff from memory into f10
fnmadd.h f4, f30, f22, f10, dyn # perform operation
fnmadd.h f4, f30, f22, f10, rdn # perform operation
fnmadd.h f4, f30, f22, f10, rmm # perform operation
fnmadd.h f4, f30, f22, f10, rne # perform operation
fnmadd.h f4, f30, f22, f10, rtz # perform operation
fnmadd.h f4, f30, f22, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f4, f30, f22, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f4, f30, f22, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f4, f30, f22, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f4, f30, f22, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f4, f30, f22, f10 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7c01 fs3 = 0xfbff)
li x11, 0xef081ba1f0b4f33b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f13, 0(x2) # load 0x00007c01 from memory into f13
li x3, 0x330260745a7a21e7 # load x3 with value 0x330260745a7a21e7
sw x3, 0(x2) # store 0x330260745a7a21e7 in memory
flh f18, 0(x2) # load 0x330260745a7a21e7 from memory into f18
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f28, 0(x2) # load 0x0000fbff from memory into f28
fnmadd.h f11, f13, f18, f28, dyn # perform operation
fnmadd.h f11, f13, f18, f28, rdn # perform operation
fnmadd.h f11, f13, f18, f28, rmm # perform operation
fnmadd.h f11, f13, f18, f28, rne # perform operation
fnmadd.h f11, f13, f18, f28, rtz # perform operation
fnmadd.h f11, f13, f18, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f11, f13, f18, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f11, f13, f18, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f11, f13, f18, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f11, f13, f18, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f11, f13, f18, f28 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7c01 fs3 = 0x3ff)
li x15, 0xde362ed73aac4a21 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f28, 0(x2) # load 0x00007c01 from memory into f28
li x3, 0xdc7cd8157c6f1df3 # load x3 with value 0xdc7cd8157c6f1df3
sw x3, 0(x2) # store 0xdc7cd8157c6f1df3 in memory
flh f19, 0(x2) # load 0xdc7cd8157c6f1df3 from memory into f19
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f5, 0(x2) # load 0x000003ff from memory into f5
fnmadd.h f15, f28, f19, f5, dyn # perform operation
fnmadd.h f15, f28, f19, f5, rdn # perform operation
fnmadd.h f15, f28, f19, f5, rmm # perform operation
fnmadd.h f15, f28, f19, f5, rne # perform operation
fnmadd.h f15, f28, f19, f5, rtz # perform operation
fnmadd.h f15, f28, f19, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f15, f28, f19, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f15, f28, f19, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f15, f28, f19, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f15, f28, f19, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f15, f28, f19, f5 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7c01 fs3 = 0x83ff)
li x15, 0x9ed039d7dacff777 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f2, 0(x2) # load 0x00007c01 from memory into f2
li x3, 0xadd0e58ce12631a1 # load x3 with value 0xadd0e58ce12631a1
sw x3, 0(x2) # store 0xadd0e58ce12631a1 in memory
flh f13, 0(x2) # load 0xadd0e58ce12631a1 from memory into f13
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f17, 0(x2) # load 0x000083ff from memory into f17
fnmadd.h f15, f2, f13, f17, dyn # perform operation
fnmadd.h f15, f2, f13, f17, rdn # perform operation
fnmadd.h f15, f2, f13, f17, rmm # perform operation
fnmadd.h f15, f2, f13, f17, rne # perform operation
fnmadd.h f15, f2, f13, f17, rtz # perform operation
fnmadd.h f15, f2, f13, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f15, f2, f13, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f15, f2, f13, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f15, f2, f13, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f15, f2, f13, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f15, f2, f13, f17 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7c01 fs3 = 0x200)
li x27, 0x306bb4ac1daa69fd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f15, 0(x2) # load 0x00007c01 from memory into f15
li x3, 0xfeb4a9e75f5c3803 # load x3 with value 0xfeb4a9e75f5c3803
sw x3, 0(x2) # store 0xfeb4a9e75f5c3803 in memory
flh f28, 0(x2) # load 0xfeb4a9e75f5c3803 from memory into f28
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f3, 0(x2) # load 0x00000200 from memory into f3
fnmadd.h f27, f15, f28, f3, dyn # perform operation
fnmadd.h f27, f15, f28, f3, rdn # perform operation
fnmadd.h f27, f15, f28, f3, rmm # perform operation
fnmadd.h f27, f15, f28, f3, rne # perform operation
fnmadd.h f27, f15, f28, f3, rtz # perform operation
fnmadd.h f27, f15, f28, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f27, f15, f28, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f27, f15, f28, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f27, f15, f28, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f27, f15, f28, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f27, f15, f28, f3 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7c01 fs3 = 0x8200)
li x22, 0xec25249038522532 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f8, 0(x2) # load 0x00007c01 from memory into f8
li x3, 0x9d20a3937a6d8276 # load x3 with value 0x9d20a3937a6d8276
sw x3, 0(x2) # store 0x9d20a3937a6d8276 in memory
flh f25, 0(x2) # load 0x9d20a3937a6d8276 from memory into f25
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f1, 0(x2) # load 0x00008200 from memory into f1
fnmadd.h f22, f8, f25, f1, dyn # perform operation
fnmadd.h f22, f8, f25, f1, rdn # perform operation
fnmadd.h f22, f8, f25, f1, rmm # perform operation
fnmadd.h f22, f8, f25, f1, rne # perform operation
fnmadd.h f22, f8, f25, f1, rtz # perform operation
fnmadd.h f22, f8, f25, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f22, f8, f25, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f22, f8, f25, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f22, f8, f25, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f22, f8, f25, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f22, f8, f25, f1 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7c01 fs3 = 0x1)
li x6, 0x3cb44cf20904859e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f16, 0(x2) # load 0x00007c01 from memory into f16
li x3, 0x235c29799900f149 # load x3 with value 0x235c29799900f149
sw x3, 0(x2) # store 0x235c29799900f149 in memory
flh f14, 0(x2) # load 0x235c29799900f149 from memory into f14
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f3, 0(x2) # load 0x00000001 from memory into f3
fnmadd.h f6, f16, f14, f3, dyn # perform operation
fnmadd.h f6, f16, f14, f3, rdn # perform operation
fnmadd.h f6, f16, f14, f3, rmm # perform operation
fnmadd.h f6, f16, f14, f3, rne # perform operation
fnmadd.h f6, f16, f14, f3, rtz # perform operation
fnmadd.h f6, f16, f14, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f6, f16, f14, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f6, f16, f14, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f6, f16, f14, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f6, f16, f14, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f6, f16, f14, f3 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7c01 fs3 = 0x8001)
li x6, 0xa4d7f71b9db9b12e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f28, 0(x2) # load 0x00007c01 from memory into f28
li x3, 0x705ed5c9b865e7c5 # load x3 with value 0x705ed5c9b865e7c5
sw x3, 0(x2) # store 0x705ed5c9b865e7c5 in memory
flh f4, 0(x2) # load 0x705ed5c9b865e7c5 from memory into f4
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f2, 0(x2) # load 0x00008001 from memory into f2
fnmadd.h f6, f28, f4, f2, dyn # perform operation
fnmadd.h f6, f28, f4, f2, rdn # perform operation
fnmadd.h f6, f28, f4, f2, rmm # perform operation
fnmadd.h f6, f28, f4, f2, rne # perform operation
fnmadd.h f6, f28, f4, f2, rtz # perform operation
fnmadd.h f6, f28, f4, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f6, f28, f4, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f6, f28, f4, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f6, f28, f4, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f6, f28, f4, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f6, f28, f4, f2 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7c01 fs3 = 0x7c00)
li x4, 0x865cf689e6c1408f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f1, 0(x2) # load 0x00007c01 from memory into f1
li x3, 0xa650738a738440ee # load x3 with value 0xa650738a738440ee
sw x3, 0(x2) # store 0xa650738a738440ee in memory
flh f21, 0(x2) # load 0xa650738a738440ee from memory into f21
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f15, 0(x2) # load 0x00007c00 from memory into f15
fnmadd.h f4, f1, f21, f15, dyn # perform operation
fnmadd.h f4, f1, f21, f15, rdn # perform operation
fnmadd.h f4, f1, f21, f15, rmm # perform operation
fnmadd.h f4, f1, f21, f15, rne # perform operation
fnmadd.h f4, f1, f21, f15, rtz # perform operation
fnmadd.h f4, f1, f21, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f4, f1, f21, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f4, f1, f21, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f4, f1, f21, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f4, f1, f21, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f4, f1, f21, f15 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7c01 fs3 = 0xfc00)
li x12, 0x5a329a52ac5c52db # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f31, 0(x2) # load 0x00007c01 from memory into f31
li x3, 0xd3de4d0bff9572a6 # load x3 with value 0xd3de4d0bff9572a6
sw x3, 0(x2) # store 0xd3de4d0bff9572a6 in memory
flh f17, 0(x2) # load 0xd3de4d0bff9572a6 from memory into f17
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f5, 0(x2) # load 0x0000fc00 from memory into f5
fnmadd.h f12, f31, f17, f5, dyn # perform operation
fnmadd.h f12, f31, f17, f5, rdn # perform operation
fnmadd.h f12, f31, f17, f5, rmm # perform operation
fnmadd.h f12, f31, f17, f5, rne # perform operation
fnmadd.h f12, f31, f17, f5, rtz # perform operation
fnmadd.h f12, f31, f17, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f12, f31, f17, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f12, f31, f17, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f12, f31, f17, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f12, f31, f17, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f12, f31, f17, f5 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7c01 fs3 = 0x7e00)
li x11, 0x56f61f0b6f4fb07c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f12, 0(x2) # load 0x00007c01 from memory into f12
li x3, 0x361a9eed563cc5e1 # load x3 with value 0x361a9eed563cc5e1
sw x3, 0(x2) # store 0x361a9eed563cc5e1 in memory
flh f14, 0(x2) # load 0x361a9eed563cc5e1 from memory into f14
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f5, 0(x2) # load 0x00007e00 from memory into f5
fnmadd.h f11, f12, f14, f5, dyn # perform operation
fnmadd.h f11, f12, f14, f5, rdn # perform operation
fnmadd.h f11, f12, f14, f5, rmm # perform operation
fnmadd.h f11, f12, f14, f5, rne # perform operation
fnmadd.h f11, f12, f14, f5, rtz # perform operation
fnmadd.h f11, f12, f14, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f11, f12, f14, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f11, f12, f14, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f11, f12, f14, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f11, f12, f14, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f11, f12, f14, f5 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7c01 fs3 = 0x7fff)
li x6, 0xc4f241ac3581ccdc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f11, 0(x2) # load 0x00007c01 from memory into f11
li x3, 0xc987857aab496273 # load x3 with value 0xc987857aab496273
sw x3, 0(x2) # store 0xc987857aab496273 in memory
flh f8, 0(x2) # load 0xc987857aab496273 from memory into f8
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f1, 0(x2) # load 0x00007fff from memory into f1
fnmadd.h f6, f11, f8, f1, dyn # perform operation
fnmadd.h f6, f11, f8, f1, rdn # perform operation
fnmadd.h f6, f11, f8, f1, rmm # perform operation
fnmadd.h f6, f11, f8, f1, rne # perform operation
fnmadd.h f6, f11, f8, f1, rtz # perform operation
fnmadd.h f6, f11, f8, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f6, f11, f8, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f6, f11, f8, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f6, f11, f8, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f6, f11, f8, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f6, f11, f8, f1 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7c01 fs3 = 0x7c01)
li x1, 0xcf6f407ccfb3d980 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f13, 0(x2) # load 0x00007c01 from memory into f13
li x3, 0xe888258e6f4ab3c6 # load x3 with value 0xe888258e6f4ab3c6
sw x3, 0(x2) # store 0xe888258e6f4ab3c6 in memory
flh f14, 0(x2) # load 0xe888258e6f4ab3c6 from memory into f14
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f26, 0(x2) # load 0x00007c01 from memory into f26
fnmadd.h f1, f13, f14, f26, dyn # perform operation
fnmadd.h f1, f13, f14, f26, rdn # perform operation
fnmadd.h f1, f13, f14, f26, rmm # perform operation
fnmadd.h f1, f13, f14, f26, rne # perform operation
fnmadd.h f1, f13, f14, f26, rtz # perform operation
fnmadd.h f1, f13, f14, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f1, f13, f14, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f1, f13, f14, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f1, f13, f14, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f1, f13, f14, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f1, f13, f14, f26 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7c01 fs3 = 0x7dff)
li x1, 0xe014c43d0bc14c2b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f19, 0(x2) # load 0x00007c01 from memory into f19
li x3, 0x4cb32a8002ee42a4 # load x3 with value 0x4cb32a8002ee42a4
sw x3, 0(x2) # store 0x4cb32a8002ee42a4 in memory
flh f17, 0(x2) # load 0x4cb32a8002ee42a4 from memory into f17
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f27, 0(x2) # load 0x00007dff from memory into f27
fnmadd.h f1, f19, f17, f27, dyn # perform operation
fnmadd.h f1, f19, f17, f27, rdn # perform operation
fnmadd.h f1, f19, f17, f27, rmm # perform operation
fnmadd.h f1, f19, f17, f27, rne # perform operation
fnmadd.h f1, f19, f17, f27, rtz # perform operation
fnmadd.h f1, f19, f17, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f1, f19, f17, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f1, f19, f17, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f1, f19, f17, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f1, f19, f17, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f1, f19, f17, f27 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7c01 fs3 = 0x58b4)
li x1, 0xf7ab0581f57c8446 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f13, 0(x2) # load 0x00007c01 from memory into f13
li x3, 0xe5a3e134a651ad56 # load x3 with value 0xe5a3e134a651ad56
sw x3, 0(x2) # store 0xe5a3e134a651ad56 in memory
flh f23, 0(x2) # load 0xe5a3e134a651ad56 from memory into f23
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f8, 0(x2) # load 0x000058b4 from memory into f8
fnmadd.h f1, f13, f23, f8, dyn # perform operation
fnmadd.h f1, f13, f23, f8, rdn # perform operation
fnmadd.h f1, f13, f23, f8, rmm # perform operation
fnmadd.h f1, f13, f23, f8, rne # perform operation
fnmadd.h f1, f13, f23, f8, rtz # perform operation
fnmadd.h f1, f13, f23, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f1, f13, f23, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f1, f13, f23, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f1, f13, f23, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f1, f13, f23, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f1, f13, f23, f8 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7c01 fs3 = 0xc93a)
li x16, 0x72ed215a4c353962 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f20, 0(x2) # load 0x00007c01 from memory into f20
li x3, 0xc6758e0657973646 # load x3 with value 0xc6758e0657973646
sw x3, 0(x2) # store 0xc6758e0657973646 in memory
flh f6, 0(x2) # load 0xc6758e0657973646 from memory into f6
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f22, 0(x2) # load 0x0000c93a from memory into f22
fnmadd.h f16, f20, f6, f22, dyn # perform operation
fnmadd.h f16, f20, f6, f22, rdn # perform operation
fnmadd.h f16, f20, f6, f22, rmm # perform operation
fnmadd.h f16, f20, f6, f22, rne # perform operation
fnmadd.h f16, f20, f6, f22, rtz # perform operation
fnmadd.h f16, f20, f6, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f16, f20, f6, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f16, f20, f6, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f16, f20, f6, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f16, f20, f6, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f16, f20, f6, f22 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7dff fs3 = 0x0)
li x10, 0x8ed48022e1a3e177 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f12, 0(x2) # load 0x00007dff from memory into f12
li x3, 0x92a029b144bbe8a0 # load x3 with value 0x92a029b144bbe8a0
sw x3, 0(x2) # store 0x92a029b144bbe8a0 in memory
flh f15, 0(x2) # load 0x92a029b144bbe8a0 from memory into f15
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f13, 0(x2) # load 0x00000000 from memory into f13
fnmadd.h f10, f12, f15, f13, dyn # perform operation
fnmadd.h f10, f12, f15, f13, rdn # perform operation
fnmadd.h f10, f12, f15, f13, rmm # perform operation
fnmadd.h f10, f12, f15, f13, rne # perform operation
fnmadd.h f10, f12, f15, f13, rtz # perform operation
fnmadd.h f10, f12, f15, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f10, f12, f15, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f10, f12, f15, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f10, f12, f15, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f10, f12, f15, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f10, f12, f15, f13 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7dff fs3 = 0x8000)
li x2, 0xc3b0003a51732f97 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f29, 0(x2) # load 0x00007dff from memory into f29
li x3, 0xf464bd33a60abff2 # load x3 with value 0xf464bd33a60abff2
sw x3, 0(x2) # store 0xf464bd33a60abff2 in memory
flh f4, 0(x2) # load 0xf464bd33a60abff2 from memory into f4
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f14, 0(x2) # load 0x00008000 from memory into f14
fnmadd.h f2, f29, f4, f14, dyn # perform operation
fnmadd.h f2, f29, f4, f14, rdn # perform operation
fnmadd.h f2, f29, f4, f14, rmm # perform operation
fnmadd.h f2, f29, f4, f14, rne # perform operation
fnmadd.h f2, f29, f4, f14, rtz # perform operation
fnmadd.h f2, f29, f4, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f2, f29, f4, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f2, f29, f4, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f2, f29, f4, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f2, f29, f4, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f2, f29, f4, f14 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7dff fs3 = 0x3c00)
li x20, 0xb1bac7e8dc00bef7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f7, 0(x2) # load 0x00007dff from memory into f7
li x3, 0x554681dade947efc # load x3 with value 0x554681dade947efc
sw x3, 0(x2) # store 0x554681dade947efc in memory
flh f5, 0(x2) # load 0x554681dade947efc from memory into f5
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f6, 0(x2) # load 0x00003c00 from memory into f6
fnmadd.h f20, f7, f5, f6, dyn # perform operation
fnmadd.h f20, f7, f5, f6, rdn # perform operation
fnmadd.h f20, f7, f5, f6, rmm # perform operation
fnmadd.h f20, f7, f5, f6, rne # perform operation
fnmadd.h f20, f7, f5, f6, rtz # perform operation
fnmadd.h f20, f7, f5, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f20, f7, f5, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f20, f7, f5, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f20, f7, f5, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f20, f7, f5, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f20, f7, f5, f6 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7dff fs3 = 0xbc00)
li x9, 0xf7a0e31dde0f1883 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f22, 0(x2) # load 0x00007dff from memory into f22
li x3, 0x67d5a0c3cbbb5442 # load x3 with value 0x67d5a0c3cbbb5442
sw x3, 0(x2) # store 0x67d5a0c3cbbb5442 in memory
flh f8, 0(x2) # load 0x67d5a0c3cbbb5442 from memory into f8
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f3, 0(x2) # load 0x0000bc00 from memory into f3
fnmadd.h f9, f22, f8, f3, dyn # perform operation
fnmadd.h f9, f22, f8, f3, rdn # perform operation
fnmadd.h f9, f22, f8, f3, rmm # perform operation
fnmadd.h f9, f22, f8, f3, rne # perform operation
fnmadd.h f9, f22, f8, f3, rtz # perform operation
fnmadd.h f9, f22, f8, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f9, f22, f8, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f9, f22, f8, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f9, f22, f8, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f9, f22, f8, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f9, f22, f8, f3 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7dff fs3 = 0x3e00)
li x30, 0xf2af8a7bb291304f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f10, 0(x2) # load 0x00007dff from memory into f10
li x3, 0xe15f2c05697dc405 # load x3 with value 0xe15f2c05697dc405
sw x3, 0(x2) # store 0xe15f2c05697dc405 in memory
flh f23, 0(x2) # load 0xe15f2c05697dc405 from memory into f23
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f7, 0(x2) # load 0x00003e00 from memory into f7
fnmadd.h f30, f10, f23, f7, dyn # perform operation
fnmadd.h f30, f10, f23, f7, rdn # perform operation
fnmadd.h f30, f10, f23, f7, rmm # perform operation
fnmadd.h f30, f10, f23, f7, rne # perform operation
fnmadd.h f30, f10, f23, f7, rtz # perform operation
fnmadd.h f30, f10, f23, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f30, f10, f23, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f30, f10, f23, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f30, f10, f23, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f30, f10, f23, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f30, f10, f23, f7 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7dff fs3 = 0xbe00)
li x7, 0x7071d9fe374ddc7e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f24, 0(x2) # load 0x00007dff from memory into f24
li x3, 0x654029fb2bbd4910 # load x3 with value 0x654029fb2bbd4910
sw x3, 0(x2) # store 0x654029fb2bbd4910 in memory
flh f18, 0(x2) # load 0x654029fb2bbd4910 from memory into f18
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f5, 0(x2) # load 0x0000be00 from memory into f5
fnmadd.h f7, f24, f18, f5, dyn # perform operation
fnmadd.h f7, f24, f18, f5, rdn # perform operation
fnmadd.h f7, f24, f18, f5, rmm # perform operation
fnmadd.h f7, f24, f18, f5, rne # perform operation
fnmadd.h f7, f24, f18, f5, rtz # perform operation
fnmadd.h f7, f24, f18, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f7, f24, f18, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f7, f24, f18, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f7, f24, f18, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f7, f24, f18, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f7, f24, f18, f5 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7dff fs3 = 0x4000)
li x4, 0x372d95965590192f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f9, 0(x2) # load 0x00007dff from memory into f9
li x3, 0x1c81875126299982 # load x3 with value 0x1c81875126299982
sw x3, 0(x2) # store 0x1c81875126299982 in memory
flh f11, 0(x2) # load 0x1c81875126299982 from memory into f11
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f25, 0(x2) # load 0x00004000 from memory into f25
fnmadd.h f4, f9, f11, f25, dyn # perform operation
fnmadd.h f4, f9, f11, f25, rdn # perform operation
fnmadd.h f4, f9, f11, f25, rmm # perform operation
fnmadd.h f4, f9, f11, f25, rne # perform operation
fnmadd.h f4, f9, f11, f25, rtz # perform operation
fnmadd.h f4, f9, f11, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f4, f9, f11, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f4, f9, f11, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f4, f9, f11, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f4, f9, f11, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f4, f9, f11, f25 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7dff fs3 = 0xc000)
li x26, 0x4b4a01fb879d17b2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f6, 0(x2) # load 0x00007dff from memory into f6
li x3, 0x47cfcc7c868fcff8 # load x3 with value 0x47cfcc7c868fcff8
sw x3, 0(x2) # store 0x47cfcc7c868fcff8 in memory
flh f18, 0(x2) # load 0x47cfcc7c868fcff8 from memory into f18
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f20, 0(x2) # load 0x0000c000 from memory into f20
fnmadd.h f26, f6, f18, f20, dyn # perform operation
fnmadd.h f26, f6, f18, f20, rdn # perform operation
fnmadd.h f26, f6, f18, f20, rmm # perform operation
fnmadd.h f26, f6, f18, f20, rne # perform operation
fnmadd.h f26, f6, f18, f20, rtz # perform operation
fnmadd.h f26, f6, f18, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f26, f6, f18, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f26, f6, f18, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f26, f6, f18, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f26, f6, f18, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f26, f6, f18, f20 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7dff fs3 = 0x400)
li x16, 0xafa293d8827d8366 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f10, 0(x2) # load 0x00007dff from memory into f10
li x3, 0xdd7504cda2688136 # load x3 with value 0xdd7504cda2688136
sw x3, 0(x2) # store 0xdd7504cda2688136 in memory
flh f27, 0(x2) # load 0xdd7504cda2688136 from memory into f27
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f18, 0(x2) # load 0x00000400 from memory into f18
fnmadd.h f16, f10, f27, f18, dyn # perform operation
fnmadd.h f16, f10, f27, f18, rdn # perform operation
fnmadd.h f16, f10, f27, f18, rmm # perform operation
fnmadd.h f16, f10, f27, f18, rne # perform operation
fnmadd.h f16, f10, f27, f18, rtz # perform operation
fnmadd.h f16, f10, f27, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f16, f10, f27, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f16, f10, f27, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f16, f10, f27, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f16, f10, f27, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f16, f10, f27, f18 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7dff fs3 = 0x8400)
li x28, 0x2c75240856b8dc1b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f21, 0(x2) # load 0x00007dff from memory into f21
li x3, 0xe56829e46f5df77c # load x3 with value 0xe56829e46f5df77c
sw x3, 0(x2) # store 0xe56829e46f5df77c in memory
flh f22, 0(x2) # load 0xe56829e46f5df77c from memory into f22
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f5, 0(x2) # load 0x00008400 from memory into f5
fnmadd.h f28, f21, f22, f5, dyn # perform operation
fnmadd.h f28, f21, f22, f5, rdn # perform operation
fnmadd.h f28, f21, f22, f5, rmm # perform operation
fnmadd.h f28, f21, f22, f5, rne # perform operation
fnmadd.h f28, f21, f22, f5, rtz # perform operation
fnmadd.h f28, f21, f22, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f28, f21, f22, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f28, f21, f22, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f28, f21, f22, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f28, f21, f22, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f28, f21, f22, f5 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7dff fs3 = 0x7bff)
li x21, 0xfa16b64f17659fe3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f8, 0(x2) # load 0x00007dff from memory into f8
li x3, 0x71c263165cc5eaeb # load x3 with value 0x71c263165cc5eaeb
sw x3, 0(x2) # store 0x71c263165cc5eaeb in memory
flh f30, 0(x2) # load 0x71c263165cc5eaeb from memory into f30
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f20, 0(x2) # load 0x00007bff from memory into f20
fnmadd.h f21, f8, f30, f20, dyn # perform operation
fnmadd.h f21, f8, f30, f20, rdn # perform operation
fnmadd.h f21, f8, f30, f20, rmm # perform operation
fnmadd.h f21, f8, f30, f20, rne # perform operation
fnmadd.h f21, f8, f30, f20, rtz # perform operation
fnmadd.h f21, f8, f30, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f21, f8, f30, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f21, f8, f30, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f21, f8, f30, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f21, f8, f30, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f21, f8, f30, f20 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7dff fs3 = 0xfbff)
li x21, 0xb92f1bdad2d0ebc6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f5, 0(x2) # load 0x00007dff from memory into f5
li x3, 0x99accec414872911 # load x3 with value 0x99accec414872911
sw x3, 0(x2) # store 0x99accec414872911 in memory
flh f9, 0(x2) # load 0x99accec414872911 from memory into f9
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f6, 0(x2) # load 0x0000fbff from memory into f6
fnmadd.h f21, f5, f9, f6, dyn # perform operation
fnmadd.h f21, f5, f9, f6, rdn # perform operation
fnmadd.h f21, f5, f9, f6, rmm # perform operation
fnmadd.h f21, f5, f9, f6, rne # perform operation
fnmadd.h f21, f5, f9, f6, rtz # perform operation
fnmadd.h f21, f5, f9, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f21, f5, f9, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f21, f5, f9, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f21, f5, f9, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f21, f5, f9, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f21, f5, f9, f6 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7dff fs3 = 0x3ff)
li x21, 0x3ff1455718ad80b1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f13, 0(x2) # load 0x00007dff from memory into f13
li x3, 0xbaa908a8b85a3de4 # load x3 with value 0xbaa908a8b85a3de4
sw x3, 0(x2) # store 0xbaa908a8b85a3de4 in memory
flh f3, 0(x2) # load 0xbaa908a8b85a3de4 from memory into f3
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f11, 0(x2) # load 0x000003ff from memory into f11
fnmadd.h f21, f13, f3, f11, dyn # perform operation
fnmadd.h f21, f13, f3, f11, rdn # perform operation
fnmadd.h f21, f13, f3, f11, rmm # perform operation
fnmadd.h f21, f13, f3, f11, rne # perform operation
fnmadd.h f21, f13, f3, f11, rtz # perform operation
fnmadd.h f21, f13, f3, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f21, f13, f3, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f21, f13, f3, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f21, f13, f3, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f21, f13, f3, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f21, f13, f3, f11 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7dff fs3 = 0x83ff)
li x12, 0x71c22ba6b29274e1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f26, 0(x2) # load 0x00007dff from memory into f26
li x3, 0x2c963c971c94a7a7 # load x3 with value 0x2c963c971c94a7a7
sw x3, 0(x2) # store 0x2c963c971c94a7a7 in memory
flh f22, 0(x2) # load 0x2c963c971c94a7a7 from memory into f22
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f16, 0(x2) # load 0x000083ff from memory into f16
fnmadd.h f12, f26, f22, f16, dyn # perform operation
fnmadd.h f12, f26, f22, f16, rdn # perform operation
fnmadd.h f12, f26, f22, f16, rmm # perform operation
fnmadd.h f12, f26, f22, f16, rne # perform operation
fnmadd.h f12, f26, f22, f16, rtz # perform operation
fnmadd.h f12, f26, f22, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f12, f26, f22, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f12, f26, f22, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f12, f26, f22, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f12, f26, f22, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f12, f26, f22, f16 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7dff fs3 = 0x200)
li x22, 0x0036fa40204960ed # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f3, 0(x2) # load 0x00007dff from memory into f3
li x3, 0x4002b4571d32cc16 # load x3 with value 0x4002b4571d32cc16
sw x3, 0(x2) # store 0x4002b4571d32cc16 in memory
flh f31, 0(x2) # load 0x4002b4571d32cc16 from memory into f31
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f12, 0(x2) # load 0x00000200 from memory into f12
fnmadd.h f22, f3, f31, f12, dyn # perform operation
fnmadd.h f22, f3, f31, f12, rdn # perform operation
fnmadd.h f22, f3, f31, f12, rmm # perform operation
fnmadd.h f22, f3, f31, f12, rne # perform operation
fnmadd.h f22, f3, f31, f12, rtz # perform operation
fnmadd.h f22, f3, f31, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f22, f3, f31, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f22, f3, f31, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f22, f3, f31, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f22, f3, f31, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f22, f3, f31, f12 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7dff fs3 = 0x8200)
li x12, 0xc2162b4dd1485afb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f4, 0(x2) # load 0x00007dff from memory into f4
li x3, 0x8721fb1360c08600 # load x3 with value 0x8721fb1360c08600
sw x3, 0(x2) # store 0x8721fb1360c08600 in memory
flh f13, 0(x2) # load 0x8721fb1360c08600 from memory into f13
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f23, 0(x2) # load 0x00008200 from memory into f23
fnmadd.h f12, f4, f13, f23, dyn # perform operation
fnmadd.h f12, f4, f13, f23, rdn # perform operation
fnmadd.h f12, f4, f13, f23, rmm # perform operation
fnmadd.h f12, f4, f13, f23, rne # perform operation
fnmadd.h f12, f4, f13, f23, rtz # perform operation
fnmadd.h f12, f4, f13, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f12, f4, f13, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f12, f4, f13, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f12, f4, f13, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f12, f4, f13, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f12, f4, f13, f23 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7dff fs3 = 0x1)
li x13, 0x5562a3221bd4441e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f18, 0(x2) # load 0x00007dff from memory into f18
li x3, 0xc0c1df76c68fb76c # load x3 with value 0xc0c1df76c68fb76c
sw x3, 0(x2) # store 0xc0c1df76c68fb76c in memory
flh f7, 0(x2) # load 0xc0c1df76c68fb76c from memory into f7
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f25, 0(x2) # load 0x00000001 from memory into f25
fnmadd.h f13, f18, f7, f25, dyn # perform operation
fnmadd.h f13, f18, f7, f25, rdn # perform operation
fnmadd.h f13, f18, f7, f25, rmm # perform operation
fnmadd.h f13, f18, f7, f25, rne # perform operation
fnmadd.h f13, f18, f7, f25, rtz # perform operation
fnmadd.h f13, f18, f7, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f13, f18, f7, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f13, f18, f7, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f13, f18, f7, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f13, f18, f7, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f13, f18, f7, f25 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7dff fs3 = 0x8001)
li x11, 0xdc79b83da7f427ca # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f15, 0(x2) # load 0x00007dff from memory into f15
li x3, 0x58147d128a4c3c2d # load x3 with value 0x58147d128a4c3c2d
sw x3, 0(x2) # store 0x58147d128a4c3c2d in memory
flh f22, 0(x2) # load 0x58147d128a4c3c2d from memory into f22
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f24, 0(x2) # load 0x00008001 from memory into f24
fnmadd.h f11, f15, f22, f24, dyn # perform operation
fnmadd.h f11, f15, f22, f24, rdn # perform operation
fnmadd.h f11, f15, f22, f24, rmm # perform operation
fnmadd.h f11, f15, f22, f24, rne # perform operation
fnmadd.h f11, f15, f22, f24, rtz # perform operation
fnmadd.h f11, f15, f22, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f11, f15, f22, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f11, f15, f22, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f11, f15, f22, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f11, f15, f22, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f11, f15, f22, f24 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7dff fs3 = 0x7c00)
li x3, 0x7196d92339b8a124 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f8, 0(x2) # load 0x00007dff from memory into f8
li x3, 0xa4d9b9105ba0cba2 # load x3 with value 0xa4d9b9105ba0cba2
sw x3, 0(x2) # store 0xa4d9b9105ba0cba2 in memory
flh f2, 0(x2) # load 0xa4d9b9105ba0cba2 from memory into f2
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f10, 0(x2) # load 0x00007c00 from memory into f10
fnmadd.h f3, f8, f2, f10, dyn # perform operation
fnmadd.h f3, f8, f2, f10, rdn # perform operation
fnmadd.h f3, f8, f2, f10, rmm # perform operation
fnmadd.h f3, f8, f2, f10, rne # perform operation
fnmadd.h f3, f8, f2, f10, rtz # perform operation
fnmadd.h f3, f8, f2, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f3, f8, f2, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f3, f8, f2, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f3, f8, f2, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f3, f8, f2, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f3, f8, f2, f10 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7dff fs3 = 0xfc00)
li x5, 0xd77e727e9e37047e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f26, 0(x2) # load 0x00007dff from memory into f26
li x3, 0x549ab7b57c9352cd # load x3 with value 0x549ab7b57c9352cd
sw x3, 0(x2) # store 0x549ab7b57c9352cd in memory
flh f7, 0(x2) # load 0x549ab7b57c9352cd from memory into f7
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f21, 0(x2) # load 0x0000fc00 from memory into f21
fnmadd.h f5, f26, f7, f21, dyn # perform operation
fnmadd.h f5, f26, f7, f21, rdn # perform operation
fnmadd.h f5, f26, f7, f21, rmm # perform operation
fnmadd.h f5, f26, f7, f21, rne # perform operation
fnmadd.h f5, f26, f7, f21, rtz # perform operation
fnmadd.h f5, f26, f7, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f5, f26, f7, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f5, f26, f7, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f5, f26, f7, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f5, f26, f7, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f5, f26, f7, f21 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7dff fs3 = 0x7e00)
li x13, 0x9f90e6585c1b8688 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f10, 0(x2) # load 0x00007dff from memory into f10
li x3, 0x7c5233f1146e2256 # load x3 with value 0x7c5233f1146e2256
sw x3, 0(x2) # store 0x7c5233f1146e2256 in memory
flh f26, 0(x2) # load 0x7c5233f1146e2256 from memory into f26
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f17, 0(x2) # load 0x00007e00 from memory into f17
fnmadd.h f13, f10, f26, f17, dyn # perform operation
fnmadd.h f13, f10, f26, f17, rdn # perform operation
fnmadd.h f13, f10, f26, f17, rmm # perform operation
fnmadd.h f13, f10, f26, f17, rne # perform operation
fnmadd.h f13, f10, f26, f17, rtz # perform operation
fnmadd.h f13, f10, f26, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f13, f10, f26, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f13, f10, f26, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f13, f10, f26, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f13, f10, f26, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f13, f10, f26, f17 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7dff fs3 = 0x7fff)
li x15, 0x3dc0575659fb9b61 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f6, 0(x2) # load 0x00007dff from memory into f6
li x3, 0x83831d41780c9158 # load x3 with value 0x83831d41780c9158
sw x3, 0(x2) # store 0x83831d41780c9158 in memory
flh f8, 0(x2) # load 0x83831d41780c9158 from memory into f8
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f10, 0(x2) # load 0x00007fff from memory into f10
fnmadd.h f15, f6, f8, f10, dyn # perform operation
fnmadd.h f15, f6, f8, f10, rdn # perform operation
fnmadd.h f15, f6, f8, f10, rmm # perform operation
fnmadd.h f15, f6, f8, f10, rne # perform operation
fnmadd.h f15, f6, f8, f10, rtz # perform operation
fnmadd.h f15, f6, f8, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f15, f6, f8, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f15, f6, f8, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f15, f6, f8, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f15, f6, f8, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f15, f6, f8, f10 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7dff fs3 = 0x7c01)
li x3, 0x983b74f3ff07a603 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f18, 0(x2) # load 0x00007dff from memory into f18
li x3, 0xe1e7eded61a62bf8 # load x3 with value 0xe1e7eded61a62bf8
sw x3, 0(x2) # store 0xe1e7eded61a62bf8 in memory
flh f9, 0(x2) # load 0xe1e7eded61a62bf8 from memory into f9
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f25, 0(x2) # load 0x00007c01 from memory into f25
fnmadd.h f3, f18, f9, f25, dyn # perform operation
fnmadd.h f3, f18, f9, f25, rdn # perform operation
fnmadd.h f3, f18, f9, f25, rmm # perform operation
fnmadd.h f3, f18, f9, f25, rne # perform operation
fnmadd.h f3, f18, f9, f25, rtz # perform operation
fnmadd.h f3, f18, f9, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f3, f18, f9, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f3, f18, f9, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f3, f18, f9, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f3, f18, f9, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f3, f18, f9, f25 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7dff fs3 = 0x7dff)
li x10, 0xe4711775d1bb5015 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f26, 0(x2) # load 0x00007dff from memory into f26
li x3, 0xcbd35f66390ee20 # load x3 with value 0xcbd35f66390ee20
sw x3, 0(x2) # store 0xcbd35f66390ee20 in memory
flh f8, 0(x2) # load 0xcbd35f66390ee20 from memory into f8
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f15, 0(x2) # load 0x00007dff from memory into f15
fnmadd.h f10, f26, f8, f15, dyn # perform operation
fnmadd.h f10, f26, f8, f15, rdn # perform operation
fnmadd.h f10, f26, f8, f15, rmm # perform operation
fnmadd.h f10, f26, f8, f15, rne # perform operation
fnmadd.h f10, f26, f8, f15, rtz # perform operation
fnmadd.h f10, f26, f8, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f10, f26, f8, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f10, f26, f8, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f10, f26, f8, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f10, f26, f8, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f10, f26, f8, f15 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7dff fs3 = 0x58b4)
li x27, 0xc462b6651ca63f8b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f5, 0(x2) # load 0x00007dff from memory into f5
li x3, 0x42813cc691def5ef # load x3 with value 0x42813cc691def5ef
sw x3, 0(x2) # store 0x42813cc691def5ef in memory
flh f4, 0(x2) # load 0x42813cc691def5ef from memory into f4
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f12, 0(x2) # load 0x000058b4 from memory into f12
fnmadd.h f27, f5, f4, f12, dyn # perform operation
fnmadd.h f27, f5, f4, f12, rdn # perform operation
fnmadd.h f27, f5, f4, f12, rmm # perform operation
fnmadd.h f27, f5, f4, f12, rne # perform operation
fnmadd.h f27, f5, f4, f12, rtz # perform operation
fnmadd.h f27, f5, f4, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f27, f5, f4, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f27, f5, f4, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f27, f5, f4, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f27, f5, f4, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f27, f5, f4, f12 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7dff fs3 = 0xc93a)
li x21, 0xf27483c0eec46e0b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f26, 0(x2) # load 0x00007dff from memory into f26
li x3, 0x113ce24a586b1609 # load x3 with value 0x113ce24a586b1609
sw x3, 0(x2) # store 0x113ce24a586b1609 in memory
flh f10, 0(x2) # load 0x113ce24a586b1609 from memory into f10
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f16, 0(x2) # load 0x0000c93a from memory into f16
fnmadd.h f21, f26, f10, f16, dyn # perform operation
fnmadd.h f21, f26, f10, f16, rdn # perform operation
fnmadd.h f21, f26, f10, f16, rmm # perform operation
fnmadd.h f21, f26, f10, f16, rne # perform operation
fnmadd.h f21, f26, f10, f16, rtz # perform operation
fnmadd.h f21, f26, f10, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f21, f26, f10, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f21, f26, f10, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f21, f26, f10, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f21, f26, f10, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f21, f26, f10, f16 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x58b4 fs3 = 0x0)
li x24, 0x83d608b646d8f916 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f2, 0(x2) # load 0x000058b4 from memory into f2
li x3, 0x8d1084750203ed18 # load x3 with value 0x8d1084750203ed18
sw x3, 0(x2) # store 0x8d1084750203ed18 in memory
flh f9, 0(x2) # load 0x8d1084750203ed18 from memory into f9
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f10, 0(x2) # load 0x00000000 from memory into f10
fnmadd.h f24, f2, f9, f10, dyn # perform operation
fnmadd.h f24, f2, f9, f10, rdn # perform operation
fnmadd.h f24, f2, f9, f10, rmm # perform operation
fnmadd.h f24, f2, f9, f10, rne # perform operation
fnmadd.h f24, f2, f9, f10, rtz # perform operation
fnmadd.h f24, f2, f9, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f24, f2, f9, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f24, f2, f9, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f24, f2, f9, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f24, f2, f9, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f24, f2, f9, f10 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x58b4 fs3 = 0x8000)
li x31, 0x60b3ee0f4ee43cf9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f23, 0(x2) # load 0x000058b4 from memory into f23
li x3, 0x2e35fc87a5c29d7e # load x3 with value 0x2e35fc87a5c29d7e
sw x3, 0(x2) # store 0x2e35fc87a5c29d7e in memory
flh f11, 0(x2) # load 0x2e35fc87a5c29d7e from memory into f11
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f18, 0(x2) # load 0x00008000 from memory into f18
fnmadd.h f31, f23, f11, f18, dyn # perform operation
fnmadd.h f31, f23, f11, f18, rdn # perform operation
fnmadd.h f31, f23, f11, f18, rmm # perform operation
fnmadd.h f31, f23, f11, f18, rne # perform operation
fnmadd.h f31, f23, f11, f18, rtz # perform operation
fnmadd.h f31, f23, f11, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f31, f23, f11, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f31, f23, f11, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f31, f23, f11, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f31, f23, f11, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f31, f23, f11, f18 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x58b4 fs3 = 0x3c00)
li x3, 0xb6d142c545139fd2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f12, 0(x2) # load 0x000058b4 from memory into f12
li x3, 0xca9dbc362c83e717 # load x3 with value 0xca9dbc362c83e717
sw x3, 0(x2) # store 0xca9dbc362c83e717 in memory
flh f9, 0(x2) # load 0xca9dbc362c83e717 from memory into f9
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f31, 0(x2) # load 0x00003c00 from memory into f31
fnmadd.h f3, f12, f9, f31, dyn # perform operation
fnmadd.h f3, f12, f9, f31, rdn # perform operation
fnmadd.h f3, f12, f9, f31, rmm # perform operation
fnmadd.h f3, f12, f9, f31, rne # perform operation
fnmadd.h f3, f12, f9, f31, rtz # perform operation
fnmadd.h f3, f12, f9, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f3, f12, f9, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f3, f12, f9, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f3, f12, f9, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f3, f12, f9, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f3, f12, f9, f31 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x58b4 fs3 = 0xbc00)
li x2, 0xba9183f9441e0958 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f24, 0(x2) # load 0x000058b4 from memory into f24
li x3, 0xc1318386171a17a5 # load x3 with value 0xc1318386171a17a5
sw x3, 0(x2) # store 0xc1318386171a17a5 in memory
flh f22, 0(x2) # load 0xc1318386171a17a5 from memory into f22
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f13, 0(x2) # load 0x0000bc00 from memory into f13
fnmadd.h f2, f24, f22, f13, dyn # perform operation
fnmadd.h f2, f24, f22, f13, rdn # perform operation
fnmadd.h f2, f24, f22, f13, rmm # perform operation
fnmadd.h f2, f24, f22, f13, rne # perform operation
fnmadd.h f2, f24, f22, f13, rtz # perform operation
fnmadd.h f2, f24, f22, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f2, f24, f22, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f2, f24, f22, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f2, f24, f22, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f2, f24, f22, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f2, f24, f22, f13 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x58b4 fs3 = 0x3e00)
li x9, 0x23041bee86c263a9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f23, 0(x2) # load 0x000058b4 from memory into f23
li x3, 0x6664477a5b67758b # load x3 with value 0x6664477a5b67758b
sw x3, 0(x2) # store 0x6664477a5b67758b in memory
flh f5, 0(x2) # load 0x6664477a5b67758b from memory into f5
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f10, 0(x2) # load 0x00003e00 from memory into f10
fnmadd.h f9, f23, f5, f10, dyn # perform operation
fnmadd.h f9, f23, f5, f10, rdn # perform operation
fnmadd.h f9, f23, f5, f10, rmm # perform operation
fnmadd.h f9, f23, f5, f10, rne # perform operation
fnmadd.h f9, f23, f5, f10, rtz # perform operation
fnmadd.h f9, f23, f5, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f9, f23, f5, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f9, f23, f5, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f9, f23, f5, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f9, f23, f5, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f9, f23, f5, f10 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x58b4 fs3 = 0xbe00)
li x7, 0x3f91b5650aa0439c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f18, 0(x2) # load 0x000058b4 from memory into f18
li x3, 0x23e9e5f5d477c557 # load x3 with value 0x23e9e5f5d477c557
sw x3, 0(x2) # store 0x23e9e5f5d477c557 in memory
flh f29, 0(x2) # load 0x23e9e5f5d477c557 from memory into f29
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f25, 0(x2) # load 0x0000be00 from memory into f25
fnmadd.h f7, f18, f29, f25, dyn # perform operation
fnmadd.h f7, f18, f29, f25, rdn # perform operation
fnmadd.h f7, f18, f29, f25, rmm # perform operation
fnmadd.h f7, f18, f29, f25, rne # perform operation
fnmadd.h f7, f18, f29, f25, rtz # perform operation
fnmadd.h f7, f18, f29, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f7, f18, f29, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f7, f18, f29, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f7, f18, f29, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f7, f18, f29, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f7, f18, f29, f25 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x58b4 fs3 = 0x4000)
li x31, 0x96d4d7a5447332bf # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f24, 0(x2) # load 0x000058b4 from memory into f24
li x3, 0x616c56efbc685053 # load x3 with value 0x616c56efbc685053
sw x3, 0(x2) # store 0x616c56efbc685053 in memory
flh f7, 0(x2) # load 0x616c56efbc685053 from memory into f7
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f1, 0(x2) # load 0x00004000 from memory into f1
fnmadd.h f31, f24, f7, f1, dyn # perform operation
fnmadd.h f31, f24, f7, f1, rdn # perform operation
fnmadd.h f31, f24, f7, f1, rmm # perform operation
fnmadd.h f31, f24, f7, f1, rne # perform operation
fnmadd.h f31, f24, f7, f1, rtz # perform operation
fnmadd.h f31, f24, f7, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f31, f24, f7, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f31, f24, f7, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f31, f24, f7, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f31, f24, f7, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f31, f24, f7, f1 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x58b4 fs3 = 0xc000)
li x10, 0xd7074bec2b4050f3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f20, 0(x2) # load 0x000058b4 from memory into f20
li x3, 0xa91bb3efa809de05 # load x3 with value 0xa91bb3efa809de05
sw x3, 0(x2) # store 0xa91bb3efa809de05 in memory
flh f15, 0(x2) # load 0xa91bb3efa809de05 from memory into f15
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f24, 0(x2) # load 0x0000c000 from memory into f24
fnmadd.h f10, f20, f15, f24, dyn # perform operation
fnmadd.h f10, f20, f15, f24, rdn # perform operation
fnmadd.h f10, f20, f15, f24, rmm # perform operation
fnmadd.h f10, f20, f15, f24, rne # perform operation
fnmadd.h f10, f20, f15, f24, rtz # perform operation
fnmadd.h f10, f20, f15, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f10, f20, f15, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f10, f20, f15, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f10, f20, f15, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f10, f20, f15, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f10, f20, f15, f24 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x58b4 fs3 = 0x400)
li x20, 0x26d7f8eaff7412e6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f5, 0(x2) # load 0x000058b4 from memory into f5
li x3, 0xdb19ea8eca88947f # load x3 with value 0xdb19ea8eca88947f
sw x3, 0(x2) # store 0xdb19ea8eca88947f in memory
flh f2, 0(x2) # load 0xdb19ea8eca88947f from memory into f2
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f25, 0(x2) # load 0x00000400 from memory into f25
fnmadd.h f20, f5, f2, f25, dyn # perform operation
fnmadd.h f20, f5, f2, f25, rdn # perform operation
fnmadd.h f20, f5, f2, f25, rmm # perform operation
fnmadd.h f20, f5, f2, f25, rne # perform operation
fnmadd.h f20, f5, f2, f25, rtz # perform operation
fnmadd.h f20, f5, f2, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f20, f5, f2, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f20, f5, f2, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f20, f5, f2, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f20, f5, f2, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f20, f5, f2, f25 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x58b4 fs3 = 0x8400)
li x17, 0x2bd3b0e7ace7ff01 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f26, 0(x2) # load 0x000058b4 from memory into f26
li x3, 0xc22d5392b8ff746d # load x3 with value 0xc22d5392b8ff746d
sw x3, 0(x2) # store 0xc22d5392b8ff746d in memory
flh f22, 0(x2) # load 0xc22d5392b8ff746d from memory into f22
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f3, 0(x2) # load 0x00008400 from memory into f3
fnmadd.h f17, f26, f22, f3, dyn # perform operation
fnmadd.h f17, f26, f22, f3, rdn # perform operation
fnmadd.h f17, f26, f22, f3, rmm # perform operation
fnmadd.h f17, f26, f22, f3, rne # perform operation
fnmadd.h f17, f26, f22, f3, rtz # perform operation
fnmadd.h f17, f26, f22, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f17, f26, f22, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f17, f26, f22, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f17, f26, f22, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f17, f26, f22, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f17, f26, f22, f3 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x58b4 fs3 = 0x7bff)
li x28, 0xc950f4172b0e4513 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f4, 0(x2) # load 0x000058b4 from memory into f4
li x3, 0x94e62e8112fb557d # load x3 with value 0x94e62e8112fb557d
sw x3, 0(x2) # store 0x94e62e8112fb557d in memory
flh f23, 0(x2) # load 0x94e62e8112fb557d from memory into f23
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f21, 0(x2) # load 0x00007bff from memory into f21
fnmadd.h f28, f4, f23, f21, dyn # perform operation
fnmadd.h f28, f4, f23, f21, rdn # perform operation
fnmadd.h f28, f4, f23, f21, rmm # perform operation
fnmadd.h f28, f4, f23, f21, rne # perform operation
fnmadd.h f28, f4, f23, f21, rtz # perform operation
fnmadd.h f28, f4, f23, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f28, f4, f23, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f28, f4, f23, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f28, f4, f23, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f28, f4, f23, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f28, f4, f23, f21 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x58b4 fs3 = 0xfbff)
li x19, 0x7b84c69e1155eb0e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f29, 0(x2) # load 0x000058b4 from memory into f29
li x3, 0xdcf41066b0d56672 # load x3 with value 0xdcf41066b0d56672
sw x3, 0(x2) # store 0xdcf41066b0d56672 in memory
flh f16, 0(x2) # load 0xdcf41066b0d56672 from memory into f16
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f21, 0(x2) # load 0x0000fbff from memory into f21
fnmadd.h f19, f29, f16, f21, dyn # perform operation
fnmadd.h f19, f29, f16, f21, rdn # perform operation
fnmadd.h f19, f29, f16, f21, rmm # perform operation
fnmadd.h f19, f29, f16, f21, rne # perform operation
fnmadd.h f19, f29, f16, f21, rtz # perform operation
fnmadd.h f19, f29, f16, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f19, f29, f16, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f19, f29, f16, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f19, f29, f16, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f19, f29, f16, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f19, f29, f16, f21 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x58b4 fs3 = 0x3ff)
li x14, 0x099bd4cc4ee309c7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f12, 0(x2) # load 0x000058b4 from memory into f12
li x3, 0x9e2d668b472e4614 # load x3 with value 0x9e2d668b472e4614
sw x3, 0(x2) # store 0x9e2d668b472e4614 in memory
flh f10, 0(x2) # load 0x9e2d668b472e4614 from memory into f10
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f29, 0(x2) # load 0x000003ff from memory into f29
fnmadd.h f14, f12, f10, f29, dyn # perform operation
fnmadd.h f14, f12, f10, f29, rdn # perform operation
fnmadd.h f14, f12, f10, f29, rmm # perform operation
fnmadd.h f14, f12, f10, f29, rne # perform operation
fnmadd.h f14, f12, f10, f29, rtz # perform operation
fnmadd.h f14, f12, f10, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f14, f12, f10, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f14, f12, f10, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f14, f12, f10, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f14, f12, f10, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f14, f12, f10, f29 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x58b4 fs3 = 0x83ff)
li x14, 0x55b6a1dbbaa4ea9d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f5, 0(x2) # load 0x000058b4 from memory into f5
li x3, 0xe9afef9e50e19b09 # load x3 with value 0xe9afef9e50e19b09
sw x3, 0(x2) # store 0xe9afef9e50e19b09 in memory
flh f30, 0(x2) # load 0xe9afef9e50e19b09 from memory into f30
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f1, 0(x2) # load 0x000083ff from memory into f1
fnmadd.h f14, f5, f30, f1, dyn # perform operation
fnmadd.h f14, f5, f30, f1, rdn # perform operation
fnmadd.h f14, f5, f30, f1, rmm # perform operation
fnmadd.h f14, f5, f30, f1, rne # perform operation
fnmadd.h f14, f5, f30, f1, rtz # perform operation
fnmadd.h f14, f5, f30, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f14, f5, f30, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f14, f5, f30, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f14, f5, f30, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f14, f5, f30, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f14, f5, f30, f1 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x58b4 fs3 = 0x200)
li x8, 0x7a99b94a3250d754 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f4, 0(x2) # load 0x000058b4 from memory into f4
li x3, 0x6a55fee78cc60963 # load x3 with value 0x6a55fee78cc60963
sw x3, 0(x2) # store 0x6a55fee78cc60963 in memory
flh f2, 0(x2) # load 0x6a55fee78cc60963 from memory into f2
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f5, 0(x2) # load 0x00000200 from memory into f5
fnmadd.h f8, f4, f2, f5, dyn # perform operation
fnmadd.h f8, f4, f2, f5, rdn # perform operation
fnmadd.h f8, f4, f2, f5, rmm # perform operation
fnmadd.h f8, f4, f2, f5, rne # perform operation
fnmadd.h f8, f4, f2, f5, rtz # perform operation
fnmadd.h f8, f4, f2, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f8, f4, f2, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f8, f4, f2, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f8, f4, f2, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f8, f4, f2, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f8, f4, f2, f5 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x58b4 fs3 = 0x8200)
li x24, 0x18295caa367ed966 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f20, 0(x2) # load 0x000058b4 from memory into f20
li x3, 0x479b92124c31680a # load x3 with value 0x479b92124c31680a
sw x3, 0(x2) # store 0x479b92124c31680a in memory
flh f3, 0(x2) # load 0x479b92124c31680a from memory into f3
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f25, 0(x2) # load 0x00008200 from memory into f25
fnmadd.h f24, f20, f3, f25, dyn # perform operation
fnmadd.h f24, f20, f3, f25, rdn # perform operation
fnmadd.h f24, f20, f3, f25, rmm # perform operation
fnmadd.h f24, f20, f3, f25, rne # perform operation
fnmadd.h f24, f20, f3, f25, rtz # perform operation
fnmadd.h f24, f20, f3, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f24, f20, f3, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f24, f20, f3, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f24, f20, f3, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f24, f20, f3, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f24, f20, f3, f25 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x58b4 fs3 = 0x1)
li x23, 0x9294c4611cf8cc24 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f15, 0(x2) # load 0x000058b4 from memory into f15
li x3, 0xc07e765924cad3b # load x3 with value 0xc07e765924cad3b
sw x3, 0(x2) # store 0xc07e765924cad3b in memory
flh f17, 0(x2) # load 0xc07e765924cad3b from memory into f17
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f3, 0(x2) # load 0x00000001 from memory into f3
fnmadd.h f23, f15, f17, f3, dyn # perform operation
fnmadd.h f23, f15, f17, f3, rdn # perform operation
fnmadd.h f23, f15, f17, f3, rmm # perform operation
fnmadd.h f23, f15, f17, f3, rne # perform operation
fnmadd.h f23, f15, f17, f3, rtz # perform operation
fnmadd.h f23, f15, f17, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f23, f15, f17, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f23, f15, f17, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f23, f15, f17, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f23, f15, f17, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f23, f15, f17, f3 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x58b4 fs3 = 0x8001)
li x28, 0x41867554e7122830 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f8, 0(x2) # load 0x000058b4 from memory into f8
li x3, 0xd0a28eb41b189a19 # load x3 with value 0xd0a28eb41b189a19
sw x3, 0(x2) # store 0xd0a28eb41b189a19 in memory
flh f2, 0(x2) # load 0xd0a28eb41b189a19 from memory into f2
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f20, 0(x2) # load 0x00008001 from memory into f20
fnmadd.h f28, f8, f2, f20, dyn # perform operation
fnmadd.h f28, f8, f2, f20, rdn # perform operation
fnmadd.h f28, f8, f2, f20, rmm # perform operation
fnmadd.h f28, f8, f2, f20, rne # perform operation
fnmadd.h f28, f8, f2, f20, rtz # perform operation
fnmadd.h f28, f8, f2, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f28, f8, f2, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f28, f8, f2, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f28, f8, f2, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f28, f8, f2, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f28, f8, f2, f20 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x58b4 fs3 = 0x7c00)
li x24, 0x9e4266607da24174 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f29, 0(x2) # load 0x000058b4 from memory into f29
li x3, 0x11f3d6fa807a904c # load x3 with value 0x11f3d6fa807a904c
sw x3, 0(x2) # store 0x11f3d6fa807a904c in memory
flh f21, 0(x2) # load 0x11f3d6fa807a904c from memory into f21
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f12, 0(x2) # load 0x00007c00 from memory into f12
fnmadd.h f24, f29, f21, f12, dyn # perform operation
fnmadd.h f24, f29, f21, f12, rdn # perform operation
fnmadd.h f24, f29, f21, f12, rmm # perform operation
fnmadd.h f24, f29, f21, f12, rne # perform operation
fnmadd.h f24, f29, f21, f12, rtz # perform operation
fnmadd.h f24, f29, f21, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f24, f29, f21, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f24, f29, f21, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f24, f29, f21, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f24, f29, f21, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f24, f29, f21, f12 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x58b4 fs3 = 0xfc00)
li x11, 0x57f18a7fe08a5c37 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f29, 0(x2) # load 0x000058b4 from memory into f29
li x3, 0x3a99aa8baedefa0 # load x3 with value 0x3a99aa8baedefa0
sw x3, 0(x2) # store 0x3a99aa8baedefa0 in memory
flh f10, 0(x2) # load 0x3a99aa8baedefa0 from memory into f10
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f8, 0(x2) # load 0x0000fc00 from memory into f8
fnmadd.h f11, f29, f10, f8, dyn # perform operation
fnmadd.h f11, f29, f10, f8, rdn # perform operation
fnmadd.h f11, f29, f10, f8, rmm # perform operation
fnmadd.h f11, f29, f10, f8, rne # perform operation
fnmadd.h f11, f29, f10, f8, rtz # perform operation
fnmadd.h f11, f29, f10, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f11, f29, f10, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f11, f29, f10, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f11, f29, f10, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f11, f29, f10, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f11, f29, f10, f8 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x58b4 fs3 = 0x7e00)
li x25, 0x959822ddf718a3d6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f10, 0(x2) # load 0x000058b4 from memory into f10
li x3, 0x628169b010457fe1 # load x3 with value 0x628169b010457fe1
sw x3, 0(x2) # store 0x628169b010457fe1 in memory
flh f1, 0(x2) # load 0x628169b010457fe1 from memory into f1
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f28, 0(x2) # load 0x00007e00 from memory into f28
fnmadd.h f25, f10, f1, f28, dyn # perform operation
fnmadd.h f25, f10, f1, f28, rdn # perform operation
fnmadd.h f25, f10, f1, f28, rmm # perform operation
fnmadd.h f25, f10, f1, f28, rne # perform operation
fnmadd.h f25, f10, f1, f28, rtz # perform operation
fnmadd.h f25, f10, f1, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f25, f10, f1, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f25, f10, f1, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f25, f10, f1, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f25, f10, f1, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f25, f10, f1, f28 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x58b4 fs3 = 0x7fff)
li x16, 0x5322bd7ebcad31e1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f21, 0(x2) # load 0x000058b4 from memory into f21
li x3, 0xf7b16621dc223b17 # load x3 with value 0xf7b16621dc223b17
sw x3, 0(x2) # store 0xf7b16621dc223b17 in memory
flh f27, 0(x2) # load 0xf7b16621dc223b17 from memory into f27
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f11, 0(x2) # load 0x00007fff from memory into f11
fnmadd.h f16, f21, f27, f11, dyn # perform operation
fnmadd.h f16, f21, f27, f11, rdn # perform operation
fnmadd.h f16, f21, f27, f11, rmm # perform operation
fnmadd.h f16, f21, f27, f11, rne # perform operation
fnmadd.h f16, f21, f27, f11, rtz # perform operation
fnmadd.h f16, f21, f27, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f16, f21, f27, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f16, f21, f27, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f16, f21, f27, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f16, f21, f27, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f16, f21, f27, f11 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x58b4 fs3 = 0x7c01)
li x4, 0x7f58912b1266c111 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f21, 0(x2) # load 0x000058b4 from memory into f21
li x3, 0x54c63444b80d0fb # load x3 with value 0x54c63444b80d0fb
sw x3, 0(x2) # store 0x54c63444b80d0fb in memory
flh f27, 0(x2) # load 0x54c63444b80d0fb from memory into f27
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f17, 0(x2) # load 0x00007c01 from memory into f17
fnmadd.h f4, f21, f27, f17, dyn # perform operation
fnmadd.h f4, f21, f27, f17, rdn # perform operation
fnmadd.h f4, f21, f27, f17, rmm # perform operation
fnmadd.h f4, f21, f27, f17, rne # perform operation
fnmadd.h f4, f21, f27, f17, rtz # perform operation
fnmadd.h f4, f21, f27, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f4, f21, f27, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f4, f21, f27, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f4, f21, f27, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f4, f21, f27, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f4, f21, f27, f17 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x58b4 fs3 = 0x7dff)
li x31, 0xa23940b411cb3d44 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f19, 0(x2) # load 0x000058b4 from memory into f19
li x3, 0x7ed809fefed4106c # load x3 with value 0x7ed809fefed4106c
sw x3, 0(x2) # store 0x7ed809fefed4106c in memory
flh f10, 0(x2) # load 0x7ed809fefed4106c from memory into f10
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f29, 0(x2) # load 0x00007dff from memory into f29
fnmadd.h f31, f19, f10, f29, dyn # perform operation
fnmadd.h f31, f19, f10, f29, rdn # perform operation
fnmadd.h f31, f19, f10, f29, rmm # perform operation
fnmadd.h f31, f19, f10, f29, rne # perform operation
fnmadd.h f31, f19, f10, f29, rtz # perform operation
fnmadd.h f31, f19, f10, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f31, f19, f10, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f31, f19, f10, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f31, f19, f10, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f31, f19, f10, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f31, f19, f10, f29 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x58b4 fs3 = 0x58b4)
li x27, 0x406305d058212c98 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f11, 0(x2) # load 0x000058b4 from memory into f11
li x3, 0x5c0128f00bd37c8b # load x3 with value 0x5c0128f00bd37c8b
sw x3, 0(x2) # store 0x5c0128f00bd37c8b in memory
flh f24, 0(x2) # load 0x5c0128f00bd37c8b from memory into f24
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f10, 0(x2) # load 0x000058b4 from memory into f10
fnmadd.h f27, f11, f24, f10, dyn # perform operation
fnmadd.h f27, f11, f24, f10, rdn # perform operation
fnmadd.h f27, f11, f24, f10, rmm # perform operation
fnmadd.h f27, f11, f24, f10, rne # perform operation
fnmadd.h f27, f11, f24, f10, rtz # perform operation
fnmadd.h f27, f11, f24, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f27, f11, f24, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f27, f11, f24, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f27, f11, f24, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f27, f11, f24, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f27, f11, f24, f10 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x58b4 fs3 = 0xc93a)
li x7, 0x201407a781ab7610 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f3, 0(x2) # load 0x000058b4 from memory into f3
li x3, 0xa7fa06cbfa34e1f8 # load x3 with value 0xa7fa06cbfa34e1f8
sw x3, 0(x2) # store 0xa7fa06cbfa34e1f8 in memory
flh f6, 0(x2) # load 0xa7fa06cbfa34e1f8 from memory into f6
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f20, 0(x2) # load 0x0000c93a from memory into f20
fnmadd.h f7, f3, f6, f20, dyn # perform operation
fnmadd.h f7, f3, f6, f20, rdn # perform operation
fnmadd.h f7, f3, f6, f20, rmm # perform operation
fnmadd.h f7, f3, f6, f20, rne # perform operation
fnmadd.h f7, f3, f6, f20, rtz # perform operation
fnmadd.h f7, f3, f6, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f7, f3, f6, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f7, f3, f6, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f7, f3, f6, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f7, f3, f6, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f7, f3, f6, f20 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc93a fs3 = 0x0)
li x19, 0x0a28501ef0e7ad30 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f20, 0(x2) # load 0x0000c93a from memory into f20
li x3, 0xff5e18c362ba330d # load x3 with value 0xff5e18c362ba330d
sw x3, 0(x2) # store 0xff5e18c362ba330d in memory
flh f31, 0(x2) # load 0xff5e18c362ba330d from memory into f31
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flh f25, 0(x2) # load 0x00000000 from memory into f25
fnmadd.h f19, f20, f31, f25, dyn # perform operation
fnmadd.h f19, f20, f31, f25, rdn # perform operation
fnmadd.h f19, f20, f31, f25, rmm # perform operation
fnmadd.h f19, f20, f31, f25, rne # perform operation
fnmadd.h f19, f20, f31, f25, rtz # perform operation
fnmadd.h f19, f20, f31, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f19, f20, f31, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f19, f20, f31, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f19, f20, f31, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f19, f20, f31, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f19, f20, f31, f25 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc93a fs3 = 0x8000)
li x25, 0xd1e3ecf330591f61 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f31, 0(x2) # load 0x0000c93a from memory into f31
li x3, 0x3c7b850feb6beeca # load x3 with value 0x3c7b850feb6beeca
sw x3, 0(x2) # store 0x3c7b850feb6beeca in memory
flh f27, 0(x2) # load 0x3c7b850feb6beeca from memory into f27
li x3, 0x00008000 # load x3 with value 0x00008000
sw x3, 0(x2) # store 0x00008000 in memory
flh f29, 0(x2) # load 0x00008000 from memory into f29
fnmadd.h f25, f31, f27, f29, dyn # perform operation
fnmadd.h f25, f31, f27, f29, rdn # perform operation
fnmadd.h f25, f31, f27, f29, rmm # perform operation
fnmadd.h f25, f31, f27, f29, rne # perform operation
fnmadd.h f25, f31, f27, f29, rtz # perform operation
fnmadd.h f25, f31, f27, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f25, f31, f27, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f25, f31, f27, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f25, f31, f27, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f25, f31, f27, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f25, f31, f27, f29 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc93a fs3 = 0x3c00)
li x28, 0xb2a04936ddb33a90 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f23, 0(x2) # load 0x0000c93a from memory into f23
li x3, 0x733bd15e351269 # load x3 with value 0x733bd15e351269
sw x3, 0(x2) # store 0x733bd15e351269 in memory
flh f19, 0(x2) # load 0x733bd15e351269 from memory into f19
li x3, 0x00003c00 # load x3 with value 0x00003c00
sw x3, 0(x2) # store 0x00003c00 in memory
flh f6, 0(x2) # load 0x00003c00 from memory into f6
fnmadd.h f28, f23, f19, f6, dyn # perform operation
fnmadd.h f28, f23, f19, f6, rdn # perform operation
fnmadd.h f28, f23, f19, f6, rmm # perform operation
fnmadd.h f28, f23, f19, f6, rne # perform operation
fnmadd.h f28, f23, f19, f6, rtz # perform operation
fnmadd.h f28, f23, f19, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f28, f23, f19, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f28, f23, f19, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f28, f23, f19, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f28, f23, f19, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f28, f23, f19, f6 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc93a fs3 = 0xbc00)
li x17, 0x83bf38d0e2fe146e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f23, 0(x2) # load 0x0000c93a from memory into f23
li x3, 0xc5dce38fd25d22f1 # load x3 with value 0xc5dce38fd25d22f1
sw x3, 0(x2) # store 0xc5dce38fd25d22f1 in memory
flh f28, 0(x2) # load 0xc5dce38fd25d22f1 from memory into f28
li x3, 0x0000bc00 # load x3 with value 0x0000bc00
sw x3, 0(x2) # store 0x0000bc00 in memory
flh f20, 0(x2) # load 0x0000bc00 from memory into f20
fnmadd.h f17, f23, f28, f20, dyn # perform operation
fnmadd.h f17, f23, f28, f20, rdn # perform operation
fnmadd.h f17, f23, f28, f20, rmm # perform operation
fnmadd.h f17, f23, f28, f20, rne # perform operation
fnmadd.h f17, f23, f28, f20, rtz # perform operation
fnmadd.h f17, f23, f28, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f17, f23, f28, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f17, f23, f28, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f17, f23, f28, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f17, f23, f28, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f17, f23, f28, f20 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc93a fs3 = 0x3e00)
li x16, 0x87e663b2205f6ff4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f28, 0(x2) # load 0x0000c93a from memory into f28
li x3, 0x7daabc88f1fd2523 # load x3 with value 0x7daabc88f1fd2523
sw x3, 0(x2) # store 0x7daabc88f1fd2523 in memory
flh f30, 0(x2) # load 0x7daabc88f1fd2523 from memory into f30
li x3, 0x00003e00 # load x3 with value 0x00003e00
sw x3, 0(x2) # store 0x00003e00 in memory
flh f15, 0(x2) # load 0x00003e00 from memory into f15
fnmadd.h f16, f28, f30, f15, dyn # perform operation
fnmadd.h f16, f28, f30, f15, rdn # perform operation
fnmadd.h f16, f28, f30, f15, rmm # perform operation
fnmadd.h f16, f28, f30, f15, rne # perform operation
fnmadd.h f16, f28, f30, f15, rtz # perform operation
fnmadd.h f16, f28, f30, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f16, f28, f30, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f16, f28, f30, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f16, f28, f30, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f16, f28, f30, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f16, f28, f30, f15 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc93a fs3 = 0xbe00)
li x3, 0xeb4fd91b45ceaa62 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f10, 0(x2) # load 0x0000c93a from memory into f10
li x3, 0x34e10d7158a32c1e # load x3 with value 0x34e10d7158a32c1e
sw x3, 0(x2) # store 0x34e10d7158a32c1e in memory
flh f4, 0(x2) # load 0x34e10d7158a32c1e from memory into f4
li x3, 0x0000be00 # load x3 with value 0x0000be00
sw x3, 0(x2) # store 0x0000be00 in memory
flh f23, 0(x2) # load 0x0000be00 from memory into f23
fnmadd.h f3, f10, f4, f23, dyn # perform operation
fnmadd.h f3, f10, f4, f23, rdn # perform operation
fnmadd.h f3, f10, f4, f23, rmm # perform operation
fnmadd.h f3, f10, f4, f23, rne # perform operation
fnmadd.h f3, f10, f4, f23, rtz # perform operation
fnmadd.h f3, f10, f4, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f3, f10, f4, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f3, f10, f4, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f3, f10, f4, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f3, f10, f4, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f3, f10, f4, f23 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc93a fs3 = 0x4000)
li x2, 0xac42fcddc11c9308 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f16, 0(x2) # load 0x0000c93a from memory into f16
li x3, 0x16e58d1128048d7d # load x3 with value 0x16e58d1128048d7d
sw x3, 0(x2) # store 0x16e58d1128048d7d in memory
flh f4, 0(x2) # load 0x16e58d1128048d7d from memory into f4
li x3, 0x00004000 # load x3 with value 0x00004000
sw x3, 0(x2) # store 0x00004000 in memory
flh f24, 0(x2) # load 0x00004000 from memory into f24
fnmadd.h f2, f16, f4, f24, dyn # perform operation
fnmadd.h f2, f16, f4, f24, rdn # perform operation
fnmadd.h f2, f16, f4, f24, rmm # perform operation
fnmadd.h f2, f16, f4, f24, rne # perform operation
fnmadd.h f2, f16, f4, f24, rtz # perform operation
fnmadd.h f2, f16, f4, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f2, f16, f4, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f2, f16, f4, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f2, f16, f4, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f2, f16, f4, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f2, f16, f4, f24 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc93a fs3 = 0xc000)
li x19, 0x31c797959a3cdbab # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f21, 0(x2) # load 0x0000c93a from memory into f21
li x3, 0x5f388d08ad3e7a5d # load x3 with value 0x5f388d08ad3e7a5d
sw x3, 0(x2) # store 0x5f388d08ad3e7a5d in memory
flh f30, 0(x2) # load 0x5f388d08ad3e7a5d from memory into f30
li x3, 0x0000c000 # load x3 with value 0x0000c000
sw x3, 0(x2) # store 0x0000c000 in memory
flh f15, 0(x2) # load 0x0000c000 from memory into f15
fnmadd.h f19, f21, f30, f15, dyn # perform operation
fnmadd.h f19, f21, f30, f15, rdn # perform operation
fnmadd.h f19, f21, f30, f15, rmm # perform operation
fnmadd.h f19, f21, f30, f15, rne # perform operation
fnmadd.h f19, f21, f30, f15, rtz # perform operation
fnmadd.h f19, f21, f30, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f19, f21, f30, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f19, f21, f30, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f19, f21, f30, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f19, f21, f30, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f19, f21, f30, f15 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc93a fs3 = 0x400)
li x6, 0xfd03ba3039c68376 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f18, 0(x2) # load 0x0000c93a from memory into f18
li x3, 0x64ada5eb80784455 # load x3 with value 0x64ada5eb80784455
sw x3, 0(x2) # store 0x64ada5eb80784455 in memory
flh f4, 0(x2) # load 0x64ada5eb80784455 from memory into f4
li x3, 0x00000400 # load x3 with value 0x00000400
sw x3, 0(x2) # store 0x00000400 in memory
flh f8, 0(x2) # load 0x00000400 from memory into f8
fnmadd.h f6, f18, f4, f8, dyn # perform operation
fnmadd.h f6, f18, f4, f8, rdn # perform operation
fnmadd.h f6, f18, f4, f8, rmm # perform operation
fnmadd.h f6, f18, f4, f8, rne # perform operation
fnmadd.h f6, f18, f4, f8, rtz # perform operation
fnmadd.h f6, f18, f4, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f6, f18, f4, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f6, f18, f4, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f6, f18, f4, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f6, f18, f4, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f6, f18, f4, f8 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc93a fs3 = 0x8400)
li x7, 0x0895a1f7221cb088 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f9, 0(x2) # load 0x0000c93a from memory into f9
li x3, 0x2f68b7445f0a7e52 # load x3 with value 0x2f68b7445f0a7e52
sw x3, 0(x2) # store 0x2f68b7445f0a7e52 in memory
flh f14, 0(x2) # load 0x2f68b7445f0a7e52 from memory into f14
li x3, 0x00008400 # load x3 with value 0x00008400
sw x3, 0(x2) # store 0x00008400 in memory
flh f20, 0(x2) # load 0x00008400 from memory into f20
fnmadd.h f7, f9, f14, f20, dyn # perform operation
fnmadd.h f7, f9, f14, f20, rdn # perform operation
fnmadd.h f7, f9, f14, f20, rmm # perform operation
fnmadd.h f7, f9, f14, f20, rne # perform operation
fnmadd.h f7, f9, f14, f20, rtz # perform operation
fnmadd.h f7, f9, f14, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f7, f9, f14, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f7, f9, f14, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f7, f9, f14, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f7, f9, f14, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f7, f9, f14, f20 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc93a fs3 = 0x7bff)
li x24, 0xbb366440d2105db2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f3, 0(x2) # load 0x0000c93a from memory into f3
li x3, 0x73cea0ede305d7af # load x3 with value 0x73cea0ede305d7af
sw x3, 0(x2) # store 0x73cea0ede305d7af in memory
flh f25, 0(x2) # load 0x73cea0ede305d7af from memory into f25
li x3, 0x00007bff # load x3 with value 0x00007bff
sw x3, 0(x2) # store 0x00007bff in memory
flh f26, 0(x2) # load 0x00007bff from memory into f26
fnmadd.h f24, f3, f25, f26, dyn # perform operation
fnmadd.h f24, f3, f25, f26, rdn # perform operation
fnmadd.h f24, f3, f25, f26, rmm # perform operation
fnmadd.h f24, f3, f25, f26, rne # perform operation
fnmadd.h f24, f3, f25, f26, rtz # perform operation
fnmadd.h f24, f3, f25, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f24, f3, f25, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f24, f3, f25, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f24, f3, f25, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f24, f3, f25, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f24, f3, f25, f26 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc93a fs3 = 0xfbff)
li x29, 0x7c05e9f41d6eabb4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f5, 0(x2) # load 0x0000c93a from memory into f5
li x3, 0x2baf30253911dbab # load x3 with value 0x2baf30253911dbab
sw x3, 0(x2) # store 0x2baf30253911dbab in memory
flh f28, 0(x2) # load 0x2baf30253911dbab from memory into f28
li x3, 0x0000fbff # load x3 with value 0x0000fbff
sw x3, 0(x2) # store 0x0000fbff in memory
flh f15, 0(x2) # load 0x0000fbff from memory into f15
fnmadd.h f29, f5, f28, f15, dyn # perform operation
fnmadd.h f29, f5, f28, f15, rdn # perform operation
fnmadd.h f29, f5, f28, f15, rmm # perform operation
fnmadd.h f29, f5, f28, f15, rne # perform operation
fnmadd.h f29, f5, f28, f15, rtz # perform operation
fnmadd.h f29, f5, f28, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f29, f5, f28, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f29, f5, f28, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f29, f5, f28, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f29, f5, f28, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f29, f5, f28, f15 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc93a fs3 = 0x3ff)
li x14, 0x8da43fdebb5183b6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f22, 0(x2) # load 0x0000c93a from memory into f22
li x3, 0x2e66fe189cffb9b # load x3 with value 0x2e66fe189cffb9b
sw x3, 0(x2) # store 0x2e66fe189cffb9b in memory
flh f4, 0(x2) # load 0x2e66fe189cffb9b from memory into f4
li x3, 0x000003ff # load x3 with value 0x000003ff
sw x3, 0(x2) # store 0x000003ff in memory
flh f17, 0(x2) # load 0x000003ff from memory into f17
fnmadd.h f14, f22, f4, f17, dyn # perform operation
fnmadd.h f14, f22, f4, f17, rdn # perform operation
fnmadd.h f14, f22, f4, f17, rmm # perform operation
fnmadd.h f14, f22, f4, f17, rne # perform operation
fnmadd.h f14, f22, f4, f17, rtz # perform operation
fnmadd.h f14, f22, f4, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f14, f22, f4, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f14, f22, f4, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f14, f22, f4, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f14, f22, f4, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f14, f22, f4, f17 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc93a fs3 = 0x83ff)
li x6, 0xfbdc342dddea24ff # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f13, 0(x2) # load 0x0000c93a from memory into f13
li x3, 0x8e980f5ac78416c9 # load x3 with value 0x8e980f5ac78416c9
sw x3, 0(x2) # store 0x8e980f5ac78416c9 in memory
flh f9, 0(x2) # load 0x8e980f5ac78416c9 from memory into f9
li x3, 0x000083ff # load x3 with value 0x000083ff
sw x3, 0(x2) # store 0x000083ff in memory
flh f23, 0(x2) # load 0x000083ff from memory into f23
fnmadd.h f6, f13, f9, f23, dyn # perform operation
fnmadd.h f6, f13, f9, f23, rdn # perform operation
fnmadd.h f6, f13, f9, f23, rmm # perform operation
fnmadd.h f6, f13, f9, f23, rne # perform operation
fnmadd.h f6, f13, f9, f23, rtz # perform operation
fnmadd.h f6, f13, f9, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f6, f13, f9, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f6, f13, f9, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f6, f13, f9, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f6, f13, f9, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f6, f13, f9, f23 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc93a fs3 = 0x200)
li x15, 0x9f35b057901f32f3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f27, 0(x2) # load 0x0000c93a from memory into f27
li x3, 0x16e22765c0bfad06 # load x3 with value 0x16e22765c0bfad06
sw x3, 0(x2) # store 0x16e22765c0bfad06 in memory
flh f12, 0(x2) # load 0x16e22765c0bfad06 from memory into f12
li x3, 0x00000200 # load x3 with value 0x00000200
sw x3, 0(x2) # store 0x00000200 in memory
flh f28, 0(x2) # load 0x00000200 from memory into f28
fnmadd.h f15, f27, f12, f28, dyn # perform operation
fnmadd.h f15, f27, f12, f28, rdn # perform operation
fnmadd.h f15, f27, f12, f28, rmm # perform operation
fnmadd.h f15, f27, f12, f28, rne # perform operation
fnmadd.h f15, f27, f12, f28, rtz # perform operation
fnmadd.h f15, f27, f12, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f15, f27, f12, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f15, f27, f12, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f15, f27, f12, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f15, f27, f12, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f15, f27, f12, f28 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc93a fs3 = 0x8200)
li x20, 0x85562ee13193589d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f30, 0(x2) # load 0x0000c93a from memory into f30
li x3, 0x9fca691c737c471d # load x3 with value 0x9fca691c737c471d
sw x3, 0(x2) # store 0x9fca691c737c471d in memory
flh f27, 0(x2) # load 0x9fca691c737c471d from memory into f27
li x3, 0x00008200 # load x3 with value 0x00008200
sw x3, 0(x2) # store 0x00008200 in memory
flh f29, 0(x2) # load 0x00008200 from memory into f29
fnmadd.h f20, f30, f27, f29, dyn # perform operation
fnmadd.h f20, f30, f27, f29, rdn # perform operation
fnmadd.h f20, f30, f27, f29, rmm # perform operation
fnmadd.h f20, f30, f27, f29, rne # perform operation
fnmadd.h f20, f30, f27, f29, rtz # perform operation
fnmadd.h f20, f30, f27, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f20, f30, f27, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f20, f30, f27, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f20, f30, f27, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f20, f30, f27, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f20, f30, f27, f29 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc93a fs3 = 0x1)
li x26, 0x9fac6933b81d2f8e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f9, 0(x2) # load 0x0000c93a from memory into f9
li x3, 0x4ec57fda494d3c0 # load x3 with value 0x4ec57fda494d3c0
sw x3, 0(x2) # store 0x4ec57fda494d3c0 in memory
flh f6, 0(x2) # load 0x4ec57fda494d3c0 from memory into f6
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flh f2, 0(x2) # load 0x00000001 from memory into f2
fnmadd.h f26, f9, f6, f2, dyn # perform operation
fnmadd.h f26, f9, f6, f2, rdn # perform operation
fnmadd.h f26, f9, f6, f2, rmm # perform operation
fnmadd.h f26, f9, f6, f2, rne # perform operation
fnmadd.h f26, f9, f6, f2, rtz # perform operation
fnmadd.h f26, f9, f6, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f26, f9, f6, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f26, f9, f6, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f26, f9, f6, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f26, f9, f6, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f26, f9, f6, f2 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc93a fs3 = 0x8001)
li x14, 0x3bdfeb5bb635f09d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f24, 0(x2) # load 0x0000c93a from memory into f24
li x3, 0x2c8d2fc5c9655e07 # load x3 with value 0x2c8d2fc5c9655e07
sw x3, 0(x2) # store 0x2c8d2fc5c9655e07 in memory
flh f26, 0(x2) # load 0x2c8d2fc5c9655e07 from memory into f26
li x3, 0x00008001 # load x3 with value 0x00008001
sw x3, 0(x2) # store 0x00008001 in memory
flh f1, 0(x2) # load 0x00008001 from memory into f1
fnmadd.h f14, f24, f26, f1, dyn # perform operation
fnmadd.h f14, f24, f26, f1, rdn # perform operation
fnmadd.h f14, f24, f26, f1, rmm # perform operation
fnmadd.h f14, f24, f26, f1, rne # perform operation
fnmadd.h f14, f24, f26, f1, rtz # perform operation
fnmadd.h f14, f24, f26, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f14, f24, f26, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f14, f24, f26, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f14, f24, f26, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f14, f24, f26, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f14, f24, f26, f1 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc93a fs3 = 0x7c00)
li x4, 0x8820dc352659a2b5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f27, 0(x2) # load 0x0000c93a from memory into f27
li x3, 0x7f89bc3e8f1d2823 # load x3 with value 0x7f89bc3e8f1d2823
sw x3, 0(x2) # store 0x7f89bc3e8f1d2823 in memory
flh f3, 0(x2) # load 0x7f89bc3e8f1d2823 from memory into f3
li x3, 0x00007c00 # load x3 with value 0x00007c00
sw x3, 0(x2) # store 0x00007c00 in memory
flh f16, 0(x2) # load 0x00007c00 from memory into f16
fnmadd.h f4, f27, f3, f16, dyn # perform operation
fnmadd.h f4, f27, f3, f16, rdn # perform operation
fnmadd.h f4, f27, f3, f16, rmm # perform operation
fnmadd.h f4, f27, f3, f16, rne # perform operation
fnmadd.h f4, f27, f3, f16, rtz # perform operation
fnmadd.h f4, f27, f3, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f4, f27, f3, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f4, f27, f3, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f4, f27, f3, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f4, f27, f3, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f4, f27, f3, f16 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc93a fs3 = 0xfc00)
li x8, 0x759a18c0a11ec3e0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f12, 0(x2) # load 0x0000c93a from memory into f12
li x3, 0x14aaed2229f57292 # load x3 with value 0x14aaed2229f57292
sw x3, 0(x2) # store 0x14aaed2229f57292 in memory
flh f9, 0(x2) # load 0x14aaed2229f57292 from memory into f9
li x3, 0x0000fc00 # load x3 with value 0x0000fc00
sw x3, 0(x2) # store 0x0000fc00 in memory
flh f4, 0(x2) # load 0x0000fc00 from memory into f4
fnmadd.h f8, f12, f9, f4, dyn # perform operation
fnmadd.h f8, f12, f9, f4, rdn # perform operation
fnmadd.h f8, f12, f9, f4, rmm # perform operation
fnmadd.h f8, f12, f9, f4, rne # perform operation
fnmadd.h f8, f12, f9, f4, rtz # perform operation
fnmadd.h f8, f12, f9, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f8, f12, f9, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f8, f12, f9, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f8, f12, f9, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f8, f12, f9, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f8, f12, f9, f4 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc93a fs3 = 0x7e00)
li x7, 0xf0bdc99b14be1302 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f9, 0(x2) # load 0x0000c93a from memory into f9
li x3, 0x5fba9cd553818134 # load x3 with value 0x5fba9cd553818134
sw x3, 0(x2) # store 0x5fba9cd553818134 in memory
flh f31, 0(x2) # load 0x5fba9cd553818134 from memory into f31
li x3, 0x00007e00 # load x3 with value 0x00007e00
sw x3, 0(x2) # store 0x00007e00 in memory
flh f14, 0(x2) # load 0x00007e00 from memory into f14
fnmadd.h f7, f9, f31, f14, dyn # perform operation
fnmadd.h f7, f9, f31, f14, rdn # perform operation
fnmadd.h f7, f9, f31, f14, rmm # perform operation
fnmadd.h f7, f9, f31, f14, rne # perform operation
fnmadd.h f7, f9, f31, f14, rtz # perform operation
fnmadd.h f7, f9, f31, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f7, f9, f31, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f7, f9, f31, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f7, f9, f31, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f7, f9, f31, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f7, f9, f31, f14 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc93a fs3 = 0x7fff)
li x6, 0xa824548b8af947ff # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f5, 0(x2) # load 0x0000c93a from memory into f5
li x3, 0xb6c8787728aad9be # load x3 with value 0xb6c8787728aad9be
sw x3, 0(x2) # store 0xb6c8787728aad9be in memory
flh f20, 0(x2) # load 0xb6c8787728aad9be from memory into f20
li x3, 0x00007fff # load x3 with value 0x00007fff
sw x3, 0(x2) # store 0x00007fff in memory
flh f26, 0(x2) # load 0x00007fff from memory into f26
fnmadd.h f6, f5, f20, f26, dyn # perform operation
fnmadd.h f6, f5, f20, f26, rdn # perform operation
fnmadd.h f6, f5, f20, f26, rmm # perform operation
fnmadd.h f6, f5, f20, f26, rne # perform operation
fnmadd.h f6, f5, f20, f26, rtz # perform operation
fnmadd.h f6, f5, f20, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f6, f5, f20, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f6, f5, f20, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f6, f5, f20, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f6, f5, f20, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f6, f5, f20, f26 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc93a fs3 = 0x7c01)
li x10, 0xe82bcbeed565a7cc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f18, 0(x2) # load 0x0000c93a from memory into f18
li x3, 0x958dbda0eff0726d # load x3 with value 0x958dbda0eff0726d
sw x3, 0(x2) # store 0x958dbda0eff0726d in memory
flh f30, 0(x2) # load 0x958dbda0eff0726d from memory into f30
li x3, 0x00007c01 # load x3 with value 0x00007c01
sw x3, 0(x2) # store 0x00007c01 in memory
flh f27, 0(x2) # load 0x00007c01 from memory into f27
fnmadd.h f10, f18, f30, f27, dyn # perform operation
fnmadd.h f10, f18, f30, f27, rdn # perform operation
fnmadd.h f10, f18, f30, f27, rmm # perform operation
fnmadd.h f10, f18, f30, f27, rne # perform operation
fnmadd.h f10, f18, f30, f27, rtz # perform operation
fnmadd.h f10, f18, f30, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f10, f18, f30, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f10, f18, f30, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f10, f18, f30, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f10, f18, f30, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f10, f18, f30, f27 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc93a fs3 = 0x7dff)
li x6, 0x81851aaef842d583 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f17, 0(x2) # load 0x0000c93a from memory into f17
li x3, 0x9426c1bcb9e0192c # load x3 with value 0x9426c1bcb9e0192c
sw x3, 0(x2) # store 0x9426c1bcb9e0192c in memory
flh f23, 0(x2) # load 0x9426c1bcb9e0192c from memory into f23
li x3, 0x00007dff # load x3 with value 0x00007dff
sw x3, 0(x2) # store 0x00007dff in memory
flh f30, 0(x2) # load 0x00007dff from memory into f30
fnmadd.h f6, f17, f23, f30, dyn # perform operation
fnmadd.h f6, f17, f23, f30, rdn # perform operation
fnmadd.h f6, f17, f23, f30, rmm # perform operation
fnmadd.h f6, f17, f23, f30, rne # perform operation
fnmadd.h f6, f17, f23, f30, rtz # perform operation
fnmadd.h f6, f17, f23, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f6, f17, f23, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f6, f17, f23, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f6, f17, f23, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f6, f17, f23, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f6, f17, f23, f30 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc93a fs3 = 0x58b4)
li x13, 0x7d9cb76b4d46aa86 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f8, 0(x2) # load 0x0000c93a from memory into f8
li x3, 0xace6e1bf17935e47 # load x3 with value 0xace6e1bf17935e47
sw x3, 0(x2) # store 0xace6e1bf17935e47 in memory
flh f17, 0(x2) # load 0xace6e1bf17935e47 from memory into f17
li x3, 0x000058b4 # load x3 with value 0x000058b4
sw x3, 0(x2) # store 0x000058b4 in memory
flh f16, 0(x2) # load 0x000058b4 from memory into f16
fnmadd.h f13, f8, f17, f16, dyn # perform operation
fnmadd.h f13, f8, f17, f16, rdn # perform operation
fnmadd.h f13, f8, f17, f16, rmm # perform operation
fnmadd.h f13, f8, f17, f16, rne # perform operation
fnmadd.h f13, f8, f17, f16, rtz # perform operation
fnmadd.h f13, f8, f17, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f13, f8, f17, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f13, f8, f17, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f13, f8, f17, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f13, f8, f17, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f13, f8, f17, f16 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc93a fs3 = 0xc93a)
li x28, 0x0cb975d65f3a13c2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f12, 0(x2) # load 0x0000c93a from memory into f12
li x3, 0x43e82edcbb9cf211 # load x3 with value 0x43e82edcbb9cf211
sw x3, 0(x2) # store 0x43e82edcbb9cf211 in memory
flh f29, 0(x2) # load 0x43e82edcbb9cf211 from memory into f29
li x3, 0x0000c93a # load x3 with value 0x0000c93a
sw x3, 0(x2) # store 0x0000c93a in memory
flh f25, 0(x2) # load 0x0000c93a from memory into f25
fnmadd.h f28, f12, f29, f25, dyn # perform operation
fnmadd.h f28, f12, f29, f25, rdn # perform operation
fnmadd.h f28, f12, f29, f25, rmm # perform operation
fnmadd.h f28, f12, f29, f25, rne # perform operation
fnmadd.h f28, f12, f29, f25, rtz # perform operation
fnmadd.h f28, f12, f29, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.h f28, f12, f29, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.h f28, f12, f29, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.h f28, f12, f29, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.h f28, f12, f29, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.h f28, f12, f29, f25 # perform operation

# Testcase cp_fd (Test destination fd = x0)
li x0, 0x6671e61b9b057908 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x41b8fabab566b57e # load x3 with value 0x41b8fabab566b57e
sw x3, 0(x2) # store 0x41b8fabab566b57e in memory
flh f11, 0(x2) # load 0x41b8fabab566b57e from memory into f11
li x3, 0xa203ea4e54ea09fe # load x3 with value 0xa203ea4e54ea09fe
sw x3, 0(x2) # store 0xa203ea4e54ea09fe in memory
flh f29, 0(x2) # load 0xa203ea4e54ea09fe from memory into f29
li x3, 0xb5f03f7f03bbbea # load x3 with value 0xb5f03f7f03bbbea
sw x3, 0(x2) # store 0xb5f03f7f03bbbea in memory
flh f13, 0(x2) # load 0xb5f03f7f03bbbea from memory into f13
fnmadd.h f0, f11, f29, f13 # perform operation

# Testcase cp_fd (Test destination fd = x1)
li x1, 0xd884790b9374f460 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x1ba4bd86e0b633a2 # load x3 with value 0x1ba4bd86e0b633a2
sw x3, 0(x2) # store 0x1ba4bd86e0b633a2 in memory
flh f17, 0(x2) # load 0x1ba4bd86e0b633a2 from memory into f17
li x3, 0x219de78c93f15da9 # load x3 with value 0x219de78c93f15da9
sw x3, 0(x2) # store 0x219de78c93f15da9 in memory
flh f5, 0(x2) # load 0x219de78c93f15da9 from memory into f5
li x3, 0x6e30757a4ff36165 # load x3 with value 0x6e30757a4ff36165
sw x3, 0(x2) # store 0x6e30757a4ff36165 in memory
flh f13, 0(x2) # load 0x6e30757a4ff36165 from memory into f13
fnmadd.h f1, f17, f5, f13 # perform operation

# Testcase cp_fd (Test destination fd = x2)
li x2, 0xaa2fdd6aa336a180 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x2b53eaac9150cffe # load x3 with value 0x2b53eaac9150cffe
sw x3, 0(x2) # store 0x2b53eaac9150cffe in memory
flh f27, 0(x2) # load 0x2b53eaac9150cffe from memory into f27
li x3, 0xc90bc301a84d728 # load x3 with value 0xc90bc301a84d728
sw x3, 0(x2) # store 0xc90bc301a84d728 in memory
flh f5, 0(x2) # load 0xc90bc301a84d728 from memory into f5
li x3, 0x4735cd741aff294b # load x3 with value 0x4735cd741aff294b
sw x3, 0(x2) # store 0x4735cd741aff294b in memory
flh f1, 0(x2) # load 0x4735cd741aff294b from memory into f1
fnmadd.h f2, f27, f5, f1 # perform operation

# Testcase cp_fd (Test destination fd = x3)
li x3, 0x626ddb39294656e3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x1d1dc56f2edfe3bf # load x3 with value 0x1d1dc56f2edfe3bf
sw x3, 0(x2) # store 0x1d1dc56f2edfe3bf in memory
flh f8, 0(x2) # load 0x1d1dc56f2edfe3bf from memory into f8
li x3, 0x335768c849f4cd26 # load x3 with value 0x335768c849f4cd26
sw x3, 0(x2) # store 0x335768c849f4cd26 in memory
flh f6, 0(x2) # load 0x335768c849f4cd26 from memory into f6
li x3, 0xdc4db90aa61d8475 # load x3 with value 0xdc4db90aa61d8475
sw x3, 0(x2) # store 0xdc4db90aa61d8475 in memory
flh f19, 0(x2) # load 0xdc4db90aa61d8475 from memory into f19
fnmadd.h f3, f8, f6, f19 # perform operation

# Testcase cp_fd (Test destination fd = x4)
li x4, 0x50a57cf9da423c9b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x2bcd7f2fe6f1e4a4 # load x3 with value 0x2bcd7f2fe6f1e4a4
sw x3, 0(x2) # store 0x2bcd7f2fe6f1e4a4 in memory
flh f2, 0(x2) # load 0x2bcd7f2fe6f1e4a4 from memory into f2
li x3, 0x30ec75352b0d440d # load x3 with value 0x30ec75352b0d440d
sw x3, 0(x2) # store 0x30ec75352b0d440d in memory
flh f20, 0(x2) # load 0x30ec75352b0d440d from memory into f20
li x3, 0xfc1231b16db392e9 # load x3 with value 0xfc1231b16db392e9
sw x3, 0(x2) # store 0xfc1231b16db392e9 in memory
flh f16, 0(x2) # load 0xfc1231b16db392e9 from memory into f16
fnmadd.h f4, f2, f20, f16 # perform operation

# Testcase cp_fd (Test destination fd = x5)
li x5, 0xc570ecb280c5d24a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x833b8133d32e0abf # load x3 with value 0x833b8133d32e0abf
sw x3, 0(x2) # store 0x833b8133d32e0abf in memory
flh f4, 0(x2) # load 0x833b8133d32e0abf from memory into f4
li x3, 0x57459164bf5fbaa8 # load x3 with value 0x57459164bf5fbaa8
sw x3, 0(x2) # store 0x57459164bf5fbaa8 in memory
flh f31, 0(x2) # load 0x57459164bf5fbaa8 from memory into f31
li x3, 0xc2290b9e139233f6 # load x3 with value 0xc2290b9e139233f6
sw x3, 0(x2) # store 0xc2290b9e139233f6 in memory
flh f22, 0(x2) # load 0xc2290b9e139233f6 from memory into f22
fnmadd.h f5, f4, f31, f22 # perform operation

# Testcase cp_fd (Test destination fd = x6)
li x6, 0xa94c350e8296a6f2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xb2bcfe4024813f7c # load x3 with value 0xb2bcfe4024813f7c
sw x3, 0(x2) # store 0xb2bcfe4024813f7c in memory
flh f28, 0(x2) # load 0xb2bcfe4024813f7c from memory into f28
li x3, 0x40a0d53f69cbd623 # load x3 with value 0x40a0d53f69cbd623
sw x3, 0(x2) # store 0x40a0d53f69cbd623 in memory
flh f31, 0(x2) # load 0x40a0d53f69cbd623 from memory into f31
li x3, 0x8183c523bb45a5f4 # load x3 with value 0x8183c523bb45a5f4
sw x3, 0(x2) # store 0x8183c523bb45a5f4 in memory
flh f14, 0(x2) # load 0x8183c523bb45a5f4 from memory into f14
fnmadd.h f6, f28, f31, f14 # perform operation

# Testcase cp_fd (Test destination fd = x7)
li x7, 0xdc5eebf6697b2c6f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x24d1fbae06be96d5 # load x3 with value 0x24d1fbae06be96d5
sw x3, 0(x2) # store 0x24d1fbae06be96d5 in memory
flh f3, 0(x2) # load 0x24d1fbae06be96d5 from memory into f3
li x3, 0xdb45a9dc7de52745 # load x3 with value 0xdb45a9dc7de52745
sw x3, 0(x2) # store 0xdb45a9dc7de52745 in memory
flh f14, 0(x2) # load 0xdb45a9dc7de52745 from memory into f14
li x3, 0x681a6fd656eadb17 # load x3 with value 0x681a6fd656eadb17
sw x3, 0(x2) # store 0x681a6fd656eadb17 in memory
flh f24, 0(x2) # load 0x681a6fd656eadb17 from memory into f24
fnmadd.h f7, f3, f14, f24 # perform operation

# Testcase cp_fd (Test destination fd = x8)
li x8, 0x3bb6796807964d79 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x63dd3d8d8eeab609 # load x3 with value 0x63dd3d8d8eeab609
sw x3, 0(x2) # store 0x63dd3d8d8eeab609 in memory
flh f21, 0(x2) # load 0x63dd3d8d8eeab609 from memory into f21
li x3, 0xb72b5a5f96efba81 # load x3 with value 0xb72b5a5f96efba81
sw x3, 0(x2) # store 0xb72b5a5f96efba81 in memory
flh f20, 0(x2) # load 0xb72b5a5f96efba81 from memory into f20
li x3, 0x19987c2a3ef59709 # load x3 with value 0x19987c2a3ef59709
sw x3, 0(x2) # store 0x19987c2a3ef59709 in memory
flh f11, 0(x2) # load 0x19987c2a3ef59709 from memory into f11
fnmadd.h f8, f21, f20, f11 # perform operation

# Testcase cp_fd (Test destination fd = x9)
li x9, 0x00b1f4e6d13df7ba # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xed824ef445871293 # load x3 with value 0xed824ef445871293
sw x3, 0(x2) # store 0xed824ef445871293 in memory
flh f30, 0(x2) # load 0xed824ef445871293 from memory into f30
li x3, 0x91f5bf123f7f4fc1 # load x3 with value 0x91f5bf123f7f4fc1
sw x3, 0(x2) # store 0x91f5bf123f7f4fc1 in memory
flh f1, 0(x2) # load 0x91f5bf123f7f4fc1 from memory into f1
li x3, 0xa6812986d95de180 # load x3 with value 0xa6812986d95de180
sw x3, 0(x2) # store 0xa6812986d95de180 in memory
flh f9, 0(x2) # load 0xa6812986d95de180 from memory into f9
fnmadd.h f9, f30, f1, f9 # perform operation

# Testcase cp_fd (Test destination fd = x10)
li x10, 0x02ccb4aa4023379c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x66369ad1218b826d # load x3 with value 0x66369ad1218b826d
sw x3, 0(x2) # store 0x66369ad1218b826d in memory
flh f6, 0(x2) # load 0x66369ad1218b826d from memory into f6
li x3, 0x14faa34285f43a9c # load x3 with value 0x14faa34285f43a9c
sw x3, 0(x2) # store 0x14faa34285f43a9c in memory
flh f31, 0(x2) # load 0x14faa34285f43a9c from memory into f31
li x3, 0x466b9e393c959a6 # load x3 with value 0x466b9e393c959a6
sw x3, 0(x2) # store 0x466b9e393c959a6 in memory
flh f15, 0(x2) # load 0x466b9e393c959a6 from memory into f15
fnmadd.h f10, f6, f31, f15 # perform operation

# Testcase cp_fd (Test destination fd = x11)
li x11, 0xd0d285b9a4721e84 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xd35538939b42f34d # load x3 with value 0xd35538939b42f34d
sw x3, 0(x2) # store 0xd35538939b42f34d in memory
flh f23, 0(x2) # load 0xd35538939b42f34d from memory into f23
li x3, 0x6fce3b0e94571d77 # load x3 with value 0x6fce3b0e94571d77
sw x3, 0(x2) # store 0x6fce3b0e94571d77 in memory
flh f7, 0(x2) # load 0x6fce3b0e94571d77 from memory into f7
li x3, 0xc8f938669b65798d # load x3 with value 0xc8f938669b65798d
sw x3, 0(x2) # store 0xc8f938669b65798d in memory
flh f3, 0(x2) # load 0xc8f938669b65798d from memory into f3
fnmadd.h f11, f23, f7, f3 # perform operation

# Testcase cp_fd (Test destination fd = x12)
li x12, 0x3a65433679ce6fe6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x19a2acd79af5d739 # load x3 with value 0x19a2acd79af5d739
sw x3, 0(x2) # store 0x19a2acd79af5d739 in memory
flh f26, 0(x2) # load 0x19a2acd79af5d739 from memory into f26
li x3, 0xe93ae903b1c1ea55 # load x3 with value 0xe93ae903b1c1ea55
sw x3, 0(x2) # store 0xe93ae903b1c1ea55 in memory
flh f29, 0(x2) # load 0xe93ae903b1c1ea55 from memory into f29
li x3, 0x4eaa3a4f89444a45 # load x3 with value 0x4eaa3a4f89444a45
sw x3, 0(x2) # store 0x4eaa3a4f89444a45 in memory
flh f3, 0(x2) # load 0x4eaa3a4f89444a45 from memory into f3
fnmadd.h f12, f26, f29, f3 # perform operation

# Testcase cp_fd (Test destination fd = x13)
li x13, 0xe5143458509bec78 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xf65cbeece8a8962e # load x3 with value 0xf65cbeece8a8962e
sw x3, 0(x2) # store 0xf65cbeece8a8962e in memory
flh f9, 0(x2) # load 0xf65cbeece8a8962e from memory into f9
li x3, 0x7f0ee72db2d1a899 # load x3 with value 0x7f0ee72db2d1a899
sw x3, 0(x2) # store 0x7f0ee72db2d1a899 in memory
flh f6, 0(x2) # load 0x7f0ee72db2d1a899 from memory into f6
li x3, 0x7c4d655062658388 # load x3 with value 0x7c4d655062658388
sw x3, 0(x2) # store 0x7c4d655062658388 in memory
flh f8, 0(x2) # load 0x7c4d655062658388 from memory into f8
fnmadd.h f13, f9, f6, f8 # perform operation

# Testcase cp_fd (Test destination fd = x14)
li x14, 0xff5cdc501233aae8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x27cf5acb26e8c93b # load x3 with value 0x27cf5acb26e8c93b
sw x3, 0(x2) # store 0x27cf5acb26e8c93b in memory
flh f9, 0(x2) # load 0x27cf5acb26e8c93b from memory into f9
li x3, 0xa9e953d0c9b3e3ba # load x3 with value 0xa9e953d0c9b3e3ba
sw x3, 0(x2) # store 0xa9e953d0c9b3e3ba in memory
flh f31, 0(x2) # load 0xa9e953d0c9b3e3ba from memory into f31
li x3, 0x323a35708ae6d6d7 # load x3 with value 0x323a35708ae6d6d7
sw x3, 0(x2) # store 0x323a35708ae6d6d7 in memory
flh f3, 0(x2) # load 0x323a35708ae6d6d7 from memory into f3
fnmadd.h f14, f9, f31, f3 # perform operation

# Testcase cp_fd (Test destination fd = x15)
li x15, 0x8265d7c71ca2b9d6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xb9bbf08feb1bd37d # load x3 with value 0xb9bbf08feb1bd37d
sw x3, 0(x2) # store 0xb9bbf08feb1bd37d in memory
flh f28, 0(x2) # load 0xb9bbf08feb1bd37d from memory into f28
li x3, 0xe1a5995fbfd3cf68 # load x3 with value 0xe1a5995fbfd3cf68
sw x3, 0(x2) # store 0xe1a5995fbfd3cf68 in memory
flh f5, 0(x2) # load 0xe1a5995fbfd3cf68 from memory into f5
li x3, 0xb3304e1fbb245673 # load x3 with value 0xb3304e1fbb245673
sw x3, 0(x2) # store 0xb3304e1fbb245673 in memory
flh f2, 0(x2) # load 0xb3304e1fbb245673 from memory into f2
fnmadd.h f15, f28, f5, f2 # perform operation

# Testcase cp_fd (Test destination fd = x16)
li x16, 0x58560fd759ac9748 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xf024388e280ec4d8 # load x3 with value 0xf024388e280ec4d8
sw x3, 0(x2) # store 0xf024388e280ec4d8 in memory
flh f31, 0(x2) # load 0xf024388e280ec4d8 from memory into f31
li x3, 0x5993fe3f68779aac # load x3 with value 0x5993fe3f68779aac
sw x3, 0(x2) # store 0x5993fe3f68779aac in memory
flh f2, 0(x2) # load 0x5993fe3f68779aac from memory into f2
li x3, 0x6fa3211183e2f3b0 # load x3 with value 0x6fa3211183e2f3b0
sw x3, 0(x2) # store 0x6fa3211183e2f3b0 in memory
flh f6, 0(x2) # load 0x6fa3211183e2f3b0 from memory into f6
fnmadd.h f16, f31, f2, f6 # perform operation

# Testcase cp_fd (Test destination fd = x17)
li x17, 0xbba0cf51e68ad820 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x75a7da97ae4dadc4 # load x3 with value 0x75a7da97ae4dadc4
sw x3, 0(x2) # store 0x75a7da97ae4dadc4 in memory
flh f4, 0(x2) # load 0x75a7da97ae4dadc4 from memory into f4
li x3, 0x833423f066f97907 # load x3 with value 0x833423f066f97907
sw x3, 0(x2) # store 0x833423f066f97907 in memory
flh f23, 0(x2) # load 0x833423f066f97907 from memory into f23
li x3, 0x82001a435fa6c650 # load x3 with value 0x82001a435fa6c650
sw x3, 0(x2) # store 0x82001a435fa6c650 in memory
flh f20, 0(x2) # load 0x82001a435fa6c650 from memory into f20
fnmadd.h f17, f4, f23, f20 # perform operation

# Testcase cp_fd (Test destination fd = x18)
li x18, 0x27b8191cb703d250 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xe26ec55baa0bf8e0 # load x3 with value 0xe26ec55baa0bf8e0
sw x3, 0(x2) # store 0xe26ec55baa0bf8e0 in memory
flh f2, 0(x2) # load 0xe26ec55baa0bf8e0 from memory into f2
li x3, 0x1afef50a2425e0cd # load x3 with value 0x1afef50a2425e0cd
sw x3, 0(x2) # store 0x1afef50a2425e0cd in memory
flh f22, 0(x2) # load 0x1afef50a2425e0cd from memory into f22
li x3, 0x7dce8f2c86f3b3f8 # load x3 with value 0x7dce8f2c86f3b3f8
sw x3, 0(x2) # store 0x7dce8f2c86f3b3f8 in memory
flh f26, 0(x2) # load 0x7dce8f2c86f3b3f8 from memory into f26
fnmadd.h f18, f2, f22, f26 # perform operation

# Testcase cp_fd (Test destination fd = x19)
li x19, 0xd9c767bee9cb85a0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x39bb37335dba6daf # load x3 with value 0x39bb37335dba6daf
sw x3, 0(x2) # store 0x39bb37335dba6daf in memory
flh f15, 0(x2) # load 0x39bb37335dba6daf from memory into f15
li x3, 0x1f60dc82da7f92e9 # load x3 with value 0x1f60dc82da7f92e9
sw x3, 0(x2) # store 0x1f60dc82da7f92e9 in memory
flh f24, 0(x2) # load 0x1f60dc82da7f92e9 from memory into f24
li x3, 0xef8055e617ffb7ff # load x3 with value 0xef8055e617ffb7ff
sw x3, 0(x2) # store 0xef8055e617ffb7ff in memory
flh f1, 0(x2) # load 0xef8055e617ffb7ff from memory into f1
fnmadd.h f19, f15, f24, f1 # perform operation

# Testcase cp_fd (Test destination fd = x20)
li x20, 0x1a942e5dc4dc01f2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x884b90c364c17198 # load x3 with value 0x884b90c364c17198
sw x3, 0(x2) # store 0x884b90c364c17198 in memory
flh f26, 0(x2) # load 0x884b90c364c17198 from memory into f26
li x3, 0xfd52a2fedbc9eb0e # load x3 with value 0xfd52a2fedbc9eb0e
sw x3, 0(x2) # store 0xfd52a2fedbc9eb0e in memory
flh f12, 0(x2) # load 0xfd52a2fedbc9eb0e from memory into f12
li x3, 0xc892efb6c97cbeb7 # load x3 with value 0xc892efb6c97cbeb7
sw x3, 0(x2) # store 0xc892efb6c97cbeb7 in memory
flh f21, 0(x2) # load 0xc892efb6c97cbeb7 from memory into f21
fnmadd.h f20, f26, f12, f21 # perform operation

# Testcase cp_fd (Test destination fd = x21)
li x21, 0x19448c1941057916 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa578bab8558b035a # load x3 with value 0xa578bab8558b035a
sw x3, 0(x2) # store 0xa578bab8558b035a in memory
flh f1, 0(x2) # load 0xa578bab8558b035a from memory into f1
li x3, 0x3aecc744ddee8a4f # load x3 with value 0x3aecc744ddee8a4f
sw x3, 0(x2) # store 0x3aecc744ddee8a4f in memory
flh f13, 0(x2) # load 0x3aecc744ddee8a4f from memory into f13
li x3, 0xf06f2abcfa15eb1c # load x3 with value 0xf06f2abcfa15eb1c
sw x3, 0(x2) # store 0xf06f2abcfa15eb1c in memory
flh f14, 0(x2) # load 0xf06f2abcfa15eb1c from memory into f14
fnmadd.h f21, f1, f13, f14 # perform operation

# Testcase cp_fd (Test destination fd = x22)
li x22, 0x9092b050e51cfb7e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x4e75314df72f67a0 # load x3 with value 0x4e75314df72f67a0
sw x3, 0(x2) # store 0x4e75314df72f67a0 in memory
flh f16, 0(x2) # load 0x4e75314df72f67a0 from memory into f16
li x3, 0x1292abd8b7071e9d # load x3 with value 0x1292abd8b7071e9d
sw x3, 0(x2) # store 0x1292abd8b7071e9d in memory
flh f10, 0(x2) # load 0x1292abd8b7071e9d from memory into f10
li x3, 0x53405c8e7d370ec5 # load x3 with value 0x53405c8e7d370ec5
sw x3, 0(x2) # store 0x53405c8e7d370ec5 in memory
flh f12, 0(x2) # load 0x53405c8e7d370ec5 from memory into f12
fnmadd.h f22, f16, f10, f12 # perform operation

# Testcase cp_fd (Test destination fd = x23)
li x23, 0xe2fcd5b47b758b2a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa42b2c4a523e8151 # load x3 with value 0xa42b2c4a523e8151
sw x3, 0(x2) # store 0xa42b2c4a523e8151 in memory
flh f15, 0(x2) # load 0xa42b2c4a523e8151 from memory into f15
li x3, 0x5c9b2ab37cb20e # load x3 with value 0x5c9b2ab37cb20e
sw x3, 0(x2) # store 0x5c9b2ab37cb20e in memory
flh f26, 0(x2) # load 0x5c9b2ab37cb20e from memory into f26
li x3, 0xba23c19fad08f28a # load x3 with value 0xba23c19fad08f28a
sw x3, 0(x2) # store 0xba23c19fad08f28a in memory
flh f7, 0(x2) # load 0xba23c19fad08f28a from memory into f7
fnmadd.h f23, f15, f26, f7 # perform operation

# Testcase cp_fd (Test destination fd = x24)
li x24, 0x31625d8ab6f591cf # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xeb63cb24eb066a4c # load x3 with value 0xeb63cb24eb066a4c
sw x3, 0(x2) # store 0xeb63cb24eb066a4c in memory
flh f7, 0(x2) # load 0xeb63cb24eb066a4c from memory into f7
li x3, 0x18f5fd614926f5f7 # load x3 with value 0x18f5fd614926f5f7
sw x3, 0(x2) # store 0x18f5fd614926f5f7 in memory
flh f20, 0(x2) # load 0x18f5fd614926f5f7 from memory into f20
li x3, 0x1d9e77da33dd8283 # load x3 with value 0x1d9e77da33dd8283
sw x3, 0(x2) # store 0x1d9e77da33dd8283 in memory
flh f28, 0(x2) # load 0x1d9e77da33dd8283 from memory into f28
fnmadd.h f24, f7, f20, f28 # perform operation

# Testcase cp_fd (Test destination fd = x25)
li x25, 0x35d0ac416f15e50b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc1275b70ace784c0 # load x3 with value 0xc1275b70ace784c0
sw x3, 0(x2) # store 0xc1275b70ace784c0 in memory
flh f29, 0(x2) # load 0xc1275b70ace784c0 from memory into f29
li x3, 0x163ece090a44d5b9 # load x3 with value 0x163ece090a44d5b9
sw x3, 0(x2) # store 0x163ece090a44d5b9 in memory
flh f21, 0(x2) # load 0x163ece090a44d5b9 from memory into f21
li x3, 0xe645834f01a49cd8 # load x3 with value 0xe645834f01a49cd8
sw x3, 0(x2) # store 0xe645834f01a49cd8 in memory
flh f4, 0(x2) # load 0xe645834f01a49cd8 from memory into f4
fnmadd.h f25, f29, f21, f4 # perform operation

# Testcase cp_fd (Test destination fd = x26)
li x26, 0xf23466c791835d90 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xcc9e252e6c630644 # load x3 with value 0xcc9e252e6c630644
sw x3, 0(x2) # store 0xcc9e252e6c630644 in memory
flh f25, 0(x2) # load 0xcc9e252e6c630644 from memory into f25
li x3, 0x6383909b60f25287 # load x3 with value 0x6383909b60f25287
sw x3, 0(x2) # store 0x6383909b60f25287 in memory
flh f22, 0(x2) # load 0x6383909b60f25287 from memory into f22
li x3, 0xfcc4cb701522639d # load x3 with value 0xfcc4cb701522639d
sw x3, 0(x2) # store 0xfcc4cb701522639d in memory
flh f23, 0(x2) # load 0xfcc4cb701522639d from memory into f23
fnmadd.h f26, f25, f22, f23 # perform operation

# Testcase cp_fd (Test destination fd = x27)
li x27, 0x3d12f3852456fdd6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xf3c79e7d63d453f1 # load x3 with value 0xf3c79e7d63d453f1
sw x3, 0(x2) # store 0xf3c79e7d63d453f1 in memory
flh f6, 0(x2) # load 0xf3c79e7d63d453f1 from memory into f6
li x3, 0x29847cb49b61741a # load x3 with value 0x29847cb49b61741a
sw x3, 0(x2) # store 0x29847cb49b61741a in memory
flh f3, 0(x2) # load 0x29847cb49b61741a from memory into f3
li x3, 0xcd481ac616ab1780 # load x3 with value 0xcd481ac616ab1780
sw x3, 0(x2) # store 0xcd481ac616ab1780 in memory
flh f27, 0(x2) # load 0xcd481ac616ab1780 from memory into f27
fnmadd.h f27, f6, f3, f27 # perform operation

# Testcase cp_fd (Test destination fd = x28)
li x28, 0xdecbf38608e060d1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3754ecb2709f32c # load x3 with value 0x3754ecb2709f32c
sw x3, 0(x2) # store 0x3754ecb2709f32c in memory
flh f7, 0(x2) # load 0x3754ecb2709f32c from memory into f7
li x3, 0xb2be9daf55ba1b1d # load x3 with value 0xb2be9daf55ba1b1d
sw x3, 0(x2) # store 0xb2be9daf55ba1b1d in memory
flh f2, 0(x2) # load 0xb2be9daf55ba1b1d from memory into f2
li x3, 0xf1071878a98d2754 # load x3 with value 0xf1071878a98d2754
sw x3, 0(x2) # store 0xf1071878a98d2754 in memory
flh f26, 0(x2) # load 0xf1071878a98d2754 from memory into f26
fnmadd.h f28, f7, f2, f26 # perform operation

# Testcase cp_fd (Test destination fd = x29)
li x29, 0x5bb603bf88632efd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xeb7c623b84a8b83 # load x3 with value 0xeb7c623b84a8b83
sw x3, 0(x2) # store 0xeb7c623b84a8b83 in memory
flh f25, 0(x2) # load 0xeb7c623b84a8b83 from memory into f25
li x3, 0x91f4dba277e2bee2 # load x3 with value 0x91f4dba277e2bee2
sw x3, 0(x2) # store 0x91f4dba277e2bee2 in memory
flh f12, 0(x2) # load 0x91f4dba277e2bee2 from memory into f12
li x3, 0xbfe1ebf27e28a9aa # load x3 with value 0xbfe1ebf27e28a9aa
sw x3, 0(x2) # store 0xbfe1ebf27e28a9aa in memory
flh f16, 0(x2) # load 0xbfe1ebf27e28a9aa from memory into f16
fnmadd.h f29, f25, f12, f16 # perform operation

# Testcase cp_fd (Test destination fd = x30)
li x30, 0x9fdb2efc3726df37 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x6d1b9bc91b05473f # load x3 with value 0x6d1b9bc91b05473f
sw x3, 0(x2) # store 0x6d1b9bc91b05473f in memory
flh f6, 0(x2) # load 0x6d1b9bc91b05473f from memory into f6
li x3, 0xd5eb600553e75103 # load x3 with value 0xd5eb600553e75103
sw x3, 0(x2) # store 0xd5eb600553e75103 in memory
flh f21, 0(x2) # load 0xd5eb600553e75103 from memory into f21
li x3, 0xaa9066327a25edc3 # load x3 with value 0xaa9066327a25edc3
sw x3, 0(x2) # store 0xaa9066327a25edc3 in memory
flh f12, 0(x2) # load 0xaa9066327a25edc3 from memory into f12
fnmadd.h f30, f6, f21, f12 # perform operation

# Testcase cp_fd (Test destination fd = x31)
li x31, 0xb252ca7f9d0b3e40 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x60e01f30a850d8d2 # load x3 with value 0x60e01f30a850d8d2
sw x3, 0(x2) # store 0x60e01f30a850d8d2 in memory
flh f29, 0(x2) # load 0x60e01f30a850d8d2 from memory into f29
li x3, 0x53a8938f65c0ca99 # load x3 with value 0x53a8938f65c0ca99
sw x3, 0(x2) # store 0x53a8938f65c0ca99 in memory
flh f27, 0(x2) # load 0x53a8938f65c0ca99 from memory into f27
li x3, 0xa8a3f937891e7c10 # load x3 with value 0xa8a3f937891e7c10
sw x3, 0(x2) # store 0xa8a3f937891e7c10 in memory
flh f20, 0(x2) # load 0xa8a3f937891e7c10 from memory into f20
fnmadd.h f31, f29, f27, f20 # perform operation

# Testcase cp_fs1 (Test source fs1 = f0)
li x13, 0xd0cedf7543ff37fb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x1d7429f03eff2fd2 # load x3 with value 0x1d7429f03eff2fd2
sw x3, 0(x2) # store 0x1d7429f03eff2fd2 in memory
flh f0, 0(x2) # load 0x1d7429f03eff2fd2 from memory into f0
li x3, 0xdaf2f18f997d135 # load x3 with value 0xdaf2f18f997d135
sw x3, 0(x2) # store 0xdaf2f18f997d135 in memory
flh f4, 0(x2) # load 0xdaf2f18f997d135 from memory into f4
li x3, 0x48c349dc971c3f77 # load x3 with value 0x48c349dc971c3f77
sw x3, 0(x2) # store 0x48c349dc971c3f77 in memory
flh f5, 0(x2) # load 0x48c349dc971c3f77 from memory into f5
fnmadd.h f13, f0, f4, f5 # perform operation

# Testcase cp_fs1 (Test source fs1 = f1)
li x3, 0x37794d82dff31250 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xd03716799c472ab0 # load x3 with value 0xd03716799c472ab0
sw x3, 0(x2) # store 0xd03716799c472ab0 in memory
flh f1, 0(x2) # load 0xd03716799c472ab0 from memory into f1
li x3, 0x524122166756571c # load x3 with value 0x524122166756571c
sw x3, 0(x2) # store 0x524122166756571c in memory
flh f15, 0(x2) # load 0x524122166756571c from memory into f15
li x3, 0xf7aa75829add8d89 # load x3 with value 0xf7aa75829add8d89
sw x3, 0(x2) # store 0xf7aa75829add8d89 in memory
flh f27, 0(x2) # load 0xf7aa75829add8d89 from memory into f27
fnmadd.h f3, f1, f15, f27 # perform operation

# Testcase cp_fs1 (Test source fs1 = f2)
li x5, 0x0a40cf74c2266d61 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xedc062daea5dfa65 # load x3 with value 0xedc062daea5dfa65
sw x3, 0(x2) # store 0xedc062daea5dfa65 in memory
flh f2, 0(x2) # load 0xedc062daea5dfa65 from memory into f2
li x3, 0xc61f60904a6f258a # load x3 with value 0xc61f60904a6f258a
sw x3, 0(x2) # store 0xc61f60904a6f258a in memory
flh f9, 0(x2) # load 0xc61f60904a6f258a from memory into f9
li x3, 0x44f64ea9fde1d18e # load x3 with value 0x44f64ea9fde1d18e
sw x3, 0(x2) # store 0x44f64ea9fde1d18e in memory
flh f4, 0(x2) # load 0x44f64ea9fde1d18e from memory into f4
fnmadd.h f5, f2, f9, f4 # perform operation

# Testcase cp_fs1 (Test source fs1 = f3)
li x7, 0xe0e93e490ca7e083 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3ab6ca9a892e9ab6 # load x3 with value 0x3ab6ca9a892e9ab6
sw x3, 0(x2) # store 0x3ab6ca9a892e9ab6 in memory
flh f3, 0(x2) # load 0x3ab6ca9a892e9ab6 from memory into f3
li x3, 0x7af22be495ffb472 # load x3 with value 0x7af22be495ffb472
sw x3, 0(x2) # store 0x7af22be495ffb472 in memory
flh f26, 0(x2) # load 0x7af22be495ffb472 from memory into f26
li x3, 0xcedd4fe282cef0d9 # load x3 with value 0xcedd4fe282cef0d9
sw x3, 0(x2) # store 0xcedd4fe282cef0d9 in memory
flh f20, 0(x2) # load 0xcedd4fe282cef0d9 from memory into f20
fnmadd.h f7, f3, f26, f20 # perform operation

# Testcase cp_fs1 (Test source fs1 = f4)
li x2, 0x0631d4d53fa46754 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa33080af69c7dde4 # load x3 with value 0xa33080af69c7dde4
sw x3, 0(x2) # store 0xa33080af69c7dde4 in memory
flh f4, 0(x2) # load 0xa33080af69c7dde4 from memory into f4
li x3, 0x4484974b137a61c2 # load x3 with value 0x4484974b137a61c2
sw x3, 0(x2) # store 0x4484974b137a61c2 in memory
flh f29, 0(x2) # load 0x4484974b137a61c2 from memory into f29
li x3, 0xb88945d9e76cfdbe # load x3 with value 0xb88945d9e76cfdbe
sw x3, 0(x2) # store 0xb88945d9e76cfdbe in memory
flh f17, 0(x2) # load 0xb88945d9e76cfdbe from memory into f17
fnmadd.h f2, f4, f29, f17 # perform operation

# Testcase cp_fs1 (Test source fs1 = f5)
li x30, 0xf34cc9b46c35fc74 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x93d173d42024210c # load x3 with value 0x93d173d42024210c
sw x3, 0(x2) # store 0x93d173d42024210c in memory
flh f5, 0(x2) # load 0x93d173d42024210c from memory into f5
li x3, 0x345c6ef3e91cc049 # load x3 with value 0x345c6ef3e91cc049
sw x3, 0(x2) # store 0x345c6ef3e91cc049 in memory
flh f3, 0(x2) # load 0x345c6ef3e91cc049 from memory into f3
li x3, 0x4e7d29965511a7a6 # load x3 with value 0x4e7d29965511a7a6
sw x3, 0(x2) # store 0x4e7d29965511a7a6 in memory
flh f29, 0(x2) # load 0x4e7d29965511a7a6 from memory into f29
fnmadd.h f30, f5, f3, f29 # perform operation

# Testcase cp_fs1 (Test source fs1 = f6)
li x2, 0x9956430e37667c69 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x69e274f33038278e # load x3 with value 0x69e274f33038278e
sw x3, 0(x2) # store 0x69e274f33038278e in memory
flh f6, 0(x2) # load 0x69e274f33038278e from memory into f6
li x3, 0x1594daa35d4614a1 # load x3 with value 0x1594daa35d4614a1
sw x3, 0(x2) # store 0x1594daa35d4614a1 in memory
flh f5, 0(x2) # load 0x1594daa35d4614a1 from memory into f5
li x3, 0x614bc57c09f648c7 # load x3 with value 0x614bc57c09f648c7
sw x3, 0(x2) # store 0x614bc57c09f648c7 in memory
flh f13, 0(x2) # load 0x614bc57c09f648c7 from memory into f13
fnmadd.h f2, f6, f5, f13 # perform operation

# Testcase cp_fs1 (Test source fs1 = f7)
li x13, 0x9bb160281b72abd5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x635d48be28ac5446 # load x3 with value 0x635d48be28ac5446
sw x3, 0(x2) # store 0x635d48be28ac5446 in memory
flh f7, 0(x2) # load 0x635d48be28ac5446 from memory into f7
li x3, 0xbe50a4a8231f0d2 # load x3 with value 0xbe50a4a8231f0d2
sw x3, 0(x2) # store 0xbe50a4a8231f0d2 in memory
flh f30, 0(x2) # load 0xbe50a4a8231f0d2 from memory into f30
li x3, 0x2cf19c3ffdac0a98 # load x3 with value 0x2cf19c3ffdac0a98
sw x3, 0(x2) # store 0x2cf19c3ffdac0a98 in memory
flh f14, 0(x2) # load 0x2cf19c3ffdac0a98 from memory into f14
fnmadd.h f13, f7, f30, f14 # perform operation

# Testcase cp_fs1 (Test source fs1 = f8)
li x7, 0x57cb31b87f5bf767 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa7b948a22aa4e2dc # load x3 with value 0xa7b948a22aa4e2dc
sw x3, 0(x2) # store 0xa7b948a22aa4e2dc in memory
flh f8, 0(x2) # load 0xa7b948a22aa4e2dc from memory into f8
li x3, 0xa3fb01878b2a4bd0 # load x3 with value 0xa3fb01878b2a4bd0
sw x3, 0(x2) # store 0xa3fb01878b2a4bd0 in memory
flh f6, 0(x2) # load 0xa3fb01878b2a4bd0 from memory into f6
li x3, 0x8fb17988e5d3ef2b # load x3 with value 0x8fb17988e5d3ef2b
sw x3, 0(x2) # store 0x8fb17988e5d3ef2b in memory
flh f22, 0(x2) # load 0x8fb17988e5d3ef2b from memory into f22
fnmadd.h f7, f8, f6, f22 # perform operation

# Testcase cp_fs1 (Test source fs1 = f9)
li x6, 0xbdbf73a1bab44a9a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x737998bb19e03cbc # load x3 with value 0x737998bb19e03cbc
sw x3, 0(x2) # store 0x737998bb19e03cbc in memory
flh f9, 0(x2) # load 0x737998bb19e03cbc from memory into f9
li x3, 0x7280b4a4942270d3 # load x3 with value 0x7280b4a4942270d3
sw x3, 0(x2) # store 0x7280b4a4942270d3 in memory
flh f4, 0(x2) # load 0x7280b4a4942270d3 from memory into f4
li x3, 0x26469f11a63a6f40 # load x3 with value 0x26469f11a63a6f40
sw x3, 0(x2) # store 0x26469f11a63a6f40 in memory
flh f28, 0(x2) # load 0x26469f11a63a6f40 from memory into f28
fnmadd.h f6, f9, f4, f28 # perform operation

# Testcase cp_fs1 (Test source fs1 = f10)
li x13, 0xa36d51918c5a93d9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x1d79a20b0dc06e77 # load x3 with value 0x1d79a20b0dc06e77
sw x3, 0(x2) # store 0x1d79a20b0dc06e77 in memory
flh f10, 0(x2) # load 0x1d79a20b0dc06e77 from memory into f10
li x3, 0x77865f15215849cd # load x3 with value 0x77865f15215849cd
sw x3, 0(x2) # store 0x77865f15215849cd in memory
flh f1, 0(x2) # load 0x77865f15215849cd from memory into f1
li x3, 0xca85c6fadeb94ce7 # load x3 with value 0xca85c6fadeb94ce7
sw x3, 0(x2) # store 0xca85c6fadeb94ce7 in memory
flh f5, 0(x2) # load 0xca85c6fadeb94ce7 from memory into f5
fnmadd.h f13, f10, f1, f5 # perform operation

# Testcase cp_fs1 (Test source fs1 = f11)
li x30, 0x3e68cece48530708 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xd0f3a1598c04483f # load x3 with value 0xd0f3a1598c04483f
sw x3, 0(x2) # store 0xd0f3a1598c04483f in memory
flh f11, 0(x2) # load 0xd0f3a1598c04483f from memory into f11
li x3, 0x457086e39fbc59f2 # load x3 with value 0x457086e39fbc59f2
sw x3, 0(x2) # store 0x457086e39fbc59f2 in memory
flh f10, 0(x2) # load 0x457086e39fbc59f2 from memory into f10
li x3, 0xf6f62ff3dd4c1e0 # load x3 with value 0xf6f62ff3dd4c1e0
sw x3, 0(x2) # store 0xf6f62ff3dd4c1e0 in memory
flh f25, 0(x2) # load 0xf6f62ff3dd4c1e0 from memory into f25
fnmadd.h f30, f11, f10, f25 # perform operation

# Testcase cp_fs1 (Test source fs1 = f12)
li x25, 0x2c2370625f54fab8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xe5fa8e250701ad01 # load x3 with value 0xe5fa8e250701ad01
sw x3, 0(x2) # store 0xe5fa8e250701ad01 in memory
flh f12, 0(x2) # load 0xe5fa8e250701ad01 from memory into f12
li x3, 0x573ab674e612e340 # load x3 with value 0x573ab674e612e340
sw x3, 0(x2) # store 0x573ab674e612e340 in memory
flh f17, 0(x2) # load 0x573ab674e612e340 from memory into f17
li x3, 0xd450d71c8e000ea1 # load x3 with value 0xd450d71c8e000ea1
sw x3, 0(x2) # store 0xd450d71c8e000ea1 in memory
flh f12, 0(x2) # load 0xd450d71c8e000ea1 from memory into f12
fnmadd.h f25, f12, f17, f12 # perform operation

# Testcase cp_fs1 (Test source fs1 = f13)
li x7, 0x1d53599c34909011 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x8e7579dd5e0da1be # load x3 with value 0x8e7579dd5e0da1be
sw x3, 0(x2) # store 0x8e7579dd5e0da1be in memory
flh f13, 0(x2) # load 0x8e7579dd5e0da1be from memory into f13
li x3, 0x646c0f8d23a0370e # load x3 with value 0x646c0f8d23a0370e
sw x3, 0(x2) # store 0x646c0f8d23a0370e in memory
flh f28, 0(x2) # load 0x646c0f8d23a0370e from memory into f28
li x3, 0x5f83ddef8e477043 # load x3 with value 0x5f83ddef8e477043
sw x3, 0(x2) # store 0x5f83ddef8e477043 in memory
flh f20, 0(x2) # load 0x5f83ddef8e477043 from memory into f20
fnmadd.h f7, f13, f28, f20 # perform operation

# Testcase cp_fs1 (Test source fs1 = f14)
li x2, 0x6ada24e054b10074 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x866c2c800f5339f1 # load x3 with value 0x866c2c800f5339f1
sw x3, 0(x2) # store 0x866c2c800f5339f1 in memory
flh f14, 0(x2) # load 0x866c2c800f5339f1 from memory into f14
li x3, 0x8e938d2b286f9c09 # load x3 with value 0x8e938d2b286f9c09
sw x3, 0(x2) # store 0x8e938d2b286f9c09 in memory
flh f10, 0(x2) # load 0x8e938d2b286f9c09 from memory into f10
li x3, 0x5cacd64fdea27aad # load x3 with value 0x5cacd64fdea27aad
sw x3, 0(x2) # store 0x5cacd64fdea27aad in memory
flh f7, 0(x2) # load 0x5cacd64fdea27aad from memory into f7
fnmadd.h f2, f14, f10, f7 # perform operation

# Testcase cp_fs1 (Test source fs1 = f15)
li x14, 0x98b34558224f7101 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xf6e3a3c8ed305de9 # load x3 with value 0xf6e3a3c8ed305de9
sw x3, 0(x2) # store 0xf6e3a3c8ed305de9 in memory
flh f15, 0(x2) # load 0xf6e3a3c8ed305de9 from memory into f15
li x3, 0x68e1c5216214e521 # load x3 with value 0x68e1c5216214e521
sw x3, 0(x2) # store 0x68e1c5216214e521 in memory
flh f24, 0(x2) # load 0x68e1c5216214e521 from memory into f24
li x3, 0x9dc63eb9f4e5b0f7 # load x3 with value 0x9dc63eb9f4e5b0f7
sw x3, 0(x2) # store 0x9dc63eb9f4e5b0f7 in memory
flh f29, 0(x2) # load 0x9dc63eb9f4e5b0f7 from memory into f29
fnmadd.h f14, f15, f24, f29 # perform operation

# Testcase cp_fs1 (Test source fs1 = f16)
li x19, 0x3251f89a4069ecc3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xe104741e5153d1f2 # load x3 with value 0xe104741e5153d1f2
sw x3, 0(x2) # store 0xe104741e5153d1f2 in memory
flh f16, 0(x2) # load 0xe104741e5153d1f2 from memory into f16
li x3, 0x300bdf4400b02c35 # load x3 with value 0x300bdf4400b02c35
sw x3, 0(x2) # store 0x300bdf4400b02c35 in memory
flh f13, 0(x2) # load 0x300bdf4400b02c35 from memory into f13
li x3, 0x8cd9db027cad37a0 # load x3 with value 0x8cd9db027cad37a0
sw x3, 0(x2) # store 0x8cd9db027cad37a0 in memory
flh f1, 0(x2) # load 0x8cd9db027cad37a0 from memory into f1
fnmadd.h f19, f16, f13, f1 # perform operation

# Testcase cp_fs1 (Test source fs1 = f17)
li x12, 0xd95fa6948aefaaa5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x9d0779e180014706 # load x3 with value 0x9d0779e180014706
sw x3, 0(x2) # store 0x9d0779e180014706 in memory
flh f17, 0(x2) # load 0x9d0779e180014706 from memory into f17
li x3, 0xe457adf47c6b667a # load x3 with value 0xe457adf47c6b667a
sw x3, 0(x2) # store 0xe457adf47c6b667a in memory
flh f11, 0(x2) # load 0xe457adf47c6b667a from memory into f11
li x3, 0x66cf8c90a0204d94 # load x3 with value 0x66cf8c90a0204d94
sw x3, 0(x2) # store 0x66cf8c90a0204d94 in memory
flh f24, 0(x2) # load 0x66cf8c90a0204d94 from memory into f24
fnmadd.h f12, f17, f11, f24 # perform operation

# Testcase cp_fs1 (Test source fs1 = f18)
li x31, 0x2d4d620a4e7a8329 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x545467bf9d26fcaa # load x3 with value 0x545467bf9d26fcaa
sw x3, 0(x2) # store 0x545467bf9d26fcaa in memory
flh f18, 0(x2) # load 0x545467bf9d26fcaa from memory into f18
li x3, 0x90c7cdaedce433c5 # load x3 with value 0x90c7cdaedce433c5
sw x3, 0(x2) # store 0x90c7cdaedce433c5 in memory
flh f2, 0(x2) # load 0x90c7cdaedce433c5 from memory into f2
li x3, 0x336b28606ee9c13 # load x3 with value 0x336b28606ee9c13
sw x3, 0(x2) # store 0x336b28606ee9c13 in memory
flh f15, 0(x2) # load 0x336b28606ee9c13 from memory into f15
fnmadd.h f31, f18, f2, f15 # perform operation

# Testcase cp_fs1 (Test source fs1 = f19)
li x1, 0x073157325ad26bdf # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x83be81676cb39baa # load x3 with value 0x83be81676cb39baa
sw x3, 0(x2) # store 0x83be81676cb39baa in memory
flh f19, 0(x2) # load 0x83be81676cb39baa from memory into f19
li x3, 0x3ae235eca8540140 # load x3 with value 0x3ae235eca8540140
sw x3, 0(x2) # store 0x3ae235eca8540140 in memory
flh f20, 0(x2) # load 0x3ae235eca8540140 from memory into f20
li x3, 0x43afd726612ed82e # load x3 with value 0x43afd726612ed82e
sw x3, 0(x2) # store 0x43afd726612ed82e in memory
flh f25, 0(x2) # load 0x43afd726612ed82e from memory into f25
fnmadd.h f1, f19, f20, f25 # perform operation

# Testcase cp_fs1 (Test source fs1 = f20)
li x11, 0xced102f7b9fe4d20 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x6483054289beb085 # load x3 with value 0x6483054289beb085
sw x3, 0(x2) # store 0x6483054289beb085 in memory
flh f20, 0(x2) # load 0x6483054289beb085 from memory into f20
li x3, 0x62379bc6cf9e6c66 # load x3 with value 0x62379bc6cf9e6c66
sw x3, 0(x2) # store 0x62379bc6cf9e6c66 in memory
flh f1, 0(x2) # load 0x62379bc6cf9e6c66 from memory into f1
li x3, 0x4439bf07617d961b # load x3 with value 0x4439bf07617d961b
sw x3, 0(x2) # store 0x4439bf07617d961b in memory
flh f28, 0(x2) # load 0x4439bf07617d961b from memory into f28
fnmadd.h f11, f20, f1, f28 # perform operation

# Testcase cp_fs1 (Test source fs1 = f21)
li x20, 0xa354d1d6fcbbbdeb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x34f97dec74de93bd # load x3 with value 0x34f97dec74de93bd
sw x3, 0(x2) # store 0x34f97dec74de93bd in memory
flh f21, 0(x2) # load 0x34f97dec74de93bd from memory into f21
li x3, 0x943d42398db9c3cd # load x3 with value 0x943d42398db9c3cd
sw x3, 0(x2) # store 0x943d42398db9c3cd in memory
flh f19, 0(x2) # load 0x943d42398db9c3cd from memory into f19
li x3, 0xcc961cb9b98d0c8 # load x3 with value 0xcc961cb9b98d0c8
sw x3, 0(x2) # store 0xcc961cb9b98d0c8 in memory
flh f2, 0(x2) # load 0xcc961cb9b98d0c8 from memory into f2
fnmadd.h f20, f21, f19, f2 # perform operation

# Testcase cp_fs1 (Test source fs1 = f22)
li x5, 0xfc84932a9a233ed1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x88dbd09a3f34caa # load x3 with value 0x88dbd09a3f34caa
sw x3, 0(x2) # store 0x88dbd09a3f34caa in memory
flh f22, 0(x2) # load 0x88dbd09a3f34caa from memory into f22
li x3, 0x896f23af49eab2ff # load x3 with value 0x896f23af49eab2ff
sw x3, 0(x2) # store 0x896f23af49eab2ff in memory
flh f8, 0(x2) # load 0x896f23af49eab2ff from memory into f8
li x3, 0xd077d85930b6655f # load x3 with value 0xd077d85930b6655f
sw x3, 0(x2) # store 0xd077d85930b6655f in memory
flh f12, 0(x2) # load 0xd077d85930b6655f from memory into f12
fnmadd.h f5, f22, f8, f12 # perform operation

# Testcase cp_fs1 (Test source fs1 = f23)
li x2, 0x94f98555eb6cdd44 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xccaa76b1876370b0 # load x3 with value 0xccaa76b1876370b0
sw x3, 0(x2) # store 0xccaa76b1876370b0 in memory
flh f23, 0(x2) # load 0xccaa76b1876370b0 from memory into f23
li x3, 0x4a16ccad9ad23349 # load x3 with value 0x4a16ccad9ad23349
sw x3, 0(x2) # store 0x4a16ccad9ad23349 in memory
flh f13, 0(x2) # load 0x4a16ccad9ad23349 from memory into f13
li x3, 0xc4ba3e25dabb0252 # load x3 with value 0xc4ba3e25dabb0252
sw x3, 0(x2) # store 0xc4ba3e25dabb0252 in memory
flh f22, 0(x2) # load 0xc4ba3e25dabb0252 from memory into f22
fnmadd.h f2, f23, f13, f22 # perform operation

# Testcase cp_fs1 (Test source fs1 = f24)
li x6, 0x22b972aecb032303 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x1838bf5e26ec8927 # load x3 with value 0x1838bf5e26ec8927
sw x3, 0(x2) # store 0x1838bf5e26ec8927 in memory
flh f24, 0(x2) # load 0x1838bf5e26ec8927 from memory into f24
li x3, 0x154e58d55bdf5c99 # load x3 with value 0x154e58d55bdf5c99
sw x3, 0(x2) # store 0x154e58d55bdf5c99 in memory
flh f30, 0(x2) # load 0x154e58d55bdf5c99 from memory into f30
li x3, 0x149193ab43988356 # load x3 with value 0x149193ab43988356
sw x3, 0(x2) # store 0x149193ab43988356 in memory
flh f15, 0(x2) # load 0x149193ab43988356 from memory into f15
fnmadd.h f6, f24, f30, f15 # perform operation

# Testcase cp_fs1 (Test source fs1 = f25)
li x1, 0xbb169aa28675f286 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x52e85beeac021b46 # load x3 with value 0x52e85beeac021b46
sw x3, 0(x2) # store 0x52e85beeac021b46 in memory
flh f25, 0(x2) # load 0x52e85beeac021b46 from memory into f25
li x3, 0x16f1ed83b74a162e # load x3 with value 0x16f1ed83b74a162e
sw x3, 0(x2) # store 0x16f1ed83b74a162e in memory
flh f17, 0(x2) # load 0x16f1ed83b74a162e from memory into f17
li x3, 0x8bd552c312e14071 # load x3 with value 0x8bd552c312e14071
sw x3, 0(x2) # store 0x8bd552c312e14071 in memory
flh f7, 0(x2) # load 0x8bd552c312e14071 from memory into f7
fnmadd.h f1, f25, f17, f7 # perform operation

# Testcase cp_fs1 (Test source fs1 = f26)
li x2, 0xfb76acdfbf355f2b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x23bfd3bfe9dc863 # load x3 with value 0x23bfd3bfe9dc863
sw x3, 0(x2) # store 0x23bfd3bfe9dc863 in memory
flh f26, 0(x2) # load 0x23bfd3bfe9dc863 from memory into f26
li x3, 0xc6de828d8622f474 # load x3 with value 0xc6de828d8622f474
sw x3, 0(x2) # store 0xc6de828d8622f474 in memory
flh f5, 0(x2) # load 0xc6de828d8622f474 from memory into f5
li x3, 0x872641a01279b739 # load x3 with value 0x872641a01279b739
sw x3, 0(x2) # store 0x872641a01279b739 in memory
flh f14, 0(x2) # load 0x872641a01279b739 from memory into f14
fnmadd.h f2, f26, f5, f14 # perform operation

# Testcase cp_fs1 (Test source fs1 = f27)
li x12, 0xc76dfdd303e51231 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x97a06056cf8c245c # load x3 with value 0x97a06056cf8c245c
sw x3, 0(x2) # store 0x97a06056cf8c245c in memory
flh f27, 0(x2) # load 0x97a06056cf8c245c from memory into f27
li x3, 0x4ac19da72a05c2e2 # load x3 with value 0x4ac19da72a05c2e2
sw x3, 0(x2) # store 0x4ac19da72a05c2e2 in memory
flh f10, 0(x2) # load 0x4ac19da72a05c2e2 from memory into f10
li x3, 0x82df27b460389b60 # load x3 with value 0x82df27b460389b60
sw x3, 0(x2) # store 0x82df27b460389b60 in memory
flh f20, 0(x2) # load 0x82df27b460389b60 from memory into f20
fnmadd.h f12, f27, f10, f20 # perform operation

# Testcase cp_fs1 (Test source fs1 = f28)
li x15, 0x8b2570f7c1be37ff # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xe082cb46c0fd505b # load x3 with value 0xe082cb46c0fd505b
sw x3, 0(x2) # store 0xe082cb46c0fd505b in memory
flh f28, 0(x2) # load 0xe082cb46c0fd505b from memory into f28
li x3, 0xa518fe2c2b9fab87 # load x3 with value 0xa518fe2c2b9fab87
sw x3, 0(x2) # store 0xa518fe2c2b9fab87 in memory
flh f10, 0(x2) # load 0xa518fe2c2b9fab87 from memory into f10
li x3, 0x8e86f9ff8a99d05a # load x3 with value 0x8e86f9ff8a99d05a
sw x3, 0(x2) # store 0x8e86f9ff8a99d05a in memory
flh f13, 0(x2) # load 0x8e86f9ff8a99d05a from memory into f13
fnmadd.h f15, f28, f10, f13 # perform operation

# Testcase cp_fs1 (Test source fs1 = f29)
li x4, 0x8958d372af0a86a7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x8984efd8475c27df # load x3 with value 0x8984efd8475c27df
sw x3, 0(x2) # store 0x8984efd8475c27df in memory
flh f29, 0(x2) # load 0x8984efd8475c27df from memory into f29
li x3, 0x33b1d8923d43d828 # load x3 with value 0x33b1d8923d43d828
sw x3, 0(x2) # store 0x33b1d8923d43d828 in memory
flh f30, 0(x2) # load 0x33b1d8923d43d828 from memory into f30
li x3, 0x8fa3d905be379b37 # load x3 with value 0x8fa3d905be379b37
sw x3, 0(x2) # store 0x8fa3d905be379b37 in memory
flh f12, 0(x2) # load 0x8fa3d905be379b37 from memory into f12
fnmadd.h f4, f29, f30, f12 # perform operation

# Testcase cp_fs1 (Test source fs1 = f30)
li x16, 0xeeb0308bc5266b6a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x8c1dd2c313f33159 # load x3 with value 0x8c1dd2c313f33159
sw x3, 0(x2) # store 0x8c1dd2c313f33159 in memory
flh f30, 0(x2) # load 0x8c1dd2c313f33159 from memory into f30
li x3, 0xafc9fc56a5ec7d63 # load x3 with value 0xafc9fc56a5ec7d63
sw x3, 0(x2) # store 0xafc9fc56a5ec7d63 in memory
flh f8, 0(x2) # load 0xafc9fc56a5ec7d63 from memory into f8
li x3, 0x4901b4ac21e527f9 # load x3 with value 0x4901b4ac21e527f9
sw x3, 0(x2) # store 0x4901b4ac21e527f9 in memory
flh f30, 0(x2) # load 0x4901b4ac21e527f9 from memory into f30
fnmadd.h f16, f30, f8, f30 # perform operation

# Testcase cp_fs1 (Test source fs1 = f31)
li x21, 0x18ad3747a283a46c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x2202e00eb2217ea # load x3 with value 0x2202e00eb2217ea
sw x3, 0(x2) # store 0x2202e00eb2217ea in memory
flh f31, 0(x2) # load 0x2202e00eb2217ea from memory into f31
li x3, 0x300120d7cef7f87d # load x3 with value 0x300120d7cef7f87d
sw x3, 0(x2) # store 0x300120d7cef7f87d in memory
flh f19, 0(x2) # load 0x300120d7cef7f87d from memory into f19
li x3, 0x56285e6ef67648ae # load x3 with value 0x56285e6ef67648ae
sw x3, 0(x2) # store 0x56285e6ef67648ae in memory
flh f8, 0(x2) # load 0x56285e6ef67648ae from memory into f8
fnmadd.h f21, f31, f19, f8 # perform operation

# Testcase cp_fs2 (Test source fs2 = f0)
li x9, 0x57f1601cec7bad2f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x8935b118c94aa792 # load x3 with value 0x8935b118c94aa792
sw x3, 0(x2) # store 0x8935b118c94aa792 in memory
flh f4, 0(x2) # load 0x8935b118c94aa792 from memory into f4
li x3, 0x612df161b8b15788 # load x3 with value 0x612df161b8b15788
sw x3, 0(x2) # store 0x612df161b8b15788 in memory
flh f0, 0(x2) # load 0x612df161b8b15788 from memory into f0
li x3, 0xf67efb980a573509 # load x3 with value 0xf67efb980a573509
sw x3, 0(x2) # store 0xf67efb980a573509 in memory
flh f3, 0(x2) # load 0xf67efb980a573509 from memory into f3
fnmadd.h f9, f4, f0, f3 # perform operation

# Testcase cp_fs2 (Test source fs2 = f1)
li x29, 0x08a08e53e1a46ebc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xfea1852c8439f12e # load x3 with value 0xfea1852c8439f12e
sw x3, 0(x2) # store 0xfea1852c8439f12e in memory
flh f24, 0(x2) # load 0xfea1852c8439f12e from memory into f24
li x3, 0xe091a6d30625a45b # load x3 with value 0xe091a6d30625a45b
sw x3, 0(x2) # store 0xe091a6d30625a45b in memory
flh f1, 0(x2) # load 0xe091a6d30625a45b from memory into f1
li x3, 0x3d7ef5888a641ef5 # load x3 with value 0x3d7ef5888a641ef5
sw x3, 0(x2) # store 0x3d7ef5888a641ef5 in memory
flh f23, 0(x2) # load 0x3d7ef5888a641ef5 from memory into f23
fnmadd.h f29, f24, f1, f23 # perform operation

# Testcase cp_fs2 (Test source fs2 = f2)
li x11, 0xbee28b2d212e1614 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x41ba9810627f9d4f # load x3 with value 0x41ba9810627f9d4f
sw x3, 0(x2) # store 0x41ba9810627f9d4f in memory
flh f12, 0(x2) # load 0x41ba9810627f9d4f from memory into f12
li x3, 0xffbd4f341ab0b4a5 # load x3 with value 0xffbd4f341ab0b4a5
sw x3, 0(x2) # store 0xffbd4f341ab0b4a5 in memory
flh f2, 0(x2) # load 0xffbd4f341ab0b4a5 from memory into f2
li x3, 0x15f2cb9712f7728e # load x3 with value 0x15f2cb9712f7728e
sw x3, 0(x2) # store 0x15f2cb9712f7728e in memory
flh f10, 0(x2) # load 0x15f2cb9712f7728e from memory into f10
fnmadd.h f11, f12, f2, f10 # perform operation

# Testcase cp_fs2 (Test source fs2 = f3)
li x25, 0xa6f5dae624a09c32 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x54622096c131b2a5 # load x3 with value 0x54622096c131b2a5
sw x3, 0(x2) # store 0x54622096c131b2a5 in memory
flh f13, 0(x2) # load 0x54622096c131b2a5 from memory into f13
li x3, 0xcd0dfe27bb7d25be # load x3 with value 0xcd0dfe27bb7d25be
sw x3, 0(x2) # store 0xcd0dfe27bb7d25be in memory
flh f3, 0(x2) # load 0xcd0dfe27bb7d25be from memory into f3
li x3, 0xd2a5f6cc15a92b84 # load x3 with value 0xd2a5f6cc15a92b84
sw x3, 0(x2) # store 0xd2a5f6cc15a92b84 in memory
flh f7, 0(x2) # load 0xd2a5f6cc15a92b84 from memory into f7
fnmadd.h f25, f13, f3, f7 # perform operation

# Testcase cp_fs2 (Test source fs2 = f4)
li x3, 0xff4c4ded8d4c70b3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xe648020d3994218c # load x3 with value 0xe648020d3994218c
sw x3, 0(x2) # store 0xe648020d3994218c in memory
flh f22, 0(x2) # load 0xe648020d3994218c from memory into f22
li x3, 0xeca091be0529a48b # load x3 with value 0xeca091be0529a48b
sw x3, 0(x2) # store 0xeca091be0529a48b in memory
flh f4, 0(x2) # load 0xeca091be0529a48b from memory into f4
li x3, 0x780792b1f1b69b9f # load x3 with value 0x780792b1f1b69b9f
sw x3, 0(x2) # store 0x780792b1f1b69b9f in memory
flh f12, 0(x2) # load 0x780792b1f1b69b9f from memory into f12
fnmadd.h f3, f22, f4, f12 # perform operation

# Testcase cp_fs2 (Test source fs2 = f5)
li x12, 0xbdfd61a79bd34d3d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc6cf54676a5547c # load x3 with value 0xc6cf54676a5547c
sw x3, 0(x2) # store 0xc6cf54676a5547c in memory
flh f4, 0(x2) # load 0xc6cf54676a5547c from memory into f4
li x3, 0x52f9bfbaf575d352 # load x3 with value 0x52f9bfbaf575d352
sw x3, 0(x2) # store 0x52f9bfbaf575d352 in memory
flh f5, 0(x2) # load 0x52f9bfbaf575d352 from memory into f5
li x3, 0xec7c06525683ec5b # load x3 with value 0xec7c06525683ec5b
sw x3, 0(x2) # store 0xec7c06525683ec5b in memory
flh f24, 0(x2) # load 0xec7c06525683ec5b from memory into f24
fnmadd.h f12, f4, f5, f24 # perform operation

# Testcase cp_fs2 (Test source fs2 = f6)
li x20, 0xd678cd92fe636567 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x1b69388d1519fda1 # load x3 with value 0x1b69388d1519fda1
sw x3, 0(x2) # store 0x1b69388d1519fda1 in memory
flh f15, 0(x2) # load 0x1b69388d1519fda1 from memory into f15
li x3, 0x4afc02794e7dd7f9 # load x3 with value 0x4afc02794e7dd7f9
sw x3, 0(x2) # store 0x4afc02794e7dd7f9 in memory
flh f6, 0(x2) # load 0x4afc02794e7dd7f9 from memory into f6
li x3, 0xf43270bb950f5558 # load x3 with value 0xf43270bb950f5558
sw x3, 0(x2) # store 0xf43270bb950f5558 in memory
flh f13, 0(x2) # load 0xf43270bb950f5558 from memory into f13
fnmadd.h f20, f15, f6, f13 # perform operation

# Testcase cp_fs2 (Test source fs2 = f7)
li x5, 0x3bb6fd37e6d2c4dc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x58e2c68b3d4ddc0b # load x3 with value 0x58e2c68b3d4ddc0b
sw x3, 0(x2) # store 0x58e2c68b3d4ddc0b in memory
flh f23, 0(x2) # load 0x58e2c68b3d4ddc0b from memory into f23
li x3, 0xff26b8a897ee55ed # load x3 with value 0xff26b8a897ee55ed
sw x3, 0(x2) # store 0xff26b8a897ee55ed in memory
flh f7, 0(x2) # load 0xff26b8a897ee55ed from memory into f7
li x3, 0x23736e29dbaec853 # load x3 with value 0x23736e29dbaec853
sw x3, 0(x2) # store 0x23736e29dbaec853 in memory
flh f3, 0(x2) # load 0x23736e29dbaec853 from memory into f3
fnmadd.h f5, f23, f7, f3 # perform operation

# Testcase cp_fs2 (Test source fs2 = f8)
li x17, 0x91d5e0ca6c1a0ca8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xfcaf766c17c3d398 # load x3 with value 0xfcaf766c17c3d398
sw x3, 0(x2) # store 0xfcaf766c17c3d398 in memory
flh f23, 0(x2) # load 0xfcaf766c17c3d398 from memory into f23
li x3, 0x7de9f42353ac32fe # load x3 with value 0x7de9f42353ac32fe
sw x3, 0(x2) # store 0x7de9f42353ac32fe in memory
flh f8, 0(x2) # load 0x7de9f42353ac32fe from memory into f8
li x3, 0xbeeaa893a6c77a88 # load x3 with value 0xbeeaa893a6c77a88
sw x3, 0(x2) # store 0xbeeaa893a6c77a88 in memory
flh f7, 0(x2) # load 0xbeeaa893a6c77a88 from memory into f7
fnmadd.h f17, f23, f8, f7 # perform operation

# Testcase cp_fs2 (Test source fs2 = f9)
li x10, 0xfdd9781a60fd0560 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xd8860fbb67b0049e # load x3 with value 0xd8860fbb67b0049e
sw x3, 0(x2) # store 0xd8860fbb67b0049e in memory
flh f13, 0(x2) # load 0xd8860fbb67b0049e from memory into f13
li x3, 0x9864e22439c04d1e # load x3 with value 0x9864e22439c04d1e
sw x3, 0(x2) # store 0x9864e22439c04d1e in memory
flh f9, 0(x2) # load 0x9864e22439c04d1e from memory into f9
li x3, 0x34cc9564568cc530 # load x3 with value 0x34cc9564568cc530
sw x3, 0(x2) # store 0x34cc9564568cc530 in memory
flh f11, 0(x2) # load 0x34cc9564568cc530 from memory into f11
fnmadd.h f10, f13, f9, f11 # perform operation

# Testcase cp_fs2 (Test source fs2 = f10)
li x17, 0xa6c6ec81646b2d60 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x96f0c788fcc723e # load x3 with value 0x96f0c788fcc723e
sw x3, 0(x2) # store 0x96f0c788fcc723e in memory
flh f6, 0(x2) # load 0x96f0c788fcc723e from memory into f6
li x3, 0xc03178560afc7562 # load x3 with value 0xc03178560afc7562
sw x3, 0(x2) # store 0xc03178560afc7562 in memory
flh f10, 0(x2) # load 0xc03178560afc7562 from memory into f10
li x3, 0x19ee4f54df1e2cc8 # load x3 with value 0x19ee4f54df1e2cc8
sw x3, 0(x2) # store 0x19ee4f54df1e2cc8 in memory
flh f14, 0(x2) # load 0x19ee4f54df1e2cc8 from memory into f14
fnmadd.h f17, f6, f10, f14 # perform operation

# Testcase cp_fs2 (Test source fs2 = f11)
li x24, 0x96354c50fcfb6275 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc76270480660cc9d # load x3 with value 0xc76270480660cc9d
sw x3, 0(x2) # store 0xc76270480660cc9d in memory
flh f27, 0(x2) # load 0xc76270480660cc9d from memory into f27
li x3, 0xe924507deeaa550c # load x3 with value 0xe924507deeaa550c
sw x3, 0(x2) # store 0xe924507deeaa550c in memory
flh f11, 0(x2) # load 0xe924507deeaa550c from memory into f11
li x3, 0x8f054d9144169ddf # load x3 with value 0x8f054d9144169ddf
sw x3, 0(x2) # store 0x8f054d9144169ddf in memory
flh f20, 0(x2) # load 0x8f054d9144169ddf from memory into f20
fnmadd.h f24, f27, f11, f20 # perform operation

# Testcase cp_fs2 (Test source fs2 = f12)
li x6, 0xc4c0b0e145e8e3ab # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xad2048aa6cb37a29 # load x3 with value 0xad2048aa6cb37a29
sw x3, 0(x2) # store 0xad2048aa6cb37a29 in memory
flh f14, 0(x2) # load 0xad2048aa6cb37a29 from memory into f14
li x3, 0x3cceedc0d136561e # load x3 with value 0x3cceedc0d136561e
sw x3, 0(x2) # store 0x3cceedc0d136561e in memory
flh f12, 0(x2) # load 0x3cceedc0d136561e from memory into f12
li x3, 0x7dbe44fa021d5a54 # load x3 with value 0x7dbe44fa021d5a54
sw x3, 0(x2) # store 0x7dbe44fa021d5a54 in memory
flh f15, 0(x2) # load 0x7dbe44fa021d5a54 from memory into f15
fnmadd.h f6, f14, f12, f15 # perform operation

# Testcase cp_fs2 (Test source fs2 = f13)
li x12, 0x08e976b983ee1abc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7cee53c453390742 # load x3 with value 0x7cee53c453390742
sw x3, 0(x2) # store 0x7cee53c453390742 in memory
flh f1, 0(x2) # load 0x7cee53c453390742 from memory into f1
li x3, 0xb91490ba337eafd4 # load x3 with value 0xb91490ba337eafd4
sw x3, 0(x2) # store 0xb91490ba337eafd4 in memory
flh f13, 0(x2) # load 0xb91490ba337eafd4 from memory into f13
li x3, 0xd7c7f5225d470f7d # load x3 with value 0xd7c7f5225d470f7d
sw x3, 0(x2) # store 0xd7c7f5225d470f7d in memory
flh f5, 0(x2) # load 0xd7c7f5225d470f7d from memory into f5
fnmadd.h f12, f1, f13, f5 # perform operation

# Testcase cp_fs2 (Test source fs2 = f14)
li x24, 0x69e29fd405396a0d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xd929252a90de4aa0 # load x3 with value 0xd929252a90de4aa0
sw x3, 0(x2) # store 0xd929252a90de4aa0 in memory
flh f26, 0(x2) # load 0xd929252a90de4aa0 from memory into f26
li x3, 0xefcf3171dc296ff5 # load x3 with value 0xefcf3171dc296ff5
sw x3, 0(x2) # store 0xefcf3171dc296ff5 in memory
flh f14, 0(x2) # load 0xefcf3171dc296ff5 from memory into f14
li x3, 0xbf8c92497dc4bc76 # load x3 with value 0xbf8c92497dc4bc76
sw x3, 0(x2) # store 0xbf8c92497dc4bc76 in memory
flh f12, 0(x2) # load 0xbf8c92497dc4bc76 from memory into f12
fnmadd.h f24, f26, f14, f12 # perform operation

# Testcase cp_fs2 (Test source fs2 = f15)
li x31, 0xb8265517df28c0eb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x790d42be2d7d7b95 # load x3 with value 0x790d42be2d7d7b95
sw x3, 0(x2) # store 0x790d42be2d7d7b95 in memory
flh f7, 0(x2) # load 0x790d42be2d7d7b95 from memory into f7
li x3, 0xb314a35f49c64d9a # load x3 with value 0xb314a35f49c64d9a
sw x3, 0(x2) # store 0xb314a35f49c64d9a in memory
flh f15, 0(x2) # load 0xb314a35f49c64d9a from memory into f15
li x3, 0xbdf3ab86fcd56ab5 # load x3 with value 0xbdf3ab86fcd56ab5
sw x3, 0(x2) # store 0xbdf3ab86fcd56ab5 in memory
flh f22, 0(x2) # load 0xbdf3ab86fcd56ab5 from memory into f22
fnmadd.h f31, f7, f15, f22 # perform operation

# Testcase cp_fs2 (Test source fs2 = f16)
li x16, 0x4b9ca9243000ceb7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x32de9e7def588496 # load x3 with value 0x32de9e7def588496
sw x3, 0(x2) # store 0x32de9e7def588496 in memory
flh f9, 0(x2) # load 0x32de9e7def588496 from memory into f9
li x3, 0xf060dccd7feeac39 # load x3 with value 0xf060dccd7feeac39
sw x3, 0(x2) # store 0xf060dccd7feeac39 in memory
flh f16, 0(x2) # load 0xf060dccd7feeac39 from memory into f16
li x3, 0xf4f6680930af5f5e # load x3 with value 0xf4f6680930af5f5e
sw x3, 0(x2) # store 0xf4f6680930af5f5e in memory
flh f22, 0(x2) # load 0xf4f6680930af5f5e from memory into f22
fnmadd.h f16, f9, f16, f22 # perform operation

# Testcase cp_fs2 (Test source fs2 = f17)
li x7, 0x91cd4995e03c1a92 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x173dc5ab8c5bacb0 # load x3 with value 0x173dc5ab8c5bacb0
sw x3, 0(x2) # store 0x173dc5ab8c5bacb0 in memory
flh f14, 0(x2) # load 0x173dc5ab8c5bacb0 from memory into f14
li x3, 0x919718c7985fa5f7 # load x3 with value 0x919718c7985fa5f7
sw x3, 0(x2) # store 0x919718c7985fa5f7 in memory
flh f17, 0(x2) # load 0x919718c7985fa5f7 from memory into f17
li x3, 0x25a0e20a4f2993b6 # load x3 with value 0x25a0e20a4f2993b6
sw x3, 0(x2) # store 0x25a0e20a4f2993b6 in memory
flh f2, 0(x2) # load 0x25a0e20a4f2993b6 from memory into f2
fnmadd.h f7, f14, f17, f2 # perform operation

# Testcase cp_fs2 (Test source fs2 = f18)
li x5, 0x1097c4c47577ddca # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x554ef4ba4d19013a # load x3 with value 0x554ef4ba4d19013a
sw x3, 0(x2) # store 0x554ef4ba4d19013a in memory
flh f1, 0(x2) # load 0x554ef4ba4d19013a from memory into f1
li x3, 0xcf5b0534bd90e8d1 # load x3 with value 0xcf5b0534bd90e8d1
sw x3, 0(x2) # store 0xcf5b0534bd90e8d1 in memory
flh f18, 0(x2) # load 0xcf5b0534bd90e8d1 from memory into f18
li x3, 0x36fa31de0c2a16ac # load x3 with value 0x36fa31de0c2a16ac
sw x3, 0(x2) # store 0x36fa31de0c2a16ac in memory
flh f29, 0(x2) # load 0x36fa31de0c2a16ac from memory into f29
fnmadd.h f5, f1, f18, f29 # perform operation

# Testcase cp_fs2 (Test source fs2 = f19)
li x12, 0x0f0de9ec07332114 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc1552d379297bff9 # load x3 with value 0xc1552d379297bff9
sw x3, 0(x2) # store 0xc1552d379297bff9 in memory
flh f22, 0(x2) # load 0xc1552d379297bff9 from memory into f22
li x3, 0xcde8d2160375db06 # load x3 with value 0xcde8d2160375db06
sw x3, 0(x2) # store 0xcde8d2160375db06 in memory
flh f19, 0(x2) # load 0xcde8d2160375db06 from memory into f19
li x3, 0xbdf41ab3eddad9a5 # load x3 with value 0xbdf41ab3eddad9a5
sw x3, 0(x2) # store 0xbdf41ab3eddad9a5 in memory
flh f26, 0(x2) # load 0xbdf41ab3eddad9a5 from memory into f26
fnmadd.h f12, f22, f19, f26 # perform operation

# Testcase cp_fs2 (Test source fs2 = f20)
li x28, 0xf00e81320c4b4802 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x32a48db402f484f6 # load x3 with value 0x32a48db402f484f6
sw x3, 0(x2) # store 0x32a48db402f484f6 in memory
flh f26, 0(x2) # load 0x32a48db402f484f6 from memory into f26
li x3, 0x78ccc215bf3e4f8b # load x3 with value 0x78ccc215bf3e4f8b
sw x3, 0(x2) # store 0x78ccc215bf3e4f8b in memory
flh f20, 0(x2) # load 0x78ccc215bf3e4f8b from memory into f20
li x3, 0xd27da0d65f2b9d76 # load x3 with value 0xd27da0d65f2b9d76
sw x3, 0(x2) # store 0xd27da0d65f2b9d76 in memory
flh f17, 0(x2) # load 0xd27da0d65f2b9d76 from memory into f17
fnmadd.h f28, f26, f20, f17 # perform operation

# Testcase cp_fs2 (Test source fs2 = f21)
li x14, 0xbc9ca0d009b95d63 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x8f11d7b18214bbcc # load x3 with value 0x8f11d7b18214bbcc
sw x3, 0(x2) # store 0x8f11d7b18214bbcc in memory
flh f25, 0(x2) # load 0x8f11d7b18214bbcc from memory into f25
li x3, 0x2cd3b25234b0b873 # load x3 with value 0x2cd3b25234b0b873
sw x3, 0(x2) # store 0x2cd3b25234b0b873 in memory
flh f21, 0(x2) # load 0x2cd3b25234b0b873 from memory into f21
li x3, 0x9adf9af934203eb4 # load x3 with value 0x9adf9af934203eb4
sw x3, 0(x2) # store 0x9adf9af934203eb4 in memory
flh f17, 0(x2) # load 0x9adf9af934203eb4 from memory into f17
fnmadd.h f14, f25, f21, f17 # perform operation

# Testcase cp_fs2 (Test source fs2 = f22)
li x16, 0x2926b08d5ad58e89 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x9e7d59953cc6d2bd # load x3 with value 0x9e7d59953cc6d2bd
sw x3, 0(x2) # store 0x9e7d59953cc6d2bd in memory
flh f1, 0(x2) # load 0x9e7d59953cc6d2bd from memory into f1
li x3, 0x1c49b83046c2ea91 # load x3 with value 0x1c49b83046c2ea91
sw x3, 0(x2) # store 0x1c49b83046c2ea91 in memory
flh f22, 0(x2) # load 0x1c49b83046c2ea91 from memory into f22
li x3, 0xaa39df1898467c # load x3 with value 0xaa39df1898467c
sw x3, 0(x2) # store 0xaa39df1898467c in memory
flh f22, 0(x2) # load 0xaa39df1898467c from memory into f22
fnmadd.h f16, f1, f22, f22 # perform operation

# Testcase cp_fs2 (Test source fs2 = f23)
li x26, 0x7ed1ac9abf6f8ab7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xfecadcbe260cf3a # load x3 with value 0xfecadcbe260cf3a
sw x3, 0(x2) # store 0xfecadcbe260cf3a in memory
flh f16, 0(x2) # load 0xfecadcbe260cf3a from memory into f16
li x3, 0xf8e1bcba0695846c # load x3 with value 0xf8e1bcba0695846c
sw x3, 0(x2) # store 0xf8e1bcba0695846c in memory
flh f23, 0(x2) # load 0xf8e1bcba0695846c from memory into f23
li x3, 0x35bdb6eefd654da5 # load x3 with value 0x35bdb6eefd654da5
sw x3, 0(x2) # store 0x35bdb6eefd654da5 in memory
flh f12, 0(x2) # load 0x35bdb6eefd654da5 from memory into f12
fnmadd.h f26, f16, f23, f12 # perform operation

# Testcase cp_fs2 (Test source fs2 = f24)
li x1, 0x0e7749964e09fda8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc6cdab1ba90c020 # load x3 with value 0xc6cdab1ba90c020
sw x3, 0(x2) # store 0xc6cdab1ba90c020 in memory
flh f13, 0(x2) # load 0xc6cdab1ba90c020 from memory into f13
li x3, 0x656b237dedd491b1 # load x3 with value 0x656b237dedd491b1
sw x3, 0(x2) # store 0x656b237dedd491b1 in memory
flh f24, 0(x2) # load 0x656b237dedd491b1 from memory into f24
li x3, 0x68cfdd785150f424 # load x3 with value 0x68cfdd785150f424
sw x3, 0(x2) # store 0x68cfdd785150f424 in memory
flh f21, 0(x2) # load 0x68cfdd785150f424 from memory into f21
fnmadd.h f1, f13, f24, f21 # perform operation

# Testcase cp_fs2 (Test source fs2 = f25)
li x29, 0x241d457a0300dbd3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3179fc9f84df349d # load x3 with value 0x3179fc9f84df349d
sw x3, 0(x2) # store 0x3179fc9f84df349d in memory
flh f15, 0(x2) # load 0x3179fc9f84df349d from memory into f15
li x3, 0xee8f41687b5be404 # load x3 with value 0xee8f41687b5be404
sw x3, 0(x2) # store 0xee8f41687b5be404 in memory
flh f25, 0(x2) # load 0xee8f41687b5be404 from memory into f25
li x3, 0x19bc4154ec5403e2 # load x3 with value 0x19bc4154ec5403e2
sw x3, 0(x2) # store 0x19bc4154ec5403e2 in memory
flh f9, 0(x2) # load 0x19bc4154ec5403e2 from memory into f9
fnmadd.h f29, f15, f25, f9 # perform operation

# Testcase cp_fs2 (Test source fs2 = f26)
li x3, 0x781aa4441ad289d8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x6673fd991c588d4 # load x3 with value 0x6673fd991c588d4
sw x3, 0(x2) # store 0x6673fd991c588d4 in memory
flh f27, 0(x2) # load 0x6673fd991c588d4 from memory into f27
li x3, 0x56863b8e92cdf361 # load x3 with value 0x56863b8e92cdf361
sw x3, 0(x2) # store 0x56863b8e92cdf361 in memory
flh f26, 0(x2) # load 0x56863b8e92cdf361 from memory into f26
li x3, 0x2fe6378872c9705c # load x3 with value 0x2fe6378872c9705c
sw x3, 0(x2) # store 0x2fe6378872c9705c in memory
flh f23, 0(x2) # load 0x2fe6378872c9705c from memory into f23
fnmadd.h f3, f27, f26, f23 # perform operation

# Testcase cp_fs2 (Test source fs2 = f27)
li x7, 0x5cbba58653eec7e2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xe1b85a145771fe17 # load x3 with value 0xe1b85a145771fe17
sw x3, 0(x2) # store 0xe1b85a145771fe17 in memory
flh f21, 0(x2) # load 0xe1b85a145771fe17 from memory into f21
li x3, 0xdeca271183717609 # load x3 with value 0xdeca271183717609
sw x3, 0(x2) # store 0xdeca271183717609 in memory
flh f27, 0(x2) # load 0xdeca271183717609 from memory into f27
li x3, 0xa1e0054f6b5651a1 # load x3 with value 0xa1e0054f6b5651a1
sw x3, 0(x2) # store 0xa1e0054f6b5651a1 in memory
flh f20, 0(x2) # load 0xa1e0054f6b5651a1 from memory into f20
fnmadd.h f7, f21, f27, f20 # perform operation

# Testcase cp_fs2 (Test source fs2 = f28)
li x17, 0x4be4044fefcdabbd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xdaaa15052fef501 # load x3 with value 0xdaaa15052fef501
sw x3, 0(x2) # store 0xdaaa15052fef501 in memory
flh f19, 0(x2) # load 0xdaaa15052fef501 from memory into f19
li x3, 0xb10f98c567721cc4 # load x3 with value 0xb10f98c567721cc4
sw x3, 0(x2) # store 0xb10f98c567721cc4 in memory
flh f28, 0(x2) # load 0xb10f98c567721cc4 from memory into f28
li x3, 0x4f95d5a7e81a224a # load x3 with value 0x4f95d5a7e81a224a
sw x3, 0(x2) # store 0x4f95d5a7e81a224a in memory
flh f31, 0(x2) # load 0x4f95d5a7e81a224a from memory into f31
fnmadd.h f17, f19, f28, f31 # perform operation

# Testcase cp_fs2 (Test source fs2 = f29)
li x4, 0xb5a88bf91967a79a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x8a6f0563c450e52d # load x3 with value 0x8a6f0563c450e52d
sw x3, 0(x2) # store 0x8a6f0563c450e52d in memory
flh f7, 0(x2) # load 0x8a6f0563c450e52d from memory into f7
li x3, 0xfc44e1ecbfd7de91 # load x3 with value 0xfc44e1ecbfd7de91
sw x3, 0(x2) # store 0xfc44e1ecbfd7de91 in memory
flh f29, 0(x2) # load 0xfc44e1ecbfd7de91 from memory into f29
li x3, 0xeced7106e7212900 # load x3 with value 0xeced7106e7212900
sw x3, 0(x2) # store 0xeced7106e7212900 in memory
flh f24, 0(x2) # load 0xeced7106e7212900 from memory into f24
fnmadd.h f4, f7, f29, f24 # perform operation

# Testcase cp_fs2 (Test source fs2 = f30)
li x19, 0x41b6975db72439ba # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xd7678807b73f835e # load x3 with value 0xd7678807b73f835e
sw x3, 0(x2) # store 0xd7678807b73f835e in memory
flh f14, 0(x2) # load 0xd7678807b73f835e from memory into f14
li x3, 0x3d291fd2f9e365d9 # load x3 with value 0x3d291fd2f9e365d9
sw x3, 0(x2) # store 0x3d291fd2f9e365d9 in memory
flh f30, 0(x2) # load 0x3d291fd2f9e365d9 from memory into f30
li x3, 0xd0a971ed1c99eae7 # load x3 with value 0xd0a971ed1c99eae7
sw x3, 0(x2) # store 0xd0a971ed1c99eae7 in memory
flh f31, 0(x2) # load 0xd0a971ed1c99eae7 from memory into f31
fnmadd.h f19, f14, f30, f31 # perform operation

# Testcase cp_fs2 (Test source fs2 = f31)
li x27, 0xf3982dd135c59846 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xe3103c0cd888f1a0 # load x3 with value 0xe3103c0cd888f1a0
sw x3, 0(x2) # store 0xe3103c0cd888f1a0 in memory
flh f22, 0(x2) # load 0xe3103c0cd888f1a0 from memory into f22
li x3, 0x28a155b19ad1057c # load x3 with value 0x28a155b19ad1057c
sw x3, 0(x2) # store 0x28a155b19ad1057c in memory
flh f31, 0(x2) # load 0x28a155b19ad1057c from memory into f31
li x3, 0xac5a05ea0895925 # load x3 with value 0xac5a05ea0895925
sw x3, 0(x2) # store 0xac5a05ea0895925 in memory
flh f6, 0(x2) # load 0xac5a05ea0895925 from memory into f6
fnmadd.h f27, f22, f31, f6 # perform operation

.EQU NUMTESTS,1


self_loop:
    j self_loop

.data

.align 4
scratch:
    .bss 8

.end
