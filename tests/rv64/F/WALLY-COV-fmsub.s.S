///////////////////////////////////////////
// /home/jcassidy/cvw/addins/cvw-arch-verif/tests/rv64/F//WALLY-COV-fmsub.s.S
// David_Harris@hmc.edu
// Created 2025-01-24 19:54:22.776061
//
// Copyright (C) 2024 Harvey Mudd College & Oklahoma State University, Habib University, UET Lahore
//
// SPDX-License-Identifier: Apache-2.0 WITH SHL-2.1
///////////////////////////////////////////

.section .text.init
.globl rvtest_entry_point

rvtest_entry_point:

    
# set mstatus.FS to 01 to enable fp
li t0,0x4000
csrs mstatus, t0


# Testcase cmp_gpr_hazard raw test
fmsub.s f23, f28, f16, f5 # perform first operation
fmsub.s f5, f23, f19, f13 # perform second operation

# Testcase cmp_gpr_hazard raw test
fmsub.s f14, f6, f22, f24 # perform first operation
fmsub.s f13, f25, f14, f8 # perform second operation

# Testcase cmp_gpr_hazard waw test
fmsub.s f11, f25, f29, f16 # perform first operation
fmsub.s f11, f25, f27, f21 # perform second operation

# Testcase cmp_gpr_hazard waw test
fmsub.s f8, f24, f12, f15 # perform first operation
fmsub.s f8, f17, f15, f14 # perform second operation

# Testcase cmp_gpr_hazard war test
fmsub.s f1, f28, f29, f15 # perform first operation
fmsub.s f28, f18, f28, f14 # perform second operation

# Testcase cmp_gpr_hazard war test
fmsub.s f29, f16, f1, f6 # perform first operation
fmsub.s f1, f28, f19, f26 # perform second operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f0)
li x0, 0xb8e2bceef73333a4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x92c8ac7c1011e5fc # load x3 with value 0x92c8ac7c1011e5fc
sw x3, 0(x2) # store 0x92c8ac7c1011e5fc in memory
flw f0, 0(x2) # load 0x92c8ac7c1011e5fc from memory into f0
li x3, 0x376f00af4477f563 # load x3 with value 0x376f00af4477f563
sw x3, 0(x2) # store 0x376f00af4477f563 in memory
flw f1, 0(x2) # load 0x376f00af4477f563 from memory into f1
li x3, 0xbe81624e2025c45b # load x3 with value 0xbe81624e2025c45b
sw x3, 0(x2) # store 0xbe81624e2025c45b in memory
flw f17, 0(x2) # load 0xbe81624e2025c45b from memory into f17
fmsub.s f0, f0, f1, f17 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f1)
li x1, 0xb0b19b9145c89914 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xb7ec6ef43cd387d1 # load x3 with value 0xb7ec6ef43cd387d1
sw x3, 0(x2) # store 0xb7ec6ef43cd387d1 in memory
flw f1, 0(x2) # load 0xb7ec6ef43cd387d1 from memory into f1
li x3, 0xd91ba24a5ecd6990 # load x3 with value 0xd91ba24a5ecd6990
sw x3, 0(x2) # store 0xd91ba24a5ecd6990 in memory
flw f22, 0(x2) # load 0xd91ba24a5ecd6990 from memory into f22
li x3, 0xc9a3b7bed0b79b4a # load x3 with value 0xc9a3b7bed0b79b4a
sw x3, 0(x2) # store 0xc9a3b7bed0b79b4a in memory
flw f27, 0(x2) # load 0xc9a3b7bed0b79b4a from memory into f27
fmsub.s f1, f1, f22, f27 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f2)
li x2, 0x7d748bfd5de63b16 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xaccb91a08f163f0b # load x3 with value 0xaccb91a08f163f0b
sw x3, 0(x2) # store 0xaccb91a08f163f0b in memory
flw f2, 0(x2) # load 0xaccb91a08f163f0b from memory into f2
li x3, 0xd38356d1bb6659 # load x3 with value 0xd38356d1bb6659
sw x3, 0(x2) # store 0xd38356d1bb6659 in memory
flw f13, 0(x2) # load 0xd38356d1bb6659 from memory into f13
li x3, 0xfe07036ea29bd23a # load x3 with value 0xfe07036ea29bd23a
sw x3, 0(x2) # store 0xfe07036ea29bd23a in memory
flw f4, 0(x2) # load 0xfe07036ea29bd23a from memory into f4
fmsub.s f2, f2, f13, f4 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f3)
li x3, 0xc0ed1eacb27ea821 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x372bec689b6c6d76 # load x3 with value 0x372bec689b6c6d76
sw x3, 0(x2) # store 0x372bec689b6c6d76 in memory
flw f3, 0(x2) # load 0x372bec689b6c6d76 from memory into f3
li x3, 0xafca9c7c07e77314 # load x3 with value 0xafca9c7c07e77314
sw x3, 0(x2) # store 0xafca9c7c07e77314 in memory
flw f2, 0(x2) # load 0xafca9c7c07e77314 from memory into f2
li x3, 0xe5912ae57960ba9e # load x3 with value 0xe5912ae57960ba9e
sw x3, 0(x2) # store 0xe5912ae57960ba9e in memory
flw f24, 0(x2) # load 0xe5912ae57960ba9e from memory into f24
fmsub.s f3, f3, f2, f24 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f4)
li x4, 0xed5a5cf12c57fcd7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x83193ab2a7fb53a6 # load x3 with value 0x83193ab2a7fb53a6
sw x3, 0(x2) # store 0x83193ab2a7fb53a6 in memory
flw f4, 0(x2) # load 0x83193ab2a7fb53a6 from memory into f4
li x3, 0x6d6b104f35a2aec3 # load x3 with value 0x6d6b104f35a2aec3
sw x3, 0(x2) # store 0x6d6b104f35a2aec3 in memory
flw f13, 0(x2) # load 0x6d6b104f35a2aec3 from memory into f13
li x3, 0x6680183d5d72c2ea # load x3 with value 0x6680183d5d72c2ea
sw x3, 0(x2) # store 0x6680183d5d72c2ea in memory
flw f29, 0(x2) # load 0x6680183d5d72c2ea from memory into f29
fmsub.s f4, f4, f13, f29 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f5)
li x5, 0xd8bdb3c5a42fdf36 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x2a86a5ce8ab6f15b # load x3 with value 0x2a86a5ce8ab6f15b
sw x3, 0(x2) # store 0x2a86a5ce8ab6f15b in memory
flw f5, 0(x2) # load 0x2a86a5ce8ab6f15b from memory into f5
li x3, 0x1e648e285aefc3a0 # load x3 with value 0x1e648e285aefc3a0
sw x3, 0(x2) # store 0x1e648e285aefc3a0 in memory
flw f14, 0(x2) # load 0x1e648e285aefc3a0 from memory into f14
li x3, 0xb161cf5f09c6d15e # load x3 with value 0xb161cf5f09c6d15e
sw x3, 0(x2) # store 0xb161cf5f09c6d15e in memory
flw f16, 0(x2) # load 0xb161cf5f09c6d15e from memory into f16
fmsub.s f5, f5, f14, f16 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f6)
li x6, 0x32c54f8841b75521 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x6311b7b3d5320d17 # load x3 with value 0x6311b7b3d5320d17
sw x3, 0(x2) # store 0x6311b7b3d5320d17 in memory
flw f6, 0(x2) # load 0x6311b7b3d5320d17 from memory into f6
li x3, 0x11fd6bc855f8916 # load x3 with value 0x11fd6bc855f8916
sw x3, 0(x2) # store 0x11fd6bc855f8916 in memory
flw f30, 0(x2) # load 0x11fd6bc855f8916 from memory into f30
li x3, 0x23e7223e5b141df6 # load x3 with value 0x23e7223e5b141df6
sw x3, 0(x2) # store 0x23e7223e5b141df6 in memory
flw f8, 0(x2) # load 0x23e7223e5b141df6 from memory into f8
fmsub.s f6, f6, f30, f8 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f7)
li x7, 0xcd423ab7e8a88cee # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x9709b4da5344c060 # load x3 with value 0x9709b4da5344c060
sw x3, 0(x2) # store 0x9709b4da5344c060 in memory
flw f7, 0(x2) # load 0x9709b4da5344c060 from memory into f7
li x3, 0x9a13b5ca15c007ef # load x3 with value 0x9a13b5ca15c007ef
sw x3, 0(x2) # store 0x9a13b5ca15c007ef in memory
flw f7, 0(x2) # load 0x9a13b5ca15c007ef from memory into f7
li x3, 0x15e08b24e534d97 # load x3 with value 0x15e08b24e534d97
sw x3, 0(x2) # store 0x15e08b24e534d97 in memory
flw f19, 0(x2) # load 0x15e08b24e534d97 from memory into f19
fmsub.s f7, f7, f7, f19 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f8)
li x8, 0x81e555dcc9bf934b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x41158f18db2bfb1 # load x3 with value 0x41158f18db2bfb1
sw x3, 0(x2) # store 0x41158f18db2bfb1 in memory
flw f8, 0(x2) # load 0x41158f18db2bfb1 from memory into f8
li x3, 0xffbc3b2d67884b0b # load x3 with value 0xffbc3b2d67884b0b
sw x3, 0(x2) # store 0xffbc3b2d67884b0b in memory
flw f11, 0(x2) # load 0xffbc3b2d67884b0b from memory into f11
li x3, 0x3d24ed67a49add52 # load x3 with value 0x3d24ed67a49add52
sw x3, 0(x2) # store 0x3d24ed67a49add52 in memory
flw f16, 0(x2) # load 0x3d24ed67a49add52 from memory into f16
fmsub.s f8, f8, f11, f16 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f9)
li x9, 0xd12e05763b67f916 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xd35fc1eb632edf2d # load x3 with value 0xd35fc1eb632edf2d
sw x3, 0(x2) # store 0xd35fc1eb632edf2d in memory
flw f9, 0(x2) # load 0xd35fc1eb632edf2d from memory into f9
li x3, 0xda665f8055861912 # load x3 with value 0xda665f8055861912
sw x3, 0(x2) # store 0xda665f8055861912 in memory
flw f3, 0(x2) # load 0xda665f8055861912 from memory into f3
li x3, 0x980550c84fba8117 # load x3 with value 0x980550c84fba8117
sw x3, 0(x2) # store 0x980550c84fba8117 in memory
flw f7, 0(x2) # load 0x980550c84fba8117 from memory into f7
fmsub.s f9, f9, f3, f7 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f10)
li x10, 0xd17fff837b4c0fb4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xef54923468933807 # load x3 with value 0xef54923468933807
sw x3, 0(x2) # store 0xef54923468933807 in memory
flw f10, 0(x2) # load 0xef54923468933807 from memory into f10
li x3, 0xe0bea760f7a39334 # load x3 with value 0xe0bea760f7a39334
sw x3, 0(x2) # store 0xe0bea760f7a39334 in memory
flw f18, 0(x2) # load 0xe0bea760f7a39334 from memory into f18
li x3, 0xbf0f385073c8da09 # load x3 with value 0xbf0f385073c8da09
sw x3, 0(x2) # store 0xbf0f385073c8da09 in memory
flw f7, 0(x2) # load 0xbf0f385073c8da09 from memory into f7
fmsub.s f10, f10, f18, f7 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f11)
li x11, 0x31268dac3f2b60fc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x59c87b13d5289b91 # load x3 with value 0x59c87b13d5289b91
sw x3, 0(x2) # store 0x59c87b13d5289b91 in memory
flw f11, 0(x2) # load 0x59c87b13d5289b91 from memory into f11
li x3, 0x3a57e5fb515e2cee # load x3 with value 0x3a57e5fb515e2cee
sw x3, 0(x2) # store 0x3a57e5fb515e2cee in memory
flw f3, 0(x2) # load 0x3a57e5fb515e2cee from memory into f3
li x3, 0x6c9af2725f7d4ac7 # load x3 with value 0x6c9af2725f7d4ac7
sw x3, 0(x2) # store 0x6c9af2725f7d4ac7 in memory
flw f25, 0(x2) # load 0x6c9af2725f7d4ac7 from memory into f25
fmsub.s f11, f11, f3, f25 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f12)
li x12, 0xbee64ce67456f857 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xcb989e61bd284b10 # load x3 with value 0xcb989e61bd284b10
sw x3, 0(x2) # store 0xcb989e61bd284b10 in memory
flw f12, 0(x2) # load 0xcb989e61bd284b10 from memory into f12
li x3, 0x5a850d9a2c5f660c # load x3 with value 0x5a850d9a2c5f660c
sw x3, 0(x2) # store 0x5a850d9a2c5f660c in memory
flw f2, 0(x2) # load 0x5a850d9a2c5f660c from memory into f2
li x3, 0x236d18b6f530137 # load x3 with value 0x236d18b6f530137
sw x3, 0(x2) # store 0x236d18b6f530137 in memory
flw f10, 0(x2) # load 0x236d18b6f530137 from memory into f10
fmsub.s f12, f12, f2, f10 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f13)
li x13, 0x1ae25ce0b3b0b28b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xcf7933f7d7bae869 # load x3 with value 0xcf7933f7d7bae869
sw x3, 0(x2) # store 0xcf7933f7d7bae869 in memory
flw f13, 0(x2) # load 0xcf7933f7d7bae869 from memory into f13
li x3, 0xeb2a250c89d7ccb3 # load x3 with value 0xeb2a250c89d7ccb3
sw x3, 0(x2) # store 0xeb2a250c89d7ccb3 in memory
flw f29, 0(x2) # load 0xeb2a250c89d7ccb3 from memory into f29
li x3, 0x2ea6f1c1be1122de # load x3 with value 0x2ea6f1c1be1122de
sw x3, 0(x2) # store 0x2ea6f1c1be1122de in memory
flw f12, 0(x2) # load 0x2ea6f1c1be1122de from memory into f12
fmsub.s f13, f13, f29, f12 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f14)
li x14, 0xd25539fc70ffef12 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x41bf4268388c5ade # load x3 with value 0x41bf4268388c5ade
sw x3, 0(x2) # store 0x41bf4268388c5ade in memory
flw f14, 0(x2) # load 0x41bf4268388c5ade from memory into f14
li x3, 0x7d10892b1df7180e # load x3 with value 0x7d10892b1df7180e
sw x3, 0(x2) # store 0x7d10892b1df7180e in memory
flw f25, 0(x2) # load 0x7d10892b1df7180e from memory into f25
li x3, 0x720fd042fbe0a396 # load x3 with value 0x720fd042fbe0a396
sw x3, 0(x2) # store 0x720fd042fbe0a396 in memory
flw f11, 0(x2) # load 0x720fd042fbe0a396 from memory into f11
fmsub.s f14, f14, f25, f11 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f15)
li x15, 0xc3c4a452587dbcff # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x576a6aeb837f416a # load x3 with value 0x576a6aeb837f416a
sw x3, 0(x2) # store 0x576a6aeb837f416a in memory
flw f15, 0(x2) # load 0x576a6aeb837f416a from memory into f15
li x3, 0x24c990d022ac20b0 # load x3 with value 0x24c990d022ac20b0
sw x3, 0(x2) # store 0x24c990d022ac20b0 in memory
flw f8, 0(x2) # load 0x24c990d022ac20b0 from memory into f8
li x3, 0x6bde67e0c9d05b42 # load x3 with value 0x6bde67e0c9d05b42
sw x3, 0(x2) # store 0x6bde67e0c9d05b42 in memory
flw f10, 0(x2) # load 0x6bde67e0c9d05b42 from memory into f10
fmsub.s f15, f15, f8, f10 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f16)
li x16, 0xed8c0d3790b0075c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x2b3d9dbd008c3f15 # load x3 with value 0x2b3d9dbd008c3f15
sw x3, 0(x2) # store 0x2b3d9dbd008c3f15 in memory
flw f16, 0(x2) # load 0x2b3d9dbd008c3f15 from memory into f16
li x3, 0xa31f109d381317c1 # load x3 with value 0xa31f109d381317c1
sw x3, 0(x2) # store 0xa31f109d381317c1 in memory
flw f27, 0(x2) # load 0xa31f109d381317c1 from memory into f27
li x3, 0xf23d9102e9180433 # load x3 with value 0xf23d9102e9180433
sw x3, 0(x2) # store 0xf23d9102e9180433 in memory
flw f24, 0(x2) # load 0xf23d9102e9180433 from memory into f24
fmsub.s f16, f16, f27, f24 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f17)
li x17, 0x910e1a66640b68ae # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x499b0d26d426a2d1 # load x3 with value 0x499b0d26d426a2d1
sw x3, 0(x2) # store 0x499b0d26d426a2d1 in memory
flw f17, 0(x2) # load 0x499b0d26d426a2d1 from memory into f17
li x3, 0x1d04cebf946e267d # load x3 with value 0x1d04cebf946e267d
sw x3, 0(x2) # store 0x1d04cebf946e267d in memory
flw f31, 0(x2) # load 0x1d04cebf946e267d from memory into f31
li x3, 0x176e70eee5472d64 # load x3 with value 0x176e70eee5472d64
sw x3, 0(x2) # store 0x176e70eee5472d64 in memory
flw f2, 0(x2) # load 0x176e70eee5472d64 from memory into f2
fmsub.s f17, f17, f31, f2 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f18)
li x18, 0x78eaafffec00d5f5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc913a07cfa0eee8 # load x3 with value 0xc913a07cfa0eee8
sw x3, 0(x2) # store 0xc913a07cfa0eee8 in memory
flw f18, 0(x2) # load 0xc913a07cfa0eee8 from memory into f18
li x3, 0x6bc58b9ee8818b32 # load x3 with value 0x6bc58b9ee8818b32
sw x3, 0(x2) # store 0x6bc58b9ee8818b32 in memory
flw f8, 0(x2) # load 0x6bc58b9ee8818b32 from memory into f8
li x3, 0x251a11a9d7c8d431 # load x3 with value 0x251a11a9d7c8d431
sw x3, 0(x2) # store 0x251a11a9d7c8d431 in memory
flw f1, 0(x2) # load 0x251a11a9d7c8d431 from memory into f1
fmsub.s f18, f18, f8, f1 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f19)
li x19, 0x03881f8a8089ac65 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3be29fc951f1b8b8 # load x3 with value 0x3be29fc951f1b8b8
sw x3, 0(x2) # store 0x3be29fc951f1b8b8 in memory
flw f19, 0(x2) # load 0x3be29fc951f1b8b8 from memory into f19
li x3, 0xd10c20e62ba38422 # load x3 with value 0xd10c20e62ba38422
sw x3, 0(x2) # store 0xd10c20e62ba38422 in memory
flw f23, 0(x2) # load 0xd10c20e62ba38422 from memory into f23
li x3, 0xde8a3fb20de2b7ef # load x3 with value 0xde8a3fb20de2b7ef
sw x3, 0(x2) # store 0xde8a3fb20de2b7ef in memory
flw f24, 0(x2) # load 0xde8a3fb20de2b7ef from memory into f24
fmsub.s f19, f19, f23, f24 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f20)
li x20, 0x7561f347dad9c4de # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xd734057bb5c5e2cb # load x3 with value 0xd734057bb5c5e2cb
sw x3, 0(x2) # store 0xd734057bb5c5e2cb in memory
flw f20, 0(x2) # load 0xd734057bb5c5e2cb from memory into f20
li x3, 0x52e493b614a4fdb5 # load x3 with value 0x52e493b614a4fdb5
sw x3, 0(x2) # store 0x52e493b614a4fdb5 in memory
flw f4, 0(x2) # load 0x52e493b614a4fdb5 from memory into f4
li x3, 0xd423d1c0f8df9d60 # load x3 with value 0xd423d1c0f8df9d60
sw x3, 0(x2) # store 0xd423d1c0f8df9d60 in memory
flw f25, 0(x2) # load 0xd423d1c0f8df9d60 from memory into f25
fmsub.s f20, f20, f4, f25 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f21)
li x21, 0xc10ffbc0da07e572 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x59c67f5d6e63df52 # load x3 with value 0x59c67f5d6e63df52
sw x3, 0(x2) # store 0x59c67f5d6e63df52 in memory
flw f21, 0(x2) # load 0x59c67f5d6e63df52 from memory into f21
li x3, 0xdc95ed093cc1e488 # load x3 with value 0xdc95ed093cc1e488
sw x3, 0(x2) # store 0xdc95ed093cc1e488 in memory
flw f29, 0(x2) # load 0xdc95ed093cc1e488 from memory into f29
li x3, 0x4c729b4b17c24673 # load x3 with value 0x4c729b4b17c24673
sw x3, 0(x2) # store 0x4c729b4b17c24673 in memory
flw f8, 0(x2) # load 0x4c729b4b17c24673 from memory into f8
fmsub.s f21, f21, f29, f8 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f22)
li x22, 0xd540724d9b9b6bfb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xf6ec4e65abb81d40 # load x3 with value 0xf6ec4e65abb81d40
sw x3, 0(x2) # store 0xf6ec4e65abb81d40 in memory
flw f22, 0(x2) # load 0xf6ec4e65abb81d40 from memory into f22
li x3, 0x628ec1178960c923 # load x3 with value 0x628ec1178960c923
sw x3, 0(x2) # store 0x628ec1178960c923 in memory
flw f15, 0(x2) # load 0x628ec1178960c923 from memory into f15
li x3, 0x37858ce05faee652 # load x3 with value 0x37858ce05faee652
sw x3, 0(x2) # store 0x37858ce05faee652 in memory
flw f24, 0(x2) # load 0x37858ce05faee652 from memory into f24
fmsub.s f22, f22, f15, f24 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f23)
li x23, 0x915f0f455fbec318 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x563be6b679c97750 # load x3 with value 0x563be6b679c97750
sw x3, 0(x2) # store 0x563be6b679c97750 in memory
flw f23, 0(x2) # load 0x563be6b679c97750 from memory into f23
li x3, 0x2d3ff71c09c909c4 # load x3 with value 0x2d3ff71c09c909c4
sw x3, 0(x2) # store 0x2d3ff71c09c909c4 in memory
flw f10, 0(x2) # load 0x2d3ff71c09c909c4 from memory into f10
li x3, 0xffa2c4021e919de1 # load x3 with value 0xffa2c4021e919de1
sw x3, 0(x2) # store 0xffa2c4021e919de1 in memory
flw f15, 0(x2) # load 0xffa2c4021e919de1 from memory into f15
fmsub.s f23, f23, f10, f15 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f24)
li x24, 0xc29a664323768640 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7d9dc0f5802669aa # load x3 with value 0x7d9dc0f5802669aa
sw x3, 0(x2) # store 0x7d9dc0f5802669aa in memory
flw f24, 0(x2) # load 0x7d9dc0f5802669aa from memory into f24
li x3, 0x6a41b0c2e6e5a680 # load x3 with value 0x6a41b0c2e6e5a680
sw x3, 0(x2) # store 0x6a41b0c2e6e5a680 in memory
flw f16, 0(x2) # load 0x6a41b0c2e6e5a680 from memory into f16
li x3, 0x4a594762b1a7eeca # load x3 with value 0x4a594762b1a7eeca
sw x3, 0(x2) # store 0x4a594762b1a7eeca in memory
flw f8, 0(x2) # load 0x4a594762b1a7eeca from memory into f8
fmsub.s f24, f24, f16, f8 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f25)
li x25, 0xb244a25117e70705 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xae1fb56fd37524d6 # load x3 with value 0xae1fb56fd37524d6
sw x3, 0(x2) # store 0xae1fb56fd37524d6 in memory
flw f25, 0(x2) # load 0xae1fb56fd37524d6 from memory into f25
li x3, 0x3865932318abcd8c # load x3 with value 0x3865932318abcd8c
sw x3, 0(x2) # store 0x3865932318abcd8c in memory
flw f21, 0(x2) # load 0x3865932318abcd8c from memory into f21
li x3, 0xb801e7526ef89271 # load x3 with value 0xb801e7526ef89271
sw x3, 0(x2) # store 0xb801e7526ef89271 in memory
flw f16, 0(x2) # load 0xb801e7526ef89271 from memory into f16
fmsub.s f25, f25, f21, f16 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f26)
li x26, 0x7142cd6402f49a52 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa981a9b0b0d9742f # load x3 with value 0xa981a9b0b0d9742f
sw x3, 0(x2) # store 0xa981a9b0b0d9742f in memory
flw f26, 0(x2) # load 0xa981a9b0b0d9742f from memory into f26
li x3, 0xedbef167cdc6f860 # load x3 with value 0xedbef167cdc6f860
sw x3, 0(x2) # store 0xedbef167cdc6f860 in memory
flw f23, 0(x2) # load 0xedbef167cdc6f860 from memory into f23
li x3, 0x5753a69695c829a9 # load x3 with value 0x5753a69695c829a9
sw x3, 0(x2) # store 0x5753a69695c829a9 in memory
flw f31, 0(x2) # load 0x5753a69695c829a9 from memory into f31
fmsub.s f26, f26, f23, f31 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f27)
li x27, 0x87c93ba74018d7d4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x8920576d9da36d92 # load x3 with value 0x8920576d9da36d92
sw x3, 0(x2) # store 0x8920576d9da36d92 in memory
flw f27, 0(x2) # load 0x8920576d9da36d92 from memory into f27
li x3, 0x9c7a01fe3b1ef34c # load x3 with value 0x9c7a01fe3b1ef34c
sw x3, 0(x2) # store 0x9c7a01fe3b1ef34c in memory
flw f25, 0(x2) # load 0x9c7a01fe3b1ef34c from memory into f25
li x3, 0x11ffdfe6d40f2362 # load x3 with value 0x11ffdfe6d40f2362
sw x3, 0(x2) # store 0x11ffdfe6d40f2362 in memory
flw f7, 0(x2) # load 0x11ffdfe6d40f2362 from memory into f7
fmsub.s f27, f27, f25, f7 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f28)
li x28, 0x79179e9519268173 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x18decad27cc283a7 # load x3 with value 0x18decad27cc283a7
sw x3, 0(x2) # store 0x18decad27cc283a7 in memory
flw f28, 0(x2) # load 0x18decad27cc283a7 from memory into f28
li x3, 0x90cd77f0994d9a7b # load x3 with value 0x90cd77f0994d9a7b
sw x3, 0(x2) # store 0x90cd77f0994d9a7b in memory
flw f22, 0(x2) # load 0x90cd77f0994d9a7b from memory into f22
li x3, 0xcecec5814fd3346e # load x3 with value 0xcecec5814fd3346e
sw x3, 0(x2) # store 0xcecec5814fd3346e in memory
flw f4, 0(x2) # load 0xcecec5814fd3346e from memory into f4
fmsub.s f28, f28, f22, f4 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f29)
li x29, 0x508d4a99307bee49 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x74a22ed60e9817e0 # load x3 with value 0x74a22ed60e9817e0
sw x3, 0(x2) # store 0x74a22ed60e9817e0 in memory
flw f29, 0(x2) # load 0x74a22ed60e9817e0 from memory into f29
li x3, 0xee6f4e5f8a9e4303 # load x3 with value 0xee6f4e5f8a9e4303
sw x3, 0(x2) # store 0xee6f4e5f8a9e4303 in memory
flw f18, 0(x2) # load 0xee6f4e5f8a9e4303 from memory into f18
li x3, 0xc3cdce60eb9241c # load x3 with value 0xc3cdce60eb9241c
sw x3, 0(x2) # store 0xc3cdce60eb9241c in memory
flw f19, 0(x2) # load 0xc3cdce60eb9241c from memory into f19
fmsub.s f29, f29, f18, f19 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f30)
li x30, 0x79f27d41bcb3bd7a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x2b2bb9215a7e42fa # load x3 with value 0x2b2bb9215a7e42fa
sw x3, 0(x2) # store 0x2b2bb9215a7e42fa in memory
flw f30, 0(x2) # load 0x2b2bb9215a7e42fa from memory into f30
li x3, 0x8e8872aa01991e8c # load x3 with value 0x8e8872aa01991e8c
sw x3, 0(x2) # store 0x8e8872aa01991e8c in memory
flw f28, 0(x2) # load 0x8e8872aa01991e8c from memory into f28
li x3, 0x3debdb511641e4eb # load x3 with value 0x3debdb511641e4eb
sw x3, 0(x2) # store 0x3debdb511641e4eb in memory
flw f18, 0(x2) # load 0x3debdb511641e4eb from memory into f18
fmsub.s f30, f30, f28, f18 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f31)
li x31, 0xefb82dbc164e8b8b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xba6ddd8c7a55ce74 # load x3 with value 0xba6ddd8c7a55ce74
sw x3, 0(x2) # store 0xba6ddd8c7a55ce74 in memory
flw f31, 0(x2) # load 0xba6ddd8c7a55ce74 from memory into f31
li x3, 0x3168af8fb0fc25fd # load x3 with value 0x3168af8fb0fc25fd
sw x3, 0(x2) # store 0x3168af8fb0fc25fd in memory
flw f3, 0(x2) # load 0x3168af8fb0fc25fd from memory into f3
li x3, 0x5dd62269bd144df0 # load x3 with value 0x5dd62269bd144df0
sw x3, 0(x2) # store 0x5dd62269bd144df0 in memory
flw f27, 0(x2) # load 0x5dd62269bd144df0 from memory into f27
fmsub.s f31, f31, f3, f27 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f0)
li x0, 0xc03a06e87e49aa40 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xf5b146b026bfe9a9 # load x3 with value 0xf5b146b026bfe9a9
sw x3, 0(x2) # store 0xf5b146b026bfe9a9 in memory
flw f19, 0(x2) # load 0xf5b146b026bfe9a9 from memory into f19
li x3, 0xbf7e0ae92436f61a # load x3 with value 0xbf7e0ae92436f61a
sw x3, 0(x2) # store 0xbf7e0ae92436f61a in memory
flw f0, 0(x2) # load 0xbf7e0ae92436f61a from memory into f0
li x3, 0x862f054e34315d78 # load x3 with value 0x862f054e34315d78
sw x3, 0(x2) # store 0x862f054e34315d78 in memory
flw f18, 0(x2) # load 0x862f054e34315d78 from memory into f18
fmsub.s f0, f19, f0, f18 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f1)
li x1, 0x502c8e47f227436d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x736627cf2e28e962 # load x3 with value 0x736627cf2e28e962
sw x3, 0(x2) # store 0x736627cf2e28e962 in memory
flw f3, 0(x2) # load 0x736627cf2e28e962 from memory into f3
li x3, 0xe1406f70232d429e # load x3 with value 0xe1406f70232d429e
sw x3, 0(x2) # store 0xe1406f70232d429e in memory
flw f1, 0(x2) # load 0xe1406f70232d429e from memory into f1
li x3, 0x4c33e1182b87d0ed # load x3 with value 0x4c33e1182b87d0ed
sw x3, 0(x2) # store 0x4c33e1182b87d0ed in memory
flw f19, 0(x2) # load 0x4c33e1182b87d0ed from memory into f19
fmsub.s f1, f3, f1, f19 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f2)
li x2, 0xcda5937236572ea2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x123243c961fe30be # load x3 with value 0x123243c961fe30be
sw x3, 0(x2) # store 0x123243c961fe30be in memory
flw f17, 0(x2) # load 0x123243c961fe30be from memory into f17
li x3, 0xf9ce1324d3ae67af # load x3 with value 0xf9ce1324d3ae67af
sw x3, 0(x2) # store 0xf9ce1324d3ae67af in memory
flw f2, 0(x2) # load 0xf9ce1324d3ae67af from memory into f2
li x3, 0xd392c594ba2c8f28 # load x3 with value 0xd392c594ba2c8f28
sw x3, 0(x2) # store 0xd392c594ba2c8f28 in memory
flw f11, 0(x2) # load 0xd392c594ba2c8f28 from memory into f11
fmsub.s f2, f17, f2, f11 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f3)
li x3, 0x28071decc61c02c9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3135d5761bc9e6ae # load x3 with value 0x3135d5761bc9e6ae
sw x3, 0(x2) # store 0x3135d5761bc9e6ae in memory
flw f21, 0(x2) # load 0x3135d5761bc9e6ae from memory into f21
li x3, 0x574d899268f85641 # load x3 with value 0x574d899268f85641
sw x3, 0(x2) # store 0x574d899268f85641 in memory
flw f3, 0(x2) # load 0x574d899268f85641 from memory into f3
li x3, 0x82dc0edb9b78dc21 # load x3 with value 0x82dc0edb9b78dc21
sw x3, 0(x2) # store 0x82dc0edb9b78dc21 in memory
flw f6, 0(x2) # load 0x82dc0edb9b78dc21 from memory into f6
fmsub.s f3, f21, f3, f6 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f4)
li x4, 0x6e872693a0573c70 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa96d968211eece # load x3 with value 0xa96d968211eece
sw x3, 0(x2) # store 0xa96d968211eece in memory
flw f26, 0(x2) # load 0xa96d968211eece from memory into f26
li x3, 0xc9750ff2d266789b # load x3 with value 0xc9750ff2d266789b
sw x3, 0(x2) # store 0xc9750ff2d266789b in memory
flw f4, 0(x2) # load 0xc9750ff2d266789b from memory into f4
li x3, 0xe584ac945ed475d2 # load x3 with value 0xe584ac945ed475d2
sw x3, 0(x2) # store 0xe584ac945ed475d2 in memory
flw f30, 0(x2) # load 0xe584ac945ed475d2 from memory into f30
fmsub.s f4, f26, f4, f30 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f5)
li x5, 0x5a0391f6d4fde178 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xe1492d364b21743c # load x3 with value 0xe1492d364b21743c
sw x3, 0(x2) # store 0xe1492d364b21743c in memory
flw f1, 0(x2) # load 0xe1492d364b21743c from memory into f1
li x3, 0xd78d1db916bf424a # load x3 with value 0xd78d1db916bf424a
sw x3, 0(x2) # store 0xd78d1db916bf424a in memory
flw f5, 0(x2) # load 0xd78d1db916bf424a from memory into f5
li x3, 0x19523627e42d840 # load x3 with value 0x19523627e42d840
sw x3, 0(x2) # store 0x19523627e42d840 in memory
flw f3, 0(x2) # load 0x19523627e42d840 from memory into f3
fmsub.s f5, f1, f5, f3 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f6)
li x6, 0x538c5e06b66b4853 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x271ae5a7271d61d3 # load x3 with value 0x271ae5a7271d61d3
sw x3, 0(x2) # store 0x271ae5a7271d61d3 in memory
flw f13, 0(x2) # load 0x271ae5a7271d61d3 from memory into f13
li x3, 0x36c60b6d8675c670 # load x3 with value 0x36c60b6d8675c670
sw x3, 0(x2) # store 0x36c60b6d8675c670 in memory
flw f6, 0(x2) # load 0x36c60b6d8675c670 from memory into f6
li x3, 0xa9470202209b40bf # load x3 with value 0xa9470202209b40bf
sw x3, 0(x2) # store 0xa9470202209b40bf in memory
flw f20, 0(x2) # load 0xa9470202209b40bf from memory into f20
fmsub.s f6, f13, f6, f20 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f7)
li x7, 0xed471fcc06ca8938 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf249872c2e52b15 # load x3 with value 0xbf249872c2e52b15
sw x3, 0(x2) # store 0xbf249872c2e52b15 in memory
flw f26, 0(x2) # load 0xbf249872c2e52b15 from memory into f26
li x3, 0x7f9b7a82f4e6e3ad # load x3 with value 0x7f9b7a82f4e6e3ad
sw x3, 0(x2) # store 0x7f9b7a82f4e6e3ad in memory
flw f7, 0(x2) # load 0x7f9b7a82f4e6e3ad from memory into f7
li x3, 0xf9cfc3b61545652a # load x3 with value 0xf9cfc3b61545652a
sw x3, 0(x2) # store 0xf9cfc3b61545652a in memory
flw f25, 0(x2) # load 0xf9cfc3b61545652a from memory into f25
fmsub.s f7, f26, f7, f25 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f8)
li x8, 0xaaa1779d7c95bb4c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x9361ef24b7e7bc64 # load x3 with value 0x9361ef24b7e7bc64
sw x3, 0(x2) # store 0x9361ef24b7e7bc64 in memory
flw f8, 0(x2) # load 0x9361ef24b7e7bc64 from memory into f8
li x3, 0x1ac39afdcecc42cf # load x3 with value 0x1ac39afdcecc42cf
sw x3, 0(x2) # store 0x1ac39afdcecc42cf in memory
flw f8, 0(x2) # load 0x1ac39afdcecc42cf from memory into f8
li x3, 0xa46e4a9096858c67 # load x3 with value 0xa46e4a9096858c67
sw x3, 0(x2) # store 0xa46e4a9096858c67 in memory
flw f18, 0(x2) # load 0xa46e4a9096858c67 from memory into f18
fmsub.s f8, f8, f8, f18 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f9)
li x9, 0x545ff8d09a9a8ba4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xe8e0a8342dd86dd8 # load x3 with value 0xe8e0a8342dd86dd8
sw x3, 0(x2) # store 0xe8e0a8342dd86dd8 in memory
flw f6, 0(x2) # load 0xe8e0a8342dd86dd8 from memory into f6
li x3, 0xd97340992edc0d24 # load x3 with value 0xd97340992edc0d24
sw x3, 0(x2) # store 0xd97340992edc0d24 in memory
flw f9, 0(x2) # load 0xd97340992edc0d24 from memory into f9
li x3, 0x5d730acd67a12795 # load x3 with value 0x5d730acd67a12795
sw x3, 0(x2) # store 0x5d730acd67a12795 in memory
flw f2, 0(x2) # load 0x5d730acd67a12795 from memory into f2
fmsub.s f9, f6, f9, f2 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f10)
li x10, 0x97d6e0830908ae8e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x65fa2d6707615be8 # load x3 with value 0x65fa2d6707615be8
sw x3, 0(x2) # store 0x65fa2d6707615be8 in memory
flw f30, 0(x2) # load 0x65fa2d6707615be8 from memory into f30
li x3, 0x28818cb6406c068d # load x3 with value 0x28818cb6406c068d
sw x3, 0(x2) # store 0x28818cb6406c068d in memory
flw f10, 0(x2) # load 0x28818cb6406c068d from memory into f10
li x3, 0xaa632ccd7faf77df # load x3 with value 0xaa632ccd7faf77df
sw x3, 0(x2) # store 0xaa632ccd7faf77df in memory
flw f25, 0(x2) # load 0xaa632ccd7faf77df from memory into f25
fmsub.s f10, f30, f10, f25 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f11)
li x11, 0x47c245ace00f2cf1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xeb97fbe568494df4 # load x3 with value 0xeb97fbe568494df4
sw x3, 0(x2) # store 0xeb97fbe568494df4 in memory
flw f12, 0(x2) # load 0xeb97fbe568494df4 from memory into f12
li x3, 0x4ed360b401543213 # load x3 with value 0x4ed360b401543213
sw x3, 0(x2) # store 0x4ed360b401543213 in memory
flw f11, 0(x2) # load 0x4ed360b401543213 from memory into f11
li x3, 0x70c66a1e3666bd7b # load x3 with value 0x70c66a1e3666bd7b
sw x3, 0(x2) # store 0x70c66a1e3666bd7b in memory
flw f15, 0(x2) # load 0x70c66a1e3666bd7b from memory into f15
fmsub.s f11, f12, f11, f15 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f12)
li x12, 0xc07eb8a217defd2f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x2b8625c6e8d0580b # load x3 with value 0x2b8625c6e8d0580b
sw x3, 0(x2) # store 0x2b8625c6e8d0580b in memory
flw f17, 0(x2) # load 0x2b8625c6e8d0580b from memory into f17
li x3, 0x7e04503bdd18c1f7 # load x3 with value 0x7e04503bdd18c1f7
sw x3, 0(x2) # store 0x7e04503bdd18c1f7 in memory
flw f12, 0(x2) # load 0x7e04503bdd18c1f7 from memory into f12
li x3, 0x48640d507edf966 # load x3 with value 0x48640d507edf966
sw x3, 0(x2) # store 0x48640d507edf966 in memory
flw f16, 0(x2) # load 0x48640d507edf966 from memory into f16
fmsub.s f12, f17, f12, f16 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f13)
li x13, 0xa8a4799ae0f64982 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x1bd4c27fae4123a6 # load x3 with value 0x1bd4c27fae4123a6
sw x3, 0(x2) # store 0x1bd4c27fae4123a6 in memory
flw f6, 0(x2) # load 0x1bd4c27fae4123a6 from memory into f6
li x3, 0x678dec9c664da9c2 # load x3 with value 0x678dec9c664da9c2
sw x3, 0(x2) # store 0x678dec9c664da9c2 in memory
flw f13, 0(x2) # load 0x678dec9c664da9c2 from memory into f13
li x3, 0xf8475ed1c2b723fe # load x3 with value 0xf8475ed1c2b723fe
sw x3, 0(x2) # store 0xf8475ed1c2b723fe in memory
flw f20, 0(x2) # load 0xf8475ed1c2b723fe from memory into f20
fmsub.s f13, f6, f13, f20 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f14)
li x14, 0x710dde61a3d1c409 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x405e2dc63e8d05c9 # load x3 with value 0x405e2dc63e8d05c9
sw x3, 0(x2) # store 0x405e2dc63e8d05c9 in memory
flw f25, 0(x2) # load 0x405e2dc63e8d05c9 from memory into f25
li x3, 0xdba1c3ecc54ffe3 # load x3 with value 0xdba1c3ecc54ffe3
sw x3, 0(x2) # store 0xdba1c3ecc54ffe3 in memory
flw f14, 0(x2) # load 0xdba1c3ecc54ffe3 from memory into f14
li x3, 0xa7562e1d99059655 # load x3 with value 0xa7562e1d99059655
sw x3, 0(x2) # store 0xa7562e1d99059655 in memory
flw f17, 0(x2) # load 0xa7562e1d99059655 from memory into f17
fmsub.s f14, f25, f14, f17 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f15)
li x15, 0x3edf37d4e1b8d33e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xcc8f1a940ce36c36 # load x3 with value 0xcc8f1a940ce36c36
sw x3, 0(x2) # store 0xcc8f1a940ce36c36 in memory
flw f27, 0(x2) # load 0xcc8f1a940ce36c36 from memory into f27
li x3, 0xbe241a5178c3a6bd # load x3 with value 0xbe241a5178c3a6bd
sw x3, 0(x2) # store 0xbe241a5178c3a6bd in memory
flw f15, 0(x2) # load 0xbe241a5178c3a6bd from memory into f15
li x3, 0xe071e65677891ba1 # load x3 with value 0xe071e65677891ba1
sw x3, 0(x2) # store 0xe071e65677891ba1 in memory
flw f22, 0(x2) # load 0xe071e65677891ba1 from memory into f22
fmsub.s f15, f27, f15, f22 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f16)
li x16, 0x5172ba35e43b78e7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xe17c4c62817176b # load x3 with value 0xe17c4c62817176b
sw x3, 0(x2) # store 0xe17c4c62817176b in memory
flw f25, 0(x2) # load 0xe17c4c62817176b from memory into f25
li x3, 0x26a213b1150089fc # load x3 with value 0x26a213b1150089fc
sw x3, 0(x2) # store 0x26a213b1150089fc in memory
flw f16, 0(x2) # load 0x26a213b1150089fc from memory into f16
li x3, 0x6f7a5ae2f45e4067 # load x3 with value 0x6f7a5ae2f45e4067
sw x3, 0(x2) # store 0x6f7a5ae2f45e4067 in memory
flw f2, 0(x2) # load 0x6f7a5ae2f45e4067 from memory into f2
fmsub.s f16, f25, f16, f2 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f17)
li x17, 0x4281038e62b51977 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa5e27ef1b113d128 # load x3 with value 0xa5e27ef1b113d128
sw x3, 0(x2) # store 0xa5e27ef1b113d128 in memory
flw f19, 0(x2) # load 0xa5e27ef1b113d128 from memory into f19
li x3, 0x6d7bcd8e3399fcd8 # load x3 with value 0x6d7bcd8e3399fcd8
sw x3, 0(x2) # store 0x6d7bcd8e3399fcd8 in memory
flw f17, 0(x2) # load 0x6d7bcd8e3399fcd8 from memory into f17
li x3, 0x10e4d5fcd3625017 # load x3 with value 0x10e4d5fcd3625017
sw x3, 0(x2) # store 0x10e4d5fcd3625017 in memory
flw f28, 0(x2) # load 0x10e4d5fcd3625017 from memory into f28
fmsub.s f17, f19, f17, f28 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f18)
li x18, 0x5b1ace6665b176b3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x4a043489d7a55583 # load x3 with value 0x4a043489d7a55583
sw x3, 0(x2) # store 0x4a043489d7a55583 in memory
flw f30, 0(x2) # load 0x4a043489d7a55583 from memory into f30
li x3, 0x65ffe6b6bb3a977f # load x3 with value 0x65ffe6b6bb3a977f
sw x3, 0(x2) # store 0x65ffe6b6bb3a977f in memory
flw f18, 0(x2) # load 0x65ffe6b6bb3a977f from memory into f18
li x3, 0x8b73c770f699a512 # load x3 with value 0x8b73c770f699a512
sw x3, 0(x2) # store 0x8b73c770f699a512 in memory
flw f3, 0(x2) # load 0x8b73c770f699a512 from memory into f3
fmsub.s f18, f30, f18, f3 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f19)
li x19, 0xeefe8863ba968e98 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x6d5cb694d7ad19ca # load x3 with value 0x6d5cb694d7ad19ca
sw x3, 0(x2) # store 0x6d5cb694d7ad19ca in memory
flw f23, 0(x2) # load 0x6d5cb694d7ad19ca from memory into f23
li x3, 0xc8d12ca46ab6943f # load x3 with value 0xc8d12ca46ab6943f
sw x3, 0(x2) # store 0xc8d12ca46ab6943f in memory
flw f19, 0(x2) # load 0xc8d12ca46ab6943f from memory into f19
li x3, 0xb81c3466e3980d4f # load x3 with value 0xb81c3466e3980d4f
sw x3, 0(x2) # store 0xb81c3466e3980d4f in memory
flw f17, 0(x2) # load 0xb81c3466e3980d4f from memory into f17
fmsub.s f19, f23, f19, f17 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f20)
li x20, 0x4562321912697167 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x1efde8e31c28014f # load x3 with value 0x1efde8e31c28014f
sw x3, 0(x2) # store 0x1efde8e31c28014f in memory
flw f9, 0(x2) # load 0x1efde8e31c28014f from memory into f9
li x3, 0xefb0b7fbb02abf7c # load x3 with value 0xefb0b7fbb02abf7c
sw x3, 0(x2) # store 0xefb0b7fbb02abf7c in memory
flw f20, 0(x2) # load 0xefb0b7fbb02abf7c from memory into f20
li x3, 0x3e475e382c341cc4 # load x3 with value 0x3e475e382c341cc4
sw x3, 0(x2) # store 0x3e475e382c341cc4 in memory
flw f12, 0(x2) # load 0x3e475e382c341cc4 from memory into f12
fmsub.s f20, f9, f20, f12 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f21)
li x21, 0x75e51c7c2e17b9ea # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc1e0a3da6c5b441 # load x3 with value 0xc1e0a3da6c5b441
sw x3, 0(x2) # store 0xc1e0a3da6c5b441 in memory
flw f9, 0(x2) # load 0xc1e0a3da6c5b441 from memory into f9
li x3, 0xf4a953772b9e795c # load x3 with value 0xf4a953772b9e795c
sw x3, 0(x2) # store 0xf4a953772b9e795c in memory
flw f21, 0(x2) # load 0xf4a953772b9e795c from memory into f21
li x3, 0xa73ed1bb8679a6a3 # load x3 with value 0xa73ed1bb8679a6a3
sw x3, 0(x2) # store 0xa73ed1bb8679a6a3 in memory
flw f3, 0(x2) # load 0xa73ed1bb8679a6a3 from memory into f3
fmsub.s f21, f9, f21, f3 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f22)
li x22, 0xf6cea2f6c0cacb1c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x17db2600082b316e # load x3 with value 0x17db2600082b316e
sw x3, 0(x2) # store 0x17db2600082b316e in memory
flw f4, 0(x2) # load 0x17db2600082b316e from memory into f4
li x3, 0x370da939057cd72 # load x3 with value 0x370da939057cd72
sw x3, 0(x2) # store 0x370da939057cd72 in memory
flw f22, 0(x2) # load 0x370da939057cd72 from memory into f22
li x3, 0xe8b02b82915bfdb7 # load x3 with value 0xe8b02b82915bfdb7
sw x3, 0(x2) # store 0xe8b02b82915bfdb7 in memory
flw f8, 0(x2) # load 0xe8b02b82915bfdb7 from memory into f8
fmsub.s f22, f4, f22, f8 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f23)
li x23, 0x44effb2a7e8b66a1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x2f32433f66abcf62 # load x3 with value 0x2f32433f66abcf62
sw x3, 0(x2) # store 0x2f32433f66abcf62 in memory
flw f4, 0(x2) # load 0x2f32433f66abcf62 from memory into f4
li x3, 0x3832b980f17dd73a # load x3 with value 0x3832b980f17dd73a
sw x3, 0(x2) # store 0x3832b980f17dd73a in memory
flw f23, 0(x2) # load 0x3832b980f17dd73a from memory into f23
li x3, 0x626f446f6ff6f323 # load x3 with value 0x626f446f6ff6f323
sw x3, 0(x2) # store 0x626f446f6ff6f323 in memory
flw f1, 0(x2) # load 0x626f446f6ff6f323 from memory into f1
fmsub.s f23, f4, f23, f1 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f24)
li x24, 0xeafc4568ab93b9c4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3eacb74f29c0ca34 # load x3 with value 0x3eacb74f29c0ca34
sw x3, 0(x2) # store 0x3eacb74f29c0ca34 in memory
flw f24, 0(x2) # load 0x3eacb74f29c0ca34 from memory into f24
li x3, 0x51e4b5c3de151819 # load x3 with value 0x51e4b5c3de151819
sw x3, 0(x2) # store 0x51e4b5c3de151819 in memory
flw f24, 0(x2) # load 0x51e4b5c3de151819 from memory into f24
li x3, 0xcdaef54534f5a773 # load x3 with value 0xcdaef54534f5a773
sw x3, 0(x2) # store 0xcdaef54534f5a773 in memory
flw f11, 0(x2) # load 0xcdaef54534f5a773 from memory into f11
fmsub.s f24, f24, f24, f11 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f25)
li x25, 0x29773699e9c5a1d6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x31a6573ecac89881 # load x3 with value 0x31a6573ecac89881
sw x3, 0(x2) # store 0x31a6573ecac89881 in memory
flw f14, 0(x2) # load 0x31a6573ecac89881 from memory into f14
li x3, 0xd5860414c494d3d4 # load x3 with value 0xd5860414c494d3d4
sw x3, 0(x2) # store 0xd5860414c494d3d4 in memory
flw f25, 0(x2) # load 0xd5860414c494d3d4 from memory into f25
li x3, 0x1f9852f5cb8fae95 # load x3 with value 0x1f9852f5cb8fae95
sw x3, 0(x2) # store 0x1f9852f5cb8fae95 in memory
flw f25, 0(x2) # load 0x1f9852f5cb8fae95 from memory into f25
fmsub.s f25, f14, f25, f25 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f26)
li x26, 0xb8343a1fa41b1465 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x4c690104838baed3 # load x3 with value 0x4c690104838baed3
sw x3, 0(x2) # store 0x4c690104838baed3 in memory
flw f13, 0(x2) # load 0x4c690104838baed3 from memory into f13
li x3, 0x1c38154b254ef6fb # load x3 with value 0x1c38154b254ef6fb
sw x3, 0(x2) # store 0x1c38154b254ef6fb in memory
flw f26, 0(x2) # load 0x1c38154b254ef6fb from memory into f26
li x3, 0xba05046396cf75f8 # load x3 with value 0xba05046396cf75f8
sw x3, 0(x2) # store 0xba05046396cf75f8 in memory
flw f26, 0(x2) # load 0xba05046396cf75f8 from memory into f26
fmsub.s f26, f13, f26, f26 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f27)
li x27, 0xc04642443a16c724 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xe5a7835a395938e7 # load x3 with value 0xe5a7835a395938e7
sw x3, 0(x2) # store 0xe5a7835a395938e7 in memory
flw f18, 0(x2) # load 0xe5a7835a395938e7 from memory into f18
li x3, 0x3b05eb6abbe6af43 # load x3 with value 0x3b05eb6abbe6af43
sw x3, 0(x2) # store 0x3b05eb6abbe6af43 in memory
flw f27, 0(x2) # load 0x3b05eb6abbe6af43 from memory into f27
li x3, 0x81b88c1eb22e671 # load x3 with value 0x81b88c1eb22e671
sw x3, 0(x2) # store 0x81b88c1eb22e671 in memory
flw f27, 0(x2) # load 0x81b88c1eb22e671 from memory into f27
fmsub.s f27, f18, f27, f27 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f28)
li x28, 0xcf85a41e13085bdb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x177a54bfebcba346 # load x3 with value 0x177a54bfebcba346
sw x3, 0(x2) # store 0x177a54bfebcba346 in memory
flw f31, 0(x2) # load 0x177a54bfebcba346 from memory into f31
li x3, 0x1a5b4b13369a5bc2 # load x3 with value 0x1a5b4b13369a5bc2
sw x3, 0(x2) # store 0x1a5b4b13369a5bc2 in memory
flw f28, 0(x2) # load 0x1a5b4b13369a5bc2 from memory into f28
li x3, 0xf4d39c2f7398f109 # load x3 with value 0xf4d39c2f7398f109
sw x3, 0(x2) # store 0xf4d39c2f7398f109 in memory
flw f18, 0(x2) # load 0xf4d39c2f7398f109 from memory into f18
fmsub.s f28, f31, f28, f18 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f29)
li x29, 0xa593d5f02c685422 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7af18be54245bd29 # load x3 with value 0x7af18be54245bd29
sw x3, 0(x2) # store 0x7af18be54245bd29 in memory
flw f24, 0(x2) # load 0x7af18be54245bd29 from memory into f24
li x3, 0x7d6ad98f29fca197 # load x3 with value 0x7d6ad98f29fca197
sw x3, 0(x2) # store 0x7d6ad98f29fca197 in memory
flw f29, 0(x2) # load 0x7d6ad98f29fca197 from memory into f29
li x3, 0x7e2f5edbb63c525d # load x3 with value 0x7e2f5edbb63c525d
sw x3, 0(x2) # store 0x7e2f5edbb63c525d in memory
flw f8, 0(x2) # load 0x7e2f5edbb63c525d from memory into f8
fmsub.s f29, f24, f29, f8 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f30)
li x30, 0x3ac06d33a991a5be # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x1297bc2ae3a61b8a # load x3 with value 0x1297bc2ae3a61b8a
sw x3, 0(x2) # store 0x1297bc2ae3a61b8a in memory
flw f13, 0(x2) # load 0x1297bc2ae3a61b8a from memory into f13
li x3, 0xa1adf5caae5b93e8 # load x3 with value 0xa1adf5caae5b93e8
sw x3, 0(x2) # store 0xa1adf5caae5b93e8 in memory
flw f30, 0(x2) # load 0xa1adf5caae5b93e8 from memory into f30
li x3, 0xb09818ac0d0be77a # load x3 with value 0xb09818ac0d0be77a
sw x3, 0(x2) # store 0xb09818ac0d0be77a in memory
flw f9, 0(x2) # load 0xb09818ac0d0be77a from memory into f9
fmsub.s f30, f13, f30, f9 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f31)
li x31, 0xb0e56008787bd584 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc35684f91104155 # load x3 with value 0xc35684f91104155
sw x3, 0(x2) # store 0xc35684f91104155 in memory
flw f1, 0(x2) # load 0xc35684f91104155 from memory into f1
li x3, 0xcff42c8922343858 # load x3 with value 0xcff42c8922343858
sw x3, 0(x2) # store 0xcff42c8922343858 in memory
flw f31, 0(x2) # load 0xcff42c8922343858 from memory into f31
li x3, 0x3075791cfe76437e # load x3 with value 0x3075791cfe76437e
sw x3, 0(x2) # store 0x3075791cfe76437e in memory
flw f12, 0(x2) # load 0x3075791cfe76437e from memory into f12
fmsub.s f31, f1, f31, f12 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x0)
li x1, 0x3cd917a9ab58ae87 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f29, 0(x2) # load 0x00000000 from memory into f29
li x3, 0xe46bf1f70e456570 # load x3 with value 0xe46bf1f70e456570
sw x3, 0(x2) # store 0xe46bf1f70e456570 in memory
flw f19, 0(x2) # load 0xe46bf1f70e456570 from memory into f19
li x3, 0x4b5abd48e7db476d # load x3 with value 0x4b5abd48e7db476d
sw x3, 0(x2) # store 0x4b5abd48e7db476d in memory
flw f2, 0(x2) # load 0x4b5abd48e7db476d from memory into f2
fmsub.s f1, f29, f19, f2 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x80000000)
li x14, 0x90790af8146d0957 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f5, 0(x2) # load 0x80000000 from memory into f5
li x3, 0x17f73c35be1ea125 # load x3 with value 0x17f73c35be1ea125
sw x3, 0(x2) # store 0x17f73c35be1ea125 in memory
flw f6, 0(x2) # load 0x17f73c35be1ea125 from memory into f6
li x3, 0xaa3fe01588d44c82 # load x3 with value 0xaa3fe01588d44c82
sw x3, 0(x2) # store 0xaa3fe01588d44c82 in memory
flw f23, 0(x2) # load 0xaa3fe01588d44c82 from memory into f23
fmsub.s f14, f5, f6, f23 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x3f800000)
li x6, 0x088720fc0169f17d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f24, 0(x2) # load 0x3f800000 from memory into f24
li x3, 0x24ee4758a351b658 # load x3 with value 0x24ee4758a351b658
sw x3, 0(x2) # store 0x24ee4758a351b658 in memory
flw f8, 0(x2) # load 0x24ee4758a351b658 from memory into f8
li x3, 0xb2362ca6ddf70555 # load x3 with value 0xb2362ca6ddf70555
sw x3, 0(x2) # store 0xb2362ca6ddf70555 in memory
flw f19, 0(x2) # load 0xb2362ca6ddf70555 from memory into f19
fmsub.s f6, f24, f8, f19 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0xbf800000)
li x14, 0x3f3f2a17868adad4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f11, 0(x2) # load 0xbf800000 from memory into f11
li x3, 0xcae6edf32bd3e6ac # load x3 with value 0xcae6edf32bd3e6ac
sw x3, 0(x2) # store 0xcae6edf32bd3e6ac in memory
flw f7, 0(x2) # load 0xcae6edf32bd3e6ac from memory into f7
li x3, 0xba0aa4600ee4b5e2 # load x3 with value 0xba0aa4600ee4b5e2
sw x3, 0(x2) # store 0xba0aa4600ee4b5e2 in memory
flw f30, 0(x2) # load 0xba0aa4600ee4b5e2 from memory into f30
fmsub.s f14, f11, f7, f30 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x3fc00000)
li x5, 0x0582698fa424a49d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f27, 0(x2) # load 0x3fc00000 from memory into f27
li x3, 0xc419ec624c60f02 # load x3 with value 0xc419ec624c60f02
sw x3, 0(x2) # store 0xc419ec624c60f02 in memory
flw f20, 0(x2) # load 0xc419ec624c60f02 from memory into f20
li x3, 0xfd020cb2ffccf2b9 # load x3 with value 0xfd020cb2ffccf2b9
sw x3, 0(x2) # store 0xfd020cb2ffccf2b9 in memory
flw f15, 0(x2) # load 0xfd020cb2ffccf2b9 from memory into f15
fmsub.s f5, f27, f20, f15 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0xbfc00000)
li x19, 0xbdf4b0eaacaeb124 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f26, 0(x2) # load 0xbfc00000 from memory into f26
li x3, 0xf81b14ae9d024c0a # load x3 with value 0xf81b14ae9d024c0a
sw x3, 0(x2) # store 0xf81b14ae9d024c0a in memory
flw f4, 0(x2) # load 0xf81b14ae9d024c0a from memory into f4
li x3, 0x1e26f0e68745282f # load x3 with value 0x1e26f0e68745282f
sw x3, 0(x2) # store 0x1e26f0e68745282f in memory
flw f22, 0(x2) # load 0x1e26f0e68745282f from memory into f22
fmsub.s f19, f26, f4, f22 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x40000000)
li x5, 0x00eaa10b23c1b34a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f18, 0(x2) # load 0x40000000 from memory into f18
li x3, 0x32991b402d3c9f7a # load x3 with value 0x32991b402d3c9f7a
sw x3, 0(x2) # store 0x32991b402d3c9f7a in memory
flw f30, 0(x2) # load 0x32991b402d3c9f7a from memory into f30
li x3, 0xb178ded72e67520 # load x3 with value 0xb178ded72e67520
sw x3, 0(x2) # store 0xb178ded72e67520 in memory
flw f13, 0(x2) # load 0xb178ded72e67520 from memory into f13
fmsub.s f5, f18, f30, f13 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0xc0000000)
li x7, 0xd681c3a73b146d3b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f25, 0(x2) # load 0xc0000000 from memory into f25
li x3, 0x4ac3a2052486baa # load x3 with value 0x4ac3a2052486baa
sw x3, 0(x2) # store 0x4ac3a2052486baa in memory
flw f24, 0(x2) # load 0x4ac3a2052486baa from memory into f24
li x3, 0xd3f82d5fa93b8ae4 # load x3 with value 0xd3f82d5fa93b8ae4
sw x3, 0(x2) # store 0xd3f82d5fa93b8ae4 in memory
flw f5, 0(x2) # load 0xd3f82d5fa93b8ae4 from memory into f5
fmsub.s f7, f25, f24, f5 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x800000)
li x5, 0x21fe13eb9d3c6cdb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f26, 0(x2) # load 0x00800000 from memory into f26
li x3, 0xbebeac72b733233 # load x3 with value 0xbebeac72b733233
sw x3, 0(x2) # store 0xbebeac72b733233 in memory
flw f27, 0(x2) # load 0xbebeac72b733233 from memory into f27
li x3, 0x18fafe3efb7dfe2c # load x3 with value 0x18fafe3efb7dfe2c
sw x3, 0(x2) # store 0x18fafe3efb7dfe2c in memory
flw f30, 0(x2) # load 0x18fafe3efb7dfe2c from memory into f30
fmsub.s f5, f26, f27, f30 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x80800000)
li x22, 0xad69e0a5bd524202 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f21, 0(x2) # load 0x80800000 from memory into f21
li x3, 0xbe93a44f2dc27dcd # load x3 with value 0xbe93a44f2dc27dcd
sw x3, 0(x2) # store 0xbe93a44f2dc27dcd in memory
flw f9, 0(x2) # load 0xbe93a44f2dc27dcd from memory into f9
li x3, 0x13d96fe782262c3f # load x3 with value 0x13d96fe782262c3f
sw x3, 0(x2) # store 0x13d96fe782262c3f in memory
flw f19, 0(x2) # load 0x13d96fe782262c3f from memory into f19
fmsub.s f22, f21, f9, f19 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x7f7fffff)
li x2, 0xdedd9e84ac30e397 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f17, 0(x2) # load 0x7f7fffff from memory into f17
li x3, 0x2b52dbcb944dfc32 # load x3 with value 0x2b52dbcb944dfc32
sw x3, 0(x2) # store 0x2b52dbcb944dfc32 in memory
flw f5, 0(x2) # load 0x2b52dbcb944dfc32 from memory into f5
li x3, 0xdc3a9ab2848b24ac # load x3 with value 0xdc3a9ab2848b24ac
sw x3, 0(x2) # store 0xdc3a9ab2848b24ac in memory
flw f31, 0(x2) # load 0xdc3a9ab2848b24ac from memory into f31
fmsub.s f2, f17, f5, f31 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0xff7fffff)
li x10, 0x533f51e6c761362f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f9, 0(x2) # load 0xff7fffff from memory into f9
li x3, 0x8aea61706e3296d9 # load x3 with value 0x8aea61706e3296d9
sw x3, 0(x2) # store 0x8aea61706e3296d9 in memory
flw f26, 0(x2) # load 0x8aea61706e3296d9 from memory into f26
li x3, 0xaa18296fcb1b04ba # load x3 with value 0xaa18296fcb1b04ba
sw x3, 0(x2) # store 0xaa18296fcb1b04ba in memory
flw f21, 0(x2) # load 0xaa18296fcb1b04ba from memory into f21
fmsub.s f10, f9, f26, f21 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x7fffff)
li x11, 0x7a581914648de8ef # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f30, 0(x2) # load 0x007fffff from memory into f30
li x3, 0xc2b0a61f4a5139f2 # load x3 with value 0xc2b0a61f4a5139f2
sw x3, 0(x2) # store 0xc2b0a61f4a5139f2 in memory
flw f15, 0(x2) # load 0xc2b0a61f4a5139f2 from memory into f15
li x3, 0x8c38760c494134b4 # load x3 with value 0x8c38760c494134b4
sw x3, 0(x2) # store 0x8c38760c494134b4 in memory
flw f22, 0(x2) # load 0x8c38760c494134b4 from memory into f22
fmsub.s f11, f30, f15, f22 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x807fffff)
li x23, 0x80ebfacb34ab3a4c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f31, 0(x2) # load 0x807fffff from memory into f31
li x3, 0x963225d3aa92ac4e # load x3 with value 0x963225d3aa92ac4e
sw x3, 0(x2) # store 0x963225d3aa92ac4e in memory
flw f28, 0(x2) # load 0x963225d3aa92ac4e from memory into f28
li x3, 0x57db1425e60fc19e # load x3 with value 0x57db1425e60fc19e
sw x3, 0(x2) # store 0x57db1425e60fc19e in memory
flw f10, 0(x2) # load 0x57db1425e60fc19e from memory into f10
fmsub.s f23, f31, f28, f10 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x400000)
li x21, 0x892a0a0e7f198cc2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f7, 0(x2) # load 0x00400000 from memory into f7
li x3, 0x971501b8e3676e9 # load x3 with value 0x971501b8e3676e9
sw x3, 0(x2) # store 0x971501b8e3676e9 in memory
flw f19, 0(x2) # load 0x971501b8e3676e9 from memory into f19
li x3, 0x5d3b29648183986d # load x3 with value 0x5d3b29648183986d
sw x3, 0(x2) # store 0x5d3b29648183986d in memory
flw f4, 0(x2) # load 0x5d3b29648183986d from memory into f4
fmsub.s f21, f7, f19, f4 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x80400000)
li x15, 0xdc2fad045afa7bed # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f13, 0(x2) # load 0x80400000 from memory into f13
li x3, 0xc30999558ce4815c # load x3 with value 0xc30999558ce4815c
sw x3, 0(x2) # store 0xc30999558ce4815c in memory
flw f16, 0(x2) # load 0xc30999558ce4815c from memory into f16
li x3, 0x3ed31e41bdb37d77 # load x3 with value 0x3ed31e41bdb37d77
sw x3, 0(x2) # store 0x3ed31e41bdb37d77 in memory
flw f9, 0(x2) # load 0x3ed31e41bdb37d77 from memory into f9
fmsub.s f15, f13, f16, f9 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x1)
li x22, 0xa36b1673822cf047 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f5, 0(x2) # load 0x00000001 from memory into f5
li x3, 0x5c7554706143eacf # load x3 with value 0x5c7554706143eacf
sw x3, 0(x2) # store 0x5c7554706143eacf in memory
flw f1, 0(x2) # load 0x5c7554706143eacf from memory into f1
li x3, 0xe7fecd51285e63e3 # load x3 with value 0xe7fecd51285e63e3
sw x3, 0(x2) # store 0xe7fecd51285e63e3 in memory
flw f6, 0(x2) # load 0xe7fecd51285e63e3 from memory into f6
fmsub.s f22, f5, f1, f6 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x80000001)
li x9, 0xc9c1d74af9e7f0ab # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f25, 0(x2) # load 0x80000001 from memory into f25
li x3, 0x720a83c36133ec0c # load x3 with value 0x720a83c36133ec0c
sw x3, 0(x2) # store 0x720a83c36133ec0c in memory
flw f1, 0(x2) # load 0x720a83c36133ec0c from memory into f1
li x3, 0x3be51285d96631a6 # load x3 with value 0x3be51285d96631a6
sw x3, 0(x2) # store 0x3be51285d96631a6 in memory
flw f20, 0(x2) # load 0x3be51285d96631a6 from memory into f20
fmsub.s f9, f25, f1, f20 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x7f800000)
li x16, 0xcfb7d4d441ef59c9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f13, 0(x2) # load 0x7f800000 from memory into f13
li x3, 0x4ecf5e033e098d02 # load x3 with value 0x4ecf5e033e098d02
sw x3, 0(x2) # store 0x4ecf5e033e098d02 in memory
flw f9, 0(x2) # load 0x4ecf5e033e098d02 from memory into f9
li x3, 0x497d760e46f757cf # load x3 with value 0x497d760e46f757cf
sw x3, 0(x2) # store 0x497d760e46f757cf in memory
flw f6, 0(x2) # load 0x497d760e46f757cf from memory into f6
fmsub.s f16, f13, f9, f6 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0xff800000)
li x26, 0xdd74d13f715d7cbe # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f28, 0(x2) # load 0xff800000 from memory into f28
li x3, 0x587b3bdb079d74b1 # load x3 with value 0x587b3bdb079d74b1
sw x3, 0(x2) # store 0x587b3bdb079d74b1 in memory
flw f1, 0(x2) # load 0x587b3bdb079d74b1 from memory into f1
li x3, 0x48fcc446af2e8565 # load x3 with value 0x48fcc446af2e8565
sw x3, 0(x2) # store 0x48fcc446af2e8565 in memory
flw f23, 0(x2) # load 0x48fcc446af2e8565 from memory into f23
fmsub.s f26, f28, f1, f23 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x7fc00000)
li x29, 0x197ea38e87deaed9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f21, 0(x2) # load 0x7fc00000 from memory into f21
li x3, 0xe44cdf9c9ede63b5 # load x3 with value 0xe44cdf9c9ede63b5
sw x3, 0(x2) # store 0xe44cdf9c9ede63b5 in memory
flw f20, 0(x2) # load 0xe44cdf9c9ede63b5 from memory into f20
li x3, 0xea10954b2fb89f1a # load x3 with value 0xea10954b2fb89f1a
sw x3, 0(x2) # store 0xea10954b2fb89f1a in memory
flw f19, 0(x2) # load 0xea10954b2fb89f1a from memory into f19
fmsub.s f29, f21, f20, f19 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x7fffffff)
li x9, 0xcaa6a70cc1b58ac0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f16, 0(x2) # load 0x7fffffff from memory into f16
li x3, 0x24f2049f45525cd2 # load x3 with value 0x24f2049f45525cd2
sw x3, 0(x2) # store 0x24f2049f45525cd2 in memory
flw f18, 0(x2) # load 0x24f2049f45525cd2 from memory into f18
li x3, 0x8fd1a3571f6effa0 # load x3 with value 0x8fd1a3571f6effa0
sw x3, 0(x2) # store 0x8fd1a3571f6effa0 in memory
flw f14, 0(x2) # load 0x8fd1a3571f6effa0 from memory into f14
fmsub.s f9, f16, f18, f14 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x7f800001)
li x28, 0x1e880144470c18ad # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f3, 0(x2) # load 0x7f800001 from memory into f3
li x3, 0x5c6011db65173a9b # load x3 with value 0x5c6011db65173a9b
sw x3, 0(x2) # store 0x5c6011db65173a9b in memory
flw f5, 0(x2) # load 0x5c6011db65173a9b from memory into f5
li x3, 0xda17ff656c9dac97 # load x3 with value 0xda17ff656c9dac97
sw x3, 0(x2) # store 0xda17ff656c9dac97 in memory
flw f13, 0(x2) # load 0xda17ff656c9dac97 from memory into f13
fmsub.s f28, f3, f5, f13 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x7fbfffff)
li x27, 0x9c68570d2f4fd248 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f18, 0(x2) # load 0x7fbfffff from memory into f18
li x3, 0x40ab05197960d04e # load x3 with value 0x40ab05197960d04e
sw x3, 0(x2) # store 0x40ab05197960d04e in memory
flw f21, 0(x2) # load 0x40ab05197960d04e from memory into f21
li x3, 0xde44fc3efa334558 # load x3 with value 0xde44fc3efa334558
sw x3, 0(x2) # store 0xde44fc3efa334558 in memory
flw f1, 0(x2) # load 0xde44fc3efa334558 from memory into f1
fmsub.s f27, f18, f21, f1 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x7ef8654f)
li x8, 0xc74902a7a30e897d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f11, 0(x2) # load 0x7ef8654f from memory into f11
li x3, 0xd2f2f1bc7ab7dcfb # load x3 with value 0xd2f2f1bc7ab7dcfb
sw x3, 0(x2) # store 0xd2f2f1bc7ab7dcfb in memory
flw f26, 0(x2) # load 0xd2f2f1bc7ab7dcfb from memory into f26
li x3, 0xddb9af40d527a807 # load x3 with value 0xddb9af40d527a807
sw x3, 0(x2) # store 0xddb9af40d527a807 in memory
flw f20, 0(x2) # load 0xddb9af40d527a807 from memory into f20
fmsub.s f8, f11, f26, f20 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x813d9ab0)
li x15, 0x63dd355c77ceeffd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f18, 0(x2) # load 0x813d9ab0 from memory into f18
li x3, 0x8c14a2eaf18e8c93 # load x3 with value 0x8c14a2eaf18e8c93
sw x3, 0(x2) # store 0x8c14a2eaf18e8c93 in memory
flw f30, 0(x2) # load 0x8c14a2eaf18e8c93 from memory into f30
li x3, 0x4b0247b17a53f583 # load x3 with value 0x4b0247b17a53f583
sw x3, 0(x2) # store 0x4b0247b17a53f583 in memory
flw f23, 0(x2) # load 0x4b0247b17a53f583 from memory into f23
fmsub.s f15, f18, f30, f23 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x0)
li x8, 0x5f104c00ab1c4d4a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xb59838b8522b5cab # load x3 with value 0xb59838b8522b5cab
sw x3, 0(x2) # store 0xb59838b8522b5cab in memory
flw f5, 0(x2) # load 0xb59838b8522b5cab from memory into f5
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f29, 0(x2) # load 0x00000000 from memory into f29
li x3, 0x849c536b9fb98f88 # load x3 with value 0x849c536b9fb98f88
sw x3, 0(x2) # store 0x849c536b9fb98f88 in memory
flw f31, 0(x2) # load 0x849c536b9fb98f88 from memory into f31
fmsub.s f8, f5, f29, f31 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x80000000)
li x27, 0x661a3375df0b8331 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7a6edf252b1032b8 # load x3 with value 0x7a6edf252b1032b8
sw x3, 0(x2) # store 0x7a6edf252b1032b8 in memory
flw f19, 0(x2) # load 0x7a6edf252b1032b8 from memory into f19
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f10, 0(x2) # load 0x80000000 from memory into f10
li x3, 0x52a0edfd8541010c # load x3 with value 0x52a0edfd8541010c
sw x3, 0(x2) # store 0x52a0edfd8541010c in memory
flw f26, 0(x2) # load 0x52a0edfd8541010c from memory into f26
fmsub.s f27, f19, f10, f26 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x3f800000)
li x4, 0x7429ba5a346ac661 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xb3939ce06afe2b13 # load x3 with value 0xb3939ce06afe2b13
sw x3, 0(x2) # store 0xb3939ce06afe2b13 in memory
flw f18, 0(x2) # load 0xb3939ce06afe2b13 from memory into f18
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f19, 0(x2) # load 0x3f800000 from memory into f19
li x3, 0xe9d5123de15b37e0 # load x3 with value 0xe9d5123de15b37e0
sw x3, 0(x2) # store 0xe9d5123de15b37e0 in memory
flw f15, 0(x2) # load 0xe9d5123de15b37e0 from memory into f15
fmsub.s f4, f18, f19, f15 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0xbf800000)
li x18, 0xb5da0275dbce741a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x4064e5d37dea93e6 # load x3 with value 0x4064e5d37dea93e6
sw x3, 0(x2) # store 0x4064e5d37dea93e6 in memory
flw f26, 0(x2) # load 0x4064e5d37dea93e6 from memory into f26
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f24, 0(x2) # load 0xbf800000 from memory into f24
li x3, 0x21ce7ed294499d04 # load x3 with value 0x21ce7ed294499d04
sw x3, 0(x2) # store 0x21ce7ed294499d04 in memory
flw f23, 0(x2) # load 0x21ce7ed294499d04 from memory into f23
fmsub.s f18, f26, f24, f23 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x3fc00000)
li x26, 0xc505b6d470a7126e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x6c365f77223f5104 # load x3 with value 0x6c365f77223f5104
sw x3, 0(x2) # store 0x6c365f77223f5104 in memory
flw f27, 0(x2) # load 0x6c365f77223f5104 from memory into f27
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f2, 0(x2) # load 0x3fc00000 from memory into f2
li x3, 0x66f2c19ac0e5d6ac # load x3 with value 0x66f2c19ac0e5d6ac
sw x3, 0(x2) # store 0x66f2c19ac0e5d6ac in memory
flw f25, 0(x2) # load 0x66f2c19ac0e5d6ac from memory into f25
fmsub.s f26, f27, f2, f25 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0xbfc00000)
li x31, 0xf12f273be37a089e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xdd1786511037c335 # load x3 with value 0xdd1786511037c335
sw x3, 0(x2) # store 0xdd1786511037c335 in memory
flw f22, 0(x2) # load 0xdd1786511037c335 from memory into f22
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f28, 0(x2) # load 0xbfc00000 from memory into f28
li x3, 0x33a23e6a07c9807b # load x3 with value 0x33a23e6a07c9807b
sw x3, 0(x2) # store 0x33a23e6a07c9807b in memory
flw f26, 0(x2) # load 0x33a23e6a07c9807b from memory into f26
fmsub.s f31, f22, f28, f26 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x40000000)
li x16, 0x11f07ff0b8796e1f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x2cecf82bcf08e5b3 # load x3 with value 0x2cecf82bcf08e5b3
sw x3, 0(x2) # store 0x2cecf82bcf08e5b3 in memory
flw f13, 0(x2) # load 0x2cecf82bcf08e5b3 from memory into f13
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f25, 0(x2) # load 0x40000000 from memory into f25
li x3, 0xdf54fca72d53f912 # load x3 with value 0xdf54fca72d53f912
sw x3, 0(x2) # store 0xdf54fca72d53f912 in memory
flw f8, 0(x2) # load 0xdf54fca72d53f912 from memory into f8
fmsub.s f16, f13, f25, f8 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0xc0000000)
li x10, 0xe7419e800df0ac58 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x98d34e863fb8a0b3 # load x3 with value 0x98d34e863fb8a0b3
sw x3, 0(x2) # store 0x98d34e863fb8a0b3 in memory
flw f18, 0(x2) # load 0x98d34e863fb8a0b3 from memory into f18
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f13, 0(x2) # load 0xc0000000 from memory into f13
li x3, 0xb11e2a1d63694de # load x3 with value 0xb11e2a1d63694de
sw x3, 0(x2) # store 0xb11e2a1d63694de in memory
flw f9, 0(x2) # load 0xb11e2a1d63694de from memory into f9
fmsub.s f10, f18, f13, f9 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x800000)
li x30, 0x8ead94a2eb65c724 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xf8a1aaef0d6f7cee # load x3 with value 0xf8a1aaef0d6f7cee
sw x3, 0(x2) # store 0xf8a1aaef0d6f7cee in memory
flw f19, 0(x2) # load 0xf8a1aaef0d6f7cee from memory into f19
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f13, 0(x2) # load 0x00800000 from memory into f13
li x3, 0xc6d620a5cb153b05 # load x3 with value 0xc6d620a5cb153b05
sw x3, 0(x2) # store 0xc6d620a5cb153b05 in memory
flw f24, 0(x2) # load 0xc6d620a5cb153b05 from memory into f24
fmsub.s f30, f19, f13, f24 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x80800000)
li x24, 0xc83b4a30b678bb42 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x2c32541f927c0940 # load x3 with value 0x2c32541f927c0940
sw x3, 0(x2) # store 0x2c32541f927c0940 in memory
flw f6, 0(x2) # load 0x2c32541f927c0940 from memory into f6
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f2, 0(x2) # load 0x80800000 from memory into f2
li x3, 0x70f27d09d2f6c6a # load x3 with value 0x70f27d09d2f6c6a
sw x3, 0(x2) # store 0x70f27d09d2f6c6a in memory
flw f4, 0(x2) # load 0x70f27d09d2f6c6a from memory into f4
fmsub.s f24, f6, f2, f4 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x7f7fffff)
li x15, 0x8c720dae60ba1465 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x81817b14a1a72e9 # load x3 with value 0x81817b14a1a72e9
sw x3, 0(x2) # store 0x81817b14a1a72e9 in memory
flw f24, 0(x2) # load 0x81817b14a1a72e9 from memory into f24
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f12, 0(x2) # load 0x7f7fffff from memory into f12
li x3, 0x46451a9669d10da7 # load x3 with value 0x46451a9669d10da7
sw x3, 0(x2) # store 0x46451a9669d10da7 in memory
flw f22, 0(x2) # load 0x46451a9669d10da7 from memory into f22
fmsub.s f15, f24, f12, f22 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0xff7fffff)
li x7, 0x4aa462f3f42a9324 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x42f5f907d032ea7a # load x3 with value 0x42f5f907d032ea7a
sw x3, 0(x2) # store 0x42f5f907d032ea7a in memory
flw f31, 0(x2) # load 0x42f5f907d032ea7a from memory into f31
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f30, 0(x2) # load 0xff7fffff from memory into f30
li x3, 0x7c8299032ded9413 # load x3 with value 0x7c8299032ded9413
sw x3, 0(x2) # store 0x7c8299032ded9413 in memory
flw f8, 0(x2) # load 0x7c8299032ded9413 from memory into f8
fmsub.s f7, f31, f30, f8 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x7fffff)
li x31, 0x2ada19b0abc9514a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x5312cc186ca6361d # load x3 with value 0x5312cc186ca6361d
sw x3, 0(x2) # store 0x5312cc186ca6361d in memory
flw f7, 0(x2) # load 0x5312cc186ca6361d from memory into f7
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f21, 0(x2) # load 0x007fffff from memory into f21
li x3, 0x59180afd192d46ee # load x3 with value 0x59180afd192d46ee
sw x3, 0(x2) # store 0x59180afd192d46ee in memory
flw f12, 0(x2) # load 0x59180afd192d46ee from memory into f12
fmsub.s f31, f7, f21, f12 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x807fffff)
li x23, 0x32f9ebe915efb8bc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc776e5af6ddcb429 # load x3 with value 0xc776e5af6ddcb429
sw x3, 0(x2) # store 0xc776e5af6ddcb429 in memory
flw f21, 0(x2) # load 0xc776e5af6ddcb429 from memory into f21
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f9, 0(x2) # load 0x807fffff from memory into f9
li x3, 0x9431aa2e7679a3d2 # load x3 with value 0x9431aa2e7679a3d2
sw x3, 0(x2) # store 0x9431aa2e7679a3d2 in memory
flw f24, 0(x2) # load 0x9431aa2e7679a3d2 from memory into f24
fmsub.s f23, f21, f9, f24 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x400000)
li x10, 0xe972bb758dd2737d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x1918affd9f2a5ee9 # load x3 with value 0x1918affd9f2a5ee9
sw x3, 0(x2) # store 0x1918affd9f2a5ee9 in memory
flw f1, 0(x2) # load 0x1918affd9f2a5ee9 from memory into f1
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f19, 0(x2) # load 0x00400000 from memory into f19
li x3, 0x878d1a0ad29f22c2 # load x3 with value 0x878d1a0ad29f22c2
sw x3, 0(x2) # store 0x878d1a0ad29f22c2 in memory
flw f17, 0(x2) # load 0x878d1a0ad29f22c2 from memory into f17
fmsub.s f10, f1, f19, f17 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x80400000)
li x21, 0xabe02ce117be60b4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xe1d58d84635666af # load x3 with value 0xe1d58d84635666af
sw x3, 0(x2) # store 0xe1d58d84635666af in memory
flw f17, 0(x2) # load 0xe1d58d84635666af from memory into f17
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f24, 0(x2) # load 0x80400000 from memory into f24
li x3, 0x6e2d160dde05fd59 # load x3 with value 0x6e2d160dde05fd59
sw x3, 0(x2) # store 0x6e2d160dde05fd59 in memory
flw f22, 0(x2) # load 0x6e2d160dde05fd59 from memory into f22
fmsub.s f21, f17, f24, f22 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x1)
li x4, 0xb85d605e084a58c1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x45fc535be9c6984f # load x3 with value 0x45fc535be9c6984f
sw x3, 0(x2) # store 0x45fc535be9c6984f in memory
flw f24, 0(x2) # load 0x45fc535be9c6984f from memory into f24
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f30, 0(x2) # load 0x00000001 from memory into f30
li x3, 0x7649c31885515978 # load x3 with value 0x7649c31885515978
sw x3, 0(x2) # store 0x7649c31885515978 in memory
flw f31, 0(x2) # load 0x7649c31885515978 from memory into f31
fmsub.s f4, f24, f30, f31 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x80000001)
li x5, 0xdf933f859f907fa3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc6e1fbd16562f506 # load x3 with value 0xc6e1fbd16562f506
sw x3, 0(x2) # store 0xc6e1fbd16562f506 in memory
flw f19, 0(x2) # load 0xc6e1fbd16562f506 from memory into f19
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f17, 0(x2) # load 0x80000001 from memory into f17
li x3, 0x731bfe002a5930b5 # load x3 with value 0x731bfe002a5930b5
sw x3, 0(x2) # store 0x731bfe002a5930b5 in memory
flw f13, 0(x2) # load 0x731bfe002a5930b5 from memory into f13
fmsub.s f5, f19, f17, f13 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x7f800000)
li x22, 0x5a028026e95da874 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x882b15a501483d69 # load x3 with value 0x882b15a501483d69
sw x3, 0(x2) # store 0x882b15a501483d69 in memory
flw f9, 0(x2) # load 0x882b15a501483d69 from memory into f9
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f12, 0(x2) # load 0x7f800000 from memory into f12
li x3, 0x1674cfb060f10006 # load x3 with value 0x1674cfb060f10006
sw x3, 0(x2) # store 0x1674cfb060f10006 in memory
flw f24, 0(x2) # load 0x1674cfb060f10006 from memory into f24
fmsub.s f22, f9, f12, f24 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0xff800000)
li x17, 0xfb0b50695ca0765e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xef94400e2cdd4459 # load x3 with value 0xef94400e2cdd4459
sw x3, 0(x2) # store 0xef94400e2cdd4459 in memory
flw f21, 0(x2) # load 0xef94400e2cdd4459 from memory into f21
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f18, 0(x2) # load 0xff800000 from memory into f18
li x3, 0xe7bb09245572e528 # load x3 with value 0xe7bb09245572e528
sw x3, 0(x2) # store 0xe7bb09245572e528 in memory
flw f30, 0(x2) # load 0xe7bb09245572e528 from memory into f30
fmsub.s f17, f21, f18, f30 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x7fc00000)
li x31, 0x7812b63bf6f4e0ea # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xe0df0a15bba540a2 # load x3 with value 0xe0df0a15bba540a2
sw x3, 0(x2) # store 0xe0df0a15bba540a2 in memory
flw f19, 0(x2) # load 0xe0df0a15bba540a2 from memory into f19
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f18, 0(x2) # load 0x7fc00000 from memory into f18
li x3, 0x2efcebda7500f11e # load x3 with value 0x2efcebda7500f11e
sw x3, 0(x2) # store 0x2efcebda7500f11e in memory
flw f10, 0(x2) # load 0x2efcebda7500f11e from memory into f10
fmsub.s f31, f19, f18, f10 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x7fffffff)
li x29, 0x9abb6bb0111b59e6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xf973968e6fdd4fdb # load x3 with value 0xf973968e6fdd4fdb
sw x3, 0(x2) # store 0xf973968e6fdd4fdb in memory
flw f31, 0(x2) # load 0xf973968e6fdd4fdb from memory into f31
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f19, 0(x2) # load 0x7fffffff from memory into f19
li x3, 0x27261c74187606 # load x3 with value 0x27261c74187606
sw x3, 0(x2) # store 0x27261c74187606 in memory
flw f2, 0(x2) # load 0x27261c74187606 from memory into f2
fmsub.s f29, f31, f19, f2 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x7f800001)
li x23, 0xbb9ffe2cf6e40c7d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x4f7bbd66399a70b6 # load x3 with value 0x4f7bbd66399a70b6
sw x3, 0(x2) # store 0x4f7bbd66399a70b6 in memory
flw f7, 0(x2) # load 0x4f7bbd66399a70b6 from memory into f7
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f15, 0(x2) # load 0x7f800001 from memory into f15
li x3, 0xafe57a0d42343189 # load x3 with value 0xafe57a0d42343189
sw x3, 0(x2) # store 0xafe57a0d42343189 in memory
flw f22, 0(x2) # load 0xafe57a0d42343189 from memory into f22
fmsub.s f23, f7, f15, f22 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x7fbfffff)
li x16, 0x72bf999acf5aaab0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf565579108161bf # load x3 with value 0xbf565579108161bf
sw x3, 0(x2) # store 0xbf565579108161bf in memory
flw f5, 0(x2) # load 0xbf565579108161bf from memory into f5
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f2, 0(x2) # load 0x7fbfffff from memory into f2
li x3, 0xa7435c9494b9b7ea # load x3 with value 0xa7435c9494b9b7ea
sw x3, 0(x2) # store 0xa7435c9494b9b7ea in memory
flw f22, 0(x2) # load 0xa7435c9494b9b7ea from memory into f22
fmsub.s f16, f5, f2, f22 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x7ef8654f)
li x18, 0x56a9e46ea43fab4f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xd7a1c08103f4a4db # load x3 with value 0xd7a1c08103f4a4db
sw x3, 0(x2) # store 0xd7a1c08103f4a4db in memory
flw f27, 0(x2) # load 0xd7a1c08103f4a4db from memory into f27
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f11, 0(x2) # load 0x7ef8654f from memory into f11
li x3, 0xe9498d5e2dad3a4 # load x3 with value 0xe9498d5e2dad3a4
sw x3, 0(x2) # store 0xe9498d5e2dad3a4 in memory
flw f16, 0(x2) # load 0xe9498d5e2dad3a4 from memory into f16
fmsub.s f18, f27, f11, f16 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x813d9ab0)
li x22, 0xeefe20c1212bf637 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ed9c7201e741eca # load x3 with value 0x7ed9c7201e741eca
sw x3, 0(x2) # store 0x7ed9c7201e741eca in memory
flw f2, 0(x2) # load 0x7ed9c7201e741eca from memory into f2
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f5, 0(x2) # load 0x813d9ab0 from memory into f5
li x3, 0x98f443541c086326 # load x3 with value 0x98f443541c086326
sw x3, 0(x2) # store 0x98f443541c086326 in memory
flw f20, 0(x2) # load 0x98f443541c086326 from memory into f20
fmsub.s f22, f2, f5, f20 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x0)
li x12, 0xcb25372a7e35fa67 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbec89e99ba951456 # load x3 with value 0xbec89e99ba951456
sw x3, 0(x2) # store 0xbec89e99ba951456 in memory
flw f8, 0(x2) # load 0xbec89e99ba951456 from memory into f8
li x3, 0xb991a843b0ef7744 # load x3 with value 0xb991a843b0ef7744
sw x3, 0(x2) # store 0xb991a843b0ef7744 in memory
flw f17, 0(x2) # load 0xb991a843b0ef7744 from memory into f17
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f16, 0(x2) # load 0x00000000 from memory into f16
fmsub.s f12, f8, f17, f16 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x80000000)
li x7, 0xb7d0cf4332abb9c0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x854c3115a2372a82 # load x3 with value 0x854c3115a2372a82
sw x3, 0(x2) # store 0x854c3115a2372a82 in memory
flw f1, 0(x2) # load 0x854c3115a2372a82 from memory into f1
li x3, 0xaf2ad65e29467fa0 # load x3 with value 0xaf2ad65e29467fa0
sw x3, 0(x2) # store 0xaf2ad65e29467fa0 in memory
flw f27, 0(x2) # load 0xaf2ad65e29467fa0 from memory into f27
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f21, 0(x2) # load 0x80000000 from memory into f21
fmsub.s f7, f1, f27, f21 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x3f800000)
li x5, 0x7e01417db7bfeab5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x374f283997244e6e # load x3 with value 0x374f283997244e6e
sw x3, 0(x2) # store 0x374f283997244e6e in memory
flw f24, 0(x2) # load 0x374f283997244e6e from memory into f24
li x3, 0x5e7dc4d8d526118c # load x3 with value 0x5e7dc4d8d526118c
sw x3, 0(x2) # store 0x5e7dc4d8d526118c in memory
flw f29, 0(x2) # load 0x5e7dc4d8d526118c from memory into f29
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f10, 0(x2) # load 0x3f800000 from memory into f10
fmsub.s f5, f24, f29, f10 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0xbf800000)
li x14, 0xe13513165679f45f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x53b57d1eae8cabe5 # load x3 with value 0x53b57d1eae8cabe5
sw x3, 0(x2) # store 0x53b57d1eae8cabe5 in memory
flw f10, 0(x2) # load 0x53b57d1eae8cabe5 from memory into f10
li x3, 0x328087752f602990 # load x3 with value 0x328087752f602990
sw x3, 0(x2) # store 0x328087752f602990 in memory
flw f26, 0(x2) # load 0x328087752f602990 from memory into f26
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f9, 0(x2) # load 0xbf800000 from memory into f9
fmsub.s f14, f10, f26, f9 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x3fc00000)
li x7, 0xa37cc719e1f54435 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xce35d83177574020 # load x3 with value 0xce35d83177574020
sw x3, 0(x2) # store 0xce35d83177574020 in memory
flw f9, 0(x2) # load 0xce35d83177574020 from memory into f9
li x3, 0xc7167e7fba26e352 # load x3 with value 0xc7167e7fba26e352
sw x3, 0(x2) # store 0xc7167e7fba26e352 in memory
flw f20, 0(x2) # load 0xc7167e7fba26e352 from memory into f20
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f27, 0(x2) # load 0x3fc00000 from memory into f27
fmsub.s f7, f9, f20, f27 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0xbfc00000)
li x3, 0x8de2ef0ff7e24642 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x2faaf2596f209a8b # load x3 with value 0x2faaf2596f209a8b
sw x3, 0(x2) # store 0x2faaf2596f209a8b in memory
flw f27, 0(x2) # load 0x2faaf2596f209a8b from memory into f27
li x3, 0x41e312dd01bb9a9a # load x3 with value 0x41e312dd01bb9a9a
sw x3, 0(x2) # store 0x41e312dd01bb9a9a in memory
flw f26, 0(x2) # load 0x41e312dd01bb9a9a from memory into f26
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f6, 0(x2) # load 0xbfc00000 from memory into f6
fmsub.s f3, f27, f26, f6 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x40000000)
li x19, 0x25071242e09b2ee7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x84b424e7965333a4 # load x3 with value 0x84b424e7965333a4
sw x3, 0(x2) # store 0x84b424e7965333a4 in memory
flw f2, 0(x2) # load 0x84b424e7965333a4 from memory into f2
li x3, 0x184cfbdeab899e4 # load x3 with value 0x184cfbdeab899e4
sw x3, 0(x2) # store 0x184cfbdeab899e4 in memory
flw f12, 0(x2) # load 0x184cfbdeab899e4 from memory into f12
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f10, 0(x2) # load 0x40000000 from memory into f10
fmsub.s f19, f2, f12, f10 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0xc0000000)
li x19, 0x44a9ccd00385614b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa082519216fa0ac2 # load x3 with value 0xa082519216fa0ac2
sw x3, 0(x2) # store 0xa082519216fa0ac2 in memory
flw f12, 0(x2) # load 0xa082519216fa0ac2 from memory into f12
li x3, 0x8c7ac4aa93a93006 # load x3 with value 0x8c7ac4aa93a93006
sw x3, 0(x2) # store 0x8c7ac4aa93a93006 in memory
flw f16, 0(x2) # load 0x8c7ac4aa93a93006 from memory into f16
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f6, 0(x2) # load 0xc0000000 from memory into f6
fmsub.s f19, f12, f16, f6 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x800000)
li x2, 0x2eb911b6d36ccabb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbac3d214cbf7d0bb # load x3 with value 0xbac3d214cbf7d0bb
sw x3, 0(x2) # store 0xbac3d214cbf7d0bb in memory
flw f19, 0(x2) # load 0xbac3d214cbf7d0bb from memory into f19
li x3, 0x44b4e7d2f60d5c4c # load x3 with value 0x44b4e7d2f60d5c4c
sw x3, 0(x2) # store 0x44b4e7d2f60d5c4c in memory
flw f22, 0(x2) # load 0x44b4e7d2f60d5c4c from memory into f22
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f15, 0(x2) # load 0x00800000 from memory into f15
fmsub.s f2, f19, f22, f15 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x80800000)
li x23, 0x6af71f13685bdc83 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3a7572338a4e5df8 # load x3 with value 0x3a7572338a4e5df8
sw x3, 0(x2) # store 0x3a7572338a4e5df8 in memory
flw f4, 0(x2) # load 0x3a7572338a4e5df8 from memory into f4
li x3, 0x46668f944e5e247 # load x3 with value 0x46668f944e5e247
sw x3, 0(x2) # store 0x46668f944e5e247 in memory
flw f15, 0(x2) # load 0x46668f944e5e247 from memory into f15
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f22, 0(x2) # load 0x80800000 from memory into f22
fmsub.s f23, f4, f15, f22 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x7f7fffff)
li x28, 0x5ef451a777a7c058 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xe31511dfd7ed5a80 # load x3 with value 0xe31511dfd7ed5a80
sw x3, 0(x2) # store 0xe31511dfd7ed5a80 in memory
flw f22, 0(x2) # load 0xe31511dfd7ed5a80 from memory into f22
li x3, 0xef9206ece7156d19 # load x3 with value 0xef9206ece7156d19
sw x3, 0(x2) # store 0xef9206ece7156d19 in memory
flw f2, 0(x2) # load 0xef9206ece7156d19 from memory into f2
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f31, 0(x2) # load 0x7f7fffff from memory into f31
fmsub.s f28, f22, f2, f31 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0xff7fffff)
li x13, 0xc02dc80505ddfbaa # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc298d59a002b96de # load x3 with value 0xc298d59a002b96de
sw x3, 0(x2) # store 0xc298d59a002b96de in memory
flw f6, 0(x2) # load 0xc298d59a002b96de from memory into f6
li x3, 0x13406c7b5986a455 # load x3 with value 0x13406c7b5986a455
sw x3, 0(x2) # store 0x13406c7b5986a455 in memory
flw f24, 0(x2) # load 0x13406c7b5986a455 from memory into f24
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f7, 0(x2) # load 0xff7fffff from memory into f7
fmsub.s f13, f6, f24, f7 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x7fffff)
li x27, 0x54314d03164febfa # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x19b0f6b9c0532db5 # load x3 with value 0x19b0f6b9c0532db5
sw x3, 0(x2) # store 0x19b0f6b9c0532db5 in memory
flw f21, 0(x2) # load 0x19b0f6b9c0532db5 from memory into f21
li x3, 0x6f89681604235dda # load x3 with value 0x6f89681604235dda
sw x3, 0(x2) # store 0x6f89681604235dda in memory
flw f1, 0(x2) # load 0x6f89681604235dda from memory into f1
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f6, 0(x2) # load 0x007fffff from memory into f6
fmsub.s f27, f21, f1, f6 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x807fffff)
li x30, 0x50806fac267753f3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x680fdb749f62da16 # load x3 with value 0x680fdb749f62da16
sw x3, 0(x2) # store 0x680fdb749f62da16 in memory
flw f21, 0(x2) # load 0x680fdb749f62da16 from memory into f21
li x3, 0x7f45fc55153820e5 # load x3 with value 0x7f45fc55153820e5
sw x3, 0(x2) # store 0x7f45fc55153820e5 in memory
flw f25, 0(x2) # load 0x7f45fc55153820e5 from memory into f25
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f20, 0(x2) # load 0x807fffff from memory into f20
fmsub.s f30, f21, f25, f20 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x400000)
li x17, 0xd8cfaa91dda12033 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xf1b5bf9f2361943 # load x3 with value 0xf1b5bf9f2361943
sw x3, 0(x2) # store 0xf1b5bf9f2361943 in memory
flw f20, 0(x2) # load 0xf1b5bf9f2361943 from memory into f20
li x3, 0x3956a90f95b6dcab # load x3 with value 0x3956a90f95b6dcab
sw x3, 0(x2) # store 0x3956a90f95b6dcab in memory
flw f13, 0(x2) # load 0x3956a90f95b6dcab from memory into f13
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f27, 0(x2) # load 0x00400000 from memory into f27
fmsub.s f17, f20, f13, f27 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x80400000)
li x28, 0xfbd141e04c5de784 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3aa854ddeacd44fb # load x3 with value 0x3aa854ddeacd44fb
sw x3, 0(x2) # store 0x3aa854ddeacd44fb in memory
flw f5, 0(x2) # load 0x3aa854ddeacd44fb from memory into f5
li x3, 0x77b5c7b51d851ef0 # load x3 with value 0x77b5c7b51d851ef0
sw x3, 0(x2) # store 0x77b5c7b51d851ef0 in memory
flw f20, 0(x2) # load 0x77b5c7b51d851ef0 from memory into f20
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f29, 0(x2) # load 0x80400000 from memory into f29
fmsub.s f28, f5, f20, f29 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x1)
li x29, 0x00078e8da4091cd9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xb8ddd20c66354fbe # load x3 with value 0xb8ddd20c66354fbe
sw x3, 0(x2) # store 0xb8ddd20c66354fbe in memory
flw f5, 0(x2) # load 0xb8ddd20c66354fbe from memory into f5
li x3, 0x5c61b03d4373a605 # load x3 with value 0x5c61b03d4373a605
sw x3, 0(x2) # store 0x5c61b03d4373a605 in memory
flw f21, 0(x2) # load 0x5c61b03d4373a605 from memory into f21
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f20, 0(x2) # load 0x00000001 from memory into f20
fmsub.s f29, f5, f21, f20 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x80000001)
li x22, 0x66cd6c828114bb1b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xd5265cee6e3ebc90 # load x3 with value 0xd5265cee6e3ebc90
sw x3, 0(x2) # store 0xd5265cee6e3ebc90 in memory
flw f4, 0(x2) # load 0xd5265cee6e3ebc90 from memory into f4
li x3, 0xb5817a7da6d60f6 # load x3 with value 0xb5817a7da6d60f6
sw x3, 0(x2) # store 0xb5817a7da6d60f6 in memory
flw f15, 0(x2) # load 0xb5817a7da6d60f6 from memory into f15
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f16, 0(x2) # load 0x80000001 from memory into f16
fmsub.s f22, f4, f15, f16 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x7f800000)
li x6, 0xab58d31d78e5d86f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f4c5416c6e6ccfe # load x3 with value 0x7f4c5416c6e6ccfe
sw x3, 0(x2) # store 0x7f4c5416c6e6ccfe in memory
flw f27, 0(x2) # load 0x7f4c5416c6e6ccfe from memory into f27
li x3, 0x133fd09d6b04d28c # load x3 with value 0x133fd09d6b04d28c
sw x3, 0(x2) # store 0x133fd09d6b04d28c in memory
flw f18, 0(x2) # load 0x133fd09d6b04d28c from memory into f18
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f5, 0(x2) # load 0x7f800000 from memory into f5
fmsub.s f6, f27, f18, f5 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0xff800000)
li x13, 0xf67845d84078642d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x57fcaf4300c04c65 # load x3 with value 0x57fcaf4300c04c65
sw x3, 0(x2) # store 0x57fcaf4300c04c65 in memory
flw f22, 0(x2) # load 0x57fcaf4300c04c65 from memory into f22
li x3, 0xf7147531c5d90595 # load x3 with value 0xf7147531c5d90595
sw x3, 0(x2) # store 0xf7147531c5d90595 in memory
flw f30, 0(x2) # load 0xf7147531c5d90595 from memory into f30
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f11, 0(x2) # load 0xff800000 from memory into f11
fmsub.s f13, f22, f30, f11 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x7fc00000)
li x12, 0xdc6122925de12090 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x8acc85d9290445d0 # load x3 with value 0x8acc85d9290445d0
sw x3, 0(x2) # store 0x8acc85d9290445d0 in memory
flw f23, 0(x2) # load 0x8acc85d9290445d0 from memory into f23
li x3, 0x7eb44cd67089b5a8 # load x3 with value 0x7eb44cd67089b5a8
sw x3, 0(x2) # store 0x7eb44cd67089b5a8 in memory
flw f20, 0(x2) # load 0x7eb44cd67089b5a8 from memory into f20
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f26, 0(x2) # load 0x7fc00000 from memory into f26
fmsub.s f12, f23, f20, f26 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x7fffffff)
li x30, 0xaf587d3bd8d6b5d0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xceae4610ed97a892 # load x3 with value 0xceae4610ed97a892
sw x3, 0(x2) # store 0xceae4610ed97a892 in memory
flw f23, 0(x2) # load 0xceae4610ed97a892 from memory into f23
li x3, 0xda64beab12991b7c # load x3 with value 0xda64beab12991b7c
sw x3, 0(x2) # store 0xda64beab12991b7c in memory
flw f20, 0(x2) # load 0xda64beab12991b7c from memory into f20
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f5, 0(x2) # load 0x7fffffff from memory into f5
fmsub.s f30, f23, f20, f5 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x7f800001)
li x29, 0xbf61948d8a579d59 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xd888049a9338df71 # load x3 with value 0xd888049a9338df71
sw x3, 0(x2) # store 0xd888049a9338df71 in memory
flw f16, 0(x2) # load 0xd888049a9338df71 from memory into f16
li x3, 0xb6a623c19b49745a # load x3 with value 0xb6a623c19b49745a
sw x3, 0(x2) # store 0xb6a623c19b49745a in memory
flw f28, 0(x2) # load 0xb6a623c19b49745a from memory into f28
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f11, 0(x2) # load 0x7f800001 from memory into f11
fmsub.s f29, f16, f28, f11 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x7fbfffff)
li x10, 0x55f6d91f8107a477 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x4093d4559ef3812 # load x3 with value 0x4093d4559ef3812
sw x3, 0(x2) # store 0x4093d4559ef3812 in memory
flw f25, 0(x2) # load 0x4093d4559ef3812 from memory into f25
li x3, 0x5d35d239d185be83 # load x3 with value 0x5d35d239d185be83
sw x3, 0(x2) # store 0x5d35d239d185be83 in memory
flw f6, 0(x2) # load 0x5d35d239d185be83 from memory into f6
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f9, 0(x2) # load 0x7fbfffff from memory into f9
fmsub.s f10, f25, f6, f9 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x7ef8654f)
li x6, 0x90ca3bd459507754 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x71af88fc5b633ca7 # load x3 with value 0x71af88fc5b633ca7
sw x3, 0(x2) # store 0x71af88fc5b633ca7 in memory
flw f31, 0(x2) # load 0x71af88fc5b633ca7 from memory into f31
li x3, 0xc00402044d2d9b25 # load x3 with value 0xc00402044d2d9b25
sw x3, 0(x2) # store 0xc00402044d2d9b25 in memory
flw f26, 0(x2) # load 0xc00402044d2d9b25 from memory into f26
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f4, 0(x2) # load 0x7ef8654f from memory into f4
fmsub.s f6, f31, f26, f4 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x813d9ab0)
li x28, 0x91b8703bc1ed90c9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xf3fd1c0ad5c1ddc3 # load x3 with value 0xf3fd1c0ad5c1ddc3
sw x3, 0(x2) # store 0xf3fd1c0ad5c1ddc3 in memory
flw f21, 0(x2) # load 0xf3fd1c0ad5c1ddc3 from memory into f21
li x3, 0x1692c3ef4c9fb5 # load x3 with value 0x1692c3ef4c9fb5
sw x3, 0(x2) # store 0x1692c3ef4c9fb5 in memory
flw f29, 0(x2) # load 0x1692c3ef4c9fb5 from memory into f29
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f26, 0(x2) # load 0x813d9ab0 from memory into f26
fmsub.s f28, f21, f29, f26 # perform operation

# Testcase cp_frm
li x8, 0x1edc64d992f16ffd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x20771a91bed06676 # load x3 with value 0x20771a91bed06676
sw x3, 0(x2) # store 0x20771a91bed06676 in memory
flw f5, 0(x2) # load 0x20771a91bed06676 from memory into f5
li x3, 0x83ed1532121d4a6e # load x3 with value 0x83ed1532121d4a6e
sw x3, 0(x2) # store 0x83ed1532121d4a6e in memory
flw f27, 0(x2) # load 0x83ed1532121d4a6e from memory into f27
li x3, 0x00000003 # load x3 with value 0x00000003
sw x3, 0(x2) # store 0x00000003 in memory
flw f3, 0(x2) # load 0x00000003 from memory into f3
fmsub.s f8, f5, f27, f3, dyn # perform operation
fmsub.s f8, f5, f27, f3, rdn # perform operation
fmsub.s f8, f5, f27, f3, rmm # perform operation
fmsub.s f8, f5, f27, f3, rne # perform operation
fmsub.s f8, f5, f27, f3, rtz # perform operation
fmsub.s f8, f5, f27, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f8, f5, f27, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f8, f5, f27, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f8, f5, f27, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f8, f5, f27, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f8, f5, f27, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x0)
li x30, 0x67e73c8300eb7d54 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f7, 0(x2) # load 0x00000000 from memory into f7
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f27, 0(x2) # load 0x00000000 from memory into f27
li x3, 0x8fc45399f6ad589c # load x3 with value 0x8fc45399f6ad589c
sw x3, 0(x2) # store 0x8fc45399f6ad589c in memory
flw f19, 0(x2) # load 0x8fc45399f6ad589c from memory into f19
fmsub.s f30, f7, f27, f19, dyn # perform operation
fmsub.s f30, f7, f27, f19, rdn # perform operation
fmsub.s f30, f7, f27, f19, rmm # perform operation
fmsub.s f30, f7, f27, f19, rne # perform operation
fmsub.s f30, f7, f27, f19, rtz # perform operation
fmsub.s f30, f7, f27, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f30, f7, f27, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f30, f7, f27, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f30, f7, f27, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f30, f7, f27, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f30, f7, f27, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x80000000)
li x4, 0x654db736d7303a27 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f22, 0(x2) # load 0x00000000 from memory into f22
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f19, 0(x2) # load 0x80000000 from memory into f19
li x3, 0xb9ad2da0f59cdbac # load x3 with value 0xb9ad2da0f59cdbac
sw x3, 0(x2) # store 0xb9ad2da0f59cdbac in memory
flw f9, 0(x2) # load 0xb9ad2da0f59cdbac from memory into f9
fmsub.s f4, f22, f19, f9, dyn # perform operation
fmsub.s f4, f22, f19, f9, rdn # perform operation
fmsub.s f4, f22, f19, f9, rmm # perform operation
fmsub.s f4, f22, f19, f9, rne # perform operation
fmsub.s f4, f22, f19, f9, rtz # perform operation
fmsub.s f4, f22, f19, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f4, f22, f19, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f4, f22, f19, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f4, f22, f19, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f4, f22, f19, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f4, f22, f19, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x3f800000)
li x8, 0x007e8db530e14722 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f29, 0(x2) # load 0x00000000 from memory into f29
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f21, 0(x2) # load 0x3f800000 from memory into f21
li x3, 0x850eb35bf0873409 # load x3 with value 0x850eb35bf0873409
sw x3, 0(x2) # store 0x850eb35bf0873409 in memory
flw f31, 0(x2) # load 0x850eb35bf0873409 from memory into f31
fmsub.s f8, f29, f21, f31, dyn # perform operation
fmsub.s f8, f29, f21, f31, rdn # perform operation
fmsub.s f8, f29, f21, f31, rmm # perform operation
fmsub.s f8, f29, f21, f31, rne # perform operation
fmsub.s f8, f29, f21, f31, rtz # perform operation
fmsub.s f8, f29, f21, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f8, f29, f21, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f8, f29, f21, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f8, f29, f21, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f8, f29, f21, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f8, f29, f21, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0xbf800000)
li x10, 0xe89f4a4d8ff852e5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f9, 0(x2) # load 0x00000000 from memory into f9
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f16, 0(x2) # load 0xbf800000 from memory into f16
li x3, 0x7ada3261bd1c0811 # load x3 with value 0x7ada3261bd1c0811
sw x3, 0(x2) # store 0x7ada3261bd1c0811 in memory
flw f19, 0(x2) # load 0x7ada3261bd1c0811 from memory into f19
fmsub.s f10, f9, f16, f19, dyn # perform operation
fmsub.s f10, f9, f16, f19, rdn # perform operation
fmsub.s f10, f9, f16, f19, rmm # perform operation
fmsub.s f10, f9, f16, f19, rne # perform operation
fmsub.s f10, f9, f16, f19, rtz # perform operation
fmsub.s f10, f9, f16, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f10, f9, f16, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f10, f9, f16, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f10, f9, f16, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f10, f9, f16, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f10, f9, f16, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x3fc00000)
li x4, 0x6af2938fda228d0c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f3, 0(x2) # load 0x00000000 from memory into f3
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f19, 0(x2) # load 0x3fc00000 from memory into f19
li x3, 0xe6e9d1e880f3c8f6 # load x3 with value 0xe6e9d1e880f3c8f6
sw x3, 0(x2) # store 0xe6e9d1e880f3c8f6 in memory
flw f13, 0(x2) # load 0xe6e9d1e880f3c8f6 from memory into f13
fmsub.s f4, f3, f19, f13, dyn # perform operation
fmsub.s f4, f3, f19, f13, rdn # perform operation
fmsub.s f4, f3, f19, f13, rmm # perform operation
fmsub.s f4, f3, f19, f13, rne # perform operation
fmsub.s f4, f3, f19, f13, rtz # perform operation
fmsub.s f4, f3, f19, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f4, f3, f19, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f4, f3, f19, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f4, f3, f19, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f4, f3, f19, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f4, f3, f19, f13 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0xbfc00000)
li x30, 0x07f73b3c4171cdff # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f8, 0(x2) # load 0x00000000 from memory into f8
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f3, 0(x2) # load 0xbfc00000 from memory into f3
li x3, 0xeb404abfa627bcc9 # load x3 with value 0xeb404abfa627bcc9
sw x3, 0(x2) # store 0xeb404abfa627bcc9 in memory
flw f29, 0(x2) # load 0xeb404abfa627bcc9 from memory into f29
fmsub.s f30, f8, f3, f29, dyn # perform operation
fmsub.s f30, f8, f3, f29, rdn # perform operation
fmsub.s f30, f8, f3, f29, rmm # perform operation
fmsub.s f30, f8, f3, f29, rne # perform operation
fmsub.s f30, f8, f3, f29, rtz # perform operation
fmsub.s f30, f8, f3, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f30, f8, f3, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f30, f8, f3, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f30, f8, f3, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f30, f8, f3, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f30, f8, f3, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x40000000)
li x2, 0xf828dd520d9baee0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f26, 0(x2) # load 0x00000000 from memory into f26
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f7, 0(x2) # load 0x40000000 from memory into f7
li x3, 0x87e5db839dac4d0a # load x3 with value 0x87e5db839dac4d0a
sw x3, 0(x2) # store 0x87e5db839dac4d0a in memory
flw f20, 0(x2) # load 0x87e5db839dac4d0a from memory into f20
fmsub.s f2, f26, f7, f20, dyn # perform operation
fmsub.s f2, f26, f7, f20, rdn # perform operation
fmsub.s f2, f26, f7, f20, rmm # perform operation
fmsub.s f2, f26, f7, f20, rne # perform operation
fmsub.s f2, f26, f7, f20, rtz # perform operation
fmsub.s f2, f26, f7, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f2, f26, f7, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f2, f26, f7, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f2, f26, f7, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f2, f26, f7, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f2, f26, f7, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0xc0000000)
li x17, 0x139af527d9039f18 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f22, 0(x2) # load 0x00000000 from memory into f22
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f21, 0(x2) # load 0xc0000000 from memory into f21
li x3, 0xdcd4675276e0f717 # load x3 with value 0xdcd4675276e0f717
sw x3, 0(x2) # store 0xdcd4675276e0f717 in memory
flw f5, 0(x2) # load 0xdcd4675276e0f717 from memory into f5
fmsub.s f17, f22, f21, f5, dyn # perform operation
fmsub.s f17, f22, f21, f5, rdn # perform operation
fmsub.s f17, f22, f21, f5, rmm # perform operation
fmsub.s f17, f22, f21, f5, rne # perform operation
fmsub.s f17, f22, f21, f5, rtz # perform operation
fmsub.s f17, f22, f21, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f17, f22, f21, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f17, f22, f21, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f17, f22, f21, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f17, f22, f21, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f17, f22, f21, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x800000)
li x14, 0xfa1d38f51fbd959c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f20, 0(x2) # load 0x00000000 from memory into f20
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f8, 0(x2) # load 0x00800000 from memory into f8
li x3, 0x70f4b30bc5fbdb30 # load x3 with value 0x70f4b30bc5fbdb30
sw x3, 0(x2) # store 0x70f4b30bc5fbdb30 in memory
flw f27, 0(x2) # load 0x70f4b30bc5fbdb30 from memory into f27
fmsub.s f14, f20, f8, f27, dyn # perform operation
fmsub.s f14, f20, f8, f27, rdn # perform operation
fmsub.s f14, f20, f8, f27, rmm # perform operation
fmsub.s f14, f20, f8, f27, rne # perform operation
fmsub.s f14, f20, f8, f27, rtz # perform operation
fmsub.s f14, f20, f8, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f14, f20, f8, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f14, f20, f8, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f14, f20, f8, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f14, f20, f8, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f14, f20, f8, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x80800000)
li x1, 0x6ded84ecc0620ffd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f4, 0(x2) # load 0x00000000 from memory into f4
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f31, 0(x2) # load 0x80800000 from memory into f31
li x3, 0x6e4f657c4a4a82ba # load x3 with value 0x6e4f657c4a4a82ba
sw x3, 0(x2) # store 0x6e4f657c4a4a82ba in memory
flw f8, 0(x2) # load 0x6e4f657c4a4a82ba from memory into f8
fmsub.s f1, f4, f31, f8, dyn # perform operation
fmsub.s f1, f4, f31, f8, rdn # perform operation
fmsub.s f1, f4, f31, f8, rmm # perform operation
fmsub.s f1, f4, f31, f8, rne # perform operation
fmsub.s f1, f4, f31, f8, rtz # perform operation
fmsub.s f1, f4, f31, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f1, f4, f31, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f1, f4, f31, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f1, f4, f31, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f1, f4, f31, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f1, f4, f31, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x7f7fffff)
li x27, 0xebf5482af2cece0e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f29, 0(x2) # load 0x00000000 from memory into f29
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f7, 0(x2) # load 0x7f7fffff from memory into f7
li x3, 0x863f60c7d8d64e57 # load x3 with value 0x863f60c7d8d64e57
sw x3, 0(x2) # store 0x863f60c7d8d64e57 in memory
flw f9, 0(x2) # load 0x863f60c7d8d64e57 from memory into f9
fmsub.s f27, f29, f7, f9, dyn # perform operation
fmsub.s f27, f29, f7, f9, rdn # perform operation
fmsub.s f27, f29, f7, f9, rmm # perform operation
fmsub.s f27, f29, f7, f9, rne # perform operation
fmsub.s f27, f29, f7, f9, rtz # perform operation
fmsub.s f27, f29, f7, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f27, f29, f7, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f27, f29, f7, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f27, f29, f7, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f27, f29, f7, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f27, f29, f7, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0xff7fffff)
li x8, 0xd8a1e4a733d673fe # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f3, 0(x2) # load 0x00000000 from memory into f3
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f21, 0(x2) # load 0xff7fffff from memory into f21
li x3, 0x291001f976dc736b # load x3 with value 0x291001f976dc736b
sw x3, 0(x2) # store 0x291001f976dc736b in memory
flw f27, 0(x2) # load 0x291001f976dc736b from memory into f27
fmsub.s f8, f3, f21, f27, dyn # perform operation
fmsub.s f8, f3, f21, f27, rdn # perform operation
fmsub.s f8, f3, f21, f27, rmm # perform operation
fmsub.s f8, f3, f21, f27, rne # perform operation
fmsub.s f8, f3, f21, f27, rtz # perform operation
fmsub.s f8, f3, f21, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f8, f3, f21, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f8, f3, f21, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f8, f3, f21, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f8, f3, f21, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f8, f3, f21, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x7fffff)
li x25, 0xbc43e6d0d4eb5a0b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f6, 0(x2) # load 0x00000000 from memory into f6
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f8, 0(x2) # load 0x007fffff from memory into f8
li x3, 0x9700f6f8c606868e # load x3 with value 0x9700f6f8c606868e
sw x3, 0(x2) # store 0x9700f6f8c606868e in memory
flw f20, 0(x2) # load 0x9700f6f8c606868e from memory into f20
fmsub.s f25, f6, f8, f20, dyn # perform operation
fmsub.s f25, f6, f8, f20, rdn # perform operation
fmsub.s f25, f6, f8, f20, rmm # perform operation
fmsub.s f25, f6, f8, f20, rne # perform operation
fmsub.s f25, f6, f8, f20, rtz # perform operation
fmsub.s f25, f6, f8, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f25, f6, f8, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f25, f6, f8, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f25, f6, f8, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f25, f6, f8, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f25, f6, f8, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x807fffff)
li x9, 0x36d1d3f6e9222d73 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f28, 0(x2) # load 0x00000000 from memory into f28
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f11, 0(x2) # load 0x807fffff from memory into f11
li x3, 0x58ca7e0118d0a1dd # load x3 with value 0x58ca7e0118d0a1dd
sw x3, 0(x2) # store 0x58ca7e0118d0a1dd in memory
flw f25, 0(x2) # load 0x58ca7e0118d0a1dd from memory into f25
fmsub.s f9, f28, f11, f25, dyn # perform operation
fmsub.s f9, f28, f11, f25, rdn # perform operation
fmsub.s f9, f28, f11, f25, rmm # perform operation
fmsub.s f9, f28, f11, f25, rne # perform operation
fmsub.s f9, f28, f11, f25, rtz # perform operation
fmsub.s f9, f28, f11, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f9, f28, f11, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f9, f28, f11, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f9, f28, f11, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f9, f28, f11, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f9, f28, f11, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x400000)
li x6, 0xdc22ceb522324b0c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f26, 0(x2) # load 0x00000000 from memory into f26
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f31, 0(x2) # load 0x00400000 from memory into f31
li x3, 0xa7075318fc685dab # load x3 with value 0xa7075318fc685dab
sw x3, 0(x2) # store 0xa7075318fc685dab in memory
flw f12, 0(x2) # load 0xa7075318fc685dab from memory into f12
fmsub.s f6, f26, f31, f12, dyn # perform operation
fmsub.s f6, f26, f31, f12, rdn # perform operation
fmsub.s f6, f26, f31, f12, rmm # perform operation
fmsub.s f6, f26, f31, f12, rne # perform operation
fmsub.s f6, f26, f31, f12, rtz # perform operation
fmsub.s f6, f26, f31, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f6, f26, f31, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f6, f26, f31, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f6, f26, f31, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f6, f26, f31, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f6, f26, f31, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x80400000)
li x11, 0x41e535a45af243ca # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f8, 0(x2) # load 0x00000000 from memory into f8
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f29, 0(x2) # load 0x80400000 from memory into f29
li x3, 0x1e016ab6d612410c # load x3 with value 0x1e016ab6d612410c
sw x3, 0(x2) # store 0x1e016ab6d612410c in memory
flw f2, 0(x2) # load 0x1e016ab6d612410c from memory into f2
fmsub.s f11, f8, f29, f2, dyn # perform operation
fmsub.s f11, f8, f29, f2, rdn # perform operation
fmsub.s f11, f8, f29, f2, rmm # perform operation
fmsub.s f11, f8, f29, f2, rne # perform operation
fmsub.s f11, f8, f29, f2, rtz # perform operation
fmsub.s f11, f8, f29, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f11, f8, f29, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f11, f8, f29, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f11, f8, f29, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f11, f8, f29, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f11, f8, f29, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x1)
li x23, 0xafce7042784eef70 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f24, 0(x2) # load 0x00000000 from memory into f24
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f1, 0(x2) # load 0x00000001 from memory into f1
li x3, 0xbb443fd3681ff80c # load x3 with value 0xbb443fd3681ff80c
sw x3, 0(x2) # store 0xbb443fd3681ff80c in memory
flw f27, 0(x2) # load 0xbb443fd3681ff80c from memory into f27
fmsub.s f23, f24, f1, f27, dyn # perform operation
fmsub.s f23, f24, f1, f27, rdn # perform operation
fmsub.s f23, f24, f1, f27, rmm # perform operation
fmsub.s f23, f24, f1, f27, rne # perform operation
fmsub.s f23, f24, f1, f27, rtz # perform operation
fmsub.s f23, f24, f1, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f23, f24, f1, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f23, f24, f1, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f23, f24, f1, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f23, f24, f1, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f23, f24, f1, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x80000001)
li x3, 0x1075fadd0c5067da # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f9, 0(x2) # load 0x00000000 from memory into f9
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f8, 0(x2) # load 0x80000001 from memory into f8
li x3, 0xd5a5f2e646ef5921 # load x3 with value 0xd5a5f2e646ef5921
sw x3, 0(x2) # store 0xd5a5f2e646ef5921 in memory
flw f14, 0(x2) # load 0xd5a5f2e646ef5921 from memory into f14
fmsub.s f3, f9, f8, f14, dyn # perform operation
fmsub.s f3, f9, f8, f14, rdn # perform operation
fmsub.s f3, f9, f8, f14, rmm # perform operation
fmsub.s f3, f9, f8, f14, rne # perform operation
fmsub.s f3, f9, f8, f14, rtz # perform operation
fmsub.s f3, f9, f8, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f3, f9, f8, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f3, f9, f8, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f3, f9, f8, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f3, f9, f8, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f3, f9, f8, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x7f800000)
li x11, 0x41af2a5f8fc583c2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f10, 0(x2) # load 0x00000000 from memory into f10
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f27, 0(x2) # load 0x7f800000 from memory into f27
li x3, 0x1a1a13de3c78ee43 # load x3 with value 0x1a1a13de3c78ee43
sw x3, 0(x2) # store 0x1a1a13de3c78ee43 in memory
flw f3, 0(x2) # load 0x1a1a13de3c78ee43 from memory into f3
fmsub.s f11, f10, f27, f3, dyn # perform operation
fmsub.s f11, f10, f27, f3, rdn # perform operation
fmsub.s f11, f10, f27, f3, rmm # perform operation
fmsub.s f11, f10, f27, f3, rne # perform operation
fmsub.s f11, f10, f27, f3, rtz # perform operation
fmsub.s f11, f10, f27, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f11, f10, f27, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f11, f10, f27, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f11, f10, f27, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f11, f10, f27, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f11, f10, f27, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0xff800000)
li x24, 0x957ac5d196f34e74 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f13, 0(x2) # load 0x00000000 from memory into f13
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f1, 0(x2) # load 0xff800000 from memory into f1
li x3, 0xbc740703483d4630 # load x3 with value 0xbc740703483d4630
sw x3, 0(x2) # store 0xbc740703483d4630 in memory
flw f7, 0(x2) # load 0xbc740703483d4630 from memory into f7
fmsub.s f24, f13, f1, f7, dyn # perform operation
fmsub.s f24, f13, f1, f7, rdn # perform operation
fmsub.s f24, f13, f1, f7, rmm # perform operation
fmsub.s f24, f13, f1, f7, rne # perform operation
fmsub.s f24, f13, f1, f7, rtz # perform operation
fmsub.s f24, f13, f1, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f24, f13, f1, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f24, f13, f1, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f24, f13, f1, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f24, f13, f1, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f24, f13, f1, f7 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x7fc00000)
li x19, 0xb9471e9004be85c8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f23, 0(x2) # load 0x00000000 from memory into f23
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f4, 0(x2) # load 0x7fc00000 from memory into f4
li x3, 0x1a53ab6459f86ff1 # load x3 with value 0x1a53ab6459f86ff1
sw x3, 0(x2) # store 0x1a53ab6459f86ff1 in memory
flw f25, 0(x2) # load 0x1a53ab6459f86ff1 from memory into f25
fmsub.s f19, f23, f4, f25, dyn # perform operation
fmsub.s f19, f23, f4, f25, rdn # perform operation
fmsub.s f19, f23, f4, f25, rmm # perform operation
fmsub.s f19, f23, f4, f25, rne # perform operation
fmsub.s f19, f23, f4, f25, rtz # perform operation
fmsub.s f19, f23, f4, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f19, f23, f4, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f19, f23, f4, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f19, f23, f4, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f19, f23, f4, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f19, f23, f4, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x7fffffff)
li x31, 0x90e6b1a4f42aea1e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f22, 0(x2) # load 0x00000000 from memory into f22
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f12, 0(x2) # load 0x7fffffff from memory into f12
li x3, 0x388974202a610b35 # load x3 with value 0x388974202a610b35
sw x3, 0(x2) # store 0x388974202a610b35 in memory
flw f11, 0(x2) # load 0x388974202a610b35 from memory into f11
fmsub.s f31, f22, f12, f11, dyn # perform operation
fmsub.s f31, f22, f12, f11, rdn # perform operation
fmsub.s f31, f22, f12, f11, rmm # perform operation
fmsub.s f31, f22, f12, f11, rne # perform operation
fmsub.s f31, f22, f12, f11, rtz # perform operation
fmsub.s f31, f22, f12, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f31, f22, f12, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f31, f22, f12, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f31, f22, f12, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f31, f22, f12, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f31, f22, f12, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x7f800001)
li x24, 0x1992bce478299602 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f22, 0(x2) # load 0x00000000 from memory into f22
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f5, 0(x2) # load 0x7f800001 from memory into f5
li x3, 0x2242a9659ae05317 # load x3 with value 0x2242a9659ae05317
sw x3, 0(x2) # store 0x2242a9659ae05317 in memory
flw f10, 0(x2) # load 0x2242a9659ae05317 from memory into f10
fmsub.s f24, f22, f5, f10, dyn # perform operation
fmsub.s f24, f22, f5, f10, rdn # perform operation
fmsub.s f24, f22, f5, f10, rmm # perform operation
fmsub.s f24, f22, f5, f10, rne # perform operation
fmsub.s f24, f22, f5, f10, rtz # perform operation
fmsub.s f24, f22, f5, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f24, f22, f5, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f24, f22, f5, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f24, f22, f5, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f24, f22, f5, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f24, f22, f5, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x7fbfffff)
li x1, 0x86db8ad9e218da47 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f5, 0(x2) # load 0x00000000 from memory into f5
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f28, 0(x2) # load 0x7fbfffff from memory into f28
li x3, 0x5f183930e456415f # load x3 with value 0x5f183930e456415f
sw x3, 0(x2) # store 0x5f183930e456415f in memory
flw f29, 0(x2) # load 0x5f183930e456415f from memory into f29
fmsub.s f1, f5, f28, f29, dyn # perform operation
fmsub.s f1, f5, f28, f29, rdn # perform operation
fmsub.s f1, f5, f28, f29, rmm # perform operation
fmsub.s f1, f5, f28, f29, rne # perform operation
fmsub.s f1, f5, f28, f29, rtz # perform operation
fmsub.s f1, f5, f28, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f1, f5, f28, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f1, f5, f28, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f1, f5, f28, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f1, f5, f28, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f1, f5, f28, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x7ef8654f)
li x23, 0xe0f2bced8acfe837 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f22, 0(x2) # load 0x00000000 from memory into f22
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f24, 0(x2) # load 0x7ef8654f from memory into f24
li x3, 0xc9a8ad82f68618a0 # load x3 with value 0xc9a8ad82f68618a0
sw x3, 0(x2) # store 0xc9a8ad82f68618a0 in memory
flw f11, 0(x2) # load 0xc9a8ad82f68618a0 from memory into f11
fmsub.s f23, f22, f24, f11, dyn # perform operation
fmsub.s f23, f22, f24, f11, rdn # perform operation
fmsub.s f23, f22, f24, f11, rmm # perform operation
fmsub.s f23, f22, f24, f11, rne # perform operation
fmsub.s f23, f22, f24, f11, rtz # perform operation
fmsub.s f23, f22, f24, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f23, f22, f24, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f23, f22, f24, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f23, f22, f24, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f23, f22, f24, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f23, f22, f24, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x813d9ab0)
li x18, 0x945c9365eae6b9d3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f26, 0(x2) # load 0x00000000 from memory into f26
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f2, 0(x2) # load 0x813d9ab0 from memory into f2
li x3, 0xa05ae4dc94723a98 # load x3 with value 0xa05ae4dc94723a98
sw x3, 0(x2) # store 0xa05ae4dc94723a98 in memory
flw f9, 0(x2) # load 0xa05ae4dc94723a98 from memory into f9
fmsub.s f18, f26, f2, f9, dyn # perform operation
fmsub.s f18, f26, f2, f9, rdn # perform operation
fmsub.s f18, f26, f2, f9, rmm # perform operation
fmsub.s f18, f26, f2, f9, rne # perform operation
fmsub.s f18, f26, f2, f9, rtz # perform operation
fmsub.s f18, f26, f2, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f18, f26, f2, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f18, f26, f2, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f18, f26, f2, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f18, f26, f2, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f18, f26, f2, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0x0)
li x10, 0x8be54d8fdf0364e3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f11, 0(x2) # load 0x80000000 from memory into f11
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f19, 0(x2) # load 0x00000000 from memory into f19
li x3, 0x4363e5b1c000283d # load x3 with value 0x4363e5b1c000283d
sw x3, 0(x2) # store 0x4363e5b1c000283d in memory
flw f7, 0(x2) # load 0x4363e5b1c000283d from memory into f7
fmsub.s f10, f11, f19, f7, dyn # perform operation
fmsub.s f10, f11, f19, f7, rdn # perform operation
fmsub.s f10, f11, f19, f7, rmm # perform operation
fmsub.s f10, f11, f19, f7, rne # perform operation
fmsub.s f10, f11, f19, f7, rtz # perform operation
fmsub.s f10, f11, f19, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f10, f11, f19, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f10, f11, f19, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f10, f11, f19, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f10, f11, f19, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f10, f11, f19, f7 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0x80000000)
li x26, 0x8b3cfb79470a6e3b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f14, 0(x2) # load 0x80000000 from memory into f14
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f3, 0(x2) # load 0x80000000 from memory into f3
li x3, 0xd0626192837582ed # load x3 with value 0xd0626192837582ed
sw x3, 0(x2) # store 0xd0626192837582ed in memory
flw f28, 0(x2) # load 0xd0626192837582ed from memory into f28
fmsub.s f26, f14, f3, f28, dyn # perform operation
fmsub.s f26, f14, f3, f28, rdn # perform operation
fmsub.s f26, f14, f3, f28, rmm # perform operation
fmsub.s f26, f14, f3, f28, rne # perform operation
fmsub.s f26, f14, f3, f28, rtz # perform operation
fmsub.s f26, f14, f3, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f26, f14, f3, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f26, f14, f3, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f26, f14, f3, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f26, f14, f3, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f26, f14, f3, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0x3f800000)
li x24, 0x6a37cf445bb7f330 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f6, 0(x2) # load 0x80000000 from memory into f6
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f5, 0(x2) # load 0x3f800000 from memory into f5
li x3, 0x3d3f525f45a9097c # load x3 with value 0x3d3f525f45a9097c
sw x3, 0(x2) # store 0x3d3f525f45a9097c in memory
flw f27, 0(x2) # load 0x3d3f525f45a9097c from memory into f27
fmsub.s f24, f6, f5, f27, dyn # perform operation
fmsub.s f24, f6, f5, f27, rdn # perform operation
fmsub.s f24, f6, f5, f27, rmm # perform operation
fmsub.s f24, f6, f5, f27, rne # perform operation
fmsub.s f24, f6, f5, f27, rtz # perform operation
fmsub.s f24, f6, f5, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f24, f6, f5, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f24, f6, f5, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f24, f6, f5, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f24, f6, f5, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f24, f6, f5, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0xbf800000)
li x22, 0x9490899d84935d46 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f8, 0(x2) # load 0x80000000 from memory into f8
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f17, 0(x2) # load 0xbf800000 from memory into f17
li x3, 0xe683c4f2185ed740 # load x3 with value 0xe683c4f2185ed740
sw x3, 0(x2) # store 0xe683c4f2185ed740 in memory
flw f29, 0(x2) # load 0xe683c4f2185ed740 from memory into f29
fmsub.s f22, f8, f17, f29, dyn # perform operation
fmsub.s f22, f8, f17, f29, rdn # perform operation
fmsub.s f22, f8, f17, f29, rmm # perform operation
fmsub.s f22, f8, f17, f29, rne # perform operation
fmsub.s f22, f8, f17, f29, rtz # perform operation
fmsub.s f22, f8, f17, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f22, f8, f17, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f22, f8, f17, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f22, f8, f17, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f22, f8, f17, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f22, f8, f17, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0x3fc00000)
li x18, 0x2f02e6fd9d14bf35 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f10, 0(x2) # load 0x80000000 from memory into f10
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f16, 0(x2) # load 0x3fc00000 from memory into f16
li x3, 0x31f3c878396909c8 # load x3 with value 0x31f3c878396909c8
sw x3, 0(x2) # store 0x31f3c878396909c8 in memory
flw f30, 0(x2) # load 0x31f3c878396909c8 from memory into f30
fmsub.s f18, f10, f16, f30, dyn # perform operation
fmsub.s f18, f10, f16, f30, rdn # perform operation
fmsub.s f18, f10, f16, f30, rmm # perform operation
fmsub.s f18, f10, f16, f30, rne # perform operation
fmsub.s f18, f10, f16, f30, rtz # perform operation
fmsub.s f18, f10, f16, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f18, f10, f16, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f18, f10, f16, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f18, f10, f16, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f18, f10, f16, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f18, f10, f16, f30 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0xbfc00000)
li x12, 0x04a6e13d5fa2ed73 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f28, 0(x2) # load 0x80000000 from memory into f28
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f15, 0(x2) # load 0xbfc00000 from memory into f15
li x3, 0xe0f468be2ca7d73a # load x3 with value 0xe0f468be2ca7d73a
sw x3, 0(x2) # store 0xe0f468be2ca7d73a in memory
flw f20, 0(x2) # load 0xe0f468be2ca7d73a from memory into f20
fmsub.s f12, f28, f15, f20, dyn # perform operation
fmsub.s f12, f28, f15, f20, rdn # perform operation
fmsub.s f12, f28, f15, f20, rmm # perform operation
fmsub.s f12, f28, f15, f20, rne # perform operation
fmsub.s f12, f28, f15, f20, rtz # perform operation
fmsub.s f12, f28, f15, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f12, f28, f15, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f12, f28, f15, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f12, f28, f15, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f12, f28, f15, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f12, f28, f15, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0x40000000)
li x31, 0x648a3894d617435a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f12, 0(x2) # load 0x80000000 from memory into f12
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f10, 0(x2) # load 0x40000000 from memory into f10
li x3, 0xd9af420ae26827e0 # load x3 with value 0xd9af420ae26827e0
sw x3, 0(x2) # store 0xd9af420ae26827e0 in memory
flw f23, 0(x2) # load 0xd9af420ae26827e0 from memory into f23
fmsub.s f31, f12, f10, f23, dyn # perform operation
fmsub.s f31, f12, f10, f23, rdn # perform operation
fmsub.s f31, f12, f10, f23, rmm # perform operation
fmsub.s f31, f12, f10, f23, rne # perform operation
fmsub.s f31, f12, f10, f23, rtz # perform operation
fmsub.s f31, f12, f10, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f31, f12, f10, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f31, f12, f10, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f31, f12, f10, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f31, f12, f10, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f31, f12, f10, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0xc0000000)
li x4, 0xd04c917dcbd5470f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f20, 0(x2) # load 0x80000000 from memory into f20
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f25, 0(x2) # load 0xc0000000 from memory into f25
li x3, 0x85c86a1a414aabd3 # load x3 with value 0x85c86a1a414aabd3
sw x3, 0(x2) # store 0x85c86a1a414aabd3 in memory
flw f22, 0(x2) # load 0x85c86a1a414aabd3 from memory into f22
fmsub.s f4, f20, f25, f22, dyn # perform operation
fmsub.s f4, f20, f25, f22, rdn # perform operation
fmsub.s f4, f20, f25, f22, rmm # perform operation
fmsub.s f4, f20, f25, f22, rne # perform operation
fmsub.s f4, f20, f25, f22, rtz # perform operation
fmsub.s f4, f20, f25, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f4, f20, f25, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f4, f20, f25, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f4, f20, f25, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f4, f20, f25, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f4, f20, f25, f22 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0x800000)
li x7, 0x2380cdfcdd661691 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f29, 0(x2) # load 0x80000000 from memory into f29
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f21, 0(x2) # load 0x00800000 from memory into f21
li x3, 0x5fce82567bba4bd # load x3 with value 0x5fce82567bba4bd
sw x3, 0(x2) # store 0x5fce82567bba4bd in memory
flw f25, 0(x2) # load 0x5fce82567bba4bd from memory into f25
fmsub.s f7, f29, f21, f25, dyn # perform operation
fmsub.s f7, f29, f21, f25, rdn # perform operation
fmsub.s f7, f29, f21, f25, rmm # perform operation
fmsub.s f7, f29, f21, f25, rne # perform operation
fmsub.s f7, f29, f21, f25, rtz # perform operation
fmsub.s f7, f29, f21, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f7, f29, f21, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f7, f29, f21, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f7, f29, f21, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f7, f29, f21, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f7, f29, f21, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0x80800000)
li x31, 0x2fd9df1683ed7e92 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f25, 0(x2) # load 0x80000000 from memory into f25
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f5, 0(x2) # load 0x80800000 from memory into f5
li x3, 0xe779800efdf5f669 # load x3 with value 0xe779800efdf5f669
sw x3, 0(x2) # store 0xe779800efdf5f669 in memory
flw f14, 0(x2) # load 0xe779800efdf5f669 from memory into f14
fmsub.s f31, f25, f5, f14, dyn # perform operation
fmsub.s f31, f25, f5, f14, rdn # perform operation
fmsub.s f31, f25, f5, f14, rmm # perform operation
fmsub.s f31, f25, f5, f14, rne # perform operation
fmsub.s f31, f25, f5, f14, rtz # perform operation
fmsub.s f31, f25, f5, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f31, f25, f5, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f31, f25, f5, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f31, f25, f5, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f31, f25, f5, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f31, f25, f5, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0x7f7fffff)
li x18, 0xfff6833b212d152a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f31, 0(x2) # load 0x80000000 from memory into f31
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f28, 0(x2) # load 0x7f7fffff from memory into f28
li x3, 0xad6d63fa19f818e3 # load x3 with value 0xad6d63fa19f818e3
sw x3, 0(x2) # store 0xad6d63fa19f818e3 in memory
flw f13, 0(x2) # load 0xad6d63fa19f818e3 from memory into f13
fmsub.s f18, f31, f28, f13, dyn # perform operation
fmsub.s f18, f31, f28, f13, rdn # perform operation
fmsub.s f18, f31, f28, f13, rmm # perform operation
fmsub.s f18, f31, f28, f13, rne # perform operation
fmsub.s f18, f31, f28, f13, rtz # perform operation
fmsub.s f18, f31, f28, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f18, f31, f28, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f18, f31, f28, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f18, f31, f28, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f18, f31, f28, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f18, f31, f28, f13 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0xff7fffff)
li x31, 0xe7ba6ac3f4d5008c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f11, 0(x2) # load 0x80000000 from memory into f11
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f7, 0(x2) # load 0xff7fffff from memory into f7
li x3, 0xc073e47bd9aa68d4 # load x3 with value 0xc073e47bd9aa68d4
sw x3, 0(x2) # store 0xc073e47bd9aa68d4 in memory
flw f20, 0(x2) # load 0xc073e47bd9aa68d4 from memory into f20
fmsub.s f31, f11, f7, f20, dyn # perform operation
fmsub.s f31, f11, f7, f20, rdn # perform operation
fmsub.s f31, f11, f7, f20, rmm # perform operation
fmsub.s f31, f11, f7, f20, rne # perform operation
fmsub.s f31, f11, f7, f20, rtz # perform operation
fmsub.s f31, f11, f7, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f31, f11, f7, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f31, f11, f7, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f31, f11, f7, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f31, f11, f7, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f31, f11, f7, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0x7fffff)
li x3, 0x427a7dbe0bea1ade # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f17, 0(x2) # load 0x80000000 from memory into f17
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f20, 0(x2) # load 0x007fffff from memory into f20
li x3, 0x708057ee068c07b6 # load x3 with value 0x708057ee068c07b6
sw x3, 0(x2) # store 0x708057ee068c07b6 in memory
flw f29, 0(x2) # load 0x708057ee068c07b6 from memory into f29
fmsub.s f3, f17, f20, f29, dyn # perform operation
fmsub.s f3, f17, f20, f29, rdn # perform operation
fmsub.s f3, f17, f20, f29, rmm # perform operation
fmsub.s f3, f17, f20, f29, rne # perform operation
fmsub.s f3, f17, f20, f29, rtz # perform operation
fmsub.s f3, f17, f20, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f3, f17, f20, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f3, f17, f20, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f3, f17, f20, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f3, f17, f20, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f3, f17, f20, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0x807fffff)
li x12, 0x7cee5abae4e585c8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f31, 0(x2) # load 0x80000000 from memory into f31
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f25, 0(x2) # load 0x807fffff from memory into f25
li x3, 0xd2fefd5b5bd2a43b # load x3 with value 0xd2fefd5b5bd2a43b
sw x3, 0(x2) # store 0xd2fefd5b5bd2a43b in memory
flw f15, 0(x2) # load 0xd2fefd5b5bd2a43b from memory into f15
fmsub.s f12, f31, f25, f15, dyn # perform operation
fmsub.s f12, f31, f25, f15, rdn # perform operation
fmsub.s f12, f31, f25, f15, rmm # perform operation
fmsub.s f12, f31, f25, f15, rne # perform operation
fmsub.s f12, f31, f25, f15, rtz # perform operation
fmsub.s f12, f31, f25, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f12, f31, f25, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f12, f31, f25, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f12, f31, f25, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f12, f31, f25, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f12, f31, f25, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0x400000)
li x7, 0xc29a5aeb179b020b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f3, 0(x2) # load 0x80000000 from memory into f3
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f14, 0(x2) # load 0x00400000 from memory into f14
li x3, 0x93a7c33b3f5cc6f5 # load x3 with value 0x93a7c33b3f5cc6f5
sw x3, 0(x2) # store 0x93a7c33b3f5cc6f5 in memory
flw f20, 0(x2) # load 0x93a7c33b3f5cc6f5 from memory into f20
fmsub.s f7, f3, f14, f20, dyn # perform operation
fmsub.s f7, f3, f14, f20, rdn # perform operation
fmsub.s f7, f3, f14, f20, rmm # perform operation
fmsub.s f7, f3, f14, f20, rne # perform operation
fmsub.s f7, f3, f14, f20, rtz # perform operation
fmsub.s f7, f3, f14, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f7, f3, f14, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f7, f3, f14, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f7, f3, f14, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f7, f3, f14, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f7, f3, f14, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0x80400000)
li x3, 0x64ed3b62ec3b1917 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f13, 0(x2) # load 0x80000000 from memory into f13
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f30, 0(x2) # load 0x80400000 from memory into f30
li x3, 0x512e94df996a4a6a # load x3 with value 0x512e94df996a4a6a
sw x3, 0(x2) # store 0x512e94df996a4a6a in memory
flw f15, 0(x2) # load 0x512e94df996a4a6a from memory into f15
fmsub.s f3, f13, f30, f15, dyn # perform operation
fmsub.s f3, f13, f30, f15, rdn # perform operation
fmsub.s f3, f13, f30, f15, rmm # perform operation
fmsub.s f3, f13, f30, f15, rne # perform operation
fmsub.s f3, f13, f30, f15, rtz # perform operation
fmsub.s f3, f13, f30, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f3, f13, f30, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f3, f13, f30, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f3, f13, f30, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f3, f13, f30, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f3, f13, f30, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0x1)
li x28, 0x23ada86512095c3c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f7, 0(x2) # load 0x80000000 from memory into f7
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f31, 0(x2) # load 0x00000001 from memory into f31
li x3, 0x1d6b951cd8c0a21b # load x3 with value 0x1d6b951cd8c0a21b
sw x3, 0(x2) # store 0x1d6b951cd8c0a21b in memory
flw f5, 0(x2) # load 0x1d6b951cd8c0a21b from memory into f5
fmsub.s f28, f7, f31, f5, dyn # perform operation
fmsub.s f28, f7, f31, f5, rdn # perform operation
fmsub.s f28, f7, f31, f5, rmm # perform operation
fmsub.s f28, f7, f31, f5, rne # perform operation
fmsub.s f28, f7, f31, f5, rtz # perform operation
fmsub.s f28, f7, f31, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f28, f7, f31, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f28, f7, f31, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f28, f7, f31, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f28, f7, f31, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f28, f7, f31, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0x80000001)
li x5, 0x97fdbd442205d52f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f6, 0(x2) # load 0x80000000 from memory into f6
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f29, 0(x2) # load 0x80000001 from memory into f29
li x3, 0x1b760ed6f30b6bd5 # load x3 with value 0x1b760ed6f30b6bd5
sw x3, 0(x2) # store 0x1b760ed6f30b6bd5 in memory
flw f10, 0(x2) # load 0x1b760ed6f30b6bd5 from memory into f10
fmsub.s f5, f6, f29, f10, dyn # perform operation
fmsub.s f5, f6, f29, f10, rdn # perform operation
fmsub.s f5, f6, f29, f10, rmm # perform operation
fmsub.s f5, f6, f29, f10, rne # perform operation
fmsub.s f5, f6, f29, f10, rtz # perform operation
fmsub.s f5, f6, f29, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f5, f6, f29, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f5, f6, f29, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f5, f6, f29, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f5, f6, f29, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f5, f6, f29, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0x7f800000)
li x9, 0x0a57e3cbe9563912 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f26, 0(x2) # load 0x80000000 from memory into f26
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f5, 0(x2) # load 0x7f800000 from memory into f5
li x3, 0x7bec1d53d1feeaaa # load x3 with value 0x7bec1d53d1feeaaa
sw x3, 0(x2) # store 0x7bec1d53d1feeaaa in memory
flw f2, 0(x2) # load 0x7bec1d53d1feeaaa from memory into f2
fmsub.s f9, f26, f5, f2, dyn # perform operation
fmsub.s f9, f26, f5, f2, rdn # perform operation
fmsub.s f9, f26, f5, f2, rmm # perform operation
fmsub.s f9, f26, f5, f2, rne # perform operation
fmsub.s f9, f26, f5, f2, rtz # perform operation
fmsub.s f9, f26, f5, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f9, f26, f5, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f9, f26, f5, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f9, f26, f5, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f9, f26, f5, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f9, f26, f5, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0xff800000)
li x2, 0xeade90f59d210562 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f3, 0(x2) # load 0x80000000 from memory into f3
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f25, 0(x2) # load 0xff800000 from memory into f25
li x3, 0xc249c3e501aa0d18 # load x3 with value 0xc249c3e501aa0d18
sw x3, 0(x2) # store 0xc249c3e501aa0d18 in memory
flw f15, 0(x2) # load 0xc249c3e501aa0d18 from memory into f15
fmsub.s f2, f3, f25, f15, dyn # perform operation
fmsub.s f2, f3, f25, f15, rdn # perform operation
fmsub.s f2, f3, f25, f15, rmm # perform operation
fmsub.s f2, f3, f25, f15, rne # perform operation
fmsub.s f2, f3, f25, f15, rtz # perform operation
fmsub.s f2, f3, f25, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f2, f3, f25, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f2, f3, f25, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f2, f3, f25, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f2, f3, f25, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f2, f3, f25, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0x7fc00000)
li x28, 0xe76df848386c9e88 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f1, 0(x2) # load 0x80000000 from memory into f1
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f9, 0(x2) # load 0x7fc00000 from memory into f9
li x3, 0xd1e84cbd9f6d8372 # load x3 with value 0xd1e84cbd9f6d8372
sw x3, 0(x2) # store 0xd1e84cbd9f6d8372 in memory
flw f18, 0(x2) # load 0xd1e84cbd9f6d8372 from memory into f18
fmsub.s f28, f1, f9, f18, dyn # perform operation
fmsub.s f28, f1, f9, f18, rdn # perform operation
fmsub.s f28, f1, f9, f18, rmm # perform operation
fmsub.s f28, f1, f9, f18, rne # perform operation
fmsub.s f28, f1, f9, f18, rtz # perform operation
fmsub.s f28, f1, f9, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f28, f1, f9, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f28, f1, f9, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f28, f1, f9, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f28, f1, f9, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f28, f1, f9, f18 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0x7fffffff)
li x16, 0x7ad29874a0ffbe97 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f23, 0(x2) # load 0x80000000 from memory into f23
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f4, 0(x2) # load 0x7fffffff from memory into f4
li x3, 0xaaaef3fe1f720dd4 # load x3 with value 0xaaaef3fe1f720dd4
sw x3, 0(x2) # store 0xaaaef3fe1f720dd4 in memory
flw f27, 0(x2) # load 0xaaaef3fe1f720dd4 from memory into f27
fmsub.s f16, f23, f4, f27, dyn # perform operation
fmsub.s f16, f23, f4, f27, rdn # perform operation
fmsub.s f16, f23, f4, f27, rmm # perform operation
fmsub.s f16, f23, f4, f27, rne # perform operation
fmsub.s f16, f23, f4, f27, rtz # perform operation
fmsub.s f16, f23, f4, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f16, f23, f4, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f16, f23, f4, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f16, f23, f4, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f16, f23, f4, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f16, f23, f4, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0x7f800001)
li x25, 0xe6d66fc9a7d62fdb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f20, 0(x2) # load 0x80000000 from memory into f20
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f18, 0(x2) # load 0x7f800001 from memory into f18
li x3, 0xb028cc6eb9a31450 # load x3 with value 0xb028cc6eb9a31450
sw x3, 0(x2) # store 0xb028cc6eb9a31450 in memory
flw f23, 0(x2) # load 0xb028cc6eb9a31450 from memory into f23
fmsub.s f25, f20, f18, f23, dyn # perform operation
fmsub.s f25, f20, f18, f23, rdn # perform operation
fmsub.s f25, f20, f18, f23, rmm # perform operation
fmsub.s f25, f20, f18, f23, rne # perform operation
fmsub.s f25, f20, f18, f23, rtz # perform operation
fmsub.s f25, f20, f18, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f25, f20, f18, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f25, f20, f18, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f25, f20, f18, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f25, f20, f18, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f25, f20, f18, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0x7fbfffff)
li x22, 0xcd3433748de298b7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f29, 0(x2) # load 0x80000000 from memory into f29
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f23, 0(x2) # load 0x7fbfffff from memory into f23
li x3, 0x66468bec31056951 # load x3 with value 0x66468bec31056951
sw x3, 0(x2) # store 0x66468bec31056951 in memory
flw f15, 0(x2) # load 0x66468bec31056951 from memory into f15
fmsub.s f22, f29, f23, f15, dyn # perform operation
fmsub.s f22, f29, f23, f15, rdn # perform operation
fmsub.s f22, f29, f23, f15, rmm # perform operation
fmsub.s f22, f29, f23, f15, rne # perform operation
fmsub.s f22, f29, f23, f15, rtz # perform operation
fmsub.s f22, f29, f23, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f22, f29, f23, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f22, f29, f23, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f22, f29, f23, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f22, f29, f23, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f22, f29, f23, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0x7ef8654f)
li x21, 0xfd18cf15ba323eb3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f10, 0(x2) # load 0x80000000 from memory into f10
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f1, 0(x2) # load 0x7ef8654f from memory into f1
li x3, 0x208100a9cb784347 # load x3 with value 0x208100a9cb784347
sw x3, 0(x2) # store 0x208100a9cb784347 in memory
flw f28, 0(x2) # load 0x208100a9cb784347 from memory into f28
fmsub.s f21, f10, f1, f28, dyn # perform operation
fmsub.s f21, f10, f1, f28, rdn # perform operation
fmsub.s f21, f10, f1, f28, rmm # perform operation
fmsub.s f21, f10, f1, f28, rne # perform operation
fmsub.s f21, f10, f1, f28, rtz # perform operation
fmsub.s f21, f10, f1, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f21, f10, f1, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f21, f10, f1, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f21, f10, f1, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f21, f10, f1, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f21, f10, f1, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0x813d9ab0)
li x22, 0x5f27ee761ab76602 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f5, 0(x2) # load 0x80000000 from memory into f5
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f4, 0(x2) # load 0x813d9ab0 from memory into f4
li x3, 0x86902702430b564f # load x3 with value 0x86902702430b564f
sw x3, 0(x2) # store 0x86902702430b564f in memory
flw f8, 0(x2) # load 0x86902702430b564f from memory into f8
fmsub.s f22, f5, f4, f8, dyn # perform operation
fmsub.s f22, f5, f4, f8, rdn # perform operation
fmsub.s f22, f5, f4, f8, rmm # perform operation
fmsub.s f22, f5, f4, f8, rne # perform operation
fmsub.s f22, f5, f4, f8, rtz # perform operation
fmsub.s f22, f5, f4, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f22, f5, f4, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f22, f5, f4, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f22, f5, f4, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f22, f5, f4, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f22, f5, f4, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0x0)
li x24, 0xc8f82c280e8022f0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f29, 0(x2) # load 0x3f800000 from memory into f29
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f9, 0(x2) # load 0x00000000 from memory into f9
li x3, 0x1a4850f02b655fa5 # load x3 with value 0x1a4850f02b655fa5
sw x3, 0(x2) # store 0x1a4850f02b655fa5 in memory
flw f6, 0(x2) # load 0x1a4850f02b655fa5 from memory into f6
fmsub.s f24, f29, f9, f6, dyn # perform operation
fmsub.s f24, f29, f9, f6, rdn # perform operation
fmsub.s f24, f29, f9, f6, rmm # perform operation
fmsub.s f24, f29, f9, f6, rne # perform operation
fmsub.s f24, f29, f9, f6, rtz # perform operation
fmsub.s f24, f29, f9, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f24, f29, f9, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f24, f29, f9, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f24, f29, f9, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f24, f29, f9, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f24, f29, f9, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0x80000000)
li x16, 0x7b988dd11b221af4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f25, 0(x2) # load 0x3f800000 from memory into f25
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f22, 0(x2) # load 0x80000000 from memory into f22
li x3, 0x92928ae01da91080 # load x3 with value 0x92928ae01da91080
sw x3, 0(x2) # store 0x92928ae01da91080 in memory
flw f14, 0(x2) # load 0x92928ae01da91080 from memory into f14
fmsub.s f16, f25, f22, f14, dyn # perform operation
fmsub.s f16, f25, f22, f14, rdn # perform operation
fmsub.s f16, f25, f22, f14, rmm # perform operation
fmsub.s f16, f25, f22, f14, rne # perform operation
fmsub.s f16, f25, f22, f14, rtz # perform operation
fmsub.s f16, f25, f22, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f16, f25, f22, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f16, f25, f22, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f16, f25, f22, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f16, f25, f22, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f16, f25, f22, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0x3f800000)
li x7, 0xfb56271471e52c92 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f25, 0(x2) # load 0x3f800000 from memory into f25
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f30, 0(x2) # load 0x3f800000 from memory into f30
li x3, 0xce6de176c471600b # load x3 with value 0xce6de176c471600b
sw x3, 0(x2) # store 0xce6de176c471600b in memory
flw f1, 0(x2) # load 0xce6de176c471600b from memory into f1
fmsub.s f7, f25, f30, f1, dyn # perform operation
fmsub.s f7, f25, f30, f1, rdn # perform operation
fmsub.s f7, f25, f30, f1, rmm # perform operation
fmsub.s f7, f25, f30, f1, rne # perform operation
fmsub.s f7, f25, f30, f1, rtz # perform operation
fmsub.s f7, f25, f30, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f7, f25, f30, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f7, f25, f30, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f7, f25, f30, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f7, f25, f30, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f7, f25, f30, f1 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0xbf800000)
li x9, 0x7fe042fd15b0a36e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f12, 0(x2) # load 0x3f800000 from memory into f12
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f28, 0(x2) # load 0xbf800000 from memory into f28
li x3, 0x80fc68c4e2fab751 # load x3 with value 0x80fc68c4e2fab751
sw x3, 0(x2) # store 0x80fc68c4e2fab751 in memory
flw f8, 0(x2) # load 0x80fc68c4e2fab751 from memory into f8
fmsub.s f9, f12, f28, f8, dyn # perform operation
fmsub.s f9, f12, f28, f8, rdn # perform operation
fmsub.s f9, f12, f28, f8, rmm # perform operation
fmsub.s f9, f12, f28, f8, rne # perform operation
fmsub.s f9, f12, f28, f8, rtz # perform operation
fmsub.s f9, f12, f28, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f9, f12, f28, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f9, f12, f28, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f9, f12, f28, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f9, f12, f28, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f9, f12, f28, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0x3fc00000)
li x17, 0x99af8571b1ab66e9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f22, 0(x2) # load 0x3f800000 from memory into f22
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f27, 0(x2) # load 0x3fc00000 from memory into f27
li x3, 0xe04a7237c9e8b436 # load x3 with value 0xe04a7237c9e8b436
sw x3, 0(x2) # store 0xe04a7237c9e8b436 in memory
flw f11, 0(x2) # load 0xe04a7237c9e8b436 from memory into f11
fmsub.s f17, f22, f27, f11, dyn # perform operation
fmsub.s f17, f22, f27, f11, rdn # perform operation
fmsub.s f17, f22, f27, f11, rmm # perform operation
fmsub.s f17, f22, f27, f11, rne # perform operation
fmsub.s f17, f22, f27, f11, rtz # perform operation
fmsub.s f17, f22, f27, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f17, f22, f27, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f17, f22, f27, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f17, f22, f27, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f17, f22, f27, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f17, f22, f27, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0xbfc00000)
li x12, 0xde1962f8b4411b5b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f21, 0(x2) # load 0x3f800000 from memory into f21
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f17, 0(x2) # load 0xbfc00000 from memory into f17
li x3, 0x1c887f5620daf90d # load x3 with value 0x1c887f5620daf90d
sw x3, 0(x2) # store 0x1c887f5620daf90d in memory
flw f25, 0(x2) # load 0x1c887f5620daf90d from memory into f25
fmsub.s f12, f21, f17, f25, dyn # perform operation
fmsub.s f12, f21, f17, f25, rdn # perform operation
fmsub.s f12, f21, f17, f25, rmm # perform operation
fmsub.s f12, f21, f17, f25, rne # perform operation
fmsub.s f12, f21, f17, f25, rtz # perform operation
fmsub.s f12, f21, f17, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f12, f21, f17, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f12, f21, f17, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f12, f21, f17, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f12, f21, f17, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f12, f21, f17, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0x40000000)
li x29, 0x4a0320f15edc9c95 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f3, 0(x2) # load 0x3f800000 from memory into f3
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f2, 0(x2) # load 0x40000000 from memory into f2
li x3, 0x61d9a01ad589766a # load x3 with value 0x61d9a01ad589766a
sw x3, 0(x2) # store 0x61d9a01ad589766a in memory
flw f1, 0(x2) # load 0x61d9a01ad589766a from memory into f1
fmsub.s f29, f3, f2, f1, dyn # perform operation
fmsub.s f29, f3, f2, f1, rdn # perform operation
fmsub.s f29, f3, f2, f1, rmm # perform operation
fmsub.s f29, f3, f2, f1, rne # perform operation
fmsub.s f29, f3, f2, f1, rtz # perform operation
fmsub.s f29, f3, f2, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f29, f3, f2, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f29, f3, f2, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f29, f3, f2, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f29, f3, f2, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f29, f3, f2, f1 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0xc0000000)
li x21, 0x02f10576aa6f0c52 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f18, 0(x2) # load 0x3f800000 from memory into f18
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f7, 0(x2) # load 0xc0000000 from memory into f7
li x3, 0x626d60734b5960a2 # load x3 with value 0x626d60734b5960a2
sw x3, 0(x2) # store 0x626d60734b5960a2 in memory
flw f4, 0(x2) # load 0x626d60734b5960a2 from memory into f4
fmsub.s f21, f18, f7, f4, dyn # perform operation
fmsub.s f21, f18, f7, f4, rdn # perform operation
fmsub.s f21, f18, f7, f4, rmm # perform operation
fmsub.s f21, f18, f7, f4, rne # perform operation
fmsub.s f21, f18, f7, f4, rtz # perform operation
fmsub.s f21, f18, f7, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f21, f18, f7, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f21, f18, f7, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f21, f18, f7, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f21, f18, f7, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f21, f18, f7, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0x800000)
li x3, 0x2b16e47f5e3864f5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f23, 0(x2) # load 0x3f800000 from memory into f23
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f6, 0(x2) # load 0x00800000 from memory into f6
li x3, 0x249d7bf0df4bfdf8 # load x3 with value 0x249d7bf0df4bfdf8
sw x3, 0(x2) # store 0x249d7bf0df4bfdf8 in memory
flw f20, 0(x2) # load 0x249d7bf0df4bfdf8 from memory into f20
fmsub.s f3, f23, f6, f20, dyn # perform operation
fmsub.s f3, f23, f6, f20, rdn # perform operation
fmsub.s f3, f23, f6, f20, rmm # perform operation
fmsub.s f3, f23, f6, f20, rne # perform operation
fmsub.s f3, f23, f6, f20, rtz # perform operation
fmsub.s f3, f23, f6, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f3, f23, f6, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f3, f23, f6, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f3, f23, f6, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f3, f23, f6, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f3, f23, f6, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0x80800000)
li x24, 0x64ba5bc5d24d1cb5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f23, 0(x2) # load 0x3f800000 from memory into f23
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f31, 0(x2) # load 0x80800000 from memory into f31
li x3, 0x6145ecc32ff4de89 # load x3 with value 0x6145ecc32ff4de89
sw x3, 0(x2) # store 0x6145ecc32ff4de89 in memory
flw f1, 0(x2) # load 0x6145ecc32ff4de89 from memory into f1
fmsub.s f24, f23, f31, f1, dyn # perform operation
fmsub.s f24, f23, f31, f1, rdn # perform operation
fmsub.s f24, f23, f31, f1, rmm # perform operation
fmsub.s f24, f23, f31, f1, rne # perform operation
fmsub.s f24, f23, f31, f1, rtz # perform operation
fmsub.s f24, f23, f31, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f24, f23, f31, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f24, f23, f31, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f24, f23, f31, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f24, f23, f31, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f24, f23, f31, f1 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0x7f7fffff)
li x3, 0x1db1a9cbbd9c2ef2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f4, 0(x2) # load 0x3f800000 from memory into f4
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f5, 0(x2) # load 0x7f7fffff from memory into f5
li x3, 0x7a7eea1688a337f4 # load x3 with value 0x7a7eea1688a337f4
sw x3, 0(x2) # store 0x7a7eea1688a337f4 in memory
flw f13, 0(x2) # load 0x7a7eea1688a337f4 from memory into f13
fmsub.s f3, f4, f5, f13, dyn # perform operation
fmsub.s f3, f4, f5, f13, rdn # perform operation
fmsub.s f3, f4, f5, f13, rmm # perform operation
fmsub.s f3, f4, f5, f13, rne # perform operation
fmsub.s f3, f4, f5, f13, rtz # perform operation
fmsub.s f3, f4, f5, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f3, f4, f5, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f3, f4, f5, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f3, f4, f5, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f3, f4, f5, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f3, f4, f5, f13 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0xff7fffff)
li x30, 0x699325b64fa38324 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f21, 0(x2) # load 0x3f800000 from memory into f21
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f16, 0(x2) # load 0xff7fffff from memory into f16
li x3, 0x429ceca7d99df347 # load x3 with value 0x429ceca7d99df347
sw x3, 0(x2) # store 0x429ceca7d99df347 in memory
flw f20, 0(x2) # load 0x429ceca7d99df347 from memory into f20
fmsub.s f30, f21, f16, f20, dyn # perform operation
fmsub.s f30, f21, f16, f20, rdn # perform operation
fmsub.s f30, f21, f16, f20, rmm # perform operation
fmsub.s f30, f21, f16, f20, rne # perform operation
fmsub.s f30, f21, f16, f20, rtz # perform operation
fmsub.s f30, f21, f16, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f30, f21, f16, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f30, f21, f16, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f30, f21, f16, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f30, f21, f16, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f30, f21, f16, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0x7fffff)
li x27, 0x11404131e9dd05aa # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f17, 0(x2) # load 0x3f800000 from memory into f17
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f8, 0(x2) # load 0x007fffff from memory into f8
li x3, 0x83ced879c012e3e9 # load x3 with value 0x83ced879c012e3e9
sw x3, 0(x2) # store 0x83ced879c012e3e9 in memory
flw f31, 0(x2) # load 0x83ced879c012e3e9 from memory into f31
fmsub.s f27, f17, f8, f31, dyn # perform operation
fmsub.s f27, f17, f8, f31, rdn # perform operation
fmsub.s f27, f17, f8, f31, rmm # perform operation
fmsub.s f27, f17, f8, f31, rne # perform operation
fmsub.s f27, f17, f8, f31, rtz # perform operation
fmsub.s f27, f17, f8, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f27, f17, f8, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f27, f17, f8, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f27, f17, f8, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f27, f17, f8, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f27, f17, f8, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0x807fffff)
li x14, 0x707bd469635c0363 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f26, 0(x2) # load 0x3f800000 from memory into f26
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f27, 0(x2) # load 0x807fffff from memory into f27
li x3, 0xe1715d7516128e20 # load x3 with value 0xe1715d7516128e20
sw x3, 0(x2) # store 0xe1715d7516128e20 in memory
flw f29, 0(x2) # load 0xe1715d7516128e20 from memory into f29
fmsub.s f14, f26, f27, f29, dyn # perform operation
fmsub.s f14, f26, f27, f29, rdn # perform operation
fmsub.s f14, f26, f27, f29, rmm # perform operation
fmsub.s f14, f26, f27, f29, rne # perform operation
fmsub.s f14, f26, f27, f29, rtz # perform operation
fmsub.s f14, f26, f27, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f14, f26, f27, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f14, f26, f27, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f14, f26, f27, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f14, f26, f27, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f14, f26, f27, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0x400000)
li x25, 0xd137823b8b44b886 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f2, 0(x2) # load 0x3f800000 from memory into f2
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f30, 0(x2) # load 0x00400000 from memory into f30
li x3, 0x611e794918e49ac2 # load x3 with value 0x611e794918e49ac2
sw x3, 0(x2) # store 0x611e794918e49ac2 in memory
flw f20, 0(x2) # load 0x611e794918e49ac2 from memory into f20
fmsub.s f25, f2, f30, f20, dyn # perform operation
fmsub.s f25, f2, f30, f20, rdn # perform operation
fmsub.s f25, f2, f30, f20, rmm # perform operation
fmsub.s f25, f2, f30, f20, rne # perform operation
fmsub.s f25, f2, f30, f20, rtz # perform operation
fmsub.s f25, f2, f30, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f25, f2, f30, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f25, f2, f30, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f25, f2, f30, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f25, f2, f30, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f25, f2, f30, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0x80400000)
li x20, 0x6d76312c26b0f9c0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f8, 0(x2) # load 0x3f800000 from memory into f8
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f1, 0(x2) # load 0x80400000 from memory into f1
li x3, 0xfb763c71aa562132 # load x3 with value 0xfb763c71aa562132
sw x3, 0(x2) # store 0xfb763c71aa562132 in memory
flw f24, 0(x2) # load 0xfb763c71aa562132 from memory into f24
fmsub.s f20, f8, f1, f24, dyn # perform operation
fmsub.s f20, f8, f1, f24, rdn # perform operation
fmsub.s f20, f8, f1, f24, rmm # perform operation
fmsub.s f20, f8, f1, f24, rne # perform operation
fmsub.s f20, f8, f1, f24, rtz # perform operation
fmsub.s f20, f8, f1, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f20, f8, f1, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f20, f8, f1, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f20, f8, f1, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f20, f8, f1, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f20, f8, f1, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0x1)
li x2, 0xb984ae0607333da4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f24, 0(x2) # load 0x3f800000 from memory into f24
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f8, 0(x2) # load 0x00000001 from memory into f8
li x3, 0xa04c4291604224e7 # load x3 with value 0xa04c4291604224e7
sw x3, 0(x2) # store 0xa04c4291604224e7 in memory
flw f15, 0(x2) # load 0xa04c4291604224e7 from memory into f15
fmsub.s f2, f24, f8, f15, dyn # perform operation
fmsub.s f2, f24, f8, f15, rdn # perform operation
fmsub.s f2, f24, f8, f15, rmm # perform operation
fmsub.s f2, f24, f8, f15, rne # perform operation
fmsub.s f2, f24, f8, f15, rtz # perform operation
fmsub.s f2, f24, f8, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f2, f24, f8, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f2, f24, f8, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f2, f24, f8, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f2, f24, f8, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f2, f24, f8, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0x80000001)
li x28, 0x3de8196b91f14174 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f10, 0(x2) # load 0x3f800000 from memory into f10
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f22, 0(x2) # load 0x80000001 from memory into f22
li x3, 0xc36513d539b7ba3a # load x3 with value 0xc36513d539b7ba3a
sw x3, 0(x2) # store 0xc36513d539b7ba3a in memory
flw f18, 0(x2) # load 0xc36513d539b7ba3a from memory into f18
fmsub.s f28, f10, f22, f18, dyn # perform operation
fmsub.s f28, f10, f22, f18, rdn # perform operation
fmsub.s f28, f10, f22, f18, rmm # perform operation
fmsub.s f28, f10, f22, f18, rne # perform operation
fmsub.s f28, f10, f22, f18, rtz # perform operation
fmsub.s f28, f10, f22, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f28, f10, f22, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f28, f10, f22, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f28, f10, f22, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f28, f10, f22, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f28, f10, f22, f18 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0x7f800000)
li x15, 0x05518b8be2c469ed # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f9, 0(x2) # load 0x3f800000 from memory into f9
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f29, 0(x2) # load 0x7f800000 from memory into f29
li x3, 0xe97e81680d385caf # load x3 with value 0xe97e81680d385caf
sw x3, 0(x2) # store 0xe97e81680d385caf in memory
flw f21, 0(x2) # load 0xe97e81680d385caf from memory into f21
fmsub.s f15, f9, f29, f21, dyn # perform operation
fmsub.s f15, f9, f29, f21, rdn # perform operation
fmsub.s f15, f9, f29, f21, rmm # perform operation
fmsub.s f15, f9, f29, f21, rne # perform operation
fmsub.s f15, f9, f29, f21, rtz # perform operation
fmsub.s f15, f9, f29, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f15, f9, f29, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f15, f9, f29, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f15, f9, f29, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f15, f9, f29, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f15, f9, f29, f21 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0xff800000)
li x24, 0x2dcf3c457f3d2b9d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f20, 0(x2) # load 0x3f800000 from memory into f20
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f6, 0(x2) # load 0xff800000 from memory into f6
li x3, 0x99b6ea1a463b694 # load x3 with value 0x99b6ea1a463b694
sw x3, 0(x2) # store 0x99b6ea1a463b694 in memory
flw f19, 0(x2) # load 0x99b6ea1a463b694 from memory into f19
fmsub.s f24, f20, f6, f19, dyn # perform operation
fmsub.s f24, f20, f6, f19, rdn # perform operation
fmsub.s f24, f20, f6, f19, rmm # perform operation
fmsub.s f24, f20, f6, f19, rne # perform operation
fmsub.s f24, f20, f6, f19, rtz # perform operation
fmsub.s f24, f20, f6, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f24, f20, f6, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f24, f20, f6, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f24, f20, f6, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f24, f20, f6, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f24, f20, f6, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0x7fc00000)
li x24, 0x228051caa1b627b1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f6, 0(x2) # load 0x3f800000 from memory into f6
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f29, 0(x2) # load 0x7fc00000 from memory into f29
li x3, 0x27489395b44d180c # load x3 with value 0x27489395b44d180c
sw x3, 0(x2) # store 0x27489395b44d180c in memory
flw f14, 0(x2) # load 0x27489395b44d180c from memory into f14
fmsub.s f24, f6, f29, f14, dyn # perform operation
fmsub.s f24, f6, f29, f14, rdn # perform operation
fmsub.s f24, f6, f29, f14, rmm # perform operation
fmsub.s f24, f6, f29, f14, rne # perform operation
fmsub.s f24, f6, f29, f14, rtz # perform operation
fmsub.s f24, f6, f29, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f24, f6, f29, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f24, f6, f29, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f24, f6, f29, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f24, f6, f29, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f24, f6, f29, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0x7fffffff)
li x6, 0x03ae56fd08954f81 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f5, 0(x2) # load 0x3f800000 from memory into f5
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f2, 0(x2) # load 0x7fffffff from memory into f2
li x3, 0xbb6d11530d7e524a # load x3 with value 0xbb6d11530d7e524a
sw x3, 0(x2) # store 0xbb6d11530d7e524a in memory
flw f28, 0(x2) # load 0xbb6d11530d7e524a from memory into f28
fmsub.s f6, f5, f2, f28, dyn # perform operation
fmsub.s f6, f5, f2, f28, rdn # perform operation
fmsub.s f6, f5, f2, f28, rmm # perform operation
fmsub.s f6, f5, f2, f28, rne # perform operation
fmsub.s f6, f5, f2, f28, rtz # perform operation
fmsub.s f6, f5, f2, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f6, f5, f2, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f6, f5, f2, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f6, f5, f2, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f6, f5, f2, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f6, f5, f2, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0x7f800001)
li x31, 0xd35ac0bb3344c668 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f15, 0(x2) # load 0x3f800000 from memory into f15
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f30, 0(x2) # load 0x7f800001 from memory into f30
li x3, 0xa12cd8072b110864 # load x3 with value 0xa12cd8072b110864
sw x3, 0(x2) # store 0xa12cd8072b110864 in memory
flw f8, 0(x2) # load 0xa12cd8072b110864 from memory into f8
fmsub.s f31, f15, f30, f8, dyn # perform operation
fmsub.s f31, f15, f30, f8, rdn # perform operation
fmsub.s f31, f15, f30, f8, rmm # perform operation
fmsub.s f31, f15, f30, f8, rne # perform operation
fmsub.s f31, f15, f30, f8, rtz # perform operation
fmsub.s f31, f15, f30, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f31, f15, f30, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f31, f15, f30, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f31, f15, f30, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f31, f15, f30, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f31, f15, f30, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0x7fbfffff)
li x4, 0xdfd5558b32f41df6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f8, 0(x2) # load 0x3f800000 from memory into f8
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f28, 0(x2) # load 0x7fbfffff from memory into f28
li x3, 0x46c7424cd6b4f362 # load x3 with value 0x46c7424cd6b4f362
sw x3, 0(x2) # store 0x46c7424cd6b4f362 in memory
flw f25, 0(x2) # load 0x46c7424cd6b4f362 from memory into f25
fmsub.s f4, f8, f28, f25, dyn # perform operation
fmsub.s f4, f8, f28, f25, rdn # perform operation
fmsub.s f4, f8, f28, f25, rmm # perform operation
fmsub.s f4, f8, f28, f25, rne # perform operation
fmsub.s f4, f8, f28, f25, rtz # perform operation
fmsub.s f4, f8, f28, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f4, f8, f28, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f4, f8, f28, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f4, f8, f28, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f4, f8, f28, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f4, f8, f28, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0x7ef8654f)
li x1, 0x0a6d647038e3ecda # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f10, 0(x2) # load 0x3f800000 from memory into f10
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f16, 0(x2) # load 0x7ef8654f from memory into f16
li x3, 0x3dd4a1484181a664 # load x3 with value 0x3dd4a1484181a664
sw x3, 0(x2) # store 0x3dd4a1484181a664 in memory
flw f28, 0(x2) # load 0x3dd4a1484181a664 from memory into f28
fmsub.s f1, f10, f16, f28, dyn # perform operation
fmsub.s f1, f10, f16, f28, rdn # perform operation
fmsub.s f1, f10, f16, f28, rmm # perform operation
fmsub.s f1, f10, f16, f28, rne # perform operation
fmsub.s f1, f10, f16, f28, rtz # perform operation
fmsub.s f1, f10, f16, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f1, f10, f16, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f1, f10, f16, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f1, f10, f16, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f1, f10, f16, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f1, f10, f16, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0x813d9ab0)
li x27, 0x1a88f959ae72ec81 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f22, 0(x2) # load 0x3f800000 from memory into f22
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f29, 0(x2) # load 0x813d9ab0 from memory into f29
li x3, 0x45f9eea1da6e1c64 # load x3 with value 0x45f9eea1da6e1c64
sw x3, 0(x2) # store 0x45f9eea1da6e1c64 in memory
flw f17, 0(x2) # load 0x45f9eea1da6e1c64 from memory into f17
fmsub.s f27, f22, f29, f17, dyn # perform operation
fmsub.s f27, f22, f29, f17, rdn # perform operation
fmsub.s f27, f22, f29, f17, rmm # perform operation
fmsub.s f27, f22, f29, f17, rne # perform operation
fmsub.s f27, f22, f29, f17, rtz # perform operation
fmsub.s f27, f22, f29, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f27, f22, f29, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f27, f22, f29, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f27, f22, f29, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f27, f22, f29, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f27, f22, f29, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0x0)
li x19, 0x6ec5d6cb723b2b6a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f28, 0(x2) # load 0xbf800000 from memory into f28
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f11, 0(x2) # load 0x00000000 from memory into f11
li x3, 0x83d4d9d012c4aacd # load x3 with value 0x83d4d9d012c4aacd
sw x3, 0(x2) # store 0x83d4d9d012c4aacd in memory
flw f21, 0(x2) # load 0x83d4d9d012c4aacd from memory into f21
fmsub.s f19, f28, f11, f21, dyn # perform operation
fmsub.s f19, f28, f11, f21, rdn # perform operation
fmsub.s f19, f28, f11, f21, rmm # perform operation
fmsub.s f19, f28, f11, f21, rne # perform operation
fmsub.s f19, f28, f11, f21, rtz # perform operation
fmsub.s f19, f28, f11, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f19, f28, f11, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f19, f28, f11, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f19, f28, f11, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f19, f28, f11, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f19, f28, f11, f21 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0x80000000)
li x19, 0x3a82fcebeddfbbe7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f13, 0(x2) # load 0xbf800000 from memory into f13
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f26, 0(x2) # load 0x80000000 from memory into f26
li x3, 0x71eb091741fab49e # load x3 with value 0x71eb091741fab49e
sw x3, 0(x2) # store 0x71eb091741fab49e in memory
flw f28, 0(x2) # load 0x71eb091741fab49e from memory into f28
fmsub.s f19, f13, f26, f28, dyn # perform operation
fmsub.s f19, f13, f26, f28, rdn # perform operation
fmsub.s f19, f13, f26, f28, rmm # perform operation
fmsub.s f19, f13, f26, f28, rne # perform operation
fmsub.s f19, f13, f26, f28, rtz # perform operation
fmsub.s f19, f13, f26, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f19, f13, f26, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f19, f13, f26, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f19, f13, f26, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f19, f13, f26, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f19, f13, f26, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0x3f800000)
li x31, 0x60e69b372debb995 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f26, 0(x2) # load 0xbf800000 from memory into f26
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f24, 0(x2) # load 0x3f800000 from memory into f24
li x3, 0x4d7c7756fee77c0f # load x3 with value 0x4d7c7756fee77c0f
sw x3, 0(x2) # store 0x4d7c7756fee77c0f in memory
flw f11, 0(x2) # load 0x4d7c7756fee77c0f from memory into f11
fmsub.s f31, f26, f24, f11, dyn # perform operation
fmsub.s f31, f26, f24, f11, rdn # perform operation
fmsub.s f31, f26, f24, f11, rmm # perform operation
fmsub.s f31, f26, f24, f11, rne # perform operation
fmsub.s f31, f26, f24, f11, rtz # perform operation
fmsub.s f31, f26, f24, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f31, f26, f24, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f31, f26, f24, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f31, f26, f24, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f31, f26, f24, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f31, f26, f24, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0xbf800000)
li x9, 0x1b900d672236b201 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f12, 0(x2) # load 0xbf800000 from memory into f12
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f6, 0(x2) # load 0xbf800000 from memory into f6
li x3, 0xf231d2aaf8447c1c # load x3 with value 0xf231d2aaf8447c1c
sw x3, 0(x2) # store 0xf231d2aaf8447c1c in memory
flw f25, 0(x2) # load 0xf231d2aaf8447c1c from memory into f25
fmsub.s f9, f12, f6, f25, dyn # perform operation
fmsub.s f9, f12, f6, f25, rdn # perform operation
fmsub.s f9, f12, f6, f25, rmm # perform operation
fmsub.s f9, f12, f6, f25, rne # perform operation
fmsub.s f9, f12, f6, f25, rtz # perform operation
fmsub.s f9, f12, f6, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f9, f12, f6, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f9, f12, f6, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f9, f12, f6, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f9, f12, f6, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f9, f12, f6, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0x3fc00000)
li x1, 0x24906f278683097e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f26, 0(x2) # load 0xbf800000 from memory into f26
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f13, 0(x2) # load 0x3fc00000 from memory into f13
li x3, 0x73270b98243eb429 # load x3 with value 0x73270b98243eb429
sw x3, 0(x2) # store 0x73270b98243eb429 in memory
flw f9, 0(x2) # load 0x73270b98243eb429 from memory into f9
fmsub.s f1, f26, f13, f9, dyn # perform operation
fmsub.s f1, f26, f13, f9, rdn # perform operation
fmsub.s f1, f26, f13, f9, rmm # perform operation
fmsub.s f1, f26, f13, f9, rne # perform operation
fmsub.s f1, f26, f13, f9, rtz # perform operation
fmsub.s f1, f26, f13, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f1, f26, f13, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f1, f26, f13, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f1, f26, f13, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f1, f26, f13, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f1, f26, f13, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0xbfc00000)
li x23, 0x3bbb22568a6294b1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f17, 0(x2) # load 0xbf800000 from memory into f17
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f8, 0(x2) # load 0xbfc00000 from memory into f8
li x3, 0x66c9af57dca9fdb9 # load x3 with value 0x66c9af57dca9fdb9
sw x3, 0(x2) # store 0x66c9af57dca9fdb9 in memory
flw f31, 0(x2) # load 0x66c9af57dca9fdb9 from memory into f31
fmsub.s f23, f17, f8, f31, dyn # perform operation
fmsub.s f23, f17, f8, f31, rdn # perform operation
fmsub.s f23, f17, f8, f31, rmm # perform operation
fmsub.s f23, f17, f8, f31, rne # perform operation
fmsub.s f23, f17, f8, f31, rtz # perform operation
fmsub.s f23, f17, f8, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f23, f17, f8, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f23, f17, f8, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f23, f17, f8, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f23, f17, f8, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f23, f17, f8, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0x40000000)
li x29, 0x345bea3368bb853d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f2, 0(x2) # load 0xbf800000 from memory into f2
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f26, 0(x2) # load 0x40000000 from memory into f26
li x3, 0x16c748e9a474009a # load x3 with value 0x16c748e9a474009a
sw x3, 0(x2) # store 0x16c748e9a474009a in memory
flw f20, 0(x2) # load 0x16c748e9a474009a from memory into f20
fmsub.s f29, f2, f26, f20, dyn # perform operation
fmsub.s f29, f2, f26, f20, rdn # perform operation
fmsub.s f29, f2, f26, f20, rmm # perform operation
fmsub.s f29, f2, f26, f20, rne # perform operation
fmsub.s f29, f2, f26, f20, rtz # perform operation
fmsub.s f29, f2, f26, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f29, f2, f26, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f29, f2, f26, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f29, f2, f26, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f29, f2, f26, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f29, f2, f26, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0xc0000000)
li x10, 0x8d5698d8e90b36dc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f27, 0(x2) # load 0xbf800000 from memory into f27
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f1, 0(x2) # load 0xc0000000 from memory into f1
li x3, 0xe0aba054309a96 # load x3 with value 0xe0aba054309a96
sw x3, 0(x2) # store 0xe0aba054309a96 in memory
flw f24, 0(x2) # load 0xe0aba054309a96 from memory into f24
fmsub.s f10, f27, f1, f24, dyn # perform operation
fmsub.s f10, f27, f1, f24, rdn # perform operation
fmsub.s f10, f27, f1, f24, rmm # perform operation
fmsub.s f10, f27, f1, f24, rne # perform operation
fmsub.s f10, f27, f1, f24, rtz # perform operation
fmsub.s f10, f27, f1, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f10, f27, f1, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f10, f27, f1, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f10, f27, f1, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f10, f27, f1, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f10, f27, f1, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0x800000)
li x28, 0x167e5f5f3cae8ff9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f22, 0(x2) # load 0xbf800000 from memory into f22
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f27, 0(x2) # load 0x00800000 from memory into f27
li x3, 0xfb08c2b509e9da89 # load x3 with value 0xfb08c2b509e9da89
sw x3, 0(x2) # store 0xfb08c2b509e9da89 in memory
flw f21, 0(x2) # load 0xfb08c2b509e9da89 from memory into f21
fmsub.s f28, f22, f27, f21, dyn # perform operation
fmsub.s f28, f22, f27, f21, rdn # perform operation
fmsub.s f28, f22, f27, f21, rmm # perform operation
fmsub.s f28, f22, f27, f21, rne # perform operation
fmsub.s f28, f22, f27, f21, rtz # perform operation
fmsub.s f28, f22, f27, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f28, f22, f27, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f28, f22, f27, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f28, f22, f27, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f28, f22, f27, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f28, f22, f27, f21 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0x80800000)
li x16, 0x5aa5f6f8f811055d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f18, 0(x2) # load 0xbf800000 from memory into f18
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f22, 0(x2) # load 0x80800000 from memory into f22
li x3, 0xed0d3aab685fd7ee # load x3 with value 0xed0d3aab685fd7ee
sw x3, 0(x2) # store 0xed0d3aab685fd7ee in memory
flw f1, 0(x2) # load 0xed0d3aab685fd7ee from memory into f1
fmsub.s f16, f18, f22, f1, dyn # perform operation
fmsub.s f16, f18, f22, f1, rdn # perform operation
fmsub.s f16, f18, f22, f1, rmm # perform operation
fmsub.s f16, f18, f22, f1, rne # perform operation
fmsub.s f16, f18, f22, f1, rtz # perform operation
fmsub.s f16, f18, f22, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f16, f18, f22, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f16, f18, f22, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f16, f18, f22, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f16, f18, f22, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f16, f18, f22, f1 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0x7f7fffff)
li x15, 0xceecd60cde205fef # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f25, 0(x2) # load 0xbf800000 from memory into f25
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f18, 0(x2) # load 0x7f7fffff from memory into f18
li x3, 0x45c85f92593df0e5 # load x3 with value 0x45c85f92593df0e5
sw x3, 0(x2) # store 0x45c85f92593df0e5 in memory
flw f24, 0(x2) # load 0x45c85f92593df0e5 from memory into f24
fmsub.s f15, f25, f18, f24, dyn # perform operation
fmsub.s f15, f25, f18, f24, rdn # perform operation
fmsub.s f15, f25, f18, f24, rmm # perform operation
fmsub.s f15, f25, f18, f24, rne # perform operation
fmsub.s f15, f25, f18, f24, rtz # perform operation
fmsub.s f15, f25, f18, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f15, f25, f18, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f15, f25, f18, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f15, f25, f18, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f15, f25, f18, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f15, f25, f18, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0xff7fffff)
li x27, 0x335ca5631356df1b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f26, 0(x2) # load 0xbf800000 from memory into f26
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f16, 0(x2) # load 0xff7fffff from memory into f16
li x3, 0x7dd9634bb85ba3b0 # load x3 with value 0x7dd9634bb85ba3b0
sw x3, 0(x2) # store 0x7dd9634bb85ba3b0 in memory
flw f7, 0(x2) # load 0x7dd9634bb85ba3b0 from memory into f7
fmsub.s f27, f26, f16, f7, dyn # perform operation
fmsub.s f27, f26, f16, f7, rdn # perform operation
fmsub.s f27, f26, f16, f7, rmm # perform operation
fmsub.s f27, f26, f16, f7, rne # perform operation
fmsub.s f27, f26, f16, f7, rtz # perform operation
fmsub.s f27, f26, f16, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f27, f26, f16, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f27, f26, f16, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f27, f26, f16, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f27, f26, f16, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f27, f26, f16, f7 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0x7fffff)
li x10, 0x7d368e0a6a9bf422 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f9, 0(x2) # load 0xbf800000 from memory into f9
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f13, 0(x2) # load 0x007fffff from memory into f13
li x3, 0xb718f6e3d5890fc5 # load x3 with value 0xb718f6e3d5890fc5
sw x3, 0(x2) # store 0xb718f6e3d5890fc5 in memory
flw f11, 0(x2) # load 0xb718f6e3d5890fc5 from memory into f11
fmsub.s f10, f9, f13, f11, dyn # perform operation
fmsub.s f10, f9, f13, f11, rdn # perform operation
fmsub.s f10, f9, f13, f11, rmm # perform operation
fmsub.s f10, f9, f13, f11, rne # perform operation
fmsub.s f10, f9, f13, f11, rtz # perform operation
fmsub.s f10, f9, f13, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f10, f9, f13, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f10, f9, f13, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f10, f9, f13, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f10, f9, f13, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f10, f9, f13, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0x807fffff)
li x18, 0x5b4c22fa5777ab11 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f17, 0(x2) # load 0xbf800000 from memory into f17
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f21, 0(x2) # load 0x807fffff from memory into f21
li x3, 0x3afd8abbd9dc02e3 # load x3 with value 0x3afd8abbd9dc02e3
sw x3, 0(x2) # store 0x3afd8abbd9dc02e3 in memory
flw f4, 0(x2) # load 0x3afd8abbd9dc02e3 from memory into f4
fmsub.s f18, f17, f21, f4, dyn # perform operation
fmsub.s f18, f17, f21, f4, rdn # perform operation
fmsub.s f18, f17, f21, f4, rmm # perform operation
fmsub.s f18, f17, f21, f4, rne # perform operation
fmsub.s f18, f17, f21, f4, rtz # perform operation
fmsub.s f18, f17, f21, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f18, f17, f21, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f18, f17, f21, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f18, f17, f21, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f18, f17, f21, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f18, f17, f21, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0x400000)
li x5, 0x62d2068ce08c8dac # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f1, 0(x2) # load 0xbf800000 from memory into f1
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f21, 0(x2) # load 0x00400000 from memory into f21
li x3, 0x8c732f6628cebe2e # load x3 with value 0x8c732f6628cebe2e
sw x3, 0(x2) # store 0x8c732f6628cebe2e in memory
flw f11, 0(x2) # load 0x8c732f6628cebe2e from memory into f11
fmsub.s f5, f1, f21, f11, dyn # perform operation
fmsub.s f5, f1, f21, f11, rdn # perform operation
fmsub.s f5, f1, f21, f11, rmm # perform operation
fmsub.s f5, f1, f21, f11, rne # perform operation
fmsub.s f5, f1, f21, f11, rtz # perform operation
fmsub.s f5, f1, f21, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f5, f1, f21, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f5, f1, f21, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f5, f1, f21, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f5, f1, f21, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f5, f1, f21, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0x80400000)
li x12, 0x251db6267b1d999e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f16, 0(x2) # load 0xbf800000 from memory into f16
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f1, 0(x2) # load 0x80400000 from memory into f1
li x3, 0xcbfb1ee67c256717 # load x3 with value 0xcbfb1ee67c256717
sw x3, 0(x2) # store 0xcbfb1ee67c256717 in memory
flw f26, 0(x2) # load 0xcbfb1ee67c256717 from memory into f26
fmsub.s f12, f16, f1, f26, dyn # perform operation
fmsub.s f12, f16, f1, f26, rdn # perform operation
fmsub.s f12, f16, f1, f26, rmm # perform operation
fmsub.s f12, f16, f1, f26, rne # perform operation
fmsub.s f12, f16, f1, f26, rtz # perform operation
fmsub.s f12, f16, f1, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f12, f16, f1, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f12, f16, f1, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f12, f16, f1, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f12, f16, f1, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f12, f16, f1, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0x1)
li x31, 0xd0f4d576682e951c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f18, 0(x2) # load 0xbf800000 from memory into f18
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f5, 0(x2) # load 0x00000001 from memory into f5
li x3, 0xbe45e29df5c7c8d # load x3 with value 0xbe45e29df5c7c8d
sw x3, 0(x2) # store 0xbe45e29df5c7c8d in memory
flw f21, 0(x2) # load 0xbe45e29df5c7c8d from memory into f21
fmsub.s f31, f18, f5, f21, dyn # perform operation
fmsub.s f31, f18, f5, f21, rdn # perform operation
fmsub.s f31, f18, f5, f21, rmm # perform operation
fmsub.s f31, f18, f5, f21, rne # perform operation
fmsub.s f31, f18, f5, f21, rtz # perform operation
fmsub.s f31, f18, f5, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f31, f18, f5, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f31, f18, f5, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f31, f18, f5, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f31, f18, f5, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f31, f18, f5, f21 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0x80000001)
li x7, 0x1aa299da7b744d37 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f9, 0(x2) # load 0xbf800000 from memory into f9
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f22, 0(x2) # load 0x80000001 from memory into f22
li x3, 0x17207ad2e386cde2 # load x3 with value 0x17207ad2e386cde2
sw x3, 0(x2) # store 0x17207ad2e386cde2 in memory
flw f2, 0(x2) # load 0x17207ad2e386cde2 from memory into f2
fmsub.s f7, f9, f22, f2, dyn # perform operation
fmsub.s f7, f9, f22, f2, rdn # perform operation
fmsub.s f7, f9, f22, f2, rmm # perform operation
fmsub.s f7, f9, f22, f2, rne # perform operation
fmsub.s f7, f9, f22, f2, rtz # perform operation
fmsub.s f7, f9, f22, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f7, f9, f22, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f7, f9, f22, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f7, f9, f22, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f7, f9, f22, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f7, f9, f22, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0x7f800000)
li x21, 0xe40a59c5ba37dc16 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f30, 0(x2) # load 0xbf800000 from memory into f30
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f10, 0(x2) # load 0x7f800000 from memory into f10
li x3, 0xceaffb1cf8b1353e # load x3 with value 0xceaffb1cf8b1353e
sw x3, 0(x2) # store 0xceaffb1cf8b1353e in memory
flw f29, 0(x2) # load 0xceaffb1cf8b1353e from memory into f29
fmsub.s f21, f30, f10, f29, dyn # perform operation
fmsub.s f21, f30, f10, f29, rdn # perform operation
fmsub.s f21, f30, f10, f29, rmm # perform operation
fmsub.s f21, f30, f10, f29, rne # perform operation
fmsub.s f21, f30, f10, f29, rtz # perform operation
fmsub.s f21, f30, f10, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f21, f30, f10, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f21, f30, f10, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f21, f30, f10, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f21, f30, f10, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f21, f30, f10, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0xff800000)
li x14, 0x600f0a59e7c8cfcc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f24, 0(x2) # load 0xbf800000 from memory into f24
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f21, 0(x2) # load 0xff800000 from memory into f21
li x3, 0xe42df1b864d39d4c # load x3 with value 0xe42df1b864d39d4c
sw x3, 0(x2) # store 0xe42df1b864d39d4c in memory
flw f5, 0(x2) # load 0xe42df1b864d39d4c from memory into f5
fmsub.s f14, f24, f21, f5, dyn # perform operation
fmsub.s f14, f24, f21, f5, rdn # perform operation
fmsub.s f14, f24, f21, f5, rmm # perform operation
fmsub.s f14, f24, f21, f5, rne # perform operation
fmsub.s f14, f24, f21, f5, rtz # perform operation
fmsub.s f14, f24, f21, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f14, f24, f21, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f14, f24, f21, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f14, f24, f21, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f14, f24, f21, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f14, f24, f21, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0x7fc00000)
li x11, 0x9c8c5c498990ece7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f1, 0(x2) # load 0xbf800000 from memory into f1
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f17, 0(x2) # load 0x7fc00000 from memory into f17
li x3, 0xb9fe8cb8ab578b7 # load x3 with value 0xb9fe8cb8ab578b7
sw x3, 0(x2) # store 0xb9fe8cb8ab578b7 in memory
flw f22, 0(x2) # load 0xb9fe8cb8ab578b7 from memory into f22
fmsub.s f11, f1, f17, f22, dyn # perform operation
fmsub.s f11, f1, f17, f22, rdn # perform operation
fmsub.s f11, f1, f17, f22, rmm # perform operation
fmsub.s f11, f1, f17, f22, rne # perform operation
fmsub.s f11, f1, f17, f22, rtz # perform operation
fmsub.s f11, f1, f17, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f11, f1, f17, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f11, f1, f17, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f11, f1, f17, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f11, f1, f17, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f11, f1, f17, f22 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0x7fffffff)
li x23, 0x6d54417cd69952ec # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f29, 0(x2) # load 0xbf800000 from memory into f29
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f6, 0(x2) # load 0x7fffffff from memory into f6
li x3, 0xe5e6514045d979aa # load x3 with value 0xe5e6514045d979aa
sw x3, 0(x2) # store 0xe5e6514045d979aa in memory
flw f22, 0(x2) # load 0xe5e6514045d979aa from memory into f22
fmsub.s f23, f29, f6, f22, dyn # perform operation
fmsub.s f23, f29, f6, f22, rdn # perform operation
fmsub.s f23, f29, f6, f22, rmm # perform operation
fmsub.s f23, f29, f6, f22, rne # perform operation
fmsub.s f23, f29, f6, f22, rtz # perform operation
fmsub.s f23, f29, f6, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f23, f29, f6, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f23, f29, f6, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f23, f29, f6, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f23, f29, f6, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f23, f29, f6, f22 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0x7f800001)
li x27, 0x82c58cb09df3844e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f1, 0(x2) # load 0xbf800000 from memory into f1
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f13, 0(x2) # load 0x7f800001 from memory into f13
li x3, 0xbe0b08bf3471de36 # load x3 with value 0xbe0b08bf3471de36
sw x3, 0(x2) # store 0xbe0b08bf3471de36 in memory
flw f17, 0(x2) # load 0xbe0b08bf3471de36 from memory into f17
fmsub.s f27, f1, f13, f17, dyn # perform operation
fmsub.s f27, f1, f13, f17, rdn # perform operation
fmsub.s f27, f1, f13, f17, rmm # perform operation
fmsub.s f27, f1, f13, f17, rne # perform operation
fmsub.s f27, f1, f13, f17, rtz # perform operation
fmsub.s f27, f1, f13, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f27, f1, f13, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f27, f1, f13, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f27, f1, f13, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f27, f1, f13, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f27, f1, f13, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0x7fbfffff)
li x17, 0xb835b89aab505eed # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f8, 0(x2) # load 0xbf800000 from memory into f8
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f4, 0(x2) # load 0x7fbfffff from memory into f4
li x3, 0xa32c3e5a45b5e1c9 # load x3 with value 0xa32c3e5a45b5e1c9
sw x3, 0(x2) # store 0xa32c3e5a45b5e1c9 in memory
flw f5, 0(x2) # load 0xa32c3e5a45b5e1c9 from memory into f5
fmsub.s f17, f8, f4, f5, dyn # perform operation
fmsub.s f17, f8, f4, f5, rdn # perform operation
fmsub.s f17, f8, f4, f5, rmm # perform operation
fmsub.s f17, f8, f4, f5, rne # perform operation
fmsub.s f17, f8, f4, f5, rtz # perform operation
fmsub.s f17, f8, f4, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f17, f8, f4, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f17, f8, f4, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f17, f8, f4, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f17, f8, f4, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f17, f8, f4, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0x7ef8654f)
li x7, 0xe56e672e9530f551 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f6, 0(x2) # load 0xbf800000 from memory into f6
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f1, 0(x2) # load 0x7ef8654f from memory into f1
li x3, 0x1173e6db6fff0b94 # load x3 with value 0x1173e6db6fff0b94
sw x3, 0(x2) # store 0x1173e6db6fff0b94 in memory
flw f11, 0(x2) # load 0x1173e6db6fff0b94 from memory into f11
fmsub.s f7, f6, f1, f11, dyn # perform operation
fmsub.s f7, f6, f1, f11, rdn # perform operation
fmsub.s f7, f6, f1, f11, rmm # perform operation
fmsub.s f7, f6, f1, f11, rne # perform operation
fmsub.s f7, f6, f1, f11, rtz # perform operation
fmsub.s f7, f6, f1, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f7, f6, f1, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f7, f6, f1, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f7, f6, f1, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f7, f6, f1, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f7, f6, f1, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0x813d9ab0)
li x4, 0xa862252817532052 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f12, 0(x2) # load 0xbf800000 from memory into f12
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f6, 0(x2) # load 0x813d9ab0 from memory into f6
li x3, 0xdd60a53944caa2b1 # load x3 with value 0xdd60a53944caa2b1
sw x3, 0(x2) # store 0xdd60a53944caa2b1 in memory
flw f1, 0(x2) # load 0xdd60a53944caa2b1 from memory into f1
fmsub.s f4, f12, f6, f1, dyn # perform operation
fmsub.s f4, f12, f6, f1, rdn # perform operation
fmsub.s f4, f12, f6, f1, rmm # perform operation
fmsub.s f4, f12, f6, f1, rne # perform operation
fmsub.s f4, f12, f6, f1, rtz # perform operation
fmsub.s f4, f12, f6, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f4, f12, f6, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f4, f12, f6, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f4, f12, f6, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f4, f12, f6, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f4, f12, f6, f1 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0x0)
li x7, 0xe655a0e2c9c5a685 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f29, 0(x2) # load 0x3fc00000 from memory into f29
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f11, 0(x2) # load 0x00000000 from memory into f11
li x3, 0xa0cb1e06814c49e2 # load x3 with value 0xa0cb1e06814c49e2
sw x3, 0(x2) # store 0xa0cb1e06814c49e2 in memory
flw f25, 0(x2) # load 0xa0cb1e06814c49e2 from memory into f25
fmsub.s f7, f29, f11, f25, dyn # perform operation
fmsub.s f7, f29, f11, f25, rdn # perform operation
fmsub.s f7, f29, f11, f25, rmm # perform operation
fmsub.s f7, f29, f11, f25, rne # perform operation
fmsub.s f7, f29, f11, f25, rtz # perform operation
fmsub.s f7, f29, f11, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f7, f29, f11, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f7, f29, f11, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f7, f29, f11, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f7, f29, f11, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f7, f29, f11, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0x80000000)
li x10, 0x0abe67abbe2e1b13 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f4, 0(x2) # load 0x3fc00000 from memory into f4
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f11, 0(x2) # load 0x80000000 from memory into f11
li x3, 0x94c7310863c0b5d4 # load x3 with value 0x94c7310863c0b5d4
sw x3, 0(x2) # store 0x94c7310863c0b5d4 in memory
flw f16, 0(x2) # load 0x94c7310863c0b5d4 from memory into f16
fmsub.s f10, f4, f11, f16, dyn # perform operation
fmsub.s f10, f4, f11, f16, rdn # perform operation
fmsub.s f10, f4, f11, f16, rmm # perform operation
fmsub.s f10, f4, f11, f16, rne # perform operation
fmsub.s f10, f4, f11, f16, rtz # perform operation
fmsub.s f10, f4, f11, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f10, f4, f11, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f10, f4, f11, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f10, f4, f11, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f10, f4, f11, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f10, f4, f11, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0x3f800000)
li x10, 0x3ab7c44d4f90c5e0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f14, 0(x2) # load 0x3fc00000 from memory into f14
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f23, 0(x2) # load 0x3f800000 from memory into f23
li x3, 0x7dd038b5109e7cf8 # load x3 with value 0x7dd038b5109e7cf8
sw x3, 0(x2) # store 0x7dd038b5109e7cf8 in memory
flw f7, 0(x2) # load 0x7dd038b5109e7cf8 from memory into f7
fmsub.s f10, f14, f23, f7, dyn # perform operation
fmsub.s f10, f14, f23, f7, rdn # perform operation
fmsub.s f10, f14, f23, f7, rmm # perform operation
fmsub.s f10, f14, f23, f7, rne # perform operation
fmsub.s f10, f14, f23, f7, rtz # perform operation
fmsub.s f10, f14, f23, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f10, f14, f23, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f10, f14, f23, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f10, f14, f23, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f10, f14, f23, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f10, f14, f23, f7 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0xbf800000)
li x17, 0x69d667b8b50db126 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f3, 0(x2) # load 0x3fc00000 from memory into f3
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f22, 0(x2) # load 0xbf800000 from memory into f22
li x3, 0x2ae419df5d54058a # load x3 with value 0x2ae419df5d54058a
sw x3, 0(x2) # store 0x2ae419df5d54058a in memory
flw f19, 0(x2) # load 0x2ae419df5d54058a from memory into f19
fmsub.s f17, f3, f22, f19, dyn # perform operation
fmsub.s f17, f3, f22, f19, rdn # perform operation
fmsub.s f17, f3, f22, f19, rmm # perform operation
fmsub.s f17, f3, f22, f19, rne # perform operation
fmsub.s f17, f3, f22, f19, rtz # perform operation
fmsub.s f17, f3, f22, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f17, f3, f22, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f17, f3, f22, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f17, f3, f22, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f17, f3, f22, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f17, f3, f22, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0x3fc00000)
li x8, 0x7e588b378c2bf23f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f11, 0(x2) # load 0x3fc00000 from memory into f11
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f17, 0(x2) # load 0x3fc00000 from memory into f17
li x3, 0xc70bdaba18c2165a # load x3 with value 0xc70bdaba18c2165a
sw x3, 0(x2) # store 0xc70bdaba18c2165a in memory
flw f31, 0(x2) # load 0xc70bdaba18c2165a from memory into f31
fmsub.s f8, f11, f17, f31, dyn # perform operation
fmsub.s f8, f11, f17, f31, rdn # perform operation
fmsub.s f8, f11, f17, f31, rmm # perform operation
fmsub.s f8, f11, f17, f31, rne # perform operation
fmsub.s f8, f11, f17, f31, rtz # perform operation
fmsub.s f8, f11, f17, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f8, f11, f17, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f8, f11, f17, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f8, f11, f17, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f8, f11, f17, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f8, f11, f17, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0xbfc00000)
li x15, 0x5000308755a4c98b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f1, 0(x2) # load 0x3fc00000 from memory into f1
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f14, 0(x2) # load 0xbfc00000 from memory into f14
li x3, 0xb89137bf6dd98679 # load x3 with value 0xb89137bf6dd98679
sw x3, 0(x2) # store 0xb89137bf6dd98679 in memory
flw f7, 0(x2) # load 0xb89137bf6dd98679 from memory into f7
fmsub.s f15, f1, f14, f7, dyn # perform operation
fmsub.s f15, f1, f14, f7, rdn # perform operation
fmsub.s f15, f1, f14, f7, rmm # perform operation
fmsub.s f15, f1, f14, f7, rne # perform operation
fmsub.s f15, f1, f14, f7, rtz # perform operation
fmsub.s f15, f1, f14, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f15, f1, f14, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f15, f1, f14, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f15, f1, f14, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f15, f1, f14, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f15, f1, f14, f7 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0x40000000)
li x22, 0x1f62937964763879 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f7, 0(x2) # load 0x3fc00000 from memory into f7
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f8, 0(x2) # load 0x40000000 from memory into f8
li x3, 0xb4ae4325eef49bd6 # load x3 with value 0xb4ae4325eef49bd6
sw x3, 0(x2) # store 0xb4ae4325eef49bd6 in memory
flw f27, 0(x2) # load 0xb4ae4325eef49bd6 from memory into f27
fmsub.s f22, f7, f8, f27, dyn # perform operation
fmsub.s f22, f7, f8, f27, rdn # perform operation
fmsub.s f22, f7, f8, f27, rmm # perform operation
fmsub.s f22, f7, f8, f27, rne # perform operation
fmsub.s f22, f7, f8, f27, rtz # perform operation
fmsub.s f22, f7, f8, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f22, f7, f8, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f22, f7, f8, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f22, f7, f8, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f22, f7, f8, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f22, f7, f8, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0xc0000000)
li x23, 0xc3c97658eef37741 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f21, 0(x2) # load 0x3fc00000 from memory into f21
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f3, 0(x2) # load 0xc0000000 from memory into f3
li x3, 0x7b1b99739dc4396 # load x3 with value 0x7b1b99739dc4396
sw x3, 0(x2) # store 0x7b1b99739dc4396 in memory
flw f19, 0(x2) # load 0x7b1b99739dc4396 from memory into f19
fmsub.s f23, f21, f3, f19, dyn # perform operation
fmsub.s f23, f21, f3, f19, rdn # perform operation
fmsub.s f23, f21, f3, f19, rmm # perform operation
fmsub.s f23, f21, f3, f19, rne # perform operation
fmsub.s f23, f21, f3, f19, rtz # perform operation
fmsub.s f23, f21, f3, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f23, f21, f3, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f23, f21, f3, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f23, f21, f3, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f23, f21, f3, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f23, f21, f3, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0x800000)
li x4, 0xa42cb9fbe19903a1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f23, 0(x2) # load 0x3fc00000 from memory into f23
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f26, 0(x2) # load 0x00800000 from memory into f26
li x3, 0xe0f7b10b124b37c4 # load x3 with value 0xe0f7b10b124b37c4
sw x3, 0(x2) # store 0xe0f7b10b124b37c4 in memory
flw f7, 0(x2) # load 0xe0f7b10b124b37c4 from memory into f7
fmsub.s f4, f23, f26, f7, dyn # perform operation
fmsub.s f4, f23, f26, f7, rdn # perform operation
fmsub.s f4, f23, f26, f7, rmm # perform operation
fmsub.s f4, f23, f26, f7, rne # perform operation
fmsub.s f4, f23, f26, f7, rtz # perform operation
fmsub.s f4, f23, f26, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f4, f23, f26, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f4, f23, f26, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f4, f23, f26, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f4, f23, f26, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f4, f23, f26, f7 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0x80800000)
li x30, 0x90e734172e4fa7e4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f1, 0(x2) # load 0x3fc00000 from memory into f1
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f27, 0(x2) # load 0x80800000 from memory into f27
li x3, 0xb9af9c467659ebbe # load x3 with value 0xb9af9c467659ebbe
sw x3, 0(x2) # store 0xb9af9c467659ebbe in memory
flw f4, 0(x2) # load 0xb9af9c467659ebbe from memory into f4
fmsub.s f30, f1, f27, f4, dyn # perform operation
fmsub.s f30, f1, f27, f4, rdn # perform operation
fmsub.s f30, f1, f27, f4, rmm # perform operation
fmsub.s f30, f1, f27, f4, rne # perform operation
fmsub.s f30, f1, f27, f4, rtz # perform operation
fmsub.s f30, f1, f27, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f30, f1, f27, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f30, f1, f27, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f30, f1, f27, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f30, f1, f27, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f30, f1, f27, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0x7f7fffff)
li x18, 0x68937f54b4f878f9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f9, 0(x2) # load 0x3fc00000 from memory into f9
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f26, 0(x2) # load 0x7f7fffff from memory into f26
li x3, 0xaf7c704c7f1f9c73 # load x3 with value 0xaf7c704c7f1f9c73
sw x3, 0(x2) # store 0xaf7c704c7f1f9c73 in memory
flw f29, 0(x2) # load 0xaf7c704c7f1f9c73 from memory into f29
fmsub.s f18, f9, f26, f29, dyn # perform operation
fmsub.s f18, f9, f26, f29, rdn # perform operation
fmsub.s f18, f9, f26, f29, rmm # perform operation
fmsub.s f18, f9, f26, f29, rne # perform operation
fmsub.s f18, f9, f26, f29, rtz # perform operation
fmsub.s f18, f9, f26, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f18, f9, f26, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f18, f9, f26, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f18, f9, f26, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f18, f9, f26, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f18, f9, f26, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0xff7fffff)
li x20, 0x714aaec2d8b4707a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f30, 0(x2) # load 0x3fc00000 from memory into f30
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f9, 0(x2) # load 0xff7fffff from memory into f9
li x3, 0xbf2b9bc57c0e09ad # load x3 with value 0xbf2b9bc57c0e09ad
sw x3, 0(x2) # store 0xbf2b9bc57c0e09ad in memory
flw f2, 0(x2) # load 0xbf2b9bc57c0e09ad from memory into f2
fmsub.s f20, f30, f9, f2, dyn # perform operation
fmsub.s f20, f30, f9, f2, rdn # perform operation
fmsub.s f20, f30, f9, f2, rmm # perform operation
fmsub.s f20, f30, f9, f2, rne # perform operation
fmsub.s f20, f30, f9, f2, rtz # perform operation
fmsub.s f20, f30, f9, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f20, f30, f9, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f20, f30, f9, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f20, f30, f9, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f20, f30, f9, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f20, f30, f9, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0x7fffff)
li x16, 0x56bf3248f64362fe # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f26, 0(x2) # load 0x3fc00000 from memory into f26
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f13, 0(x2) # load 0x007fffff from memory into f13
li x3, 0xd59dfdc898b02abe # load x3 with value 0xd59dfdc898b02abe
sw x3, 0(x2) # store 0xd59dfdc898b02abe in memory
flw f14, 0(x2) # load 0xd59dfdc898b02abe from memory into f14
fmsub.s f16, f26, f13, f14, dyn # perform operation
fmsub.s f16, f26, f13, f14, rdn # perform operation
fmsub.s f16, f26, f13, f14, rmm # perform operation
fmsub.s f16, f26, f13, f14, rne # perform operation
fmsub.s f16, f26, f13, f14, rtz # perform operation
fmsub.s f16, f26, f13, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f16, f26, f13, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f16, f26, f13, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f16, f26, f13, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f16, f26, f13, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f16, f26, f13, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0x807fffff)
li x16, 0x32b83e4d8f7f0b6b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f25, 0(x2) # load 0x3fc00000 from memory into f25
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f28, 0(x2) # load 0x807fffff from memory into f28
li x3, 0xb0830ab933bddb31 # load x3 with value 0xb0830ab933bddb31
sw x3, 0(x2) # store 0xb0830ab933bddb31 in memory
flw f5, 0(x2) # load 0xb0830ab933bddb31 from memory into f5
fmsub.s f16, f25, f28, f5, dyn # perform operation
fmsub.s f16, f25, f28, f5, rdn # perform operation
fmsub.s f16, f25, f28, f5, rmm # perform operation
fmsub.s f16, f25, f28, f5, rne # perform operation
fmsub.s f16, f25, f28, f5, rtz # perform operation
fmsub.s f16, f25, f28, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f16, f25, f28, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f16, f25, f28, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f16, f25, f28, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f16, f25, f28, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f16, f25, f28, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0x400000)
li x2, 0x9f2497a9f2c0e5cb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f7, 0(x2) # load 0x3fc00000 from memory into f7
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f22, 0(x2) # load 0x00400000 from memory into f22
li x3, 0x48b9957c9ee7ba90 # load x3 with value 0x48b9957c9ee7ba90
sw x3, 0(x2) # store 0x48b9957c9ee7ba90 in memory
flw f1, 0(x2) # load 0x48b9957c9ee7ba90 from memory into f1
fmsub.s f2, f7, f22, f1, dyn # perform operation
fmsub.s f2, f7, f22, f1, rdn # perform operation
fmsub.s f2, f7, f22, f1, rmm # perform operation
fmsub.s f2, f7, f22, f1, rne # perform operation
fmsub.s f2, f7, f22, f1, rtz # perform operation
fmsub.s f2, f7, f22, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f2, f7, f22, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f2, f7, f22, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f2, f7, f22, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f2, f7, f22, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f2, f7, f22, f1 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0x80400000)
li x9, 0x63b1a7c35a2d8a01 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f2, 0(x2) # load 0x3fc00000 from memory into f2
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f12, 0(x2) # load 0x80400000 from memory into f12
li x3, 0x1379bb4bc63c95f3 # load x3 with value 0x1379bb4bc63c95f3
sw x3, 0(x2) # store 0x1379bb4bc63c95f3 in memory
flw f19, 0(x2) # load 0x1379bb4bc63c95f3 from memory into f19
fmsub.s f9, f2, f12, f19, dyn # perform operation
fmsub.s f9, f2, f12, f19, rdn # perform operation
fmsub.s f9, f2, f12, f19, rmm # perform operation
fmsub.s f9, f2, f12, f19, rne # perform operation
fmsub.s f9, f2, f12, f19, rtz # perform operation
fmsub.s f9, f2, f12, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f9, f2, f12, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f9, f2, f12, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f9, f2, f12, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f9, f2, f12, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f9, f2, f12, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0x1)
li x19, 0xf13281919e697b97 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f24, 0(x2) # load 0x3fc00000 from memory into f24
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f17, 0(x2) # load 0x00000001 from memory into f17
li x3, 0x470d36414970de2a # load x3 with value 0x470d36414970de2a
sw x3, 0(x2) # store 0x470d36414970de2a in memory
flw f12, 0(x2) # load 0x470d36414970de2a from memory into f12
fmsub.s f19, f24, f17, f12, dyn # perform operation
fmsub.s f19, f24, f17, f12, rdn # perform operation
fmsub.s f19, f24, f17, f12, rmm # perform operation
fmsub.s f19, f24, f17, f12, rne # perform operation
fmsub.s f19, f24, f17, f12, rtz # perform operation
fmsub.s f19, f24, f17, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f19, f24, f17, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f19, f24, f17, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f19, f24, f17, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f19, f24, f17, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f19, f24, f17, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0x80000001)
li x14, 0x825c6ba060f174f3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f29, 0(x2) # load 0x3fc00000 from memory into f29
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f22, 0(x2) # load 0x80000001 from memory into f22
li x3, 0xbfbb9b2ee4611d1f # load x3 with value 0xbfbb9b2ee4611d1f
sw x3, 0(x2) # store 0xbfbb9b2ee4611d1f in memory
flw f9, 0(x2) # load 0xbfbb9b2ee4611d1f from memory into f9
fmsub.s f14, f29, f22, f9, dyn # perform operation
fmsub.s f14, f29, f22, f9, rdn # perform operation
fmsub.s f14, f29, f22, f9, rmm # perform operation
fmsub.s f14, f29, f22, f9, rne # perform operation
fmsub.s f14, f29, f22, f9, rtz # perform operation
fmsub.s f14, f29, f22, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f14, f29, f22, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f14, f29, f22, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f14, f29, f22, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f14, f29, f22, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f14, f29, f22, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0x7f800000)
li x18, 0x01e49637e1b9110d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f14, 0(x2) # load 0x3fc00000 from memory into f14
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f16, 0(x2) # load 0x7f800000 from memory into f16
li x3, 0x136b0c43140ba107 # load x3 with value 0x136b0c43140ba107
sw x3, 0(x2) # store 0x136b0c43140ba107 in memory
flw f26, 0(x2) # load 0x136b0c43140ba107 from memory into f26
fmsub.s f18, f14, f16, f26, dyn # perform operation
fmsub.s f18, f14, f16, f26, rdn # perform operation
fmsub.s f18, f14, f16, f26, rmm # perform operation
fmsub.s f18, f14, f16, f26, rne # perform operation
fmsub.s f18, f14, f16, f26, rtz # perform operation
fmsub.s f18, f14, f16, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f18, f14, f16, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f18, f14, f16, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f18, f14, f16, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f18, f14, f16, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f18, f14, f16, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0xff800000)
li x22, 0x240b738a424343e0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f30, 0(x2) # load 0x3fc00000 from memory into f30
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f25, 0(x2) # load 0xff800000 from memory into f25
li x3, 0xdc602e2af1c11b78 # load x3 with value 0xdc602e2af1c11b78
sw x3, 0(x2) # store 0xdc602e2af1c11b78 in memory
flw f4, 0(x2) # load 0xdc602e2af1c11b78 from memory into f4
fmsub.s f22, f30, f25, f4, dyn # perform operation
fmsub.s f22, f30, f25, f4, rdn # perform operation
fmsub.s f22, f30, f25, f4, rmm # perform operation
fmsub.s f22, f30, f25, f4, rne # perform operation
fmsub.s f22, f30, f25, f4, rtz # perform operation
fmsub.s f22, f30, f25, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f22, f30, f25, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f22, f30, f25, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f22, f30, f25, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f22, f30, f25, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f22, f30, f25, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0x7fc00000)
li x6, 0xeb47f3a4a078cd92 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f4, 0(x2) # load 0x3fc00000 from memory into f4
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f7, 0(x2) # load 0x7fc00000 from memory into f7
li x3, 0xea4d676a97ab426c # load x3 with value 0xea4d676a97ab426c
sw x3, 0(x2) # store 0xea4d676a97ab426c in memory
flw f22, 0(x2) # load 0xea4d676a97ab426c from memory into f22
fmsub.s f6, f4, f7, f22, dyn # perform operation
fmsub.s f6, f4, f7, f22, rdn # perform operation
fmsub.s f6, f4, f7, f22, rmm # perform operation
fmsub.s f6, f4, f7, f22, rne # perform operation
fmsub.s f6, f4, f7, f22, rtz # perform operation
fmsub.s f6, f4, f7, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f6, f4, f7, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f6, f4, f7, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f6, f4, f7, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f6, f4, f7, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f6, f4, f7, f22 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0x7fffffff)
li x20, 0xee747c76a7314235 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f6, 0(x2) # load 0x3fc00000 from memory into f6
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f30, 0(x2) # load 0x7fffffff from memory into f30
li x3, 0x18f5c00e52696a4a # load x3 with value 0x18f5c00e52696a4a
sw x3, 0(x2) # store 0x18f5c00e52696a4a in memory
flw f13, 0(x2) # load 0x18f5c00e52696a4a from memory into f13
fmsub.s f20, f6, f30, f13, dyn # perform operation
fmsub.s f20, f6, f30, f13, rdn # perform operation
fmsub.s f20, f6, f30, f13, rmm # perform operation
fmsub.s f20, f6, f30, f13, rne # perform operation
fmsub.s f20, f6, f30, f13, rtz # perform operation
fmsub.s f20, f6, f30, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f20, f6, f30, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f20, f6, f30, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f20, f6, f30, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f20, f6, f30, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f20, f6, f30, f13 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0x7f800001)
li x28, 0xaede76761017afde # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f3, 0(x2) # load 0x3fc00000 from memory into f3
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f13, 0(x2) # load 0x7f800001 from memory into f13
li x3, 0x135537d208e53b33 # load x3 with value 0x135537d208e53b33
sw x3, 0(x2) # store 0x135537d208e53b33 in memory
flw f22, 0(x2) # load 0x135537d208e53b33 from memory into f22
fmsub.s f28, f3, f13, f22, dyn # perform operation
fmsub.s f28, f3, f13, f22, rdn # perform operation
fmsub.s f28, f3, f13, f22, rmm # perform operation
fmsub.s f28, f3, f13, f22, rne # perform operation
fmsub.s f28, f3, f13, f22, rtz # perform operation
fmsub.s f28, f3, f13, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f28, f3, f13, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f28, f3, f13, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f28, f3, f13, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f28, f3, f13, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f28, f3, f13, f22 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0x7fbfffff)
li x31, 0xf50efa124b11f97c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f15, 0(x2) # load 0x3fc00000 from memory into f15
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f25, 0(x2) # load 0x7fbfffff from memory into f25
li x3, 0x3c21e0ff989405f1 # load x3 with value 0x3c21e0ff989405f1
sw x3, 0(x2) # store 0x3c21e0ff989405f1 in memory
flw f18, 0(x2) # load 0x3c21e0ff989405f1 from memory into f18
fmsub.s f31, f15, f25, f18, dyn # perform operation
fmsub.s f31, f15, f25, f18, rdn # perform operation
fmsub.s f31, f15, f25, f18, rmm # perform operation
fmsub.s f31, f15, f25, f18, rne # perform operation
fmsub.s f31, f15, f25, f18, rtz # perform operation
fmsub.s f31, f15, f25, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f31, f15, f25, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f31, f15, f25, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f31, f15, f25, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f31, f15, f25, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f31, f15, f25, f18 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0x7ef8654f)
li x16, 0x22ab63966b3ae5ca # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f23, 0(x2) # load 0x3fc00000 from memory into f23
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f9, 0(x2) # load 0x7ef8654f from memory into f9
li x3, 0x60555ed5c8555eaf # load x3 with value 0x60555ed5c8555eaf
sw x3, 0(x2) # store 0x60555ed5c8555eaf in memory
flw f29, 0(x2) # load 0x60555ed5c8555eaf from memory into f29
fmsub.s f16, f23, f9, f29, dyn # perform operation
fmsub.s f16, f23, f9, f29, rdn # perform operation
fmsub.s f16, f23, f9, f29, rmm # perform operation
fmsub.s f16, f23, f9, f29, rne # perform operation
fmsub.s f16, f23, f9, f29, rtz # perform operation
fmsub.s f16, f23, f9, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f16, f23, f9, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f16, f23, f9, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f16, f23, f9, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f16, f23, f9, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f16, f23, f9, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0x813d9ab0)
li x21, 0xe69b638fbbcc4a95 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f4, 0(x2) # load 0x3fc00000 from memory into f4
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f27, 0(x2) # load 0x813d9ab0 from memory into f27
li x3, 0x6b95d8a868705037 # load x3 with value 0x6b95d8a868705037
sw x3, 0(x2) # store 0x6b95d8a868705037 in memory
flw f30, 0(x2) # load 0x6b95d8a868705037 from memory into f30
fmsub.s f21, f4, f27, f30, dyn # perform operation
fmsub.s f21, f4, f27, f30, rdn # perform operation
fmsub.s f21, f4, f27, f30, rmm # perform operation
fmsub.s f21, f4, f27, f30, rne # perform operation
fmsub.s f21, f4, f27, f30, rtz # perform operation
fmsub.s f21, f4, f27, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f21, f4, f27, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f21, f4, f27, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f21, f4, f27, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f21, f4, f27, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f21, f4, f27, f30 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0x0)
li x16, 0x7b421f857422e4c0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f10, 0(x2) # load 0xbfc00000 from memory into f10
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f3, 0(x2) # load 0x00000000 from memory into f3
li x3, 0x4c4d7c055561c7e2 # load x3 with value 0x4c4d7c055561c7e2
sw x3, 0(x2) # store 0x4c4d7c055561c7e2 in memory
flw f27, 0(x2) # load 0x4c4d7c055561c7e2 from memory into f27
fmsub.s f16, f10, f3, f27, dyn # perform operation
fmsub.s f16, f10, f3, f27, rdn # perform operation
fmsub.s f16, f10, f3, f27, rmm # perform operation
fmsub.s f16, f10, f3, f27, rne # perform operation
fmsub.s f16, f10, f3, f27, rtz # perform operation
fmsub.s f16, f10, f3, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f16, f10, f3, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f16, f10, f3, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f16, f10, f3, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f16, f10, f3, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f16, f10, f3, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0x80000000)
li x13, 0xfaafd267c4cff0b4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f1, 0(x2) # load 0xbfc00000 from memory into f1
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f4, 0(x2) # load 0x80000000 from memory into f4
li x3, 0x5c0a98fe6a7b733d # load x3 with value 0x5c0a98fe6a7b733d
sw x3, 0(x2) # store 0x5c0a98fe6a7b733d in memory
flw f29, 0(x2) # load 0x5c0a98fe6a7b733d from memory into f29
fmsub.s f13, f1, f4, f29, dyn # perform operation
fmsub.s f13, f1, f4, f29, rdn # perform operation
fmsub.s f13, f1, f4, f29, rmm # perform operation
fmsub.s f13, f1, f4, f29, rne # perform operation
fmsub.s f13, f1, f4, f29, rtz # perform operation
fmsub.s f13, f1, f4, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f13, f1, f4, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f13, f1, f4, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f13, f1, f4, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f13, f1, f4, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f13, f1, f4, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0x3f800000)
li x2, 0x37798ae523f0dcb8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f5, 0(x2) # load 0xbfc00000 from memory into f5
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f3, 0(x2) # load 0x3f800000 from memory into f3
li x3, 0x144a3a6809bc48ed # load x3 with value 0x144a3a6809bc48ed
sw x3, 0(x2) # store 0x144a3a6809bc48ed in memory
flw f9, 0(x2) # load 0x144a3a6809bc48ed from memory into f9
fmsub.s f2, f5, f3, f9, dyn # perform operation
fmsub.s f2, f5, f3, f9, rdn # perform operation
fmsub.s f2, f5, f3, f9, rmm # perform operation
fmsub.s f2, f5, f3, f9, rne # perform operation
fmsub.s f2, f5, f3, f9, rtz # perform operation
fmsub.s f2, f5, f3, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f2, f5, f3, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f2, f5, f3, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f2, f5, f3, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f2, f5, f3, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f2, f5, f3, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0xbf800000)
li x25, 0x70b7496bae8d4436 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f2, 0(x2) # load 0xbfc00000 from memory into f2
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f28, 0(x2) # load 0xbf800000 from memory into f28
li x3, 0xe1bc0cd657a6bf8e # load x3 with value 0xe1bc0cd657a6bf8e
sw x3, 0(x2) # store 0xe1bc0cd657a6bf8e in memory
flw f1, 0(x2) # load 0xe1bc0cd657a6bf8e from memory into f1
fmsub.s f25, f2, f28, f1, dyn # perform operation
fmsub.s f25, f2, f28, f1, rdn # perform operation
fmsub.s f25, f2, f28, f1, rmm # perform operation
fmsub.s f25, f2, f28, f1, rne # perform operation
fmsub.s f25, f2, f28, f1, rtz # perform operation
fmsub.s f25, f2, f28, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f25, f2, f28, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f25, f2, f28, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f25, f2, f28, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f25, f2, f28, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f25, f2, f28, f1 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0x3fc00000)
li x5, 0x5335781646151bf0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f14, 0(x2) # load 0xbfc00000 from memory into f14
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f30, 0(x2) # load 0x3fc00000 from memory into f30
li x3, 0xa330beaef15da833 # load x3 with value 0xa330beaef15da833
sw x3, 0(x2) # store 0xa330beaef15da833 in memory
flw f13, 0(x2) # load 0xa330beaef15da833 from memory into f13
fmsub.s f5, f14, f30, f13, dyn # perform operation
fmsub.s f5, f14, f30, f13, rdn # perform operation
fmsub.s f5, f14, f30, f13, rmm # perform operation
fmsub.s f5, f14, f30, f13, rne # perform operation
fmsub.s f5, f14, f30, f13, rtz # perform operation
fmsub.s f5, f14, f30, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f5, f14, f30, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f5, f14, f30, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f5, f14, f30, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f5, f14, f30, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f5, f14, f30, f13 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0xbfc00000)
li x22, 0xc229c371782f503f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f3, 0(x2) # load 0xbfc00000 from memory into f3
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f21, 0(x2) # load 0xbfc00000 from memory into f21
li x3, 0x450e5137ca295309 # load x3 with value 0x450e5137ca295309
sw x3, 0(x2) # store 0x450e5137ca295309 in memory
flw f7, 0(x2) # load 0x450e5137ca295309 from memory into f7
fmsub.s f22, f3, f21, f7, dyn # perform operation
fmsub.s f22, f3, f21, f7, rdn # perform operation
fmsub.s f22, f3, f21, f7, rmm # perform operation
fmsub.s f22, f3, f21, f7, rne # perform operation
fmsub.s f22, f3, f21, f7, rtz # perform operation
fmsub.s f22, f3, f21, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f22, f3, f21, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f22, f3, f21, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f22, f3, f21, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f22, f3, f21, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f22, f3, f21, f7 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0x40000000)
li x2, 0x2528e68aceb2210e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f1, 0(x2) # load 0xbfc00000 from memory into f1
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f23, 0(x2) # load 0x40000000 from memory into f23
li x3, 0x984395759ce49e00 # load x3 with value 0x984395759ce49e00
sw x3, 0(x2) # store 0x984395759ce49e00 in memory
flw f30, 0(x2) # load 0x984395759ce49e00 from memory into f30
fmsub.s f2, f1, f23, f30, dyn # perform operation
fmsub.s f2, f1, f23, f30, rdn # perform operation
fmsub.s f2, f1, f23, f30, rmm # perform operation
fmsub.s f2, f1, f23, f30, rne # perform operation
fmsub.s f2, f1, f23, f30, rtz # perform operation
fmsub.s f2, f1, f23, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f2, f1, f23, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f2, f1, f23, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f2, f1, f23, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f2, f1, f23, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f2, f1, f23, f30 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0xc0000000)
li x1, 0x85a5eaf935a35c2c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f26, 0(x2) # load 0xbfc00000 from memory into f26
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f8, 0(x2) # load 0xc0000000 from memory into f8
li x3, 0x9dd6def8b2df5d4d # load x3 with value 0x9dd6def8b2df5d4d
sw x3, 0(x2) # store 0x9dd6def8b2df5d4d in memory
flw f30, 0(x2) # load 0x9dd6def8b2df5d4d from memory into f30
fmsub.s f1, f26, f8, f30, dyn # perform operation
fmsub.s f1, f26, f8, f30, rdn # perform operation
fmsub.s f1, f26, f8, f30, rmm # perform operation
fmsub.s f1, f26, f8, f30, rne # perform operation
fmsub.s f1, f26, f8, f30, rtz # perform operation
fmsub.s f1, f26, f8, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f1, f26, f8, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f1, f26, f8, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f1, f26, f8, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f1, f26, f8, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f1, f26, f8, f30 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0x800000)
li x15, 0x021ca854b2069b79 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f19, 0(x2) # load 0xbfc00000 from memory into f19
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f24, 0(x2) # load 0x00800000 from memory into f24
li x3, 0x3b3215ff8a765e3a # load x3 with value 0x3b3215ff8a765e3a
sw x3, 0(x2) # store 0x3b3215ff8a765e3a in memory
flw f20, 0(x2) # load 0x3b3215ff8a765e3a from memory into f20
fmsub.s f15, f19, f24, f20, dyn # perform operation
fmsub.s f15, f19, f24, f20, rdn # perform operation
fmsub.s f15, f19, f24, f20, rmm # perform operation
fmsub.s f15, f19, f24, f20, rne # perform operation
fmsub.s f15, f19, f24, f20, rtz # perform operation
fmsub.s f15, f19, f24, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f15, f19, f24, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f15, f19, f24, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f15, f19, f24, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f15, f19, f24, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f15, f19, f24, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0x80800000)
li x6, 0xf826336b3c82032a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f7, 0(x2) # load 0xbfc00000 from memory into f7
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f22, 0(x2) # load 0x80800000 from memory into f22
li x3, 0x12d3c46f7e771499 # load x3 with value 0x12d3c46f7e771499
sw x3, 0(x2) # store 0x12d3c46f7e771499 in memory
flw f29, 0(x2) # load 0x12d3c46f7e771499 from memory into f29
fmsub.s f6, f7, f22, f29, dyn # perform operation
fmsub.s f6, f7, f22, f29, rdn # perform operation
fmsub.s f6, f7, f22, f29, rmm # perform operation
fmsub.s f6, f7, f22, f29, rne # perform operation
fmsub.s f6, f7, f22, f29, rtz # perform operation
fmsub.s f6, f7, f22, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f6, f7, f22, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f6, f7, f22, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f6, f7, f22, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f6, f7, f22, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f6, f7, f22, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0x7f7fffff)
li x24, 0x4b5c329e507661bd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f26, 0(x2) # load 0xbfc00000 from memory into f26
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f14, 0(x2) # load 0x7f7fffff from memory into f14
li x3, 0xff912b9f1de98416 # load x3 with value 0xff912b9f1de98416
sw x3, 0(x2) # store 0xff912b9f1de98416 in memory
flw f2, 0(x2) # load 0xff912b9f1de98416 from memory into f2
fmsub.s f24, f26, f14, f2, dyn # perform operation
fmsub.s f24, f26, f14, f2, rdn # perform operation
fmsub.s f24, f26, f14, f2, rmm # perform operation
fmsub.s f24, f26, f14, f2, rne # perform operation
fmsub.s f24, f26, f14, f2, rtz # perform operation
fmsub.s f24, f26, f14, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f24, f26, f14, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f24, f26, f14, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f24, f26, f14, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f24, f26, f14, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f24, f26, f14, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0xff7fffff)
li x31, 0x7b962e3accbf7537 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f1, 0(x2) # load 0xbfc00000 from memory into f1
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f13, 0(x2) # load 0xff7fffff from memory into f13
li x3, 0x62e0653445831417 # load x3 with value 0x62e0653445831417
sw x3, 0(x2) # store 0x62e0653445831417 in memory
flw f11, 0(x2) # load 0x62e0653445831417 from memory into f11
fmsub.s f31, f1, f13, f11, dyn # perform operation
fmsub.s f31, f1, f13, f11, rdn # perform operation
fmsub.s f31, f1, f13, f11, rmm # perform operation
fmsub.s f31, f1, f13, f11, rne # perform operation
fmsub.s f31, f1, f13, f11, rtz # perform operation
fmsub.s f31, f1, f13, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f31, f1, f13, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f31, f1, f13, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f31, f1, f13, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f31, f1, f13, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f31, f1, f13, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0x7fffff)
li x21, 0x1a69febae9da5c4a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f4, 0(x2) # load 0xbfc00000 from memory into f4
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f20, 0(x2) # load 0x007fffff from memory into f20
li x3, 0xd4e4a7504f7198b8 # load x3 with value 0xd4e4a7504f7198b8
sw x3, 0(x2) # store 0xd4e4a7504f7198b8 in memory
flw f30, 0(x2) # load 0xd4e4a7504f7198b8 from memory into f30
fmsub.s f21, f4, f20, f30, dyn # perform operation
fmsub.s f21, f4, f20, f30, rdn # perform operation
fmsub.s f21, f4, f20, f30, rmm # perform operation
fmsub.s f21, f4, f20, f30, rne # perform operation
fmsub.s f21, f4, f20, f30, rtz # perform operation
fmsub.s f21, f4, f20, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f21, f4, f20, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f21, f4, f20, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f21, f4, f20, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f21, f4, f20, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f21, f4, f20, f30 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0x807fffff)
li x23, 0x8a1189aeae08a7f3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f19, 0(x2) # load 0xbfc00000 from memory into f19
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f14, 0(x2) # load 0x807fffff from memory into f14
li x3, 0x8ec4ae76b1070d43 # load x3 with value 0x8ec4ae76b1070d43
sw x3, 0(x2) # store 0x8ec4ae76b1070d43 in memory
flw f16, 0(x2) # load 0x8ec4ae76b1070d43 from memory into f16
fmsub.s f23, f19, f14, f16, dyn # perform operation
fmsub.s f23, f19, f14, f16, rdn # perform operation
fmsub.s f23, f19, f14, f16, rmm # perform operation
fmsub.s f23, f19, f14, f16, rne # perform operation
fmsub.s f23, f19, f14, f16, rtz # perform operation
fmsub.s f23, f19, f14, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f23, f19, f14, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f23, f19, f14, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f23, f19, f14, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f23, f19, f14, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f23, f19, f14, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0x400000)
li x30, 0x5162fab017743033 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f13, 0(x2) # load 0xbfc00000 from memory into f13
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f14, 0(x2) # load 0x00400000 from memory into f14
li x3, 0xde41365efe5986b6 # load x3 with value 0xde41365efe5986b6
sw x3, 0(x2) # store 0xde41365efe5986b6 in memory
flw f25, 0(x2) # load 0xde41365efe5986b6 from memory into f25
fmsub.s f30, f13, f14, f25, dyn # perform operation
fmsub.s f30, f13, f14, f25, rdn # perform operation
fmsub.s f30, f13, f14, f25, rmm # perform operation
fmsub.s f30, f13, f14, f25, rne # perform operation
fmsub.s f30, f13, f14, f25, rtz # perform operation
fmsub.s f30, f13, f14, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f30, f13, f14, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f30, f13, f14, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f30, f13, f14, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f30, f13, f14, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f30, f13, f14, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0x80400000)
li x23, 0x96760e8b2b662d86 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f26, 0(x2) # load 0xbfc00000 from memory into f26
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f17, 0(x2) # load 0x80400000 from memory into f17
li x3, 0x8ff0f26e95ad693b # load x3 with value 0x8ff0f26e95ad693b
sw x3, 0(x2) # store 0x8ff0f26e95ad693b in memory
flw f6, 0(x2) # load 0x8ff0f26e95ad693b from memory into f6
fmsub.s f23, f26, f17, f6, dyn # perform operation
fmsub.s f23, f26, f17, f6, rdn # perform operation
fmsub.s f23, f26, f17, f6, rmm # perform operation
fmsub.s f23, f26, f17, f6, rne # perform operation
fmsub.s f23, f26, f17, f6, rtz # perform operation
fmsub.s f23, f26, f17, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f23, f26, f17, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f23, f26, f17, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f23, f26, f17, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f23, f26, f17, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f23, f26, f17, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0x1)
li x1, 0xd941056ce6477668 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f4, 0(x2) # load 0xbfc00000 from memory into f4
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f19, 0(x2) # load 0x00000001 from memory into f19
li x3, 0xb2b6b1ae941cf232 # load x3 with value 0xb2b6b1ae941cf232
sw x3, 0(x2) # store 0xb2b6b1ae941cf232 in memory
flw f27, 0(x2) # load 0xb2b6b1ae941cf232 from memory into f27
fmsub.s f1, f4, f19, f27, dyn # perform operation
fmsub.s f1, f4, f19, f27, rdn # perform operation
fmsub.s f1, f4, f19, f27, rmm # perform operation
fmsub.s f1, f4, f19, f27, rne # perform operation
fmsub.s f1, f4, f19, f27, rtz # perform operation
fmsub.s f1, f4, f19, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f1, f4, f19, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f1, f4, f19, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f1, f4, f19, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f1, f4, f19, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f1, f4, f19, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0x80000001)
li x9, 0xdf76bbd0dc4207df # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f6, 0(x2) # load 0xbfc00000 from memory into f6
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f25, 0(x2) # load 0x80000001 from memory into f25
li x3, 0xdcd64233b3948a60 # load x3 with value 0xdcd64233b3948a60
sw x3, 0(x2) # store 0xdcd64233b3948a60 in memory
flw f1, 0(x2) # load 0xdcd64233b3948a60 from memory into f1
fmsub.s f9, f6, f25, f1, dyn # perform operation
fmsub.s f9, f6, f25, f1, rdn # perform operation
fmsub.s f9, f6, f25, f1, rmm # perform operation
fmsub.s f9, f6, f25, f1, rne # perform operation
fmsub.s f9, f6, f25, f1, rtz # perform operation
fmsub.s f9, f6, f25, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f9, f6, f25, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f9, f6, f25, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f9, f6, f25, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f9, f6, f25, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f9, f6, f25, f1 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0x7f800000)
li x16, 0xe851820c74bc071d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f31, 0(x2) # load 0xbfc00000 from memory into f31
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f28, 0(x2) # load 0x7f800000 from memory into f28
li x3, 0xaa649c6574629bb8 # load x3 with value 0xaa649c6574629bb8
sw x3, 0(x2) # store 0xaa649c6574629bb8 in memory
flw f12, 0(x2) # load 0xaa649c6574629bb8 from memory into f12
fmsub.s f16, f31, f28, f12, dyn # perform operation
fmsub.s f16, f31, f28, f12, rdn # perform operation
fmsub.s f16, f31, f28, f12, rmm # perform operation
fmsub.s f16, f31, f28, f12, rne # perform operation
fmsub.s f16, f31, f28, f12, rtz # perform operation
fmsub.s f16, f31, f28, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f16, f31, f28, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f16, f31, f28, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f16, f31, f28, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f16, f31, f28, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f16, f31, f28, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0xff800000)
li x20, 0xa5b247e445b07667 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f9, 0(x2) # load 0xbfc00000 from memory into f9
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f8, 0(x2) # load 0xff800000 from memory into f8
li x3, 0x6b7669b535c199b3 # load x3 with value 0x6b7669b535c199b3
sw x3, 0(x2) # store 0x6b7669b535c199b3 in memory
flw f25, 0(x2) # load 0x6b7669b535c199b3 from memory into f25
fmsub.s f20, f9, f8, f25, dyn # perform operation
fmsub.s f20, f9, f8, f25, rdn # perform operation
fmsub.s f20, f9, f8, f25, rmm # perform operation
fmsub.s f20, f9, f8, f25, rne # perform operation
fmsub.s f20, f9, f8, f25, rtz # perform operation
fmsub.s f20, f9, f8, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f20, f9, f8, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f20, f9, f8, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f20, f9, f8, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f20, f9, f8, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f20, f9, f8, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0x7fc00000)
li x19, 0x6fb5e3d1b6aeb6d8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f5, 0(x2) # load 0xbfc00000 from memory into f5
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f10, 0(x2) # load 0x7fc00000 from memory into f10
li x3, 0x350291224271da5e # load x3 with value 0x350291224271da5e
sw x3, 0(x2) # store 0x350291224271da5e in memory
flw f24, 0(x2) # load 0x350291224271da5e from memory into f24
fmsub.s f19, f5, f10, f24, dyn # perform operation
fmsub.s f19, f5, f10, f24, rdn # perform operation
fmsub.s f19, f5, f10, f24, rmm # perform operation
fmsub.s f19, f5, f10, f24, rne # perform operation
fmsub.s f19, f5, f10, f24, rtz # perform operation
fmsub.s f19, f5, f10, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f19, f5, f10, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f19, f5, f10, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f19, f5, f10, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f19, f5, f10, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f19, f5, f10, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0x7fffffff)
li x29, 0xf708c65c91085d6d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f21, 0(x2) # load 0xbfc00000 from memory into f21
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f30, 0(x2) # load 0x7fffffff from memory into f30
li x3, 0x539bf06fd0b871b7 # load x3 with value 0x539bf06fd0b871b7
sw x3, 0(x2) # store 0x539bf06fd0b871b7 in memory
flw f14, 0(x2) # load 0x539bf06fd0b871b7 from memory into f14
fmsub.s f29, f21, f30, f14, dyn # perform operation
fmsub.s f29, f21, f30, f14, rdn # perform operation
fmsub.s f29, f21, f30, f14, rmm # perform operation
fmsub.s f29, f21, f30, f14, rne # perform operation
fmsub.s f29, f21, f30, f14, rtz # perform operation
fmsub.s f29, f21, f30, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f29, f21, f30, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f29, f21, f30, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f29, f21, f30, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f29, f21, f30, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f29, f21, f30, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0x7f800001)
li x5, 0x9a251503bdbdbe1e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f8, 0(x2) # load 0xbfc00000 from memory into f8
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f6, 0(x2) # load 0x7f800001 from memory into f6
li x3, 0xdae2cb92f323f210 # load x3 with value 0xdae2cb92f323f210
sw x3, 0(x2) # store 0xdae2cb92f323f210 in memory
flw f16, 0(x2) # load 0xdae2cb92f323f210 from memory into f16
fmsub.s f5, f8, f6, f16, dyn # perform operation
fmsub.s f5, f8, f6, f16, rdn # perform operation
fmsub.s f5, f8, f6, f16, rmm # perform operation
fmsub.s f5, f8, f6, f16, rne # perform operation
fmsub.s f5, f8, f6, f16, rtz # perform operation
fmsub.s f5, f8, f6, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f5, f8, f6, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f5, f8, f6, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f5, f8, f6, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f5, f8, f6, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f5, f8, f6, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0x7fbfffff)
li x26, 0x74a7d910698a1521 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f30, 0(x2) # load 0xbfc00000 from memory into f30
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f16, 0(x2) # load 0x7fbfffff from memory into f16
li x3, 0x11744892fc5d03dd # load x3 with value 0x11744892fc5d03dd
sw x3, 0(x2) # store 0x11744892fc5d03dd in memory
flw f14, 0(x2) # load 0x11744892fc5d03dd from memory into f14
fmsub.s f26, f30, f16, f14, dyn # perform operation
fmsub.s f26, f30, f16, f14, rdn # perform operation
fmsub.s f26, f30, f16, f14, rmm # perform operation
fmsub.s f26, f30, f16, f14, rne # perform operation
fmsub.s f26, f30, f16, f14, rtz # perform operation
fmsub.s f26, f30, f16, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f26, f30, f16, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f26, f30, f16, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f26, f30, f16, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f26, f30, f16, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f26, f30, f16, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0x7ef8654f)
li x16, 0x3037c29840d0a3da # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f13, 0(x2) # load 0xbfc00000 from memory into f13
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f14, 0(x2) # load 0x7ef8654f from memory into f14
li x3, 0x2a360e48187dbe7b # load x3 with value 0x2a360e48187dbe7b
sw x3, 0(x2) # store 0x2a360e48187dbe7b in memory
flw f9, 0(x2) # load 0x2a360e48187dbe7b from memory into f9
fmsub.s f16, f13, f14, f9, dyn # perform operation
fmsub.s f16, f13, f14, f9, rdn # perform operation
fmsub.s f16, f13, f14, f9, rmm # perform operation
fmsub.s f16, f13, f14, f9, rne # perform operation
fmsub.s f16, f13, f14, f9, rtz # perform operation
fmsub.s f16, f13, f14, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f16, f13, f14, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f16, f13, f14, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f16, f13, f14, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f16, f13, f14, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f16, f13, f14, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0x813d9ab0)
li x17, 0x77d9d952ce71d03b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f19, 0(x2) # load 0xbfc00000 from memory into f19
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f13, 0(x2) # load 0x813d9ab0 from memory into f13
li x3, 0xb7339bff14c05b6c # load x3 with value 0xb7339bff14c05b6c
sw x3, 0(x2) # store 0xb7339bff14c05b6c in memory
flw f31, 0(x2) # load 0xb7339bff14c05b6c from memory into f31
fmsub.s f17, f19, f13, f31, dyn # perform operation
fmsub.s f17, f19, f13, f31, rdn # perform operation
fmsub.s f17, f19, f13, f31, rmm # perform operation
fmsub.s f17, f19, f13, f31, rne # perform operation
fmsub.s f17, f19, f13, f31, rtz # perform operation
fmsub.s f17, f19, f13, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f17, f19, f13, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f17, f19, f13, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f17, f19, f13, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f17, f19, f13, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f17, f19, f13, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0x0)
li x13, 0xf2ead2c7e99a7c89 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f27, 0(x2) # load 0x40000000 from memory into f27
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f8, 0(x2) # load 0x00000000 from memory into f8
li x3, 0xd326494c3449b21f # load x3 with value 0xd326494c3449b21f
sw x3, 0(x2) # store 0xd326494c3449b21f in memory
flw f30, 0(x2) # load 0xd326494c3449b21f from memory into f30
fmsub.s f13, f27, f8, f30, dyn # perform operation
fmsub.s f13, f27, f8, f30, rdn # perform operation
fmsub.s f13, f27, f8, f30, rmm # perform operation
fmsub.s f13, f27, f8, f30, rne # perform operation
fmsub.s f13, f27, f8, f30, rtz # perform operation
fmsub.s f13, f27, f8, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f13, f27, f8, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f13, f27, f8, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f13, f27, f8, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f13, f27, f8, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f13, f27, f8, f30 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0x80000000)
li x22, 0x78191136ffe3d3ff # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f24, 0(x2) # load 0x40000000 from memory into f24
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f18, 0(x2) # load 0x80000000 from memory into f18
li x3, 0xa047b00cb7ed6078 # load x3 with value 0xa047b00cb7ed6078
sw x3, 0(x2) # store 0xa047b00cb7ed6078 in memory
flw f8, 0(x2) # load 0xa047b00cb7ed6078 from memory into f8
fmsub.s f22, f24, f18, f8, dyn # perform operation
fmsub.s f22, f24, f18, f8, rdn # perform operation
fmsub.s f22, f24, f18, f8, rmm # perform operation
fmsub.s f22, f24, f18, f8, rne # perform operation
fmsub.s f22, f24, f18, f8, rtz # perform operation
fmsub.s f22, f24, f18, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f22, f24, f18, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f22, f24, f18, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f22, f24, f18, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f22, f24, f18, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f22, f24, f18, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0x3f800000)
li x25, 0x59572a127a4d9a5f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f22, 0(x2) # load 0x40000000 from memory into f22
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f19, 0(x2) # load 0x3f800000 from memory into f19
li x3, 0xdd873f5642b0f05d # load x3 with value 0xdd873f5642b0f05d
sw x3, 0(x2) # store 0xdd873f5642b0f05d in memory
flw f18, 0(x2) # load 0xdd873f5642b0f05d from memory into f18
fmsub.s f25, f22, f19, f18, dyn # perform operation
fmsub.s f25, f22, f19, f18, rdn # perform operation
fmsub.s f25, f22, f19, f18, rmm # perform operation
fmsub.s f25, f22, f19, f18, rne # perform operation
fmsub.s f25, f22, f19, f18, rtz # perform operation
fmsub.s f25, f22, f19, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f25, f22, f19, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f25, f22, f19, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f25, f22, f19, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f25, f22, f19, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f25, f22, f19, f18 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0xbf800000)
li x22, 0x67ce45855ee45bbb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f27, 0(x2) # load 0x40000000 from memory into f27
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f26, 0(x2) # load 0xbf800000 from memory into f26
li x3, 0x1bea4e2e6d2b49c8 # load x3 with value 0x1bea4e2e6d2b49c8
sw x3, 0(x2) # store 0x1bea4e2e6d2b49c8 in memory
flw f15, 0(x2) # load 0x1bea4e2e6d2b49c8 from memory into f15
fmsub.s f22, f27, f26, f15, dyn # perform operation
fmsub.s f22, f27, f26, f15, rdn # perform operation
fmsub.s f22, f27, f26, f15, rmm # perform operation
fmsub.s f22, f27, f26, f15, rne # perform operation
fmsub.s f22, f27, f26, f15, rtz # perform operation
fmsub.s f22, f27, f26, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f22, f27, f26, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f22, f27, f26, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f22, f27, f26, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f22, f27, f26, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f22, f27, f26, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0x3fc00000)
li x3, 0xf2dc4df839b83913 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f10, 0(x2) # load 0x40000000 from memory into f10
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f30, 0(x2) # load 0x3fc00000 from memory into f30
li x3, 0x127b4d9d59c367c7 # load x3 with value 0x127b4d9d59c367c7
sw x3, 0(x2) # store 0x127b4d9d59c367c7 in memory
flw f11, 0(x2) # load 0x127b4d9d59c367c7 from memory into f11
fmsub.s f3, f10, f30, f11, dyn # perform operation
fmsub.s f3, f10, f30, f11, rdn # perform operation
fmsub.s f3, f10, f30, f11, rmm # perform operation
fmsub.s f3, f10, f30, f11, rne # perform operation
fmsub.s f3, f10, f30, f11, rtz # perform operation
fmsub.s f3, f10, f30, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f3, f10, f30, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f3, f10, f30, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f3, f10, f30, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f3, f10, f30, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f3, f10, f30, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0xbfc00000)
li x21, 0xdfede5f396dbb32d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f15, 0(x2) # load 0x40000000 from memory into f15
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f7, 0(x2) # load 0xbfc00000 from memory into f7
li x3, 0xd1609e4fd1fae3e8 # load x3 with value 0xd1609e4fd1fae3e8
sw x3, 0(x2) # store 0xd1609e4fd1fae3e8 in memory
flw f5, 0(x2) # load 0xd1609e4fd1fae3e8 from memory into f5
fmsub.s f21, f15, f7, f5, dyn # perform operation
fmsub.s f21, f15, f7, f5, rdn # perform operation
fmsub.s f21, f15, f7, f5, rmm # perform operation
fmsub.s f21, f15, f7, f5, rne # perform operation
fmsub.s f21, f15, f7, f5, rtz # perform operation
fmsub.s f21, f15, f7, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f21, f15, f7, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f21, f15, f7, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f21, f15, f7, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f21, f15, f7, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f21, f15, f7, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0x40000000)
li x22, 0xe3067138e567dcd1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f18, 0(x2) # load 0x40000000 from memory into f18
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f10, 0(x2) # load 0x40000000 from memory into f10
li x3, 0x1603e1e2e1729a45 # load x3 with value 0x1603e1e2e1729a45
sw x3, 0(x2) # store 0x1603e1e2e1729a45 in memory
flw f4, 0(x2) # load 0x1603e1e2e1729a45 from memory into f4
fmsub.s f22, f18, f10, f4, dyn # perform operation
fmsub.s f22, f18, f10, f4, rdn # perform operation
fmsub.s f22, f18, f10, f4, rmm # perform operation
fmsub.s f22, f18, f10, f4, rne # perform operation
fmsub.s f22, f18, f10, f4, rtz # perform operation
fmsub.s f22, f18, f10, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f22, f18, f10, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f22, f18, f10, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f22, f18, f10, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f22, f18, f10, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f22, f18, f10, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0xc0000000)
li x27, 0x42bb4a663e77aa9d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f18, 0(x2) # load 0x40000000 from memory into f18
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f26, 0(x2) # load 0xc0000000 from memory into f26
li x3, 0x616a1ab359f6df27 # load x3 with value 0x616a1ab359f6df27
sw x3, 0(x2) # store 0x616a1ab359f6df27 in memory
flw f14, 0(x2) # load 0x616a1ab359f6df27 from memory into f14
fmsub.s f27, f18, f26, f14, dyn # perform operation
fmsub.s f27, f18, f26, f14, rdn # perform operation
fmsub.s f27, f18, f26, f14, rmm # perform operation
fmsub.s f27, f18, f26, f14, rne # perform operation
fmsub.s f27, f18, f26, f14, rtz # perform operation
fmsub.s f27, f18, f26, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f27, f18, f26, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f27, f18, f26, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f27, f18, f26, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f27, f18, f26, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f27, f18, f26, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0x800000)
li x20, 0x74120ce0011a546a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f25, 0(x2) # load 0x40000000 from memory into f25
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f31, 0(x2) # load 0x00800000 from memory into f31
li x3, 0x749189fdc6e1c97d # load x3 with value 0x749189fdc6e1c97d
sw x3, 0(x2) # store 0x749189fdc6e1c97d in memory
flw f15, 0(x2) # load 0x749189fdc6e1c97d from memory into f15
fmsub.s f20, f25, f31, f15, dyn # perform operation
fmsub.s f20, f25, f31, f15, rdn # perform operation
fmsub.s f20, f25, f31, f15, rmm # perform operation
fmsub.s f20, f25, f31, f15, rne # perform operation
fmsub.s f20, f25, f31, f15, rtz # perform operation
fmsub.s f20, f25, f31, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f20, f25, f31, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f20, f25, f31, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f20, f25, f31, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f20, f25, f31, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f20, f25, f31, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0x80800000)
li x16, 0x7cab2b64abffed11 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f22, 0(x2) # load 0x40000000 from memory into f22
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f11, 0(x2) # load 0x80800000 from memory into f11
li x3, 0x2537ef7fcdc35a01 # load x3 with value 0x2537ef7fcdc35a01
sw x3, 0(x2) # store 0x2537ef7fcdc35a01 in memory
flw f29, 0(x2) # load 0x2537ef7fcdc35a01 from memory into f29
fmsub.s f16, f22, f11, f29, dyn # perform operation
fmsub.s f16, f22, f11, f29, rdn # perform operation
fmsub.s f16, f22, f11, f29, rmm # perform operation
fmsub.s f16, f22, f11, f29, rne # perform operation
fmsub.s f16, f22, f11, f29, rtz # perform operation
fmsub.s f16, f22, f11, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f16, f22, f11, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f16, f22, f11, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f16, f22, f11, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f16, f22, f11, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f16, f22, f11, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0x7f7fffff)
li x8, 0x75810ad45c5a770e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f7, 0(x2) # load 0x40000000 from memory into f7
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f26, 0(x2) # load 0x7f7fffff from memory into f26
li x3, 0x237b1696c4b38501 # load x3 with value 0x237b1696c4b38501
sw x3, 0(x2) # store 0x237b1696c4b38501 in memory
flw f1, 0(x2) # load 0x237b1696c4b38501 from memory into f1
fmsub.s f8, f7, f26, f1, dyn # perform operation
fmsub.s f8, f7, f26, f1, rdn # perform operation
fmsub.s f8, f7, f26, f1, rmm # perform operation
fmsub.s f8, f7, f26, f1, rne # perform operation
fmsub.s f8, f7, f26, f1, rtz # perform operation
fmsub.s f8, f7, f26, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f8, f7, f26, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f8, f7, f26, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f8, f7, f26, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f8, f7, f26, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f8, f7, f26, f1 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0xff7fffff)
li x19, 0x5ccecdb7c80415aa # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f26, 0(x2) # load 0x40000000 from memory into f26
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f30, 0(x2) # load 0xff7fffff from memory into f30
li x3, 0xb723187cc9a68240 # load x3 with value 0xb723187cc9a68240
sw x3, 0(x2) # store 0xb723187cc9a68240 in memory
flw f4, 0(x2) # load 0xb723187cc9a68240 from memory into f4
fmsub.s f19, f26, f30, f4, dyn # perform operation
fmsub.s f19, f26, f30, f4, rdn # perform operation
fmsub.s f19, f26, f30, f4, rmm # perform operation
fmsub.s f19, f26, f30, f4, rne # perform operation
fmsub.s f19, f26, f30, f4, rtz # perform operation
fmsub.s f19, f26, f30, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f19, f26, f30, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f19, f26, f30, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f19, f26, f30, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f19, f26, f30, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f19, f26, f30, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0x7fffff)
li x2, 0x575b93958c38e388 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f18, 0(x2) # load 0x40000000 from memory into f18
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f17, 0(x2) # load 0x007fffff from memory into f17
li x3, 0xd0024b6e559010c6 # load x3 with value 0xd0024b6e559010c6
sw x3, 0(x2) # store 0xd0024b6e559010c6 in memory
flw f16, 0(x2) # load 0xd0024b6e559010c6 from memory into f16
fmsub.s f2, f18, f17, f16, dyn # perform operation
fmsub.s f2, f18, f17, f16, rdn # perform operation
fmsub.s f2, f18, f17, f16, rmm # perform operation
fmsub.s f2, f18, f17, f16, rne # perform operation
fmsub.s f2, f18, f17, f16, rtz # perform operation
fmsub.s f2, f18, f17, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f2, f18, f17, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f2, f18, f17, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f2, f18, f17, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f2, f18, f17, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f2, f18, f17, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0x807fffff)
li x19, 0x5aeca0d18b7680bd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f15, 0(x2) # load 0x40000000 from memory into f15
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f16, 0(x2) # load 0x807fffff from memory into f16
li x3, 0x5855fdf1560bef94 # load x3 with value 0x5855fdf1560bef94
sw x3, 0(x2) # store 0x5855fdf1560bef94 in memory
flw f2, 0(x2) # load 0x5855fdf1560bef94 from memory into f2
fmsub.s f19, f15, f16, f2, dyn # perform operation
fmsub.s f19, f15, f16, f2, rdn # perform operation
fmsub.s f19, f15, f16, f2, rmm # perform operation
fmsub.s f19, f15, f16, f2, rne # perform operation
fmsub.s f19, f15, f16, f2, rtz # perform operation
fmsub.s f19, f15, f16, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f19, f15, f16, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f19, f15, f16, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f19, f15, f16, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f19, f15, f16, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f19, f15, f16, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0x400000)
li x14, 0x59af3357543a558b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f24, 0(x2) # load 0x40000000 from memory into f24
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f1, 0(x2) # load 0x00400000 from memory into f1
li x3, 0x684458d5942eea7b # load x3 with value 0x684458d5942eea7b
sw x3, 0(x2) # store 0x684458d5942eea7b in memory
flw f25, 0(x2) # load 0x684458d5942eea7b from memory into f25
fmsub.s f14, f24, f1, f25, dyn # perform operation
fmsub.s f14, f24, f1, f25, rdn # perform operation
fmsub.s f14, f24, f1, f25, rmm # perform operation
fmsub.s f14, f24, f1, f25, rne # perform operation
fmsub.s f14, f24, f1, f25, rtz # perform operation
fmsub.s f14, f24, f1, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f14, f24, f1, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f14, f24, f1, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f14, f24, f1, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f14, f24, f1, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f14, f24, f1, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0x80400000)
li x21, 0xf82f84a6a41a5112 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f2, 0(x2) # load 0x40000000 from memory into f2
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f10, 0(x2) # load 0x80400000 from memory into f10
li x3, 0x55a3d9baf2b5b4bf # load x3 with value 0x55a3d9baf2b5b4bf
sw x3, 0(x2) # store 0x55a3d9baf2b5b4bf in memory
flw f20, 0(x2) # load 0x55a3d9baf2b5b4bf from memory into f20
fmsub.s f21, f2, f10, f20, dyn # perform operation
fmsub.s f21, f2, f10, f20, rdn # perform operation
fmsub.s f21, f2, f10, f20, rmm # perform operation
fmsub.s f21, f2, f10, f20, rne # perform operation
fmsub.s f21, f2, f10, f20, rtz # perform operation
fmsub.s f21, f2, f10, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f21, f2, f10, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f21, f2, f10, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f21, f2, f10, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f21, f2, f10, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f21, f2, f10, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0x1)
li x4, 0x1e5d639c5a0c1fcc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f5, 0(x2) # load 0x40000000 from memory into f5
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f15, 0(x2) # load 0x00000001 from memory into f15
li x3, 0x1682a45a88faa1a7 # load x3 with value 0x1682a45a88faa1a7
sw x3, 0(x2) # store 0x1682a45a88faa1a7 in memory
flw f20, 0(x2) # load 0x1682a45a88faa1a7 from memory into f20
fmsub.s f4, f5, f15, f20, dyn # perform operation
fmsub.s f4, f5, f15, f20, rdn # perform operation
fmsub.s f4, f5, f15, f20, rmm # perform operation
fmsub.s f4, f5, f15, f20, rne # perform operation
fmsub.s f4, f5, f15, f20, rtz # perform operation
fmsub.s f4, f5, f15, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f4, f5, f15, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f4, f5, f15, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f4, f5, f15, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f4, f5, f15, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f4, f5, f15, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0x80000001)
li x5, 0xb84b6b3f14138348 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f26, 0(x2) # load 0x40000000 from memory into f26
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f14, 0(x2) # load 0x80000001 from memory into f14
li x3, 0x184e5ceb5143118e # load x3 with value 0x184e5ceb5143118e
sw x3, 0(x2) # store 0x184e5ceb5143118e in memory
flw f21, 0(x2) # load 0x184e5ceb5143118e from memory into f21
fmsub.s f5, f26, f14, f21, dyn # perform operation
fmsub.s f5, f26, f14, f21, rdn # perform operation
fmsub.s f5, f26, f14, f21, rmm # perform operation
fmsub.s f5, f26, f14, f21, rne # perform operation
fmsub.s f5, f26, f14, f21, rtz # perform operation
fmsub.s f5, f26, f14, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f5, f26, f14, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f5, f26, f14, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f5, f26, f14, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f5, f26, f14, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f5, f26, f14, f21 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0x7f800000)
li x2, 0x47fcd7f51ee964f5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f15, 0(x2) # load 0x40000000 from memory into f15
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f28, 0(x2) # load 0x7f800000 from memory into f28
li x3, 0xb2f6b0b15c45a48d # load x3 with value 0xb2f6b0b15c45a48d
sw x3, 0(x2) # store 0xb2f6b0b15c45a48d in memory
flw f7, 0(x2) # load 0xb2f6b0b15c45a48d from memory into f7
fmsub.s f2, f15, f28, f7, dyn # perform operation
fmsub.s f2, f15, f28, f7, rdn # perform operation
fmsub.s f2, f15, f28, f7, rmm # perform operation
fmsub.s f2, f15, f28, f7, rne # perform operation
fmsub.s f2, f15, f28, f7, rtz # perform operation
fmsub.s f2, f15, f28, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f2, f15, f28, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f2, f15, f28, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f2, f15, f28, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f2, f15, f28, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f2, f15, f28, f7 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0xff800000)
li x11, 0xb8558266bfd298e7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f5, 0(x2) # load 0x40000000 from memory into f5
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f13, 0(x2) # load 0xff800000 from memory into f13
li x3, 0xe85424041f4ab2f3 # load x3 with value 0xe85424041f4ab2f3
sw x3, 0(x2) # store 0xe85424041f4ab2f3 in memory
flw f19, 0(x2) # load 0xe85424041f4ab2f3 from memory into f19
fmsub.s f11, f5, f13, f19, dyn # perform operation
fmsub.s f11, f5, f13, f19, rdn # perform operation
fmsub.s f11, f5, f13, f19, rmm # perform operation
fmsub.s f11, f5, f13, f19, rne # perform operation
fmsub.s f11, f5, f13, f19, rtz # perform operation
fmsub.s f11, f5, f13, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f11, f5, f13, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f11, f5, f13, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f11, f5, f13, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f11, f5, f13, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f11, f5, f13, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0x7fc00000)
li x15, 0xa9ddd8ecf5bc4a40 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f14, 0(x2) # load 0x40000000 from memory into f14
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f5, 0(x2) # load 0x7fc00000 from memory into f5
li x3, 0x93ffa2fab0f703a2 # load x3 with value 0x93ffa2fab0f703a2
sw x3, 0(x2) # store 0x93ffa2fab0f703a2 in memory
flw f9, 0(x2) # load 0x93ffa2fab0f703a2 from memory into f9
fmsub.s f15, f14, f5, f9, dyn # perform operation
fmsub.s f15, f14, f5, f9, rdn # perform operation
fmsub.s f15, f14, f5, f9, rmm # perform operation
fmsub.s f15, f14, f5, f9, rne # perform operation
fmsub.s f15, f14, f5, f9, rtz # perform operation
fmsub.s f15, f14, f5, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f15, f14, f5, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f15, f14, f5, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f15, f14, f5, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f15, f14, f5, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f15, f14, f5, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0x7fffffff)
li x4, 0xa4e3ba7702332a20 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f25, 0(x2) # load 0x40000000 from memory into f25
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f7, 0(x2) # load 0x7fffffff from memory into f7
li x3, 0x94f19d5f8dad81cc # load x3 with value 0x94f19d5f8dad81cc
sw x3, 0(x2) # store 0x94f19d5f8dad81cc in memory
flw f23, 0(x2) # load 0x94f19d5f8dad81cc from memory into f23
fmsub.s f4, f25, f7, f23, dyn # perform operation
fmsub.s f4, f25, f7, f23, rdn # perform operation
fmsub.s f4, f25, f7, f23, rmm # perform operation
fmsub.s f4, f25, f7, f23, rne # perform operation
fmsub.s f4, f25, f7, f23, rtz # perform operation
fmsub.s f4, f25, f7, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f4, f25, f7, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f4, f25, f7, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f4, f25, f7, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f4, f25, f7, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f4, f25, f7, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0x7f800001)
li x16, 0x3eab5ea8bc7546b9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f10, 0(x2) # load 0x40000000 from memory into f10
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f20, 0(x2) # load 0x7f800001 from memory into f20
li x3, 0x129fb4d66c1369bc # load x3 with value 0x129fb4d66c1369bc
sw x3, 0(x2) # store 0x129fb4d66c1369bc in memory
flw f8, 0(x2) # load 0x129fb4d66c1369bc from memory into f8
fmsub.s f16, f10, f20, f8, dyn # perform operation
fmsub.s f16, f10, f20, f8, rdn # perform operation
fmsub.s f16, f10, f20, f8, rmm # perform operation
fmsub.s f16, f10, f20, f8, rne # perform operation
fmsub.s f16, f10, f20, f8, rtz # perform operation
fmsub.s f16, f10, f20, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f16, f10, f20, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f16, f10, f20, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f16, f10, f20, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f16, f10, f20, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f16, f10, f20, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0x7fbfffff)
li x31, 0xf4b0615bbbd2ff33 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f6, 0(x2) # load 0x40000000 from memory into f6
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f25, 0(x2) # load 0x7fbfffff from memory into f25
li x3, 0xf9c630f516212e66 # load x3 with value 0xf9c630f516212e66
sw x3, 0(x2) # store 0xf9c630f516212e66 in memory
flw f4, 0(x2) # load 0xf9c630f516212e66 from memory into f4
fmsub.s f31, f6, f25, f4, dyn # perform operation
fmsub.s f31, f6, f25, f4, rdn # perform operation
fmsub.s f31, f6, f25, f4, rmm # perform operation
fmsub.s f31, f6, f25, f4, rne # perform operation
fmsub.s f31, f6, f25, f4, rtz # perform operation
fmsub.s f31, f6, f25, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f31, f6, f25, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f31, f6, f25, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f31, f6, f25, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f31, f6, f25, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f31, f6, f25, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0x7ef8654f)
li x28, 0x37b7a44a283213b6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f8, 0(x2) # load 0x40000000 from memory into f8
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f31, 0(x2) # load 0x7ef8654f from memory into f31
li x3, 0x4967ff7c4d3bd3c9 # load x3 with value 0x4967ff7c4d3bd3c9
sw x3, 0(x2) # store 0x4967ff7c4d3bd3c9 in memory
flw f25, 0(x2) # load 0x4967ff7c4d3bd3c9 from memory into f25
fmsub.s f28, f8, f31, f25, dyn # perform operation
fmsub.s f28, f8, f31, f25, rdn # perform operation
fmsub.s f28, f8, f31, f25, rmm # perform operation
fmsub.s f28, f8, f31, f25, rne # perform operation
fmsub.s f28, f8, f31, f25, rtz # perform operation
fmsub.s f28, f8, f31, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f28, f8, f31, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f28, f8, f31, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f28, f8, f31, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f28, f8, f31, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f28, f8, f31, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0x813d9ab0)
li x12, 0xcde81ef777ca9f01 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f5, 0(x2) # load 0x40000000 from memory into f5
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f2, 0(x2) # load 0x813d9ab0 from memory into f2
li x3, 0xaa52d92f84c83f2e # load x3 with value 0xaa52d92f84c83f2e
sw x3, 0(x2) # store 0xaa52d92f84c83f2e in memory
flw f22, 0(x2) # load 0xaa52d92f84c83f2e from memory into f22
fmsub.s f12, f5, f2, f22, dyn # perform operation
fmsub.s f12, f5, f2, f22, rdn # perform operation
fmsub.s f12, f5, f2, f22, rmm # perform operation
fmsub.s f12, f5, f2, f22, rne # perform operation
fmsub.s f12, f5, f2, f22, rtz # perform operation
fmsub.s f12, f5, f2, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f12, f5, f2, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f12, f5, f2, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f12, f5, f2, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f12, f5, f2, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f12, f5, f2, f22 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0x0)
li x24, 0xa75f438b7f8784d2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f22, 0(x2) # load 0xc0000000 from memory into f22
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f21, 0(x2) # load 0x00000000 from memory into f21
li x3, 0xc248fcc1c4ff6bcb # load x3 with value 0xc248fcc1c4ff6bcb
sw x3, 0(x2) # store 0xc248fcc1c4ff6bcb in memory
flw f3, 0(x2) # load 0xc248fcc1c4ff6bcb from memory into f3
fmsub.s f24, f22, f21, f3, dyn # perform operation
fmsub.s f24, f22, f21, f3, rdn # perform operation
fmsub.s f24, f22, f21, f3, rmm # perform operation
fmsub.s f24, f22, f21, f3, rne # perform operation
fmsub.s f24, f22, f21, f3, rtz # perform operation
fmsub.s f24, f22, f21, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f24, f22, f21, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f24, f22, f21, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f24, f22, f21, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f24, f22, f21, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f24, f22, f21, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0x80000000)
li x29, 0x16a9a198fce3bd70 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f18, 0(x2) # load 0xc0000000 from memory into f18
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f31, 0(x2) # load 0x80000000 from memory into f31
li x3, 0x36394e501046ed5e # load x3 with value 0x36394e501046ed5e
sw x3, 0(x2) # store 0x36394e501046ed5e in memory
flw f4, 0(x2) # load 0x36394e501046ed5e from memory into f4
fmsub.s f29, f18, f31, f4, dyn # perform operation
fmsub.s f29, f18, f31, f4, rdn # perform operation
fmsub.s f29, f18, f31, f4, rmm # perform operation
fmsub.s f29, f18, f31, f4, rne # perform operation
fmsub.s f29, f18, f31, f4, rtz # perform operation
fmsub.s f29, f18, f31, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f29, f18, f31, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f29, f18, f31, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f29, f18, f31, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f29, f18, f31, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f29, f18, f31, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0x3f800000)
li x11, 0x28ed70919a2d5bb5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f7, 0(x2) # load 0xc0000000 from memory into f7
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f9, 0(x2) # load 0x3f800000 from memory into f9
li x3, 0xefd93493b435041f # load x3 with value 0xefd93493b435041f
sw x3, 0(x2) # store 0xefd93493b435041f in memory
flw f22, 0(x2) # load 0xefd93493b435041f from memory into f22
fmsub.s f11, f7, f9, f22, dyn # perform operation
fmsub.s f11, f7, f9, f22, rdn # perform operation
fmsub.s f11, f7, f9, f22, rmm # perform operation
fmsub.s f11, f7, f9, f22, rne # perform operation
fmsub.s f11, f7, f9, f22, rtz # perform operation
fmsub.s f11, f7, f9, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f11, f7, f9, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f11, f7, f9, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f11, f7, f9, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f11, f7, f9, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f11, f7, f9, f22 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0xbf800000)
li x21, 0xea625dbfd28745e6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f26, 0(x2) # load 0xc0000000 from memory into f26
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f15, 0(x2) # load 0xbf800000 from memory into f15
li x3, 0x5f2ba0b2056ed303 # load x3 with value 0x5f2ba0b2056ed303
sw x3, 0(x2) # store 0x5f2ba0b2056ed303 in memory
flw f23, 0(x2) # load 0x5f2ba0b2056ed303 from memory into f23
fmsub.s f21, f26, f15, f23, dyn # perform operation
fmsub.s f21, f26, f15, f23, rdn # perform operation
fmsub.s f21, f26, f15, f23, rmm # perform operation
fmsub.s f21, f26, f15, f23, rne # perform operation
fmsub.s f21, f26, f15, f23, rtz # perform operation
fmsub.s f21, f26, f15, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f21, f26, f15, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f21, f26, f15, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f21, f26, f15, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f21, f26, f15, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f21, f26, f15, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0x3fc00000)
li x8, 0x0302c0272fe1125b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f1, 0(x2) # load 0xc0000000 from memory into f1
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f25, 0(x2) # load 0x3fc00000 from memory into f25
li x3, 0x50a9b550e325d4e3 # load x3 with value 0x50a9b550e325d4e3
sw x3, 0(x2) # store 0x50a9b550e325d4e3 in memory
flw f9, 0(x2) # load 0x50a9b550e325d4e3 from memory into f9
fmsub.s f8, f1, f25, f9, dyn # perform operation
fmsub.s f8, f1, f25, f9, rdn # perform operation
fmsub.s f8, f1, f25, f9, rmm # perform operation
fmsub.s f8, f1, f25, f9, rne # perform operation
fmsub.s f8, f1, f25, f9, rtz # perform operation
fmsub.s f8, f1, f25, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f8, f1, f25, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f8, f1, f25, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f8, f1, f25, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f8, f1, f25, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f8, f1, f25, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0xbfc00000)
li x18, 0x10c8fe39a4b9d98a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f16, 0(x2) # load 0xc0000000 from memory into f16
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f14, 0(x2) # load 0xbfc00000 from memory into f14
li x3, 0xc857cd7f4e04f1ca # load x3 with value 0xc857cd7f4e04f1ca
sw x3, 0(x2) # store 0xc857cd7f4e04f1ca in memory
flw f15, 0(x2) # load 0xc857cd7f4e04f1ca from memory into f15
fmsub.s f18, f16, f14, f15, dyn # perform operation
fmsub.s f18, f16, f14, f15, rdn # perform operation
fmsub.s f18, f16, f14, f15, rmm # perform operation
fmsub.s f18, f16, f14, f15, rne # perform operation
fmsub.s f18, f16, f14, f15, rtz # perform operation
fmsub.s f18, f16, f14, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f18, f16, f14, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f18, f16, f14, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f18, f16, f14, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f18, f16, f14, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f18, f16, f14, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0x40000000)
li x12, 0xfef77e28209a123f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f29, 0(x2) # load 0xc0000000 from memory into f29
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f14, 0(x2) # load 0x40000000 from memory into f14
li x3, 0xe7c078edaa0673b2 # load x3 with value 0xe7c078edaa0673b2
sw x3, 0(x2) # store 0xe7c078edaa0673b2 in memory
flw f13, 0(x2) # load 0xe7c078edaa0673b2 from memory into f13
fmsub.s f12, f29, f14, f13, dyn # perform operation
fmsub.s f12, f29, f14, f13, rdn # perform operation
fmsub.s f12, f29, f14, f13, rmm # perform operation
fmsub.s f12, f29, f14, f13, rne # perform operation
fmsub.s f12, f29, f14, f13, rtz # perform operation
fmsub.s f12, f29, f14, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f12, f29, f14, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f12, f29, f14, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f12, f29, f14, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f12, f29, f14, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f12, f29, f14, f13 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0xc0000000)
li x12, 0xbff783f70b308e94 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f13, 0(x2) # load 0xc0000000 from memory into f13
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f16, 0(x2) # load 0xc0000000 from memory into f16
li x3, 0x7da7d410dec99ade # load x3 with value 0x7da7d410dec99ade
sw x3, 0(x2) # store 0x7da7d410dec99ade in memory
flw f22, 0(x2) # load 0x7da7d410dec99ade from memory into f22
fmsub.s f12, f13, f16, f22, dyn # perform operation
fmsub.s f12, f13, f16, f22, rdn # perform operation
fmsub.s f12, f13, f16, f22, rmm # perform operation
fmsub.s f12, f13, f16, f22, rne # perform operation
fmsub.s f12, f13, f16, f22, rtz # perform operation
fmsub.s f12, f13, f16, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f12, f13, f16, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f12, f13, f16, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f12, f13, f16, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f12, f13, f16, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f12, f13, f16, f22 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0x800000)
li x28, 0xf131e44975497605 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f14, 0(x2) # load 0xc0000000 from memory into f14
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f16, 0(x2) # load 0x00800000 from memory into f16
li x3, 0xa43d4d787e95d334 # load x3 with value 0xa43d4d787e95d334
sw x3, 0(x2) # store 0xa43d4d787e95d334 in memory
flw f2, 0(x2) # load 0xa43d4d787e95d334 from memory into f2
fmsub.s f28, f14, f16, f2, dyn # perform operation
fmsub.s f28, f14, f16, f2, rdn # perform operation
fmsub.s f28, f14, f16, f2, rmm # perform operation
fmsub.s f28, f14, f16, f2, rne # perform operation
fmsub.s f28, f14, f16, f2, rtz # perform operation
fmsub.s f28, f14, f16, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f28, f14, f16, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f28, f14, f16, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f28, f14, f16, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f28, f14, f16, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f28, f14, f16, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0x80800000)
li x26, 0xe759fa17c1181669 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f8, 0(x2) # load 0xc0000000 from memory into f8
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f31, 0(x2) # load 0x80800000 from memory into f31
li x3, 0xeaba79f26db22a4a # load x3 with value 0xeaba79f26db22a4a
sw x3, 0(x2) # store 0xeaba79f26db22a4a in memory
flw f29, 0(x2) # load 0xeaba79f26db22a4a from memory into f29
fmsub.s f26, f8, f31, f29, dyn # perform operation
fmsub.s f26, f8, f31, f29, rdn # perform operation
fmsub.s f26, f8, f31, f29, rmm # perform operation
fmsub.s f26, f8, f31, f29, rne # perform operation
fmsub.s f26, f8, f31, f29, rtz # perform operation
fmsub.s f26, f8, f31, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f26, f8, f31, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f26, f8, f31, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f26, f8, f31, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f26, f8, f31, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f26, f8, f31, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0x7f7fffff)
li x14, 0x9393274da8078778 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f23, 0(x2) # load 0xc0000000 from memory into f23
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f25, 0(x2) # load 0x7f7fffff from memory into f25
li x3, 0x3ac40b0a2bcf043f # load x3 with value 0x3ac40b0a2bcf043f
sw x3, 0(x2) # store 0x3ac40b0a2bcf043f in memory
flw f29, 0(x2) # load 0x3ac40b0a2bcf043f from memory into f29
fmsub.s f14, f23, f25, f29, dyn # perform operation
fmsub.s f14, f23, f25, f29, rdn # perform operation
fmsub.s f14, f23, f25, f29, rmm # perform operation
fmsub.s f14, f23, f25, f29, rne # perform operation
fmsub.s f14, f23, f25, f29, rtz # perform operation
fmsub.s f14, f23, f25, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f14, f23, f25, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f14, f23, f25, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f14, f23, f25, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f14, f23, f25, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f14, f23, f25, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0xff7fffff)
li x28, 0xa348213e4866f146 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f10, 0(x2) # load 0xc0000000 from memory into f10
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f1, 0(x2) # load 0xff7fffff from memory into f1
li x3, 0xa784b3ddf7f1d7ad # load x3 with value 0xa784b3ddf7f1d7ad
sw x3, 0(x2) # store 0xa784b3ddf7f1d7ad in memory
flw f5, 0(x2) # load 0xa784b3ddf7f1d7ad from memory into f5
fmsub.s f28, f10, f1, f5, dyn # perform operation
fmsub.s f28, f10, f1, f5, rdn # perform operation
fmsub.s f28, f10, f1, f5, rmm # perform operation
fmsub.s f28, f10, f1, f5, rne # perform operation
fmsub.s f28, f10, f1, f5, rtz # perform operation
fmsub.s f28, f10, f1, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f28, f10, f1, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f28, f10, f1, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f28, f10, f1, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f28, f10, f1, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f28, f10, f1, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0x7fffff)
li x27, 0x656ed223f408eed9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f18, 0(x2) # load 0xc0000000 from memory into f18
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f5, 0(x2) # load 0x007fffff from memory into f5
li x3, 0xfd763640ac128ee5 # load x3 with value 0xfd763640ac128ee5
sw x3, 0(x2) # store 0xfd763640ac128ee5 in memory
flw f4, 0(x2) # load 0xfd763640ac128ee5 from memory into f4
fmsub.s f27, f18, f5, f4, dyn # perform operation
fmsub.s f27, f18, f5, f4, rdn # perform operation
fmsub.s f27, f18, f5, f4, rmm # perform operation
fmsub.s f27, f18, f5, f4, rne # perform operation
fmsub.s f27, f18, f5, f4, rtz # perform operation
fmsub.s f27, f18, f5, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f27, f18, f5, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f27, f18, f5, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f27, f18, f5, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f27, f18, f5, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f27, f18, f5, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0x807fffff)
li x31, 0x3f38e9d102a2d0ae # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f22, 0(x2) # load 0xc0000000 from memory into f22
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f16, 0(x2) # load 0x807fffff from memory into f16
li x3, 0xdf8a18e22496387b # load x3 with value 0xdf8a18e22496387b
sw x3, 0(x2) # store 0xdf8a18e22496387b in memory
flw f6, 0(x2) # load 0xdf8a18e22496387b from memory into f6
fmsub.s f31, f22, f16, f6, dyn # perform operation
fmsub.s f31, f22, f16, f6, rdn # perform operation
fmsub.s f31, f22, f16, f6, rmm # perform operation
fmsub.s f31, f22, f16, f6, rne # perform operation
fmsub.s f31, f22, f16, f6, rtz # perform operation
fmsub.s f31, f22, f16, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f31, f22, f16, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f31, f22, f16, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f31, f22, f16, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f31, f22, f16, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f31, f22, f16, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0x400000)
li x3, 0x81df9853203d9e16 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f23, 0(x2) # load 0xc0000000 from memory into f23
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f7, 0(x2) # load 0x00400000 from memory into f7
li x3, 0x478598e7e100d869 # load x3 with value 0x478598e7e100d869
sw x3, 0(x2) # store 0x478598e7e100d869 in memory
flw f10, 0(x2) # load 0x478598e7e100d869 from memory into f10
fmsub.s f3, f23, f7, f10, dyn # perform operation
fmsub.s f3, f23, f7, f10, rdn # perform operation
fmsub.s f3, f23, f7, f10, rmm # perform operation
fmsub.s f3, f23, f7, f10, rne # perform operation
fmsub.s f3, f23, f7, f10, rtz # perform operation
fmsub.s f3, f23, f7, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f3, f23, f7, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f3, f23, f7, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f3, f23, f7, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f3, f23, f7, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f3, f23, f7, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0x80400000)
li x26, 0xbf39ffc70ccd9301 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f21, 0(x2) # load 0xc0000000 from memory into f21
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f16, 0(x2) # load 0x80400000 from memory into f16
li x3, 0xad8e629573530152 # load x3 with value 0xad8e629573530152
sw x3, 0(x2) # store 0xad8e629573530152 in memory
flw f24, 0(x2) # load 0xad8e629573530152 from memory into f24
fmsub.s f26, f21, f16, f24, dyn # perform operation
fmsub.s f26, f21, f16, f24, rdn # perform operation
fmsub.s f26, f21, f16, f24, rmm # perform operation
fmsub.s f26, f21, f16, f24, rne # perform operation
fmsub.s f26, f21, f16, f24, rtz # perform operation
fmsub.s f26, f21, f16, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f26, f21, f16, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f26, f21, f16, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f26, f21, f16, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f26, f21, f16, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f26, f21, f16, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0x1)
li x27, 0x372ae4721805ef50 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f26, 0(x2) # load 0xc0000000 from memory into f26
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f21, 0(x2) # load 0x00000001 from memory into f21
li x3, 0x127c7237590e881d # load x3 with value 0x127c7237590e881d
sw x3, 0(x2) # store 0x127c7237590e881d in memory
flw f20, 0(x2) # load 0x127c7237590e881d from memory into f20
fmsub.s f27, f26, f21, f20, dyn # perform operation
fmsub.s f27, f26, f21, f20, rdn # perform operation
fmsub.s f27, f26, f21, f20, rmm # perform operation
fmsub.s f27, f26, f21, f20, rne # perform operation
fmsub.s f27, f26, f21, f20, rtz # perform operation
fmsub.s f27, f26, f21, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f27, f26, f21, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f27, f26, f21, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f27, f26, f21, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f27, f26, f21, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f27, f26, f21, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0x80000001)
li x29, 0x16f577f1c785d0e9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f9, 0(x2) # load 0xc0000000 from memory into f9
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f11, 0(x2) # load 0x80000001 from memory into f11
li x3, 0x62cdd9641386fce # load x3 with value 0x62cdd9641386fce
sw x3, 0(x2) # store 0x62cdd9641386fce in memory
flw f23, 0(x2) # load 0x62cdd9641386fce from memory into f23
fmsub.s f29, f9, f11, f23, dyn # perform operation
fmsub.s f29, f9, f11, f23, rdn # perform operation
fmsub.s f29, f9, f11, f23, rmm # perform operation
fmsub.s f29, f9, f11, f23, rne # perform operation
fmsub.s f29, f9, f11, f23, rtz # perform operation
fmsub.s f29, f9, f11, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f29, f9, f11, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f29, f9, f11, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f29, f9, f11, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f29, f9, f11, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f29, f9, f11, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0x7f800000)
li x29, 0x415e3d73bee8ccbf # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f10, 0(x2) # load 0xc0000000 from memory into f10
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f3, 0(x2) # load 0x7f800000 from memory into f3
li x3, 0x2b43d7c26df98840 # load x3 with value 0x2b43d7c26df98840
sw x3, 0(x2) # store 0x2b43d7c26df98840 in memory
flw f31, 0(x2) # load 0x2b43d7c26df98840 from memory into f31
fmsub.s f29, f10, f3, f31, dyn # perform operation
fmsub.s f29, f10, f3, f31, rdn # perform operation
fmsub.s f29, f10, f3, f31, rmm # perform operation
fmsub.s f29, f10, f3, f31, rne # perform operation
fmsub.s f29, f10, f3, f31, rtz # perform operation
fmsub.s f29, f10, f3, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f29, f10, f3, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f29, f10, f3, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f29, f10, f3, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f29, f10, f3, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f29, f10, f3, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0xff800000)
li x21, 0x1c65e4fb293099fb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f2, 0(x2) # load 0xc0000000 from memory into f2
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f7, 0(x2) # load 0xff800000 from memory into f7
li x3, 0xbb9276f2429d1b2a # load x3 with value 0xbb9276f2429d1b2a
sw x3, 0(x2) # store 0xbb9276f2429d1b2a in memory
flw f20, 0(x2) # load 0xbb9276f2429d1b2a from memory into f20
fmsub.s f21, f2, f7, f20, dyn # perform operation
fmsub.s f21, f2, f7, f20, rdn # perform operation
fmsub.s f21, f2, f7, f20, rmm # perform operation
fmsub.s f21, f2, f7, f20, rne # perform operation
fmsub.s f21, f2, f7, f20, rtz # perform operation
fmsub.s f21, f2, f7, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f21, f2, f7, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f21, f2, f7, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f21, f2, f7, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f21, f2, f7, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f21, f2, f7, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0x7fc00000)
li x15, 0xb72014f00fbebb18 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f16, 0(x2) # load 0xc0000000 from memory into f16
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f23, 0(x2) # load 0x7fc00000 from memory into f23
li x3, 0x7e8d6624e6a13f4 # load x3 with value 0x7e8d6624e6a13f4
sw x3, 0(x2) # store 0x7e8d6624e6a13f4 in memory
flw f26, 0(x2) # load 0x7e8d6624e6a13f4 from memory into f26
fmsub.s f15, f16, f23, f26, dyn # perform operation
fmsub.s f15, f16, f23, f26, rdn # perform operation
fmsub.s f15, f16, f23, f26, rmm # perform operation
fmsub.s f15, f16, f23, f26, rne # perform operation
fmsub.s f15, f16, f23, f26, rtz # perform operation
fmsub.s f15, f16, f23, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f15, f16, f23, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f15, f16, f23, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f15, f16, f23, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f15, f16, f23, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f15, f16, f23, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0x7fffffff)
li x18, 0xdcc2926c3b0d9f0d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f24, 0(x2) # load 0xc0000000 from memory into f24
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f19, 0(x2) # load 0x7fffffff from memory into f19
li x3, 0xcd024694d856758f # load x3 with value 0xcd024694d856758f
sw x3, 0(x2) # store 0xcd024694d856758f in memory
flw f8, 0(x2) # load 0xcd024694d856758f from memory into f8
fmsub.s f18, f24, f19, f8, dyn # perform operation
fmsub.s f18, f24, f19, f8, rdn # perform operation
fmsub.s f18, f24, f19, f8, rmm # perform operation
fmsub.s f18, f24, f19, f8, rne # perform operation
fmsub.s f18, f24, f19, f8, rtz # perform operation
fmsub.s f18, f24, f19, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f18, f24, f19, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f18, f24, f19, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f18, f24, f19, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f18, f24, f19, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f18, f24, f19, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0x7f800001)
li x23, 0x7afc03d8090bc8f7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f21, 0(x2) # load 0xc0000000 from memory into f21
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f4, 0(x2) # load 0x7f800001 from memory into f4
li x3, 0x45ce3ba11e310c32 # load x3 with value 0x45ce3ba11e310c32
sw x3, 0(x2) # store 0x45ce3ba11e310c32 in memory
flw f7, 0(x2) # load 0x45ce3ba11e310c32 from memory into f7
fmsub.s f23, f21, f4, f7, dyn # perform operation
fmsub.s f23, f21, f4, f7, rdn # perform operation
fmsub.s f23, f21, f4, f7, rmm # perform operation
fmsub.s f23, f21, f4, f7, rne # perform operation
fmsub.s f23, f21, f4, f7, rtz # perform operation
fmsub.s f23, f21, f4, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f23, f21, f4, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f23, f21, f4, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f23, f21, f4, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f23, f21, f4, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f23, f21, f4, f7 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0x7fbfffff)
li x6, 0xc373b759a0849732 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f31, 0(x2) # load 0xc0000000 from memory into f31
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f3, 0(x2) # load 0x7fbfffff from memory into f3
li x3, 0x36ca270401760ed1 # load x3 with value 0x36ca270401760ed1
sw x3, 0(x2) # store 0x36ca270401760ed1 in memory
flw f4, 0(x2) # load 0x36ca270401760ed1 from memory into f4
fmsub.s f6, f31, f3, f4, dyn # perform operation
fmsub.s f6, f31, f3, f4, rdn # perform operation
fmsub.s f6, f31, f3, f4, rmm # perform operation
fmsub.s f6, f31, f3, f4, rne # perform operation
fmsub.s f6, f31, f3, f4, rtz # perform operation
fmsub.s f6, f31, f3, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f6, f31, f3, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f6, f31, f3, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f6, f31, f3, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f6, f31, f3, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f6, f31, f3, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0x7ef8654f)
li x14, 0x7f250049031d46a4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f15, 0(x2) # load 0xc0000000 from memory into f15
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f30, 0(x2) # load 0x7ef8654f from memory into f30
li x3, 0xab1eb30f0c4678ea # load x3 with value 0xab1eb30f0c4678ea
sw x3, 0(x2) # store 0xab1eb30f0c4678ea in memory
flw f8, 0(x2) # load 0xab1eb30f0c4678ea from memory into f8
fmsub.s f14, f15, f30, f8, dyn # perform operation
fmsub.s f14, f15, f30, f8, rdn # perform operation
fmsub.s f14, f15, f30, f8, rmm # perform operation
fmsub.s f14, f15, f30, f8, rne # perform operation
fmsub.s f14, f15, f30, f8, rtz # perform operation
fmsub.s f14, f15, f30, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f14, f15, f30, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f14, f15, f30, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f14, f15, f30, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f14, f15, f30, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f14, f15, f30, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0x813d9ab0)
li x25, 0x8054f4f25328b598 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f16, 0(x2) # load 0xc0000000 from memory into f16
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f10, 0(x2) # load 0x813d9ab0 from memory into f10
li x3, 0x2c2589b7f580c96f # load x3 with value 0x2c2589b7f580c96f
sw x3, 0(x2) # store 0x2c2589b7f580c96f in memory
flw f6, 0(x2) # load 0x2c2589b7f580c96f from memory into f6
fmsub.s f25, f16, f10, f6, dyn # perform operation
fmsub.s f25, f16, f10, f6, rdn # perform operation
fmsub.s f25, f16, f10, f6, rmm # perform operation
fmsub.s f25, f16, f10, f6, rne # perform operation
fmsub.s f25, f16, f10, f6, rtz # perform operation
fmsub.s f25, f16, f10, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f25, f16, f10, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f25, f16, f10, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f25, f16, f10, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f25, f16, f10, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f25, f16, f10, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0x0)
li x29, 0x181e67d468cfec8c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f9, 0(x2) # load 0x00800000 from memory into f9
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f23, 0(x2) # load 0x00000000 from memory into f23
li x3, 0xf0c59fe97af67e18 # load x3 with value 0xf0c59fe97af67e18
sw x3, 0(x2) # store 0xf0c59fe97af67e18 in memory
flw f6, 0(x2) # load 0xf0c59fe97af67e18 from memory into f6
fmsub.s f29, f9, f23, f6, dyn # perform operation
fmsub.s f29, f9, f23, f6, rdn # perform operation
fmsub.s f29, f9, f23, f6, rmm # perform operation
fmsub.s f29, f9, f23, f6, rne # perform operation
fmsub.s f29, f9, f23, f6, rtz # perform operation
fmsub.s f29, f9, f23, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f29, f9, f23, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f29, f9, f23, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f29, f9, f23, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f29, f9, f23, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f29, f9, f23, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0x80000000)
li x8, 0xcaaa02a288fac318 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f23, 0(x2) # load 0x00800000 from memory into f23
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f18, 0(x2) # load 0x80000000 from memory into f18
li x3, 0x17bbada3aec7f13c # load x3 with value 0x17bbada3aec7f13c
sw x3, 0(x2) # store 0x17bbada3aec7f13c in memory
flw f1, 0(x2) # load 0x17bbada3aec7f13c from memory into f1
fmsub.s f8, f23, f18, f1, dyn # perform operation
fmsub.s f8, f23, f18, f1, rdn # perform operation
fmsub.s f8, f23, f18, f1, rmm # perform operation
fmsub.s f8, f23, f18, f1, rne # perform operation
fmsub.s f8, f23, f18, f1, rtz # perform operation
fmsub.s f8, f23, f18, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f8, f23, f18, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f8, f23, f18, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f8, f23, f18, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f8, f23, f18, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f8, f23, f18, f1 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0x3f800000)
li x13, 0x8af3ed41623b7cf9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f12, 0(x2) # load 0x00800000 from memory into f12
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f27, 0(x2) # load 0x3f800000 from memory into f27
li x3, 0x869db263d5bec495 # load x3 with value 0x869db263d5bec495
sw x3, 0(x2) # store 0x869db263d5bec495 in memory
flw f31, 0(x2) # load 0x869db263d5bec495 from memory into f31
fmsub.s f13, f12, f27, f31, dyn # perform operation
fmsub.s f13, f12, f27, f31, rdn # perform operation
fmsub.s f13, f12, f27, f31, rmm # perform operation
fmsub.s f13, f12, f27, f31, rne # perform operation
fmsub.s f13, f12, f27, f31, rtz # perform operation
fmsub.s f13, f12, f27, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f13, f12, f27, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f13, f12, f27, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f13, f12, f27, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f13, f12, f27, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f13, f12, f27, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0xbf800000)
li x14, 0x5548f4e47f0ad866 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f3, 0(x2) # load 0x00800000 from memory into f3
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f2, 0(x2) # load 0xbf800000 from memory into f2
li x3, 0xfc26b26684188a39 # load x3 with value 0xfc26b26684188a39
sw x3, 0(x2) # store 0xfc26b26684188a39 in memory
flw f17, 0(x2) # load 0xfc26b26684188a39 from memory into f17
fmsub.s f14, f3, f2, f17, dyn # perform operation
fmsub.s f14, f3, f2, f17, rdn # perform operation
fmsub.s f14, f3, f2, f17, rmm # perform operation
fmsub.s f14, f3, f2, f17, rne # perform operation
fmsub.s f14, f3, f2, f17, rtz # perform operation
fmsub.s f14, f3, f2, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f14, f3, f2, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f14, f3, f2, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f14, f3, f2, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f14, f3, f2, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f14, f3, f2, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0x3fc00000)
li x12, 0xb1b480315b89ca8d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f6, 0(x2) # load 0x00800000 from memory into f6
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f28, 0(x2) # load 0x3fc00000 from memory into f28
li x3, 0xa37361aad5432830 # load x3 with value 0xa37361aad5432830
sw x3, 0(x2) # store 0xa37361aad5432830 in memory
flw f1, 0(x2) # load 0xa37361aad5432830 from memory into f1
fmsub.s f12, f6, f28, f1, dyn # perform operation
fmsub.s f12, f6, f28, f1, rdn # perform operation
fmsub.s f12, f6, f28, f1, rmm # perform operation
fmsub.s f12, f6, f28, f1, rne # perform operation
fmsub.s f12, f6, f28, f1, rtz # perform operation
fmsub.s f12, f6, f28, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f12, f6, f28, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f12, f6, f28, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f12, f6, f28, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f12, f6, f28, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f12, f6, f28, f1 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0xbfc00000)
li x9, 0x974b92a43c9aa0ca # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f30, 0(x2) # load 0x00800000 from memory into f30
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f25, 0(x2) # load 0xbfc00000 from memory into f25
li x3, 0x4107f23104a7a94c # load x3 with value 0x4107f23104a7a94c
sw x3, 0(x2) # store 0x4107f23104a7a94c in memory
flw f24, 0(x2) # load 0x4107f23104a7a94c from memory into f24
fmsub.s f9, f30, f25, f24, dyn # perform operation
fmsub.s f9, f30, f25, f24, rdn # perform operation
fmsub.s f9, f30, f25, f24, rmm # perform operation
fmsub.s f9, f30, f25, f24, rne # perform operation
fmsub.s f9, f30, f25, f24, rtz # perform operation
fmsub.s f9, f30, f25, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f9, f30, f25, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f9, f30, f25, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f9, f30, f25, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f9, f30, f25, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f9, f30, f25, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0x40000000)
li x10, 0x62de1fe84dff560d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f24, 0(x2) # load 0x00800000 from memory into f24
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f25, 0(x2) # load 0x40000000 from memory into f25
li x3, 0xcc7220e0444f61b8 # load x3 with value 0xcc7220e0444f61b8
sw x3, 0(x2) # store 0xcc7220e0444f61b8 in memory
flw f27, 0(x2) # load 0xcc7220e0444f61b8 from memory into f27
fmsub.s f10, f24, f25, f27, dyn # perform operation
fmsub.s f10, f24, f25, f27, rdn # perform operation
fmsub.s f10, f24, f25, f27, rmm # perform operation
fmsub.s f10, f24, f25, f27, rne # perform operation
fmsub.s f10, f24, f25, f27, rtz # perform operation
fmsub.s f10, f24, f25, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f10, f24, f25, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f10, f24, f25, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f10, f24, f25, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f10, f24, f25, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f10, f24, f25, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0xc0000000)
li x19, 0x736968a183e60024 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f22, 0(x2) # load 0x00800000 from memory into f22
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f9, 0(x2) # load 0xc0000000 from memory into f9
li x3, 0x24aa67b14d1fcc58 # load x3 with value 0x24aa67b14d1fcc58
sw x3, 0(x2) # store 0x24aa67b14d1fcc58 in memory
flw f18, 0(x2) # load 0x24aa67b14d1fcc58 from memory into f18
fmsub.s f19, f22, f9, f18, dyn # perform operation
fmsub.s f19, f22, f9, f18, rdn # perform operation
fmsub.s f19, f22, f9, f18, rmm # perform operation
fmsub.s f19, f22, f9, f18, rne # perform operation
fmsub.s f19, f22, f9, f18, rtz # perform operation
fmsub.s f19, f22, f9, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f19, f22, f9, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f19, f22, f9, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f19, f22, f9, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f19, f22, f9, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f19, f22, f9, f18 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0x800000)
li x8, 0x39f07adc1d765cf5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f18, 0(x2) # load 0x00800000 from memory into f18
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f27, 0(x2) # load 0x00800000 from memory into f27
li x3, 0x3ef019ce6bbf821 # load x3 with value 0x3ef019ce6bbf821
sw x3, 0(x2) # store 0x3ef019ce6bbf821 in memory
flw f28, 0(x2) # load 0x3ef019ce6bbf821 from memory into f28
fmsub.s f8, f18, f27, f28, dyn # perform operation
fmsub.s f8, f18, f27, f28, rdn # perform operation
fmsub.s f8, f18, f27, f28, rmm # perform operation
fmsub.s f8, f18, f27, f28, rne # perform operation
fmsub.s f8, f18, f27, f28, rtz # perform operation
fmsub.s f8, f18, f27, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f8, f18, f27, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f8, f18, f27, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f8, f18, f27, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f8, f18, f27, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f8, f18, f27, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0x80800000)
li x4, 0x6abc260c3b3d98ff # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f25, 0(x2) # load 0x00800000 from memory into f25
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f11, 0(x2) # load 0x80800000 from memory into f11
li x3, 0xdb219df199e8e5db # load x3 with value 0xdb219df199e8e5db
sw x3, 0(x2) # store 0xdb219df199e8e5db in memory
flw f17, 0(x2) # load 0xdb219df199e8e5db from memory into f17
fmsub.s f4, f25, f11, f17, dyn # perform operation
fmsub.s f4, f25, f11, f17, rdn # perform operation
fmsub.s f4, f25, f11, f17, rmm # perform operation
fmsub.s f4, f25, f11, f17, rne # perform operation
fmsub.s f4, f25, f11, f17, rtz # perform operation
fmsub.s f4, f25, f11, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f4, f25, f11, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f4, f25, f11, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f4, f25, f11, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f4, f25, f11, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f4, f25, f11, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0x7f7fffff)
li x27, 0x418f7730fd951654 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f9, 0(x2) # load 0x00800000 from memory into f9
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f28, 0(x2) # load 0x7f7fffff from memory into f28
li x3, 0x9f865a605a418233 # load x3 with value 0x9f865a605a418233
sw x3, 0(x2) # store 0x9f865a605a418233 in memory
flw f10, 0(x2) # load 0x9f865a605a418233 from memory into f10
fmsub.s f27, f9, f28, f10, dyn # perform operation
fmsub.s f27, f9, f28, f10, rdn # perform operation
fmsub.s f27, f9, f28, f10, rmm # perform operation
fmsub.s f27, f9, f28, f10, rne # perform operation
fmsub.s f27, f9, f28, f10, rtz # perform operation
fmsub.s f27, f9, f28, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f27, f9, f28, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f27, f9, f28, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f27, f9, f28, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f27, f9, f28, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f27, f9, f28, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0xff7fffff)
li x10, 0x6ee00e647a54742c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f21, 0(x2) # load 0x00800000 from memory into f21
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f5, 0(x2) # load 0xff7fffff from memory into f5
li x3, 0x9e8fa2bd35c67dd7 # load x3 with value 0x9e8fa2bd35c67dd7
sw x3, 0(x2) # store 0x9e8fa2bd35c67dd7 in memory
flw f16, 0(x2) # load 0x9e8fa2bd35c67dd7 from memory into f16
fmsub.s f10, f21, f5, f16, dyn # perform operation
fmsub.s f10, f21, f5, f16, rdn # perform operation
fmsub.s f10, f21, f5, f16, rmm # perform operation
fmsub.s f10, f21, f5, f16, rne # perform operation
fmsub.s f10, f21, f5, f16, rtz # perform operation
fmsub.s f10, f21, f5, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f10, f21, f5, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f10, f21, f5, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f10, f21, f5, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f10, f21, f5, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f10, f21, f5, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0x7fffff)
li x19, 0xb392f352ac9a2cee # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f27, 0(x2) # load 0x00800000 from memory into f27
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f26, 0(x2) # load 0x007fffff from memory into f26
li x3, 0x33bec8a1e419a186 # load x3 with value 0x33bec8a1e419a186
sw x3, 0(x2) # store 0x33bec8a1e419a186 in memory
flw f7, 0(x2) # load 0x33bec8a1e419a186 from memory into f7
fmsub.s f19, f27, f26, f7, dyn # perform operation
fmsub.s f19, f27, f26, f7, rdn # perform operation
fmsub.s f19, f27, f26, f7, rmm # perform operation
fmsub.s f19, f27, f26, f7, rne # perform operation
fmsub.s f19, f27, f26, f7, rtz # perform operation
fmsub.s f19, f27, f26, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f19, f27, f26, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f19, f27, f26, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f19, f27, f26, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f19, f27, f26, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f19, f27, f26, f7 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0x807fffff)
li x23, 0xbd7112774f1f3610 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f29, 0(x2) # load 0x00800000 from memory into f29
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f15, 0(x2) # load 0x807fffff from memory into f15
li x3, 0x6d0b9865f0f03586 # load x3 with value 0x6d0b9865f0f03586
sw x3, 0(x2) # store 0x6d0b9865f0f03586 in memory
flw f17, 0(x2) # load 0x6d0b9865f0f03586 from memory into f17
fmsub.s f23, f29, f15, f17, dyn # perform operation
fmsub.s f23, f29, f15, f17, rdn # perform operation
fmsub.s f23, f29, f15, f17, rmm # perform operation
fmsub.s f23, f29, f15, f17, rne # perform operation
fmsub.s f23, f29, f15, f17, rtz # perform operation
fmsub.s f23, f29, f15, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f23, f29, f15, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f23, f29, f15, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f23, f29, f15, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f23, f29, f15, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f23, f29, f15, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0x400000)
li x29, 0xce5d1a527dab2458 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f15, 0(x2) # load 0x00800000 from memory into f15
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f28, 0(x2) # load 0x00400000 from memory into f28
li x3, 0xef7eb04a8ea5d852 # load x3 with value 0xef7eb04a8ea5d852
sw x3, 0(x2) # store 0xef7eb04a8ea5d852 in memory
flw f12, 0(x2) # load 0xef7eb04a8ea5d852 from memory into f12
fmsub.s f29, f15, f28, f12, dyn # perform operation
fmsub.s f29, f15, f28, f12, rdn # perform operation
fmsub.s f29, f15, f28, f12, rmm # perform operation
fmsub.s f29, f15, f28, f12, rne # perform operation
fmsub.s f29, f15, f28, f12, rtz # perform operation
fmsub.s f29, f15, f28, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f29, f15, f28, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f29, f15, f28, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f29, f15, f28, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f29, f15, f28, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f29, f15, f28, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0x80400000)
li x1, 0x123076c514d7be90 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f2, 0(x2) # load 0x00800000 from memory into f2
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f12, 0(x2) # load 0x80400000 from memory into f12
li x3, 0xd770017b7dcbdb1e # load x3 with value 0xd770017b7dcbdb1e
sw x3, 0(x2) # store 0xd770017b7dcbdb1e in memory
flw f19, 0(x2) # load 0xd770017b7dcbdb1e from memory into f19
fmsub.s f1, f2, f12, f19, dyn # perform operation
fmsub.s f1, f2, f12, f19, rdn # perform operation
fmsub.s f1, f2, f12, f19, rmm # perform operation
fmsub.s f1, f2, f12, f19, rne # perform operation
fmsub.s f1, f2, f12, f19, rtz # perform operation
fmsub.s f1, f2, f12, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f1, f2, f12, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f1, f2, f12, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f1, f2, f12, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f1, f2, f12, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f1, f2, f12, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0x1)
li x26, 0x62005072ef958356 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f21, 0(x2) # load 0x00800000 from memory into f21
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f3, 0(x2) # load 0x00000001 from memory into f3
li x3, 0xe13fac25bbcbd1be # load x3 with value 0xe13fac25bbcbd1be
sw x3, 0(x2) # store 0xe13fac25bbcbd1be in memory
flw f6, 0(x2) # load 0xe13fac25bbcbd1be from memory into f6
fmsub.s f26, f21, f3, f6, dyn # perform operation
fmsub.s f26, f21, f3, f6, rdn # perform operation
fmsub.s f26, f21, f3, f6, rmm # perform operation
fmsub.s f26, f21, f3, f6, rne # perform operation
fmsub.s f26, f21, f3, f6, rtz # perform operation
fmsub.s f26, f21, f3, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f26, f21, f3, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f26, f21, f3, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f26, f21, f3, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f26, f21, f3, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f26, f21, f3, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0x80000001)
li x30, 0xe3d324381c994d2b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f11, 0(x2) # load 0x00800000 from memory into f11
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f16, 0(x2) # load 0x80000001 from memory into f16
li x3, 0x669067fda300afe7 # load x3 with value 0x669067fda300afe7
sw x3, 0(x2) # store 0x669067fda300afe7 in memory
flw f19, 0(x2) # load 0x669067fda300afe7 from memory into f19
fmsub.s f30, f11, f16, f19, dyn # perform operation
fmsub.s f30, f11, f16, f19, rdn # perform operation
fmsub.s f30, f11, f16, f19, rmm # perform operation
fmsub.s f30, f11, f16, f19, rne # perform operation
fmsub.s f30, f11, f16, f19, rtz # perform operation
fmsub.s f30, f11, f16, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f30, f11, f16, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f30, f11, f16, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f30, f11, f16, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f30, f11, f16, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f30, f11, f16, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0x7f800000)
li x15, 0xaa6b74203ae68dc3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f6, 0(x2) # load 0x00800000 from memory into f6
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f12, 0(x2) # load 0x7f800000 from memory into f12
li x3, 0xbea1f360e0a2bcda # load x3 with value 0xbea1f360e0a2bcda
sw x3, 0(x2) # store 0xbea1f360e0a2bcda in memory
flw f1, 0(x2) # load 0xbea1f360e0a2bcda from memory into f1
fmsub.s f15, f6, f12, f1, dyn # perform operation
fmsub.s f15, f6, f12, f1, rdn # perform operation
fmsub.s f15, f6, f12, f1, rmm # perform operation
fmsub.s f15, f6, f12, f1, rne # perform operation
fmsub.s f15, f6, f12, f1, rtz # perform operation
fmsub.s f15, f6, f12, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f15, f6, f12, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f15, f6, f12, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f15, f6, f12, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f15, f6, f12, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f15, f6, f12, f1 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0xff800000)
li x1, 0x9be2213270b6a96d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f16, 0(x2) # load 0x00800000 from memory into f16
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f6, 0(x2) # load 0xff800000 from memory into f6
li x3, 0x455dd3e3c3d27d4f # load x3 with value 0x455dd3e3c3d27d4f
sw x3, 0(x2) # store 0x455dd3e3c3d27d4f in memory
flw f18, 0(x2) # load 0x455dd3e3c3d27d4f from memory into f18
fmsub.s f1, f16, f6, f18, dyn # perform operation
fmsub.s f1, f16, f6, f18, rdn # perform operation
fmsub.s f1, f16, f6, f18, rmm # perform operation
fmsub.s f1, f16, f6, f18, rne # perform operation
fmsub.s f1, f16, f6, f18, rtz # perform operation
fmsub.s f1, f16, f6, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f1, f16, f6, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f1, f16, f6, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f1, f16, f6, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f1, f16, f6, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f1, f16, f6, f18 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0x7fc00000)
li x6, 0x0d880a58e2e22858 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f11, 0(x2) # load 0x00800000 from memory into f11
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f27, 0(x2) # load 0x7fc00000 from memory into f27
li x3, 0xb3c3a5f11abe5e62 # load x3 with value 0xb3c3a5f11abe5e62
sw x3, 0(x2) # store 0xb3c3a5f11abe5e62 in memory
flw f26, 0(x2) # load 0xb3c3a5f11abe5e62 from memory into f26
fmsub.s f6, f11, f27, f26, dyn # perform operation
fmsub.s f6, f11, f27, f26, rdn # perform operation
fmsub.s f6, f11, f27, f26, rmm # perform operation
fmsub.s f6, f11, f27, f26, rne # perform operation
fmsub.s f6, f11, f27, f26, rtz # perform operation
fmsub.s f6, f11, f27, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f6, f11, f27, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f6, f11, f27, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f6, f11, f27, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f6, f11, f27, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f6, f11, f27, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0x7fffffff)
li x20, 0x671cfc1a68e58184 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f11, 0(x2) # load 0x00800000 from memory into f11
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f10, 0(x2) # load 0x7fffffff from memory into f10
li x3, 0x7fe7cde1ec33f1c5 # load x3 with value 0x7fe7cde1ec33f1c5
sw x3, 0(x2) # store 0x7fe7cde1ec33f1c5 in memory
flw f22, 0(x2) # load 0x7fe7cde1ec33f1c5 from memory into f22
fmsub.s f20, f11, f10, f22, dyn # perform operation
fmsub.s f20, f11, f10, f22, rdn # perform operation
fmsub.s f20, f11, f10, f22, rmm # perform operation
fmsub.s f20, f11, f10, f22, rne # perform operation
fmsub.s f20, f11, f10, f22, rtz # perform operation
fmsub.s f20, f11, f10, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f20, f11, f10, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f20, f11, f10, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f20, f11, f10, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f20, f11, f10, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f20, f11, f10, f22 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0x7f800001)
li x1, 0xea4eae6c74196dde # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f11, 0(x2) # load 0x00800000 from memory into f11
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f9, 0(x2) # load 0x7f800001 from memory into f9
li x3, 0x4591620f7005103b # load x3 with value 0x4591620f7005103b
sw x3, 0(x2) # store 0x4591620f7005103b in memory
flw f2, 0(x2) # load 0x4591620f7005103b from memory into f2
fmsub.s f1, f11, f9, f2, dyn # perform operation
fmsub.s f1, f11, f9, f2, rdn # perform operation
fmsub.s f1, f11, f9, f2, rmm # perform operation
fmsub.s f1, f11, f9, f2, rne # perform operation
fmsub.s f1, f11, f9, f2, rtz # perform operation
fmsub.s f1, f11, f9, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f1, f11, f9, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f1, f11, f9, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f1, f11, f9, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f1, f11, f9, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f1, f11, f9, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0x7fbfffff)
li x19, 0x71b1c50b58ebc265 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f20, 0(x2) # load 0x00800000 from memory into f20
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f9, 0(x2) # load 0x7fbfffff from memory into f9
li x3, 0x7e29d46584e6424f # load x3 with value 0x7e29d46584e6424f
sw x3, 0(x2) # store 0x7e29d46584e6424f in memory
flw f15, 0(x2) # load 0x7e29d46584e6424f from memory into f15
fmsub.s f19, f20, f9, f15, dyn # perform operation
fmsub.s f19, f20, f9, f15, rdn # perform operation
fmsub.s f19, f20, f9, f15, rmm # perform operation
fmsub.s f19, f20, f9, f15, rne # perform operation
fmsub.s f19, f20, f9, f15, rtz # perform operation
fmsub.s f19, f20, f9, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f19, f20, f9, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f19, f20, f9, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f19, f20, f9, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f19, f20, f9, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f19, f20, f9, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0x7ef8654f)
li x2, 0x3d35ada6b0ca0968 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f9, 0(x2) # load 0x00800000 from memory into f9
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f19, 0(x2) # load 0x7ef8654f from memory into f19
li x3, 0xf852058c29ff7fd6 # load x3 with value 0xf852058c29ff7fd6
sw x3, 0(x2) # store 0xf852058c29ff7fd6 in memory
flw f13, 0(x2) # load 0xf852058c29ff7fd6 from memory into f13
fmsub.s f2, f9, f19, f13, dyn # perform operation
fmsub.s f2, f9, f19, f13, rdn # perform operation
fmsub.s f2, f9, f19, f13, rmm # perform operation
fmsub.s f2, f9, f19, f13, rne # perform operation
fmsub.s f2, f9, f19, f13, rtz # perform operation
fmsub.s f2, f9, f19, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f2, f9, f19, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f2, f9, f19, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f2, f9, f19, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f2, f9, f19, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f2, f9, f19, f13 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0x813d9ab0)
li x28, 0x16fcc982de144b75 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f1, 0(x2) # load 0x00800000 from memory into f1
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f15, 0(x2) # load 0x813d9ab0 from memory into f15
li x3, 0xa70bfc22d2299d9c # load x3 with value 0xa70bfc22d2299d9c
sw x3, 0(x2) # store 0xa70bfc22d2299d9c in memory
flw f5, 0(x2) # load 0xa70bfc22d2299d9c from memory into f5
fmsub.s f28, f1, f15, f5, dyn # perform operation
fmsub.s f28, f1, f15, f5, rdn # perform operation
fmsub.s f28, f1, f15, f5, rmm # perform operation
fmsub.s f28, f1, f15, f5, rne # perform operation
fmsub.s f28, f1, f15, f5, rtz # perform operation
fmsub.s f28, f1, f15, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f28, f1, f15, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f28, f1, f15, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f28, f1, f15, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f28, f1, f15, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f28, f1, f15, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0x0)
li x14, 0x1801e24eae1eaf43 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f1, 0(x2) # load 0x80800000 from memory into f1
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f8, 0(x2) # load 0x00000000 from memory into f8
li x3, 0x52f6cdfb972ebe82 # load x3 with value 0x52f6cdfb972ebe82
sw x3, 0(x2) # store 0x52f6cdfb972ebe82 in memory
flw f30, 0(x2) # load 0x52f6cdfb972ebe82 from memory into f30
fmsub.s f14, f1, f8, f30, dyn # perform operation
fmsub.s f14, f1, f8, f30, rdn # perform operation
fmsub.s f14, f1, f8, f30, rmm # perform operation
fmsub.s f14, f1, f8, f30, rne # perform operation
fmsub.s f14, f1, f8, f30, rtz # perform operation
fmsub.s f14, f1, f8, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f14, f1, f8, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f14, f1, f8, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f14, f1, f8, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f14, f1, f8, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f14, f1, f8, f30 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0x80000000)
li x21, 0x8726650e5b73775d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f15, 0(x2) # load 0x80800000 from memory into f15
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f8, 0(x2) # load 0x80000000 from memory into f8
li x3, 0x90a6547412a8bedc # load x3 with value 0x90a6547412a8bedc
sw x3, 0(x2) # store 0x90a6547412a8bedc in memory
flw f7, 0(x2) # load 0x90a6547412a8bedc from memory into f7
fmsub.s f21, f15, f8, f7, dyn # perform operation
fmsub.s f21, f15, f8, f7, rdn # perform operation
fmsub.s f21, f15, f8, f7, rmm # perform operation
fmsub.s f21, f15, f8, f7, rne # perform operation
fmsub.s f21, f15, f8, f7, rtz # perform operation
fmsub.s f21, f15, f8, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f21, f15, f8, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f21, f15, f8, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f21, f15, f8, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f21, f15, f8, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f21, f15, f8, f7 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0x3f800000)
li x12, 0x94c8b5a1a57f9ce6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f17, 0(x2) # load 0x80800000 from memory into f17
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f22, 0(x2) # load 0x3f800000 from memory into f22
li x3, 0xfdc9813c87657732 # load x3 with value 0xfdc9813c87657732
sw x3, 0(x2) # store 0xfdc9813c87657732 in memory
flw f31, 0(x2) # load 0xfdc9813c87657732 from memory into f31
fmsub.s f12, f17, f22, f31, dyn # perform operation
fmsub.s f12, f17, f22, f31, rdn # perform operation
fmsub.s f12, f17, f22, f31, rmm # perform operation
fmsub.s f12, f17, f22, f31, rne # perform operation
fmsub.s f12, f17, f22, f31, rtz # perform operation
fmsub.s f12, f17, f22, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f12, f17, f22, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f12, f17, f22, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f12, f17, f22, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f12, f17, f22, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f12, f17, f22, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0xbf800000)
li x9, 0x20b21afdfa516c3b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f27, 0(x2) # load 0x80800000 from memory into f27
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f13, 0(x2) # load 0xbf800000 from memory into f13
li x3, 0x27d90ba5034f1b87 # load x3 with value 0x27d90ba5034f1b87
sw x3, 0(x2) # store 0x27d90ba5034f1b87 in memory
flw f15, 0(x2) # load 0x27d90ba5034f1b87 from memory into f15
fmsub.s f9, f27, f13, f15, dyn # perform operation
fmsub.s f9, f27, f13, f15, rdn # perform operation
fmsub.s f9, f27, f13, f15, rmm # perform operation
fmsub.s f9, f27, f13, f15, rne # perform operation
fmsub.s f9, f27, f13, f15, rtz # perform operation
fmsub.s f9, f27, f13, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f9, f27, f13, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f9, f27, f13, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f9, f27, f13, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f9, f27, f13, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f9, f27, f13, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0x3fc00000)
li x27, 0x9c95439c67fa3cc0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f5, 0(x2) # load 0x80800000 from memory into f5
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f23, 0(x2) # load 0x3fc00000 from memory into f23
li x3, 0xf462b728e0be754b # load x3 with value 0xf462b728e0be754b
sw x3, 0(x2) # store 0xf462b728e0be754b in memory
flw f3, 0(x2) # load 0xf462b728e0be754b from memory into f3
fmsub.s f27, f5, f23, f3, dyn # perform operation
fmsub.s f27, f5, f23, f3, rdn # perform operation
fmsub.s f27, f5, f23, f3, rmm # perform operation
fmsub.s f27, f5, f23, f3, rne # perform operation
fmsub.s f27, f5, f23, f3, rtz # perform operation
fmsub.s f27, f5, f23, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f27, f5, f23, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f27, f5, f23, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f27, f5, f23, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f27, f5, f23, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f27, f5, f23, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0xbfc00000)
li x27, 0xed322818f8deeede # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f19, 0(x2) # load 0x80800000 from memory into f19
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f21, 0(x2) # load 0xbfc00000 from memory into f21
li x3, 0x36f698e4c9b35ffa # load x3 with value 0x36f698e4c9b35ffa
sw x3, 0(x2) # store 0x36f698e4c9b35ffa in memory
flw f15, 0(x2) # load 0x36f698e4c9b35ffa from memory into f15
fmsub.s f27, f19, f21, f15, dyn # perform operation
fmsub.s f27, f19, f21, f15, rdn # perform operation
fmsub.s f27, f19, f21, f15, rmm # perform operation
fmsub.s f27, f19, f21, f15, rne # perform operation
fmsub.s f27, f19, f21, f15, rtz # perform operation
fmsub.s f27, f19, f21, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f27, f19, f21, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f27, f19, f21, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f27, f19, f21, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f27, f19, f21, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f27, f19, f21, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0x40000000)
li x6, 0x597f093fb8119990 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f19, 0(x2) # load 0x80800000 from memory into f19
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f25, 0(x2) # load 0x40000000 from memory into f25
li x3, 0xc614192d68cbf565 # load x3 with value 0xc614192d68cbf565
sw x3, 0(x2) # store 0xc614192d68cbf565 in memory
flw f24, 0(x2) # load 0xc614192d68cbf565 from memory into f24
fmsub.s f6, f19, f25, f24, dyn # perform operation
fmsub.s f6, f19, f25, f24, rdn # perform operation
fmsub.s f6, f19, f25, f24, rmm # perform operation
fmsub.s f6, f19, f25, f24, rne # perform operation
fmsub.s f6, f19, f25, f24, rtz # perform operation
fmsub.s f6, f19, f25, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f6, f19, f25, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f6, f19, f25, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f6, f19, f25, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f6, f19, f25, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f6, f19, f25, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0xc0000000)
li x8, 0x4ef71c8eb25f2014 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f1, 0(x2) # load 0x80800000 from memory into f1
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f15, 0(x2) # load 0xc0000000 from memory into f15
li x3, 0x5c3c299011e49ca0 # load x3 with value 0x5c3c299011e49ca0
sw x3, 0(x2) # store 0x5c3c299011e49ca0 in memory
flw f19, 0(x2) # load 0x5c3c299011e49ca0 from memory into f19
fmsub.s f8, f1, f15, f19, dyn # perform operation
fmsub.s f8, f1, f15, f19, rdn # perform operation
fmsub.s f8, f1, f15, f19, rmm # perform operation
fmsub.s f8, f1, f15, f19, rne # perform operation
fmsub.s f8, f1, f15, f19, rtz # perform operation
fmsub.s f8, f1, f15, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f8, f1, f15, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f8, f1, f15, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f8, f1, f15, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f8, f1, f15, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f8, f1, f15, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0x800000)
li x26, 0x936aaa2b38edf4be # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f12, 0(x2) # load 0x80800000 from memory into f12
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f28, 0(x2) # load 0x00800000 from memory into f28
li x3, 0xb1db618ce9ffae78 # load x3 with value 0xb1db618ce9ffae78
sw x3, 0(x2) # store 0xb1db618ce9ffae78 in memory
flw f29, 0(x2) # load 0xb1db618ce9ffae78 from memory into f29
fmsub.s f26, f12, f28, f29, dyn # perform operation
fmsub.s f26, f12, f28, f29, rdn # perform operation
fmsub.s f26, f12, f28, f29, rmm # perform operation
fmsub.s f26, f12, f28, f29, rne # perform operation
fmsub.s f26, f12, f28, f29, rtz # perform operation
fmsub.s f26, f12, f28, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f26, f12, f28, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f26, f12, f28, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f26, f12, f28, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f26, f12, f28, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f26, f12, f28, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0x80800000)
li x15, 0x40281e8b6ebb9841 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f27, 0(x2) # load 0x80800000 from memory into f27
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f1, 0(x2) # load 0x80800000 from memory into f1
li x3, 0x3e97b02e92129e93 # load x3 with value 0x3e97b02e92129e93
sw x3, 0(x2) # store 0x3e97b02e92129e93 in memory
flw f18, 0(x2) # load 0x3e97b02e92129e93 from memory into f18
fmsub.s f15, f27, f1, f18, dyn # perform operation
fmsub.s f15, f27, f1, f18, rdn # perform operation
fmsub.s f15, f27, f1, f18, rmm # perform operation
fmsub.s f15, f27, f1, f18, rne # perform operation
fmsub.s f15, f27, f1, f18, rtz # perform operation
fmsub.s f15, f27, f1, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f15, f27, f1, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f15, f27, f1, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f15, f27, f1, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f15, f27, f1, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f15, f27, f1, f18 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0x7f7fffff)
li x9, 0xea730b69ff27a1ef # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f18, 0(x2) # load 0x80800000 from memory into f18
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f2, 0(x2) # load 0x7f7fffff from memory into f2
li x3, 0x224dc278b4966f64 # load x3 with value 0x224dc278b4966f64
sw x3, 0(x2) # store 0x224dc278b4966f64 in memory
flw f13, 0(x2) # load 0x224dc278b4966f64 from memory into f13
fmsub.s f9, f18, f2, f13, dyn # perform operation
fmsub.s f9, f18, f2, f13, rdn # perform operation
fmsub.s f9, f18, f2, f13, rmm # perform operation
fmsub.s f9, f18, f2, f13, rne # perform operation
fmsub.s f9, f18, f2, f13, rtz # perform operation
fmsub.s f9, f18, f2, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f9, f18, f2, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f9, f18, f2, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f9, f18, f2, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f9, f18, f2, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f9, f18, f2, f13 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0xff7fffff)
li x6, 0x160a10a535c13209 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f5, 0(x2) # load 0x80800000 from memory into f5
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f21, 0(x2) # load 0xff7fffff from memory into f21
li x3, 0xbd6a0178259642d8 # load x3 with value 0xbd6a0178259642d8
sw x3, 0(x2) # store 0xbd6a0178259642d8 in memory
flw f30, 0(x2) # load 0xbd6a0178259642d8 from memory into f30
fmsub.s f6, f5, f21, f30, dyn # perform operation
fmsub.s f6, f5, f21, f30, rdn # perform operation
fmsub.s f6, f5, f21, f30, rmm # perform operation
fmsub.s f6, f5, f21, f30, rne # perform operation
fmsub.s f6, f5, f21, f30, rtz # perform operation
fmsub.s f6, f5, f21, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f6, f5, f21, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f6, f5, f21, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f6, f5, f21, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f6, f5, f21, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f6, f5, f21, f30 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0x7fffff)
li x5, 0x9b923fba15293300 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f2, 0(x2) # load 0x80800000 from memory into f2
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f14, 0(x2) # load 0x007fffff from memory into f14
li x3, 0x799f65bb0f48c4db # load x3 with value 0x799f65bb0f48c4db
sw x3, 0(x2) # store 0x799f65bb0f48c4db in memory
flw f16, 0(x2) # load 0x799f65bb0f48c4db from memory into f16
fmsub.s f5, f2, f14, f16, dyn # perform operation
fmsub.s f5, f2, f14, f16, rdn # perform operation
fmsub.s f5, f2, f14, f16, rmm # perform operation
fmsub.s f5, f2, f14, f16, rne # perform operation
fmsub.s f5, f2, f14, f16, rtz # perform operation
fmsub.s f5, f2, f14, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f5, f2, f14, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f5, f2, f14, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f5, f2, f14, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f5, f2, f14, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f5, f2, f14, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0x807fffff)
li x6, 0x7660051c717a1deb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f2, 0(x2) # load 0x80800000 from memory into f2
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f20, 0(x2) # load 0x807fffff from memory into f20
li x3, 0x314204f1972918f8 # load x3 with value 0x314204f1972918f8
sw x3, 0(x2) # store 0x314204f1972918f8 in memory
flw f3, 0(x2) # load 0x314204f1972918f8 from memory into f3
fmsub.s f6, f2, f20, f3, dyn # perform operation
fmsub.s f6, f2, f20, f3, rdn # perform operation
fmsub.s f6, f2, f20, f3, rmm # perform operation
fmsub.s f6, f2, f20, f3, rne # perform operation
fmsub.s f6, f2, f20, f3, rtz # perform operation
fmsub.s f6, f2, f20, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f6, f2, f20, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f6, f2, f20, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f6, f2, f20, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f6, f2, f20, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f6, f2, f20, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0x400000)
li x19, 0xfe31c9f03284b29c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f4, 0(x2) # load 0x80800000 from memory into f4
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f16, 0(x2) # load 0x00400000 from memory into f16
li x3, 0x48e0cae7fb43bd0c # load x3 with value 0x48e0cae7fb43bd0c
sw x3, 0(x2) # store 0x48e0cae7fb43bd0c in memory
flw f29, 0(x2) # load 0x48e0cae7fb43bd0c from memory into f29
fmsub.s f19, f4, f16, f29, dyn # perform operation
fmsub.s f19, f4, f16, f29, rdn # perform operation
fmsub.s f19, f4, f16, f29, rmm # perform operation
fmsub.s f19, f4, f16, f29, rne # perform operation
fmsub.s f19, f4, f16, f29, rtz # perform operation
fmsub.s f19, f4, f16, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f19, f4, f16, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f19, f4, f16, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f19, f4, f16, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f19, f4, f16, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f19, f4, f16, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0x80400000)
li x24, 0x0fa769ba3cc1dc89 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f1, 0(x2) # load 0x80800000 from memory into f1
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f14, 0(x2) # load 0x80400000 from memory into f14
li x3, 0xe904b3b162925be # load x3 with value 0xe904b3b162925be
sw x3, 0(x2) # store 0xe904b3b162925be in memory
flw f5, 0(x2) # load 0xe904b3b162925be from memory into f5
fmsub.s f24, f1, f14, f5, dyn # perform operation
fmsub.s f24, f1, f14, f5, rdn # perform operation
fmsub.s f24, f1, f14, f5, rmm # perform operation
fmsub.s f24, f1, f14, f5, rne # perform operation
fmsub.s f24, f1, f14, f5, rtz # perform operation
fmsub.s f24, f1, f14, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f24, f1, f14, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f24, f1, f14, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f24, f1, f14, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f24, f1, f14, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f24, f1, f14, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0x1)
li x28, 0x0606ca156594a6f5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f1, 0(x2) # load 0x80800000 from memory into f1
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f11, 0(x2) # load 0x00000001 from memory into f11
li x3, 0xa12e6b8255b0adb5 # load x3 with value 0xa12e6b8255b0adb5
sw x3, 0(x2) # store 0xa12e6b8255b0adb5 in memory
flw f8, 0(x2) # load 0xa12e6b8255b0adb5 from memory into f8
fmsub.s f28, f1, f11, f8, dyn # perform operation
fmsub.s f28, f1, f11, f8, rdn # perform operation
fmsub.s f28, f1, f11, f8, rmm # perform operation
fmsub.s f28, f1, f11, f8, rne # perform operation
fmsub.s f28, f1, f11, f8, rtz # perform operation
fmsub.s f28, f1, f11, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f28, f1, f11, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f28, f1, f11, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f28, f1, f11, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f28, f1, f11, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f28, f1, f11, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0x80000001)
li x19, 0xfbdd402ec0a2a31c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f8, 0(x2) # load 0x80800000 from memory into f8
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f24, 0(x2) # load 0x80000001 from memory into f24
li x3, 0x420822d775208453 # load x3 with value 0x420822d775208453
sw x3, 0(x2) # store 0x420822d775208453 in memory
flw f10, 0(x2) # load 0x420822d775208453 from memory into f10
fmsub.s f19, f8, f24, f10, dyn # perform operation
fmsub.s f19, f8, f24, f10, rdn # perform operation
fmsub.s f19, f8, f24, f10, rmm # perform operation
fmsub.s f19, f8, f24, f10, rne # perform operation
fmsub.s f19, f8, f24, f10, rtz # perform operation
fmsub.s f19, f8, f24, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f19, f8, f24, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f19, f8, f24, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f19, f8, f24, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f19, f8, f24, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f19, f8, f24, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0x7f800000)
li x31, 0x3b2619968355223f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f5, 0(x2) # load 0x80800000 from memory into f5
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f7, 0(x2) # load 0x7f800000 from memory into f7
li x3, 0x50976192be947b9f # load x3 with value 0x50976192be947b9f
sw x3, 0(x2) # store 0x50976192be947b9f in memory
flw f23, 0(x2) # load 0x50976192be947b9f from memory into f23
fmsub.s f31, f5, f7, f23, dyn # perform operation
fmsub.s f31, f5, f7, f23, rdn # perform operation
fmsub.s f31, f5, f7, f23, rmm # perform operation
fmsub.s f31, f5, f7, f23, rne # perform operation
fmsub.s f31, f5, f7, f23, rtz # perform operation
fmsub.s f31, f5, f7, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f31, f5, f7, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f31, f5, f7, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f31, f5, f7, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f31, f5, f7, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f31, f5, f7, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0xff800000)
li x14, 0x66c69aba5dfd5a06 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f11, 0(x2) # load 0x80800000 from memory into f11
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f6, 0(x2) # load 0xff800000 from memory into f6
li x3, 0x3484a3ac85a3032e # load x3 with value 0x3484a3ac85a3032e
sw x3, 0(x2) # store 0x3484a3ac85a3032e in memory
flw f3, 0(x2) # load 0x3484a3ac85a3032e from memory into f3
fmsub.s f14, f11, f6, f3, dyn # perform operation
fmsub.s f14, f11, f6, f3, rdn # perform operation
fmsub.s f14, f11, f6, f3, rmm # perform operation
fmsub.s f14, f11, f6, f3, rne # perform operation
fmsub.s f14, f11, f6, f3, rtz # perform operation
fmsub.s f14, f11, f6, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f14, f11, f6, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f14, f11, f6, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f14, f11, f6, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f14, f11, f6, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f14, f11, f6, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0x7fc00000)
li x16, 0x90d619b34e68f598 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f9, 0(x2) # load 0x80800000 from memory into f9
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f26, 0(x2) # load 0x7fc00000 from memory into f26
li x3, 0xd30dafdaf4550dfa # load x3 with value 0xd30dafdaf4550dfa
sw x3, 0(x2) # store 0xd30dafdaf4550dfa in memory
flw f2, 0(x2) # load 0xd30dafdaf4550dfa from memory into f2
fmsub.s f16, f9, f26, f2, dyn # perform operation
fmsub.s f16, f9, f26, f2, rdn # perform operation
fmsub.s f16, f9, f26, f2, rmm # perform operation
fmsub.s f16, f9, f26, f2, rne # perform operation
fmsub.s f16, f9, f26, f2, rtz # perform operation
fmsub.s f16, f9, f26, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f16, f9, f26, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f16, f9, f26, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f16, f9, f26, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f16, f9, f26, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f16, f9, f26, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0x7fffffff)
li x11, 0x0d8f4ed96e4bc26c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f23, 0(x2) # load 0x80800000 from memory into f23
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f13, 0(x2) # load 0x7fffffff from memory into f13
li x3, 0xde4fc8222a301372 # load x3 with value 0xde4fc8222a301372
sw x3, 0(x2) # store 0xde4fc8222a301372 in memory
flw f16, 0(x2) # load 0xde4fc8222a301372 from memory into f16
fmsub.s f11, f23, f13, f16, dyn # perform operation
fmsub.s f11, f23, f13, f16, rdn # perform operation
fmsub.s f11, f23, f13, f16, rmm # perform operation
fmsub.s f11, f23, f13, f16, rne # perform operation
fmsub.s f11, f23, f13, f16, rtz # perform operation
fmsub.s f11, f23, f13, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f11, f23, f13, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f11, f23, f13, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f11, f23, f13, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f11, f23, f13, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f11, f23, f13, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0x7f800001)
li x24, 0x9e0860258c4b7e4f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f2, 0(x2) # load 0x80800000 from memory into f2
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f18, 0(x2) # load 0x7f800001 from memory into f18
li x3, 0x9d6b19d84ddc2eaa # load x3 with value 0x9d6b19d84ddc2eaa
sw x3, 0(x2) # store 0x9d6b19d84ddc2eaa in memory
flw f1, 0(x2) # load 0x9d6b19d84ddc2eaa from memory into f1
fmsub.s f24, f2, f18, f1, dyn # perform operation
fmsub.s f24, f2, f18, f1, rdn # perform operation
fmsub.s f24, f2, f18, f1, rmm # perform operation
fmsub.s f24, f2, f18, f1, rne # perform operation
fmsub.s f24, f2, f18, f1, rtz # perform operation
fmsub.s f24, f2, f18, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f24, f2, f18, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f24, f2, f18, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f24, f2, f18, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f24, f2, f18, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f24, f2, f18, f1 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0x7fbfffff)
li x27, 0x9f62cb53a20e54d7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f31, 0(x2) # load 0x80800000 from memory into f31
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f9, 0(x2) # load 0x7fbfffff from memory into f9
li x3, 0xb0981f7e6f592373 # load x3 with value 0xb0981f7e6f592373
sw x3, 0(x2) # store 0xb0981f7e6f592373 in memory
flw f30, 0(x2) # load 0xb0981f7e6f592373 from memory into f30
fmsub.s f27, f31, f9, f30, dyn # perform operation
fmsub.s f27, f31, f9, f30, rdn # perform operation
fmsub.s f27, f31, f9, f30, rmm # perform operation
fmsub.s f27, f31, f9, f30, rne # perform operation
fmsub.s f27, f31, f9, f30, rtz # perform operation
fmsub.s f27, f31, f9, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f27, f31, f9, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f27, f31, f9, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f27, f31, f9, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f27, f31, f9, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f27, f31, f9, f30 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0x7ef8654f)
li x31, 0xc2b118e0de870aa6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f21, 0(x2) # load 0x80800000 from memory into f21
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f8, 0(x2) # load 0x7ef8654f from memory into f8
li x3, 0xa8d97412fc2effab # load x3 with value 0xa8d97412fc2effab
sw x3, 0(x2) # store 0xa8d97412fc2effab in memory
flw f11, 0(x2) # load 0xa8d97412fc2effab from memory into f11
fmsub.s f31, f21, f8, f11, dyn # perform operation
fmsub.s f31, f21, f8, f11, rdn # perform operation
fmsub.s f31, f21, f8, f11, rmm # perform operation
fmsub.s f31, f21, f8, f11, rne # perform operation
fmsub.s f31, f21, f8, f11, rtz # perform operation
fmsub.s f31, f21, f8, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f31, f21, f8, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f31, f21, f8, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f31, f21, f8, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f31, f21, f8, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f31, f21, f8, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0x813d9ab0)
li x12, 0x9e939274af529152 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f9, 0(x2) # load 0x80800000 from memory into f9
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f21, 0(x2) # load 0x813d9ab0 from memory into f21
li x3, 0x3c4e725b4bee4b45 # load x3 with value 0x3c4e725b4bee4b45
sw x3, 0(x2) # store 0x3c4e725b4bee4b45 in memory
flw f18, 0(x2) # load 0x3c4e725b4bee4b45 from memory into f18
fmsub.s f12, f9, f21, f18, dyn # perform operation
fmsub.s f12, f9, f21, f18, rdn # perform operation
fmsub.s f12, f9, f21, f18, rmm # perform operation
fmsub.s f12, f9, f21, f18, rne # perform operation
fmsub.s f12, f9, f21, f18, rtz # perform operation
fmsub.s f12, f9, f21, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f12, f9, f21, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f12, f9, f21, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f12, f9, f21, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f12, f9, f21, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f12, f9, f21, f18 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0x0)
li x9, 0x66a56002016c7bd5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f27, 0(x2) # load 0x7f7fffff from memory into f27
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f7, 0(x2) # load 0x00000000 from memory into f7
li x3, 0x4ab73e6703c02c48 # load x3 with value 0x4ab73e6703c02c48
sw x3, 0(x2) # store 0x4ab73e6703c02c48 in memory
flw f1, 0(x2) # load 0x4ab73e6703c02c48 from memory into f1
fmsub.s f9, f27, f7, f1, dyn # perform operation
fmsub.s f9, f27, f7, f1, rdn # perform operation
fmsub.s f9, f27, f7, f1, rmm # perform operation
fmsub.s f9, f27, f7, f1, rne # perform operation
fmsub.s f9, f27, f7, f1, rtz # perform operation
fmsub.s f9, f27, f7, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f9, f27, f7, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f9, f27, f7, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f9, f27, f7, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f9, f27, f7, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f9, f27, f7, f1 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0x80000000)
li x6, 0xb90a117a563c4a83 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f25, 0(x2) # load 0x7f7fffff from memory into f25
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f16, 0(x2) # load 0x80000000 from memory into f16
li x3, 0xa7426a565779e9af # load x3 with value 0xa7426a565779e9af
sw x3, 0(x2) # store 0xa7426a565779e9af in memory
flw f29, 0(x2) # load 0xa7426a565779e9af from memory into f29
fmsub.s f6, f25, f16, f29, dyn # perform operation
fmsub.s f6, f25, f16, f29, rdn # perform operation
fmsub.s f6, f25, f16, f29, rmm # perform operation
fmsub.s f6, f25, f16, f29, rne # perform operation
fmsub.s f6, f25, f16, f29, rtz # perform operation
fmsub.s f6, f25, f16, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f6, f25, f16, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f6, f25, f16, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f6, f25, f16, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f6, f25, f16, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f6, f25, f16, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0x3f800000)
li x8, 0x6f76bbb8b0ca73cc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f3, 0(x2) # load 0x7f7fffff from memory into f3
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f12, 0(x2) # load 0x3f800000 from memory into f12
li x3, 0xea6a63bf45f80dd8 # load x3 with value 0xea6a63bf45f80dd8
sw x3, 0(x2) # store 0xea6a63bf45f80dd8 in memory
flw f14, 0(x2) # load 0xea6a63bf45f80dd8 from memory into f14
fmsub.s f8, f3, f12, f14, dyn # perform operation
fmsub.s f8, f3, f12, f14, rdn # perform operation
fmsub.s f8, f3, f12, f14, rmm # perform operation
fmsub.s f8, f3, f12, f14, rne # perform operation
fmsub.s f8, f3, f12, f14, rtz # perform operation
fmsub.s f8, f3, f12, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f8, f3, f12, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f8, f3, f12, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f8, f3, f12, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f8, f3, f12, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f8, f3, f12, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0xbf800000)
li x23, 0x6f6bb34f0e1f292c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f8, 0(x2) # load 0x7f7fffff from memory into f8
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f16, 0(x2) # load 0xbf800000 from memory into f16
li x3, 0x50698a4a337b861 # load x3 with value 0x50698a4a337b861
sw x3, 0(x2) # store 0x50698a4a337b861 in memory
flw f13, 0(x2) # load 0x50698a4a337b861 from memory into f13
fmsub.s f23, f8, f16, f13, dyn # perform operation
fmsub.s f23, f8, f16, f13, rdn # perform operation
fmsub.s f23, f8, f16, f13, rmm # perform operation
fmsub.s f23, f8, f16, f13, rne # perform operation
fmsub.s f23, f8, f16, f13, rtz # perform operation
fmsub.s f23, f8, f16, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f23, f8, f16, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f23, f8, f16, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f23, f8, f16, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f23, f8, f16, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f23, f8, f16, f13 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0x3fc00000)
li x31, 0x70559ace07226850 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f14, 0(x2) # load 0x7f7fffff from memory into f14
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f9, 0(x2) # load 0x3fc00000 from memory into f9
li x3, 0x47133fae985ae97f # load x3 with value 0x47133fae985ae97f
sw x3, 0(x2) # store 0x47133fae985ae97f in memory
flw f6, 0(x2) # load 0x47133fae985ae97f from memory into f6
fmsub.s f31, f14, f9, f6, dyn # perform operation
fmsub.s f31, f14, f9, f6, rdn # perform operation
fmsub.s f31, f14, f9, f6, rmm # perform operation
fmsub.s f31, f14, f9, f6, rne # perform operation
fmsub.s f31, f14, f9, f6, rtz # perform operation
fmsub.s f31, f14, f9, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f31, f14, f9, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f31, f14, f9, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f31, f14, f9, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f31, f14, f9, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f31, f14, f9, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0xbfc00000)
li x18, 0xc2f7f36788403392 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f23, 0(x2) # load 0x7f7fffff from memory into f23
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f27, 0(x2) # load 0xbfc00000 from memory into f27
li x3, 0xcd95fadcca0a68ff # load x3 with value 0xcd95fadcca0a68ff
sw x3, 0(x2) # store 0xcd95fadcca0a68ff in memory
flw f19, 0(x2) # load 0xcd95fadcca0a68ff from memory into f19
fmsub.s f18, f23, f27, f19, dyn # perform operation
fmsub.s f18, f23, f27, f19, rdn # perform operation
fmsub.s f18, f23, f27, f19, rmm # perform operation
fmsub.s f18, f23, f27, f19, rne # perform operation
fmsub.s f18, f23, f27, f19, rtz # perform operation
fmsub.s f18, f23, f27, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f18, f23, f27, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f18, f23, f27, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f18, f23, f27, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f18, f23, f27, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f18, f23, f27, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0x40000000)
li x11, 0xd56df9628b5fd7f5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f30, 0(x2) # load 0x7f7fffff from memory into f30
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f1, 0(x2) # load 0x40000000 from memory into f1
li x3, 0x1dced06149c58d2 # load x3 with value 0x1dced06149c58d2
sw x3, 0(x2) # store 0x1dced06149c58d2 in memory
flw f19, 0(x2) # load 0x1dced06149c58d2 from memory into f19
fmsub.s f11, f30, f1, f19, dyn # perform operation
fmsub.s f11, f30, f1, f19, rdn # perform operation
fmsub.s f11, f30, f1, f19, rmm # perform operation
fmsub.s f11, f30, f1, f19, rne # perform operation
fmsub.s f11, f30, f1, f19, rtz # perform operation
fmsub.s f11, f30, f1, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f11, f30, f1, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f11, f30, f1, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f11, f30, f1, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f11, f30, f1, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f11, f30, f1, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0xc0000000)
li x25, 0x99a1695fe15e3957 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f14, 0(x2) # load 0x7f7fffff from memory into f14
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f29, 0(x2) # load 0xc0000000 from memory into f29
li x3, 0xd205eee21730a0da # load x3 with value 0xd205eee21730a0da
sw x3, 0(x2) # store 0xd205eee21730a0da in memory
flw f20, 0(x2) # load 0xd205eee21730a0da from memory into f20
fmsub.s f25, f14, f29, f20, dyn # perform operation
fmsub.s f25, f14, f29, f20, rdn # perform operation
fmsub.s f25, f14, f29, f20, rmm # perform operation
fmsub.s f25, f14, f29, f20, rne # perform operation
fmsub.s f25, f14, f29, f20, rtz # perform operation
fmsub.s f25, f14, f29, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f25, f14, f29, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f25, f14, f29, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f25, f14, f29, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f25, f14, f29, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f25, f14, f29, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0x800000)
li x30, 0x1022b4c88540380a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f12, 0(x2) # load 0x7f7fffff from memory into f12
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f7, 0(x2) # load 0x00800000 from memory into f7
li x3, 0x3abafa3db6555428 # load x3 with value 0x3abafa3db6555428
sw x3, 0(x2) # store 0x3abafa3db6555428 in memory
flw f8, 0(x2) # load 0x3abafa3db6555428 from memory into f8
fmsub.s f30, f12, f7, f8, dyn # perform operation
fmsub.s f30, f12, f7, f8, rdn # perform operation
fmsub.s f30, f12, f7, f8, rmm # perform operation
fmsub.s f30, f12, f7, f8, rne # perform operation
fmsub.s f30, f12, f7, f8, rtz # perform operation
fmsub.s f30, f12, f7, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f30, f12, f7, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f30, f12, f7, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f30, f12, f7, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f30, f12, f7, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f30, f12, f7, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0x80800000)
li x28, 0xd1686d68a0bde361 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f5, 0(x2) # load 0x7f7fffff from memory into f5
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f19, 0(x2) # load 0x80800000 from memory into f19
li x3, 0x34746b0f07000265 # load x3 with value 0x34746b0f07000265
sw x3, 0(x2) # store 0x34746b0f07000265 in memory
flw f17, 0(x2) # load 0x34746b0f07000265 from memory into f17
fmsub.s f28, f5, f19, f17, dyn # perform operation
fmsub.s f28, f5, f19, f17, rdn # perform operation
fmsub.s f28, f5, f19, f17, rmm # perform operation
fmsub.s f28, f5, f19, f17, rne # perform operation
fmsub.s f28, f5, f19, f17, rtz # perform operation
fmsub.s f28, f5, f19, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f28, f5, f19, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f28, f5, f19, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f28, f5, f19, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f28, f5, f19, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f28, f5, f19, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0x7f7fffff)
li x15, 0xcbb1d6d460593123 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f1, 0(x2) # load 0x7f7fffff from memory into f1
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f30, 0(x2) # load 0x7f7fffff from memory into f30
li x3, 0x92cdc21371542a29 # load x3 with value 0x92cdc21371542a29
sw x3, 0(x2) # store 0x92cdc21371542a29 in memory
flw f26, 0(x2) # load 0x92cdc21371542a29 from memory into f26
fmsub.s f15, f1, f30, f26, dyn # perform operation
fmsub.s f15, f1, f30, f26, rdn # perform operation
fmsub.s f15, f1, f30, f26, rmm # perform operation
fmsub.s f15, f1, f30, f26, rne # perform operation
fmsub.s f15, f1, f30, f26, rtz # perform operation
fmsub.s f15, f1, f30, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f15, f1, f30, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f15, f1, f30, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f15, f1, f30, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f15, f1, f30, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f15, f1, f30, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0xff7fffff)
li x22, 0x858589117b29fffd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f6, 0(x2) # load 0x7f7fffff from memory into f6
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f20, 0(x2) # load 0xff7fffff from memory into f20
li x3, 0x90eda6257a394145 # load x3 with value 0x90eda6257a394145
sw x3, 0(x2) # store 0x90eda6257a394145 in memory
flw f5, 0(x2) # load 0x90eda6257a394145 from memory into f5
fmsub.s f22, f6, f20, f5, dyn # perform operation
fmsub.s f22, f6, f20, f5, rdn # perform operation
fmsub.s f22, f6, f20, f5, rmm # perform operation
fmsub.s f22, f6, f20, f5, rne # perform operation
fmsub.s f22, f6, f20, f5, rtz # perform operation
fmsub.s f22, f6, f20, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f22, f6, f20, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f22, f6, f20, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f22, f6, f20, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f22, f6, f20, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f22, f6, f20, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0x7fffff)
li x2, 0x352448a610c7dc3b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f27, 0(x2) # load 0x7f7fffff from memory into f27
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f28, 0(x2) # load 0x007fffff from memory into f28
li x3, 0x3d6db4ab4b90411c # load x3 with value 0x3d6db4ab4b90411c
sw x3, 0(x2) # store 0x3d6db4ab4b90411c in memory
flw f6, 0(x2) # load 0x3d6db4ab4b90411c from memory into f6
fmsub.s f2, f27, f28, f6, dyn # perform operation
fmsub.s f2, f27, f28, f6, rdn # perform operation
fmsub.s f2, f27, f28, f6, rmm # perform operation
fmsub.s f2, f27, f28, f6, rne # perform operation
fmsub.s f2, f27, f28, f6, rtz # perform operation
fmsub.s f2, f27, f28, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f2, f27, f28, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f2, f27, f28, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f2, f27, f28, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f2, f27, f28, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f2, f27, f28, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0x807fffff)
li x22, 0xe75fdecb7824d575 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f25, 0(x2) # load 0x7f7fffff from memory into f25
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f28, 0(x2) # load 0x807fffff from memory into f28
li x3, 0x647647946c48e7ee # load x3 with value 0x647647946c48e7ee
sw x3, 0(x2) # store 0x647647946c48e7ee in memory
flw f5, 0(x2) # load 0x647647946c48e7ee from memory into f5
fmsub.s f22, f25, f28, f5, dyn # perform operation
fmsub.s f22, f25, f28, f5, rdn # perform operation
fmsub.s f22, f25, f28, f5, rmm # perform operation
fmsub.s f22, f25, f28, f5, rne # perform operation
fmsub.s f22, f25, f28, f5, rtz # perform operation
fmsub.s f22, f25, f28, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f22, f25, f28, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f22, f25, f28, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f22, f25, f28, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f22, f25, f28, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f22, f25, f28, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0x400000)
li x2, 0x5b79f0f79203ffb8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f14, 0(x2) # load 0x7f7fffff from memory into f14
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f27, 0(x2) # load 0x00400000 from memory into f27
li x3, 0xd383655474bdcde5 # load x3 with value 0xd383655474bdcde5
sw x3, 0(x2) # store 0xd383655474bdcde5 in memory
flw f21, 0(x2) # load 0xd383655474bdcde5 from memory into f21
fmsub.s f2, f14, f27, f21, dyn # perform operation
fmsub.s f2, f14, f27, f21, rdn # perform operation
fmsub.s f2, f14, f27, f21, rmm # perform operation
fmsub.s f2, f14, f27, f21, rne # perform operation
fmsub.s f2, f14, f27, f21, rtz # perform operation
fmsub.s f2, f14, f27, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f2, f14, f27, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f2, f14, f27, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f2, f14, f27, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f2, f14, f27, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f2, f14, f27, f21 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0x80400000)
li x29, 0x167bcc2316d2762a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f19, 0(x2) # load 0x7f7fffff from memory into f19
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f1, 0(x2) # load 0x80400000 from memory into f1
li x3, 0x675e1d5d18fd81a9 # load x3 with value 0x675e1d5d18fd81a9
sw x3, 0(x2) # store 0x675e1d5d18fd81a9 in memory
flw f26, 0(x2) # load 0x675e1d5d18fd81a9 from memory into f26
fmsub.s f29, f19, f1, f26, dyn # perform operation
fmsub.s f29, f19, f1, f26, rdn # perform operation
fmsub.s f29, f19, f1, f26, rmm # perform operation
fmsub.s f29, f19, f1, f26, rne # perform operation
fmsub.s f29, f19, f1, f26, rtz # perform operation
fmsub.s f29, f19, f1, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f29, f19, f1, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f29, f19, f1, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f29, f19, f1, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f29, f19, f1, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f29, f19, f1, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0x1)
li x31, 0x55ca27cead5313e2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f22, 0(x2) # load 0x7f7fffff from memory into f22
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f10, 0(x2) # load 0x00000001 from memory into f10
li x3, 0xa7bce813256932f # load x3 with value 0xa7bce813256932f
sw x3, 0(x2) # store 0xa7bce813256932f in memory
flw f1, 0(x2) # load 0xa7bce813256932f from memory into f1
fmsub.s f31, f22, f10, f1, dyn # perform operation
fmsub.s f31, f22, f10, f1, rdn # perform operation
fmsub.s f31, f22, f10, f1, rmm # perform operation
fmsub.s f31, f22, f10, f1, rne # perform operation
fmsub.s f31, f22, f10, f1, rtz # perform operation
fmsub.s f31, f22, f10, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f31, f22, f10, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f31, f22, f10, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f31, f22, f10, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f31, f22, f10, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f31, f22, f10, f1 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0x80000001)
li x20, 0xc7233953c5f5e5d4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f9, 0(x2) # load 0x7f7fffff from memory into f9
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f1, 0(x2) # load 0x80000001 from memory into f1
li x3, 0x5e22654b92669cfc # load x3 with value 0x5e22654b92669cfc
sw x3, 0(x2) # store 0x5e22654b92669cfc in memory
flw f3, 0(x2) # load 0x5e22654b92669cfc from memory into f3
fmsub.s f20, f9, f1, f3, dyn # perform operation
fmsub.s f20, f9, f1, f3, rdn # perform operation
fmsub.s f20, f9, f1, f3, rmm # perform operation
fmsub.s f20, f9, f1, f3, rne # perform operation
fmsub.s f20, f9, f1, f3, rtz # perform operation
fmsub.s f20, f9, f1, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f20, f9, f1, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f20, f9, f1, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f20, f9, f1, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f20, f9, f1, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f20, f9, f1, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0x7f800000)
li x21, 0xa7d38b77ff4dda4b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f29, 0(x2) # load 0x7f7fffff from memory into f29
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f20, 0(x2) # load 0x7f800000 from memory into f20
li x3, 0x8912f66c9d494495 # load x3 with value 0x8912f66c9d494495
sw x3, 0(x2) # store 0x8912f66c9d494495 in memory
flw f15, 0(x2) # load 0x8912f66c9d494495 from memory into f15
fmsub.s f21, f29, f20, f15, dyn # perform operation
fmsub.s f21, f29, f20, f15, rdn # perform operation
fmsub.s f21, f29, f20, f15, rmm # perform operation
fmsub.s f21, f29, f20, f15, rne # perform operation
fmsub.s f21, f29, f20, f15, rtz # perform operation
fmsub.s f21, f29, f20, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f21, f29, f20, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f21, f29, f20, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f21, f29, f20, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f21, f29, f20, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f21, f29, f20, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0xff800000)
li x31, 0x565fab4b86d47821 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f10, 0(x2) # load 0x7f7fffff from memory into f10
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f4, 0(x2) # load 0xff800000 from memory into f4
li x3, 0x366b644ecfd505ef # load x3 with value 0x366b644ecfd505ef
sw x3, 0(x2) # store 0x366b644ecfd505ef in memory
flw f22, 0(x2) # load 0x366b644ecfd505ef from memory into f22
fmsub.s f31, f10, f4, f22, dyn # perform operation
fmsub.s f31, f10, f4, f22, rdn # perform operation
fmsub.s f31, f10, f4, f22, rmm # perform operation
fmsub.s f31, f10, f4, f22, rne # perform operation
fmsub.s f31, f10, f4, f22, rtz # perform operation
fmsub.s f31, f10, f4, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f31, f10, f4, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f31, f10, f4, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f31, f10, f4, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f31, f10, f4, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f31, f10, f4, f22 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0x7fc00000)
li x20, 0xa41959988f020b13 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f18, 0(x2) # load 0x7f7fffff from memory into f18
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f11, 0(x2) # load 0x7fc00000 from memory into f11
li x3, 0x211fcfa9f9f79902 # load x3 with value 0x211fcfa9f9f79902
sw x3, 0(x2) # store 0x211fcfa9f9f79902 in memory
flw f17, 0(x2) # load 0x211fcfa9f9f79902 from memory into f17
fmsub.s f20, f18, f11, f17, dyn # perform operation
fmsub.s f20, f18, f11, f17, rdn # perform operation
fmsub.s f20, f18, f11, f17, rmm # perform operation
fmsub.s f20, f18, f11, f17, rne # perform operation
fmsub.s f20, f18, f11, f17, rtz # perform operation
fmsub.s f20, f18, f11, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f20, f18, f11, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f20, f18, f11, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f20, f18, f11, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f20, f18, f11, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f20, f18, f11, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0x7fffffff)
li x7, 0x79a49c3787dccbc2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f4, 0(x2) # load 0x7f7fffff from memory into f4
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f13, 0(x2) # load 0x7fffffff from memory into f13
li x3, 0xdab4061c2676624f # load x3 with value 0xdab4061c2676624f
sw x3, 0(x2) # store 0xdab4061c2676624f in memory
flw f9, 0(x2) # load 0xdab4061c2676624f from memory into f9
fmsub.s f7, f4, f13, f9, dyn # perform operation
fmsub.s f7, f4, f13, f9, rdn # perform operation
fmsub.s f7, f4, f13, f9, rmm # perform operation
fmsub.s f7, f4, f13, f9, rne # perform operation
fmsub.s f7, f4, f13, f9, rtz # perform operation
fmsub.s f7, f4, f13, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f7, f4, f13, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f7, f4, f13, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f7, f4, f13, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f7, f4, f13, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f7, f4, f13, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0x7f800001)
li x23, 0x681d2b06de22ba18 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f24, 0(x2) # load 0x7f7fffff from memory into f24
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f21, 0(x2) # load 0x7f800001 from memory into f21
li x3, 0xb85e3269f36c0f73 # load x3 with value 0xb85e3269f36c0f73
sw x3, 0(x2) # store 0xb85e3269f36c0f73 in memory
flw f5, 0(x2) # load 0xb85e3269f36c0f73 from memory into f5
fmsub.s f23, f24, f21, f5, dyn # perform operation
fmsub.s f23, f24, f21, f5, rdn # perform operation
fmsub.s f23, f24, f21, f5, rmm # perform operation
fmsub.s f23, f24, f21, f5, rne # perform operation
fmsub.s f23, f24, f21, f5, rtz # perform operation
fmsub.s f23, f24, f21, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f23, f24, f21, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f23, f24, f21, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f23, f24, f21, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f23, f24, f21, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f23, f24, f21, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0x7fbfffff)
li x10, 0x69b4027bbe3fe329 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f28, 0(x2) # load 0x7f7fffff from memory into f28
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f27, 0(x2) # load 0x7fbfffff from memory into f27
li x3, 0xc08f78104a21e9f0 # load x3 with value 0xc08f78104a21e9f0
sw x3, 0(x2) # store 0xc08f78104a21e9f0 in memory
flw f20, 0(x2) # load 0xc08f78104a21e9f0 from memory into f20
fmsub.s f10, f28, f27, f20, dyn # perform operation
fmsub.s f10, f28, f27, f20, rdn # perform operation
fmsub.s f10, f28, f27, f20, rmm # perform operation
fmsub.s f10, f28, f27, f20, rne # perform operation
fmsub.s f10, f28, f27, f20, rtz # perform operation
fmsub.s f10, f28, f27, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f10, f28, f27, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f10, f28, f27, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f10, f28, f27, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f10, f28, f27, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f10, f28, f27, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0x7ef8654f)
li x30, 0x613558c40faa175e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f25, 0(x2) # load 0x7f7fffff from memory into f25
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f5, 0(x2) # load 0x7ef8654f from memory into f5
li x3, 0x53ba2cdcda9785dd # load x3 with value 0x53ba2cdcda9785dd
sw x3, 0(x2) # store 0x53ba2cdcda9785dd in memory
flw f16, 0(x2) # load 0x53ba2cdcda9785dd from memory into f16
fmsub.s f30, f25, f5, f16, dyn # perform operation
fmsub.s f30, f25, f5, f16, rdn # perform operation
fmsub.s f30, f25, f5, f16, rmm # perform operation
fmsub.s f30, f25, f5, f16, rne # perform operation
fmsub.s f30, f25, f5, f16, rtz # perform operation
fmsub.s f30, f25, f5, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f30, f25, f5, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f30, f25, f5, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f30, f25, f5, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f30, f25, f5, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f30, f25, f5, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0x813d9ab0)
li x15, 0xae0b05b20064486e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f5, 0(x2) # load 0x7f7fffff from memory into f5
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f24, 0(x2) # load 0x813d9ab0 from memory into f24
li x3, 0xaed8a3af1520627a # load x3 with value 0xaed8a3af1520627a
sw x3, 0(x2) # store 0xaed8a3af1520627a in memory
flw f29, 0(x2) # load 0xaed8a3af1520627a from memory into f29
fmsub.s f15, f5, f24, f29, dyn # perform operation
fmsub.s f15, f5, f24, f29, rdn # perform operation
fmsub.s f15, f5, f24, f29, rmm # perform operation
fmsub.s f15, f5, f24, f29, rne # perform operation
fmsub.s f15, f5, f24, f29, rtz # perform operation
fmsub.s f15, f5, f24, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f15, f5, f24, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f15, f5, f24, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f15, f5, f24, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f15, f5, f24, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f15, f5, f24, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0x0)
li x13, 0xb84b9ee63721720e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f28, 0(x2) # load 0xff7fffff from memory into f28
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f5, 0(x2) # load 0x00000000 from memory into f5
li x3, 0xed099837f4e1f4b2 # load x3 with value 0xed099837f4e1f4b2
sw x3, 0(x2) # store 0xed099837f4e1f4b2 in memory
flw f30, 0(x2) # load 0xed099837f4e1f4b2 from memory into f30
fmsub.s f13, f28, f5, f30, dyn # perform operation
fmsub.s f13, f28, f5, f30, rdn # perform operation
fmsub.s f13, f28, f5, f30, rmm # perform operation
fmsub.s f13, f28, f5, f30, rne # perform operation
fmsub.s f13, f28, f5, f30, rtz # perform operation
fmsub.s f13, f28, f5, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f13, f28, f5, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f13, f28, f5, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f13, f28, f5, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f13, f28, f5, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f13, f28, f5, f30 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0x80000000)
li x13, 0xf0da30eff90341a2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f17, 0(x2) # load 0xff7fffff from memory into f17
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f14, 0(x2) # load 0x80000000 from memory into f14
li x3, 0x967be2db5c72c39a # load x3 with value 0x967be2db5c72c39a
sw x3, 0(x2) # store 0x967be2db5c72c39a in memory
flw f8, 0(x2) # load 0x967be2db5c72c39a from memory into f8
fmsub.s f13, f17, f14, f8, dyn # perform operation
fmsub.s f13, f17, f14, f8, rdn # perform operation
fmsub.s f13, f17, f14, f8, rmm # perform operation
fmsub.s f13, f17, f14, f8, rne # perform operation
fmsub.s f13, f17, f14, f8, rtz # perform operation
fmsub.s f13, f17, f14, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f13, f17, f14, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f13, f17, f14, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f13, f17, f14, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f13, f17, f14, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f13, f17, f14, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0x3f800000)
li x24, 0xa7fb8a6cfe9087ca # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f18, 0(x2) # load 0xff7fffff from memory into f18
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f3, 0(x2) # load 0x3f800000 from memory into f3
li x3, 0xcd8621660e481552 # load x3 with value 0xcd8621660e481552
sw x3, 0(x2) # store 0xcd8621660e481552 in memory
flw f5, 0(x2) # load 0xcd8621660e481552 from memory into f5
fmsub.s f24, f18, f3, f5, dyn # perform operation
fmsub.s f24, f18, f3, f5, rdn # perform operation
fmsub.s f24, f18, f3, f5, rmm # perform operation
fmsub.s f24, f18, f3, f5, rne # perform operation
fmsub.s f24, f18, f3, f5, rtz # perform operation
fmsub.s f24, f18, f3, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f24, f18, f3, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f24, f18, f3, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f24, f18, f3, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f24, f18, f3, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f24, f18, f3, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0xbf800000)
li x31, 0xaffd18dd5be90317 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f7, 0(x2) # load 0xff7fffff from memory into f7
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f17, 0(x2) # load 0xbf800000 from memory into f17
li x3, 0x59f9030878c87a9c # load x3 with value 0x59f9030878c87a9c
sw x3, 0(x2) # store 0x59f9030878c87a9c in memory
flw f26, 0(x2) # load 0x59f9030878c87a9c from memory into f26
fmsub.s f31, f7, f17, f26, dyn # perform operation
fmsub.s f31, f7, f17, f26, rdn # perform operation
fmsub.s f31, f7, f17, f26, rmm # perform operation
fmsub.s f31, f7, f17, f26, rne # perform operation
fmsub.s f31, f7, f17, f26, rtz # perform operation
fmsub.s f31, f7, f17, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f31, f7, f17, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f31, f7, f17, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f31, f7, f17, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f31, f7, f17, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f31, f7, f17, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0x3fc00000)
li x4, 0xf8005e22937c3331 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f31, 0(x2) # load 0xff7fffff from memory into f31
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f1, 0(x2) # load 0x3fc00000 from memory into f1
li x3, 0xb901dc0cc81e9d91 # load x3 with value 0xb901dc0cc81e9d91
sw x3, 0(x2) # store 0xb901dc0cc81e9d91 in memory
flw f15, 0(x2) # load 0xb901dc0cc81e9d91 from memory into f15
fmsub.s f4, f31, f1, f15, dyn # perform operation
fmsub.s f4, f31, f1, f15, rdn # perform operation
fmsub.s f4, f31, f1, f15, rmm # perform operation
fmsub.s f4, f31, f1, f15, rne # perform operation
fmsub.s f4, f31, f1, f15, rtz # perform operation
fmsub.s f4, f31, f1, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f4, f31, f1, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f4, f31, f1, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f4, f31, f1, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f4, f31, f1, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f4, f31, f1, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0xbfc00000)
li x30, 0x0bfdf78fe901a6f5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f17, 0(x2) # load 0xff7fffff from memory into f17
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f27, 0(x2) # load 0xbfc00000 from memory into f27
li x3, 0xe2f2a68fe09468 # load x3 with value 0xe2f2a68fe09468
sw x3, 0(x2) # store 0xe2f2a68fe09468 in memory
flw f3, 0(x2) # load 0xe2f2a68fe09468 from memory into f3
fmsub.s f30, f17, f27, f3, dyn # perform operation
fmsub.s f30, f17, f27, f3, rdn # perform operation
fmsub.s f30, f17, f27, f3, rmm # perform operation
fmsub.s f30, f17, f27, f3, rne # perform operation
fmsub.s f30, f17, f27, f3, rtz # perform operation
fmsub.s f30, f17, f27, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f30, f17, f27, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f30, f17, f27, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f30, f17, f27, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f30, f17, f27, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f30, f17, f27, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0x40000000)
li x19, 0x9622c6cb37915059 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f17, 0(x2) # load 0xff7fffff from memory into f17
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f23, 0(x2) # load 0x40000000 from memory into f23
li x3, 0x93232edfee78a95f # load x3 with value 0x93232edfee78a95f
sw x3, 0(x2) # store 0x93232edfee78a95f in memory
flw f31, 0(x2) # load 0x93232edfee78a95f from memory into f31
fmsub.s f19, f17, f23, f31, dyn # perform operation
fmsub.s f19, f17, f23, f31, rdn # perform operation
fmsub.s f19, f17, f23, f31, rmm # perform operation
fmsub.s f19, f17, f23, f31, rne # perform operation
fmsub.s f19, f17, f23, f31, rtz # perform operation
fmsub.s f19, f17, f23, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f19, f17, f23, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f19, f17, f23, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f19, f17, f23, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f19, f17, f23, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f19, f17, f23, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0xc0000000)
li x24, 0x439ab5e4f2f97b4b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f6, 0(x2) # load 0xff7fffff from memory into f6
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f27, 0(x2) # load 0xc0000000 from memory into f27
li x3, 0xbcf648e43459cd77 # load x3 with value 0xbcf648e43459cd77
sw x3, 0(x2) # store 0xbcf648e43459cd77 in memory
flw f9, 0(x2) # load 0xbcf648e43459cd77 from memory into f9
fmsub.s f24, f6, f27, f9, dyn # perform operation
fmsub.s f24, f6, f27, f9, rdn # perform operation
fmsub.s f24, f6, f27, f9, rmm # perform operation
fmsub.s f24, f6, f27, f9, rne # perform operation
fmsub.s f24, f6, f27, f9, rtz # perform operation
fmsub.s f24, f6, f27, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f24, f6, f27, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f24, f6, f27, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f24, f6, f27, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f24, f6, f27, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f24, f6, f27, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0x800000)
li x4, 0x5102f82645787126 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f24, 0(x2) # load 0xff7fffff from memory into f24
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f18, 0(x2) # load 0x00800000 from memory into f18
li x3, 0x6cb1e83d5cbb6bb9 # load x3 with value 0x6cb1e83d5cbb6bb9
sw x3, 0(x2) # store 0x6cb1e83d5cbb6bb9 in memory
flw f10, 0(x2) # load 0x6cb1e83d5cbb6bb9 from memory into f10
fmsub.s f4, f24, f18, f10, dyn # perform operation
fmsub.s f4, f24, f18, f10, rdn # perform operation
fmsub.s f4, f24, f18, f10, rmm # perform operation
fmsub.s f4, f24, f18, f10, rne # perform operation
fmsub.s f4, f24, f18, f10, rtz # perform operation
fmsub.s f4, f24, f18, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f4, f24, f18, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f4, f24, f18, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f4, f24, f18, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f4, f24, f18, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f4, f24, f18, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0x80800000)
li x7, 0xd19bc4e724dd2d01 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f21, 0(x2) # load 0xff7fffff from memory into f21
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f22, 0(x2) # load 0x80800000 from memory into f22
li x3, 0x520a3d736bfb029b # load x3 with value 0x520a3d736bfb029b
sw x3, 0(x2) # store 0x520a3d736bfb029b in memory
flw f8, 0(x2) # load 0x520a3d736bfb029b from memory into f8
fmsub.s f7, f21, f22, f8, dyn # perform operation
fmsub.s f7, f21, f22, f8, rdn # perform operation
fmsub.s f7, f21, f22, f8, rmm # perform operation
fmsub.s f7, f21, f22, f8, rne # perform operation
fmsub.s f7, f21, f22, f8, rtz # perform operation
fmsub.s f7, f21, f22, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f7, f21, f22, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f7, f21, f22, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f7, f21, f22, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f7, f21, f22, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f7, f21, f22, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0x7f7fffff)
li x25, 0x0ffa553637327b6f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f10, 0(x2) # load 0xff7fffff from memory into f10
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f18, 0(x2) # load 0x7f7fffff from memory into f18
li x3, 0x6254046e5feb833 # load x3 with value 0x6254046e5feb833
sw x3, 0(x2) # store 0x6254046e5feb833 in memory
flw f1, 0(x2) # load 0x6254046e5feb833 from memory into f1
fmsub.s f25, f10, f18, f1, dyn # perform operation
fmsub.s f25, f10, f18, f1, rdn # perform operation
fmsub.s f25, f10, f18, f1, rmm # perform operation
fmsub.s f25, f10, f18, f1, rne # perform operation
fmsub.s f25, f10, f18, f1, rtz # perform operation
fmsub.s f25, f10, f18, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f25, f10, f18, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f25, f10, f18, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f25, f10, f18, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f25, f10, f18, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f25, f10, f18, f1 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0xff7fffff)
li x31, 0x775087809c1bfd56 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f22, 0(x2) # load 0xff7fffff from memory into f22
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f25, 0(x2) # load 0xff7fffff from memory into f25
li x3, 0xae64be6174c3eeb4 # load x3 with value 0xae64be6174c3eeb4
sw x3, 0(x2) # store 0xae64be6174c3eeb4 in memory
flw f17, 0(x2) # load 0xae64be6174c3eeb4 from memory into f17
fmsub.s f31, f22, f25, f17, dyn # perform operation
fmsub.s f31, f22, f25, f17, rdn # perform operation
fmsub.s f31, f22, f25, f17, rmm # perform operation
fmsub.s f31, f22, f25, f17, rne # perform operation
fmsub.s f31, f22, f25, f17, rtz # perform operation
fmsub.s f31, f22, f25, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f31, f22, f25, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f31, f22, f25, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f31, f22, f25, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f31, f22, f25, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f31, f22, f25, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0x7fffff)
li x18, 0xd29e21ee7bb23e05 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f21, 0(x2) # load 0xff7fffff from memory into f21
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f27, 0(x2) # load 0x007fffff from memory into f27
li x3, 0x7fe979bfde9ed553 # load x3 with value 0x7fe979bfde9ed553
sw x3, 0(x2) # store 0x7fe979bfde9ed553 in memory
flw f15, 0(x2) # load 0x7fe979bfde9ed553 from memory into f15
fmsub.s f18, f21, f27, f15, dyn # perform operation
fmsub.s f18, f21, f27, f15, rdn # perform operation
fmsub.s f18, f21, f27, f15, rmm # perform operation
fmsub.s f18, f21, f27, f15, rne # perform operation
fmsub.s f18, f21, f27, f15, rtz # perform operation
fmsub.s f18, f21, f27, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f18, f21, f27, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f18, f21, f27, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f18, f21, f27, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f18, f21, f27, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f18, f21, f27, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0x807fffff)
li x15, 0xe4fef3b35500a4e1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f14, 0(x2) # load 0xff7fffff from memory into f14
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f9, 0(x2) # load 0x807fffff from memory into f9
li x3, 0x2179f0a6448464b # load x3 with value 0x2179f0a6448464b
sw x3, 0(x2) # store 0x2179f0a6448464b in memory
flw f11, 0(x2) # load 0x2179f0a6448464b from memory into f11
fmsub.s f15, f14, f9, f11, dyn # perform operation
fmsub.s f15, f14, f9, f11, rdn # perform operation
fmsub.s f15, f14, f9, f11, rmm # perform operation
fmsub.s f15, f14, f9, f11, rne # perform operation
fmsub.s f15, f14, f9, f11, rtz # perform operation
fmsub.s f15, f14, f9, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f15, f14, f9, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f15, f14, f9, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f15, f14, f9, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f15, f14, f9, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f15, f14, f9, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0x400000)
li x6, 0xe5b0729e0d05b815 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f18, 0(x2) # load 0xff7fffff from memory into f18
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f12, 0(x2) # load 0x00400000 from memory into f12
li x3, 0x6a3d9dd1a6dea4c9 # load x3 with value 0x6a3d9dd1a6dea4c9
sw x3, 0(x2) # store 0x6a3d9dd1a6dea4c9 in memory
flw f27, 0(x2) # load 0x6a3d9dd1a6dea4c9 from memory into f27
fmsub.s f6, f18, f12, f27, dyn # perform operation
fmsub.s f6, f18, f12, f27, rdn # perform operation
fmsub.s f6, f18, f12, f27, rmm # perform operation
fmsub.s f6, f18, f12, f27, rne # perform operation
fmsub.s f6, f18, f12, f27, rtz # perform operation
fmsub.s f6, f18, f12, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f6, f18, f12, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f6, f18, f12, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f6, f18, f12, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f6, f18, f12, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f6, f18, f12, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0x80400000)
li x26, 0x74430a690c7189e9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f10, 0(x2) # load 0xff7fffff from memory into f10
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f27, 0(x2) # load 0x80400000 from memory into f27
li x3, 0xe18c030b419d379b # load x3 with value 0xe18c030b419d379b
sw x3, 0(x2) # store 0xe18c030b419d379b in memory
flw f15, 0(x2) # load 0xe18c030b419d379b from memory into f15
fmsub.s f26, f10, f27, f15, dyn # perform operation
fmsub.s f26, f10, f27, f15, rdn # perform operation
fmsub.s f26, f10, f27, f15, rmm # perform operation
fmsub.s f26, f10, f27, f15, rne # perform operation
fmsub.s f26, f10, f27, f15, rtz # perform operation
fmsub.s f26, f10, f27, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f26, f10, f27, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f26, f10, f27, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f26, f10, f27, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f26, f10, f27, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f26, f10, f27, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0x1)
li x3, 0x634d885eb16ab43b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f7, 0(x2) # load 0xff7fffff from memory into f7
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f2, 0(x2) # load 0x00000001 from memory into f2
li x3, 0x3d906f679763bb19 # load x3 with value 0x3d906f679763bb19
sw x3, 0(x2) # store 0x3d906f679763bb19 in memory
flw f1, 0(x2) # load 0x3d906f679763bb19 from memory into f1
fmsub.s f3, f7, f2, f1, dyn # perform operation
fmsub.s f3, f7, f2, f1, rdn # perform operation
fmsub.s f3, f7, f2, f1, rmm # perform operation
fmsub.s f3, f7, f2, f1, rne # perform operation
fmsub.s f3, f7, f2, f1, rtz # perform operation
fmsub.s f3, f7, f2, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f3, f7, f2, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f3, f7, f2, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f3, f7, f2, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f3, f7, f2, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f3, f7, f2, f1 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0x80000001)
li x8, 0xc031f6ff7d2cafd9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f27, 0(x2) # load 0xff7fffff from memory into f27
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f30, 0(x2) # load 0x80000001 from memory into f30
li x3, 0x33a53cda68f9946e # load x3 with value 0x33a53cda68f9946e
sw x3, 0(x2) # store 0x33a53cda68f9946e in memory
flw f3, 0(x2) # load 0x33a53cda68f9946e from memory into f3
fmsub.s f8, f27, f30, f3, dyn # perform operation
fmsub.s f8, f27, f30, f3, rdn # perform operation
fmsub.s f8, f27, f30, f3, rmm # perform operation
fmsub.s f8, f27, f30, f3, rne # perform operation
fmsub.s f8, f27, f30, f3, rtz # perform operation
fmsub.s f8, f27, f30, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f8, f27, f30, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f8, f27, f30, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f8, f27, f30, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f8, f27, f30, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f8, f27, f30, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0x7f800000)
li x17, 0x6cb7b1cbf0f8e78b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f25, 0(x2) # load 0xff7fffff from memory into f25
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f21, 0(x2) # load 0x7f800000 from memory into f21
li x3, 0x6ae1643ab785297e # load x3 with value 0x6ae1643ab785297e
sw x3, 0(x2) # store 0x6ae1643ab785297e in memory
flw f31, 0(x2) # load 0x6ae1643ab785297e from memory into f31
fmsub.s f17, f25, f21, f31, dyn # perform operation
fmsub.s f17, f25, f21, f31, rdn # perform operation
fmsub.s f17, f25, f21, f31, rmm # perform operation
fmsub.s f17, f25, f21, f31, rne # perform operation
fmsub.s f17, f25, f21, f31, rtz # perform operation
fmsub.s f17, f25, f21, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f17, f25, f21, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f17, f25, f21, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f17, f25, f21, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f17, f25, f21, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f17, f25, f21, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0xff800000)
li x18, 0xb21e13121dc1946f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f6, 0(x2) # load 0xff7fffff from memory into f6
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f17, 0(x2) # load 0xff800000 from memory into f17
li x3, 0x482ca500816f0cf6 # load x3 with value 0x482ca500816f0cf6
sw x3, 0(x2) # store 0x482ca500816f0cf6 in memory
flw f4, 0(x2) # load 0x482ca500816f0cf6 from memory into f4
fmsub.s f18, f6, f17, f4, dyn # perform operation
fmsub.s f18, f6, f17, f4, rdn # perform operation
fmsub.s f18, f6, f17, f4, rmm # perform operation
fmsub.s f18, f6, f17, f4, rne # perform operation
fmsub.s f18, f6, f17, f4, rtz # perform operation
fmsub.s f18, f6, f17, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f18, f6, f17, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f18, f6, f17, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f18, f6, f17, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f18, f6, f17, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f18, f6, f17, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0x7fc00000)
li x26, 0x57a73009a02cd4dc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f11, 0(x2) # load 0xff7fffff from memory into f11
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f12, 0(x2) # load 0x7fc00000 from memory into f12
li x3, 0xce29567f26b3b69d # load x3 with value 0xce29567f26b3b69d
sw x3, 0(x2) # store 0xce29567f26b3b69d in memory
flw f2, 0(x2) # load 0xce29567f26b3b69d from memory into f2
fmsub.s f26, f11, f12, f2, dyn # perform operation
fmsub.s f26, f11, f12, f2, rdn # perform operation
fmsub.s f26, f11, f12, f2, rmm # perform operation
fmsub.s f26, f11, f12, f2, rne # perform operation
fmsub.s f26, f11, f12, f2, rtz # perform operation
fmsub.s f26, f11, f12, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f26, f11, f12, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f26, f11, f12, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f26, f11, f12, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f26, f11, f12, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f26, f11, f12, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0x7fffffff)
li x31, 0x4231c7cce5bd39b8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f27, 0(x2) # load 0xff7fffff from memory into f27
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f11, 0(x2) # load 0x7fffffff from memory into f11
li x3, 0xcde7afe36ad88c7f # load x3 with value 0xcde7afe36ad88c7f
sw x3, 0(x2) # store 0xcde7afe36ad88c7f in memory
flw f2, 0(x2) # load 0xcde7afe36ad88c7f from memory into f2
fmsub.s f31, f27, f11, f2, dyn # perform operation
fmsub.s f31, f27, f11, f2, rdn # perform operation
fmsub.s f31, f27, f11, f2, rmm # perform operation
fmsub.s f31, f27, f11, f2, rne # perform operation
fmsub.s f31, f27, f11, f2, rtz # perform operation
fmsub.s f31, f27, f11, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f31, f27, f11, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f31, f27, f11, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f31, f27, f11, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f31, f27, f11, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f31, f27, f11, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0x7f800001)
li x31, 0x78385fa861118219 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f2, 0(x2) # load 0xff7fffff from memory into f2
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f17, 0(x2) # load 0x7f800001 from memory into f17
li x3, 0x3472f7019fed1a35 # load x3 with value 0x3472f7019fed1a35
sw x3, 0(x2) # store 0x3472f7019fed1a35 in memory
flw f15, 0(x2) # load 0x3472f7019fed1a35 from memory into f15
fmsub.s f31, f2, f17, f15, dyn # perform operation
fmsub.s f31, f2, f17, f15, rdn # perform operation
fmsub.s f31, f2, f17, f15, rmm # perform operation
fmsub.s f31, f2, f17, f15, rne # perform operation
fmsub.s f31, f2, f17, f15, rtz # perform operation
fmsub.s f31, f2, f17, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f31, f2, f17, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f31, f2, f17, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f31, f2, f17, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f31, f2, f17, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f31, f2, f17, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0x7fbfffff)
li x7, 0x5271c156e9df5977 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f19, 0(x2) # load 0xff7fffff from memory into f19
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f10, 0(x2) # load 0x7fbfffff from memory into f10
li x3, 0x6cd8a9fa6ddd54fa # load x3 with value 0x6cd8a9fa6ddd54fa
sw x3, 0(x2) # store 0x6cd8a9fa6ddd54fa in memory
flw f16, 0(x2) # load 0x6cd8a9fa6ddd54fa from memory into f16
fmsub.s f7, f19, f10, f16, dyn # perform operation
fmsub.s f7, f19, f10, f16, rdn # perform operation
fmsub.s f7, f19, f10, f16, rmm # perform operation
fmsub.s f7, f19, f10, f16, rne # perform operation
fmsub.s f7, f19, f10, f16, rtz # perform operation
fmsub.s f7, f19, f10, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f7, f19, f10, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f7, f19, f10, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f7, f19, f10, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f7, f19, f10, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f7, f19, f10, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0x7ef8654f)
li x28, 0xf91185c00c951c15 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f29, 0(x2) # load 0xff7fffff from memory into f29
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f9, 0(x2) # load 0x7ef8654f from memory into f9
li x3, 0xaf9e3780290864cd # load x3 with value 0xaf9e3780290864cd
sw x3, 0(x2) # store 0xaf9e3780290864cd in memory
flw f21, 0(x2) # load 0xaf9e3780290864cd from memory into f21
fmsub.s f28, f29, f9, f21, dyn # perform operation
fmsub.s f28, f29, f9, f21, rdn # perform operation
fmsub.s f28, f29, f9, f21, rmm # perform operation
fmsub.s f28, f29, f9, f21, rne # perform operation
fmsub.s f28, f29, f9, f21, rtz # perform operation
fmsub.s f28, f29, f9, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f28, f29, f9, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f28, f29, f9, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f28, f29, f9, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f28, f29, f9, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f28, f29, f9, f21 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0x813d9ab0)
li x6, 0xd1cc03aa1d817d6a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f3, 0(x2) # load 0xff7fffff from memory into f3
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f8, 0(x2) # load 0x813d9ab0 from memory into f8
li x3, 0x77aa39e3f9e995d6 # load x3 with value 0x77aa39e3f9e995d6
sw x3, 0(x2) # store 0x77aa39e3f9e995d6 in memory
flw f30, 0(x2) # load 0x77aa39e3f9e995d6 from memory into f30
fmsub.s f6, f3, f8, f30, dyn # perform operation
fmsub.s f6, f3, f8, f30, rdn # perform operation
fmsub.s f6, f3, f8, f30, rmm # perform operation
fmsub.s f6, f3, f8, f30, rne # perform operation
fmsub.s f6, f3, f8, f30, rtz # perform operation
fmsub.s f6, f3, f8, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f6, f3, f8, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f6, f3, f8, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f6, f3, f8, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f6, f3, f8, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f6, f3, f8, f30 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0x0)
li x16, 0x5ea0df7ee8d08ee1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f31, 0(x2) # load 0x007fffff from memory into f31
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f30, 0(x2) # load 0x00000000 from memory into f30
li x3, 0x947b031c37a97ba3 # load x3 with value 0x947b031c37a97ba3
sw x3, 0(x2) # store 0x947b031c37a97ba3 in memory
flw f3, 0(x2) # load 0x947b031c37a97ba3 from memory into f3
fmsub.s f16, f31, f30, f3, dyn # perform operation
fmsub.s f16, f31, f30, f3, rdn # perform operation
fmsub.s f16, f31, f30, f3, rmm # perform operation
fmsub.s f16, f31, f30, f3, rne # perform operation
fmsub.s f16, f31, f30, f3, rtz # perform operation
fmsub.s f16, f31, f30, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f16, f31, f30, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f16, f31, f30, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f16, f31, f30, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f16, f31, f30, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f16, f31, f30, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0x80000000)
li x29, 0xb7889c52b99fdda5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f5, 0(x2) # load 0x007fffff from memory into f5
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f27, 0(x2) # load 0x80000000 from memory into f27
li x3, 0x3a0d293e840bd629 # load x3 with value 0x3a0d293e840bd629
sw x3, 0(x2) # store 0x3a0d293e840bd629 in memory
flw f31, 0(x2) # load 0x3a0d293e840bd629 from memory into f31
fmsub.s f29, f5, f27, f31, dyn # perform operation
fmsub.s f29, f5, f27, f31, rdn # perform operation
fmsub.s f29, f5, f27, f31, rmm # perform operation
fmsub.s f29, f5, f27, f31, rne # perform operation
fmsub.s f29, f5, f27, f31, rtz # perform operation
fmsub.s f29, f5, f27, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f29, f5, f27, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f29, f5, f27, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f29, f5, f27, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f29, f5, f27, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f29, f5, f27, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0x3f800000)
li x8, 0xe1df06afaf5959e1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f17, 0(x2) # load 0x007fffff from memory into f17
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f20, 0(x2) # load 0x3f800000 from memory into f20
li x3, 0x77c965f7d243f580 # load x3 with value 0x77c965f7d243f580
sw x3, 0(x2) # store 0x77c965f7d243f580 in memory
flw f11, 0(x2) # load 0x77c965f7d243f580 from memory into f11
fmsub.s f8, f17, f20, f11, dyn # perform operation
fmsub.s f8, f17, f20, f11, rdn # perform operation
fmsub.s f8, f17, f20, f11, rmm # perform operation
fmsub.s f8, f17, f20, f11, rne # perform operation
fmsub.s f8, f17, f20, f11, rtz # perform operation
fmsub.s f8, f17, f20, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f8, f17, f20, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f8, f17, f20, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f8, f17, f20, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f8, f17, f20, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f8, f17, f20, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0xbf800000)
li x10, 0x0832943202d5a5a2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f17, 0(x2) # load 0x007fffff from memory into f17
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f4, 0(x2) # load 0xbf800000 from memory into f4
li x3, 0xb8f62bd833d07380 # load x3 with value 0xb8f62bd833d07380
sw x3, 0(x2) # store 0xb8f62bd833d07380 in memory
flw f29, 0(x2) # load 0xb8f62bd833d07380 from memory into f29
fmsub.s f10, f17, f4, f29, dyn # perform operation
fmsub.s f10, f17, f4, f29, rdn # perform operation
fmsub.s f10, f17, f4, f29, rmm # perform operation
fmsub.s f10, f17, f4, f29, rne # perform operation
fmsub.s f10, f17, f4, f29, rtz # perform operation
fmsub.s f10, f17, f4, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f10, f17, f4, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f10, f17, f4, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f10, f17, f4, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f10, f17, f4, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f10, f17, f4, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0x3fc00000)
li x18, 0x65131ae1e287a025 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f30, 0(x2) # load 0x007fffff from memory into f30
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f3, 0(x2) # load 0x3fc00000 from memory into f3
li x3, 0xc150a6f990f34bf5 # load x3 with value 0xc150a6f990f34bf5
sw x3, 0(x2) # store 0xc150a6f990f34bf5 in memory
flw f11, 0(x2) # load 0xc150a6f990f34bf5 from memory into f11
fmsub.s f18, f30, f3, f11, dyn # perform operation
fmsub.s f18, f30, f3, f11, rdn # perform operation
fmsub.s f18, f30, f3, f11, rmm # perform operation
fmsub.s f18, f30, f3, f11, rne # perform operation
fmsub.s f18, f30, f3, f11, rtz # perform operation
fmsub.s f18, f30, f3, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f18, f30, f3, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f18, f30, f3, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f18, f30, f3, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f18, f30, f3, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f18, f30, f3, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0xbfc00000)
li x26, 0xfadbf9b6b084e341 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f8, 0(x2) # load 0x007fffff from memory into f8
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f15, 0(x2) # load 0xbfc00000 from memory into f15
li x3, 0x1832cf96b71aaf81 # load x3 with value 0x1832cf96b71aaf81
sw x3, 0(x2) # store 0x1832cf96b71aaf81 in memory
flw f3, 0(x2) # load 0x1832cf96b71aaf81 from memory into f3
fmsub.s f26, f8, f15, f3, dyn # perform operation
fmsub.s f26, f8, f15, f3, rdn # perform operation
fmsub.s f26, f8, f15, f3, rmm # perform operation
fmsub.s f26, f8, f15, f3, rne # perform operation
fmsub.s f26, f8, f15, f3, rtz # perform operation
fmsub.s f26, f8, f15, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f26, f8, f15, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f26, f8, f15, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f26, f8, f15, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f26, f8, f15, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f26, f8, f15, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0x40000000)
li x15, 0xdd3394a0e03ccced # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f9, 0(x2) # load 0x007fffff from memory into f9
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f26, 0(x2) # load 0x40000000 from memory into f26
li x3, 0x1c03c786c41f74f6 # load x3 with value 0x1c03c786c41f74f6
sw x3, 0(x2) # store 0x1c03c786c41f74f6 in memory
flw f29, 0(x2) # load 0x1c03c786c41f74f6 from memory into f29
fmsub.s f15, f9, f26, f29, dyn # perform operation
fmsub.s f15, f9, f26, f29, rdn # perform operation
fmsub.s f15, f9, f26, f29, rmm # perform operation
fmsub.s f15, f9, f26, f29, rne # perform operation
fmsub.s f15, f9, f26, f29, rtz # perform operation
fmsub.s f15, f9, f26, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f15, f9, f26, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f15, f9, f26, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f15, f9, f26, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f15, f9, f26, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f15, f9, f26, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0xc0000000)
li x11, 0x9bb96ae79a311e44 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f15, 0(x2) # load 0x007fffff from memory into f15
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f1, 0(x2) # load 0xc0000000 from memory into f1
li x3, 0xb0a63ef2be7d26e8 # load x3 with value 0xb0a63ef2be7d26e8
sw x3, 0(x2) # store 0xb0a63ef2be7d26e8 in memory
flw f22, 0(x2) # load 0xb0a63ef2be7d26e8 from memory into f22
fmsub.s f11, f15, f1, f22, dyn # perform operation
fmsub.s f11, f15, f1, f22, rdn # perform operation
fmsub.s f11, f15, f1, f22, rmm # perform operation
fmsub.s f11, f15, f1, f22, rne # perform operation
fmsub.s f11, f15, f1, f22, rtz # perform operation
fmsub.s f11, f15, f1, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f11, f15, f1, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f11, f15, f1, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f11, f15, f1, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f11, f15, f1, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f11, f15, f1, f22 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0x800000)
li x20, 0x9135f1ddae46b367 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f17, 0(x2) # load 0x007fffff from memory into f17
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f1, 0(x2) # load 0x00800000 from memory into f1
li x3, 0x5e40cbb0f3b4cc8 # load x3 with value 0x5e40cbb0f3b4cc8
sw x3, 0(x2) # store 0x5e40cbb0f3b4cc8 in memory
flw f3, 0(x2) # load 0x5e40cbb0f3b4cc8 from memory into f3
fmsub.s f20, f17, f1, f3, dyn # perform operation
fmsub.s f20, f17, f1, f3, rdn # perform operation
fmsub.s f20, f17, f1, f3, rmm # perform operation
fmsub.s f20, f17, f1, f3, rne # perform operation
fmsub.s f20, f17, f1, f3, rtz # perform operation
fmsub.s f20, f17, f1, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f20, f17, f1, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f20, f17, f1, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f20, f17, f1, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f20, f17, f1, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f20, f17, f1, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0x80800000)
li x29, 0xca3b5060c56fb7cf # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f26, 0(x2) # load 0x007fffff from memory into f26
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f9, 0(x2) # load 0x80800000 from memory into f9
li x3, 0x804a6e5cf86be498 # load x3 with value 0x804a6e5cf86be498
sw x3, 0(x2) # store 0x804a6e5cf86be498 in memory
flw f18, 0(x2) # load 0x804a6e5cf86be498 from memory into f18
fmsub.s f29, f26, f9, f18, dyn # perform operation
fmsub.s f29, f26, f9, f18, rdn # perform operation
fmsub.s f29, f26, f9, f18, rmm # perform operation
fmsub.s f29, f26, f9, f18, rne # perform operation
fmsub.s f29, f26, f9, f18, rtz # perform operation
fmsub.s f29, f26, f9, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f29, f26, f9, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f29, f26, f9, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f29, f26, f9, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f29, f26, f9, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f29, f26, f9, f18 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0x7f7fffff)
li x10, 0x4b7cdf732820f03f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f14, 0(x2) # load 0x007fffff from memory into f14
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f9, 0(x2) # load 0x7f7fffff from memory into f9
li x3, 0xf58b2bf5591f85b8 # load x3 with value 0xf58b2bf5591f85b8
sw x3, 0(x2) # store 0xf58b2bf5591f85b8 in memory
flw f24, 0(x2) # load 0xf58b2bf5591f85b8 from memory into f24
fmsub.s f10, f14, f9, f24, dyn # perform operation
fmsub.s f10, f14, f9, f24, rdn # perform operation
fmsub.s f10, f14, f9, f24, rmm # perform operation
fmsub.s f10, f14, f9, f24, rne # perform operation
fmsub.s f10, f14, f9, f24, rtz # perform operation
fmsub.s f10, f14, f9, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f10, f14, f9, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f10, f14, f9, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f10, f14, f9, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f10, f14, f9, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f10, f14, f9, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0xff7fffff)
li x1, 0xb054152af3604dc9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f11, 0(x2) # load 0x007fffff from memory into f11
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f16, 0(x2) # load 0xff7fffff from memory into f16
li x3, 0x1515ec50c3e1d176 # load x3 with value 0x1515ec50c3e1d176
sw x3, 0(x2) # store 0x1515ec50c3e1d176 in memory
flw f12, 0(x2) # load 0x1515ec50c3e1d176 from memory into f12
fmsub.s f1, f11, f16, f12, dyn # perform operation
fmsub.s f1, f11, f16, f12, rdn # perform operation
fmsub.s f1, f11, f16, f12, rmm # perform operation
fmsub.s f1, f11, f16, f12, rne # perform operation
fmsub.s f1, f11, f16, f12, rtz # perform operation
fmsub.s f1, f11, f16, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f1, f11, f16, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f1, f11, f16, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f1, f11, f16, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f1, f11, f16, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f1, f11, f16, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0x7fffff)
li x23, 0xa6de0aa116f60b43 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f30, 0(x2) # load 0x007fffff from memory into f30
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f13, 0(x2) # load 0x007fffff from memory into f13
li x3, 0x9670d545330427c4 # load x3 with value 0x9670d545330427c4
sw x3, 0(x2) # store 0x9670d545330427c4 in memory
flw f20, 0(x2) # load 0x9670d545330427c4 from memory into f20
fmsub.s f23, f30, f13, f20, dyn # perform operation
fmsub.s f23, f30, f13, f20, rdn # perform operation
fmsub.s f23, f30, f13, f20, rmm # perform operation
fmsub.s f23, f30, f13, f20, rne # perform operation
fmsub.s f23, f30, f13, f20, rtz # perform operation
fmsub.s f23, f30, f13, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f23, f30, f13, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f23, f30, f13, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f23, f30, f13, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f23, f30, f13, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f23, f30, f13, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0x807fffff)
li x16, 0x0acc6a36dddc5e47 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f17, 0(x2) # load 0x007fffff from memory into f17
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f24, 0(x2) # load 0x807fffff from memory into f24
li x3, 0x13960589c3770b4d # load x3 with value 0x13960589c3770b4d
sw x3, 0(x2) # store 0x13960589c3770b4d in memory
flw f26, 0(x2) # load 0x13960589c3770b4d from memory into f26
fmsub.s f16, f17, f24, f26, dyn # perform operation
fmsub.s f16, f17, f24, f26, rdn # perform operation
fmsub.s f16, f17, f24, f26, rmm # perform operation
fmsub.s f16, f17, f24, f26, rne # perform operation
fmsub.s f16, f17, f24, f26, rtz # perform operation
fmsub.s f16, f17, f24, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f16, f17, f24, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f16, f17, f24, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f16, f17, f24, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f16, f17, f24, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f16, f17, f24, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0x400000)
li x31, 0x6b20124d378ae8eb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f22, 0(x2) # load 0x007fffff from memory into f22
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f30, 0(x2) # load 0x00400000 from memory into f30
li x3, 0x3876d763e3b63790 # load x3 with value 0x3876d763e3b63790
sw x3, 0(x2) # store 0x3876d763e3b63790 in memory
flw f23, 0(x2) # load 0x3876d763e3b63790 from memory into f23
fmsub.s f31, f22, f30, f23, dyn # perform operation
fmsub.s f31, f22, f30, f23, rdn # perform operation
fmsub.s f31, f22, f30, f23, rmm # perform operation
fmsub.s f31, f22, f30, f23, rne # perform operation
fmsub.s f31, f22, f30, f23, rtz # perform operation
fmsub.s f31, f22, f30, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f31, f22, f30, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f31, f22, f30, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f31, f22, f30, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f31, f22, f30, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f31, f22, f30, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0x80400000)
li x4, 0xe234ef827ca04722 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f9, 0(x2) # load 0x007fffff from memory into f9
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f25, 0(x2) # load 0x80400000 from memory into f25
li x3, 0xb30e4082dd0e7a84 # load x3 with value 0xb30e4082dd0e7a84
sw x3, 0(x2) # store 0xb30e4082dd0e7a84 in memory
flw f24, 0(x2) # load 0xb30e4082dd0e7a84 from memory into f24
fmsub.s f4, f9, f25, f24, dyn # perform operation
fmsub.s f4, f9, f25, f24, rdn # perform operation
fmsub.s f4, f9, f25, f24, rmm # perform operation
fmsub.s f4, f9, f25, f24, rne # perform operation
fmsub.s f4, f9, f25, f24, rtz # perform operation
fmsub.s f4, f9, f25, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f4, f9, f25, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f4, f9, f25, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f4, f9, f25, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f4, f9, f25, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f4, f9, f25, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0x1)
li x6, 0xaebe7f6bf967a81b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f19, 0(x2) # load 0x007fffff from memory into f19
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f17, 0(x2) # load 0x00000001 from memory into f17
li x3, 0xe1d60bf4011f893 # load x3 with value 0xe1d60bf4011f893
sw x3, 0(x2) # store 0xe1d60bf4011f893 in memory
flw f22, 0(x2) # load 0xe1d60bf4011f893 from memory into f22
fmsub.s f6, f19, f17, f22, dyn # perform operation
fmsub.s f6, f19, f17, f22, rdn # perform operation
fmsub.s f6, f19, f17, f22, rmm # perform operation
fmsub.s f6, f19, f17, f22, rne # perform operation
fmsub.s f6, f19, f17, f22, rtz # perform operation
fmsub.s f6, f19, f17, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f6, f19, f17, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f6, f19, f17, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f6, f19, f17, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f6, f19, f17, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f6, f19, f17, f22 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0x80000001)
li x25, 0x9acff96bd6bfc1ee # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f11, 0(x2) # load 0x007fffff from memory into f11
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f12, 0(x2) # load 0x80000001 from memory into f12
li x3, 0x9cb614cf23d4c46 # load x3 with value 0x9cb614cf23d4c46
sw x3, 0(x2) # store 0x9cb614cf23d4c46 in memory
flw f30, 0(x2) # load 0x9cb614cf23d4c46 from memory into f30
fmsub.s f25, f11, f12, f30, dyn # perform operation
fmsub.s f25, f11, f12, f30, rdn # perform operation
fmsub.s f25, f11, f12, f30, rmm # perform operation
fmsub.s f25, f11, f12, f30, rne # perform operation
fmsub.s f25, f11, f12, f30, rtz # perform operation
fmsub.s f25, f11, f12, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f25, f11, f12, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f25, f11, f12, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f25, f11, f12, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f25, f11, f12, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f25, f11, f12, f30 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0x7f800000)
li x5, 0x66d25d6f1606f206 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f23, 0(x2) # load 0x007fffff from memory into f23
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f12, 0(x2) # load 0x7f800000 from memory into f12
li x3, 0x5e239ab8b305f9cb # load x3 with value 0x5e239ab8b305f9cb
sw x3, 0(x2) # store 0x5e239ab8b305f9cb in memory
flw f31, 0(x2) # load 0x5e239ab8b305f9cb from memory into f31
fmsub.s f5, f23, f12, f31, dyn # perform operation
fmsub.s f5, f23, f12, f31, rdn # perform operation
fmsub.s f5, f23, f12, f31, rmm # perform operation
fmsub.s f5, f23, f12, f31, rne # perform operation
fmsub.s f5, f23, f12, f31, rtz # perform operation
fmsub.s f5, f23, f12, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f5, f23, f12, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f5, f23, f12, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f5, f23, f12, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f5, f23, f12, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f5, f23, f12, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0xff800000)
li x21, 0x270d519d194c7fd5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f13, 0(x2) # load 0x007fffff from memory into f13
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f16, 0(x2) # load 0xff800000 from memory into f16
li x3, 0xcf341dab6a033e71 # load x3 with value 0xcf341dab6a033e71
sw x3, 0(x2) # store 0xcf341dab6a033e71 in memory
flw f4, 0(x2) # load 0xcf341dab6a033e71 from memory into f4
fmsub.s f21, f13, f16, f4, dyn # perform operation
fmsub.s f21, f13, f16, f4, rdn # perform operation
fmsub.s f21, f13, f16, f4, rmm # perform operation
fmsub.s f21, f13, f16, f4, rne # perform operation
fmsub.s f21, f13, f16, f4, rtz # perform operation
fmsub.s f21, f13, f16, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f21, f13, f16, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f21, f13, f16, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f21, f13, f16, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f21, f13, f16, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f21, f13, f16, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0x7fc00000)
li x10, 0x4251fffcfc62fd0e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f25, 0(x2) # load 0x007fffff from memory into f25
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f13, 0(x2) # load 0x7fc00000 from memory into f13
li x3, 0x58dc9939327bb3a1 # load x3 with value 0x58dc9939327bb3a1
sw x3, 0(x2) # store 0x58dc9939327bb3a1 in memory
flw f11, 0(x2) # load 0x58dc9939327bb3a1 from memory into f11
fmsub.s f10, f25, f13, f11, dyn # perform operation
fmsub.s f10, f25, f13, f11, rdn # perform operation
fmsub.s f10, f25, f13, f11, rmm # perform operation
fmsub.s f10, f25, f13, f11, rne # perform operation
fmsub.s f10, f25, f13, f11, rtz # perform operation
fmsub.s f10, f25, f13, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f10, f25, f13, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f10, f25, f13, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f10, f25, f13, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f10, f25, f13, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f10, f25, f13, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0x7fffffff)
li x24, 0xf2e8b065abe5975a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f1, 0(x2) # load 0x007fffff from memory into f1
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f11, 0(x2) # load 0x7fffffff from memory into f11
li x3, 0xcdfb54448f133f4f # load x3 with value 0xcdfb54448f133f4f
sw x3, 0(x2) # store 0xcdfb54448f133f4f in memory
flw f7, 0(x2) # load 0xcdfb54448f133f4f from memory into f7
fmsub.s f24, f1, f11, f7, dyn # perform operation
fmsub.s f24, f1, f11, f7, rdn # perform operation
fmsub.s f24, f1, f11, f7, rmm # perform operation
fmsub.s f24, f1, f11, f7, rne # perform operation
fmsub.s f24, f1, f11, f7, rtz # perform operation
fmsub.s f24, f1, f11, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f24, f1, f11, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f24, f1, f11, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f24, f1, f11, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f24, f1, f11, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f24, f1, f11, f7 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0x7f800001)
li x25, 0x29eec298e6fe6207 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f11, 0(x2) # load 0x007fffff from memory into f11
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f23, 0(x2) # load 0x7f800001 from memory into f23
li x3, 0xa1cc9287b5e13647 # load x3 with value 0xa1cc9287b5e13647
sw x3, 0(x2) # store 0xa1cc9287b5e13647 in memory
flw f28, 0(x2) # load 0xa1cc9287b5e13647 from memory into f28
fmsub.s f25, f11, f23, f28, dyn # perform operation
fmsub.s f25, f11, f23, f28, rdn # perform operation
fmsub.s f25, f11, f23, f28, rmm # perform operation
fmsub.s f25, f11, f23, f28, rne # perform operation
fmsub.s f25, f11, f23, f28, rtz # perform operation
fmsub.s f25, f11, f23, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f25, f11, f23, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f25, f11, f23, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f25, f11, f23, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f25, f11, f23, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f25, f11, f23, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0x7fbfffff)
li x27, 0x4ea2a719823b050e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f5, 0(x2) # load 0x007fffff from memory into f5
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f1, 0(x2) # load 0x7fbfffff from memory into f1
li x3, 0x8b51f1d772bb31b # load x3 with value 0x8b51f1d772bb31b
sw x3, 0(x2) # store 0x8b51f1d772bb31b in memory
flw f10, 0(x2) # load 0x8b51f1d772bb31b from memory into f10
fmsub.s f27, f5, f1, f10, dyn # perform operation
fmsub.s f27, f5, f1, f10, rdn # perform operation
fmsub.s f27, f5, f1, f10, rmm # perform operation
fmsub.s f27, f5, f1, f10, rne # perform operation
fmsub.s f27, f5, f1, f10, rtz # perform operation
fmsub.s f27, f5, f1, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f27, f5, f1, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f27, f5, f1, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f27, f5, f1, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f27, f5, f1, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f27, f5, f1, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0x7ef8654f)
li x15, 0x26b74083d5965e74 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f18, 0(x2) # load 0x007fffff from memory into f18
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f6, 0(x2) # load 0x7ef8654f from memory into f6
li x3, 0xa2d79217ca253aa6 # load x3 with value 0xa2d79217ca253aa6
sw x3, 0(x2) # store 0xa2d79217ca253aa6 in memory
flw f28, 0(x2) # load 0xa2d79217ca253aa6 from memory into f28
fmsub.s f15, f18, f6, f28, dyn # perform operation
fmsub.s f15, f18, f6, f28, rdn # perform operation
fmsub.s f15, f18, f6, f28, rmm # perform operation
fmsub.s f15, f18, f6, f28, rne # perform operation
fmsub.s f15, f18, f6, f28, rtz # perform operation
fmsub.s f15, f18, f6, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f15, f18, f6, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f15, f18, f6, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f15, f18, f6, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f15, f18, f6, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f15, f18, f6, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0x813d9ab0)
li x6, 0xf7cbf3a4f2124d5e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f4, 0(x2) # load 0x007fffff from memory into f4
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f1, 0(x2) # load 0x813d9ab0 from memory into f1
li x3, 0xbea64cce32c8d0d3 # load x3 with value 0xbea64cce32c8d0d3
sw x3, 0(x2) # store 0xbea64cce32c8d0d3 in memory
flw f30, 0(x2) # load 0xbea64cce32c8d0d3 from memory into f30
fmsub.s f6, f4, f1, f30, dyn # perform operation
fmsub.s f6, f4, f1, f30, rdn # perform operation
fmsub.s f6, f4, f1, f30, rmm # perform operation
fmsub.s f6, f4, f1, f30, rne # perform operation
fmsub.s f6, f4, f1, f30, rtz # perform operation
fmsub.s f6, f4, f1, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f6, f4, f1, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f6, f4, f1, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f6, f4, f1, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f6, f4, f1, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f6, f4, f1, f30 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0x0)
li x26, 0x95a6bd53cdfe9088 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f24, 0(x2) # load 0x807fffff from memory into f24
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f11, 0(x2) # load 0x00000000 from memory into f11
li x3, 0xdc148102eb0c6a92 # load x3 with value 0xdc148102eb0c6a92
sw x3, 0(x2) # store 0xdc148102eb0c6a92 in memory
flw f31, 0(x2) # load 0xdc148102eb0c6a92 from memory into f31
fmsub.s f26, f24, f11, f31, dyn # perform operation
fmsub.s f26, f24, f11, f31, rdn # perform operation
fmsub.s f26, f24, f11, f31, rmm # perform operation
fmsub.s f26, f24, f11, f31, rne # perform operation
fmsub.s f26, f24, f11, f31, rtz # perform operation
fmsub.s f26, f24, f11, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f26, f24, f11, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f26, f24, f11, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f26, f24, f11, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f26, f24, f11, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f26, f24, f11, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0x80000000)
li x28, 0x4fa31519226270dd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f11, 0(x2) # load 0x807fffff from memory into f11
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f19, 0(x2) # load 0x80000000 from memory into f19
li x3, 0x79994ea4a1335c91 # load x3 with value 0x79994ea4a1335c91
sw x3, 0(x2) # store 0x79994ea4a1335c91 in memory
flw f21, 0(x2) # load 0x79994ea4a1335c91 from memory into f21
fmsub.s f28, f11, f19, f21, dyn # perform operation
fmsub.s f28, f11, f19, f21, rdn # perform operation
fmsub.s f28, f11, f19, f21, rmm # perform operation
fmsub.s f28, f11, f19, f21, rne # perform operation
fmsub.s f28, f11, f19, f21, rtz # perform operation
fmsub.s f28, f11, f19, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f28, f11, f19, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f28, f11, f19, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f28, f11, f19, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f28, f11, f19, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f28, f11, f19, f21 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0x3f800000)
li x21, 0x7ebead21759e01ac # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f16, 0(x2) # load 0x807fffff from memory into f16
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f20, 0(x2) # load 0x3f800000 from memory into f20
li x3, 0xebc037bfb47df5a5 # load x3 with value 0xebc037bfb47df5a5
sw x3, 0(x2) # store 0xebc037bfb47df5a5 in memory
flw f27, 0(x2) # load 0xebc037bfb47df5a5 from memory into f27
fmsub.s f21, f16, f20, f27, dyn # perform operation
fmsub.s f21, f16, f20, f27, rdn # perform operation
fmsub.s f21, f16, f20, f27, rmm # perform operation
fmsub.s f21, f16, f20, f27, rne # perform operation
fmsub.s f21, f16, f20, f27, rtz # perform operation
fmsub.s f21, f16, f20, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f21, f16, f20, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f21, f16, f20, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f21, f16, f20, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f21, f16, f20, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f21, f16, f20, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0xbf800000)
li x30, 0xc6fde3bea425f318 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f25, 0(x2) # load 0x807fffff from memory into f25
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f7, 0(x2) # load 0xbf800000 from memory into f7
li x3, 0xa66bb8c08ecf06ae # load x3 with value 0xa66bb8c08ecf06ae
sw x3, 0(x2) # store 0xa66bb8c08ecf06ae in memory
flw f8, 0(x2) # load 0xa66bb8c08ecf06ae from memory into f8
fmsub.s f30, f25, f7, f8, dyn # perform operation
fmsub.s f30, f25, f7, f8, rdn # perform operation
fmsub.s f30, f25, f7, f8, rmm # perform operation
fmsub.s f30, f25, f7, f8, rne # perform operation
fmsub.s f30, f25, f7, f8, rtz # perform operation
fmsub.s f30, f25, f7, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f30, f25, f7, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f30, f25, f7, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f30, f25, f7, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f30, f25, f7, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f30, f25, f7, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0x3fc00000)
li x11, 0x09b59696cfa0419c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f21, 0(x2) # load 0x807fffff from memory into f21
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f13, 0(x2) # load 0x3fc00000 from memory into f13
li x3, 0x9320081d6f91fde3 # load x3 with value 0x9320081d6f91fde3
sw x3, 0(x2) # store 0x9320081d6f91fde3 in memory
flw f12, 0(x2) # load 0x9320081d6f91fde3 from memory into f12
fmsub.s f11, f21, f13, f12, dyn # perform operation
fmsub.s f11, f21, f13, f12, rdn # perform operation
fmsub.s f11, f21, f13, f12, rmm # perform operation
fmsub.s f11, f21, f13, f12, rne # perform operation
fmsub.s f11, f21, f13, f12, rtz # perform operation
fmsub.s f11, f21, f13, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f11, f21, f13, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f11, f21, f13, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f11, f21, f13, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f11, f21, f13, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f11, f21, f13, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0xbfc00000)
li x8, 0xd4e558ede5830a01 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f7, 0(x2) # load 0x807fffff from memory into f7
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f28, 0(x2) # load 0xbfc00000 from memory into f28
li x3, 0x4ccd0f2c6b075f3e # load x3 with value 0x4ccd0f2c6b075f3e
sw x3, 0(x2) # store 0x4ccd0f2c6b075f3e in memory
flw f1, 0(x2) # load 0x4ccd0f2c6b075f3e from memory into f1
fmsub.s f8, f7, f28, f1, dyn # perform operation
fmsub.s f8, f7, f28, f1, rdn # perform operation
fmsub.s f8, f7, f28, f1, rmm # perform operation
fmsub.s f8, f7, f28, f1, rne # perform operation
fmsub.s f8, f7, f28, f1, rtz # perform operation
fmsub.s f8, f7, f28, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f8, f7, f28, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f8, f7, f28, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f8, f7, f28, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f8, f7, f28, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f8, f7, f28, f1 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0x40000000)
li x26, 0x0c65832998f44f48 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f15, 0(x2) # load 0x807fffff from memory into f15
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f31, 0(x2) # load 0x40000000 from memory into f31
li x3, 0x584e35bbcf20c8a0 # load x3 with value 0x584e35bbcf20c8a0
sw x3, 0(x2) # store 0x584e35bbcf20c8a0 in memory
flw f11, 0(x2) # load 0x584e35bbcf20c8a0 from memory into f11
fmsub.s f26, f15, f31, f11, dyn # perform operation
fmsub.s f26, f15, f31, f11, rdn # perform operation
fmsub.s f26, f15, f31, f11, rmm # perform operation
fmsub.s f26, f15, f31, f11, rne # perform operation
fmsub.s f26, f15, f31, f11, rtz # perform operation
fmsub.s f26, f15, f31, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f26, f15, f31, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f26, f15, f31, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f26, f15, f31, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f26, f15, f31, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f26, f15, f31, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0xc0000000)
li x10, 0x0d647a0d77377ff8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f20, 0(x2) # load 0x807fffff from memory into f20
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f13, 0(x2) # load 0xc0000000 from memory into f13
li x3, 0xab7b32428b3fbc46 # load x3 with value 0xab7b32428b3fbc46
sw x3, 0(x2) # store 0xab7b32428b3fbc46 in memory
flw f16, 0(x2) # load 0xab7b32428b3fbc46 from memory into f16
fmsub.s f10, f20, f13, f16, dyn # perform operation
fmsub.s f10, f20, f13, f16, rdn # perform operation
fmsub.s f10, f20, f13, f16, rmm # perform operation
fmsub.s f10, f20, f13, f16, rne # perform operation
fmsub.s f10, f20, f13, f16, rtz # perform operation
fmsub.s f10, f20, f13, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f10, f20, f13, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f10, f20, f13, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f10, f20, f13, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f10, f20, f13, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f10, f20, f13, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0x800000)
li x11, 0x03758b978a933a86 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f31, 0(x2) # load 0x807fffff from memory into f31
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f8, 0(x2) # load 0x00800000 from memory into f8
li x3, 0xcaebbc027a255895 # load x3 with value 0xcaebbc027a255895
sw x3, 0(x2) # store 0xcaebbc027a255895 in memory
flw f26, 0(x2) # load 0xcaebbc027a255895 from memory into f26
fmsub.s f11, f31, f8, f26, dyn # perform operation
fmsub.s f11, f31, f8, f26, rdn # perform operation
fmsub.s f11, f31, f8, f26, rmm # perform operation
fmsub.s f11, f31, f8, f26, rne # perform operation
fmsub.s f11, f31, f8, f26, rtz # perform operation
fmsub.s f11, f31, f8, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f11, f31, f8, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f11, f31, f8, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f11, f31, f8, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f11, f31, f8, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f11, f31, f8, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0x80800000)
li x10, 0x4416d30037996ead # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f13, 0(x2) # load 0x807fffff from memory into f13
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f29, 0(x2) # load 0x80800000 from memory into f29
li x3, 0xe6c99510d83397f0 # load x3 with value 0xe6c99510d83397f0
sw x3, 0(x2) # store 0xe6c99510d83397f0 in memory
flw f1, 0(x2) # load 0xe6c99510d83397f0 from memory into f1
fmsub.s f10, f13, f29, f1, dyn # perform operation
fmsub.s f10, f13, f29, f1, rdn # perform operation
fmsub.s f10, f13, f29, f1, rmm # perform operation
fmsub.s f10, f13, f29, f1, rne # perform operation
fmsub.s f10, f13, f29, f1, rtz # perform operation
fmsub.s f10, f13, f29, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f10, f13, f29, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f10, f13, f29, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f10, f13, f29, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f10, f13, f29, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f10, f13, f29, f1 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0x7f7fffff)
li x11, 0x81b720c23e1b2569 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f21, 0(x2) # load 0x807fffff from memory into f21
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f15, 0(x2) # load 0x7f7fffff from memory into f15
li x3, 0x76437b3f08337b3d # load x3 with value 0x76437b3f08337b3d
sw x3, 0(x2) # store 0x76437b3f08337b3d in memory
flw f31, 0(x2) # load 0x76437b3f08337b3d from memory into f31
fmsub.s f11, f21, f15, f31, dyn # perform operation
fmsub.s f11, f21, f15, f31, rdn # perform operation
fmsub.s f11, f21, f15, f31, rmm # perform operation
fmsub.s f11, f21, f15, f31, rne # perform operation
fmsub.s f11, f21, f15, f31, rtz # perform operation
fmsub.s f11, f21, f15, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f11, f21, f15, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f11, f21, f15, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f11, f21, f15, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f11, f21, f15, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f11, f21, f15, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0xff7fffff)
li x21, 0x91cbf72cba227e23 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f16, 0(x2) # load 0x807fffff from memory into f16
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f22, 0(x2) # load 0xff7fffff from memory into f22
li x3, 0xab9f940a06e2b972 # load x3 with value 0xab9f940a06e2b972
sw x3, 0(x2) # store 0xab9f940a06e2b972 in memory
flw f23, 0(x2) # load 0xab9f940a06e2b972 from memory into f23
fmsub.s f21, f16, f22, f23, dyn # perform operation
fmsub.s f21, f16, f22, f23, rdn # perform operation
fmsub.s f21, f16, f22, f23, rmm # perform operation
fmsub.s f21, f16, f22, f23, rne # perform operation
fmsub.s f21, f16, f22, f23, rtz # perform operation
fmsub.s f21, f16, f22, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f21, f16, f22, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f21, f16, f22, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f21, f16, f22, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f21, f16, f22, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f21, f16, f22, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0x7fffff)
li x23, 0x34c567dc3a8cef0f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f28, 0(x2) # load 0x807fffff from memory into f28
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f16, 0(x2) # load 0x007fffff from memory into f16
li x3, 0x114f5b67a335521e # load x3 with value 0x114f5b67a335521e
sw x3, 0(x2) # store 0x114f5b67a335521e in memory
flw f10, 0(x2) # load 0x114f5b67a335521e from memory into f10
fmsub.s f23, f28, f16, f10, dyn # perform operation
fmsub.s f23, f28, f16, f10, rdn # perform operation
fmsub.s f23, f28, f16, f10, rmm # perform operation
fmsub.s f23, f28, f16, f10, rne # perform operation
fmsub.s f23, f28, f16, f10, rtz # perform operation
fmsub.s f23, f28, f16, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f23, f28, f16, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f23, f28, f16, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f23, f28, f16, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f23, f28, f16, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f23, f28, f16, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0x807fffff)
li x5, 0xb56a3c7294a1f96a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f6, 0(x2) # load 0x807fffff from memory into f6
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f17, 0(x2) # load 0x807fffff from memory into f17
li x3, 0x922a724b79e20c14 # load x3 with value 0x922a724b79e20c14
sw x3, 0(x2) # store 0x922a724b79e20c14 in memory
flw f15, 0(x2) # load 0x922a724b79e20c14 from memory into f15
fmsub.s f5, f6, f17, f15, dyn # perform operation
fmsub.s f5, f6, f17, f15, rdn # perform operation
fmsub.s f5, f6, f17, f15, rmm # perform operation
fmsub.s f5, f6, f17, f15, rne # perform operation
fmsub.s f5, f6, f17, f15, rtz # perform operation
fmsub.s f5, f6, f17, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f5, f6, f17, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f5, f6, f17, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f5, f6, f17, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f5, f6, f17, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f5, f6, f17, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0x400000)
li x26, 0x23135f3589d8e78d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f20, 0(x2) # load 0x807fffff from memory into f20
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f22, 0(x2) # load 0x00400000 from memory into f22
li x3, 0xa12a21a7ba50afb7 # load x3 with value 0xa12a21a7ba50afb7
sw x3, 0(x2) # store 0xa12a21a7ba50afb7 in memory
flw f3, 0(x2) # load 0xa12a21a7ba50afb7 from memory into f3
fmsub.s f26, f20, f22, f3, dyn # perform operation
fmsub.s f26, f20, f22, f3, rdn # perform operation
fmsub.s f26, f20, f22, f3, rmm # perform operation
fmsub.s f26, f20, f22, f3, rne # perform operation
fmsub.s f26, f20, f22, f3, rtz # perform operation
fmsub.s f26, f20, f22, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f26, f20, f22, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f26, f20, f22, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f26, f20, f22, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f26, f20, f22, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f26, f20, f22, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0x80400000)
li x21, 0x47ce92b4677c9954 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f10, 0(x2) # load 0x807fffff from memory into f10
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f11, 0(x2) # load 0x80400000 from memory into f11
li x3, 0x9fea59cf14784f45 # load x3 with value 0x9fea59cf14784f45
sw x3, 0(x2) # store 0x9fea59cf14784f45 in memory
flw f3, 0(x2) # load 0x9fea59cf14784f45 from memory into f3
fmsub.s f21, f10, f11, f3, dyn # perform operation
fmsub.s f21, f10, f11, f3, rdn # perform operation
fmsub.s f21, f10, f11, f3, rmm # perform operation
fmsub.s f21, f10, f11, f3, rne # perform operation
fmsub.s f21, f10, f11, f3, rtz # perform operation
fmsub.s f21, f10, f11, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f21, f10, f11, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f21, f10, f11, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f21, f10, f11, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f21, f10, f11, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f21, f10, f11, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0x1)
li x7, 0xb1969c5ccb0921bf # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f20, 0(x2) # load 0x807fffff from memory into f20
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f26, 0(x2) # load 0x00000001 from memory into f26
li x3, 0x568863f67052d9ea # load x3 with value 0x568863f67052d9ea
sw x3, 0(x2) # store 0x568863f67052d9ea in memory
flw f29, 0(x2) # load 0x568863f67052d9ea from memory into f29
fmsub.s f7, f20, f26, f29, dyn # perform operation
fmsub.s f7, f20, f26, f29, rdn # perform operation
fmsub.s f7, f20, f26, f29, rmm # perform operation
fmsub.s f7, f20, f26, f29, rne # perform operation
fmsub.s f7, f20, f26, f29, rtz # perform operation
fmsub.s f7, f20, f26, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f7, f20, f26, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f7, f20, f26, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f7, f20, f26, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f7, f20, f26, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f7, f20, f26, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0x80000001)
li x2, 0x961e07b827b56fe4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f8, 0(x2) # load 0x807fffff from memory into f8
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f20, 0(x2) # load 0x80000001 from memory into f20
li x3, 0x984b709411911924 # load x3 with value 0x984b709411911924
sw x3, 0(x2) # store 0x984b709411911924 in memory
flw f11, 0(x2) # load 0x984b709411911924 from memory into f11
fmsub.s f2, f8, f20, f11, dyn # perform operation
fmsub.s f2, f8, f20, f11, rdn # perform operation
fmsub.s f2, f8, f20, f11, rmm # perform operation
fmsub.s f2, f8, f20, f11, rne # perform operation
fmsub.s f2, f8, f20, f11, rtz # perform operation
fmsub.s f2, f8, f20, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f2, f8, f20, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f2, f8, f20, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f2, f8, f20, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f2, f8, f20, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f2, f8, f20, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0x7f800000)
li x6, 0x6e30d1ab0a5318ad # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f7, 0(x2) # load 0x807fffff from memory into f7
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f15, 0(x2) # load 0x7f800000 from memory into f15
li x3, 0x999cdd174e97347c # load x3 with value 0x999cdd174e97347c
sw x3, 0(x2) # store 0x999cdd174e97347c in memory
flw f5, 0(x2) # load 0x999cdd174e97347c from memory into f5
fmsub.s f6, f7, f15, f5, dyn # perform operation
fmsub.s f6, f7, f15, f5, rdn # perform operation
fmsub.s f6, f7, f15, f5, rmm # perform operation
fmsub.s f6, f7, f15, f5, rne # perform operation
fmsub.s f6, f7, f15, f5, rtz # perform operation
fmsub.s f6, f7, f15, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f6, f7, f15, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f6, f7, f15, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f6, f7, f15, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f6, f7, f15, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f6, f7, f15, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0xff800000)
li x27, 0xf554b27d7a82be81 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f22, 0(x2) # load 0x807fffff from memory into f22
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f29, 0(x2) # load 0xff800000 from memory into f29
li x3, 0x1bb9798dd5c28bb9 # load x3 with value 0x1bb9798dd5c28bb9
sw x3, 0(x2) # store 0x1bb9798dd5c28bb9 in memory
flw f4, 0(x2) # load 0x1bb9798dd5c28bb9 from memory into f4
fmsub.s f27, f22, f29, f4, dyn # perform operation
fmsub.s f27, f22, f29, f4, rdn # perform operation
fmsub.s f27, f22, f29, f4, rmm # perform operation
fmsub.s f27, f22, f29, f4, rne # perform operation
fmsub.s f27, f22, f29, f4, rtz # perform operation
fmsub.s f27, f22, f29, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f27, f22, f29, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f27, f22, f29, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f27, f22, f29, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f27, f22, f29, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f27, f22, f29, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0x7fc00000)
li x22, 0x3e24a5840b9130a4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f6, 0(x2) # load 0x807fffff from memory into f6
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f15, 0(x2) # load 0x7fc00000 from memory into f15
li x3, 0x7b73e1f765e8e083 # load x3 with value 0x7b73e1f765e8e083
sw x3, 0(x2) # store 0x7b73e1f765e8e083 in memory
flw f26, 0(x2) # load 0x7b73e1f765e8e083 from memory into f26
fmsub.s f22, f6, f15, f26, dyn # perform operation
fmsub.s f22, f6, f15, f26, rdn # perform operation
fmsub.s f22, f6, f15, f26, rmm # perform operation
fmsub.s f22, f6, f15, f26, rne # perform operation
fmsub.s f22, f6, f15, f26, rtz # perform operation
fmsub.s f22, f6, f15, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f22, f6, f15, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f22, f6, f15, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f22, f6, f15, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f22, f6, f15, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f22, f6, f15, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0x7fffffff)
li x14, 0x61c74228eb443170 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f21, 0(x2) # load 0x807fffff from memory into f21
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f24, 0(x2) # load 0x7fffffff from memory into f24
li x3, 0x8c56860a447d9308 # load x3 with value 0x8c56860a447d9308
sw x3, 0(x2) # store 0x8c56860a447d9308 in memory
flw f27, 0(x2) # load 0x8c56860a447d9308 from memory into f27
fmsub.s f14, f21, f24, f27, dyn # perform operation
fmsub.s f14, f21, f24, f27, rdn # perform operation
fmsub.s f14, f21, f24, f27, rmm # perform operation
fmsub.s f14, f21, f24, f27, rne # perform operation
fmsub.s f14, f21, f24, f27, rtz # perform operation
fmsub.s f14, f21, f24, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f14, f21, f24, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f14, f21, f24, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f14, f21, f24, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f14, f21, f24, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f14, f21, f24, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0x7f800001)
li x12, 0x9d51b107cb519382 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f18, 0(x2) # load 0x807fffff from memory into f18
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f16, 0(x2) # load 0x7f800001 from memory into f16
li x3, 0x24d166173a56c6ed # load x3 with value 0x24d166173a56c6ed
sw x3, 0(x2) # store 0x24d166173a56c6ed in memory
flw f17, 0(x2) # load 0x24d166173a56c6ed from memory into f17
fmsub.s f12, f18, f16, f17, dyn # perform operation
fmsub.s f12, f18, f16, f17, rdn # perform operation
fmsub.s f12, f18, f16, f17, rmm # perform operation
fmsub.s f12, f18, f16, f17, rne # perform operation
fmsub.s f12, f18, f16, f17, rtz # perform operation
fmsub.s f12, f18, f16, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f12, f18, f16, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f12, f18, f16, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f12, f18, f16, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f12, f18, f16, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f12, f18, f16, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0x7fbfffff)
li x12, 0xc805ad679d5da9db # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f29, 0(x2) # load 0x807fffff from memory into f29
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f26, 0(x2) # load 0x7fbfffff from memory into f26
li x3, 0x1a7666c106335f3b # load x3 with value 0x1a7666c106335f3b
sw x3, 0(x2) # store 0x1a7666c106335f3b in memory
flw f16, 0(x2) # load 0x1a7666c106335f3b from memory into f16
fmsub.s f12, f29, f26, f16, dyn # perform operation
fmsub.s f12, f29, f26, f16, rdn # perform operation
fmsub.s f12, f29, f26, f16, rmm # perform operation
fmsub.s f12, f29, f26, f16, rne # perform operation
fmsub.s f12, f29, f26, f16, rtz # perform operation
fmsub.s f12, f29, f26, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f12, f29, f26, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f12, f29, f26, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f12, f29, f26, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f12, f29, f26, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f12, f29, f26, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0x7ef8654f)
li x13, 0x2849f235a7ca2735 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f3, 0(x2) # load 0x807fffff from memory into f3
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f2, 0(x2) # load 0x7ef8654f from memory into f2
li x3, 0xa1bad454d9b9d883 # load x3 with value 0xa1bad454d9b9d883
sw x3, 0(x2) # store 0xa1bad454d9b9d883 in memory
flw f15, 0(x2) # load 0xa1bad454d9b9d883 from memory into f15
fmsub.s f13, f3, f2, f15, dyn # perform operation
fmsub.s f13, f3, f2, f15, rdn # perform operation
fmsub.s f13, f3, f2, f15, rmm # perform operation
fmsub.s f13, f3, f2, f15, rne # perform operation
fmsub.s f13, f3, f2, f15, rtz # perform operation
fmsub.s f13, f3, f2, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f13, f3, f2, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f13, f3, f2, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f13, f3, f2, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f13, f3, f2, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f13, f3, f2, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0x813d9ab0)
li x10, 0xee9a800e70bdf3cc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f14, 0(x2) # load 0x807fffff from memory into f14
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f5, 0(x2) # load 0x813d9ab0 from memory into f5
li x3, 0xd4b2ecb9889aac1e # load x3 with value 0xd4b2ecb9889aac1e
sw x3, 0(x2) # store 0xd4b2ecb9889aac1e in memory
flw f18, 0(x2) # load 0xd4b2ecb9889aac1e from memory into f18
fmsub.s f10, f14, f5, f18, dyn # perform operation
fmsub.s f10, f14, f5, f18, rdn # perform operation
fmsub.s f10, f14, f5, f18, rmm # perform operation
fmsub.s f10, f14, f5, f18, rne # perform operation
fmsub.s f10, f14, f5, f18, rtz # perform operation
fmsub.s f10, f14, f5, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f10, f14, f5, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f10, f14, f5, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f10, f14, f5, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f10, f14, f5, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f10, f14, f5, f18 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0x0)
li x7, 0x45461d240a8f2b33 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f24, 0(x2) # load 0x00400000 from memory into f24
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f10, 0(x2) # load 0x00000000 from memory into f10
li x3, 0x87659461e7fd39da # load x3 with value 0x87659461e7fd39da
sw x3, 0(x2) # store 0x87659461e7fd39da in memory
flw f29, 0(x2) # load 0x87659461e7fd39da from memory into f29
fmsub.s f7, f24, f10, f29, dyn # perform operation
fmsub.s f7, f24, f10, f29, rdn # perform operation
fmsub.s f7, f24, f10, f29, rmm # perform operation
fmsub.s f7, f24, f10, f29, rne # perform operation
fmsub.s f7, f24, f10, f29, rtz # perform operation
fmsub.s f7, f24, f10, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f7, f24, f10, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f7, f24, f10, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f7, f24, f10, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f7, f24, f10, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f7, f24, f10, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0x80000000)
li x23, 0x54685a2970bd270f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f24, 0(x2) # load 0x00400000 from memory into f24
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f31, 0(x2) # load 0x80000000 from memory into f31
li x3, 0xf13663f4c96c073a # load x3 with value 0xf13663f4c96c073a
sw x3, 0(x2) # store 0xf13663f4c96c073a in memory
flw f26, 0(x2) # load 0xf13663f4c96c073a from memory into f26
fmsub.s f23, f24, f31, f26, dyn # perform operation
fmsub.s f23, f24, f31, f26, rdn # perform operation
fmsub.s f23, f24, f31, f26, rmm # perform operation
fmsub.s f23, f24, f31, f26, rne # perform operation
fmsub.s f23, f24, f31, f26, rtz # perform operation
fmsub.s f23, f24, f31, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f23, f24, f31, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f23, f24, f31, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f23, f24, f31, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f23, f24, f31, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f23, f24, f31, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0x3f800000)
li x5, 0x3fe747a2b02bb465 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f11, 0(x2) # load 0x00400000 from memory into f11
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f18, 0(x2) # load 0x3f800000 from memory into f18
li x3, 0xa163b8a0ead383bf # load x3 with value 0xa163b8a0ead383bf
sw x3, 0(x2) # store 0xa163b8a0ead383bf in memory
flw f28, 0(x2) # load 0xa163b8a0ead383bf from memory into f28
fmsub.s f5, f11, f18, f28, dyn # perform operation
fmsub.s f5, f11, f18, f28, rdn # perform operation
fmsub.s f5, f11, f18, f28, rmm # perform operation
fmsub.s f5, f11, f18, f28, rne # perform operation
fmsub.s f5, f11, f18, f28, rtz # perform operation
fmsub.s f5, f11, f18, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f5, f11, f18, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f5, f11, f18, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f5, f11, f18, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f5, f11, f18, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f5, f11, f18, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0xbf800000)
li x23, 0xa2b1840e12734920 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f29, 0(x2) # load 0x00400000 from memory into f29
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f3, 0(x2) # load 0xbf800000 from memory into f3
li x3, 0xc7ea73230ec34cac # load x3 with value 0xc7ea73230ec34cac
sw x3, 0(x2) # store 0xc7ea73230ec34cac in memory
flw f8, 0(x2) # load 0xc7ea73230ec34cac from memory into f8
fmsub.s f23, f29, f3, f8, dyn # perform operation
fmsub.s f23, f29, f3, f8, rdn # perform operation
fmsub.s f23, f29, f3, f8, rmm # perform operation
fmsub.s f23, f29, f3, f8, rne # perform operation
fmsub.s f23, f29, f3, f8, rtz # perform operation
fmsub.s f23, f29, f3, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f23, f29, f3, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f23, f29, f3, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f23, f29, f3, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f23, f29, f3, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f23, f29, f3, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0x3fc00000)
li x29, 0xe18a659482d34434 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f10, 0(x2) # load 0x00400000 from memory into f10
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f9, 0(x2) # load 0x3fc00000 from memory into f9
li x3, 0x773c11ecaffee915 # load x3 with value 0x773c11ecaffee915
sw x3, 0(x2) # store 0x773c11ecaffee915 in memory
flw f31, 0(x2) # load 0x773c11ecaffee915 from memory into f31
fmsub.s f29, f10, f9, f31, dyn # perform operation
fmsub.s f29, f10, f9, f31, rdn # perform operation
fmsub.s f29, f10, f9, f31, rmm # perform operation
fmsub.s f29, f10, f9, f31, rne # perform operation
fmsub.s f29, f10, f9, f31, rtz # perform operation
fmsub.s f29, f10, f9, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f29, f10, f9, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f29, f10, f9, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f29, f10, f9, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f29, f10, f9, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f29, f10, f9, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0xbfc00000)
li x11, 0x9fc7b443147a1116 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f22, 0(x2) # load 0x00400000 from memory into f22
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f14, 0(x2) # load 0xbfc00000 from memory into f14
li x3, 0x6829f73c1834f73d # load x3 with value 0x6829f73c1834f73d
sw x3, 0(x2) # store 0x6829f73c1834f73d in memory
flw f16, 0(x2) # load 0x6829f73c1834f73d from memory into f16
fmsub.s f11, f22, f14, f16, dyn # perform operation
fmsub.s f11, f22, f14, f16, rdn # perform operation
fmsub.s f11, f22, f14, f16, rmm # perform operation
fmsub.s f11, f22, f14, f16, rne # perform operation
fmsub.s f11, f22, f14, f16, rtz # perform operation
fmsub.s f11, f22, f14, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f11, f22, f14, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f11, f22, f14, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f11, f22, f14, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f11, f22, f14, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f11, f22, f14, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0x40000000)
li x27, 0xa0ca4ca9eec7b0c1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f18, 0(x2) # load 0x00400000 from memory into f18
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f15, 0(x2) # load 0x40000000 from memory into f15
li x3, 0x2bb9e29aa8501ea0 # load x3 with value 0x2bb9e29aa8501ea0
sw x3, 0(x2) # store 0x2bb9e29aa8501ea0 in memory
flw f12, 0(x2) # load 0x2bb9e29aa8501ea0 from memory into f12
fmsub.s f27, f18, f15, f12, dyn # perform operation
fmsub.s f27, f18, f15, f12, rdn # perform operation
fmsub.s f27, f18, f15, f12, rmm # perform operation
fmsub.s f27, f18, f15, f12, rne # perform operation
fmsub.s f27, f18, f15, f12, rtz # perform operation
fmsub.s f27, f18, f15, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f27, f18, f15, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f27, f18, f15, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f27, f18, f15, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f27, f18, f15, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f27, f18, f15, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0xc0000000)
li x9, 0x5618bbc657c6a8fc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f18, 0(x2) # load 0x00400000 from memory into f18
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f25, 0(x2) # load 0xc0000000 from memory into f25
li x3, 0x9178702e14c5dff3 # load x3 with value 0x9178702e14c5dff3
sw x3, 0(x2) # store 0x9178702e14c5dff3 in memory
flw f5, 0(x2) # load 0x9178702e14c5dff3 from memory into f5
fmsub.s f9, f18, f25, f5, dyn # perform operation
fmsub.s f9, f18, f25, f5, rdn # perform operation
fmsub.s f9, f18, f25, f5, rmm # perform operation
fmsub.s f9, f18, f25, f5, rne # perform operation
fmsub.s f9, f18, f25, f5, rtz # perform operation
fmsub.s f9, f18, f25, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f9, f18, f25, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f9, f18, f25, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f9, f18, f25, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f9, f18, f25, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f9, f18, f25, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0x800000)
li x13, 0xcac07f1f59efcde9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f30, 0(x2) # load 0x00400000 from memory into f30
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f5, 0(x2) # load 0x00800000 from memory into f5
li x3, 0xbe61e010b17b90ca # load x3 with value 0xbe61e010b17b90ca
sw x3, 0(x2) # store 0xbe61e010b17b90ca in memory
flw f14, 0(x2) # load 0xbe61e010b17b90ca from memory into f14
fmsub.s f13, f30, f5, f14, dyn # perform operation
fmsub.s f13, f30, f5, f14, rdn # perform operation
fmsub.s f13, f30, f5, f14, rmm # perform operation
fmsub.s f13, f30, f5, f14, rne # perform operation
fmsub.s f13, f30, f5, f14, rtz # perform operation
fmsub.s f13, f30, f5, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f13, f30, f5, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f13, f30, f5, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f13, f30, f5, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f13, f30, f5, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f13, f30, f5, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0x80800000)
li x31, 0xf7640ab63a32dc60 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f4, 0(x2) # load 0x00400000 from memory into f4
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f13, 0(x2) # load 0x80800000 from memory into f13
li x3, 0x81184794def44680 # load x3 with value 0x81184794def44680
sw x3, 0(x2) # store 0x81184794def44680 in memory
flw f9, 0(x2) # load 0x81184794def44680 from memory into f9
fmsub.s f31, f4, f13, f9, dyn # perform operation
fmsub.s f31, f4, f13, f9, rdn # perform operation
fmsub.s f31, f4, f13, f9, rmm # perform operation
fmsub.s f31, f4, f13, f9, rne # perform operation
fmsub.s f31, f4, f13, f9, rtz # perform operation
fmsub.s f31, f4, f13, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f31, f4, f13, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f31, f4, f13, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f31, f4, f13, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f31, f4, f13, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f31, f4, f13, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0x7f7fffff)
li x16, 0x16d5dcfb24603dc3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f7, 0(x2) # load 0x00400000 from memory into f7
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f9, 0(x2) # load 0x7f7fffff from memory into f9
li x3, 0x316f34069b3f1c79 # load x3 with value 0x316f34069b3f1c79
sw x3, 0(x2) # store 0x316f34069b3f1c79 in memory
flw f14, 0(x2) # load 0x316f34069b3f1c79 from memory into f14
fmsub.s f16, f7, f9, f14, dyn # perform operation
fmsub.s f16, f7, f9, f14, rdn # perform operation
fmsub.s f16, f7, f9, f14, rmm # perform operation
fmsub.s f16, f7, f9, f14, rne # perform operation
fmsub.s f16, f7, f9, f14, rtz # perform operation
fmsub.s f16, f7, f9, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f16, f7, f9, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f16, f7, f9, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f16, f7, f9, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f16, f7, f9, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f16, f7, f9, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0xff7fffff)
li x17, 0xb079fac74a48d27d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f16, 0(x2) # load 0x00400000 from memory into f16
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f11, 0(x2) # load 0xff7fffff from memory into f11
li x3, 0x8c66fd28a5b500c5 # load x3 with value 0x8c66fd28a5b500c5
sw x3, 0(x2) # store 0x8c66fd28a5b500c5 in memory
flw f29, 0(x2) # load 0x8c66fd28a5b500c5 from memory into f29
fmsub.s f17, f16, f11, f29, dyn # perform operation
fmsub.s f17, f16, f11, f29, rdn # perform operation
fmsub.s f17, f16, f11, f29, rmm # perform operation
fmsub.s f17, f16, f11, f29, rne # perform operation
fmsub.s f17, f16, f11, f29, rtz # perform operation
fmsub.s f17, f16, f11, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f17, f16, f11, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f17, f16, f11, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f17, f16, f11, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f17, f16, f11, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f17, f16, f11, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0x7fffff)
li x17, 0x1e4b32c6aec14d23 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f1, 0(x2) # load 0x00400000 from memory into f1
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f6, 0(x2) # load 0x007fffff from memory into f6
li x3, 0x4f7b0288f950caa3 # load x3 with value 0x4f7b0288f950caa3
sw x3, 0(x2) # store 0x4f7b0288f950caa3 in memory
flw f21, 0(x2) # load 0x4f7b0288f950caa3 from memory into f21
fmsub.s f17, f1, f6, f21, dyn # perform operation
fmsub.s f17, f1, f6, f21, rdn # perform operation
fmsub.s f17, f1, f6, f21, rmm # perform operation
fmsub.s f17, f1, f6, f21, rne # perform operation
fmsub.s f17, f1, f6, f21, rtz # perform operation
fmsub.s f17, f1, f6, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f17, f1, f6, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f17, f1, f6, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f17, f1, f6, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f17, f1, f6, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f17, f1, f6, f21 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0x807fffff)
li x10, 0x4429dc340974f3a4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f26, 0(x2) # load 0x00400000 from memory into f26
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f22, 0(x2) # load 0x807fffff from memory into f22
li x3, 0x1bee0b8a9dd71544 # load x3 with value 0x1bee0b8a9dd71544
sw x3, 0(x2) # store 0x1bee0b8a9dd71544 in memory
flw f27, 0(x2) # load 0x1bee0b8a9dd71544 from memory into f27
fmsub.s f10, f26, f22, f27, dyn # perform operation
fmsub.s f10, f26, f22, f27, rdn # perform operation
fmsub.s f10, f26, f22, f27, rmm # perform operation
fmsub.s f10, f26, f22, f27, rne # perform operation
fmsub.s f10, f26, f22, f27, rtz # perform operation
fmsub.s f10, f26, f22, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f10, f26, f22, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f10, f26, f22, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f10, f26, f22, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f10, f26, f22, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f10, f26, f22, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0x400000)
li x19, 0xb1ad8c64c7ce8179 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f9, 0(x2) # load 0x00400000 from memory into f9
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f22, 0(x2) # load 0x00400000 from memory into f22
li x3, 0x83690026d3ab797d # load x3 with value 0x83690026d3ab797d
sw x3, 0(x2) # store 0x83690026d3ab797d in memory
flw f15, 0(x2) # load 0x83690026d3ab797d from memory into f15
fmsub.s f19, f9, f22, f15, dyn # perform operation
fmsub.s f19, f9, f22, f15, rdn # perform operation
fmsub.s f19, f9, f22, f15, rmm # perform operation
fmsub.s f19, f9, f22, f15, rne # perform operation
fmsub.s f19, f9, f22, f15, rtz # perform operation
fmsub.s f19, f9, f22, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f19, f9, f22, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f19, f9, f22, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f19, f9, f22, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f19, f9, f22, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f19, f9, f22, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0x80400000)
li x26, 0x59d7abf6e66a7caf # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f18, 0(x2) # load 0x00400000 from memory into f18
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f6, 0(x2) # load 0x80400000 from memory into f6
li x3, 0x7777cbca510baff5 # load x3 with value 0x7777cbca510baff5
sw x3, 0(x2) # store 0x7777cbca510baff5 in memory
flw f17, 0(x2) # load 0x7777cbca510baff5 from memory into f17
fmsub.s f26, f18, f6, f17, dyn # perform operation
fmsub.s f26, f18, f6, f17, rdn # perform operation
fmsub.s f26, f18, f6, f17, rmm # perform operation
fmsub.s f26, f18, f6, f17, rne # perform operation
fmsub.s f26, f18, f6, f17, rtz # perform operation
fmsub.s f26, f18, f6, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f26, f18, f6, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f26, f18, f6, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f26, f18, f6, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f26, f18, f6, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f26, f18, f6, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0x1)
li x22, 0x2edcd24c135be68c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f10, 0(x2) # load 0x00400000 from memory into f10
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f1, 0(x2) # load 0x00000001 from memory into f1
li x3, 0x2ea6175f90d4a2b3 # load x3 with value 0x2ea6175f90d4a2b3
sw x3, 0(x2) # store 0x2ea6175f90d4a2b3 in memory
flw f30, 0(x2) # load 0x2ea6175f90d4a2b3 from memory into f30
fmsub.s f22, f10, f1, f30, dyn # perform operation
fmsub.s f22, f10, f1, f30, rdn # perform operation
fmsub.s f22, f10, f1, f30, rmm # perform operation
fmsub.s f22, f10, f1, f30, rne # perform operation
fmsub.s f22, f10, f1, f30, rtz # perform operation
fmsub.s f22, f10, f1, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f22, f10, f1, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f22, f10, f1, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f22, f10, f1, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f22, f10, f1, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f22, f10, f1, f30 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0x80000001)
li x9, 0x27d61c75e2a01da7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f30, 0(x2) # load 0x00400000 from memory into f30
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f18, 0(x2) # load 0x80000001 from memory into f18
li x3, 0x42d5deacdf7200e7 # load x3 with value 0x42d5deacdf7200e7
sw x3, 0(x2) # store 0x42d5deacdf7200e7 in memory
flw f16, 0(x2) # load 0x42d5deacdf7200e7 from memory into f16
fmsub.s f9, f30, f18, f16, dyn # perform operation
fmsub.s f9, f30, f18, f16, rdn # perform operation
fmsub.s f9, f30, f18, f16, rmm # perform operation
fmsub.s f9, f30, f18, f16, rne # perform operation
fmsub.s f9, f30, f18, f16, rtz # perform operation
fmsub.s f9, f30, f18, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f9, f30, f18, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f9, f30, f18, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f9, f30, f18, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f9, f30, f18, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f9, f30, f18, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0x7f800000)
li x10, 0x89efdfdb00515df1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f27, 0(x2) # load 0x00400000 from memory into f27
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f17, 0(x2) # load 0x7f800000 from memory into f17
li x3, 0xcad859c9cb00261a # load x3 with value 0xcad859c9cb00261a
sw x3, 0(x2) # store 0xcad859c9cb00261a in memory
flw f31, 0(x2) # load 0xcad859c9cb00261a from memory into f31
fmsub.s f10, f27, f17, f31, dyn # perform operation
fmsub.s f10, f27, f17, f31, rdn # perform operation
fmsub.s f10, f27, f17, f31, rmm # perform operation
fmsub.s f10, f27, f17, f31, rne # perform operation
fmsub.s f10, f27, f17, f31, rtz # perform operation
fmsub.s f10, f27, f17, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f10, f27, f17, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f10, f27, f17, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f10, f27, f17, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f10, f27, f17, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f10, f27, f17, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0xff800000)
li x5, 0x3d601aa0296f1f71 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f31, 0(x2) # load 0x00400000 from memory into f31
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f28, 0(x2) # load 0xff800000 from memory into f28
li x3, 0xd784c3582857e7c5 # load x3 with value 0xd784c3582857e7c5
sw x3, 0(x2) # store 0xd784c3582857e7c5 in memory
flw f27, 0(x2) # load 0xd784c3582857e7c5 from memory into f27
fmsub.s f5, f31, f28, f27, dyn # perform operation
fmsub.s f5, f31, f28, f27, rdn # perform operation
fmsub.s f5, f31, f28, f27, rmm # perform operation
fmsub.s f5, f31, f28, f27, rne # perform operation
fmsub.s f5, f31, f28, f27, rtz # perform operation
fmsub.s f5, f31, f28, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f5, f31, f28, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f5, f31, f28, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f5, f31, f28, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f5, f31, f28, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f5, f31, f28, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0x7fc00000)
li x20, 0x98cf14cfee8bd0bd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f14, 0(x2) # load 0x00400000 from memory into f14
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f22, 0(x2) # load 0x7fc00000 from memory into f22
li x3, 0x9b079066248235cd # load x3 with value 0x9b079066248235cd
sw x3, 0(x2) # store 0x9b079066248235cd in memory
flw f30, 0(x2) # load 0x9b079066248235cd from memory into f30
fmsub.s f20, f14, f22, f30, dyn # perform operation
fmsub.s f20, f14, f22, f30, rdn # perform operation
fmsub.s f20, f14, f22, f30, rmm # perform operation
fmsub.s f20, f14, f22, f30, rne # perform operation
fmsub.s f20, f14, f22, f30, rtz # perform operation
fmsub.s f20, f14, f22, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f20, f14, f22, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f20, f14, f22, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f20, f14, f22, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f20, f14, f22, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f20, f14, f22, f30 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0x7fffffff)
li x7, 0x74f0b9a002e6de9a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f4, 0(x2) # load 0x00400000 from memory into f4
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f27, 0(x2) # load 0x7fffffff from memory into f27
li x3, 0xaf6b89e5b53bd4e8 # load x3 with value 0xaf6b89e5b53bd4e8
sw x3, 0(x2) # store 0xaf6b89e5b53bd4e8 in memory
flw f12, 0(x2) # load 0xaf6b89e5b53bd4e8 from memory into f12
fmsub.s f7, f4, f27, f12, dyn # perform operation
fmsub.s f7, f4, f27, f12, rdn # perform operation
fmsub.s f7, f4, f27, f12, rmm # perform operation
fmsub.s f7, f4, f27, f12, rne # perform operation
fmsub.s f7, f4, f27, f12, rtz # perform operation
fmsub.s f7, f4, f27, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f7, f4, f27, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f7, f4, f27, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f7, f4, f27, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f7, f4, f27, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f7, f4, f27, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0x7f800001)
li x21, 0x4a91fda02e22d9b6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f1, 0(x2) # load 0x00400000 from memory into f1
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f8, 0(x2) # load 0x7f800001 from memory into f8
li x3, 0x226911e9b530443d # load x3 with value 0x226911e9b530443d
sw x3, 0(x2) # store 0x226911e9b530443d in memory
flw f4, 0(x2) # load 0x226911e9b530443d from memory into f4
fmsub.s f21, f1, f8, f4, dyn # perform operation
fmsub.s f21, f1, f8, f4, rdn # perform operation
fmsub.s f21, f1, f8, f4, rmm # perform operation
fmsub.s f21, f1, f8, f4, rne # perform operation
fmsub.s f21, f1, f8, f4, rtz # perform operation
fmsub.s f21, f1, f8, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f21, f1, f8, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f21, f1, f8, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f21, f1, f8, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f21, f1, f8, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f21, f1, f8, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0x7fbfffff)
li x15, 0x239f99096a3272d3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f4, 0(x2) # load 0x00400000 from memory into f4
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f10, 0(x2) # load 0x7fbfffff from memory into f10
li x3, 0x8f257f2523f4aaa1 # load x3 with value 0x8f257f2523f4aaa1
sw x3, 0(x2) # store 0x8f257f2523f4aaa1 in memory
flw f2, 0(x2) # load 0x8f257f2523f4aaa1 from memory into f2
fmsub.s f15, f4, f10, f2, dyn # perform operation
fmsub.s f15, f4, f10, f2, rdn # perform operation
fmsub.s f15, f4, f10, f2, rmm # perform operation
fmsub.s f15, f4, f10, f2, rne # perform operation
fmsub.s f15, f4, f10, f2, rtz # perform operation
fmsub.s f15, f4, f10, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f15, f4, f10, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f15, f4, f10, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f15, f4, f10, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f15, f4, f10, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f15, f4, f10, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0x7ef8654f)
li x4, 0x5952e827b19d5a5b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f7, 0(x2) # load 0x00400000 from memory into f7
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f15, 0(x2) # load 0x7ef8654f from memory into f15
li x3, 0xf57a36f1d6f49271 # load x3 with value 0xf57a36f1d6f49271
sw x3, 0(x2) # store 0xf57a36f1d6f49271 in memory
flw f30, 0(x2) # load 0xf57a36f1d6f49271 from memory into f30
fmsub.s f4, f7, f15, f30, dyn # perform operation
fmsub.s f4, f7, f15, f30, rdn # perform operation
fmsub.s f4, f7, f15, f30, rmm # perform operation
fmsub.s f4, f7, f15, f30, rne # perform operation
fmsub.s f4, f7, f15, f30, rtz # perform operation
fmsub.s f4, f7, f15, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f4, f7, f15, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f4, f7, f15, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f4, f7, f15, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f4, f7, f15, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f4, f7, f15, f30 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0x813d9ab0)
li x25, 0xc774d6366eafe4d1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f12, 0(x2) # load 0x00400000 from memory into f12
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f31, 0(x2) # load 0x813d9ab0 from memory into f31
li x3, 0x63126e1ba4bdae9d # load x3 with value 0x63126e1ba4bdae9d
sw x3, 0(x2) # store 0x63126e1ba4bdae9d in memory
flw f15, 0(x2) # load 0x63126e1ba4bdae9d from memory into f15
fmsub.s f25, f12, f31, f15, dyn # perform operation
fmsub.s f25, f12, f31, f15, rdn # perform operation
fmsub.s f25, f12, f31, f15, rmm # perform operation
fmsub.s f25, f12, f31, f15, rne # perform operation
fmsub.s f25, f12, f31, f15, rtz # perform operation
fmsub.s f25, f12, f31, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f25, f12, f31, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f25, f12, f31, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f25, f12, f31, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f25, f12, f31, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f25, f12, f31, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0x0)
li x22, 0x4b5cf70db4a40d3b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f15, 0(x2) # load 0x80400000 from memory into f15
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f17, 0(x2) # load 0x00000000 from memory into f17
li x3, 0xa700aa68555740f3 # load x3 with value 0xa700aa68555740f3
sw x3, 0(x2) # store 0xa700aa68555740f3 in memory
flw f10, 0(x2) # load 0xa700aa68555740f3 from memory into f10
fmsub.s f22, f15, f17, f10, dyn # perform operation
fmsub.s f22, f15, f17, f10, rdn # perform operation
fmsub.s f22, f15, f17, f10, rmm # perform operation
fmsub.s f22, f15, f17, f10, rne # perform operation
fmsub.s f22, f15, f17, f10, rtz # perform operation
fmsub.s f22, f15, f17, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f22, f15, f17, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f22, f15, f17, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f22, f15, f17, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f22, f15, f17, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f22, f15, f17, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0x80000000)
li x4, 0x843c0d4e9fbfa808 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f27, 0(x2) # load 0x80400000 from memory into f27
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f29, 0(x2) # load 0x80000000 from memory into f29
li x3, 0x2823183c770367d # load x3 with value 0x2823183c770367d
sw x3, 0(x2) # store 0x2823183c770367d in memory
flw f3, 0(x2) # load 0x2823183c770367d from memory into f3
fmsub.s f4, f27, f29, f3, dyn # perform operation
fmsub.s f4, f27, f29, f3, rdn # perform operation
fmsub.s f4, f27, f29, f3, rmm # perform operation
fmsub.s f4, f27, f29, f3, rne # perform operation
fmsub.s f4, f27, f29, f3, rtz # perform operation
fmsub.s f4, f27, f29, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f4, f27, f29, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f4, f27, f29, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f4, f27, f29, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f4, f27, f29, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f4, f27, f29, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0x3f800000)
li x13, 0xf89238e49fca48a7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f1, 0(x2) # load 0x80400000 from memory into f1
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f22, 0(x2) # load 0x3f800000 from memory into f22
li x3, 0xb4ce1ac7df007d90 # load x3 with value 0xb4ce1ac7df007d90
sw x3, 0(x2) # store 0xb4ce1ac7df007d90 in memory
flw f7, 0(x2) # load 0xb4ce1ac7df007d90 from memory into f7
fmsub.s f13, f1, f22, f7, dyn # perform operation
fmsub.s f13, f1, f22, f7, rdn # perform operation
fmsub.s f13, f1, f22, f7, rmm # perform operation
fmsub.s f13, f1, f22, f7, rne # perform operation
fmsub.s f13, f1, f22, f7, rtz # perform operation
fmsub.s f13, f1, f22, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f13, f1, f22, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f13, f1, f22, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f13, f1, f22, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f13, f1, f22, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f13, f1, f22, f7 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0xbf800000)
li x10, 0x008f17cf4d38e9a1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f26, 0(x2) # load 0x80400000 from memory into f26
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f4, 0(x2) # load 0xbf800000 from memory into f4
li x3, 0x7e0793964ac4e713 # load x3 with value 0x7e0793964ac4e713
sw x3, 0(x2) # store 0x7e0793964ac4e713 in memory
flw f11, 0(x2) # load 0x7e0793964ac4e713 from memory into f11
fmsub.s f10, f26, f4, f11, dyn # perform operation
fmsub.s f10, f26, f4, f11, rdn # perform operation
fmsub.s f10, f26, f4, f11, rmm # perform operation
fmsub.s f10, f26, f4, f11, rne # perform operation
fmsub.s f10, f26, f4, f11, rtz # perform operation
fmsub.s f10, f26, f4, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f10, f26, f4, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f10, f26, f4, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f10, f26, f4, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f10, f26, f4, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f10, f26, f4, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0x3fc00000)
li x25, 0xde1411c61399ccae # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f30, 0(x2) # load 0x80400000 from memory into f30
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f28, 0(x2) # load 0x3fc00000 from memory into f28
li x3, 0xa857c5d7512c2251 # load x3 with value 0xa857c5d7512c2251
sw x3, 0(x2) # store 0xa857c5d7512c2251 in memory
flw f27, 0(x2) # load 0xa857c5d7512c2251 from memory into f27
fmsub.s f25, f30, f28, f27, dyn # perform operation
fmsub.s f25, f30, f28, f27, rdn # perform operation
fmsub.s f25, f30, f28, f27, rmm # perform operation
fmsub.s f25, f30, f28, f27, rne # perform operation
fmsub.s f25, f30, f28, f27, rtz # perform operation
fmsub.s f25, f30, f28, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f25, f30, f28, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f25, f30, f28, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f25, f30, f28, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f25, f30, f28, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f25, f30, f28, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0xbfc00000)
li x10, 0x7f3fd67586425113 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f6, 0(x2) # load 0x80400000 from memory into f6
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f25, 0(x2) # load 0xbfc00000 from memory into f25
li x3, 0x68ee04cc33a48daa # load x3 with value 0x68ee04cc33a48daa
sw x3, 0(x2) # store 0x68ee04cc33a48daa in memory
flw f5, 0(x2) # load 0x68ee04cc33a48daa from memory into f5
fmsub.s f10, f6, f25, f5, dyn # perform operation
fmsub.s f10, f6, f25, f5, rdn # perform operation
fmsub.s f10, f6, f25, f5, rmm # perform operation
fmsub.s f10, f6, f25, f5, rne # perform operation
fmsub.s f10, f6, f25, f5, rtz # perform operation
fmsub.s f10, f6, f25, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f10, f6, f25, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f10, f6, f25, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f10, f6, f25, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f10, f6, f25, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f10, f6, f25, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0x40000000)
li x17, 0xb00d9e725308a299 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f13, 0(x2) # load 0x80400000 from memory into f13
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f6, 0(x2) # load 0x40000000 from memory into f6
li x3, 0x8c9bf901f282e7c4 # load x3 with value 0x8c9bf901f282e7c4
sw x3, 0(x2) # store 0x8c9bf901f282e7c4 in memory
flw f4, 0(x2) # load 0x8c9bf901f282e7c4 from memory into f4
fmsub.s f17, f13, f6, f4, dyn # perform operation
fmsub.s f17, f13, f6, f4, rdn # perform operation
fmsub.s f17, f13, f6, f4, rmm # perform operation
fmsub.s f17, f13, f6, f4, rne # perform operation
fmsub.s f17, f13, f6, f4, rtz # perform operation
fmsub.s f17, f13, f6, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f17, f13, f6, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f17, f13, f6, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f17, f13, f6, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f17, f13, f6, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f17, f13, f6, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0xc0000000)
li x18, 0x5f4cb6fd08e833a5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f16, 0(x2) # load 0x80400000 from memory into f16
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f30, 0(x2) # load 0xc0000000 from memory into f30
li x3, 0x18e3a69fa8015b98 # load x3 with value 0x18e3a69fa8015b98
sw x3, 0(x2) # store 0x18e3a69fa8015b98 in memory
flw f20, 0(x2) # load 0x18e3a69fa8015b98 from memory into f20
fmsub.s f18, f16, f30, f20, dyn # perform operation
fmsub.s f18, f16, f30, f20, rdn # perform operation
fmsub.s f18, f16, f30, f20, rmm # perform operation
fmsub.s f18, f16, f30, f20, rne # perform operation
fmsub.s f18, f16, f30, f20, rtz # perform operation
fmsub.s f18, f16, f30, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f18, f16, f30, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f18, f16, f30, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f18, f16, f30, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f18, f16, f30, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f18, f16, f30, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0x800000)
li x28, 0x6e463e98d343f19c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f18, 0(x2) # load 0x80400000 from memory into f18
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f7, 0(x2) # load 0x00800000 from memory into f7
li x3, 0x7213fdb339c4ecf5 # load x3 with value 0x7213fdb339c4ecf5
sw x3, 0(x2) # store 0x7213fdb339c4ecf5 in memory
flw f16, 0(x2) # load 0x7213fdb339c4ecf5 from memory into f16
fmsub.s f28, f18, f7, f16, dyn # perform operation
fmsub.s f28, f18, f7, f16, rdn # perform operation
fmsub.s f28, f18, f7, f16, rmm # perform operation
fmsub.s f28, f18, f7, f16, rne # perform operation
fmsub.s f28, f18, f7, f16, rtz # perform operation
fmsub.s f28, f18, f7, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f28, f18, f7, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f28, f18, f7, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f28, f18, f7, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f28, f18, f7, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f28, f18, f7, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0x80800000)
li x8, 0xc56fcad90ca90999 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f14, 0(x2) # load 0x80400000 from memory into f14
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f13, 0(x2) # load 0x80800000 from memory into f13
li x3, 0x80e664bcaae74ebf # load x3 with value 0x80e664bcaae74ebf
sw x3, 0(x2) # store 0x80e664bcaae74ebf in memory
flw f23, 0(x2) # load 0x80e664bcaae74ebf from memory into f23
fmsub.s f8, f14, f13, f23, dyn # perform operation
fmsub.s f8, f14, f13, f23, rdn # perform operation
fmsub.s f8, f14, f13, f23, rmm # perform operation
fmsub.s f8, f14, f13, f23, rne # perform operation
fmsub.s f8, f14, f13, f23, rtz # perform operation
fmsub.s f8, f14, f13, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f8, f14, f13, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f8, f14, f13, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f8, f14, f13, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f8, f14, f13, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f8, f14, f13, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0x7f7fffff)
li x14, 0x6417959c8e7def43 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f13, 0(x2) # load 0x80400000 from memory into f13
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f23, 0(x2) # load 0x7f7fffff from memory into f23
li x3, 0x393128409866efd4 # load x3 with value 0x393128409866efd4
sw x3, 0(x2) # store 0x393128409866efd4 in memory
flw f17, 0(x2) # load 0x393128409866efd4 from memory into f17
fmsub.s f14, f13, f23, f17, dyn # perform operation
fmsub.s f14, f13, f23, f17, rdn # perform operation
fmsub.s f14, f13, f23, f17, rmm # perform operation
fmsub.s f14, f13, f23, f17, rne # perform operation
fmsub.s f14, f13, f23, f17, rtz # perform operation
fmsub.s f14, f13, f23, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f14, f13, f23, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f14, f13, f23, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f14, f13, f23, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f14, f13, f23, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f14, f13, f23, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0xff7fffff)
li x3, 0x29ddb1265a3c4f99 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f1, 0(x2) # load 0x80400000 from memory into f1
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f23, 0(x2) # load 0xff7fffff from memory into f23
li x3, 0x31db50b0612215d7 # load x3 with value 0x31db50b0612215d7
sw x3, 0(x2) # store 0x31db50b0612215d7 in memory
flw f11, 0(x2) # load 0x31db50b0612215d7 from memory into f11
fmsub.s f3, f1, f23, f11, dyn # perform operation
fmsub.s f3, f1, f23, f11, rdn # perform operation
fmsub.s f3, f1, f23, f11, rmm # perform operation
fmsub.s f3, f1, f23, f11, rne # perform operation
fmsub.s f3, f1, f23, f11, rtz # perform operation
fmsub.s f3, f1, f23, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f3, f1, f23, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f3, f1, f23, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f3, f1, f23, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f3, f1, f23, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f3, f1, f23, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0x7fffff)
li x22, 0xb09dec249c5e4e88 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f3, 0(x2) # load 0x80400000 from memory into f3
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f12, 0(x2) # load 0x007fffff from memory into f12
li x3, 0xb3c6cfcb9d39bc3f # load x3 with value 0xb3c6cfcb9d39bc3f
sw x3, 0(x2) # store 0xb3c6cfcb9d39bc3f in memory
flw f2, 0(x2) # load 0xb3c6cfcb9d39bc3f from memory into f2
fmsub.s f22, f3, f12, f2, dyn # perform operation
fmsub.s f22, f3, f12, f2, rdn # perform operation
fmsub.s f22, f3, f12, f2, rmm # perform operation
fmsub.s f22, f3, f12, f2, rne # perform operation
fmsub.s f22, f3, f12, f2, rtz # perform operation
fmsub.s f22, f3, f12, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f22, f3, f12, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f22, f3, f12, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f22, f3, f12, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f22, f3, f12, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f22, f3, f12, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0x807fffff)
li x8, 0xc74a476432d81163 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f21, 0(x2) # load 0x80400000 from memory into f21
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f7, 0(x2) # load 0x807fffff from memory into f7
li x3, 0xd9c1a4614ac2af67 # load x3 with value 0xd9c1a4614ac2af67
sw x3, 0(x2) # store 0xd9c1a4614ac2af67 in memory
flw f29, 0(x2) # load 0xd9c1a4614ac2af67 from memory into f29
fmsub.s f8, f21, f7, f29, dyn # perform operation
fmsub.s f8, f21, f7, f29, rdn # perform operation
fmsub.s f8, f21, f7, f29, rmm # perform operation
fmsub.s f8, f21, f7, f29, rne # perform operation
fmsub.s f8, f21, f7, f29, rtz # perform operation
fmsub.s f8, f21, f7, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f8, f21, f7, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f8, f21, f7, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f8, f21, f7, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f8, f21, f7, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f8, f21, f7, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0x400000)
li x24, 0x05c9ee17ca7d5b67 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f4, 0(x2) # load 0x80400000 from memory into f4
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f8, 0(x2) # load 0x00400000 from memory into f8
li x3, 0xaaa17e24ddd4f6de # load x3 with value 0xaaa17e24ddd4f6de
sw x3, 0(x2) # store 0xaaa17e24ddd4f6de in memory
flw f11, 0(x2) # load 0xaaa17e24ddd4f6de from memory into f11
fmsub.s f24, f4, f8, f11, dyn # perform operation
fmsub.s f24, f4, f8, f11, rdn # perform operation
fmsub.s f24, f4, f8, f11, rmm # perform operation
fmsub.s f24, f4, f8, f11, rne # perform operation
fmsub.s f24, f4, f8, f11, rtz # perform operation
fmsub.s f24, f4, f8, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f24, f4, f8, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f24, f4, f8, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f24, f4, f8, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f24, f4, f8, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f24, f4, f8, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0x80400000)
li x21, 0x1aaf13f7de0059fe # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f31, 0(x2) # load 0x80400000 from memory into f31
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f1, 0(x2) # load 0x80400000 from memory into f1
li x3, 0x2776d170c067a0a9 # load x3 with value 0x2776d170c067a0a9
sw x3, 0(x2) # store 0x2776d170c067a0a9 in memory
flw f12, 0(x2) # load 0x2776d170c067a0a9 from memory into f12
fmsub.s f21, f31, f1, f12, dyn # perform operation
fmsub.s f21, f31, f1, f12, rdn # perform operation
fmsub.s f21, f31, f1, f12, rmm # perform operation
fmsub.s f21, f31, f1, f12, rne # perform operation
fmsub.s f21, f31, f1, f12, rtz # perform operation
fmsub.s f21, f31, f1, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f21, f31, f1, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f21, f31, f1, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f21, f31, f1, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f21, f31, f1, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f21, f31, f1, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0x1)
li x23, 0x45bb241e916ec128 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f12, 0(x2) # load 0x80400000 from memory into f12
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f21, 0(x2) # load 0x00000001 from memory into f21
li x3, 0xa3cd6fb5dd986132 # load x3 with value 0xa3cd6fb5dd986132
sw x3, 0(x2) # store 0xa3cd6fb5dd986132 in memory
flw f27, 0(x2) # load 0xa3cd6fb5dd986132 from memory into f27
fmsub.s f23, f12, f21, f27, dyn # perform operation
fmsub.s f23, f12, f21, f27, rdn # perform operation
fmsub.s f23, f12, f21, f27, rmm # perform operation
fmsub.s f23, f12, f21, f27, rne # perform operation
fmsub.s f23, f12, f21, f27, rtz # perform operation
fmsub.s f23, f12, f21, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f23, f12, f21, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f23, f12, f21, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f23, f12, f21, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f23, f12, f21, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f23, f12, f21, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0x80000001)
li x12, 0xc68b3a3595a91fb8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f11, 0(x2) # load 0x80400000 from memory into f11
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f25, 0(x2) # load 0x80000001 from memory into f25
li x3, 0x8803a79a4935c776 # load x3 with value 0x8803a79a4935c776
sw x3, 0(x2) # store 0x8803a79a4935c776 in memory
flw f31, 0(x2) # load 0x8803a79a4935c776 from memory into f31
fmsub.s f12, f11, f25, f31, dyn # perform operation
fmsub.s f12, f11, f25, f31, rdn # perform operation
fmsub.s f12, f11, f25, f31, rmm # perform operation
fmsub.s f12, f11, f25, f31, rne # perform operation
fmsub.s f12, f11, f25, f31, rtz # perform operation
fmsub.s f12, f11, f25, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f12, f11, f25, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f12, f11, f25, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f12, f11, f25, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f12, f11, f25, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f12, f11, f25, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0x7f800000)
li x7, 0x0bd02a27f8f9079c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f11, 0(x2) # load 0x80400000 from memory into f11
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f4, 0(x2) # load 0x7f800000 from memory into f4
li x3, 0x8b47be8ff74f032a # load x3 with value 0x8b47be8ff74f032a
sw x3, 0(x2) # store 0x8b47be8ff74f032a in memory
flw f9, 0(x2) # load 0x8b47be8ff74f032a from memory into f9
fmsub.s f7, f11, f4, f9, dyn # perform operation
fmsub.s f7, f11, f4, f9, rdn # perform operation
fmsub.s f7, f11, f4, f9, rmm # perform operation
fmsub.s f7, f11, f4, f9, rne # perform operation
fmsub.s f7, f11, f4, f9, rtz # perform operation
fmsub.s f7, f11, f4, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f7, f11, f4, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f7, f11, f4, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f7, f11, f4, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f7, f11, f4, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f7, f11, f4, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0xff800000)
li x28, 0x856cd79889bf6ba8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f5, 0(x2) # load 0x80400000 from memory into f5
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f13, 0(x2) # load 0xff800000 from memory into f13
li x3, 0x1cb2856b96bad712 # load x3 with value 0x1cb2856b96bad712
sw x3, 0(x2) # store 0x1cb2856b96bad712 in memory
flw f24, 0(x2) # load 0x1cb2856b96bad712 from memory into f24
fmsub.s f28, f5, f13, f24, dyn # perform operation
fmsub.s f28, f5, f13, f24, rdn # perform operation
fmsub.s f28, f5, f13, f24, rmm # perform operation
fmsub.s f28, f5, f13, f24, rne # perform operation
fmsub.s f28, f5, f13, f24, rtz # perform operation
fmsub.s f28, f5, f13, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f28, f5, f13, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f28, f5, f13, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f28, f5, f13, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f28, f5, f13, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f28, f5, f13, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0x7fc00000)
li x16, 0x1bcedab86ff29ef7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f17, 0(x2) # load 0x80400000 from memory into f17
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f14, 0(x2) # load 0x7fc00000 from memory into f14
li x3, 0x1e3c2ead0ffb3b76 # load x3 with value 0x1e3c2ead0ffb3b76
sw x3, 0(x2) # store 0x1e3c2ead0ffb3b76 in memory
flw f31, 0(x2) # load 0x1e3c2ead0ffb3b76 from memory into f31
fmsub.s f16, f17, f14, f31, dyn # perform operation
fmsub.s f16, f17, f14, f31, rdn # perform operation
fmsub.s f16, f17, f14, f31, rmm # perform operation
fmsub.s f16, f17, f14, f31, rne # perform operation
fmsub.s f16, f17, f14, f31, rtz # perform operation
fmsub.s f16, f17, f14, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f16, f17, f14, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f16, f17, f14, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f16, f17, f14, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f16, f17, f14, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f16, f17, f14, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0x7fffffff)
li x16, 0x45246f2f0827bc08 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f19, 0(x2) # load 0x80400000 from memory into f19
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f5, 0(x2) # load 0x7fffffff from memory into f5
li x3, 0x505f9ec60f7696ab # load x3 with value 0x505f9ec60f7696ab
sw x3, 0(x2) # store 0x505f9ec60f7696ab in memory
flw f7, 0(x2) # load 0x505f9ec60f7696ab from memory into f7
fmsub.s f16, f19, f5, f7, dyn # perform operation
fmsub.s f16, f19, f5, f7, rdn # perform operation
fmsub.s f16, f19, f5, f7, rmm # perform operation
fmsub.s f16, f19, f5, f7, rne # perform operation
fmsub.s f16, f19, f5, f7, rtz # perform operation
fmsub.s f16, f19, f5, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f16, f19, f5, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f16, f19, f5, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f16, f19, f5, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f16, f19, f5, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f16, f19, f5, f7 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0x7f800001)
li x14, 0xf54ef5d11ad83aab # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f18, 0(x2) # load 0x80400000 from memory into f18
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f24, 0(x2) # load 0x7f800001 from memory into f24
li x3, 0x352dea200bb8567d # load x3 with value 0x352dea200bb8567d
sw x3, 0(x2) # store 0x352dea200bb8567d in memory
flw f15, 0(x2) # load 0x352dea200bb8567d from memory into f15
fmsub.s f14, f18, f24, f15, dyn # perform operation
fmsub.s f14, f18, f24, f15, rdn # perform operation
fmsub.s f14, f18, f24, f15, rmm # perform operation
fmsub.s f14, f18, f24, f15, rne # perform operation
fmsub.s f14, f18, f24, f15, rtz # perform operation
fmsub.s f14, f18, f24, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f14, f18, f24, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f14, f18, f24, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f14, f18, f24, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f14, f18, f24, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f14, f18, f24, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0x7fbfffff)
li x7, 0x02d1ec20093653bf # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f12, 0(x2) # load 0x80400000 from memory into f12
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f10, 0(x2) # load 0x7fbfffff from memory into f10
li x3, 0xd685dac888625011 # load x3 with value 0xd685dac888625011
sw x3, 0(x2) # store 0xd685dac888625011 in memory
flw f11, 0(x2) # load 0xd685dac888625011 from memory into f11
fmsub.s f7, f12, f10, f11, dyn # perform operation
fmsub.s f7, f12, f10, f11, rdn # perform operation
fmsub.s f7, f12, f10, f11, rmm # perform operation
fmsub.s f7, f12, f10, f11, rne # perform operation
fmsub.s f7, f12, f10, f11, rtz # perform operation
fmsub.s f7, f12, f10, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f7, f12, f10, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f7, f12, f10, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f7, f12, f10, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f7, f12, f10, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f7, f12, f10, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0x7ef8654f)
li x29, 0xf2d66d75c21fba9f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f4, 0(x2) # load 0x80400000 from memory into f4
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f18, 0(x2) # load 0x7ef8654f from memory into f18
li x3, 0x2a18f72ab49c91f8 # load x3 with value 0x2a18f72ab49c91f8
sw x3, 0(x2) # store 0x2a18f72ab49c91f8 in memory
flw f2, 0(x2) # load 0x2a18f72ab49c91f8 from memory into f2
fmsub.s f29, f4, f18, f2, dyn # perform operation
fmsub.s f29, f4, f18, f2, rdn # perform operation
fmsub.s f29, f4, f18, f2, rmm # perform operation
fmsub.s f29, f4, f18, f2, rne # perform operation
fmsub.s f29, f4, f18, f2, rtz # perform operation
fmsub.s f29, f4, f18, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f29, f4, f18, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f29, f4, f18, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f29, f4, f18, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f29, f4, f18, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f29, f4, f18, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0x813d9ab0)
li x5, 0xa700b82bdd95d88a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f14, 0(x2) # load 0x80400000 from memory into f14
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f29, 0(x2) # load 0x813d9ab0 from memory into f29
li x3, 0x55e2186b760e93d7 # load x3 with value 0x55e2186b760e93d7
sw x3, 0(x2) # store 0x55e2186b760e93d7 in memory
flw f4, 0(x2) # load 0x55e2186b760e93d7 from memory into f4
fmsub.s f5, f14, f29, f4, dyn # perform operation
fmsub.s f5, f14, f29, f4, rdn # perform operation
fmsub.s f5, f14, f29, f4, rmm # perform operation
fmsub.s f5, f14, f29, f4, rne # perform operation
fmsub.s f5, f14, f29, f4, rtz # perform operation
fmsub.s f5, f14, f29, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f5, f14, f29, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f5, f14, f29, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f5, f14, f29, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f5, f14, f29, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f5, f14, f29, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x0)
li x12, 0x6999be7e92705a0f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f27, 0(x2) # load 0x00000001 from memory into f27
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f30, 0(x2) # load 0x00000000 from memory into f30
li x3, 0xeb8764a78e27907c # load x3 with value 0xeb8764a78e27907c
sw x3, 0(x2) # store 0xeb8764a78e27907c in memory
flw f25, 0(x2) # load 0xeb8764a78e27907c from memory into f25
fmsub.s f12, f27, f30, f25, dyn # perform operation
fmsub.s f12, f27, f30, f25, rdn # perform operation
fmsub.s f12, f27, f30, f25, rmm # perform operation
fmsub.s f12, f27, f30, f25, rne # perform operation
fmsub.s f12, f27, f30, f25, rtz # perform operation
fmsub.s f12, f27, f30, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f12, f27, f30, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f12, f27, f30, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f12, f27, f30, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f12, f27, f30, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f12, f27, f30, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x80000000)
li x26, 0x7048a94ed320c591 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f17, 0(x2) # load 0x00000001 from memory into f17
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f15, 0(x2) # load 0x80000000 from memory into f15
li x3, 0x15e84e369c89e99a # load x3 with value 0x15e84e369c89e99a
sw x3, 0(x2) # store 0x15e84e369c89e99a in memory
flw f10, 0(x2) # load 0x15e84e369c89e99a from memory into f10
fmsub.s f26, f17, f15, f10, dyn # perform operation
fmsub.s f26, f17, f15, f10, rdn # perform operation
fmsub.s f26, f17, f15, f10, rmm # perform operation
fmsub.s f26, f17, f15, f10, rne # perform operation
fmsub.s f26, f17, f15, f10, rtz # perform operation
fmsub.s f26, f17, f15, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f26, f17, f15, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f26, f17, f15, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f26, f17, f15, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f26, f17, f15, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f26, f17, f15, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x3f800000)
li x12, 0x1cb4a065d849c648 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f15, 0(x2) # load 0x00000001 from memory into f15
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f24, 0(x2) # load 0x3f800000 from memory into f24
li x3, 0xb9658e9ed68c095f # load x3 with value 0xb9658e9ed68c095f
sw x3, 0(x2) # store 0xb9658e9ed68c095f in memory
flw f21, 0(x2) # load 0xb9658e9ed68c095f from memory into f21
fmsub.s f12, f15, f24, f21, dyn # perform operation
fmsub.s f12, f15, f24, f21, rdn # perform operation
fmsub.s f12, f15, f24, f21, rmm # perform operation
fmsub.s f12, f15, f24, f21, rne # perform operation
fmsub.s f12, f15, f24, f21, rtz # perform operation
fmsub.s f12, f15, f24, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f12, f15, f24, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f12, f15, f24, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f12, f15, f24, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f12, f15, f24, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f12, f15, f24, f21 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0xbf800000)
li x1, 0x036389ac6c5a0ad6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f25, 0(x2) # load 0x00000001 from memory into f25
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f27, 0(x2) # load 0xbf800000 from memory into f27
li x3, 0x5d56d76d64a5187f # load x3 with value 0x5d56d76d64a5187f
sw x3, 0(x2) # store 0x5d56d76d64a5187f in memory
flw f19, 0(x2) # load 0x5d56d76d64a5187f from memory into f19
fmsub.s f1, f25, f27, f19, dyn # perform operation
fmsub.s f1, f25, f27, f19, rdn # perform operation
fmsub.s f1, f25, f27, f19, rmm # perform operation
fmsub.s f1, f25, f27, f19, rne # perform operation
fmsub.s f1, f25, f27, f19, rtz # perform operation
fmsub.s f1, f25, f27, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f1, f25, f27, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f1, f25, f27, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f1, f25, f27, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f1, f25, f27, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f1, f25, f27, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x3fc00000)
li x18, 0x9d9472dd72bef735 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f14, 0(x2) # load 0x00000001 from memory into f14
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f15, 0(x2) # load 0x3fc00000 from memory into f15
li x3, 0x5fdda25ec2877ed7 # load x3 with value 0x5fdda25ec2877ed7
sw x3, 0(x2) # store 0x5fdda25ec2877ed7 in memory
flw f31, 0(x2) # load 0x5fdda25ec2877ed7 from memory into f31
fmsub.s f18, f14, f15, f31, dyn # perform operation
fmsub.s f18, f14, f15, f31, rdn # perform operation
fmsub.s f18, f14, f15, f31, rmm # perform operation
fmsub.s f18, f14, f15, f31, rne # perform operation
fmsub.s f18, f14, f15, f31, rtz # perform operation
fmsub.s f18, f14, f15, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f18, f14, f15, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f18, f14, f15, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f18, f14, f15, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f18, f14, f15, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f18, f14, f15, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0xbfc00000)
li x24, 0xc176748a3b341eeb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f30, 0(x2) # load 0x00000001 from memory into f30
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f15, 0(x2) # load 0xbfc00000 from memory into f15
li x3, 0xde7617bd15f6157a # load x3 with value 0xde7617bd15f6157a
sw x3, 0(x2) # store 0xde7617bd15f6157a in memory
flw f9, 0(x2) # load 0xde7617bd15f6157a from memory into f9
fmsub.s f24, f30, f15, f9, dyn # perform operation
fmsub.s f24, f30, f15, f9, rdn # perform operation
fmsub.s f24, f30, f15, f9, rmm # perform operation
fmsub.s f24, f30, f15, f9, rne # perform operation
fmsub.s f24, f30, f15, f9, rtz # perform operation
fmsub.s f24, f30, f15, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f24, f30, f15, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f24, f30, f15, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f24, f30, f15, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f24, f30, f15, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f24, f30, f15, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x40000000)
li x28, 0x1a78dca6eaefb082 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f5, 0(x2) # load 0x00000001 from memory into f5
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f31, 0(x2) # load 0x40000000 from memory into f31
li x3, 0x494ada85bfaaf4bf # load x3 with value 0x494ada85bfaaf4bf
sw x3, 0(x2) # store 0x494ada85bfaaf4bf in memory
flw f2, 0(x2) # load 0x494ada85bfaaf4bf from memory into f2
fmsub.s f28, f5, f31, f2, dyn # perform operation
fmsub.s f28, f5, f31, f2, rdn # perform operation
fmsub.s f28, f5, f31, f2, rmm # perform operation
fmsub.s f28, f5, f31, f2, rne # perform operation
fmsub.s f28, f5, f31, f2, rtz # perform operation
fmsub.s f28, f5, f31, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f28, f5, f31, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f28, f5, f31, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f28, f5, f31, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f28, f5, f31, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f28, f5, f31, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0xc0000000)
li x3, 0xc5825c5230cf154a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f6, 0(x2) # load 0x00000001 from memory into f6
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f31, 0(x2) # load 0xc0000000 from memory into f31
li x3, 0x35faeb76388647a6 # load x3 with value 0x35faeb76388647a6
sw x3, 0(x2) # store 0x35faeb76388647a6 in memory
flw f25, 0(x2) # load 0x35faeb76388647a6 from memory into f25
fmsub.s f3, f6, f31, f25, dyn # perform operation
fmsub.s f3, f6, f31, f25, rdn # perform operation
fmsub.s f3, f6, f31, f25, rmm # perform operation
fmsub.s f3, f6, f31, f25, rne # perform operation
fmsub.s f3, f6, f31, f25, rtz # perform operation
fmsub.s f3, f6, f31, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f3, f6, f31, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f3, f6, f31, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f3, f6, f31, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f3, f6, f31, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f3, f6, f31, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x800000)
li x11, 0x2b36cea112b3bdc1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f12, 0(x2) # load 0x00000001 from memory into f12
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f27, 0(x2) # load 0x00800000 from memory into f27
li x3, 0xd62a6f5cb591c40e # load x3 with value 0xd62a6f5cb591c40e
sw x3, 0(x2) # store 0xd62a6f5cb591c40e in memory
flw f10, 0(x2) # load 0xd62a6f5cb591c40e from memory into f10
fmsub.s f11, f12, f27, f10, dyn # perform operation
fmsub.s f11, f12, f27, f10, rdn # perform operation
fmsub.s f11, f12, f27, f10, rmm # perform operation
fmsub.s f11, f12, f27, f10, rne # perform operation
fmsub.s f11, f12, f27, f10, rtz # perform operation
fmsub.s f11, f12, f27, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f11, f12, f27, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f11, f12, f27, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f11, f12, f27, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f11, f12, f27, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f11, f12, f27, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x80800000)
li x28, 0x24436b2a47edf214 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f15, 0(x2) # load 0x00000001 from memory into f15
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f30, 0(x2) # load 0x80800000 from memory into f30
li x3, 0x58849089a1659325 # load x3 with value 0x58849089a1659325
sw x3, 0(x2) # store 0x58849089a1659325 in memory
flw f11, 0(x2) # load 0x58849089a1659325 from memory into f11
fmsub.s f28, f15, f30, f11, dyn # perform operation
fmsub.s f28, f15, f30, f11, rdn # perform operation
fmsub.s f28, f15, f30, f11, rmm # perform operation
fmsub.s f28, f15, f30, f11, rne # perform operation
fmsub.s f28, f15, f30, f11, rtz # perform operation
fmsub.s f28, f15, f30, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f28, f15, f30, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f28, f15, f30, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f28, f15, f30, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f28, f15, f30, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f28, f15, f30, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x7f7fffff)
li x11, 0x81487df02dcee898 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f13, 0(x2) # load 0x00000001 from memory into f13
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f23, 0(x2) # load 0x7f7fffff from memory into f23
li x3, 0x751d8d699cbe9a1c # load x3 with value 0x751d8d699cbe9a1c
sw x3, 0(x2) # store 0x751d8d699cbe9a1c in memory
flw f27, 0(x2) # load 0x751d8d699cbe9a1c from memory into f27
fmsub.s f11, f13, f23, f27, dyn # perform operation
fmsub.s f11, f13, f23, f27, rdn # perform operation
fmsub.s f11, f13, f23, f27, rmm # perform operation
fmsub.s f11, f13, f23, f27, rne # perform operation
fmsub.s f11, f13, f23, f27, rtz # perform operation
fmsub.s f11, f13, f23, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f11, f13, f23, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f11, f13, f23, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f11, f13, f23, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f11, f13, f23, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f11, f13, f23, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0xff7fffff)
li x14, 0x68dacd752c2bdf9a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f9, 0(x2) # load 0x00000001 from memory into f9
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f8, 0(x2) # load 0xff7fffff from memory into f8
li x3, 0x57bd217543e10355 # load x3 with value 0x57bd217543e10355
sw x3, 0(x2) # store 0x57bd217543e10355 in memory
flw f30, 0(x2) # load 0x57bd217543e10355 from memory into f30
fmsub.s f14, f9, f8, f30, dyn # perform operation
fmsub.s f14, f9, f8, f30, rdn # perform operation
fmsub.s f14, f9, f8, f30, rmm # perform operation
fmsub.s f14, f9, f8, f30, rne # perform operation
fmsub.s f14, f9, f8, f30, rtz # perform operation
fmsub.s f14, f9, f8, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f14, f9, f8, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f14, f9, f8, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f14, f9, f8, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f14, f9, f8, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f14, f9, f8, f30 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x7fffff)
li x12, 0xdaa2a8ad0de7b08d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f29, 0(x2) # load 0x00000001 from memory into f29
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f28, 0(x2) # load 0x007fffff from memory into f28
li x3, 0x5d032fa82f070765 # load x3 with value 0x5d032fa82f070765
sw x3, 0(x2) # store 0x5d032fa82f070765 in memory
flw f10, 0(x2) # load 0x5d032fa82f070765 from memory into f10
fmsub.s f12, f29, f28, f10, dyn # perform operation
fmsub.s f12, f29, f28, f10, rdn # perform operation
fmsub.s f12, f29, f28, f10, rmm # perform operation
fmsub.s f12, f29, f28, f10, rne # perform operation
fmsub.s f12, f29, f28, f10, rtz # perform operation
fmsub.s f12, f29, f28, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f12, f29, f28, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f12, f29, f28, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f12, f29, f28, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f12, f29, f28, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f12, f29, f28, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x807fffff)
li x19, 0x9af66d881fbd5b00 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f10, 0(x2) # load 0x00000001 from memory into f10
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f18, 0(x2) # load 0x807fffff from memory into f18
li x3, 0x7dabe67a97764eaa # load x3 with value 0x7dabe67a97764eaa
sw x3, 0(x2) # store 0x7dabe67a97764eaa in memory
flw f21, 0(x2) # load 0x7dabe67a97764eaa from memory into f21
fmsub.s f19, f10, f18, f21, dyn # perform operation
fmsub.s f19, f10, f18, f21, rdn # perform operation
fmsub.s f19, f10, f18, f21, rmm # perform operation
fmsub.s f19, f10, f18, f21, rne # perform operation
fmsub.s f19, f10, f18, f21, rtz # perform operation
fmsub.s f19, f10, f18, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f19, f10, f18, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f19, f10, f18, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f19, f10, f18, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f19, f10, f18, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f19, f10, f18, f21 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x400000)
li x18, 0x97ad0fa5e00c1166 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f21, 0(x2) # load 0x00000001 from memory into f21
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f4, 0(x2) # load 0x00400000 from memory into f4
li x3, 0xa06b26a3abe66f0f # load x3 with value 0xa06b26a3abe66f0f
sw x3, 0(x2) # store 0xa06b26a3abe66f0f in memory
flw f20, 0(x2) # load 0xa06b26a3abe66f0f from memory into f20
fmsub.s f18, f21, f4, f20, dyn # perform operation
fmsub.s f18, f21, f4, f20, rdn # perform operation
fmsub.s f18, f21, f4, f20, rmm # perform operation
fmsub.s f18, f21, f4, f20, rne # perform operation
fmsub.s f18, f21, f4, f20, rtz # perform operation
fmsub.s f18, f21, f4, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f18, f21, f4, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f18, f21, f4, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f18, f21, f4, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f18, f21, f4, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f18, f21, f4, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x80400000)
li x25, 0xb81b3a637bf01fb1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f19, 0(x2) # load 0x00000001 from memory into f19
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f6, 0(x2) # load 0x80400000 from memory into f6
li x3, 0x8811aaeea317933e # load x3 with value 0x8811aaeea317933e
sw x3, 0(x2) # store 0x8811aaeea317933e in memory
flw f15, 0(x2) # load 0x8811aaeea317933e from memory into f15
fmsub.s f25, f19, f6, f15, dyn # perform operation
fmsub.s f25, f19, f6, f15, rdn # perform operation
fmsub.s f25, f19, f6, f15, rmm # perform operation
fmsub.s f25, f19, f6, f15, rne # perform operation
fmsub.s f25, f19, f6, f15, rtz # perform operation
fmsub.s f25, f19, f6, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f25, f19, f6, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f25, f19, f6, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f25, f19, f6, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f25, f19, f6, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f25, f19, f6, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x1)
li x5, 0xaf1e63ef2366b922 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f29, 0(x2) # load 0x00000001 from memory into f29
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f14, 0(x2) # load 0x00000001 from memory into f14
li x3, 0xdeaa80e73c6ec102 # load x3 with value 0xdeaa80e73c6ec102
sw x3, 0(x2) # store 0xdeaa80e73c6ec102 in memory
flw f26, 0(x2) # load 0xdeaa80e73c6ec102 from memory into f26
fmsub.s f5, f29, f14, f26, dyn # perform operation
fmsub.s f5, f29, f14, f26, rdn # perform operation
fmsub.s f5, f29, f14, f26, rmm # perform operation
fmsub.s f5, f29, f14, f26, rne # perform operation
fmsub.s f5, f29, f14, f26, rtz # perform operation
fmsub.s f5, f29, f14, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f5, f29, f14, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f5, f29, f14, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f5, f29, f14, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f5, f29, f14, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f5, f29, f14, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x80000001)
li x10, 0x86c27d52e2dfe252 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f26, 0(x2) # load 0x00000001 from memory into f26
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f24, 0(x2) # load 0x80000001 from memory into f24
li x3, 0xc8b682b40f3a9414 # load x3 with value 0xc8b682b40f3a9414
sw x3, 0(x2) # store 0xc8b682b40f3a9414 in memory
flw f6, 0(x2) # load 0xc8b682b40f3a9414 from memory into f6
fmsub.s f10, f26, f24, f6, dyn # perform operation
fmsub.s f10, f26, f24, f6, rdn # perform operation
fmsub.s f10, f26, f24, f6, rmm # perform operation
fmsub.s f10, f26, f24, f6, rne # perform operation
fmsub.s f10, f26, f24, f6, rtz # perform operation
fmsub.s f10, f26, f24, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f10, f26, f24, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f10, f26, f24, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f10, f26, f24, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f10, f26, f24, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f10, f26, f24, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x7f800000)
li x3, 0x1bb99946ec192f8f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f7, 0(x2) # load 0x00000001 from memory into f7
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f24, 0(x2) # load 0x7f800000 from memory into f24
li x3, 0x6df89394f539d660 # load x3 with value 0x6df89394f539d660
sw x3, 0(x2) # store 0x6df89394f539d660 in memory
flw f19, 0(x2) # load 0x6df89394f539d660 from memory into f19
fmsub.s f3, f7, f24, f19, dyn # perform operation
fmsub.s f3, f7, f24, f19, rdn # perform operation
fmsub.s f3, f7, f24, f19, rmm # perform operation
fmsub.s f3, f7, f24, f19, rne # perform operation
fmsub.s f3, f7, f24, f19, rtz # perform operation
fmsub.s f3, f7, f24, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f3, f7, f24, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f3, f7, f24, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f3, f7, f24, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f3, f7, f24, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f3, f7, f24, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0xff800000)
li x27, 0x22dce3eb6ae06636 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f4, 0(x2) # load 0x00000001 from memory into f4
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f30, 0(x2) # load 0xff800000 from memory into f30
li x3, 0xbe46d4f41cc6f43d # load x3 with value 0xbe46d4f41cc6f43d
sw x3, 0(x2) # store 0xbe46d4f41cc6f43d in memory
flw f23, 0(x2) # load 0xbe46d4f41cc6f43d from memory into f23
fmsub.s f27, f4, f30, f23, dyn # perform operation
fmsub.s f27, f4, f30, f23, rdn # perform operation
fmsub.s f27, f4, f30, f23, rmm # perform operation
fmsub.s f27, f4, f30, f23, rne # perform operation
fmsub.s f27, f4, f30, f23, rtz # perform operation
fmsub.s f27, f4, f30, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f27, f4, f30, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f27, f4, f30, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f27, f4, f30, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f27, f4, f30, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f27, f4, f30, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x7fc00000)
li x18, 0xfeda158a23199428 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f22, 0(x2) # load 0x00000001 from memory into f22
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f9, 0(x2) # load 0x7fc00000 from memory into f9
li x3, 0xb3293331170aba19 # load x3 with value 0xb3293331170aba19
sw x3, 0(x2) # store 0xb3293331170aba19 in memory
flw f6, 0(x2) # load 0xb3293331170aba19 from memory into f6
fmsub.s f18, f22, f9, f6, dyn # perform operation
fmsub.s f18, f22, f9, f6, rdn # perform operation
fmsub.s f18, f22, f9, f6, rmm # perform operation
fmsub.s f18, f22, f9, f6, rne # perform operation
fmsub.s f18, f22, f9, f6, rtz # perform operation
fmsub.s f18, f22, f9, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f18, f22, f9, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f18, f22, f9, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f18, f22, f9, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f18, f22, f9, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f18, f22, f9, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x7fffffff)
li x28, 0x0ff7b244e44b47ee # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f8, 0(x2) # load 0x00000001 from memory into f8
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f10, 0(x2) # load 0x7fffffff from memory into f10
li x3, 0x948776204d6aad2c # load x3 with value 0x948776204d6aad2c
sw x3, 0(x2) # store 0x948776204d6aad2c in memory
flw f13, 0(x2) # load 0x948776204d6aad2c from memory into f13
fmsub.s f28, f8, f10, f13, dyn # perform operation
fmsub.s f28, f8, f10, f13, rdn # perform operation
fmsub.s f28, f8, f10, f13, rmm # perform operation
fmsub.s f28, f8, f10, f13, rne # perform operation
fmsub.s f28, f8, f10, f13, rtz # perform operation
fmsub.s f28, f8, f10, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f28, f8, f10, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f28, f8, f10, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f28, f8, f10, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f28, f8, f10, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f28, f8, f10, f13 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x7f800001)
li x29, 0xac61f17018bf1e6a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f27, 0(x2) # load 0x00000001 from memory into f27
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f20, 0(x2) # load 0x7f800001 from memory into f20
li x3, 0x70a9b37ebab1ec2c # load x3 with value 0x70a9b37ebab1ec2c
sw x3, 0(x2) # store 0x70a9b37ebab1ec2c in memory
flw f31, 0(x2) # load 0x70a9b37ebab1ec2c from memory into f31
fmsub.s f29, f27, f20, f31, dyn # perform operation
fmsub.s f29, f27, f20, f31, rdn # perform operation
fmsub.s f29, f27, f20, f31, rmm # perform operation
fmsub.s f29, f27, f20, f31, rne # perform operation
fmsub.s f29, f27, f20, f31, rtz # perform operation
fmsub.s f29, f27, f20, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f29, f27, f20, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f29, f27, f20, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f29, f27, f20, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f29, f27, f20, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f29, f27, f20, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x7fbfffff)
li x25, 0x81fe5978d14a6bf8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f14, 0(x2) # load 0x00000001 from memory into f14
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f6, 0(x2) # load 0x7fbfffff from memory into f6
li x3, 0xb6bac3fb170c9786 # load x3 with value 0xb6bac3fb170c9786
sw x3, 0(x2) # store 0xb6bac3fb170c9786 in memory
flw f4, 0(x2) # load 0xb6bac3fb170c9786 from memory into f4
fmsub.s f25, f14, f6, f4, dyn # perform operation
fmsub.s f25, f14, f6, f4, rdn # perform operation
fmsub.s f25, f14, f6, f4, rmm # perform operation
fmsub.s f25, f14, f6, f4, rne # perform operation
fmsub.s f25, f14, f6, f4, rtz # perform operation
fmsub.s f25, f14, f6, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f25, f14, f6, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f25, f14, f6, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f25, f14, f6, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f25, f14, f6, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f25, f14, f6, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x7ef8654f)
li x24, 0x3d74b87fb6e7c90c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f22, 0(x2) # load 0x00000001 from memory into f22
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f12, 0(x2) # load 0x7ef8654f from memory into f12
li x3, 0xdf180b12ccce0e27 # load x3 with value 0xdf180b12ccce0e27
sw x3, 0(x2) # store 0xdf180b12ccce0e27 in memory
flw f2, 0(x2) # load 0xdf180b12ccce0e27 from memory into f2
fmsub.s f24, f22, f12, f2, dyn # perform operation
fmsub.s f24, f22, f12, f2, rdn # perform operation
fmsub.s f24, f22, f12, f2, rmm # perform operation
fmsub.s f24, f22, f12, f2, rne # perform operation
fmsub.s f24, f22, f12, f2, rtz # perform operation
fmsub.s f24, f22, f12, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f24, f22, f12, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f24, f22, f12, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f24, f22, f12, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f24, f22, f12, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f24, f22, f12, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x813d9ab0)
li x21, 0xcb056b5f116feb60 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f27, 0(x2) # load 0x00000001 from memory into f27
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f25, 0(x2) # load 0x813d9ab0 from memory into f25
li x3, 0xf80fd6cda6923f90 # load x3 with value 0xf80fd6cda6923f90
sw x3, 0(x2) # store 0xf80fd6cda6923f90 in memory
flw f29, 0(x2) # load 0xf80fd6cda6923f90 from memory into f29
fmsub.s f21, f27, f25, f29, dyn # perform operation
fmsub.s f21, f27, f25, f29, rdn # perform operation
fmsub.s f21, f27, f25, f29, rmm # perform operation
fmsub.s f21, f27, f25, f29, rne # perform operation
fmsub.s f21, f27, f25, f29, rtz # perform operation
fmsub.s f21, f27, f25, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f21, f27, f25, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f21, f27, f25, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f21, f27, f25, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f21, f27, f25, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f21, f27, f25, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0x0)
li x3, 0x308c7b9bc789d089 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f14, 0(x2) # load 0x80000001 from memory into f14
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f26, 0(x2) # load 0x00000000 from memory into f26
li x3, 0xe3814ce36d49cab6 # load x3 with value 0xe3814ce36d49cab6
sw x3, 0(x2) # store 0xe3814ce36d49cab6 in memory
flw f9, 0(x2) # load 0xe3814ce36d49cab6 from memory into f9
fmsub.s f3, f14, f26, f9, dyn # perform operation
fmsub.s f3, f14, f26, f9, rdn # perform operation
fmsub.s f3, f14, f26, f9, rmm # perform operation
fmsub.s f3, f14, f26, f9, rne # perform operation
fmsub.s f3, f14, f26, f9, rtz # perform operation
fmsub.s f3, f14, f26, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f3, f14, f26, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f3, f14, f26, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f3, f14, f26, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f3, f14, f26, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f3, f14, f26, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0x80000000)
li x30, 0x49af120004b8ba9f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f29, 0(x2) # load 0x80000001 from memory into f29
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f16, 0(x2) # load 0x80000000 from memory into f16
li x3, 0x69c883bcf51c9eae # load x3 with value 0x69c883bcf51c9eae
sw x3, 0(x2) # store 0x69c883bcf51c9eae in memory
flw f7, 0(x2) # load 0x69c883bcf51c9eae from memory into f7
fmsub.s f30, f29, f16, f7, dyn # perform operation
fmsub.s f30, f29, f16, f7, rdn # perform operation
fmsub.s f30, f29, f16, f7, rmm # perform operation
fmsub.s f30, f29, f16, f7, rne # perform operation
fmsub.s f30, f29, f16, f7, rtz # perform operation
fmsub.s f30, f29, f16, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f30, f29, f16, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f30, f29, f16, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f30, f29, f16, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f30, f29, f16, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f30, f29, f16, f7 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0x3f800000)
li x14, 0x99823052c7e02323 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f1, 0(x2) # load 0x80000001 from memory into f1
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f16, 0(x2) # load 0x3f800000 from memory into f16
li x3, 0xc23f8cfef3841afc # load x3 with value 0xc23f8cfef3841afc
sw x3, 0(x2) # store 0xc23f8cfef3841afc in memory
flw f5, 0(x2) # load 0xc23f8cfef3841afc from memory into f5
fmsub.s f14, f1, f16, f5, dyn # perform operation
fmsub.s f14, f1, f16, f5, rdn # perform operation
fmsub.s f14, f1, f16, f5, rmm # perform operation
fmsub.s f14, f1, f16, f5, rne # perform operation
fmsub.s f14, f1, f16, f5, rtz # perform operation
fmsub.s f14, f1, f16, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f14, f1, f16, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f14, f1, f16, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f14, f1, f16, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f14, f1, f16, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f14, f1, f16, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0xbf800000)
li x29, 0xc67803873f76eed2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f26, 0(x2) # load 0x80000001 from memory into f26
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f4, 0(x2) # load 0xbf800000 from memory into f4
li x3, 0xa287cffe095c9cc # load x3 with value 0xa287cffe095c9cc
sw x3, 0(x2) # store 0xa287cffe095c9cc in memory
flw f12, 0(x2) # load 0xa287cffe095c9cc from memory into f12
fmsub.s f29, f26, f4, f12, dyn # perform operation
fmsub.s f29, f26, f4, f12, rdn # perform operation
fmsub.s f29, f26, f4, f12, rmm # perform operation
fmsub.s f29, f26, f4, f12, rne # perform operation
fmsub.s f29, f26, f4, f12, rtz # perform operation
fmsub.s f29, f26, f4, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f29, f26, f4, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f29, f26, f4, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f29, f26, f4, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f29, f26, f4, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f29, f26, f4, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0x3fc00000)
li x21, 0x0b6a0c15ec363f4a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f10, 0(x2) # load 0x80000001 from memory into f10
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f12, 0(x2) # load 0x3fc00000 from memory into f12
li x3, 0xe8d7f475dd99d10f # load x3 with value 0xe8d7f475dd99d10f
sw x3, 0(x2) # store 0xe8d7f475dd99d10f in memory
flw f18, 0(x2) # load 0xe8d7f475dd99d10f from memory into f18
fmsub.s f21, f10, f12, f18, dyn # perform operation
fmsub.s f21, f10, f12, f18, rdn # perform operation
fmsub.s f21, f10, f12, f18, rmm # perform operation
fmsub.s f21, f10, f12, f18, rne # perform operation
fmsub.s f21, f10, f12, f18, rtz # perform operation
fmsub.s f21, f10, f12, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f21, f10, f12, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f21, f10, f12, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f21, f10, f12, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f21, f10, f12, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f21, f10, f12, f18 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0xbfc00000)
li x24, 0x931639289ea32a25 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f29, 0(x2) # load 0x80000001 from memory into f29
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f8, 0(x2) # load 0xbfc00000 from memory into f8
li x3, 0x5e47a81751697264 # load x3 with value 0x5e47a81751697264
sw x3, 0(x2) # store 0x5e47a81751697264 in memory
flw f27, 0(x2) # load 0x5e47a81751697264 from memory into f27
fmsub.s f24, f29, f8, f27, dyn # perform operation
fmsub.s f24, f29, f8, f27, rdn # perform operation
fmsub.s f24, f29, f8, f27, rmm # perform operation
fmsub.s f24, f29, f8, f27, rne # perform operation
fmsub.s f24, f29, f8, f27, rtz # perform operation
fmsub.s f24, f29, f8, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f24, f29, f8, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f24, f29, f8, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f24, f29, f8, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f24, f29, f8, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f24, f29, f8, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0x40000000)
li x11, 0xc887595d186e4402 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f23, 0(x2) # load 0x80000001 from memory into f23
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f1, 0(x2) # load 0x40000000 from memory into f1
li x3, 0x95f94bdc9db8d166 # load x3 with value 0x95f94bdc9db8d166
sw x3, 0(x2) # store 0x95f94bdc9db8d166 in memory
flw f22, 0(x2) # load 0x95f94bdc9db8d166 from memory into f22
fmsub.s f11, f23, f1, f22, dyn # perform operation
fmsub.s f11, f23, f1, f22, rdn # perform operation
fmsub.s f11, f23, f1, f22, rmm # perform operation
fmsub.s f11, f23, f1, f22, rne # perform operation
fmsub.s f11, f23, f1, f22, rtz # perform operation
fmsub.s f11, f23, f1, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f11, f23, f1, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f11, f23, f1, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f11, f23, f1, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f11, f23, f1, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f11, f23, f1, f22 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0xc0000000)
li x5, 0x12e931b9142e3b21 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f6, 0(x2) # load 0x80000001 from memory into f6
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f15, 0(x2) # load 0xc0000000 from memory into f15
li x3, 0xc50d503694f687a5 # load x3 with value 0xc50d503694f687a5
sw x3, 0(x2) # store 0xc50d503694f687a5 in memory
flw f1, 0(x2) # load 0xc50d503694f687a5 from memory into f1
fmsub.s f5, f6, f15, f1, dyn # perform operation
fmsub.s f5, f6, f15, f1, rdn # perform operation
fmsub.s f5, f6, f15, f1, rmm # perform operation
fmsub.s f5, f6, f15, f1, rne # perform operation
fmsub.s f5, f6, f15, f1, rtz # perform operation
fmsub.s f5, f6, f15, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f5, f6, f15, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f5, f6, f15, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f5, f6, f15, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f5, f6, f15, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f5, f6, f15, f1 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0x800000)
li x11, 0xcbb4899229ae4783 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f31, 0(x2) # load 0x80000001 from memory into f31
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f22, 0(x2) # load 0x00800000 from memory into f22
li x3, 0x855496ff76c36886 # load x3 with value 0x855496ff76c36886
sw x3, 0(x2) # store 0x855496ff76c36886 in memory
flw f24, 0(x2) # load 0x855496ff76c36886 from memory into f24
fmsub.s f11, f31, f22, f24, dyn # perform operation
fmsub.s f11, f31, f22, f24, rdn # perform operation
fmsub.s f11, f31, f22, f24, rmm # perform operation
fmsub.s f11, f31, f22, f24, rne # perform operation
fmsub.s f11, f31, f22, f24, rtz # perform operation
fmsub.s f11, f31, f22, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f11, f31, f22, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f11, f31, f22, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f11, f31, f22, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f11, f31, f22, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f11, f31, f22, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0x80800000)
li x19, 0xaa1d5629c6555c71 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f2, 0(x2) # load 0x80000001 from memory into f2
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f5, 0(x2) # load 0x80800000 from memory into f5
li x3, 0x8c159bba6e4dde50 # load x3 with value 0x8c159bba6e4dde50
sw x3, 0(x2) # store 0x8c159bba6e4dde50 in memory
flw f11, 0(x2) # load 0x8c159bba6e4dde50 from memory into f11
fmsub.s f19, f2, f5, f11, dyn # perform operation
fmsub.s f19, f2, f5, f11, rdn # perform operation
fmsub.s f19, f2, f5, f11, rmm # perform operation
fmsub.s f19, f2, f5, f11, rne # perform operation
fmsub.s f19, f2, f5, f11, rtz # perform operation
fmsub.s f19, f2, f5, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f19, f2, f5, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f19, f2, f5, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f19, f2, f5, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f19, f2, f5, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f19, f2, f5, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0x7f7fffff)
li x3, 0x3c927a5c4413057a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f30, 0(x2) # load 0x80000001 from memory into f30
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f28, 0(x2) # load 0x7f7fffff from memory into f28
li x3, 0xd595f48d8b4b54af # load x3 with value 0xd595f48d8b4b54af
sw x3, 0(x2) # store 0xd595f48d8b4b54af in memory
flw f12, 0(x2) # load 0xd595f48d8b4b54af from memory into f12
fmsub.s f3, f30, f28, f12, dyn # perform operation
fmsub.s f3, f30, f28, f12, rdn # perform operation
fmsub.s f3, f30, f28, f12, rmm # perform operation
fmsub.s f3, f30, f28, f12, rne # perform operation
fmsub.s f3, f30, f28, f12, rtz # perform operation
fmsub.s f3, f30, f28, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f3, f30, f28, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f3, f30, f28, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f3, f30, f28, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f3, f30, f28, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f3, f30, f28, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0xff7fffff)
li x19, 0x7bc563685483396f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f18, 0(x2) # load 0x80000001 from memory into f18
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f16, 0(x2) # load 0xff7fffff from memory into f16
li x3, 0xe7fc38b01aa715e4 # load x3 with value 0xe7fc38b01aa715e4
sw x3, 0(x2) # store 0xe7fc38b01aa715e4 in memory
flw f29, 0(x2) # load 0xe7fc38b01aa715e4 from memory into f29
fmsub.s f19, f18, f16, f29, dyn # perform operation
fmsub.s f19, f18, f16, f29, rdn # perform operation
fmsub.s f19, f18, f16, f29, rmm # perform operation
fmsub.s f19, f18, f16, f29, rne # perform operation
fmsub.s f19, f18, f16, f29, rtz # perform operation
fmsub.s f19, f18, f16, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f19, f18, f16, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f19, f18, f16, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f19, f18, f16, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f19, f18, f16, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f19, f18, f16, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0x7fffff)
li x28, 0x5209ad13b02305b1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f19, 0(x2) # load 0x80000001 from memory into f19
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f1, 0(x2) # load 0x007fffff from memory into f1
li x3, 0x94ce7e6389c28393 # load x3 with value 0x94ce7e6389c28393
sw x3, 0(x2) # store 0x94ce7e6389c28393 in memory
flw f13, 0(x2) # load 0x94ce7e6389c28393 from memory into f13
fmsub.s f28, f19, f1, f13, dyn # perform operation
fmsub.s f28, f19, f1, f13, rdn # perform operation
fmsub.s f28, f19, f1, f13, rmm # perform operation
fmsub.s f28, f19, f1, f13, rne # perform operation
fmsub.s f28, f19, f1, f13, rtz # perform operation
fmsub.s f28, f19, f1, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f28, f19, f1, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f28, f19, f1, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f28, f19, f1, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f28, f19, f1, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f28, f19, f1, f13 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0x807fffff)
li x15, 0x8770291cf5eda2b8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f28, 0(x2) # load 0x80000001 from memory into f28
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f20, 0(x2) # load 0x807fffff from memory into f20
li x3, 0xc6195c2822cc3f79 # load x3 with value 0xc6195c2822cc3f79
sw x3, 0(x2) # store 0xc6195c2822cc3f79 in memory
flw f29, 0(x2) # load 0xc6195c2822cc3f79 from memory into f29
fmsub.s f15, f28, f20, f29, dyn # perform operation
fmsub.s f15, f28, f20, f29, rdn # perform operation
fmsub.s f15, f28, f20, f29, rmm # perform operation
fmsub.s f15, f28, f20, f29, rne # perform operation
fmsub.s f15, f28, f20, f29, rtz # perform operation
fmsub.s f15, f28, f20, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f15, f28, f20, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f15, f28, f20, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f15, f28, f20, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f15, f28, f20, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f15, f28, f20, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0x400000)
li x31, 0xb2b65628a28b66b2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f23, 0(x2) # load 0x80000001 from memory into f23
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f4, 0(x2) # load 0x00400000 from memory into f4
li x3, 0x274daa8dd9ffa91a # load x3 with value 0x274daa8dd9ffa91a
sw x3, 0(x2) # store 0x274daa8dd9ffa91a in memory
flw f1, 0(x2) # load 0x274daa8dd9ffa91a from memory into f1
fmsub.s f31, f23, f4, f1, dyn # perform operation
fmsub.s f31, f23, f4, f1, rdn # perform operation
fmsub.s f31, f23, f4, f1, rmm # perform operation
fmsub.s f31, f23, f4, f1, rne # perform operation
fmsub.s f31, f23, f4, f1, rtz # perform operation
fmsub.s f31, f23, f4, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f31, f23, f4, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f31, f23, f4, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f31, f23, f4, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f31, f23, f4, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f31, f23, f4, f1 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0x80400000)
li x16, 0x045c462fd45d1e0c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f17, 0(x2) # load 0x80000001 from memory into f17
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f26, 0(x2) # load 0x80400000 from memory into f26
li x3, 0x8b4d9bd805501369 # load x3 with value 0x8b4d9bd805501369
sw x3, 0(x2) # store 0x8b4d9bd805501369 in memory
flw f31, 0(x2) # load 0x8b4d9bd805501369 from memory into f31
fmsub.s f16, f17, f26, f31, dyn # perform operation
fmsub.s f16, f17, f26, f31, rdn # perform operation
fmsub.s f16, f17, f26, f31, rmm # perform operation
fmsub.s f16, f17, f26, f31, rne # perform operation
fmsub.s f16, f17, f26, f31, rtz # perform operation
fmsub.s f16, f17, f26, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f16, f17, f26, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f16, f17, f26, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f16, f17, f26, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f16, f17, f26, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f16, f17, f26, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0x1)
li x11, 0x786a7d7c5651bed4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f30, 0(x2) # load 0x80000001 from memory into f30
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f19, 0(x2) # load 0x00000001 from memory into f19
li x3, 0x7d79a7a9572b2fb7 # load x3 with value 0x7d79a7a9572b2fb7
sw x3, 0(x2) # store 0x7d79a7a9572b2fb7 in memory
flw f4, 0(x2) # load 0x7d79a7a9572b2fb7 from memory into f4
fmsub.s f11, f30, f19, f4, dyn # perform operation
fmsub.s f11, f30, f19, f4, rdn # perform operation
fmsub.s f11, f30, f19, f4, rmm # perform operation
fmsub.s f11, f30, f19, f4, rne # perform operation
fmsub.s f11, f30, f19, f4, rtz # perform operation
fmsub.s f11, f30, f19, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f11, f30, f19, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f11, f30, f19, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f11, f30, f19, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f11, f30, f19, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f11, f30, f19, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0x80000001)
li x1, 0xd4d77f371753e7ee # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f23, 0(x2) # load 0x80000001 from memory into f23
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f20, 0(x2) # load 0x80000001 from memory into f20
li x3, 0x62684865ae35a573 # load x3 with value 0x62684865ae35a573
sw x3, 0(x2) # store 0x62684865ae35a573 in memory
flw f7, 0(x2) # load 0x62684865ae35a573 from memory into f7
fmsub.s f1, f23, f20, f7, dyn # perform operation
fmsub.s f1, f23, f20, f7, rdn # perform operation
fmsub.s f1, f23, f20, f7, rmm # perform operation
fmsub.s f1, f23, f20, f7, rne # perform operation
fmsub.s f1, f23, f20, f7, rtz # perform operation
fmsub.s f1, f23, f20, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f1, f23, f20, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f1, f23, f20, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f1, f23, f20, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f1, f23, f20, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f1, f23, f20, f7 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0x7f800000)
li x7, 0x3511e2a3d52f02a7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f6, 0(x2) # load 0x80000001 from memory into f6
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f5, 0(x2) # load 0x7f800000 from memory into f5
li x3, 0x2a6cb8372a94e2d3 # load x3 with value 0x2a6cb8372a94e2d3
sw x3, 0(x2) # store 0x2a6cb8372a94e2d3 in memory
flw f18, 0(x2) # load 0x2a6cb8372a94e2d3 from memory into f18
fmsub.s f7, f6, f5, f18, dyn # perform operation
fmsub.s f7, f6, f5, f18, rdn # perform operation
fmsub.s f7, f6, f5, f18, rmm # perform operation
fmsub.s f7, f6, f5, f18, rne # perform operation
fmsub.s f7, f6, f5, f18, rtz # perform operation
fmsub.s f7, f6, f5, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f7, f6, f5, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f7, f6, f5, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f7, f6, f5, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f7, f6, f5, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f7, f6, f5, f18 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0xff800000)
li x23, 0xa3696825a8796631 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f4, 0(x2) # load 0x80000001 from memory into f4
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f20, 0(x2) # load 0xff800000 from memory into f20
li x3, 0xd3dac1c496280b99 # load x3 with value 0xd3dac1c496280b99
sw x3, 0(x2) # store 0xd3dac1c496280b99 in memory
flw f7, 0(x2) # load 0xd3dac1c496280b99 from memory into f7
fmsub.s f23, f4, f20, f7, dyn # perform operation
fmsub.s f23, f4, f20, f7, rdn # perform operation
fmsub.s f23, f4, f20, f7, rmm # perform operation
fmsub.s f23, f4, f20, f7, rne # perform operation
fmsub.s f23, f4, f20, f7, rtz # perform operation
fmsub.s f23, f4, f20, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f23, f4, f20, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f23, f4, f20, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f23, f4, f20, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f23, f4, f20, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f23, f4, f20, f7 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0x7fc00000)
li x6, 0x5bc143459033d5f6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f29, 0(x2) # load 0x80000001 from memory into f29
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f2, 0(x2) # load 0x7fc00000 from memory into f2
li x3, 0x9ed6ba14818855dc # load x3 with value 0x9ed6ba14818855dc
sw x3, 0(x2) # store 0x9ed6ba14818855dc in memory
flw f15, 0(x2) # load 0x9ed6ba14818855dc from memory into f15
fmsub.s f6, f29, f2, f15, dyn # perform operation
fmsub.s f6, f29, f2, f15, rdn # perform operation
fmsub.s f6, f29, f2, f15, rmm # perform operation
fmsub.s f6, f29, f2, f15, rne # perform operation
fmsub.s f6, f29, f2, f15, rtz # perform operation
fmsub.s f6, f29, f2, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f6, f29, f2, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f6, f29, f2, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f6, f29, f2, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f6, f29, f2, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f6, f29, f2, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0x7fffffff)
li x3, 0x66888cd1de714b73 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f10, 0(x2) # load 0x80000001 from memory into f10
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f24, 0(x2) # load 0x7fffffff from memory into f24
li x3, 0xcc55df54fa6600f4 # load x3 with value 0xcc55df54fa6600f4
sw x3, 0(x2) # store 0xcc55df54fa6600f4 in memory
flw f19, 0(x2) # load 0xcc55df54fa6600f4 from memory into f19
fmsub.s f3, f10, f24, f19, dyn # perform operation
fmsub.s f3, f10, f24, f19, rdn # perform operation
fmsub.s f3, f10, f24, f19, rmm # perform operation
fmsub.s f3, f10, f24, f19, rne # perform operation
fmsub.s f3, f10, f24, f19, rtz # perform operation
fmsub.s f3, f10, f24, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f3, f10, f24, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f3, f10, f24, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f3, f10, f24, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f3, f10, f24, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f3, f10, f24, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0x7f800001)
li x8, 0xfe52fab27e623603 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f29, 0(x2) # load 0x80000001 from memory into f29
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f12, 0(x2) # load 0x7f800001 from memory into f12
li x3, 0x2cac1dfaa7bd169b # load x3 with value 0x2cac1dfaa7bd169b
sw x3, 0(x2) # store 0x2cac1dfaa7bd169b in memory
flw f30, 0(x2) # load 0x2cac1dfaa7bd169b from memory into f30
fmsub.s f8, f29, f12, f30, dyn # perform operation
fmsub.s f8, f29, f12, f30, rdn # perform operation
fmsub.s f8, f29, f12, f30, rmm # perform operation
fmsub.s f8, f29, f12, f30, rne # perform operation
fmsub.s f8, f29, f12, f30, rtz # perform operation
fmsub.s f8, f29, f12, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f8, f29, f12, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f8, f29, f12, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f8, f29, f12, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f8, f29, f12, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f8, f29, f12, f30 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0x7fbfffff)
li x10, 0x175f23d29c478d25 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f18, 0(x2) # load 0x80000001 from memory into f18
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f16, 0(x2) # load 0x7fbfffff from memory into f16
li x3, 0xcc27f99143e462c3 # load x3 with value 0xcc27f99143e462c3
sw x3, 0(x2) # store 0xcc27f99143e462c3 in memory
flw f29, 0(x2) # load 0xcc27f99143e462c3 from memory into f29
fmsub.s f10, f18, f16, f29, dyn # perform operation
fmsub.s f10, f18, f16, f29, rdn # perform operation
fmsub.s f10, f18, f16, f29, rmm # perform operation
fmsub.s f10, f18, f16, f29, rne # perform operation
fmsub.s f10, f18, f16, f29, rtz # perform operation
fmsub.s f10, f18, f16, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f10, f18, f16, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f10, f18, f16, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f10, f18, f16, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f10, f18, f16, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f10, f18, f16, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0x7ef8654f)
li x26, 0x03a29f02c3b9c8da # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f4, 0(x2) # load 0x80000001 from memory into f4
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f5, 0(x2) # load 0x7ef8654f from memory into f5
li x3, 0x9bc54dfe61613ad5 # load x3 with value 0x9bc54dfe61613ad5
sw x3, 0(x2) # store 0x9bc54dfe61613ad5 in memory
flw f13, 0(x2) # load 0x9bc54dfe61613ad5 from memory into f13
fmsub.s f26, f4, f5, f13, dyn # perform operation
fmsub.s f26, f4, f5, f13, rdn # perform operation
fmsub.s f26, f4, f5, f13, rmm # perform operation
fmsub.s f26, f4, f5, f13, rne # perform operation
fmsub.s f26, f4, f5, f13, rtz # perform operation
fmsub.s f26, f4, f5, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f26, f4, f5, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f26, f4, f5, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f26, f4, f5, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f26, f4, f5, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f26, f4, f5, f13 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0x813d9ab0)
li x10, 0x744d6ffa04505107 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f19, 0(x2) # load 0x80000001 from memory into f19
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f3, 0(x2) # load 0x813d9ab0 from memory into f3
li x3, 0x14beba65aeb60808 # load x3 with value 0x14beba65aeb60808
sw x3, 0(x2) # store 0x14beba65aeb60808 in memory
flw f24, 0(x2) # load 0x14beba65aeb60808 from memory into f24
fmsub.s f10, f19, f3, f24, dyn # perform operation
fmsub.s f10, f19, f3, f24, rdn # perform operation
fmsub.s f10, f19, f3, f24, rmm # perform operation
fmsub.s f10, f19, f3, f24, rne # perform operation
fmsub.s f10, f19, f3, f24, rtz # perform operation
fmsub.s f10, f19, f3, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f10, f19, f3, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f10, f19, f3, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f10, f19, f3, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f10, f19, f3, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f10, f19, f3, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0x0)
li x25, 0x55b88720e876a682 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f26, 0(x2) # load 0x7f800000 from memory into f26
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f16, 0(x2) # load 0x00000000 from memory into f16
li x3, 0x97adb586a26ac62c # load x3 with value 0x97adb586a26ac62c
sw x3, 0(x2) # store 0x97adb586a26ac62c in memory
flw f23, 0(x2) # load 0x97adb586a26ac62c from memory into f23
fmsub.s f25, f26, f16, f23, dyn # perform operation
fmsub.s f25, f26, f16, f23, rdn # perform operation
fmsub.s f25, f26, f16, f23, rmm # perform operation
fmsub.s f25, f26, f16, f23, rne # perform operation
fmsub.s f25, f26, f16, f23, rtz # perform operation
fmsub.s f25, f26, f16, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f25, f26, f16, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f25, f26, f16, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f25, f26, f16, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f25, f26, f16, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f25, f26, f16, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0x80000000)
li x27, 0xb8b5408dc39690ec # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f31, 0(x2) # load 0x7f800000 from memory into f31
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f13, 0(x2) # load 0x80000000 from memory into f13
li x3, 0x5035ee3e5eb443a6 # load x3 with value 0x5035ee3e5eb443a6
sw x3, 0(x2) # store 0x5035ee3e5eb443a6 in memory
flw f3, 0(x2) # load 0x5035ee3e5eb443a6 from memory into f3
fmsub.s f27, f31, f13, f3, dyn # perform operation
fmsub.s f27, f31, f13, f3, rdn # perform operation
fmsub.s f27, f31, f13, f3, rmm # perform operation
fmsub.s f27, f31, f13, f3, rne # perform operation
fmsub.s f27, f31, f13, f3, rtz # perform operation
fmsub.s f27, f31, f13, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f27, f31, f13, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f27, f31, f13, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f27, f31, f13, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f27, f31, f13, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f27, f31, f13, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0x3f800000)
li x5, 0xa861874f219daf06 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f27, 0(x2) # load 0x7f800000 from memory into f27
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f9, 0(x2) # load 0x3f800000 from memory into f9
li x3, 0xd6971c3f1c5c1240 # load x3 with value 0xd6971c3f1c5c1240
sw x3, 0(x2) # store 0xd6971c3f1c5c1240 in memory
flw f18, 0(x2) # load 0xd6971c3f1c5c1240 from memory into f18
fmsub.s f5, f27, f9, f18, dyn # perform operation
fmsub.s f5, f27, f9, f18, rdn # perform operation
fmsub.s f5, f27, f9, f18, rmm # perform operation
fmsub.s f5, f27, f9, f18, rne # perform operation
fmsub.s f5, f27, f9, f18, rtz # perform operation
fmsub.s f5, f27, f9, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f5, f27, f9, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f5, f27, f9, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f5, f27, f9, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f5, f27, f9, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f5, f27, f9, f18 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0xbf800000)
li x12, 0x2ff73e172b92d49c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f8, 0(x2) # load 0x7f800000 from memory into f8
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f26, 0(x2) # load 0xbf800000 from memory into f26
li x3, 0xd21b8007b9374303 # load x3 with value 0xd21b8007b9374303
sw x3, 0(x2) # store 0xd21b8007b9374303 in memory
flw f14, 0(x2) # load 0xd21b8007b9374303 from memory into f14
fmsub.s f12, f8, f26, f14, dyn # perform operation
fmsub.s f12, f8, f26, f14, rdn # perform operation
fmsub.s f12, f8, f26, f14, rmm # perform operation
fmsub.s f12, f8, f26, f14, rne # perform operation
fmsub.s f12, f8, f26, f14, rtz # perform operation
fmsub.s f12, f8, f26, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f12, f8, f26, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f12, f8, f26, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f12, f8, f26, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f12, f8, f26, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f12, f8, f26, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0x3fc00000)
li x26, 0xac65cdbfb840a5d0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f22, 0(x2) # load 0x7f800000 from memory into f22
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f10, 0(x2) # load 0x3fc00000 from memory into f10
li x3, 0xd341df45b8b335b5 # load x3 with value 0xd341df45b8b335b5
sw x3, 0(x2) # store 0xd341df45b8b335b5 in memory
flw f9, 0(x2) # load 0xd341df45b8b335b5 from memory into f9
fmsub.s f26, f22, f10, f9, dyn # perform operation
fmsub.s f26, f22, f10, f9, rdn # perform operation
fmsub.s f26, f22, f10, f9, rmm # perform operation
fmsub.s f26, f22, f10, f9, rne # perform operation
fmsub.s f26, f22, f10, f9, rtz # perform operation
fmsub.s f26, f22, f10, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f26, f22, f10, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f26, f22, f10, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f26, f22, f10, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f26, f22, f10, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f26, f22, f10, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0xbfc00000)
li x21, 0xf119d50c494e32b3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f18, 0(x2) # load 0x7f800000 from memory into f18
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f8, 0(x2) # load 0xbfc00000 from memory into f8
li x3, 0x2b033a945cdcec33 # load x3 with value 0x2b033a945cdcec33
sw x3, 0(x2) # store 0x2b033a945cdcec33 in memory
flw f2, 0(x2) # load 0x2b033a945cdcec33 from memory into f2
fmsub.s f21, f18, f8, f2, dyn # perform operation
fmsub.s f21, f18, f8, f2, rdn # perform operation
fmsub.s f21, f18, f8, f2, rmm # perform operation
fmsub.s f21, f18, f8, f2, rne # perform operation
fmsub.s f21, f18, f8, f2, rtz # perform operation
fmsub.s f21, f18, f8, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f21, f18, f8, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f21, f18, f8, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f21, f18, f8, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f21, f18, f8, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f21, f18, f8, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0x40000000)
li x27, 0xe3cbee75f77dd1b0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f3, 0(x2) # load 0x7f800000 from memory into f3
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f26, 0(x2) # load 0x40000000 from memory into f26
li x3, 0x5c53fc6ad582cd6f # load x3 with value 0x5c53fc6ad582cd6f
sw x3, 0(x2) # store 0x5c53fc6ad582cd6f in memory
flw f25, 0(x2) # load 0x5c53fc6ad582cd6f from memory into f25
fmsub.s f27, f3, f26, f25, dyn # perform operation
fmsub.s f27, f3, f26, f25, rdn # perform operation
fmsub.s f27, f3, f26, f25, rmm # perform operation
fmsub.s f27, f3, f26, f25, rne # perform operation
fmsub.s f27, f3, f26, f25, rtz # perform operation
fmsub.s f27, f3, f26, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f27, f3, f26, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f27, f3, f26, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f27, f3, f26, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f27, f3, f26, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f27, f3, f26, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0xc0000000)
li x2, 0x8c294689772524ef # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f20, 0(x2) # load 0x7f800000 from memory into f20
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f4, 0(x2) # load 0xc0000000 from memory into f4
li x3, 0x69597c8ab530cac9 # load x3 with value 0x69597c8ab530cac9
sw x3, 0(x2) # store 0x69597c8ab530cac9 in memory
flw f23, 0(x2) # load 0x69597c8ab530cac9 from memory into f23
fmsub.s f2, f20, f4, f23, dyn # perform operation
fmsub.s f2, f20, f4, f23, rdn # perform operation
fmsub.s f2, f20, f4, f23, rmm # perform operation
fmsub.s f2, f20, f4, f23, rne # perform operation
fmsub.s f2, f20, f4, f23, rtz # perform operation
fmsub.s f2, f20, f4, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f2, f20, f4, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f2, f20, f4, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f2, f20, f4, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f2, f20, f4, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f2, f20, f4, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0x800000)
li x24, 0x69d26aa9acb40a4a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f9, 0(x2) # load 0x7f800000 from memory into f9
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f17, 0(x2) # load 0x00800000 from memory into f17
li x3, 0x63ea83f59aa7f187 # load x3 with value 0x63ea83f59aa7f187
sw x3, 0(x2) # store 0x63ea83f59aa7f187 in memory
flw f8, 0(x2) # load 0x63ea83f59aa7f187 from memory into f8
fmsub.s f24, f9, f17, f8, dyn # perform operation
fmsub.s f24, f9, f17, f8, rdn # perform operation
fmsub.s f24, f9, f17, f8, rmm # perform operation
fmsub.s f24, f9, f17, f8, rne # perform operation
fmsub.s f24, f9, f17, f8, rtz # perform operation
fmsub.s f24, f9, f17, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f24, f9, f17, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f24, f9, f17, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f24, f9, f17, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f24, f9, f17, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f24, f9, f17, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0x80800000)
li x1, 0x2ef9c845933c61d4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f10, 0(x2) # load 0x7f800000 from memory into f10
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f5, 0(x2) # load 0x80800000 from memory into f5
li x3, 0x4ecaece74677c63f # load x3 with value 0x4ecaece74677c63f
sw x3, 0(x2) # store 0x4ecaece74677c63f in memory
flw f9, 0(x2) # load 0x4ecaece74677c63f from memory into f9
fmsub.s f1, f10, f5, f9, dyn # perform operation
fmsub.s f1, f10, f5, f9, rdn # perform operation
fmsub.s f1, f10, f5, f9, rmm # perform operation
fmsub.s f1, f10, f5, f9, rne # perform operation
fmsub.s f1, f10, f5, f9, rtz # perform operation
fmsub.s f1, f10, f5, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f1, f10, f5, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f1, f10, f5, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f1, f10, f5, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f1, f10, f5, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f1, f10, f5, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0x7f7fffff)
li x19, 0x3f2e9a82c1bb0353 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f16, 0(x2) # load 0x7f800000 from memory into f16
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f15, 0(x2) # load 0x7f7fffff from memory into f15
li x3, 0xbfb82714404fe895 # load x3 with value 0xbfb82714404fe895
sw x3, 0(x2) # store 0xbfb82714404fe895 in memory
flw f21, 0(x2) # load 0xbfb82714404fe895 from memory into f21
fmsub.s f19, f16, f15, f21, dyn # perform operation
fmsub.s f19, f16, f15, f21, rdn # perform operation
fmsub.s f19, f16, f15, f21, rmm # perform operation
fmsub.s f19, f16, f15, f21, rne # perform operation
fmsub.s f19, f16, f15, f21, rtz # perform operation
fmsub.s f19, f16, f15, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f19, f16, f15, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f19, f16, f15, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f19, f16, f15, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f19, f16, f15, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f19, f16, f15, f21 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0xff7fffff)
li x31, 0xb72fa238a283e315 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f8, 0(x2) # load 0x7f800000 from memory into f8
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f30, 0(x2) # load 0xff7fffff from memory into f30
li x3, 0xfec68af4852cc5e3 # load x3 with value 0xfec68af4852cc5e3
sw x3, 0(x2) # store 0xfec68af4852cc5e3 in memory
flw f15, 0(x2) # load 0xfec68af4852cc5e3 from memory into f15
fmsub.s f31, f8, f30, f15, dyn # perform operation
fmsub.s f31, f8, f30, f15, rdn # perform operation
fmsub.s f31, f8, f30, f15, rmm # perform operation
fmsub.s f31, f8, f30, f15, rne # perform operation
fmsub.s f31, f8, f30, f15, rtz # perform operation
fmsub.s f31, f8, f30, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f31, f8, f30, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f31, f8, f30, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f31, f8, f30, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f31, f8, f30, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f31, f8, f30, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0x7fffff)
li x22, 0xd88368219143da8e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f16, 0(x2) # load 0x7f800000 from memory into f16
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f3, 0(x2) # load 0x007fffff from memory into f3
li x3, 0x68d506a615e74853 # load x3 with value 0x68d506a615e74853
sw x3, 0(x2) # store 0x68d506a615e74853 in memory
flw f31, 0(x2) # load 0x68d506a615e74853 from memory into f31
fmsub.s f22, f16, f3, f31, dyn # perform operation
fmsub.s f22, f16, f3, f31, rdn # perform operation
fmsub.s f22, f16, f3, f31, rmm # perform operation
fmsub.s f22, f16, f3, f31, rne # perform operation
fmsub.s f22, f16, f3, f31, rtz # perform operation
fmsub.s f22, f16, f3, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f22, f16, f3, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f22, f16, f3, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f22, f16, f3, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f22, f16, f3, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f22, f16, f3, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0x807fffff)
li x23, 0xd778d39000b24235 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f14, 0(x2) # load 0x7f800000 from memory into f14
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f20, 0(x2) # load 0x807fffff from memory into f20
li x3, 0x18bfd8cc3159f839 # load x3 with value 0x18bfd8cc3159f839
sw x3, 0(x2) # store 0x18bfd8cc3159f839 in memory
flw f31, 0(x2) # load 0x18bfd8cc3159f839 from memory into f31
fmsub.s f23, f14, f20, f31, dyn # perform operation
fmsub.s f23, f14, f20, f31, rdn # perform operation
fmsub.s f23, f14, f20, f31, rmm # perform operation
fmsub.s f23, f14, f20, f31, rne # perform operation
fmsub.s f23, f14, f20, f31, rtz # perform operation
fmsub.s f23, f14, f20, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f23, f14, f20, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f23, f14, f20, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f23, f14, f20, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f23, f14, f20, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f23, f14, f20, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0x400000)
li x22, 0x757f4557a2667225 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f18, 0(x2) # load 0x7f800000 from memory into f18
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f5, 0(x2) # load 0x00400000 from memory into f5
li x3, 0x3d85d46d29507e5a # load x3 with value 0x3d85d46d29507e5a
sw x3, 0(x2) # store 0x3d85d46d29507e5a in memory
flw f6, 0(x2) # load 0x3d85d46d29507e5a from memory into f6
fmsub.s f22, f18, f5, f6, dyn # perform operation
fmsub.s f22, f18, f5, f6, rdn # perform operation
fmsub.s f22, f18, f5, f6, rmm # perform operation
fmsub.s f22, f18, f5, f6, rne # perform operation
fmsub.s f22, f18, f5, f6, rtz # perform operation
fmsub.s f22, f18, f5, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f22, f18, f5, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f22, f18, f5, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f22, f18, f5, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f22, f18, f5, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f22, f18, f5, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0x80400000)
li x7, 0x80ca0a6d01ec5ea8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f13, 0(x2) # load 0x7f800000 from memory into f13
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f19, 0(x2) # load 0x80400000 from memory into f19
li x3, 0x58b8b16944a66177 # load x3 with value 0x58b8b16944a66177
sw x3, 0(x2) # store 0x58b8b16944a66177 in memory
flw f3, 0(x2) # load 0x58b8b16944a66177 from memory into f3
fmsub.s f7, f13, f19, f3, dyn # perform operation
fmsub.s f7, f13, f19, f3, rdn # perform operation
fmsub.s f7, f13, f19, f3, rmm # perform operation
fmsub.s f7, f13, f19, f3, rne # perform operation
fmsub.s f7, f13, f19, f3, rtz # perform operation
fmsub.s f7, f13, f19, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f7, f13, f19, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f7, f13, f19, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f7, f13, f19, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f7, f13, f19, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f7, f13, f19, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0x1)
li x5, 0x28485aaefd1126bb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f27, 0(x2) # load 0x7f800000 from memory into f27
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f16, 0(x2) # load 0x00000001 from memory into f16
li x3, 0xb5b5133a4cd392fa # load x3 with value 0xb5b5133a4cd392fa
sw x3, 0(x2) # store 0xb5b5133a4cd392fa in memory
flw f13, 0(x2) # load 0xb5b5133a4cd392fa from memory into f13
fmsub.s f5, f27, f16, f13, dyn # perform operation
fmsub.s f5, f27, f16, f13, rdn # perform operation
fmsub.s f5, f27, f16, f13, rmm # perform operation
fmsub.s f5, f27, f16, f13, rne # perform operation
fmsub.s f5, f27, f16, f13, rtz # perform operation
fmsub.s f5, f27, f16, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f5, f27, f16, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f5, f27, f16, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f5, f27, f16, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f5, f27, f16, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f5, f27, f16, f13 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0x80000001)
li x29, 0xb70f5eee9bc4182c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f9, 0(x2) # load 0x7f800000 from memory into f9
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f26, 0(x2) # load 0x80000001 from memory into f26
li x3, 0xb0d631e15a0e653d # load x3 with value 0xb0d631e15a0e653d
sw x3, 0(x2) # store 0xb0d631e15a0e653d in memory
flw f31, 0(x2) # load 0xb0d631e15a0e653d from memory into f31
fmsub.s f29, f9, f26, f31, dyn # perform operation
fmsub.s f29, f9, f26, f31, rdn # perform operation
fmsub.s f29, f9, f26, f31, rmm # perform operation
fmsub.s f29, f9, f26, f31, rne # perform operation
fmsub.s f29, f9, f26, f31, rtz # perform operation
fmsub.s f29, f9, f26, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f29, f9, f26, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f29, f9, f26, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f29, f9, f26, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f29, f9, f26, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f29, f9, f26, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0x7f800000)
li x19, 0xeea5bb9e019b86c9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f13, 0(x2) # load 0x7f800000 from memory into f13
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f30, 0(x2) # load 0x7f800000 from memory into f30
li x3, 0xf70a083f3baf33f0 # load x3 with value 0xf70a083f3baf33f0
sw x3, 0(x2) # store 0xf70a083f3baf33f0 in memory
flw f7, 0(x2) # load 0xf70a083f3baf33f0 from memory into f7
fmsub.s f19, f13, f30, f7, dyn # perform operation
fmsub.s f19, f13, f30, f7, rdn # perform operation
fmsub.s f19, f13, f30, f7, rmm # perform operation
fmsub.s f19, f13, f30, f7, rne # perform operation
fmsub.s f19, f13, f30, f7, rtz # perform operation
fmsub.s f19, f13, f30, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f19, f13, f30, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f19, f13, f30, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f19, f13, f30, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f19, f13, f30, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f19, f13, f30, f7 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0xff800000)
li x8, 0x59205e91a2579217 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f16, 0(x2) # load 0x7f800000 from memory into f16
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f4, 0(x2) # load 0xff800000 from memory into f4
li x3, 0x1e3792ae011cd903 # load x3 with value 0x1e3792ae011cd903
sw x3, 0(x2) # store 0x1e3792ae011cd903 in memory
flw f21, 0(x2) # load 0x1e3792ae011cd903 from memory into f21
fmsub.s f8, f16, f4, f21, dyn # perform operation
fmsub.s f8, f16, f4, f21, rdn # perform operation
fmsub.s f8, f16, f4, f21, rmm # perform operation
fmsub.s f8, f16, f4, f21, rne # perform operation
fmsub.s f8, f16, f4, f21, rtz # perform operation
fmsub.s f8, f16, f4, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f8, f16, f4, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f8, f16, f4, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f8, f16, f4, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f8, f16, f4, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f8, f16, f4, f21 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0x7fc00000)
li x24, 0xeb3bbb1a95463228 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f19, 0(x2) # load 0x7f800000 from memory into f19
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f18, 0(x2) # load 0x7fc00000 from memory into f18
li x3, 0x3be5660343454f55 # load x3 with value 0x3be5660343454f55
sw x3, 0(x2) # store 0x3be5660343454f55 in memory
flw f10, 0(x2) # load 0x3be5660343454f55 from memory into f10
fmsub.s f24, f19, f18, f10, dyn # perform operation
fmsub.s f24, f19, f18, f10, rdn # perform operation
fmsub.s f24, f19, f18, f10, rmm # perform operation
fmsub.s f24, f19, f18, f10, rne # perform operation
fmsub.s f24, f19, f18, f10, rtz # perform operation
fmsub.s f24, f19, f18, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f24, f19, f18, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f24, f19, f18, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f24, f19, f18, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f24, f19, f18, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f24, f19, f18, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0x7fffffff)
li x27, 0x522014c503d40734 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f1, 0(x2) # load 0x7f800000 from memory into f1
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f25, 0(x2) # load 0x7fffffff from memory into f25
li x3, 0xab49b95ef3cadd6c # load x3 with value 0xab49b95ef3cadd6c
sw x3, 0(x2) # store 0xab49b95ef3cadd6c in memory
flw f5, 0(x2) # load 0xab49b95ef3cadd6c from memory into f5
fmsub.s f27, f1, f25, f5, dyn # perform operation
fmsub.s f27, f1, f25, f5, rdn # perform operation
fmsub.s f27, f1, f25, f5, rmm # perform operation
fmsub.s f27, f1, f25, f5, rne # perform operation
fmsub.s f27, f1, f25, f5, rtz # perform operation
fmsub.s f27, f1, f25, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f27, f1, f25, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f27, f1, f25, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f27, f1, f25, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f27, f1, f25, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f27, f1, f25, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0x7f800001)
li x24, 0x9cbad5ec1a663c06 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f3, 0(x2) # load 0x7f800000 from memory into f3
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f21, 0(x2) # load 0x7f800001 from memory into f21
li x3, 0x9319cbbf32704f16 # load x3 with value 0x9319cbbf32704f16
sw x3, 0(x2) # store 0x9319cbbf32704f16 in memory
flw f25, 0(x2) # load 0x9319cbbf32704f16 from memory into f25
fmsub.s f24, f3, f21, f25, dyn # perform operation
fmsub.s f24, f3, f21, f25, rdn # perform operation
fmsub.s f24, f3, f21, f25, rmm # perform operation
fmsub.s f24, f3, f21, f25, rne # perform operation
fmsub.s f24, f3, f21, f25, rtz # perform operation
fmsub.s f24, f3, f21, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f24, f3, f21, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f24, f3, f21, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f24, f3, f21, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f24, f3, f21, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f24, f3, f21, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0x7fbfffff)
li x27, 0x502efea1ab33e0ad # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f3, 0(x2) # load 0x7f800000 from memory into f3
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f24, 0(x2) # load 0x7fbfffff from memory into f24
li x3, 0x230a7014a01becbc # load x3 with value 0x230a7014a01becbc
sw x3, 0(x2) # store 0x230a7014a01becbc in memory
flw f28, 0(x2) # load 0x230a7014a01becbc from memory into f28
fmsub.s f27, f3, f24, f28, dyn # perform operation
fmsub.s f27, f3, f24, f28, rdn # perform operation
fmsub.s f27, f3, f24, f28, rmm # perform operation
fmsub.s f27, f3, f24, f28, rne # perform operation
fmsub.s f27, f3, f24, f28, rtz # perform operation
fmsub.s f27, f3, f24, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f27, f3, f24, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f27, f3, f24, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f27, f3, f24, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f27, f3, f24, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f27, f3, f24, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0x7ef8654f)
li x10, 0x57518600e3366444 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f21, 0(x2) # load 0x7f800000 from memory into f21
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f25, 0(x2) # load 0x7ef8654f from memory into f25
li x3, 0x930c2156f68e98da # load x3 with value 0x930c2156f68e98da
sw x3, 0(x2) # store 0x930c2156f68e98da in memory
flw f16, 0(x2) # load 0x930c2156f68e98da from memory into f16
fmsub.s f10, f21, f25, f16, dyn # perform operation
fmsub.s f10, f21, f25, f16, rdn # perform operation
fmsub.s f10, f21, f25, f16, rmm # perform operation
fmsub.s f10, f21, f25, f16, rne # perform operation
fmsub.s f10, f21, f25, f16, rtz # perform operation
fmsub.s f10, f21, f25, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f10, f21, f25, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f10, f21, f25, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f10, f21, f25, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f10, f21, f25, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f10, f21, f25, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0x813d9ab0)
li x29, 0x1a7626d5c5587c6f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f16, 0(x2) # load 0x7f800000 from memory into f16
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f13, 0(x2) # load 0x813d9ab0 from memory into f13
li x3, 0x1d4b56ca856e9cd4 # load x3 with value 0x1d4b56ca856e9cd4
sw x3, 0(x2) # store 0x1d4b56ca856e9cd4 in memory
flw f24, 0(x2) # load 0x1d4b56ca856e9cd4 from memory into f24
fmsub.s f29, f16, f13, f24, dyn # perform operation
fmsub.s f29, f16, f13, f24, rdn # perform operation
fmsub.s f29, f16, f13, f24, rmm # perform operation
fmsub.s f29, f16, f13, f24, rne # perform operation
fmsub.s f29, f16, f13, f24, rtz # perform operation
fmsub.s f29, f16, f13, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f29, f16, f13, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f29, f16, f13, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f29, f16, f13, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f29, f16, f13, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f29, f16, f13, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0x0)
li x25, 0x43ae6f80f50a3acc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f19, 0(x2) # load 0xff800000 from memory into f19
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f22, 0(x2) # load 0x00000000 from memory into f22
li x3, 0x5714f7b1f1ecebf9 # load x3 with value 0x5714f7b1f1ecebf9
sw x3, 0(x2) # store 0x5714f7b1f1ecebf9 in memory
flw f31, 0(x2) # load 0x5714f7b1f1ecebf9 from memory into f31
fmsub.s f25, f19, f22, f31, dyn # perform operation
fmsub.s f25, f19, f22, f31, rdn # perform operation
fmsub.s f25, f19, f22, f31, rmm # perform operation
fmsub.s f25, f19, f22, f31, rne # perform operation
fmsub.s f25, f19, f22, f31, rtz # perform operation
fmsub.s f25, f19, f22, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f25, f19, f22, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f25, f19, f22, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f25, f19, f22, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f25, f19, f22, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f25, f19, f22, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0x80000000)
li x26, 0xb799a42e0b71f949 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f1, 0(x2) # load 0xff800000 from memory into f1
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f11, 0(x2) # load 0x80000000 from memory into f11
li x3, 0x4b4941177d5787d1 # load x3 with value 0x4b4941177d5787d1
sw x3, 0(x2) # store 0x4b4941177d5787d1 in memory
flw f28, 0(x2) # load 0x4b4941177d5787d1 from memory into f28
fmsub.s f26, f1, f11, f28, dyn # perform operation
fmsub.s f26, f1, f11, f28, rdn # perform operation
fmsub.s f26, f1, f11, f28, rmm # perform operation
fmsub.s f26, f1, f11, f28, rne # perform operation
fmsub.s f26, f1, f11, f28, rtz # perform operation
fmsub.s f26, f1, f11, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f26, f1, f11, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f26, f1, f11, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f26, f1, f11, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f26, f1, f11, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f26, f1, f11, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0x3f800000)
li x2, 0x85487edcc410649a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f28, 0(x2) # load 0xff800000 from memory into f28
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f4, 0(x2) # load 0x3f800000 from memory into f4
li x3, 0xa54168c176dcd221 # load x3 with value 0xa54168c176dcd221
sw x3, 0(x2) # store 0xa54168c176dcd221 in memory
flw f15, 0(x2) # load 0xa54168c176dcd221 from memory into f15
fmsub.s f2, f28, f4, f15, dyn # perform operation
fmsub.s f2, f28, f4, f15, rdn # perform operation
fmsub.s f2, f28, f4, f15, rmm # perform operation
fmsub.s f2, f28, f4, f15, rne # perform operation
fmsub.s f2, f28, f4, f15, rtz # perform operation
fmsub.s f2, f28, f4, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f2, f28, f4, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f2, f28, f4, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f2, f28, f4, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f2, f28, f4, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f2, f28, f4, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0xbf800000)
li x13, 0x2793c44b0c0000ce # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f20, 0(x2) # load 0xff800000 from memory into f20
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f5, 0(x2) # load 0xbf800000 from memory into f5
li x3, 0x4a176cda6e40a548 # load x3 with value 0x4a176cda6e40a548
sw x3, 0(x2) # store 0x4a176cda6e40a548 in memory
flw f12, 0(x2) # load 0x4a176cda6e40a548 from memory into f12
fmsub.s f13, f20, f5, f12, dyn # perform operation
fmsub.s f13, f20, f5, f12, rdn # perform operation
fmsub.s f13, f20, f5, f12, rmm # perform operation
fmsub.s f13, f20, f5, f12, rne # perform operation
fmsub.s f13, f20, f5, f12, rtz # perform operation
fmsub.s f13, f20, f5, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f13, f20, f5, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f13, f20, f5, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f13, f20, f5, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f13, f20, f5, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f13, f20, f5, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0x3fc00000)
li x14, 0x01cafb118f01da33 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f20, 0(x2) # load 0xff800000 from memory into f20
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f2, 0(x2) # load 0x3fc00000 from memory into f2
li x3, 0x20ed0cef92cacabd # load x3 with value 0x20ed0cef92cacabd
sw x3, 0(x2) # store 0x20ed0cef92cacabd in memory
flw f12, 0(x2) # load 0x20ed0cef92cacabd from memory into f12
fmsub.s f14, f20, f2, f12, dyn # perform operation
fmsub.s f14, f20, f2, f12, rdn # perform operation
fmsub.s f14, f20, f2, f12, rmm # perform operation
fmsub.s f14, f20, f2, f12, rne # perform operation
fmsub.s f14, f20, f2, f12, rtz # perform operation
fmsub.s f14, f20, f2, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f14, f20, f2, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f14, f20, f2, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f14, f20, f2, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f14, f20, f2, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f14, f20, f2, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0xbfc00000)
li x5, 0x63d5759f97803fbd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f31, 0(x2) # load 0xff800000 from memory into f31
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f25, 0(x2) # load 0xbfc00000 from memory into f25
li x3, 0xb1ea324322e117b3 # load x3 with value 0xb1ea324322e117b3
sw x3, 0(x2) # store 0xb1ea324322e117b3 in memory
flw f26, 0(x2) # load 0xb1ea324322e117b3 from memory into f26
fmsub.s f5, f31, f25, f26, dyn # perform operation
fmsub.s f5, f31, f25, f26, rdn # perform operation
fmsub.s f5, f31, f25, f26, rmm # perform operation
fmsub.s f5, f31, f25, f26, rne # perform operation
fmsub.s f5, f31, f25, f26, rtz # perform operation
fmsub.s f5, f31, f25, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f5, f31, f25, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f5, f31, f25, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f5, f31, f25, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f5, f31, f25, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f5, f31, f25, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0x40000000)
li x25, 0x535d36e15c3cbe89 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f15, 0(x2) # load 0xff800000 from memory into f15
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f1, 0(x2) # load 0x40000000 from memory into f1
li x3, 0x1dbad9180ec97834 # load x3 with value 0x1dbad9180ec97834
sw x3, 0(x2) # store 0x1dbad9180ec97834 in memory
flw f28, 0(x2) # load 0x1dbad9180ec97834 from memory into f28
fmsub.s f25, f15, f1, f28, dyn # perform operation
fmsub.s f25, f15, f1, f28, rdn # perform operation
fmsub.s f25, f15, f1, f28, rmm # perform operation
fmsub.s f25, f15, f1, f28, rne # perform operation
fmsub.s f25, f15, f1, f28, rtz # perform operation
fmsub.s f25, f15, f1, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f25, f15, f1, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f25, f15, f1, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f25, f15, f1, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f25, f15, f1, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f25, f15, f1, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0xc0000000)
li x14, 0xa36a430e1c4a361c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f15, 0(x2) # load 0xff800000 from memory into f15
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f27, 0(x2) # load 0xc0000000 from memory into f27
li x3, 0x9354b885400eb10 # load x3 with value 0x9354b885400eb10
sw x3, 0(x2) # store 0x9354b885400eb10 in memory
flw f17, 0(x2) # load 0x9354b885400eb10 from memory into f17
fmsub.s f14, f15, f27, f17, dyn # perform operation
fmsub.s f14, f15, f27, f17, rdn # perform operation
fmsub.s f14, f15, f27, f17, rmm # perform operation
fmsub.s f14, f15, f27, f17, rne # perform operation
fmsub.s f14, f15, f27, f17, rtz # perform operation
fmsub.s f14, f15, f27, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f14, f15, f27, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f14, f15, f27, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f14, f15, f27, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f14, f15, f27, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f14, f15, f27, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0x800000)
li x5, 0x2b9570da1999f8e9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f8, 0(x2) # load 0xff800000 from memory into f8
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f28, 0(x2) # load 0x00800000 from memory into f28
li x3, 0xbd22c33d94617f2f # load x3 with value 0xbd22c33d94617f2f
sw x3, 0(x2) # store 0xbd22c33d94617f2f in memory
flw f4, 0(x2) # load 0xbd22c33d94617f2f from memory into f4
fmsub.s f5, f8, f28, f4, dyn # perform operation
fmsub.s f5, f8, f28, f4, rdn # perform operation
fmsub.s f5, f8, f28, f4, rmm # perform operation
fmsub.s f5, f8, f28, f4, rne # perform operation
fmsub.s f5, f8, f28, f4, rtz # perform operation
fmsub.s f5, f8, f28, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f5, f8, f28, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f5, f8, f28, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f5, f8, f28, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f5, f8, f28, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f5, f8, f28, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0x80800000)
li x5, 0xe52e8fca98190e40 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f25, 0(x2) # load 0xff800000 from memory into f25
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f16, 0(x2) # load 0x80800000 from memory into f16
li x3, 0x5e0c1b91f6e003bb # load x3 with value 0x5e0c1b91f6e003bb
sw x3, 0(x2) # store 0x5e0c1b91f6e003bb in memory
flw f6, 0(x2) # load 0x5e0c1b91f6e003bb from memory into f6
fmsub.s f5, f25, f16, f6, dyn # perform operation
fmsub.s f5, f25, f16, f6, rdn # perform operation
fmsub.s f5, f25, f16, f6, rmm # perform operation
fmsub.s f5, f25, f16, f6, rne # perform operation
fmsub.s f5, f25, f16, f6, rtz # perform operation
fmsub.s f5, f25, f16, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f5, f25, f16, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f5, f25, f16, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f5, f25, f16, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f5, f25, f16, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f5, f25, f16, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0x7f7fffff)
li x5, 0x77d98a9facbf54ce # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f29, 0(x2) # load 0xff800000 from memory into f29
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f11, 0(x2) # load 0x7f7fffff from memory into f11
li x3, 0xcb36d44c2304c356 # load x3 with value 0xcb36d44c2304c356
sw x3, 0(x2) # store 0xcb36d44c2304c356 in memory
flw f20, 0(x2) # load 0xcb36d44c2304c356 from memory into f20
fmsub.s f5, f29, f11, f20, dyn # perform operation
fmsub.s f5, f29, f11, f20, rdn # perform operation
fmsub.s f5, f29, f11, f20, rmm # perform operation
fmsub.s f5, f29, f11, f20, rne # perform operation
fmsub.s f5, f29, f11, f20, rtz # perform operation
fmsub.s f5, f29, f11, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f5, f29, f11, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f5, f29, f11, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f5, f29, f11, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f5, f29, f11, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f5, f29, f11, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0xff7fffff)
li x24, 0xf0aab4130aa261ac # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f27, 0(x2) # load 0xff800000 from memory into f27
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f19, 0(x2) # load 0xff7fffff from memory into f19
li x3, 0x7501a7d04c3ea14f # load x3 with value 0x7501a7d04c3ea14f
sw x3, 0(x2) # store 0x7501a7d04c3ea14f in memory
flw f8, 0(x2) # load 0x7501a7d04c3ea14f from memory into f8
fmsub.s f24, f27, f19, f8, dyn # perform operation
fmsub.s f24, f27, f19, f8, rdn # perform operation
fmsub.s f24, f27, f19, f8, rmm # perform operation
fmsub.s f24, f27, f19, f8, rne # perform operation
fmsub.s f24, f27, f19, f8, rtz # perform operation
fmsub.s f24, f27, f19, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f24, f27, f19, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f24, f27, f19, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f24, f27, f19, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f24, f27, f19, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f24, f27, f19, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0x7fffff)
li x25, 0x5e08dd27a5ac7c13 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f1, 0(x2) # load 0xff800000 from memory into f1
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f14, 0(x2) # load 0x007fffff from memory into f14
li x3, 0x7874a7c1f4e134ab # load x3 with value 0x7874a7c1f4e134ab
sw x3, 0(x2) # store 0x7874a7c1f4e134ab in memory
flw f7, 0(x2) # load 0x7874a7c1f4e134ab from memory into f7
fmsub.s f25, f1, f14, f7, dyn # perform operation
fmsub.s f25, f1, f14, f7, rdn # perform operation
fmsub.s f25, f1, f14, f7, rmm # perform operation
fmsub.s f25, f1, f14, f7, rne # perform operation
fmsub.s f25, f1, f14, f7, rtz # perform operation
fmsub.s f25, f1, f14, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f25, f1, f14, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f25, f1, f14, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f25, f1, f14, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f25, f1, f14, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f25, f1, f14, f7 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0x807fffff)
li x10, 0x957ea6883983a051 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f17, 0(x2) # load 0xff800000 from memory into f17
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f3, 0(x2) # load 0x807fffff from memory into f3
li x3, 0x4b79798765d3742c # load x3 with value 0x4b79798765d3742c
sw x3, 0(x2) # store 0x4b79798765d3742c in memory
flw f12, 0(x2) # load 0x4b79798765d3742c from memory into f12
fmsub.s f10, f17, f3, f12, dyn # perform operation
fmsub.s f10, f17, f3, f12, rdn # perform operation
fmsub.s f10, f17, f3, f12, rmm # perform operation
fmsub.s f10, f17, f3, f12, rne # perform operation
fmsub.s f10, f17, f3, f12, rtz # perform operation
fmsub.s f10, f17, f3, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f10, f17, f3, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f10, f17, f3, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f10, f17, f3, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f10, f17, f3, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f10, f17, f3, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0x400000)
li x4, 0x8f0adcde4d18607a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f29, 0(x2) # load 0xff800000 from memory into f29
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f16, 0(x2) # load 0x00400000 from memory into f16
li x3, 0xe892ae38e6df83bb # load x3 with value 0xe892ae38e6df83bb
sw x3, 0(x2) # store 0xe892ae38e6df83bb in memory
flw f7, 0(x2) # load 0xe892ae38e6df83bb from memory into f7
fmsub.s f4, f29, f16, f7, dyn # perform operation
fmsub.s f4, f29, f16, f7, rdn # perform operation
fmsub.s f4, f29, f16, f7, rmm # perform operation
fmsub.s f4, f29, f16, f7, rne # perform operation
fmsub.s f4, f29, f16, f7, rtz # perform operation
fmsub.s f4, f29, f16, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f4, f29, f16, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f4, f29, f16, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f4, f29, f16, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f4, f29, f16, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f4, f29, f16, f7 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0x80400000)
li x24, 0x4e37ee2839714182 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f20, 0(x2) # load 0xff800000 from memory into f20
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f31, 0(x2) # load 0x80400000 from memory into f31
li x3, 0xa613e2f787aff72b # load x3 with value 0xa613e2f787aff72b
sw x3, 0(x2) # store 0xa613e2f787aff72b in memory
flw f30, 0(x2) # load 0xa613e2f787aff72b from memory into f30
fmsub.s f24, f20, f31, f30, dyn # perform operation
fmsub.s f24, f20, f31, f30, rdn # perform operation
fmsub.s f24, f20, f31, f30, rmm # perform operation
fmsub.s f24, f20, f31, f30, rne # perform operation
fmsub.s f24, f20, f31, f30, rtz # perform operation
fmsub.s f24, f20, f31, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f24, f20, f31, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f24, f20, f31, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f24, f20, f31, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f24, f20, f31, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f24, f20, f31, f30 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0x1)
li x13, 0x3d71aea8942c2430 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f18, 0(x2) # load 0xff800000 from memory into f18
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f7, 0(x2) # load 0x00000001 from memory into f7
li x3, 0x4624811f636e2b76 # load x3 with value 0x4624811f636e2b76
sw x3, 0(x2) # store 0x4624811f636e2b76 in memory
flw f5, 0(x2) # load 0x4624811f636e2b76 from memory into f5
fmsub.s f13, f18, f7, f5, dyn # perform operation
fmsub.s f13, f18, f7, f5, rdn # perform operation
fmsub.s f13, f18, f7, f5, rmm # perform operation
fmsub.s f13, f18, f7, f5, rne # perform operation
fmsub.s f13, f18, f7, f5, rtz # perform operation
fmsub.s f13, f18, f7, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f13, f18, f7, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f13, f18, f7, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f13, f18, f7, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f13, f18, f7, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f13, f18, f7, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0x80000001)
li x28, 0x46dbc401105485e8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f13, 0(x2) # load 0xff800000 from memory into f13
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f1, 0(x2) # load 0x80000001 from memory into f1
li x3, 0xdf74c3de31d26ba6 # load x3 with value 0xdf74c3de31d26ba6
sw x3, 0(x2) # store 0xdf74c3de31d26ba6 in memory
flw f18, 0(x2) # load 0xdf74c3de31d26ba6 from memory into f18
fmsub.s f28, f13, f1, f18, dyn # perform operation
fmsub.s f28, f13, f1, f18, rdn # perform operation
fmsub.s f28, f13, f1, f18, rmm # perform operation
fmsub.s f28, f13, f1, f18, rne # perform operation
fmsub.s f28, f13, f1, f18, rtz # perform operation
fmsub.s f28, f13, f1, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f28, f13, f1, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f28, f13, f1, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f28, f13, f1, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f28, f13, f1, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f28, f13, f1, f18 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0x7f800000)
li x8, 0xb8316ca3c31d4447 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f13, 0(x2) # load 0xff800000 from memory into f13
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f26, 0(x2) # load 0x7f800000 from memory into f26
li x3, 0xc22de7aecf5600da # load x3 with value 0xc22de7aecf5600da
sw x3, 0(x2) # store 0xc22de7aecf5600da in memory
flw f23, 0(x2) # load 0xc22de7aecf5600da from memory into f23
fmsub.s f8, f13, f26, f23, dyn # perform operation
fmsub.s f8, f13, f26, f23, rdn # perform operation
fmsub.s f8, f13, f26, f23, rmm # perform operation
fmsub.s f8, f13, f26, f23, rne # perform operation
fmsub.s f8, f13, f26, f23, rtz # perform operation
fmsub.s f8, f13, f26, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f8, f13, f26, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f8, f13, f26, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f8, f13, f26, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f8, f13, f26, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f8, f13, f26, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0xff800000)
li x31, 0x3c7994a3ec289c1f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f23, 0(x2) # load 0xff800000 from memory into f23
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f25, 0(x2) # load 0xff800000 from memory into f25
li x3, 0x86fc79a160f4b08 # load x3 with value 0x86fc79a160f4b08
sw x3, 0(x2) # store 0x86fc79a160f4b08 in memory
flw f13, 0(x2) # load 0x86fc79a160f4b08 from memory into f13
fmsub.s f31, f23, f25, f13, dyn # perform operation
fmsub.s f31, f23, f25, f13, rdn # perform operation
fmsub.s f31, f23, f25, f13, rmm # perform operation
fmsub.s f31, f23, f25, f13, rne # perform operation
fmsub.s f31, f23, f25, f13, rtz # perform operation
fmsub.s f31, f23, f25, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f31, f23, f25, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f31, f23, f25, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f31, f23, f25, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f31, f23, f25, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f31, f23, f25, f13 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0x7fc00000)
li x31, 0xf384c4d0d9debaaa # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f9, 0(x2) # load 0xff800000 from memory into f9
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f11, 0(x2) # load 0x7fc00000 from memory into f11
li x3, 0x35061747cbcd0252 # load x3 with value 0x35061747cbcd0252
sw x3, 0(x2) # store 0x35061747cbcd0252 in memory
flw f15, 0(x2) # load 0x35061747cbcd0252 from memory into f15
fmsub.s f31, f9, f11, f15, dyn # perform operation
fmsub.s f31, f9, f11, f15, rdn # perform operation
fmsub.s f31, f9, f11, f15, rmm # perform operation
fmsub.s f31, f9, f11, f15, rne # perform operation
fmsub.s f31, f9, f11, f15, rtz # perform operation
fmsub.s f31, f9, f11, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f31, f9, f11, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f31, f9, f11, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f31, f9, f11, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f31, f9, f11, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f31, f9, f11, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0x7fffffff)
li x3, 0xfe4dfd7d1013e283 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f28, 0(x2) # load 0xff800000 from memory into f28
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f17, 0(x2) # load 0x7fffffff from memory into f17
li x3, 0x69caaeb1e0262b65 # load x3 with value 0x69caaeb1e0262b65
sw x3, 0(x2) # store 0x69caaeb1e0262b65 in memory
flw f26, 0(x2) # load 0x69caaeb1e0262b65 from memory into f26
fmsub.s f3, f28, f17, f26, dyn # perform operation
fmsub.s f3, f28, f17, f26, rdn # perform operation
fmsub.s f3, f28, f17, f26, rmm # perform operation
fmsub.s f3, f28, f17, f26, rne # perform operation
fmsub.s f3, f28, f17, f26, rtz # perform operation
fmsub.s f3, f28, f17, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f3, f28, f17, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f3, f28, f17, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f3, f28, f17, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f3, f28, f17, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f3, f28, f17, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0x7f800001)
li x1, 0x53774b7715cf884a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f12, 0(x2) # load 0xff800000 from memory into f12
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f21, 0(x2) # load 0x7f800001 from memory into f21
li x3, 0xb094c54f20241733 # load x3 with value 0xb094c54f20241733
sw x3, 0(x2) # store 0xb094c54f20241733 in memory
flw f27, 0(x2) # load 0xb094c54f20241733 from memory into f27
fmsub.s f1, f12, f21, f27, dyn # perform operation
fmsub.s f1, f12, f21, f27, rdn # perform operation
fmsub.s f1, f12, f21, f27, rmm # perform operation
fmsub.s f1, f12, f21, f27, rne # perform operation
fmsub.s f1, f12, f21, f27, rtz # perform operation
fmsub.s f1, f12, f21, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f1, f12, f21, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f1, f12, f21, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f1, f12, f21, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f1, f12, f21, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f1, f12, f21, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0x7fbfffff)
li x17, 0x50c5f07b3c732d5e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f6, 0(x2) # load 0xff800000 from memory into f6
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f15, 0(x2) # load 0x7fbfffff from memory into f15
li x3, 0x7646aee80c1dd9e # load x3 with value 0x7646aee80c1dd9e
sw x3, 0(x2) # store 0x7646aee80c1dd9e in memory
flw f14, 0(x2) # load 0x7646aee80c1dd9e from memory into f14
fmsub.s f17, f6, f15, f14, dyn # perform operation
fmsub.s f17, f6, f15, f14, rdn # perform operation
fmsub.s f17, f6, f15, f14, rmm # perform operation
fmsub.s f17, f6, f15, f14, rne # perform operation
fmsub.s f17, f6, f15, f14, rtz # perform operation
fmsub.s f17, f6, f15, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f17, f6, f15, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f17, f6, f15, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f17, f6, f15, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f17, f6, f15, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f17, f6, f15, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0x7ef8654f)
li x14, 0xb39461d9c0e562c7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f27, 0(x2) # load 0xff800000 from memory into f27
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f20, 0(x2) # load 0x7ef8654f from memory into f20
li x3, 0x2abff804d7e1a7fd # load x3 with value 0x2abff804d7e1a7fd
sw x3, 0(x2) # store 0x2abff804d7e1a7fd in memory
flw f28, 0(x2) # load 0x2abff804d7e1a7fd from memory into f28
fmsub.s f14, f27, f20, f28, dyn # perform operation
fmsub.s f14, f27, f20, f28, rdn # perform operation
fmsub.s f14, f27, f20, f28, rmm # perform operation
fmsub.s f14, f27, f20, f28, rne # perform operation
fmsub.s f14, f27, f20, f28, rtz # perform operation
fmsub.s f14, f27, f20, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f14, f27, f20, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f14, f27, f20, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f14, f27, f20, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f14, f27, f20, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f14, f27, f20, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0x813d9ab0)
li x15, 0xe6cafe4db2e9e8aa # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f5, 0(x2) # load 0xff800000 from memory into f5
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f14, 0(x2) # load 0x813d9ab0 from memory into f14
li x3, 0xa6d24df28035b9a5 # load x3 with value 0xa6d24df28035b9a5
sw x3, 0(x2) # store 0xa6d24df28035b9a5 in memory
flw f12, 0(x2) # load 0xa6d24df28035b9a5 from memory into f12
fmsub.s f15, f5, f14, f12, dyn # perform operation
fmsub.s f15, f5, f14, f12, rdn # perform operation
fmsub.s f15, f5, f14, f12, rmm # perform operation
fmsub.s f15, f5, f14, f12, rne # perform operation
fmsub.s f15, f5, f14, f12, rtz # perform operation
fmsub.s f15, f5, f14, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f15, f5, f14, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f15, f5, f14, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f15, f5, f14, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f15, f5, f14, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f15, f5, f14, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0x0)
li x22, 0xa8345c460741aeee # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f9, 0(x2) # load 0x7fc00000 from memory into f9
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f26, 0(x2) # load 0x00000000 from memory into f26
li x3, 0xcba0c8d59b1fbb12 # load x3 with value 0xcba0c8d59b1fbb12
sw x3, 0(x2) # store 0xcba0c8d59b1fbb12 in memory
flw f12, 0(x2) # load 0xcba0c8d59b1fbb12 from memory into f12
fmsub.s f22, f9, f26, f12, dyn # perform operation
fmsub.s f22, f9, f26, f12, rdn # perform operation
fmsub.s f22, f9, f26, f12, rmm # perform operation
fmsub.s f22, f9, f26, f12, rne # perform operation
fmsub.s f22, f9, f26, f12, rtz # perform operation
fmsub.s f22, f9, f26, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f22, f9, f26, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f22, f9, f26, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f22, f9, f26, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f22, f9, f26, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f22, f9, f26, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0x80000000)
li x30, 0x5247d44bafb2acca # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f5, 0(x2) # load 0x7fc00000 from memory into f5
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f19, 0(x2) # load 0x80000000 from memory into f19
li x3, 0x652c4b2355fd5f07 # load x3 with value 0x652c4b2355fd5f07
sw x3, 0(x2) # store 0x652c4b2355fd5f07 in memory
flw f14, 0(x2) # load 0x652c4b2355fd5f07 from memory into f14
fmsub.s f30, f5, f19, f14, dyn # perform operation
fmsub.s f30, f5, f19, f14, rdn # perform operation
fmsub.s f30, f5, f19, f14, rmm # perform operation
fmsub.s f30, f5, f19, f14, rne # perform operation
fmsub.s f30, f5, f19, f14, rtz # perform operation
fmsub.s f30, f5, f19, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f30, f5, f19, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f30, f5, f19, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f30, f5, f19, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f30, f5, f19, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f30, f5, f19, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0x3f800000)
li x28, 0xd7b5b9ae3dec55f1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f14, 0(x2) # load 0x7fc00000 from memory into f14
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f29, 0(x2) # load 0x3f800000 from memory into f29
li x3, 0xc10c287ae8b602b7 # load x3 with value 0xc10c287ae8b602b7
sw x3, 0(x2) # store 0xc10c287ae8b602b7 in memory
flw f18, 0(x2) # load 0xc10c287ae8b602b7 from memory into f18
fmsub.s f28, f14, f29, f18, dyn # perform operation
fmsub.s f28, f14, f29, f18, rdn # perform operation
fmsub.s f28, f14, f29, f18, rmm # perform operation
fmsub.s f28, f14, f29, f18, rne # perform operation
fmsub.s f28, f14, f29, f18, rtz # perform operation
fmsub.s f28, f14, f29, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f28, f14, f29, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f28, f14, f29, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f28, f14, f29, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f28, f14, f29, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f28, f14, f29, f18 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0xbf800000)
li x20, 0x5afbd3737cb43461 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f23, 0(x2) # load 0x7fc00000 from memory into f23
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f24, 0(x2) # load 0xbf800000 from memory into f24
li x3, 0x1de5322c559d20bc # load x3 with value 0x1de5322c559d20bc
sw x3, 0(x2) # store 0x1de5322c559d20bc in memory
flw f8, 0(x2) # load 0x1de5322c559d20bc from memory into f8
fmsub.s f20, f23, f24, f8, dyn # perform operation
fmsub.s f20, f23, f24, f8, rdn # perform operation
fmsub.s f20, f23, f24, f8, rmm # perform operation
fmsub.s f20, f23, f24, f8, rne # perform operation
fmsub.s f20, f23, f24, f8, rtz # perform operation
fmsub.s f20, f23, f24, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f20, f23, f24, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f20, f23, f24, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f20, f23, f24, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f20, f23, f24, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f20, f23, f24, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0x3fc00000)
li x29, 0x3f0f621d23cad112 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f28, 0(x2) # load 0x7fc00000 from memory into f28
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f16, 0(x2) # load 0x3fc00000 from memory into f16
li x3, 0x984ad89dfa2cc236 # load x3 with value 0x984ad89dfa2cc236
sw x3, 0(x2) # store 0x984ad89dfa2cc236 in memory
flw f10, 0(x2) # load 0x984ad89dfa2cc236 from memory into f10
fmsub.s f29, f28, f16, f10, dyn # perform operation
fmsub.s f29, f28, f16, f10, rdn # perform operation
fmsub.s f29, f28, f16, f10, rmm # perform operation
fmsub.s f29, f28, f16, f10, rne # perform operation
fmsub.s f29, f28, f16, f10, rtz # perform operation
fmsub.s f29, f28, f16, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f29, f28, f16, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f29, f28, f16, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f29, f28, f16, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f29, f28, f16, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f29, f28, f16, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0xbfc00000)
li x7, 0x0b9e83917c76c3f5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f5, 0(x2) # load 0x7fc00000 from memory into f5
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f27, 0(x2) # load 0xbfc00000 from memory into f27
li x3, 0x7476995bab38babe # load x3 with value 0x7476995bab38babe
sw x3, 0(x2) # store 0x7476995bab38babe in memory
flw f20, 0(x2) # load 0x7476995bab38babe from memory into f20
fmsub.s f7, f5, f27, f20, dyn # perform operation
fmsub.s f7, f5, f27, f20, rdn # perform operation
fmsub.s f7, f5, f27, f20, rmm # perform operation
fmsub.s f7, f5, f27, f20, rne # perform operation
fmsub.s f7, f5, f27, f20, rtz # perform operation
fmsub.s f7, f5, f27, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f7, f5, f27, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f7, f5, f27, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f7, f5, f27, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f7, f5, f27, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f7, f5, f27, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0x40000000)
li x13, 0x33b5c94908de1dd2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f2, 0(x2) # load 0x7fc00000 from memory into f2
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f9, 0(x2) # load 0x40000000 from memory into f9
li x3, 0x62d4cf4c7e6d6d60 # load x3 with value 0x62d4cf4c7e6d6d60
sw x3, 0(x2) # store 0x62d4cf4c7e6d6d60 in memory
flw f17, 0(x2) # load 0x62d4cf4c7e6d6d60 from memory into f17
fmsub.s f13, f2, f9, f17, dyn # perform operation
fmsub.s f13, f2, f9, f17, rdn # perform operation
fmsub.s f13, f2, f9, f17, rmm # perform operation
fmsub.s f13, f2, f9, f17, rne # perform operation
fmsub.s f13, f2, f9, f17, rtz # perform operation
fmsub.s f13, f2, f9, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f13, f2, f9, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f13, f2, f9, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f13, f2, f9, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f13, f2, f9, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f13, f2, f9, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0xc0000000)
li x20, 0x6ccacfbb58546b05 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f2, 0(x2) # load 0x7fc00000 from memory into f2
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f11, 0(x2) # load 0xc0000000 from memory into f11
li x3, 0xe41244fc9681dab8 # load x3 with value 0xe41244fc9681dab8
sw x3, 0(x2) # store 0xe41244fc9681dab8 in memory
flw f17, 0(x2) # load 0xe41244fc9681dab8 from memory into f17
fmsub.s f20, f2, f11, f17, dyn # perform operation
fmsub.s f20, f2, f11, f17, rdn # perform operation
fmsub.s f20, f2, f11, f17, rmm # perform operation
fmsub.s f20, f2, f11, f17, rne # perform operation
fmsub.s f20, f2, f11, f17, rtz # perform operation
fmsub.s f20, f2, f11, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f20, f2, f11, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f20, f2, f11, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f20, f2, f11, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f20, f2, f11, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f20, f2, f11, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0x800000)
li x5, 0xb33c670724ee79ac # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f27, 0(x2) # load 0x7fc00000 from memory into f27
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f4, 0(x2) # load 0x00800000 from memory into f4
li x3, 0x67d3b0e1829a3e85 # load x3 with value 0x67d3b0e1829a3e85
sw x3, 0(x2) # store 0x67d3b0e1829a3e85 in memory
flw f7, 0(x2) # load 0x67d3b0e1829a3e85 from memory into f7
fmsub.s f5, f27, f4, f7, dyn # perform operation
fmsub.s f5, f27, f4, f7, rdn # perform operation
fmsub.s f5, f27, f4, f7, rmm # perform operation
fmsub.s f5, f27, f4, f7, rne # perform operation
fmsub.s f5, f27, f4, f7, rtz # perform operation
fmsub.s f5, f27, f4, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f5, f27, f4, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f5, f27, f4, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f5, f27, f4, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f5, f27, f4, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f5, f27, f4, f7 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0x80800000)
li x21, 0x318482e22873f0ed # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f20, 0(x2) # load 0x7fc00000 from memory into f20
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f24, 0(x2) # load 0x80800000 from memory into f24
li x3, 0x282bde1eed43ed43 # load x3 with value 0x282bde1eed43ed43
sw x3, 0(x2) # store 0x282bde1eed43ed43 in memory
flw f10, 0(x2) # load 0x282bde1eed43ed43 from memory into f10
fmsub.s f21, f20, f24, f10, dyn # perform operation
fmsub.s f21, f20, f24, f10, rdn # perform operation
fmsub.s f21, f20, f24, f10, rmm # perform operation
fmsub.s f21, f20, f24, f10, rne # perform operation
fmsub.s f21, f20, f24, f10, rtz # perform operation
fmsub.s f21, f20, f24, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f21, f20, f24, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f21, f20, f24, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f21, f20, f24, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f21, f20, f24, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f21, f20, f24, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0x7f7fffff)
li x6, 0x231b2671114f13f6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f2, 0(x2) # load 0x7fc00000 from memory into f2
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f16, 0(x2) # load 0x7f7fffff from memory into f16
li x3, 0x40ca6ba5a3b56ff7 # load x3 with value 0x40ca6ba5a3b56ff7
sw x3, 0(x2) # store 0x40ca6ba5a3b56ff7 in memory
flw f31, 0(x2) # load 0x40ca6ba5a3b56ff7 from memory into f31
fmsub.s f6, f2, f16, f31, dyn # perform operation
fmsub.s f6, f2, f16, f31, rdn # perform operation
fmsub.s f6, f2, f16, f31, rmm # perform operation
fmsub.s f6, f2, f16, f31, rne # perform operation
fmsub.s f6, f2, f16, f31, rtz # perform operation
fmsub.s f6, f2, f16, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f6, f2, f16, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f6, f2, f16, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f6, f2, f16, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f6, f2, f16, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f6, f2, f16, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0xff7fffff)
li x25, 0xd3ff9feb66f3cef5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f12, 0(x2) # load 0x7fc00000 from memory into f12
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f21, 0(x2) # load 0xff7fffff from memory into f21
li x3, 0x15eabb98eb4c30a # load x3 with value 0x15eabb98eb4c30a
sw x3, 0(x2) # store 0x15eabb98eb4c30a in memory
flw f10, 0(x2) # load 0x15eabb98eb4c30a from memory into f10
fmsub.s f25, f12, f21, f10, dyn # perform operation
fmsub.s f25, f12, f21, f10, rdn # perform operation
fmsub.s f25, f12, f21, f10, rmm # perform operation
fmsub.s f25, f12, f21, f10, rne # perform operation
fmsub.s f25, f12, f21, f10, rtz # perform operation
fmsub.s f25, f12, f21, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f25, f12, f21, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f25, f12, f21, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f25, f12, f21, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f25, f12, f21, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f25, f12, f21, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0x7fffff)
li x5, 0x3a557c57ce689b46 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f15, 0(x2) # load 0x7fc00000 from memory into f15
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f8, 0(x2) # load 0x007fffff from memory into f8
li x3, 0x623560da701b3802 # load x3 with value 0x623560da701b3802
sw x3, 0(x2) # store 0x623560da701b3802 in memory
flw f24, 0(x2) # load 0x623560da701b3802 from memory into f24
fmsub.s f5, f15, f8, f24, dyn # perform operation
fmsub.s f5, f15, f8, f24, rdn # perform operation
fmsub.s f5, f15, f8, f24, rmm # perform operation
fmsub.s f5, f15, f8, f24, rne # perform operation
fmsub.s f5, f15, f8, f24, rtz # perform operation
fmsub.s f5, f15, f8, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f5, f15, f8, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f5, f15, f8, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f5, f15, f8, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f5, f15, f8, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f5, f15, f8, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0x807fffff)
li x26, 0x01a6049669f884c5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f24, 0(x2) # load 0x7fc00000 from memory into f24
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f10, 0(x2) # load 0x807fffff from memory into f10
li x3, 0xd0d067e328e4aadb # load x3 with value 0xd0d067e328e4aadb
sw x3, 0(x2) # store 0xd0d067e328e4aadb in memory
flw f7, 0(x2) # load 0xd0d067e328e4aadb from memory into f7
fmsub.s f26, f24, f10, f7, dyn # perform operation
fmsub.s f26, f24, f10, f7, rdn # perform operation
fmsub.s f26, f24, f10, f7, rmm # perform operation
fmsub.s f26, f24, f10, f7, rne # perform operation
fmsub.s f26, f24, f10, f7, rtz # perform operation
fmsub.s f26, f24, f10, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f26, f24, f10, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f26, f24, f10, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f26, f24, f10, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f26, f24, f10, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f26, f24, f10, f7 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0x400000)
li x14, 0x8800b061484718a5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f23, 0(x2) # load 0x7fc00000 from memory into f23
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f18, 0(x2) # load 0x00400000 from memory into f18
li x3, 0x1112dc1f76d1f1a4 # load x3 with value 0x1112dc1f76d1f1a4
sw x3, 0(x2) # store 0x1112dc1f76d1f1a4 in memory
flw f10, 0(x2) # load 0x1112dc1f76d1f1a4 from memory into f10
fmsub.s f14, f23, f18, f10, dyn # perform operation
fmsub.s f14, f23, f18, f10, rdn # perform operation
fmsub.s f14, f23, f18, f10, rmm # perform operation
fmsub.s f14, f23, f18, f10, rne # perform operation
fmsub.s f14, f23, f18, f10, rtz # perform operation
fmsub.s f14, f23, f18, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f14, f23, f18, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f14, f23, f18, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f14, f23, f18, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f14, f23, f18, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f14, f23, f18, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0x80400000)
li x18, 0xa8d5f6cce4f52bbf # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f26, 0(x2) # load 0x7fc00000 from memory into f26
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f31, 0(x2) # load 0x80400000 from memory into f31
li x3, 0xb9591c435f5e261c # load x3 with value 0xb9591c435f5e261c
sw x3, 0(x2) # store 0xb9591c435f5e261c in memory
flw f11, 0(x2) # load 0xb9591c435f5e261c from memory into f11
fmsub.s f18, f26, f31, f11, dyn # perform operation
fmsub.s f18, f26, f31, f11, rdn # perform operation
fmsub.s f18, f26, f31, f11, rmm # perform operation
fmsub.s f18, f26, f31, f11, rne # perform operation
fmsub.s f18, f26, f31, f11, rtz # perform operation
fmsub.s f18, f26, f31, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f18, f26, f31, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f18, f26, f31, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f18, f26, f31, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f18, f26, f31, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f18, f26, f31, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0x1)
li x1, 0xf3517d21d4182b87 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f11, 0(x2) # load 0x7fc00000 from memory into f11
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f5, 0(x2) # load 0x00000001 from memory into f5
li x3, 0x1e8d6bd951728064 # load x3 with value 0x1e8d6bd951728064
sw x3, 0(x2) # store 0x1e8d6bd951728064 in memory
flw f10, 0(x2) # load 0x1e8d6bd951728064 from memory into f10
fmsub.s f1, f11, f5, f10, dyn # perform operation
fmsub.s f1, f11, f5, f10, rdn # perform operation
fmsub.s f1, f11, f5, f10, rmm # perform operation
fmsub.s f1, f11, f5, f10, rne # perform operation
fmsub.s f1, f11, f5, f10, rtz # perform operation
fmsub.s f1, f11, f5, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f1, f11, f5, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f1, f11, f5, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f1, f11, f5, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f1, f11, f5, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f1, f11, f5, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0x80000001)
li x9, 0xb77fdf9034642fd4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f6, 0(x2) # load 0x7fc00000 from memory into f6
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f19, 0(x2) # load 0x80000001 from memory into f19
li x3, 0x11bc7be2040041ed # load x3 with value 0x11bc7be2040041ed
sw x3, 0(x2) # store 0x11bc7be2040041ed in memory
flw f26, 0(x2) # load 0x11bc7be2040041ed from memory into f26
fmsub.s f9, f6, f19, f26, dyn # perform operation
fmsub.s f9, f6, f19, f26, rdn # perform operation
fmsub.s f9, f6, f19, f26, rmm # perform operation
fmsub.s f9, f6, f19, f26, rne # perform operation
fmsub.s f9, f6, f19, f26, rtz # perform operation
fmsub.s f9, f6, f19, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f9, f6, f19, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f9, f6, f19, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f9, f6, f19, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f9, f6, f19, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f9, f6, f19, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0x7f800000)
li x14, 0xcd476002d534f498 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f4, 0(x2) # load 0x7fc00000 from memory into f4
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f26, 0(x2) # load 0x7f800000 from memory into f26
li x3, 0xca0e20da2f87a93 # load x3 with value 0xca0e20da2f87a93
sw x3, 0(x2) # store 0xca0e20da2f87a93 in memory
flw f17, 0(x2) # load 0xca0e20da2f87a93 from memory into f17
fmsub.s f14, f4, f26, f17, dyn # perform operation
fmsub.s f14, f4, f26, f17, rdn # perform operation
fmsub.s f14, f4, f26, f17, rmm # perform operation
fmsub.s f14, f4, f26, f17, rne # perform operation
fmsub.s f14, f4, f26, f17, rtz # perform operation
fmsub.s f14, f4, f26, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f14, f4, f26, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f14, f4, f26, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f14, f4, f26, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f14, f4, f26, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f14, f4, f26, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0xff800000)
li x24, 0x71bbdbdf84a2e091 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f1, 0(x2) # load 0x7fc00000 from memory into f1
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f19, 0(x2) # load 0xff800000 from memory into f19
li x3, 0xb2f62622206ddff0 # load x3 with value 0xb2f62622206ddff0
sw x3, 0(x2) # store 0xb2f62622206ddff0 in memory
flw f22, 0(x2) # load 0xb2f62622206ddff0 from memory into f22
fmsub.s f24, f1, f19, f22, dyn # perform operation
fmsub.s f24, f1, f19, f22, rdn # perform operation
fmsub.s f24, f1, f19, f22, rmm # perform operation
fmsub.s f24, f1, f19, f22, rne # perform operation
fmsub.s f24, f1, f19, f22, rtz # perform operation
fmsub.s f24, f1, f19, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f24, f1, f19, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f24, f1, f19, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f24, f1, f19, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f24, f1, f19, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f24, f1, f19, f22 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0x7fc00000)
li x2, 0x46e7ba9fe0133474 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f22, 0(x2) # load 0x7fc00000 from memory into f22
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f4, 0(x2) # load 0x7fc00000 from memory into f4
li x3, 0xbfa4e3c2c20f0f1a # load x3 with value 0xbfa4e3c2c20f0f1a
sw x3, 0(x2) # store 0xbfa4e3c2c20f0f1a in memory
flw f13, 0(x2) # load 0xbfa4e3c2c20f0f1a from memory into f13
fmsub.s f2, f22, f4, f13, dyn # perform operation
fmsub.s f2, f22, f4, f13, rdn # perform operation
fmsub.s f2, f22, f4, f13, rmm # perform operation
fmsub.s f2, f22, f4, f13, rne # perform operation
fmsub.s f2, f22, f4, f13, rtz # perform operation
fmsub.s f2, f22, f4, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f2, f22, f4, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f2, f22, f4, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f2, f22, f4, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f2, f22, f4, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f2, f22, f4, f13 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0x7fffffff)
li x17, 0xb723b99568fb201e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f10, 0(x2) # load 0x7fc00000 from memory into f10
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f5, 0(x2) # load 0x7fffffff from memory into f5
li x3, 0xf1509c54f4093798 # load x3 with value 0xf1509c54f4093798
sw x3, 0(x2) # store 0xf1509c54f4093798 in memory
flw f18, 0(x2) # load 0xf1509c54f4093798 from memory into f18
fmsub.s f17, f10, f5, f18, dyn # perform operation
fmsub.s f17, f10, f5, f18, rdn # perform operation
fmsub.s f17, f10, f5, f18, rmm # perform operation
fmsub.s f17, f10, f5, f18, rne # perform operation
fmsub.s f17, f10, f5, f18, rtz # perform operation
fmsub.s f17, f10, f5, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f17, f10, f5, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f17, f10, f5, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f17, f10, f5, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f17, f10, f5, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f17, f10, f5, f18 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0x7f800001)
li x24, 0xa90088a0ca91dcb5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f30, 0(x2) # load 0x7fc00000 from memory into f30
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f1, 0(x2) # load 0x7f800001 from memory into f1
li x3, 0x35cfb7284cf8447c # load x3 with value 0x35cfb7284cf8447c
sw x3, 0(x2) # store 0x35cfb7284cf8447c in memory
flw f21, 0(x2) # load 0x35cfb7284cf8447c from memory into f21
fmsub.s f24, f30, f1, f21, dyn # perform operation
fmsub.s f24, f30, f1, f21, rdn # perform operation
fmsub.s f24, f30, f1, f21, rmm # perform operation
fmsub.s f24, f30, f1, f21, rne # perform operation
fmsub.s f24, f30, f1, f21, rtz # perform operation
fmsub.s f24, f30, f1, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f24, f30, f1, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f24, f30, f1, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f24, f30, f1, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f24, f30, f1, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f24, f30, f1, f21 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0x7fbfffff)
li x3, 0xcf5f7ce52848d6cc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f14, 0(x2) # load 0x7fc00000 from memory into f14
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f4, 0(x2) # load 0x7fbfffff from memory into f4
li x3, 0x470c9f40f54979aa # load x3 with value 0x470c9f40f54979aa
sw x3, 0(x2) # store 0x470c9f40f54979aa in memory
flw f10, 0(x2) # load 0x470c9f40f54979aa from memory into f10
fmsub.s f3, f14, f4, f10, dyn # perform operation
fmsub.s f3, f14, f4, f10, rdn # perform operation
fmsub.s f3, f14, f4, f10, rmm # perform operation
fmsub.s f3, f14, f4, f10, rne # perform operation
fmsub.s f3, f14, f4, f10, rtz # perform operation
fmsub.s f3, f14, f4, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f3, f14, f4, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f3, f14, f4, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f3, f14, f4, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f3, f14, f4, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f3, f14, f4, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0x7ef8654f)
li x6, 0x85e6f7ce0795e80a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f25, 0(x2) # load 0x7fc00000 from memory into f25
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f31, 0(x2) # load 0x7ef8654f from memory into f31
li x3, 0xdd8f8c60e5282ea9 # load x3 with value 0xdd8f8c60e5282ea9
sw x3, 0(x2) # store 0xdd8f8c60e5282ea9 in memory
flw f22, 0(x2) # load 0xdd8f8c60e5282ea9 from memory into f22
fmsub.s f6, f25, f31, f22, dyn # perform operation
fmsub.s f6, f25, f31, f22, rdn # perform operation
fmsub.s f6, f25, f31, f22, rmm # perform operation
fmsub.s f6, f25, f31, f22, rne # perform operation
fmsub.s f6, f25, f31, f22, rtz # perform operation
fmsub.s f6, f25, f31, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f6, f25, f31, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f6, f25, f31, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f6, f25, f31, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f6, f25, f31, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f6, f25, f31, f22 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0x813d9ab0)
li x1, 0x8125380a06b3a5da # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f24, 0(x2) # load 0x7fc00000 from memory into f24
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f28, 0(x2) # load 0x813d9ab0 from memory into f28
li x3, 0x985fdc4e71fd800 # load x3 with value 0x985fdc4e71fd800
sw x3, 0(x2) # store 0x985fdc4e71fd800 in memory
flw f19, 0(x2) # load 0x985fdc4e71fd800 from memory into f19
fmsub.s f1, f24, f28, f19, dyn # perform operation
fmsub.s f1, f24, f28, f19, rdn # perform operation
fmsub.s f1, f24, f28, f19, rmm # perform operation
fmsub.s f1, f24, f28, f19, rne # perform operation
fmsub.s f1, f24, f28, f19, rtz # perform operation
fmsub.s f1, f24, f28, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f1, f24, f28, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f1, f24, f28, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f1, f24, f28, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f1, f24, f28, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f1, f24, f28, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0x0)
li x30, 0x8eb9f685abcc26a7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f6, 0(x2) # load 0x7fffffff from memory into f6
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f31, 0(x2) # load 0x00000000 from memory into f31
li x3, 0x806b4ee8a332d69e # load x3 with value 0x806b4ee8a332d69e
sw x3, 0(x2) # store 0x806b4ee8a332d69e in memory
flw f16, 0(x2) # load 0x806b4ee8a332d69e from memory into f16
fmsub.s f30, f6, f31, f16, dyn # perform operation
fmsub.s f30, f6, f31, f16, rdn # perform operation
fmsub.s f30, f6, f31, f16, rmm # perform operation
fmsub.s f30, f6, f31, f16, rne # perform operation
fmsub.s f30, f6, f31, f16, rtz # perform operation
fmsub.s f30, f6, f31, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f30, f6, f31, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f30, f6, f31, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f30, f6, f31, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f30, f6, f31, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f30, f6, f31, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0x80000000)
li x24, 0x68dd8eb5216a8905 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f26, 0(x2) # load 0x7fffffff from memory into f26
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f2, 0(x2) # load 0x80000000 from memory into f2
li x3, 0x15d21dba4be49632 # load x3 with value 0x15d21dba4be49632
sw x3, 0(x2) # store 0x15d21dba4be49632 in memory
flw f19, 0(x2) # load 0x15d21dba4be49632 from memory into f19
fmsub.s f24, f26, f2, f19, dyn # perform operation
fmsub.s f24, f26, f2, f19, rdn # perform operation
fmsub.s f24, f26, f2, f19, rmm # perform operation
fmsub.s f24, f26, f2, f19, rne # perform operation
fmsub.s f24, f26, f2, f19, rtz # perform operation
fmsub.s f24, f26, f2, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f24, f26, f2, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f24, f26, f2, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f24, f26, f2, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f24, f26, f2, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f24, f26, f2, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0x3f800000)
li x2, 0x89beadd1b7f0b4bd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f15, 0(x2) # load 0x7fffffff from memory into f15
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f28, 0(x2) # load 0x3f800000 from memory into f28
li x3, 0x905303524cfea006 # load x3 with value 0x905303524cfea006
sw x3, 0(x2) # store 0x905303524cfea006 in memory
flw f17, 0(x2) # load 0x905303524cfea006 from memory into f17
fmsub.s f2, f15, f28, f17, dyn # perform operation
fmsub.s f2, f15, f28, f17, rdn # perform operation
fmsub.s f2, f15, f28, f17, rmm # perform operation
fmsub.s f2, f15, f28, f17, rne # perform operation
fmsub.s f2, f15, f28, f17, rtz # perform operation
fmsub.s f2, f15, f28, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f2, f15, f28, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f2, f15, f28, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f2, f15, f28, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f2, f15, f28, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f2, f15, f28, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0xbf800000)
li x13, 0xce3841564363504f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f27, 0(x2) # load 0x7fffffff from memory into f27
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f10, 0(x2) # load 0xbf800000 from memory into f10
li x3, 0x11bc5a4208425cef # load x3 with value 0x11bc5a4208425cef
sw x3, 0(x2) # store 0x11bc5a4208425cef in memory
flw f21, 0(x2) # load 0x11bc5a4208425cef from memory into f21
fmsub.s f13, f27, f10, f21, dyn # perform operation
fmsub.s f13, f27, f10, f21, rdn # perform operation
fmsub.s f13, f27, f10, f21, rmm # perform operation
fmsub.s f13, f27, f10, f21, rne # perform operation
fmsub.s f13, f27, f10, f21, rtz # perform operation
fmsub.s f13, f27, f10, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f13, f27, f10, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f13, f27, f10, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f13, f27, f10, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f13, f27, f10, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f13, f27, f10, f21 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0x3fc00000)
li x13, 0xb18cdca8267cde9a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f14, 0(x2) # load 0x7fffffff from memory into f14
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f2, 0(x2) # load 0x3fc00000 from memory into f2
li x3, 0x63e198bd88e2fbd7 # load x3 with value 0x63e198bd88e2fbd7
sw x3, 0(x2) # store 0x63e198bd88e2fbd7 in memory
flw f31, 0(x2) # load 0x63e198bd88e2fbd7 from memory into f31
fmsub.s f13, f14, f2, f31, dyn # perform operation
fmsub.s f13, f14, f2, f31, rdn # perform operation
fmsub.s f13, f14, f2, f31, rmm # perform operation
fmsub.s f13, f14, f2, f31, rne # perform operation
fmsub.s f13, f14, f2, f31, rtz # perform operation
fmsub.s f13, f14, f2, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f13, f14, f2, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f13, f14, f2, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f13, f14, f2, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f13, f14, f2, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f13, f14, f2, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0xbfc00000)
li x8, 0xfd2a94492d352d21 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f21, 0(x2) # load 0x7fffffff from memory into f21
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f2, 0(x2) # load 0xbfc00000 from memory into f2
li x3, 0x5c8871b2467317e4 # load x3 with value 0x5c8871b2467317e4
sw x3, 0(x2) # store 0x5c8871b2467317e4 in memory
flw f11, 0(x2) # load 0x5c8871b2467317e4 from memory into f11
fmsub.s f8, f21, f2, f11, dyn # perform operation
fmsub.s f8, f21, f2, f11, rdn # perform operation
fmsub.s f8, f21, f2, f11, rmm # perform operation
fmsub.s f8, f21, f2, f11, rne # perform operation
fmsub.s f8, f21, f2, f11, rtz # perform operation
fmsub.s f8, f21, f2, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f8, f21, f2, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f8, f21, f2, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f8, f21, f2, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f8, f21, f2, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f8, f21, f2, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0x40000000)
li x24, 0x29c4518d9af56897 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f27, 0(x2) # load 0x7fffffff from memory into f27
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f13, 0(x2) # load 0x40000000 from memory into f13
li x3, 0xa64cccd968a0a6cb # load x3 with value 0xa64cccd968a0a6cb
sw x3, 0(x2) # store 0xa64cccd968a0a6cb in memory
flw f30, 0(x2) # load 0xa64cccd968a0a6cb from memory into f30
fmsub.s f24, f27, f13, f30, dyn # perform operation
fmsub.s f24, f27, f13, f30, rdn # perform operation
fmsub.s f24, f27, f13, f30, rmm # perform operation
fmsub.s f24, f27, f13, f30, rne # perform operation
fmsub.s f24, f27, f13, f30, rtz # perform operation
fmsub.s f24, f27, f13, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f24, f27, f13, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f24, f27, f13, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f24, f27, f13, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f24, f27, f13, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f24, f27, f13, f30 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0xc0000000)
li x26, 0xcfbf471d7668cb20 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f21, 0(x2) # load 0x7fffffff from memory into f21
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f8, 0(x2) # load 0xc0000000 from memory into f8
li x3, 0xb076943ccc00a784 # load x3 with value 0xb076943ccc00a784
sw x3, 0(x2) # store 0xb076943ccc00a784 in memory
flw f31, 0(x2) # load 0xb076943ccc00a784 from memory into f31
fmsub.s f26, f21, f8, f31, dyn # perform operation
fmsub.s f26, f21, f8, f31, rdn # perform operation
fmsub.s f26, f21, f8, f31, rmm # perform operation
fmsub.s f26, f21, f8, f31, rne # perform operation
fmsub.s f26, f21, f8, f31, rtz # perform operation
fmsub.s f26, f21, f8, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f26, f21, f8, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f26, f21, f8, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f26, f21, f8, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f26, f21, f8, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f26, f21, f8, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0x800000)
li x18, 0xa1b405d5818fa495 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f27, 0(x2) # load 0x7fffffff from memory into f27
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f4, 0(x2) # load 0x00800000 from memory into f4
li x3, 0x770f5df182e002b0 # load x3 with value 0x770f5df182e002b0
sw x3, 0(x2) # store 0x770f5df182e002b0 in memory
flw f15, 0(x2) # load 0x770f5df182e002b0 from memory into f15
fmsub.s f18, f27, f4, f15, dyn # perform operation
fmsub.s f18, f27, f4, f15, rdn # perform operation
fmsub.s f18, f27, f4, f15, rmm # perform operation
fmsub.s f18, f27, f4, f15, rne # perform operation
fmsub.s f18, f27, f4, f15, rtz # perform operation
fmsub.s f18, f27, f4, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f18, f27, f4, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f18, f27, f4, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f18, f27, f4, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f18, f27, f4, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f18, f27, f4, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0x80800000)
li x18, 0x25b6b9bde1b3306c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f14, 0(x2) # load 0x7fffffff from memory into f14
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f16, 0(x2) # load 0x80800000 from memory into f16
li x3, 0xcfc55131bffc6365 # load x3 with value 0xcfc55131bffc6365
sw x3, 0(x2) # store 0xcfc55131bffc6365 in memory
flw f4, 0(x2) # load 0xcfc55131bffc6365 from memory into f4
fmsub.s f18, f14, f16, f4, dyn # perform operation
fmsub.s f18, f14, f16, f4, rdn # perform operation
fmsub.s f18, f14, f16, f4, rmm # perform operation
fmsub.s f18, f14, f16, f4, rne # perform operation
fmsub.s f18, f14, f16, f4, rtz # perform operation
fmsub.s f18, f14, f16, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f18, f14, f16, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f18, f14, f16, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f18, f14, f16, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f18, f14, f16, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f18, f14, f16, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0x7f7fffff)
li x14, 0x7315cc12570e3fb7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f12, 0(x2) # load 0x7fffffff from memory into f12
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f19, 0(x2) # load 0x7f7fffff from memory into f19
li x3, 0xca098815051521ad # load x3 with value 0xca098815051521ad
sw x3, 0(x2) # store 0xca098815051521ad in memory
flw f18, 0(x2) # load 0xca098815051521ad from memory into f18
fmsub.s f14, f12, f19, f18, dyn # perform operation
fmsub.s f14, f12, f19, f18, rdn # perform operation
fmsub.s f14, f12, f19, f18, rmm # perform operation
fmsub.s f14, f12, f19, f18, rne # perform operation
fmsub.s f14, f12, f19, f18, rtz # perform operation
fmsub.s f14, f12, f19, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f14, f12, f19, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f14, f12, f19, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f14, f12, f19, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f14, f12, f19, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f14, f12, f19, f18 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0xff7fffff)
li x4, 0x95ec2950f44c4ffb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f8, 0(x2) # load 0x7fffffff from memory into f8
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f2, 0(x2) # load 0xff7fffff from memory into f2
li x3, 0xbcecc70b78966d80 # load x3 with value 0xbcecc70b78966d80
sw x3, 0(x2) # store 0xbcecc70b78966d80 in memory
flw f31, 0(x2) # load 0xbcecc70b78966d80 from memory into f31
fmsub.s f4, f8, f2, f31, dyn # perform operation
fmsub.s f4, f8, f2, f31, rdn # perform operation
fmsub.s f4, f8, f2, f31, rmm # perform operation
fmsub.s f4, f8, f2, f31, rne # perform operation
fmsub.s f4, f8, f2, f31, rtz # perform operation
fmsub.s f4, f8, f2, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f4, f8, f2, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f4, f8, f2, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f4, f8, f2, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f4, f8, f2, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f4, f8, f2, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0x7fffff)
li x18, 0xc9d526d789a93a30 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f8, 0(x2) # load 0x7fffffff from memory into f8
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f2, 0(x2) # load 0x007fffff from memory into f2
li x3, 0x7478670b545b823 # load x3 with value 0x7478670b545b823
sw x3, 0(x2) # store 0x7478670b545b823 in memory
flw f10, 0(x2) # load 0x7478670b545b823 from memory into f10
fmsub.s f18, f8, f2, f10, dyn # perform operation
fmsub.s f18, f8, f2, f10, rdn # perform operation
fmsub.s f18, f8, f2, f10, rmm # perform operation
fmsub.s f18, f8, f2, f10, rne # perform operation
fmsub.s f18, f8, f2, f10, rtz # perform operation
fmsub.s f18, f8, f2, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f18, f8, f2, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f18, f8, f2, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f18, f8, f2, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f18, f8, f2, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f18, f8, f2, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0x807fffff)
li x6, 0xa7f92ed625fb195f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f1, 0(x2) # load 0x7fffffff from memory into f1
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f30, 0(x2) # load 0x807fffff from memory into f30
li x3, 0x88c9f767689c57ba # load x3 with value 0x88c9f767689c57ba
sw x3, 0(x2) # store 0x88c9f767689c57ba in memory
flw f16, 0(x2) # load 0x88c9f767689c57ba from memory into f16
fmsub.s f6, f1, f30, f16, dyn # perform operation
fmsub.s f6, f1, f30, f16, rdn # perform operation
fmsub.s f6, f1, f30, f16, rmm # perform operation
fmsub.s f6, f1, f30, f16, rne # perform operation
fmsub.s f6, f1, f30, f16, rtz # perform operation
fmsub.s f6, f1, f30, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f6, f1, f30, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f6, f1, f30, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f6, f1, f30, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f6, f1, f30, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f6, f1, f30, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0x400000)
li x17, 0x12f8f912d0302693 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f22, 0(x2) # load 0x7fffffff from memory into f22
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f19, 0(x2) # load 0x00400000 from memory into f19
li x3, 0xf2e5ff17824325be # load x3 with value 0xf2e5ff17824325be
sw x3, 0(x2) # store 0xf2e5ff17824325be in memory
flw f31, 0(x2) # load 0xf2e5ff17824325be from memory into f31
fmsub.s f17, f22, f19, f31, dyn # perform operation
fmsub.s f17, f22, f19, f31, rdn # perform operation
fmsub.s f17, f22, f19, f31, rmm # perform operation
fmsub.s f17, f22, f19, f31, rne # perform operation
fmsub.s f17, f22, f19, f31, rtz # perform operation
fmsub.s f17, f22, f19, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f17, f22, f19, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f17, f22, f19, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f17, f22, f19, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f17, f22, f19, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f17, f22, f19, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0x80400000)
li x9, 0xdb855ab72efb2cef # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f11, 0(x2) # load 0x7fffffff from memory into f11
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f22, 0(x2) # load 0x80400000 from memory into f22
li x3, 0x12c053f44e945f3c # load x3 with value 0x12c053f44e945f3c
sw x3, 0(x2) # store 0x12c053f44e945f3c in memory
flw f21, 0(x2) # load 0x12c053f44e945f3c from memory into f21
fmsub.s f9, f11, f22, f21, dyn # perform operation
fmsub.s f9, f11, f22, f21, rdn # perform operation
fmsub.s f9, f11, f22, f21, rmm # perform operation
fmsub.s f9, f11, f22, f21, rne # perform operation
fmsub.s f9, f11, f22, f21, rtz # perform operation
fmsub.s f9, f11, f22, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f9, f11, f22, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f9, f11, f22, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f9, f11, f22, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f9, f11, f22, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f9, f11, f22, f21 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0x1)
li x7, 0x2395cc9a980b72d9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f20, 0(x2) # load 0x7fffffff from memory into f20
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f13, 0(x2) # load 0x00000001 from memory into f13
li x3, 0x64225995c101621b # load x3 with value 0x64225995c101621b
sw x3, 0(x2) # store 0x64225995c101621b in memory
flw f15, 0(x2) # load 0x64225995c101621b from memory into f15
fmsub.s f7, f20, f13, f15, dyn # perform operation
fmsub.s f7, f20, f13, f15, rdn # perform operation
fmsub.s f7, f20, f13, f15, rmm # perform operation
fmsub.s f7, f20, f13, f15, rne # perform operation
fmsub.s f7, f20, f13, f15, rtz # perform operation
fmsub.s f7, f20, f13, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f7, f20, f13, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f7, f20, f13, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f7, f20, f13, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f7, f20, f13, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f7, f20, f13, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0x80000001)
li x8, 0x4c65c7f678b071c0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f25, 0(x2) # load 0x7fffffff from memory into f25
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f31, 0(x2) # load 0x80000001 from memory into f31
li x3, 0x866260fc01880d11 # load x3 with value 0x866260fc01880d11
sw x3, 0(x2) # store 0x866260fc01880d11 in memory
flw f10, 0(x2) # load 0x866260fc01880d11 from memory into f10
fmsub.s f8, f25, f31, f10, dyn # perform operation
fmsub.s f8, f25, f31, f10, rdn # perform operation
fmsub.s f8, f25, f31, f10, rmm # perform operation
fmsub.s f8, f25, f31, f10, rne # perform operation
fmsub.s f8, f25, f31, f10, rtz # perform operation
fmsub.s f8, f25, f31, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f8, f25, f31, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f8, f25, f31, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f8, f25, f31, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f8, f25, f31, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f8, f25, f31, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0x7f800000)
li x10, 0x90fcad8e60fdf7db # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f7, 0(x2) # load 0x7fffffff from memory into f7
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f1, 0(x2) # load 0x7f800000 from memory into f1
li x3, 0xa0f6254186fd8bcd # load x3 with value 0xa0f6254186fd8bcd
sw x3, 0(x2) # store 0xa0f6254186fd8bcd in memory
flw f15, 0(x2) # load 0xa0f6254186fd8bcd from memory into f15
fmsub.s f10, f7, f1, f15, dyn # perform operation
fmsub.s f10, f7, f1, f15, rdn # perform operation
fmsub.s f10, f7, f1, f15, rmm # perform operation
fmsub.s f10, f7, f1, f15, rne # perform operation
fmsub.s f10, f7, f1, f15, rtz # perform operation
fmsub.s f10, f7, f1, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f10, f7, f1, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f10, f7, f1, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f10, f7, f1, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f10, f7, f1, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f10, f7, f1, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0xff800000)
li x1, 0xc5d1b267083f6ec2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f24, 0(x2) # load 0x7fffffff from memory into f24
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f7, 0(x2) # load 0xff800000 from memory into f7
li x3, 0x5bb379f73af2886a # load x3 with value 0x5bb379f73af2886a
sw x3, 0(x2) # store 0x5bb379f73af2886a in memory
flw f6, 0(x2) # load 0x5bb379f73af2886a from memory into f6
fmsub.s f1, f24, f7, f6, dyn # perform operation
fmsub.s f1, f24, f7, f6, rdn # perform operation
fmsub.s f1, f24, f7, f6, rmm # perform operation
fmsub.s f1, f24, f7, f6, rne # perform operation
fmsub.s f1, f24, f7, f6, rtz # perform operation
fmsub.s f1, f24, f7, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f1, f24, f7, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f1, f24, f7, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f1, f24, f7, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f1, f24, f7, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f1, f24, f7, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0x7fc00000)
li x3, 0x64b50014087cffd2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f14, 0(x2) # load 0x7fffffff from memory into f14
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f10, 0(x2) # load 0x7fc00000 from memory into f10
li x3, 0xa490b916bcf55b1e # load x3 with value 0xa490b916bcf55b1e
sw x3, 0(x2) # store 0xa490b916bcf55b1e in memory
flw f1, 0(x2) # load 0xa490b916bcf55b1e from memory into f1
fmsub.s f3, f14, f10, f1, dyn # perform operation
fmsub.s f3, f14, f10, f1, rdn # perform operation
fmsub.s f3, f14, f10, f1, rmm # perform operation
fmsub.s f3, f14, f10, f1, rne # perform operation
fmsub.s f3, f14, f10, f1, rtz # perform operation
fmsub.s f3, f14, f10, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f3, f14, f10, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f3, f14, f10, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f3, f14, f10, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f3, f14, f10, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f3, f14, f10, f1 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0x7fffffff)
li x4, 0xf0e20097fefdb7b0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f28, 0(x2) # load 0x7fffffff from memory into f28
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f13, 0(x2) # load 0x7fffffff from memory into f13
li x3, 0x1dff8b40fa16d753 # load x3 with value 0x1dff8b40fa16d753
sw x3, 0(x2) # store 0x1dff8b40fa16d753 in memory
flw f26, 0(x2) # load 0x1dff8b40fa16d753 from memory into f26
fmsub.s f4, f28, f13, f26, dyn # perform operation
fmsub.s f4, f28, f13, f26, rdn # perform operation
fmsub.s f4, f28, f13, f26, rmm # perform operation
fmsub.s f4, f28, f13, f26, rne # perform operation
fmsub.s f4, f28, f13, f26, rtz # perform operation
fmsub.s f4, f28, f13, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f4, f28, f13, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f4, f28, f13, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f4, f28, f13, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f4, f28, f13, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f4, f28, f13, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0x7f800001)
li x1, 0x869bf7435e71d544 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f21, 0(x2) # load 0x7fffffff from memory into f21
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f10, 0(x2) # load 0x7f800001 from memory into f10
li x3, 0xe490b73957483c41 # load x3 with value 0xe490b73957483c41
sw x3, 0(x2) # store 0xe490b73957483c41 in memory
flw f4, 0(x2) # load 0xe490b73957483c41 from memory into f4
fmsub.s f1, f21, f10, f4, dyn # perform operation
fmsub.s f1, f21, f10, f4, rdn # perform operation
fmsub.s f1, f21, f10, f4, rmm # perform operation
fmsub.s f1, f21, f10, f4, rne # perform operation
fmsub.s f1, f21, f10, f4, rtz # perform operation
fmsub.s f1, f21, f10, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f1, f21, f10, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f1, f21, f10, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f1, f21, f10, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f1, f21, f10, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f1, f21, f10, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0x7fbfffff)
li x15, 0x08d4b39c2ad14680 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f25, 0(x2) # load 0x7fffffff from memory into f25
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f7, 0(x2) # load 0x7fbfffff from memory into f7
li x3, 0x9180aa3c773189f7 # load x3 with value 0x9180aa3c773189f7
sw x3, 0(x2) # store 0x9180aa3c773189f7 in memory
flw f13, 0(x2) # load 0x9180aa3c773189f7 from memory into f13
fmsub.s f15, f25, f7, f13, dyn # perform operation
fmsub.s f15, f25, f7, f13, rdn # perform operation
fmsub.s f15, f25, f7, f13, rmm # perform operation
fmsub.s f15, f25, f7, f13, rne # perform operation
fmsub.s f15, f25, f7, f13, rtz # perform operation
fmsub.s f15, f25, f7, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f15, f25, f7, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f15, f25, f7, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f15, f25, f7, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f15, f25, f7, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f15, f25, f7, f13 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0x7ef8654f)
li x2, 0x6e45fcd8b60063f6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f7, 0(x2) # load 0x7fffffff from memory into f7
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f21, 0(x2) # load 0x7ef8654f from memory into f21
li x3, 0x3760a1d6882382fc # load x3 with value 0x3760a1d6882382fc
sw x3, 0(x2) # store 0x3760a1d6882382fc in memory
flw f28, 0(x2) # load 0x3760a1d6882382fc from memory into f28
fmsub.s f2, f7, f21, f28, dyn # perform operation
fmsub.s f2, f7, f21, f28, rdn # perform operation
fmsub.s f2, f7, f21, f28, rmm # perform operation
fmsub.s f2, f7, f21, f28, rne # perform operation
fmsub.s f2, f7, f21, f28, rtz # perform operation
fmsub.s f2, f7, f21, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f2, f7, f21, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f2, f7, f21, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f2, f7, f21, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f2, f7, f21, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f2, f7, f21, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0x813d9ab0)
li x29, 0x08a6415410b054e5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f1, 0(x2) # load 0x7fffffff from memory into f1
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f14, 0(x2) # load 0x813d9ab0 from memory into f14
li x3, 0xb9373893768012f4 # load x3 with value 0xb9373893768012f4
sw x3, 0(x2) # store 0xb9373893768012f4 in memory
flw f31, 0(x2) # load 0xb9373893768012f4 from memory into f31
fmsub.s f29, f1, f14, f31, dyn # perform operation
fmsub.s f29, f1, f14, f31, rdn # perform operation
fmsub.s f29, f1, f14, f31, rmm # perform operation
fmsub.s f29, f1, f14, f31, rne # perform operation
fmsub.s f29, f1, f14, f31, rtz # perform operation
fmsub.s f29, f1, f14, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f29, f1, f14, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f29, f1, f14, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f29, f1, f14, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f29, f1, f14, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f29, f1, f14, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0x0)
li x26, 0xbd1c23660da0e089 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f16, 0(x2) # load 0x7f800001 from memory into f16
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f7, 0(x2) # load 0x00000000 from memory into f7
li x3, 0x16fdbe59638b33a3 # load x3 with value 0x16fdbe59638b33a3
sw x3, 0(x2) # store 0x16fdbe59638b33a3 in memory
flw f29, 0(x2) # load 0x16fdbe59638b33a3 from memory into f29
fmsub.s f26, f16, f7, f29, dyn # perform operation
fmsub.s f26, f16, f7, f29, rdn # perform operation
fmsub.s f26, f16, f7, f29, rmm # perform operation
fmsub.s f26, f16, f7, f29, rne # perform operation
fmsub.s f26, f16, f7, f29, rtz # perform operation
fmsub.s f26, f16, f7, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f26, f16, f7, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f26, f16, f7, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f26, f16, f7, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f26, f16, f7, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f26, f16, f7, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0x80000000)
li x18, 0xd5fce16bc3d9ce3f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f16, 0(x2) # load 0x7f800001 from memory into f16
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f15, 0(x2) # load 0x80000000 from memory into f15
li x3, 0x9d2f8214a729a796 # load x3 with value 0x9d2f8214a729a796
sw x3, 0(x2) # store 0x9d2f8214a729a796 in memory
flw f25, 0(x2) # load 0x9d2f8214a729a796 from memory into f25
fmsub.s f18, f16, f15, f25, dyn # perform operation
fmsub.s f18, f16, f15, f25, rdn # perform operation
fmsub.s f18, f16, f15, f25, rmm # perform operation
fmsub.s f18, f16, f15, f25, rne # perform operation
fmsub.s f18, f16, f15, f25, rtz # perform operation
fmsub.s f18, f16, f15, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f18, f16, f15, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f18, f16, f15, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f18, f16, f15, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f18, f16, f15, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f18, f16, f15, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0x3f800000)
li x27, 0xb9ca89ba77628692 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f24, 0(x2) # load 0x7f800001 from memory into f24
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f3, 0(x2) # load 0x3f800000 from memory into f3
li x3, 0x3e1c9cc7c9476fbc # load x3 with value 0x3e1c9cc7c9476fbc
sw x3, 0(x2) # store 0x3e1c9cc7c9476fbc in memory
flw f9, 0(x2) # load 0x3e1c9cc7c9476fbc from memory into f9
fmsub.s f27, f24, f3, f9, dyn # perform operation
fmsub.s f27, f24, f3, f9, rdn # perform operation
fmsub.s f27, f24, f3, f9, rmm # perform operation
fmsub.s f27, f24, f3, f9, rne # perform operation
fmsub.s f27, f24, f3, f9, rtz # perform operation
fmsub.s f27, f24, f3, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f27, f24, f3, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f27, f24, f3, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f27, f24, f3, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f27, f24, f3, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f27, f24, f3, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0xbf800000)
li x9, 0x4f8098cec1b76cf2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f19, 0(x2) # load 0x7f800001 from memory into f19
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f16, 0(x2) # load 0xbf800000 from memory into f16
li x3, 0x55a14d68af692a15 # load x3 with value 0x55a14d68af692a15
sw x3, 0(x2) # store 0x55a14d68af692a15 in memory
flw f6, 0(x2) # load 0x55a14d68af692a15 from memory into f6
fmsub.s f9, f19, f16, f6, dyn # perform operation
fmsub.s f9, f19, f16, f6, rdn # perform operation
fmsub.s f9, f19, f16, f6, rmm # perform operation
fmsub.s f9, f19, f16, f6, rne # perform operation
fmsub.s f9, f19, f16, f6, rtz # perform operation
fmsub.s f9, f19, f16, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f9, f19, f16, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f9, f19, f16, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f9, f19, f16, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f9, f19, f16, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f9, f19, f16, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0x3fc00000)
li x1, 0x3186aae30a8e1281 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f4, 0(x2) # load 0x7f800001 from memory into f4
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f24, 0(x2) # load 0x3fc00000 from memory into f24
li x3, 0x904757a704d7f5d5 # load x3 with value 0x904757a704d7f5d5
sw x3, 0(x2) # store 0x904757a704d7f5d5 in memory
flw f17, 0(x2) # load 0x904757a704d7f5d5 from memory into f17
fmsub.s f1, f4, f24, f17, dyn # perform operation
fmsub.s f1, f4, f24, f17, rdn # perform operation
fmsub.s f1, f4, f24, f17, rmm # perform operation
fmsub.s f1, f4, f24, f17, rne # perform operation
fmsub.s f1, f4, f24, f17, rtz # perform operation
fmsub.s f1, f4, f24, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f1, f4, f24, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f1, f4, f24, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f1, f4, f24, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f1, f4, f24, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f1, f4, f24, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0xbfc00000)
li x28, 0x26aafe3989a23d7f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f11, 0(x2) # load 0x7f800001 from memory into f11
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f4, 0(x2) # load 0xbfc00000 from memory into f4
li x3, 0xad940131bf8f2640 # load x3 with value 0xad940131bf8f2640
sw x3, 0(x2) # store 0xad940131bf8f2640 in memory
flw f14, 0(x2) # load 0xad940131bf8f2640 from memory into f14
fmsub.s f28, f11, f4, f14, dyn # perform operation
fmsub.s f28, f11, f4, f14, rdn # perform operation
fmsub.s f28, f11, f4, f14, rmm # perform operation
fmsub.s f28, f11, f4, f14, rne # perform operation
fmsub.s f28, f11, f4, f14, rtz # perform operation
fmsub.s f28, f11, f4, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f28, f11, f4, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f28, f11, f4, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f28, f11, f4, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f28, f11, f4, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f28, f11, f4, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0x40000000)
li x13, 0xa037e76a5fdaa29f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f3, 0(x2) # load 0x7f800001 from memory into f3
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f24, 0(x2) # load 0x40000000 from memory into f24
li x3, 0x440c868ee71f316f # load x3 with value 0x440c868ee71f316f
sw x3, 0(x2) # store 0x440c868ee71f316f in memory
flw f19, 0(x2) # load 0x440c868ee71f316f from memory into f19
fmsub.s f13, f3, f24, f19, dyn # perform operation
fmsub.s f13, f3, f24, f19, rdn # perform operation
fmsub.s f13, f3, f24, f19, rmm # perform operation
fmsub.s f13, f3, f24, f19, rne # perform operation
fmsub.s f13, f3, f24, f19, rtz # perform operation
fmsub.s f13, f3, f24, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f13, f3, f24, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f13, f3, f24, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f13, f3, f24, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f13, f3, f24, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f13, f3, f24, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0xc0000000)
li x31, 0x58a29c16f765bc90 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f21, 0(x2) # load 0x7f800001 from memory into f21
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f8, 0(x2) # load 0xc0000000 from memory into f8
li x3, 0x404b377f390314d # load x3 with value 0x404b377f390314d
sw x3, 0(x2) # store 0x404b377f390314d in memory
flw f1, 0(x2) # load 0x404b377f390314d from memory into f1
fmsub.s f31, f21, f8, f1, dyn # perform operation
fmsub.s f31, f21, f8, f1, rdn # perform operation
fmsub.s f31, f21, f8, f1, rmm # perform operation
fmsub.s f31, f21, f8, f1, rne # perform operation
fmsub.s f31, f21, f8, f1, rtz # perform operation
fmsub.s f31, f21, f8, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f31, f21, f8, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f31, f21, f8, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f31, f21, f8, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f31, f21, f8, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f31, f21, f8, f1 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0x800000)
li x26, 0x22c36af66a6136f0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f13, 0(x2) # load 0x7f800001 from memory into f13
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f15, 0(x2) # load 0x00800000 from memory into f15
li x3, 0x3e9de6c8ed303021 # load x3 with value 0x3e9de6c8ed303021
sw x3, 0(x2) # store 0x3e9de6c8ed303021 in memory
flw f16, 0(x2) # load 0x3e9de6c8ed303021 from memory into f16
fmsub.s f26, f13, f15, f16, dyn # perform operation
fmsub.s f26, f13, f15, f16, rdn # perform operation
fmsub.s f26, f13, f15, f16, rmm # perform operation
fmsub.s f26, f13, f15, f16, rne # perform operation
fmsub.s f26, f13, f15, f16, rtz # perform operation
fmsub.s f26, f13, f15, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f26, f13, f15, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f26, f13, f15, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f26, f13, f15, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f26, f13, f15, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f26, f13, f15, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0x80800000)
li x28, 0xc26411874d449e83 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f2, 0(x2) # load 0x7f800001 from memory into f2
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f11, 0(x2) # load 0x80800000 from memory into f11
li x3, 0xeaca1bc468386e08 # load x3 with value 0xeaca1bc468386e08
sw x3, 0(x2) # store 0xeaca1bc468386e08 in memory
flw f3, 0(x2) # load 0xeaca1bc468386e08 from memory into f3
fmsub.s f28, f2, f11, f3, dyn # perform operation
fmsub.s f28, f2, f11, f3, rdn # perform operation
fmsub.s f28, f2, f11, f3, rmm # perform operation
fmsub.s f28, f2, f11, f3, rne # perform operation
fmsub.s f28, f2, f11, f3, rtz # perform operation
fmsub.s f28, f2, f11, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f28, f2, f11, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f28, f2, f11, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f28, f2, f11, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f28, f2, f11, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f28, f2, f11, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0x7f7fffff)
li x22, 0x1399bd1d53050cef # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f17, 0(x2) # load 0x7f800001 from memory into f17
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f30, 0(x2) # load 0x7f7fffff from memory into f30
li x3, 0xadffc55a2c95d312 # load x3 with value 0xadffc55a2c95d312
sw x3, 0(x2) # store 0xadffc55a2c95d312 in memory
flw f20, 0(x2) # load 0xadffc55a2c95d312 from memory into f20
fmsub.s f22, f17, f30, f20, dyn # perform operation
fmsub.s f22, f17, f30, f20, rdn # perform operation
fmsub.s f22, f17, f30, f20, rmm # perform operation
fmsub.s f22, f17, f30, f20, rne # perform operation
fmsub.s f22, f17, f30, f20, rtz # perform operation
fmsub.s f22, f17, f30, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f22, f17, f30, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f22, f17, f30, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f22, f17, f30, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f22, f17, f30, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f22, f17, f30, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0xff7fffff)
li x24, 0xd6319fc541a70764 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f10, 0(x2) # load 0x7f800001 from memory into f10
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f28, 0(x2) # load 0xff7fffff from memory into f28
li x3, 0x6ec56784932d7ba6 # load x3 with value 0x6ec56784932d7ba6
sw x3, 0(x2) # store 0x6ec56784932d7ba6 in memory
flw f14, 0(x2) # load 0x6ec56784932d7ba6 from memory into f14
fmsub.s f24, f10, f28, f14, dyn # perform operation
fmsub.s f24, f10, f28, f14, rdn # perform operation
fmsub.s f24, f10, f28, f14, rmm # perform operation
fmsub.s f24, f10, f28, f14, rne # perform operation
fmsub.s f24, f10, f28, f14, rtz # perform operation
fmsub.s f24, f10, f28, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f24, f10, f28, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f24, f10, f28, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f24, f10, f28, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f24, f10, f28, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f24, f10, f28, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0x7fffff)
li x13, 0xead185a4812432f9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f23, 0(x2) # load 0x7f800001 from memory into f23
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f15, 0(x2) # load 0x007fffff from memory into f15
li x3, 0xdc8cf6306ffdf38b # load x3 with value 0xdc8cf6306ffdf38b
sw x3, 0(x2) # store 0xdc8cf6306ffdf38b in memory
flw f19, 0(x2) # load 0xdc8cf6306ffdf38b from memory into f19
fmsub.s f13, f23, f15, f19, dyn # perform operation
fmsub.s f13, f23, f15, f19, rdn # perform operation
fmsub.s f13, f23, f15, f19, rmm # perform operation
fmsub.s f13, f23, f15, f19, rne # perform operation
fmsub.s f13, f23, f15, f19, rtz # perform operation
fmsub.s f13, f23, f15, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f13, f23, f15, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f13, f23, f15, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f13, f23, f15, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f13, f23, f15, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f13, f23, f15, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0x807fffff)
li x31, 0xd312ccca682672f9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f14, 0(x2) # load 0x7f800001 from memory into f14
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f26, 0(x2) # load 0x807fffff from memory into f26
li x3, 0x1e8e97823c4d30a1 # load x3 with value 0x1e8e97823c4d30a1
sw x3, 0(x2) # store 0x1e8e97823c4d30a1 in memory
flw f7, 0(x2) # load 0x1e8e97823c4d30a1 from memory into f7
fmsub.s f31, f14, f26, f7, dyn # perform operation
fmsub.s f31, f14, f26, f7, rdn # perform operation
fmsub.s f31, f14, f26, f7, rmm # perform operation
fmsub.s f31, f14, f26, f7, rne # perform operation
fmsub.s f31, f14, f26, f7, rtz # perform operation
fmsub.s f31, f14, f26, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f31, f14, f26, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f31, f14, f26, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f31, f14, f26, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f31, f14, f26, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f31, f14, f26, f7 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0x400000)
li x13, 0xa0486fc2009a00b9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f12, 0(x2) # load 0x7f800001 from memory into f12
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f19, 0(x2) # load 0x00400000 from memory into f19
li x3, 0x9b6ee9cd6300718e # load x3 with value 0x9b6ee9cd6300718e
sw x3, 0(x2) # store 0x9b6ee9cd6300718e in memory
flw f7, 0(x2) # load 0x9b6ee9cd6300718e from memory into f7
fmsub.s f13, f12, f19, f7, dyn # perform operation
fmsub.s f13, f12, f19, f7, rdn # perform operation
fmsub.s f13, f12, f19, f7, rmm # perform operation
fmsub.s f13, f12, f19, f7, rne # perform operation
fmsub.s f13, f12, f19, f7, rtz # perform operation
fmsub.s f13, f12, f19, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f13, f12, f19, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f13, f12, f19, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f13, f12, f19, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f13, f12, f19, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f13, f12, f19, f7 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0x80400000)
li x20, 0xb53260f4c17355d1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f11, 0(x2) # load 0x7f800001 from memory into f11
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f6, 0(x2) # load 0x80400000 from memory into f6
li x3, 0x5ca2d4460b5b03bd # load x3 with value 0x5ca2d4460b5b03bd
sw x3, 0(x2) # store 0x5ca2d4460b5b03bd in memory
flw f12, 0(x2) # load 0x5ca2d4460b5b03bd from memory into f12
fmsub.s f20, f11, f6, f12, dyn # perform operation
fmsub.s f20, f11, f6, f12, rdn # perform operation
fmsub.s f20, f11, f6, f12, rmm # perform operation
fmsub.s f20, f11, f6, f12, rne # perform operation
fmsub.s f20, f11, f6, f12, rtz # perform operation
fmsub.s f20, f11, f6, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f20, f11, f6, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f20, f11, f6, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f20, f11, f6, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f20, f11, f6, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f20, f11, f6, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0x1)
li x9, 0x8e7d009d7d15bc0a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f4, 0(x2) # load 0x7f800001 from memory into f4
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f10, 0(x2) # load 0x00000001 from memory into f10
li x3, 0xd03595a745779cca # load x3 with value 0xd03595a745779cca
sw x3, 0(x2) # store 0xd03595a745779cca in memory
flw f11, 0(x2) # load 0xd03595a745779cca from memory into f11
fmsub.s f9, f4, f10, f11, dyn # perform operation
fmsub.s f9, f4, f10, f11, rdn # perform operation
fmsub.s f9, f4, f10, f11, rmm # perform operation
fmsub.s f9, f4, f10, f11, rne # perform operation
fmsub.s f9, f4, f10, f11, rtz # perform operation
fmsub.s f9, f4, f10, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f9, f4, f10, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f9, f4, f10, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f9, f4, f10, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f9, f4, f10, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f9, f4, f10, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0x80000001)
li x11, 0x92a7c6f45e5b941d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f14, 0(x2) # load 0x7f800001 from memory into f14
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f22, 0(x2) # load 0x80000001 from memory into f22
li x3, 0x3fd0dd29e685b424 # load x3 with value 0x3fd0dd29e685b424
sw x3, 0(x2) # store 0x3fd0dd29e685b424 in memory
flw f7, 0(x2) # load 0x3fd0dd29e685b424 from memory into f7
fmsub.s f11, f14, f22, f7, dyn # perform operation
fmsub.s f11, f14, f22, f7, rdn # perform operation
fmsub.s f11, f14, f22, f7, rmm # perform operation
fmsub.s f11, f14, f22, f7, rne # perform operation
fmsub.s f11, f14, f22, f7, rtz # perform operation
fmsub.s f11, f14, f22, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f11, f14, f22, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f11, f14, f22, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f11, f14, f22, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f11, f14, f22, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f11, f14, f22, f7 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0x7f800000)
li x22, 0x76ac6bc0e8b2ddba # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f16, 0(x2) # load 0x7f800001 from memory into f16
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f30, 0(x2) # load 0x7f800000 from memory into f30
li x3, 0x5f5a7cda7023149c # load x3 with value 0x5f5a7cda7023149c
sw x3, 0(x2) # store 0x5f5a7cda7023149c in memory
flw f12, 0(x2) # load 0x5f5a7cda7023149c from memory into f12
fmsub.s f22, f16, f30, f12, dyn # perform operation
fmsub.s f22, f16, f30, f12, rdn # perform operation
fmsub.s f22, f16, f30, f12, rmm # perform operation
fmsub.s f22, f16, f30, f12, rne # perform operation
fmsub.s f22, f16, f30, f12, rtz # perform operation
fmsub.s f22, f16, f30, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f22, f16, f30, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f22, f16, f30, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f22, f16, f30, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f22, f16, f30, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f22, f16, f30, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0xff800000)
li x1, 0xab6bd6778586deb2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f31, 0(x2) # load 0x7f800001 from memory into f31
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f8, 0(x2) # load 0xff800000 from memory into f8
li x3, 0xe3a15764a340ae80 # load x3 with value 0xe3a15764a340ae80
sw x3, 0(x2) # store 0xe3a15764a340ae80 in memory
flw f12, 0(x2) # load 0xe3a15764a340ae80 from memory into f12
fmsub.s f1, f31, f8, f12, dyn # perform operation
fmsub.s f1, f31, f8, f12, rdn # perform operation
fmsub.s f1, f31, f8, f12, rmm # perform operation
fmsub.s f1, f31, f8, f12, rne # perform operation
fmsub.s f1, f31, f8, f12, rtz # perform operation
fmsub.s f1, f31, f8, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f1, f31, f8, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f1, f31, f8, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f1, f31, f8, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f1, f31, f8, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f1, f31, f8, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0x7fc00000)
li x4, 0x3d97ff9c9c34cade # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f15, 0(x2) # load 0x7f800001 from memory into f15
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f13, 0(x2) # load 0x7fc00000 from memory into f13
li x3, 0x19133b88a61c1971 # load x3 with value 0x19133b88a61c1971
sw x3, 0(x2) # store 0x19133b88a61c1971 in memory
flw f3, 0(x2) # load 0x19133b88a61c1971 from memory into f3
fmsub.s f4, f15, f13, f3, dyn # perform operation
fmsub.s f4, f15, f13, f3, rdn # perform operation
fmsub.s f4, f15, f13, f3, rmm # perform operation
fmsub.s f4, f15, f13, f3, rne # perform operation
fmsub.s f4, f15, f13, f3, rtz # perform operation
fmsub.s f4, f15, f13, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f4, f15, f13, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f4, f15, f13, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f4, f15, f13, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f4, f15, f13, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f4, f15, f13, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0x7fffffff)
li x8, 0x5c25c02542801deb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f28, 0(x2) # load 0x7f800001 from memory into f28
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f6, 0(x2) # load 0x7fffffff from memory into f6
li x3, 0x676730b81732dced # load x3 with value 0x676730b81732dced
sw x3, 0(x2) # store 0x676730b81732dced in memory
flw f23, 0(x2) # load 0x676730b81732dced from memory into f23
fmsub.s f8, f28, f6, f23, dyn # perform operation
fmsub.s f8, f28, f6, f23, rdn # perform operation
fmsub.s f8, f28, f6, f23, rmm # perform operation
fmsub.s f8, f28, f6, f23, rne # perform operation
fmsub.s f8, f28, f6, f23, rtz # perform operation
fmsub.s f8, f28, f6, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f8, f28, f6, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f8, f28, f6, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f8, f28, f6, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f8, f28, f6, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f8, f28, f6, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0x7f800001)
li x10, 0x731ce1543564e2e2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f6, 0(x2) # load 0x7f800001 from memory into f6
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f18, 0(x2) # load 0x7f800001 from memory into f18
li x3, 0x8f538517a0a6024e # load x3 with value 0x8f538517a0a6024e
sw x3, 0(x2) # store 0x8f538517a0a6024e in memory
flw f21, 0(x2) # load 0x8f538517a0a6024e from memory into f21
fmsub.s f10, f6, f18, f21, dyn # perform operation
fmsub.s f10, f6, f18, f21, rdn # perform operation
fmsub.s f10, f6, f18, f21, rmm # perform operation
fmsub.s f10, f6, f18, f21, rne # perform operation
fmsub.s f10, f6, f18, f21, rtz # perform operation
fmsub.s f10, f6, f18, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f10, f6, f18, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f10, f6, f18, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f10, f6, f18, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f10, f6, f18, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f10, f6, f18, f21 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0x7fbfffff)
li x27, 0xe7270019756137ac # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f15, 0(x2) # load 0x7f800001 from memory into f15
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f17, 0(x2) # load 0x7fbfffff from memory into f17
li x3, 0x769d3ff7f6ff6a67 # load x3 with value 0x769d3ff7f6ff6a67
sw x3, 0(x2) # store 0x769d3ff7f6ff6a67 in memory
flw f24, 0(x2) # load 0x769d3ff7f6ff6a67 from memory into f24
fmsub.s f27, f15, f17, f24, dyn # perform operation
fmsub.s f27, f15, f17, f24, rdn # perform operation
fmsub.s f27, f15, f17, f24, rmm # perform operation
fmsub.s f27, f15, f17, f24, rne # perform operation
fmsub.s f27, f15, f17, f24, rtz # perform operation
fmsub.s f27, f15, f17, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f27, f15, f17, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f27, f15, f17, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f27, f15, f17, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f27, f15, f17, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f27, f15, f17, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0x7ef8654f)
li x9, 0x8c3147d78f777df1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f5, 0(x2) # load 0x7f800001 from memory into f5
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f4, 0(x2) # load 0x7ef8654f from memory into f4
li x3, 0xc6e86b767c0f0afe # load x3 with value 0xc6e86b767c0f0afe
sw x3, 0(x2) # store 0xc6e86b767c0f0afe in memory
flw f6, 0(x2) # load 0xc6e86b767c0f0afe from memory into f6
fmsub.s f9, f5, f4, f6, dyn # perform operation
fmsub.s f9, f5, f4, f6, rdn # perform operation
fmsub.s f9, f5, f4, f6, rmm # perform operation
fmsub.s f9, f5, f4, f6, rne # perform operation
fmsub.s f9, f5, f4, f6, rtz # perform operation
fmsub.s f9, f5, f4, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f9, f5, f4, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f9, f5, f4, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f9, f5, f4, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f9, f5, f4, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f9, f5, f4, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0x813d9ab0)
li x30, 0x1653ce3a4ba95ba5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f27, 0(x2) # load 0x7f800001 from memory into f27
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f19, 0(x2) # load 0x813d9ab0 from memory into f19
li x3, 0xc8f21a4a86f00125 # load x3 with value 0xc8f21a4a86f00125
sw x3, 0(x2) # store 0xc8f21a4a86f00125 in memory
flw f31, 0(x2) # load 0xc8f21a4a86f00125 from memory into f31
fmsub.s f30, f27, f19, f31, dyn # perform operation
fmsub.s f30, f27, f19, f31, rdn # perform operation
fmsub.s f30, f27, f19, f31, rmm # perform operation
fmsub.s f30, f27, f19, f31, rne # perform operation
fmsub.s f30, f27, f19, f31, rtz # perform operation
fmsub.s f30, f27, f19, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f30, f27, f19, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f30, f27, f19, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f30, f27, f19, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f30, f27, f19, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f30, f27, f19, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0x0)
li x6, 0x041a4cf867328c83 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f5, 0(x2) # load 0x7fbfffff from memory into f5
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f25, 0(x2) # load 0x00000000 from memory into f25
li x3, 0xf42d7683610326c8 # load x3 with value 0xf42d7683610326c8
sw x3, 0(x2) # store 0xf42d7683610326c8 in memory
flw f20, 0(x2) # load 0xf42d7683610326c8 from memory into f20
fmsub.s f6, f5, f25, f20, dyn # perform operation
fmsub.s f6, f5, f25, f20, rdn # perform operation
fmsub.s f6, f5, f25, f20, rmm # perform operation
fmsub.s f6, f5, f25, f20, rne # perform operation
fmsub.s f6, f5, f25, f20, rtz # perform operation
fmsub.s f6, f5, f25, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f6, f5, f25, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f6, f5, f25, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f6, f5, f25, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f6, f5, f25, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f6, f5, f25, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0x80000000)
li x19, 0xe08b112cd0b20f58 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f26, 0(x2) # load 0x7fbfffff from memory into f26
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f25, 0(x2) # load 0x80000000 from memory into f25
li x3, 0xdd1a38224333f366 # load x3 with value 0xdd1a38224333f366
sw x3, 0(x2) # store 0xdd1a38224333f366 in memory
flw f17, 0(x2) # load 0xdd1a38224333f366 from memory into f17
fmsub.s f19, f26, f25, f17, dyn # perform operation
fmsub.s f19, f26, f25, f17, rdn # perform operation
fmsub.s f19, f26, f25, f17, rmm # perform operation
fmsub.s f19, f26, f25, f17, rne # perform operation
fmsub.s f19, f26, f25, f17, rtz # perform operation
fmsub.s f19, f26, f25, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f19, f26, f25, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f19, f26, f25, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f19, f26, f25, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f19, f26, f25, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f19, f26, f25, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0x3f800000)
li x18, 0xe904e4693f8c7a50 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f20, 0(x2) # load 0x7fbfffff from memory into f20
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f5, 0(x2) # load 0x3f800000 from memory into f5
li x3, 0xd9684c477f686019 # load x3 with value 0xd9684c477f686019
sw x3, 0(x2) # store 0xd9684c477f686019 in memory
flw f23, 0(x2) # load 0xd9684c477f686019 from memory into f23
fmsub.s f18, f20, f5, f23, dyn # perform operation
fmsub.s f18, f20, f5, f23, rdn # perform operation
fmsub.s f18, f20, f5, f23, rmm # perform operation
fmsub.s f18, f20, f5, f23, rne # perform operation
fmsub.s f18, f20, f5, f23, rtz # perform operation
fmsub.s f18, f20, f5, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f18, f20, f5, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f18, f20, f5, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f18, f20, f5, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f18, f20, f5, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f18, f20, f5, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0xbf800000)
li x25, 0x5e7c0b1f4ec78bee # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f6, 0(x2) # load 0x7fbfffff from memory into f6
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f22, 0(x2) # load 0xbf800000 from memory into f22
li x3, 0xaf80f5cb294cb9ce # load x3 with value 0xaf80f5cb294cb9ce
sw x3, 0(x2) # store 0xaf80f5cb294cb9ce in memory
flw f24, 0(x2) # load 0xaf80f5cb294cb9ce from memory into f24
fmsub.s f25, f6, f22, f24, dyn # perform operation
fmsub.s f25, f6, f22, f24, rdn # perform operation
fmsub.s f25, f6, f22, f24, rmm # perform operation
fmsub.s f25, f6, f22, f24, rne # perform operation
fmsub.s f25, f6, f22, f24, rtz # perform operation
fmsub.s f25, f6, f22, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f25, f6, f22, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f25, f6, f22, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f25, f6, f22, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f25, f6, f22, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f25, f6, f22, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0x3fc00000)
li x30, 0xac43438de7c0999e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f7, 0(x2) # load 0x7fbfffff from memory into f7
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f2, 0(x2) # load 0x3fc00000 from memory into f2
li x3, 0x30abe127c571761c # load x3 with value 0x30abe127c571761c
sw x3, 0(x2) # store 0x30abe127c571761c in memory
flw f25, 0(x2) # load 0x30abe127c571761c from memory into f25
fmsub.s f30, f7, f2, f25, dyn # perform operation
fmsub.s f30, f7, f2, f25, rdn # perform operation
fmsub.s f30, f7, f2, f25, rmm # perform operation
fmsub.s f30, f7, f2, f25, rne # perform operation
fmsub.s f30, f7, f2, f25, rtz # perform operation
fmsub.s f30, f7, f2, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f30, f7, f2, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f30, f7, f2, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f30, f7, f2, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f30, f7, f2, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f30, f7, f2, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0xbfc00000)
li x5, 0x967f36a21f6939d3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f23, 0(x2) # load 0x7fbfffff from memory into f23
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f17, 0(x2) # load 0xbfc00000 from memory into f17
li x3, 0xbb158aaccaa5b448 # load x3 with value 0xbb158aaccaa5b448
sw x3, 0(x2) # store 0xbb158aaccaa5b448 in memory
flw f9, 0(x2) # load 0xbb158aaccaa5b448 from memory into f9
fmsub.s f5, f23, f17, f9, dyn # perform operation
fmsub.s f5, f23, f17, f9, rdn # perform operation
fmsub.s f5, f23, f17, f9, rmm # perform operation
fmsub.s f5, f23, f17, f9, rne # perform operation
fmsub.s f5, f23, f17, f9, rtz # perform operation
fmsub.s f5, f23, f17, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f5, f23, f17, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f5, f23, f17, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f5, f23, f17, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f5, f23, f17, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f5, f23, f17, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0x40000000)
li x19, 0x81a93aaf766cf6bd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f25, 0(x2) # load 0x7fbfffff from memory into f25
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f29, 0(x2) # load 0x40000000 from memory into f29
li x3, 0x5744c1c1ab34effa # load x3 with value 0x5744c1c1ab34effa
sw x3, 0(x2) # store 0x5744c1c1ab34effa in memory
flw f13, 0(x2) # load 0x5744c1c1ab34effa from memory into f13
fmsub.s f19, f25, f29, f13, dyn # perform operation
fmsub.s f19, f25, f29, f13, rdn # perform operation
fmsub.s f19, f25, f29, f13, rmm # perform operation
fmsub.s f19, f25, f29, f13, rne # perform operation
fmsub.s f19, f25, f29, f13, rtz # perform operation
fmsub.s f19, f25, f29, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f19, f25, f29, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f19, f25, f29, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f19, f25, f29, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f19, f25, f29, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f19, f25, f29, f13 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0xc0000000)
li x17, 0xaed146e3f2a89a86 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f12, 0(x2) # load 0x7fbfffff from memory into f12
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f29, 0(x2) # load 0xc0000000 from memory into f29
li x3, 0xa231e5693d291eaa # load x3 with value 0xa231e5693d291eaa
sw x3, 0(x2) # store 0xa231e5693d291eaa in memory
flw f30, 0(x2) # load 0xa231e5693d291eaa from memory into f30
fmsub.s f17, f12, f29, f30, dyn # perform operation
fmsub.s f17, f12, f29, f30, rdn # perform operation
fmsub.s f17, f12, f29, f30, rmm # perform operation
fmsub.s f17, f12, f29, f30, rne # perform operation
fmsub.s f17, f12, f29, f30, rtz # perform operation
fmsub.s f17, f12, f29, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f17, f12, f29, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f17, f12, f29, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f17, f12, f29, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f17, f12, f29, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f17, f12, f29, f30 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0x800000)
li x9, 0xf2dd006ede5c908c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f4, 0(x2) # load 0x7fbfffff from memory into f4
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f19, 0(x2) # load 0x00800000 from memory into f19
li x3, 0xb23175c9b6369bc3 # load x3 with value 0xb23175c9b6369bc3
sw x3, 0(x2) # store 0xb23175c9b6369bc3 in memory
flw f1, 0(x2) # load 0xb23175c9b6369bc3 from memory into f1
fmsub.s f9, f4, f19, f1, dyn # perform operation
fmsub.s f9, f4, f19, f1, rdn # perform operation
fmsub.s f9, f4, f19, f1, rmm # perform operation
fmsub.s f9, f4, f19, f1, rne # perform operation
fmsub.s f9, f4, f19, f1, rtz # perform operation
fmsub.s f9, f4, f19, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f9, f4, f19, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f9, f4, f19, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f9, f4, f19, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f9, f4, f19, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f9, f4, f19, f1 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0x80800000)
li x3, 0x2f00ee84e66ed389 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f24, 0(x2) # load 0x7fbfffff from memory into f24
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f4, 0(x2) # load 0x80800000 from memory into f4
li x3, 0xdaa3e2f0f4858bb7 # load x3 with value 0xdaa3e2f0f4858bb7
sw x3, 0(x2) # store 0xdaa3e2f0f4858bb7 in memory
flw f10, 0(x2) # load 0xdaa3e2f0f4858bb7 from memory into f10
fmsub.s f3, f24, f4, f10, dyn # perform operation
fmsub.s f3, f24, f4, f10, rdn # perform operation
fmsub.s f3, f24, f4, f10, rmm # perform operation
fmsub.s f3, f24, f4, f10, rne # perform operation
fmsub.s f3, f24, f4, f10, rtz # perform operation
fmsub.s f3, f24, f4, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f3, f24, f4, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f3, f24, f4, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f3, f24, f4, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f3, f24, f4, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f3, f24, f4, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0x7f7fffff)
li x10, 0x9c7740de1c8ff1a1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f16, 0(x2) # load 0x7fbfffff from memory into f16
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f26, 0(x2) # load 0x7f7fffff from memory into f26
li x3, 0x82453ddebefd4f61 # load x3 with value 0x82453ddebefd4f61
sw x3, 0(x2) # store 0x82453ddebefd4f61 in memory
flw f31, 0(x2) # load 0x82453ddebefd4f61 from memory into f31
fmsub.s f10, f16, f26, f31, dyn # perform operation
fmsub.s f10, f16, f26, f31, rdn # perform operation
fmsub.s f10, f16, f26, f31, rmm # perform operation
fmsub.s f10, f16, f26, f31, rne # perform operation
fmsub.s f10, f16, f26, f31, rtz # perform operation
fmsub.s f10, f16, f26, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f10, f16, f26, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f10, f16, f26, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f10, f16, f26, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f10, f16, f26, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f10, f16, f26, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0xff7fffff)
li x21, 0x74edaa55570c5edd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f12, 0(x2) # load 0x7fbfffff from memory into f12
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f11, 0(x2) # load 0xff7fffff from memory into f11
li x3, 0x500725619fff7ae9 # load x3 with value 0x500725619fff7ae9
sw x3, 0(x2) # store 0x500725619fff7ae9 in memory
flw f15, 0(x2) # load 0x500725619fff7ae9 from memory into f15
fmsub.s f21, f12, f11, f15, dyn # perform operation
fmsub.s f21, f12, f11, f15, rdn # perform operation
fmsub.s f21, f12, f11, f15, rmm # perform operation
fmsub.s f21, f12, f11, f15, rne # perform operation
fmsub.s f21, f12, f11, f15, rtz # perform operation
fmsub.s f21, f12, f11, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f21, f12, f11, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f21, f12, f11, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f21, f12, f11, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f21, f12, f11, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f21, f12, f11, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0x7fffff)
li x10, 0xdc19456ab0bcfa2f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f31, 0(x2) # load 0x7fbfffff from memory into f31
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f6, 0(x2) # load 0x007fffff from memory into f6
li x3, 0x9a7b2b4bc7a125b6 # load x3 with value 0x9a7b2b4bc7a125b6
sw x3, 0(x2) # store 0x9a7b2b4bc7a125b6 in memory
flw f2, 0(x2) # load 0x9a7b2b4bc7a125b6 from memory into f2
fmsub.s f10, f31, f6, f2, dyn # perform operation
fmsub.s f10, f31, f6, f2, rdn # perform operation
fmsub.s f10, f31, f6, f2, rmm # perform operation
fmsub.s f10, f31, f6, f2, rne # perform operation
fmsub.s f10, f31, f6, f2, rtz # perform operation
fmsub.s f10, f31, f6, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f10, f31, f6, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f10, f31, f6, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f10, f31, f6, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f10, f31, f6, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f10, f31, f6, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0x807fffff)
li x22, 0xd54d7dc4de7d42e5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f14, 0(x2) # load 0x7fbfffff from memory into f14
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f1, 0(x2) # load 0x807fffff from memory into f1
li x3, 0x1be14bd1e2adb3ce # load x3 with value 0x1be14bd1e2adb3ce
sw x3, 0(x2) # store 0x1be14bd1e2adb3ce in memory
flw f26, 0(x2) # load 0x1be14bd1e2adb3ce from memory into f26
fmsub.s f22, f14, f1, f26, dyn # perform operation
fmsub.s f22, f14, f1, f26, rdn # perform operation
fmsub.s f22, f14, f1, f26, rmm # perform operation
fmsub.s f22, f14, f1, f26, rne # perform operation
fmsub.s f22, f14, f1, f26, rtz # perform operation
fmsub.s f22, f14, f1, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f22, f14, f1, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f22, f14, f1, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f22, f14, f1, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f22, f14, f1, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f22, f14, f1, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0x400000)
li x26, 0x6284ab52b63661b2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f17, 0(x2) # load 0x7fbfffff from memory into f17
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f9, 0(x2) # load 0x00400000 from memory into f9
li x3, 0x2ca22573c2daf2c4 # load x3 with value 0x2ca22573c2daf2c4
sw x3, 0(x2) # store 0x2ca22573c2daf2c4 in memory
flw f3, 0(x2) # load 0x2ca22573c2daf2c4 from memory into f3
fmsub.s f26, f17, f9, f3, dyn # perform operation
fmsub.s f26, f17, f9, f3, rdn # perform operation
fmsub.s f26, f17, f9, f3, rmm # perform operation
fmsub.s f26, f17, f9, f3, rne # perform operation
fmsub.s f26, f17, f9, f3, rtz # perform operation
fmsub.s f26, f17, f9, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f26, f17, f9, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f26, f17, f9, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f26, f17, f9, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f26, f17, f9, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f26, f17, f9, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0x80400000)
li x14, 0xeb1cd51e5bbc8137 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f17, 0(x2) # load 0x7fbfffff from memory into f17
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f4, 0(x2) # load 0x80400000 from memory into f4
li x3, 0x7b1b9fdf8798b45e # load x3 with value 0x7b1b9fdf8798b45e
sw x3, 0(x2) # store 0x7b1b9fdf8798b45e in memory
flw f12, 0(x2) # load 0x7b1b9fdf8798b45e from memory into f12
fmsub.s f14, f17, f4, f12, dyn # perform operation
fmsub.s f14, f17, f4, f12, rdn # perform operation
fmsub.s f14, f17, f4, f12, rmm # perform operation
fmsub.s f14, f17, f4, f12, rne # perform operation
fmsub.s f14, f17, f4, f12, rtz # perform operation
fmsub.s f14, f17, f4, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f14, f17, f4, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f14, f17, f4, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f14, f17, f4, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f14, f17, f4, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f14, f17, f4, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0x1)
li x11, 0xa98b1fdc7d16da37 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f26, 0(x2) # load 0x7fbfffff from memory into f26
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f21, 0(x2) # load 0x00000001 from memory into f21
li x3, 0x3ca1f5b155b17d3e # load x3 with value 0x3ca1f5b155b17d3e
sw x3, 0(x2) # store 0x3ca1f5b155b17d3e in memory
flw f16, 0(x2) # load 0x3ca1f5b155b17d3e from memory into f16
fmsub.s f11, f26, f21, f16, dyn # perform operation
fmsub.s f11, f26, f21, f16, rdn # perform operation
fmsub.s f11, f26, f21, f16, rmm # perform operation
fmsub.s f11, f26, f21, f16, rne # perform operation
fmsub.s f11, f26, f21, f16, rtz # perform operation
fmsub.s f11, f26, f21, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f11, f26, f21, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f11, f26, f21, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f11, f26, f21, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f11, f26, f21, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f11, f26, f21, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0x80000001)
li x13, 0xbee840a56d2780ab # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f12, 0(x2) # load 0x7fbfffff from memory into f12
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f1, 0(x2) # load 0x80000001 from memory into f1
li x3, 0x2a62f60aab4244c8 # load x3 with value 0x2a62f60aab4244c8
sw x3, 0(x2) # store 0x2a62f60aab4244c8 in memory
flw f20, 0(x2) # load 0x2a62f60aab4244c8 from memory into f20
fmsub.s f13, f12, f1, f20, dyn # perform operation
fmsub.s f13, f12, f1, f20, rdn # perform operation
fmsub.s f13, f12, f1, f20, rmm # perform operation
fmsub.s f13, f12, f1, f20, rne # perform operation
fmsub.s f13, f12, f1, f20, rtz # perform operation
fmsub.s f13, f12, f1, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f13, f12, f1, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f13, f12, f1, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f13, f12, f1, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f13, f12, f1, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f13, f12, f1, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0x7f800000)
li x24, 0x1db584d72231d601 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f4, 0(x2) # load 0x7fbfffff from memory into f4
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f13, 0(x2) # load 0x7f800000 from memory into f13
li x3, 0x8e0e0ad7daa04c4b # load x3 with value 0x8e0e0ad7daa04c4b
sw x3, 0(x2) # store 0x8e0e0ad7daa04c4b in memory
flw f1, 0(x2) # load 0x8e0e0ad7daa04c4b from memory into f1
fmsub.s f24, f4, f13, f1, dyn # perform operation
fmsub.s f24, f4, f13, f1, rdn # perform operation
fmsub.s f24, f4, f13, f1, rmm # perform operation
fmsub.s f24, f4, f13, f1, rne # perform operation
fmsub.s f24, f4, f13, f1, rtz # perform operation
fmsub.s f24, f4, f13, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f24, f4, f13, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f24, f4, f13, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f24, f4, f13, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f24, f4, f13, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f24, f4, f13, f1 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0xff800000)
li x28, 0x55e0466961f39ed8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f6, 0(x2) # load 0x7fbfffff from memory into f6
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f21, 0(x2) # load 0xff800000 from memory into f21
li x3, 0xc7a8cd0ebecf71d8 # load x3 with value 0xc7a8cd0ebecf71d8
sw x3, 0(x2) # store 0xc7a8cd0ebecf71d8 in memory
flw f15, 0(x2) # load 0xc7a8cd0ebecf71d8 from memory into f15
fmsub.s f28, f6, f21, f15, dyn # perform operation
fmsub.s f28, f6, f21, f15, rdn # perform operation
fmsub.s f28, f6, f21, f15, rmm # perform operation
fmsub.s f28, f6, f21, f15, rne # perform operation
fmsub.s f28, f6, f21, f15, rtz # perform operation
fmsub.s f28, f6, f21, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f28, f6, f21, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f28, f6, f21, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f28, f6, f21, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f28, f6, f21, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f28, f6, f21, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0x7fc00000)
li x12, 0x5c1e0847273569da # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f1, 0(x2) # load 0x7fbfffff from memory into f1
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f2, 0(x2) # load 0x7fc00000 from memory into f2
li x3, 0xf5564fccb549b406 # load x3 with value 0xf5564fccb549b406
sw x3, 0(x2) # store 0xf5564fccb549b406 in memory
flw f23, 0(x2) # load 0xf5564fccb549b406 from memory into f23
fmsub.s f12, f1, f2, f23, dyn # perform operation
fmsub.s f12, f1, f2, f23, rdn # perform operation
fmsub.s f12, f1, f2, f23, rmm # perform operation
fmsub.s f12, f1, f2, f23, rne # perform operation
fmsub.s f12, f1, f2, f23, rtz # perform operation
fmsub.s f12, f1, f2, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f12, f1, f2, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f12, f1, f2, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f12, f1, f2, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f12, f1, f2, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f12, f1, f2, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0x7fffffff)
li x20, 0x7854804ca13a2bdf # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f26, 0(x2) # load 0x7fbfffff from memory into f26
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f6, 0(x2) # load 0x7fffffff from memory into f6
li x3, 0xde9f1770d8103503 # load x3 with value 0xde9f1770d8103503
sw x3, 0(x2) # store 0xde9f1770d8103503 in memory
flw f11, 0(x2) # load 0xde9f1770d8103503 from memory into f11
fmsub.s f20, f26, f6, f11, dyn # perform operation
fmsub.s f20, f26, f6, f11, rdn # perform operation
fmsub.s f20, f26, f6, f11, rmm # perform operation
fmsub.s f20, f26, f6, f11, rne # perform operation
fmsub.s f20, f26, f6, f11, rtz # perform operation
fmsub.s f20, f26, f6, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f20, f26, f6, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f20, f26, f6, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f20, f26, f6, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f20, f26, f6, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f20, f26, f6, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0x7f800001)
li x19, 0xe93c67e9089cbbba # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f21, 0(x2) # load 0x7fbfffff from memory into f21
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f13, 0(x2) # load 0x7f800001 from memory into f13
li x3, 0x5b42fd7fae2dfa33 # load x3 with value 0x5b42fd7fae2dfa33
sw x3, 0(x2) # store 0x5b42fd7fae2dfa33 in memory
flw f10, 0(x2) # load 0x5b42fd7fae2dfa33 from memory into f10
fmsub.s f19, f21, f13, f10, dyn # perform operation
fmsub.s f19, f21, f13, f10, rdn # perform operation
fmsub.s f19, f21, f13, f10, rmm # perform operation
fmsub.s f19, f21, f13, f10, rne # perform operation
fmsub.s f19, f21, f13, f10, rtz # perform operation
fmsub.s f19, f21, f13, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f19, f21, f13, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f19, f21, f13, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f19, f21, f13, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f19, f21, f13, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f19, f21, f13, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0x7fbfffff)
li x19, 0xbc1bcdc11d0eed51 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f17, 0(x2) # load 0x7fbfffff from memory into f17
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f22, 0(x2) # load 0x7fbfffff from memory into f22
li x3, 0xa137310e0cd3632d # load x3 with value 0xa137310e0cd3632d
sw x3, 0(x2) # store 0xa137310e0cd3632d in memory
flw f21, 0(x2) # load 0xa137310e0cd3632d from memory into f21
fmsub.s f19, f17, f22, f21, dyn # perform operation
fmsub.s f19, f17, f22, f21, rdn # perform operation
fmsub.s f19, f17, f22, f21, rmm # perform operation
fmsub.s f19, f17, f22, f21, rne # perform operation
fmsub.s f19, f17, f22, f21, rtz # perform operation
fmsub.s f19, f17, f22, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f19, f17, f22, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f19, f17, f22, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f19, f17, f22, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f19, f17, f22, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f19, f17, f22, f21 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0x7ef8654f)
li x25, 0x40be15bb0b84218b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f9, 0(x2) # load 0x7fbfffff from memory into f9
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f17, 0(x2) # load 0x7ef8654f from memory into f17
li x3, 0x982bc8e2d2e1284a # load x3 with value 0x982bc8e2d2e1284a
sw x3, 0(x2) # store 0x982bc8e2d2e1284a in memory
flw f30, 0(x2) # load 0x982bc8e2d2e1284a from memory into f30
fmsub.s f25, f9, f17, f30, dyn # perform operation
fmsub.s f25, f9, f17, f30, rdn # perform operation
fmsub.s f25, f9, f17, f30, rmm # perform operation
fmsub.s f25, f9, f17, f30, rne # perform operation
fmsub.s f25, f9, f17, f30, rtz # perform operation
fmsub.s f25, f9, f17, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f25, f9, f17, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f25, f9, f17, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f25, f9, f17, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f25, f9, f17, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f25, f9, f17, f30 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0x813d9ab0)
li x17, 0x22d20585932c7556 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f7, 0(x2) # load 0x7fbfffff from memory into f7
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f19, 0(x2) # load 0x813d9ab0 from memory into f19
li x3, 0x541d8215ecaf4a9c # load x3 with value 0x541d8215ecaf4a9c
sw x3, 0(x2) # store 0x541d8215ecaf4a9c in memory
flw f27, 0(x2) # load 0x541d8215ecaf4a9c from memory into f27
fmsub.s f17, f7, f19, f27, dyn # perform operation
fmsub.s f17, f7, f19, f27, rdn # perform operation
fmsub.s f17, f7, f19, f27, rmm # perform operation
fmsub.s f17, f7, f19, f27, rne # perform operation
fmsub.s f17, f7, f19, f27, rtz # perform operation
fmsub.s f17, f7, f19, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f17, f7, f19, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f17, f7, f19, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f17, f7, f19, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f17, f7, f19, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f17, f7, f19, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0x0)
li x21, 0xcd902dfb04398834 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f22, 0(x2) # load 0x7ef8654f from memory into f22
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f1, 0(x2) # load 0x00000000 from memory into f1
li x3, 0x3ada3a3c5ba61ac2 # load x3 with value 0x3ada3a3c5ba61ac2
sw x3, 0(x2) # store 0x3ada3a3c5ba61ac2 in memory
flw f15, 0(x2) # load 0x3ada3a3c5ba61ac2 from memory into f15
fmsub.s f21, f22, f1, f15, dyn # perform operation
fmsub.s f21, f22, f1, f15, rdn # perform operation
fmsub.s f21, f22, f1, f15, rmm # perform operation
fmsub.s f21, f22, f1, f15, rne # perform operation
fmsub.s f21, f22, f1, f15, rtz # perform operation
fmsub.s f21, f22, f1, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f21, f22, f1, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f21, f22, f1, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f21, f22, f1, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f21, f22, f1, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f21, f22, f1, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0x80000000)
li x13, 0xa7dc81b71535ca9d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f3, 0(x2) # load 0x7ef8654f from memory into f3
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f11, 0(x2) # load 0x80000000 from memory into f11
li x3, 0x3878912616b694cc # load x3 with value 0x3878912616b694cc
sw x3, 0(x2) # store 0x3878912616b694cc in memory
flw f23, 0(x2) # load 0x3878912616b694cc from memory into f23
fmsub.s f13, f3, f11, f23, dyn # perform operation
fmsub.s f13, f3, f11, f23, rdn # perform operation
fmsub.s f13, f3, f11, f23, rmm # perform operation
fmsub.s f13, f3, f11, f23, rne # perform operation
fmsub.s f13, f3, f11, f23, rtz # perform operation
fmsub.s f13, f3, f11, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f13, f3, f11, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f13, f3, f11, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f13, f3, f11, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f13, f3, f11, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f13, f3, f11, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0x3f800000)
li x9, 0x070c720aad2f512c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f5, 0(x2) # load 0x7ef8654f from memory into f5
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f8, 0(x2) # load 0x3f800000 from memory into f8
li x3, 0x634399177af38efa # load x3 with value 0x634399177af38efa
sw x3, 0(x2) # store 0x634399177af38efa in memory
flw f11, 0(x2) # load 0x634399177af38efa from memory into f11
fmsub.s f9, f5, f8, f11, dyn # perform operation
fmsub.s f9, f5, f8, f11, rdn # perform operation
fmsub.s f9, f5, f8, f11, rmm # perform operation
fmsub.s f9, f5, f8, f11, rne # perform operation
fmsub.s f9, f5, f8, f11, rtz # perform operation
fmsub.s f9, f5, f8, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f9, f5, f8, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f9, f5, f8, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f9, f5, f8, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f9, f5, f8, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f9, f5, f8, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0xbf800000)
li x25, 0x8f058129ea4f07db # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f22, 0(x2) # load 0x7ef8654f from memory into f22
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f19, 0(x2) # load 0xbf800000 from memory into f19
li x3, 0x3058416c121ea498 # load x3 with value 0x3058416c121ea498
sw x3, 0(x2) # store 0x3058416c121ea498 in memory
flw f21, 0(x2) # load 0x3058416c121ea498 from memory into f21
fmsub.s f25, f22, f19, f21, dyn # perform operation
fmsub.s f25, f22, f19, f21, rdn # perform operation
fmsub.s f25, f22, f19, f21, rmm # perform operation
fmsub.s f25, f22, f19, f21, rne # perform operation
fmsub.s f25, f22, f19, f21, rtz # perform operation
fmsub.s f25, f22, f19, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f25, f22, f19, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f25, f22, f19, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f25, f22, f19, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f25, f22, f19, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f25, f22, f19, f21 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0x3fc00000)
li x12, 0x776f3639850e52a4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f3, 0(x2) # load 0x7ef8654f from memory into f3
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f8, 0(x2) # load 0x3fc00000 from memory into f8
li x3, 0xffb42fcc99ed9ae1 # load x3 with value 0xffb42fcc99ed9ae1
sw x3, 0(x2) # store 0xffb42fcc99ed9ae1 in memory
flw f20, 0(x2) # load 0xffb42fcc99ed9ae1 from memory into f20
fmsub.s f12, f3, f8, f20, dyn # perform operation
fmsub.s f12, f3, f8, f20, rdn # perform operation
fmsub.s f12, f3, f8, f20, rmm # perform operation
fmsub.s f12, f3, f8, f20, rne # perform operation
fmsub.s f12, f3, f8, f20, rtz # perform operation
fmsub.s f12, f3, f8, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f12, f3, f8, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f12, f3, f8, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f12, f3, f8, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f12, f3, f8, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f12, f3, f8, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0xbfc00000)
li x8, 0x6e6b45a68c936986 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f2, 0(x2) # load 0x7ef8654f from memory into f2
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f28, 0(x2) # load 0xbfc00000 from memory into f28
li x3, 0x1301b625072d2ad # load x3 with value 0x1301b625072d2ad
sw x3, 0(x2) # store 0x1301b625072d2ad in memory
flw f31, 0(x2) # load 0x1301b625072d2ad from memory into f31
fmsub.s f8, f2, f28, f31, dyn # perform operation
fmsub.s f8, f2, f28, f31, rdn # perform operation
fmsub.s f8, f2, f28, f31, rmm # perform operation
fmsub.s f8, f2, f28, f31, rne # perform operation
fmsub.s f8, f2, f28, f31, rtz # perform operation
fmsub.s f8, f2, f28, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f8, f2, f28, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f8, f2, f28, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f8, f2, f28, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f8, f2, f28, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f8, f2, f28, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0x40000000)
li x12, 0xd109bf1f3c25fc92 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f1, 0(x2) # load 0x7ef8654f from memory into f1
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f26, 0(x2) # load 0x40000000 from memory into f26
li x3, 0x71668bbe26317423 # load x3 with value 0x71668bbe26317423
sw x3, 0(x2) # store 0x71668bbe26317423 in memory
flw f25, 0(x2) # load 0x71668bbe26317423 from memory into f25
fmsub.s f12, f1, f26, f25, dyn # perform operation
fmsub.s f12, f1, f26, f25, rdn # perform operation
fmsub.s f12, f1, f26, f25, rmm # perform operation
fmsub.s f12, f1, f26, f25, rne # perform operation
fmsub.s f12, f1, f26, f25, rtz # perform operation
fmsub.s f12, f1, f26, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f12, f1, f26, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f12, f1, f26, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f12, f1, f26, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f12, f1, f26, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f12, f1, f26, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0xc0000000)
li x23, 0x87aaf2b24c54144a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f31, 0(x2) # load 0x7ef8654f from memory into f31
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f20, 0(x2) # load 0xc0000000 from memory into f20
li x3, 0xabfe53f46d5adbe4 # load x3 with value 0xabfe53f46d5adbe4
sw x3, 0(x2) # store 0xabfe53f46d5adbe4 in memory
flw f6, 0(x2) # load 0xabfe53f46d5adbe4 from memory into f6
fmsub.s f23, f31, f20, f6, dyn # perform operation
fmsub.s f23, f31, f20, f6, rdn # perform operation
fmsub.s f23, f31, f20, f6, rmm # perform operation
fmsub.s f23, f31, f20, f6, rne # perform operation
fmsub.s f23, f31, f20, f6, rtz # perform operation
fmsub.s f23, f31, f20, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f23, f31, f20, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f23, f31, f20, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f23, f31, f20, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f23, f31, f20, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f23, f31, f20, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0x800000)
li x23, 0xcda32bed85b38151 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f17, 0(x2) # load 0x7ef8654f from memory into f17
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f16, 0(x2) # load 0x00800000 from memory into f16
li x3, 0x7bbaff85858774aa # load x3 with value 0x7bbaff85858774aa
sw x3, 0(x2) # store 0x7bbaff85858774aa in memory
flw f11, 0(x2) # load 0x7bbaff85858774aa from memory into f11
fmsub.s f23, f17, f16, f11, dyn # perform operation
fmsub.s f23, f17, f16, f11, rdn # perform operation
fmsub.s f23, f17, f16, f11, rmm # perform operation
fmsub.s f23, f17, f16, f11, rne # perform operation
fmsub.s f23, f17, f16, f11, rtz # perform operation
fmsub.s f23, f17, f16, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f23, f17, f16, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f23, f17, f16, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f23, f17, f16, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f23, f17, f16, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f23, f17, f16, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0x80800000)
li x2, 0x2d6cd1656a5b1212 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f15, 0(x2) # load 0x7ef8654f from memory into f15
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f11, 0(x2) # load 0x80800000 from memory into f11
li x3, 0xcc99d95bf1fe9e55 # load x3 with value 0xcc99d95bf1fe9e55
sw x3, 0(x2) # store 0xcc99d95bf1fe9e55 in memory
flw f19, 0(x2) # load 0xcc99d95bf1fe9e55 from memory into f19
fmsub.s f2, f15, f11, f19, dyn # perform operation
fmsub.s f2, f15, f11, f19, rdn # perform operation
fmsub.s f2, f15, f11, f19, rmm # perform operation
fmsub.s f2, f15, f11, f19, rne # perform operation
fmsub.s f2, f15, f11, f19, rtz # perform operation
fmsub.s f2, f15, f11, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f2, f15, f11, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f2, f15, f11, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f2, f15, f11, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f2, f15, f11, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f2, f15, f11, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0x7f7fffff)
li x9, 0xdaeef76b8ae07ffe # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f4, 0(x2) # load 0x7ef8654f from memory into f4
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f19, 0(x2) # load 0x7f7fffff from memory into f19
li x3, 0xa62a55760bda81f1 # load x3 with value 0xa62a55760bda81f1
sw x3, 0(x2) # store 0xa62a55760bda81f1 in memory
flw f6, 0(x2) # load 0xa62a55760bda81f1 from memory into f6
fmsub.s f9, f4, f19, f6, dyn # perform operation
fmsub.s f9, f4, f19, f6, rdn # perform operation
fmsub.s f9, f4, f19, f6, rmm # perform operation
fmsub.s f9, f4, f19, f6, rne # perform operation
fmsub.s f9, f4, f19, f6, rtz # perform operation
fmsub.s f9, f4, f19, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f9, f4, f19, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f9, f4, f19, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f9, f4, f19, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f9, f4, f19, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f9, f4, f19, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0xff7fffff)
li x9, 0x102d742e89288fb8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f18, 0(x2) # load 0x7ef8654f from memory into f18
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f21, 0(x2) # load 0xff7fffff from memory into f21
li x3, 0x2078e4addb2af590 # load x3 with value 0x2078e4addb2af590
sw x3, 0(x2) # store 0x2078e4addb2af590 in memory
flw f23, 0(x2) # load 0x2078e4addb2af590 from memory into f23
fmsub.s f9, f18, f21, f23, dyn # perform operation
fmsub.s f9, f18, f21, f23, rdn # perform operation
fmsub.s f9, f18, f21, f23, rmm # perform operation
fmsub.s f9, f18, f21, f23, rne # perform operation
fmsub.s f9, f18, f21, f23, rtz # perform operation
fmsub.s f9, f18, f21, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f9, f18, f21, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f9, f18, f21, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f9, f18, f21, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f9, f18, f21, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f9, f18, f21, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0x7fffff)
li x10, 0xd68a8dc92b4714e7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f20, 0(x2) # load 0x7ef8654f from memory into f20
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f18, 0(x2) # load 0x007fffff from memory into f18
li x3, 0xb8c7f4f48159aa55 # load x3 with value 0xb8c7f4f48159aa55
sw x3, 0(x2) # store 0xb8c7f4f48159aa55 in memory
flw f29, 0(x2) # load 0xb8c7f4f48159aa55 from memory into f29
fmsub.s f10, f20, f18, f29, dyn # perform operation
fmsub.s f10, f20, f18, f29, rdn # perform operation
fmsub.s f10, f20, f18, f29, rmm # perform operation
fmsub.s f10, f20, f18, f29, rne # perform operation
fmsub.s f10, f20, f18, f29, rtz # perform operation
fmsub.s f10, f20, f18, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f10, f20, f18, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f10, f20, f18, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f10, f20, f18, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f10, f20, f18, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f10, f20, f18, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0x807fffff)
li x13, 0xf15683d98037597f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f17, 0(x2) # load 0x7ef8654f from memory into f17
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f31, 0(x2) # load 0x807fffff from memory into f31
li x3, 0x5f8ecce57c798aba # load x3 with value 0x5f8ecce57c798aba
sw x3, 0(x2) # store 0x5f8ecce57c798aba in memory
flw f1, 0(x2) # load 0x5f8ecce57c798aba from memory into f1
fmsub.s f13, f17, f31, f1, dyn # perform operation
fmsub.s f13, f17, f31, f1, rdn # perform operation
fmsub.s f13, f17, f31, f1, rmm # perform operation
fmsub.s f13, f17, f31, f1, rne # perform operation
fmsub.s f13, f17, f31, f1, rtz # perform operation
fmsub.s f13, f17, f31, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f13, f17, f31, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f13, f17, f31, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f13, f17, f31, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f13, f17, f31, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f13, f17, f31, f1 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0x400000)
li x13, 0xbcdd7f4518f66dd3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f23, 0(x2) # load 0x7ef8654f from memory into f23
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f1, 0(x2) # load 0x00400000 from memory into f1
li x3, 0x1154f8f51b9c735f # load x3 with value 0x1154f8f51b9c735f
sw x3, 0(x2) # store 0x1154f8f51b9c735f in memory
flw f14, 0(x2) # load 0x1154f8f51b9c735f from memory into f14
fmsub.s f13, f23, f1, f14, dyn # perform operation
fmsub.s f13, f23, f1, f14, rdn # perform operation
fmsub.s f13, f23, f1, f14, rmm # perform operation
fmsub.s f13, f23, f1, f14, rne # perform operation
fmsub.s f13, f23, f1, f14, rtz # perform operation
fmsub.s f13, f23, f1, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f13, f23, f1, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f13, f23, f1, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f13, f23, f1, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f13, f23, f1, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f13, f23, f1, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0x80400000)
li x24, 0x2ed611717571a7d7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f30, 0(x2) # load 0x7ef8654f from memory into f30
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f1, 0(x2) # load 0x80400000 from memory into f1
li x3, 0x697e5cdaf3725595 # load x3 with value 0x697e5cdaf3725595
sw x3, 0(x2) # store 0x697e5cdaf3725595 in memory
flw f17, 0(x2) # load 0x697e5cdaf3725595 from memory into f17
fmsub.s f24, f30, f1, f17, dyn # perform operation
fmsub.s f24, f30, f1, f17, rdn # perform operation
fmsub.s f24, f30, f1, f17, rmm # perform operation
fmsub.s f24, f30, f1, f17, rne # perform operation
fmsub.s f24, f30, f1, f17, rtz # perform operation
fmsub.s f24, f30, f1, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f24, f30, f1, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f24, f30, f1, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f24, f30, f1, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f24, f30, f1, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f24, f30, f1, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0x1)
li x23, 0x10542e9aca53ea25 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f18, 0(x2) # load 0x7ef8654f from memory into f18
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f31, 0(x2) # load 0x00000001 from memory into f31
li x3, 0xc367523e72bb486a # load x3 with value 0xc367523e72bb486a
sw x3, 0(x2) # store 0xc367523e72bb486a in memory
flw f11, 0(x2) # load 0xc367523e72bb486a from memory into f11
fmsub.s f23, f18, f31, f11, dyn # perform operation
fmsub.s f23, f18, f31, f11, rdn # perform operation
fmsub.s f23, f18, f31, f11, rmm # perform operation
fmsub.s f23, f18, f31, f11, rne # perform operation
fmsub.s f23, f18, f31, f11, rtz # perform operation
fmsub.s f23, f18, f31, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f23, f18, f31, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f23, f18, f31, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f23, f18, f31, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f23, f18, f31, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f23, f18, f31, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0x80000001)
li x3, 0xa1627a5d1851b26b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f11, 0(x2) # load 0x7ef8654f from memory into f11
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f31, 0(x2) # load 0x80000001 from memory into f31
li x3, 0xb21a7cca73bf1824 # load x3 with value 0xb21a7cca73bf1824
sw x3, 0(x2) # store 0xb21a7cca73bf1824 in memory
flw f23, 0(x2) # load 0xb21a7cca73bf1824 from memory into f23
fmsub.s f3, f11, f31, f23, dyn # perform operation
fmsub.s f3, f11, f31, f23, rdn # perform operation
fmsub.s f3, f11, f31, f23, rmm # perform operation
fmsub.s f3, f11, f31, f23, rne # perform operation
fmsub.s f3, f11, f31, f23, rtz # perform operation
fmsub.s f3, f11, f31, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f3, f11, f31, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f3, f11, f31, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f3, f11, f31, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f3, f11, f31, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f3, f11, f31, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0x7f800000)
li x12, 0xa6c7467026daaa2b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f10, 0(x2) # load 0x7ef8654f from memory into f10
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f29, 0(x2) # load 0x7f800000 from memory into f29
li x3, 0xf40b7ceac728bad5 # load x3 with value 0xf40b7ceac728bad5
sw x3, 0(x2) # store 0xf40b7ceac728bad5 in memory
flw f28, 0(x2) # load 0xf40b7ceac728bad5 from memory into f28
fmsub.s f12, f10, f29, f28, dyn # perform operation
fmsub.s f12, f10, f29, f28, rdn # perform operation
fmsub.s f12, f10, f29, f28, rmm # perform operation
fmsub.s f12, f10, f29, f28, rne # perform operation
fmsub.s f12, f10, f29, f28, rtz # perform operation
fmsub.s f12, f10, f29, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f12, f10, f29, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f12, f10, f29, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f12, f10, f29, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f12, f10, f29, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f12, f10, f29, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0xff800000)
li x14, 0xcbff6f2987905f24 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f1, 0(x2) # load 0x7ef8654f from memory into f1
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f7, 0(x2) # load 0xff800000 from memory into f7
li x3, 0xc42404b86035ce03 # load x3 with value 0xc42404b86035ce03
sw x3, 0(x2) # store 0xc42404b86035ce03 in memory
flw f4, 0(x2) # load 0xc42404b86035ce03 from memory into f4
fmsub.s f14, f1, f7, f4, dyn # perform operation
fmsub.s f14, f1, f7, f4, rdn # perform operation
fmsub.s f14, f1, f7, f4, rmm # perform operation
fmsub.s f14, f1, f7, f4, rne # perform operation
fmsub.s f14, f1, f7, f4, rtz # perform operation
fmsub.s f14, f1, f7, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f14, f1, f7, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f14, f1, f7, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f14, f1, f7, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f14, f1, f7, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f14, f1, f7, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0x7fc00000)
li x22, 0xf3189e9feb7574d1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f15, 0(x2) # load 0x7ef8654f from memory into f15
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f21, 0(x2) # load 0x7fc00000 from memory into f21
li x3, 0x14c641f399e4572a # load x3 with value 0x14c641f399e4572a
sw x3, 0(x2) # store 0x14c641f399e4572a in memory
flw f30, 0(x2) # load 0x14c641f399e4572a from memory into f30
fmsub.s f22, f15, f21, f30, dyn # perform operation
fmsub.s f22, f15, f21, f30, rdn # perform operation
fmsub.s f22, f15, f21, f30, rmm # perform operation
fmsub.s f22, f15, f21, f30, rne # perform operation
fmsub.s f22, f15, f21, f30, rtz # perform operation
fmsub.s f22, f15, f21, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f22, f15, f21, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f22, f15, f21, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f22, f15, f21, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f22, f15, f21, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f22, f15, f21, f30 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0x7fffffff)
li x13, 0x9f031fd58e732887 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f20, 0(x2) # load 0x7ef8654f from memory into f20
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f26, 0(x2) # load 0x7fffffff from memory into f26
li x3, 0x43f6d9c587ef64d6 # load x3 with value 0x43f6d9c587ef64d6
sw x3, 0(x2) # store 0x43f6d9c587ef64d6 in memory
flw f10, 0(x2) # load 0x43f6d9c587ef64d6 from memory into f10
fmsub.s f13, f20, f26, f10, dyn # perform operation
fmsub.s f13, f20, f26, f10, rdn # perform operation
fmsub.s f13, f20, f26, f10, rmm # perform operation
fmsub.s f13, f20, f26, f10, rne # perform operation
fmsub.s f13, f20, f26, f10, rtz # perform operation
fmsub.s f13, f20, f26, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f13, f20, f26, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f13, f20, f26, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f13, f20, f26, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f13, f20, f26, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f13, f20, f26, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0x7f800001)
li x21, 0x9a76329c9cb24d8d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f3, 0(x2) # load 0x7ef8654f from memory into f3
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f16, 0(x2) # load 0x7f800001 from memory into f16
li x3, 0x4388aaa48f8be0ca # load x3 with value 0x4388aaa48f8be0ca
sw x3, 0(x2) # store 0x4388aaa48f8be0ca in memory
flw f4, 0(x2) # load 0x4388aaa48f8be0ca from memory into f4
fmsub.s f21, f3, f16, f4, dyn # perform operation
fmsub.s f21, f3, f16, f4, rdn # perform operation
fmsub.s f21, f3, f16, f4, rmm # perform operation
fmsub.s f21, f3, f16, f4, rne # perform operation
fmsub.s f21, f3, f16, f4, rtz # perform operation
fmsub.s f21, f3, f16, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f21, f3, f16, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f21, f3, f16, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f21, f3, f16, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f21, f3, f16, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f21, f3, f16, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0x7fbfffff)
li x17, 0xed7f4e4f8d55086d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f26, 0(x2) # load 0x7ef8654f from memory into f26
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f29, 0(x2) # load 0x7fbfffff from memory into f29
li x3, 0x98d5b0f0f914ef73 # load x3 with value 0x98d5b0f0f914ef73
sw x3, 0(x2) # store 0x98d5b0f0f914ef73 in memory
flw f6, 0(x2) # load 0x98d5b0f0f914ef73 from memory into f6
fmsub.s f17, f26, f29, f6, dyn # perform operation
fmsub.s f17, f26, f29, f6, rdn # perform operation
fmsub.s f17, f26, f29, f6, rmm # perform operation
fmsub.s f17, f26, f29, f6, rne # perform operation
fmsub.s f17, f26, f29, f6, rtz # perform operation
fmsub.s f17, f26, f29, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f17, f26, f29, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f17, f26, f29, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f17, f26, f29, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f17, f26, f29, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f17, f26, f29, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0x7ef8654f)
li x28, 0x3f375cb0261b3d76 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f18, 0(x2) # load 0x7ef8654f from memory into f18
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f1, 0(x2) # load 0x7ef8654f from memory into f1
li x3, 0x47b7d638ad120cf6 # load x3 with value 0x47b7d638ad120cf6
sw x3, 0(x2) # store 0x47b7d638ad120cf6 in memory
flw f5, 0(x2) # load 0x47b7d638ad120cf6 from memory into f5
fmsub.s f28, f18, f1, f5, dyn # perform operation
fmsub.s f28, f18, f1, f5, rdn # perform operation
fmsub.s f28, f18, f1, f5, rmm # perform operation
fmsub.s f28, f18, f1, f5, rne # perform operation
fmsub.s f28, f18, f1, f5, rtz # perform operation
fmsub.s f28, f18, f1, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f28, f18, f1, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f28, f18, f1, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f28, f18, f1, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f28, f18, f1, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f28, f18, f1, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0x813d9ab0)
li x3, 0xd12cb589c23c6337 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f6, 0(x2) # load 0x7ef8654f from memory into f6
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f27, 0(x2) # load 0x813d9ab0 from memory into f27
li x3, 0xfe47d32c62440f5b # load x3 with value 0xfe47d32c62440f5b
sw x3, 0(x2) # store 0xfe47d32c62440f5b in memory
flw f29, 0(x2) # load 0xfe47d32c62440f5b from memory into f29
fmsub.s f3, f6, f27, f29, dyn # perform operation
fmsub.s f3, f6, f27, f29, rdn # perform operation
fmsub.s f3, f6, f27, f29, rmm # perform operation
fmsub.s f3, f6, f27, f29, rne # perform operation
fmsub.s f3, f6, f27, f29, rtz # perform operation
fmsub.s f3, f6, f27, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f3, f6, f27, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f3, f6, f27, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f3, f6, f27, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f3, f6, f27, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f3, f6, f27, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0x0)
li x4, 0xfee312adfe1906a1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f14, 0(x2) # load 0x813d9ab0 from memory into f14
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f6, 0(x2) # load 0x00000000 from memory into f6
li x3, 0x442052ad2cec5a5f # load x3 with value 0x442052ad2cec5a5f
sw x3, 0(x2) # store 0x442052ad2cec5a5f in memory
flw f19, 0(x2) # load 0x442052ad2cec5a5f from memory into f19
fmsub.s f4, f14, f6, f19, dyn # perform operation
fmsub.s f4, f14, f6, f19, rdn # perform operation
fmsub.s f4, f14, f6, f19, rmm # perform operation
fmsub.s f4, f14, f6, f19, rne # perform operation
fmsub.s f4, f14, f6, f19, rtz # perform operation
fmsub.s f4, f14, f6, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f4, f14, f6, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f4, f14, f6, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f4, f14, f6, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f4, f14, f6, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f4, f14, f6, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0x80000000)
li x31, 0x34c0e2886aa7f0d1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f6, 0(x2) # load 0x813d9ab0 from memory into f6
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f2, 0(x2) # load 0x80000000 from memory into f2
li x3, 0x66a3ec1305ac9ce4 # load x3 with value 0x66a3ec1305ac9ce4
sw x3, 0(x2) # store 0x66a3ec1305ac9ce4 in memory
flw f17, 0(x2) # load 0x66a3ec1305ac9ce4 from memory into f17
fmsub.s f31, f6, f2, f17, dyn # perform operation
fmsub.s f31, f6, f2, f17, rdn # perform operation
fmsub.s f31, f6, f2, f17, rmm # perform operation
fmsub.s f31, f6, f2, f17, rne # perform operation
fmsub.s f31, f6, f2, f17, rtz # perform operation
fmsub.s f31, f6, f2, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f31, f6, f2, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f31, f6, f2, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f31, f6, f2, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f31, f6, f2, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f31, f6, f2, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0x3f800000)
li x17, 0x2e42871429ab869b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f3, 0(x2) # load 0x813d9ab0 from memory into f3
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f23, 0(x2) # load 0x3f800000 from memory into f23
li x3, 0x8b766b842322bde1 # load x3 with value 0x8b766b842322bde1
sw x3, 0(x2) # store 0x8b766b842322bde1 in memory
flw f14, 0(x2) # load 0x8b766b842322bde1 from memory into f14
fmsub.s f17, f3, f23, f14, dyn # perform operation
fmsub.s f17, f3, f23, f14, rdn # perform operation
fmsub.s f17, f3, f23, f14, rmm # perform operation
fmsub.s f17, f3, f23, f14, rne # perform operation
fmsub.s f17, f3, f23, f14, rtz # perform operation
fmsub.s f17, f3, f23, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f17, f3, f23, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f17, f3, f23, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f17, f3, f23, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f17, f3, f23, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f17, f3, f23, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0xbf800000)
li x3, 0x850c62f0577f52ab # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f6, 0(x2) # load 0x813d9ab0 from memory into f6
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f5, 0(x2) # load 0xbf800000 from memory into f5
li x3, 0xa1e481d178b563b9 # load x3 with value 0xa1e481d178b563b9
sw x3, 0(x2) # store 0xa1e481d178b563b9 in memory
flw f28, 0(x2) # load 0xa1e481d178b563b9 from memory into f28
fmsub.s f3, f6, f5, f28, dyn # perform operation
fmsub.s f3, f6, f5, f28, rdn # perform operation
fmsub.s f3, f6, f5, f28, rmm # perform operation
fmsub.s f3, f6, f5, f28, rne # perform operation
fmsub.s f3, f6, f5, f28, rtz # perform operation
fmsub.s f3, f6, f5, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f3, f6, f5, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f3, f6, f5, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f3, f6, f5, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f3, f6, f5, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f3, f6, f5, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0x3fc00000)
li x21, 0xf763fd02a4632135 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f17, 0(x2) # load 0x813d9ab0 from memory into f17
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f28, 0(x2) # load 0x3fc00000 from memory into f28
li x3, 0xf5df064da133e3af # load x3 with value 0xf5df064da133e3af
sw x3, 0(x2) # store 0xf5df064da133e3af in memory
flw f27, 0(x2) # load 0xf5df064da133e3af from memory into f27
fmsub.s f21, f17, f28, f27, dyn # perform operation
fmsub.s f21, f17, f28, f27, rdn # perform operation
fmsub.s f21, f17, f28, f27, rmm # perform operation
fmsub.s f21, f17, f28, f27, rne # perform operation
fmsub.s f21, f17, f28, f27, rtz # perform operation
fmsub.s f21, f17, f28, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f21, f17, f28, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f21, f17, f28, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f21, f17, f28, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f21, f17, f28, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f21, f17, f28, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0xbfc00000)
li x15, 0x6c76cd64673c778f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f11, 0(x2) # load 0x813d9ab0 from memory into f11
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f10, 0(x2) # load 0xbfc00000 from memory into f10
li x3, 0x9d1fe97403f38108 # load x3 with value 0x9d1fe97403f38108
sw x3, 0(x2) # store 0x9d1fe97403f38108 in memory
flw f25, 0(x2) # load 0x9d1fe97403f38108 from memory into f25
fmsub.s f15, f11, f10, f25, dyn # perform operation
fmsub.s f15, f11, f10, f25, rdn # perform operation
fmsub.s f15, f11, f10, f25, rmm # perform operation
fmsub.s f15, f11, f10, f25, rne # perform operation
fmsub.s f15, f11, f10, f25, rtz # perform operation
fmsub.s f15, f11, f10, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f15, f11, f10, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f15, f11, f10, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f15, f11, f10, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f15, f11, f10, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f15, f11, f10, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0x40000000)
li x29, 0x64bee3c30362f97e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f25, 0(x2) # load 0x813d9ab0 from memory into f25
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f17, 0(x2) # load 0x40000000 from memory into f17
li x3, 0x69c21f7db399eaf0 # load x3 with value 0x69c21f7db399eaf0
sw x3, 0(x2) # store 0x69c21f7db399eaf0 in memory
flw f2, 0(x2) # load 0x69c21f7db399eaf0 from memory into f2
fmsub.s f29, f25, f17, f2, dyn # perform operation
fmsub.s f29, f25, f17, f2, rdn # perform operation
fmsub.s f29, f25, f17, f2, rmm # perform operation
fmsub.s f29, f25, f17, f2, rne # perform operation
fmsub.s f29, f25, f17, f2, rtz # perform operation
fmsub.s f29, f25, f17, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f29, f25, f17, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f29, f25, f17, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f29, f25, f17, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f29, f25, f17, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f29, f25, f17, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0xc0000000)
li x16, 0xb5fe43bd365ca175 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f4, 0(x2) # load 0x813d9ab0 from memory into f4
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f24, 0(x2) # load 0xc0000000 from memory into f24
li x3, 0x755d1b5d121ea420 # load x3 with value 0x755d1b5d121ea420
sw x3, 0(x2) # store 0x755d1b5d121ea420 in memory
flw f31, 0(x2) # load 0x755d1b5d121ea420 from memory into f31
fmsub.s f16, f4, f24, f31, dyn # perform operation
fmsub.s f16, f4, f24, f31, rdn # perform operation
fmsub.s f16, f4, f24, f31, rmm # perform operation
fmsub.s f16, f4, f24, f31, rne # perform operation
fmsub.s f16, f4, f24, f31, rtz # perform operation
fmsub.s f16, f4, f24, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f16, f4, f24, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f16, f4, f24, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f16, f4, f24, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f16, f4, f24, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f16, f4, f24, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0x800000)
li x15, 0xe605a1e5904ab37d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f14, 0(x2) # load 0x813d9ab0 from memory into f14
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f1, 0(x2) # load 0x00800000 from memory into f1
li x3, 0x93051b4cdeb39666 # load x3 with value 0x93051b4cdeb39666
sw x3, 0(x2) # store 0x93051b4cdeb39666 in memory
flw f21, 0(x2) # load 0x93051b4cdeb39666 from memory into f21
fmsub.s f15, f14, f1, f21, dyn # perform operation
fmsub.s f15, f14, f1, f21, rdn # perform operation
fmsub.s f15, f14, f1, f21, rmm # perform operation
fmsub.s f15, f14, f1, f21, rne # perform operation
fmsub.s f15, f14, f1, f21, rtz # perform operation
fmsub.s f15, f14, f1, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f15, f14, f1, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f15, f14, f1, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f15, f14, f1, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f15, f14, f1, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f15, f14, f1, f21 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0x80800000)
li x6, 0x5d77c0c76bcf692a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f9, 0(x2) # load 0x813d9ab0 from memory into f9
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f31, 0(x2) # load 0x80800000 from memory into f31
li x3, 0x7920af76c188c281 # load x3 with value 0x7920af76c188c281
sw x3, 0(x2) # store 0x7920af76c188c281 in memory
flw f21, 0(x2) # load 0x7920af76c188c281 from memory into f21
fmsub.s f6, f9, f31, f21, dyn # perform operation
fmsub.s f6, f9, f31, f21, rdn # perform operation
fmsub.s f6, f9, f31, f21, rmm # perform operation
fmsub.s f6, f9, f31, f21, rne # perform operation
fmsub.s f6, f9, f31, f21, rtz # perform operation
fmsub.s f6, f9, f31, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f6, f9, f31, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f6, f9, f31, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f6, f9, f31, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f6, f9, f31, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f6, f9, f31, f21 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0x7f7fffff)
li x2, 0xacc28aa7b0a8038c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f14, 0(x2) # load 0x813d9ab0 from memory into f14
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f13, 0(x2) # load 0x7f7fffff from memory into f13
li x3, 0x1e1cce975a1840b3 # load x3 with value 0x1e1cce975a1840b3
sw x3, 0(x2) # store 0x1e1cce975a1840b3 in memory
flw f7, 0(x2) # load 0x1e1cce975a1840b3 from memory into f7
fmsub.s f2, f14, f13, f7, dyn # perform operation
fmsub.s f2, f14, f13, f7, rdn # perform operation
fmsub.s f2, f14, f13, f7, rmm # perform operation
fmsub.s f2, f14, f13, f7, rne # perform operation
fmsub.s f2, f14, f13, f7, rtz # perform operation
fmsub.s f2, f14, f13, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f2, f14, f13, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f2, f14, f13, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f2, f14, f13, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f2, f14, f13, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f2, f14, f13, f7 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0xff7fffff)
li x12, 0x5acf051604c56fe4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f30, 0(x2) # load 0x813d9ab0 from memory into f30
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f22, 0(x2) # load 0xff7fffff from memory into f22
li x3, 0x955bad5ce419c426 # load x3 with value 0x955bad5ce419c426
sw x3, 0(x2) # store 0x955bad5ce419c426 in memory
flw f7, 0(x2) # load 0x955bad5ce419c426 from memory into f7
fmsub.s f12, f30, f22, f7, dyn # perform operation
fmsub.s f12, f30, f22, f7, rdn # perform operation
fmsub.s f12, f30, f22, f7, rmm # perform operation
fmsub.s f12, f30, f22, f7, rne # perform operation
fmsub.s f12, f30, f22, f7, rtz # perform operation
fmsub.s f12, f30, f22, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f12, f30, f22, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f12, f30, f22, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f12, f30, f22, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f12, f30, f22, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f12, f30, f22, f7 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0x7fffff)
li x8, 0xde8fdbcd5039d531 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f5, 0(x2) # load 0x813d9ab0 from memory into f5
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f2, 0(x2) # load 0x007fffff from memory into f2
li x3, 0xffae243355c5ffd0 # load x3 with value 0xffae243355c5ffd0
sw x3, 0(x2) # store 0xffae243355c5ffd0 in memory
flw f3, 0(x2) # load 0xffae243355c5ffd0 from memory into f3
fmsub.s f8, f5, f2, f3, dyn # perform operation
fmsub.s f8, f5, f2, f3, rdn # perform operation
fmsub.s f8, f5, f2, f3, rmm # perform operation
fmsub.s f8, f5, f2, f3, rne # perform operation
fmsub.s f8, f5, f2, f3, rtz # perform operation
fmsub.s f8, f5, f2, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f8, f5, f2, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f8, f5, f2, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f8, f5, f2, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f8, f5, f2, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f8, f5, f2, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0x807fffff)
li x22, 0x8a5b9d8f8fa32478 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f30, 0(x2) # load 0x813d9ab0 from memory into f30
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f20, 0(x2) # load 0x807fffff from memory into f20
li x3, 0x2454cb9dda204bcb # load x3 with value 0x2454cb9dda204bcb
sw x3, 0(x2) # store 0x2454cb9dda204bcb in memory
flw f18, 0(x2) # load 0x2454cb9dda204bcb from memory into f18
fmsub.s f22, f30, f20, f18, dyn # perform operation
fmsub.s f22, f30, f20, f18, rdn # perform operation
fmsub.s f22, f30, f20, f18, rmm # perform operation
fmsub.s f22, f30, f20, f18, rne # perform operation
fmsub.s f22, f30, f20, f18, rtz # perform operation
fmsub.s f22, f30, f20, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f22, f30, f20, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f22, f30, f20, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f22, f30, f20, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f22, f30, f20, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f22, f30, f20, f18 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0x400000)
li x3, 0x12b8fd159ac4a4ea # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f18, 0(x2) # load 0x813d9ab0 from memory into f18
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f13, 0(x2) # load 0x00400000 from memory into f13
li x3, 0xc50917b4df4d0b9d # load x3 with value 0xc50917b4df4d0b9d
sw x3, 0(x2) # store 0xc50917b4df4d0b9d in memory
flw f23, 0(x2) # load 0xc50917b4df4d0b9d from memory into f23
fmsub.s f3, f18, f13, f23, dyn # perform operation
fmsub.s f3, f18, f13, f23, rdn # perform operation
fmsub.s f3, f18, f13, f23, rmm # perform operation
fmsub.s f3, f18, f13, f23, rne # perform operation
fmsub.s f3, f18, f13, f23, rtz # perform operation
fmsub.s f3, f18, f13, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f3, f18, f13, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f3, f18, f13, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f3, f18, f13, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f3, f18, f13, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f3, f18, f13, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0x80400000)
li x13, 0x6967c90ae22caed8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f6, 0(x2) # load 0x813d9ab0 from memory into f6
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f2, 0(x2) # load 0x80400000 from memory into f2
li x3, 0xc11f15cf14a43864 # load x3 with value 0xc11f15cf14a43864
sw x3, 0(x2) # store 0xc11f15cf14a43864 in memory
flw f21, 0(x2) # load 0xc11f15cf14a43864 from memory into f21
fmsub.s f13, f6, f2, f21, dyn # perform operation
fmsub.s f13, f6, f2, f21, rdn # perform operation
fmsub.s f13, f6, f2, f21, rmm # perform operation
fmsub.s f13, f6, f2, f21, rne # perform operation
fmsub.s f13, f6, f2, f21, rtz # perform operation
fmsub.s f13, f6, f2, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f13, f6, f2, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f13, f6, f2, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f13, f6, f2, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f13, f6, f2, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f13, f6, f2, f21 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0x1)
li x10, 0xf565e79e319e7320 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f13, 0(x2) # load 0x813d9ab0 from memory into f13
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f4, 0(x2) # load 0x00000001 from memory into f4
li x3, 0x897b017c15d49fd1 # load x3 with value 0x897b017c15d49fd1
sw x3, 0(x2) # store 0x897b017c15d49fd1 in memory
flw f11, 0(x2) # load 0x897b017c15d49fd1 from memory into f11
fmsub.s f10, f13, f4, f11, dyn # perform operation
fmsub.s f10, f13, f4, f11, rdn # perform operation
fmsub.s f10, f13, f4, f11, rmm # perform operation
fmsub.s f10, f13, f4, f11, rne # perform operation
fmsub.s f10, f13, f4, f11, rtz # perform operation
fmsub.s f10, f13, f4, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f10, f13, f4, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f10, f13, f4, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f10, f13, f4, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f10, f13, f4, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f10, f13, f4, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0x80000001)
li x18, 0xe5ae8eff6b410133 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f19, 0(x2) # load 0x813d9ab0 from memory into f19
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f31, 0(x2) # load 0x80000001 from memory into f31
li x3, 0x7ee49b202067e441 # load x3 with value 0x7ee49b202067e441
sw x3, 0(x2) # store 0x7ee49b202067e441 in memory
flw f22, 0(x2) # load 0x7ee49b202067e441 from memory into f22
fmsub.s f18, f19, f31, f22, dyn # perform operation
fmsub.s f18, f19, f31, f22, rdn # perform operation
fmsub.s f18, f19, f31, f22, rmm # perform operation
fmsub.s f18, f19, f31, f22, rne # perform operation
fmsub.s f18, f19, f31, f22, rtz # perform operation
fmsub.s f18, f19, f31, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f18, f19, f31, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f18, f19, f31, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f18, f19, f31, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f18, f19, f31, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f18, f19, f31, f22 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0x7f800000)
li x31, 0xa32367115556d350 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f25, 0(x2) # load 0x813d9ab0 from memory into f25
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f20, 0(x2) # load 0x7f800000 from memory into f20
li x3, 0xa061e966ed748c49 # load x3 with value 0xa061e966ed748c49
sw x3, 0(x2) # store 0xa061e966ed748c49 in memory
flw f16, 0(x2) # load 0xa061e966ed748c49 from memory into f16
fmsub.s f31, f25, f20, f16, dyn # perform operation
fmsub.s f31, f25, f20, f16, rdn # perform operation
fmsub.s f31, f25, f20, f16, rmm # perform operation
fmsub.s f31, f25, f20, f16, rne # perform operation
fmsub.s f31, f25, f20, f16, rtz # perform operation
fmsub.s f31, f25, f20, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f31, f25, f20, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f31, f25, f20, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f31, f25, f20, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f31, f25, f20, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f31, f25, f20, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0xff800000)
li x21, 0x9300f77d060a3f04 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f25, 0(x2) # load 0x813d9ab0 from memory into f25
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f5, 0(x2) # load 0xff800000 from memory into f5
li x3, 0x8014977a61f987a7 # load x3 with value 0x8014977a61f987a7
sw x3, 0(x2) # store 0x8014977a61f987a7 in memory
flw f15, 0(x2) # load 0x8014977a61f987a7 from memory into f15
fmsub.s f21, f25, f5, f15, dyn # perform operation
fmsub.s f21, f25, f5, f15, rdn # perform operation
fmsub.s f21, f25, f5, f15, rmm # perform operation
fmsub.s f21, f25, f5, f15, rne # perform operation
fmsub.s f21, f25, f5, f15, rtz # perform operation
fmsub.s f21, f25, f5, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f21, f25, f5, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f21, f25, f5, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f21, f25, f5, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f21, f25, f5, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f21, f25, f5, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0x7fc00000)
li x24, 0xe597c739385c6b52 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f11, 0(x2) # load 0x813d9ab0 from memory into f11
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f8, 0(x2) # load 0x7fc00000 from memory into f8
li x3, 0x3cc70de83fe5af1c # load x3 with value 0x3cc70de83fe5af1c
sw x3, 0(x2) # store 0x3cc70de83fe5af1c in memory
flw f28, 0(x2) # load 0x3cc70de83fe5af1c from memory into f28
fmsub.s f24, f11, f8, f28, dyn # perform operation
fmsub.s f24, f11, f8, f28, rdn # perform operation
fmsub.s f24, f11, f8, f28, rmm # perform operation
fmsub.s f24, f11, f8, f28, rne # perform operation
fmsub.s f24, f11, f8, f28, rtz # perform operation
fmsub.s f24, f11, f8, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f24, f11, f8, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f24, f11, f8, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f24, f11, f8, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f24, f11, f8, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f24, f11, f8, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0x7fffffff)
li x28, 0xa06027bf2154759d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f15, 0(x2) # load 0x813d9ab0 from memory into f15
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f20, 0(x2) # load 0x7fffffff from memory into f20
li x3, 0x84987c90a0153530 # load x3 with value 0x84987c90a0153530
sw x3, 0(x2) # store 0x84987c90a0153530 in memory
flw f18, 0(x2) # load 0x84987c90a0153530 from memory into f18
fmsub.s f28, f15, f20, f18, dyn # perform operation
fmsub.s f28, f15, f20, f18, rdn # perform operation
fmsub.s f28, f15, f20, f18, rmm # perform operation
fmsub.s f28, f15, f20, f18, rne # perform operation
fmsub.s f28, f15, f20, f18, rtz # perform operation
fmsub.s f28, f15, f20, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f28, f15, f20, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f28, f15, f20, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f28, f15, f20, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f28, f15, f20, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f28, f15, f20, f18 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0x7f800001)
li x31, 0x2c972b73b01442de # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f2, 0(x2) # load 0x813d9ab0 from memory into f2
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f15, 0(x2) # load 0x7f800001 from memory into f15
li x3, 0x2c3e9ce739a677a3 # load x3 with value 0x2c3e9ce739a677a3
sw x3, 0(x2) # store 0x2c3e9ce739a677a3 in memory
flw f16, 0(x2) # load 0x2c3e9ce739a677a3 from memory into f16
fmsub.s f31, f2, f15, f16, dyn # perform operation
fmsub.s f31, f2, f15, f16, rdn # perform operation
fmsub.s f31, f2, f15, f16, rmm # perform operation
fmsub.s f31, f2, f15, f16, rne # perform operation
fmsub.s f31, f2, f15, f16, rtz # perform operation
fmsub.s f31, f2, f15, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f31, f2, f15, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f31, f2, f15, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f31, f2, f15, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f31, f2, f15, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f31, f2, f15, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0x7fbfffff)
li x6, 0xd7ca39106a284ff8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f24, 0(x2) # load 0x813d9ab0 from memory into f24
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f25, 0(x2) # load 0x7fbfffff from memory into f25
li x3, 0xe94a0bed139c843e # load x3 with value 0xe94a0bed139c843e
sw x3, 0(x2) # store 0xe94a0bed139c843e in memory
flw f21, 0(x2) # load 0xe94a0bed139c843e from memory into f21
fmsub.s f6, f24, f25, f21, dyn # perform operation
fmsub.s f6, f24, f25, f21, rdn # perform operation
fmsub.s f6, f24, f25, f21, rmm # perform operation
fmsub.s f6, f24, f25, f21, rne # perform operation
fmsub.s f6, f24, f25, f21, rtz # perform operation
fmsub.s f6, f24, f25, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f6, f24, f25, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f6, f24, f25, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f6, f24, f25, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f6, f24, f25, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f6, f24, f25, f21 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0x7ef8654f)
li x8, 0xfdbf7c712f7c00ff # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f24, 0(x2) # load 0x813d9ab0 from memory into f24
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f25, 0(x2) # load 0x7ef8654f from memory into f25
li x3, 0x20e587ec88af5e42 # load x3 with value 0x20e587ec88af5e42
sw x3, 0(x2) # store 0x20e587ec88af5e42 in memory
flw f1, 0(x2) # load 0x20e587ec88af5e42 from memory into f1
fmsub.s f8, f24, f25, f1, dyn # perform operation
fmsub.s f8, f24, f25, f1, rdn # perform operation
fmsub.s f8, f24, f25, f1, rmm # perform operation
fmsub.s f8, f24, f25, f1, rne # perform operation
fmsub.s f8, f24, f25, f1, rtz # perform operation
fmsub.s f8, f24, f25, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f8, f24, f25, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f8, f24, f25, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f8, f24, f25, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f8, f24, f25, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f8, f24, f25, f1 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0x813d9ab0)
li x26, 0x63b6944f9b736fb9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f30, 0(x2) # load 0x813d9ab0 from memory into f30
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f6, 0(x2) # load 0x813d9ab0 from memory into f6
li x3, 0x5a4bf0645fd608d0 # load x3 with value 0x5a4bf0645fd608d0
sw x3, 0(x2) # store 0x5a4bf0645fd608d0 in memory
flw f25, 0(x2) # load 0x5a4bf0645fd608d0 from memory into f25
fmsub.s f26, f30, f6, f25, dyn # perform operation
fmsub.s f26, f30, f6, f25, rdn # perform operation
fmsub.s f26, f30, f6, f25, rmm # perform operation
fmsub.s f26, f30, f6, f25, rne # perform operation
fmsub.s f26, f30, f6, f25, rtz # perform operation
fmsub.s f26, f30, f6, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f26, f30, f6, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f26, f30, f6, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f26, f30, f6, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f26, f30, f6, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f26, f30, f6, f25 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x0)
li x18, 0x7c200bb713ac773b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f17, 0(x2) # load 0x00000000 from memory into f17
li x3, 0xf8061e234e73d10e # load x3 with value 0xf8061e234e73d10e
sw x3, 0(x2) # store 0xf8061e234e73d10e in memory
flw f19, 0(x2) # load 0xf8061e234e73d10e from memory into f19
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f11, 0(x2) # load 0x00000000 from memory into f11
fmsub.s f18, f17, f19, f11, dyn # perform operation
fmsub.s f18, f17, f19, f11, rdn # perform operation
fmsub.s f18, f17, f19, f11, rmm # perform operation
fmsub.s f18, f17, f19, f11, rne # perform operation
fmsub.s f18, f17, f19, f11, rtz # perform operation
fmsub.s f18, f17, f19, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f18, f17, f19, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f18, f17, f19, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f18, f17, f19, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f18, f17, f19, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f18, f17, f19, f11 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x80000000)
li x12, 0xc6f2ddf086c72014 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f3, 0(x2) # load 0x00000000 from memory into f3
li x3, 0x5a11bf232142c722 # load x3 with value 0x5a11bf232142c722
sw x3, 0(x2) # store 0x5a11bf232142c722 in memory
flw f31, 0(x2) # load 0x5a11bf232142c722 from memory into f31
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f9, 0(x2) # load 0x80000000 from memory into f9
fmsub.s f12, f3, f31, f9, dyn # perform operation
fmsub.s f12, f3, f31, f9, rdn # perform operation
fmsub.s f12, f3, f31, f9, rmm # perform operation
fmsub.s f12, f3, f31, f9, rne # perform operation
fmsub.s f12, f3, f31, f9, rtz # perform operation
fmsub.s f12, f3, f31, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f12, f3, f31, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f12, f3, f31, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f12, f3, f31, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f12, f3, f31, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f12, f3, f31, f9 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x3f800000)
li x14, 0x48afa8babd3476d2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f16, 0(x2) # load 0x00000000 from memory into f16
li x3, 0xc415a5c583f1e43b # load x3 with value 0xc415a5c583f1e43b
sw x3, 0(x2) # store 0xc415a5c583f1e43b in memory
flw f24, 0(x2) # load 0xc415a5c583f1e43b from memory into f24
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f31, 0(x2) # load 0x3f800000 from memory into f31
fmsub.s f14, f16, f24, f31, dyn # perform operation
fmsub.s f14, f16, f24, f31, rdn # perform operation
fmsub.s f14, f16, f24, f31, rmm # perform operation
fmsub.s f14, f16, f24, f31, rne # perform operation
fmsub.s f14, f16, f24, f31, rtz # perform operation
fmsub.s f14, f16, f24, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f14, f16, f24, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f14, f16, f24, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f14, f16, f24, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f14, f16, f24, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f14, f16, f24, f31 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0xbf800000)
li x16, 0x323e3a3ea00063f7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f25, 0(x2) # load 0x00000000 from memory into f25
li x3, 0xd7094fd6b0891cb8 # load x3 with value 0xd7094fd6b0891cb8
sw x3, 0(x2) # store 0xd7094fd6b0891cb8 in memory
flw f4, 0(x2) # load 0xd7094fd6b0891cb8 from memory into f4
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f17, 0(x2) # load 0xbf800000 from memory into f17
fmsub.s f16, f25, f4, f17, dyn # perform operation
fmsub.s f16, f25, f4, f17, rdn # perform operation
fmsub.s f16, f25, f4, f17, rmm # perform operation
fmsub.s f16, f25, f4, f17, rne # perform operation
fmsub.s f16, f25, f4, f17, rtz # perform operation
fmsub.s f16, f25, f4, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f16, f25, f4, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f16, f25, f4, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f16, f25, f4, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f16, f25, f4, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f16, f25, f4, f17 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x3fc00000)
li x26, 0xa49a5f5857ec7905 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f17, 0(x2) # load 0x00000000 from memory into f17
li x3, 0xa20a7e93c23f9ad4 # load x3 with value 0xa20a7e93c23f9ad4
sw x3, 0(x2) # store 0xa20a7e93c23f9ad4 in memory
flw f31, 0(x2) # load 0xa20a7e93c23f9ad4 from memory into f31
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f4, 0(x2) # load 0x3fc00000 from memory into f4
fmsub.s f26, f17, f31, f4, dyn # perform operation
fmsub.s f26, f17, f31, f4, rdn # perform operation
fmsub.s f26, f17, f31, f4, rmm # perform operation
fmsub.s f26, f17, f31, f4, rne # perform operation
fmsub.s f26, f17, f31, f4, rtz # perform operation
fmsub.s f26, f17, f31, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f26, f17, f31, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f26, f17, f31, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f26, f17, f31, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f26, f17, f31, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f26, f17, f31, f4 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0xbfc00000)
li x1, 0xa4c9dd82b15fa8f5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f4, 0(x2) # load 0x00000000 from memory into f4
li x3, 0xa18d9c76d63b3cc3 # load x3 with value 0xa18d9c76d63b3cc3
sw x3, 0(x2) # store 0xa18d9c76d63b3cc3 in memory
flw f2, 0(x2) # load 0xa18d9c76d63b3cc3 from memory into f2
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f23, 0(x2) # load 0xbfc00000 from memory into f23
fmsub.s f1, f4, f2, f23, dyn # perform operation
fmsub.s f1, f4, f2, f23, rdn # perform operation
fmsub.s f1, f4, f2, f23, rmm # perform operation
fmsub.s f1, f4, f2, f23, rne # perform operation
fmsub.s f1, f4, f2, f23, rtz # perform operation
fmsub.s f1, f4, f2, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f1, f4, f2, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f1, f4, f2, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f1, f4, f2, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f1, f4, f2, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f1, f4, f2, f23 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x40000000)
li x17, 0xb79580edb4f6f5c6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f14, 0(x2) # load 0x00000000 from memory into f14
li x3, 0x375a1299deb9c463 # load x3 with value 0x375a1299deb9c463
sw x3, 0(x2) # store 0x375a1299deb9c463 in memory
flw f12, 0(x2) # load 0x375a1299deb9c463 from memory into f12
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f24, 0(x2) # load 0x40000000 from memory into f24
fmsub.s f17, f14, f12, f24, dyn # perform operation
fmsub.s f17, f14, f12, f24, rdn # perform operation
fmsub.s f17, f14, f12, f24, rmm # perform operation
fmsub.s f17, f14, f12, f24, rne # perform operation
fmsub.s f17, f14, f12, f24, rtz # perform operation
fmsub.s f17, f14, f12, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f17, f14, f12, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f17, f14, f12, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f17, f14, f12, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f17, f14, f12, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f17, f14, f12, f24 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0xc0000000)
li x6, 0x4564ad121058bf9b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f15, 0(x2) # load 0x00000000 from memory into f15
li x3, 0x75b4c17b27e4dbde # load x3 with value 0x75b4c17b27e4dbde
sw x3, 0(x2) # store 0x75b4c17b27e4dbde in memory
flw f24, 0(x2) # load 0x75b4c17b27e4dbde from memory into f24
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f20, 0(x2) # load 0xc0000000 from memory into f20
fmsub.s f6, f15, f24, f20, dyn # perform operation
fmsub.s f6, f15, f24, f20, rdn # perform operation
fmsub.s f6, f15, f24, f20, rmm # perform operation
fmsub.s f6, f15, f24, f20, rne # perform operation
fmsub.s f6, f15, f24, f20, rtz # perform operation
fmsub.s f6, f15, f24, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f6, f15, f24, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f6, f15, f24, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f6, f15, f24, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f6, f15, f24, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f6, f15, f24, f20 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x800000)
li x22, 0x42b299eb914bc58d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f12, 0(x2) # load 0x00000000 from memory into f12
li x3, 0x680c7e9c14510857 # load x3 with value 0x680c7e9c14510857
sw x3, 0(x2) # store 0x680c7e9c14510857 in memory
flw f3, 0(x2) # load 0x680c7e9c14510857 from memory into f3
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f13, 0(x2) # load 0x00800000 from memory into f13
fmsub.s f22, f12, f3, f13, dyn # perform operation
fmsub.s f22, f12, f3, f13, rdn # perform operation
fmsub.s f22, f12, f3, f13, rmm # perform operation
fmsub.s f22, f12, f3, f13, rne # perform operation
fmsub.s f22, f12, f3, f13, rtz # perform operation
fmsub.s f22, f12, f3, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f22, f12, f3, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f22, f12, f3, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f22, f12, f3, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f22, f12, f3, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f22, f12, f3, f13 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x80800000)
li x27, 0x739a03831e103a39 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f14, 0(x2) # load 0x00000000 from memory into f14
li x3, 0x33b444404e971902 # load x3 with value 0x33b444404e971902
sw x3, 0(x2) # store 0x33b444404e971902 in memory
flw f3, 0(x2) # load 0x33b444404e971902 from memory into f3
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f24, 0(x2) # load 0x80800000 from memory into f24
fmsub.s f27, f14, f3, f24, dyn # perform operation
fmsub.s f27, f14, f3, f24, rdn # perform operation
fmsub.s f27, f14, f3, f24, rmm # perform operation
fmsub.s f27, f14, f3, f24, rne # perform operation
fmsub.s f27, f14, f3, f24, rtz # perform operation
fmsub.s f27, f14, f3, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f27, f14, f3, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f27, f14, f3, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f27, f14, f3, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f27, f14, f3, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f27, f14, f3, f24 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x7f7fffff)
li x9, 0xd1d924fc0ab3e411 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f15, 0(x2) # load 0x00000000 from memory into f15
li x3, 0x12a3e7fff9aefb20 # load x3 with value 0x12a3e7fff9aefb20
sw x3, 0(x2) # store 0x12a3e7fff9aefb20 in memory
flw f20, 0(x2) # load 0x12a3e7fff9aefb20 from memory into f20
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f19, 0(x2) # load 0x7f7fffff from memory into f19
fmsub.s f9, f15, f20, f19, dyn # perform operation
fmsub.s f9, f15, f20, f19, rdn # perform operation
fmsub.s f9, f15, f20, f19, rmm # perform operation
fmsub.s f9, f15, f20, f19, rne # perform operation
fmsub.s f9, f15, f20, f19, rtz # perform operation
fmsub.s f9, f15, f20, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f9, f15, f20, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f9, f15, f20, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f9, f15, f20, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f9, f15, f20, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f9, f15, f20, f19 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0xff7fffff)
li x14, 0xeed01a1e28728325 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f25, 0(x2) # load 0x00000000 from memory into f25
li x3, 0x94115f46076e3d12 # load x3 with value 0x94115f46076e3d12
sw x3, 0(x2) # store 0x94115f46076e3d12 in memory
flw f31, 0(x2) # load 0x94115f46076e3d12 from memory into f31
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f28, 0(x2) # load 0xff7fffff from memory into f28
fmsub.s f14, f25, f31, f28, dyn # perform operation
fmsub.s f14, f25, f31, f28, rdn # perform operation
fmsub.s f14, f25, f31, f28, rmm # perform operation
fmsub.s f14, f25, f31, f28, rne # perform operation
fmsub.s f14, f25, f31, f28, rtz # perform operation
fmsub.s f14, f25, f31, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f14, f25, f31, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f14, f25, f31, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f14, f25, f31, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f14, f25, f31, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f14, f25, f31, f28 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x7fffff)
li x17, 0xe7fe3def16fc2bbb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f27, 0(x2) # load 0x00000000 from memory into f27
li x3, 0x811e5ffab914650e # load x3 with value 0x811e5ffab914650e
sw x3, 0(x2) # store 0x811e5ffab914650e in memory
flw f14, 0(x2) # load 0x811e5ffab914650e from memory into f14
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f19, 0(x2) # load 0x007fffff from memory into f19
fmsub.s f17, f27, f14, f19, dyn # perform operation
fmsub.s f17, f27, f14, f19, rdn # perform operation
fmsub.s f17, f27, f14, f19, rmm # perform operation
fmsub.s f17, f27, f14, f19, rne # perform operation
fmsub.s f17, f27, f14, f19, rtz # perform operation
fmsub.s f17, f27, f14, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f17, f27, f14, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f17, f27, f14, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f17, f27, f14, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f17, f27, f14, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f17, f27, f14, f19 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x807fffff)
li x25, 0xc4df881b2dc15dd0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f21, 0(x2) # load 0x00000000 from memory into f21
li x3, 0x7eac1102631fa9d0 # load x3 with value 0x7eac1102631fa9d0
sw x3, 0(x2) # store 0x7eac1102631fa9d0 in memory
flw f1, 0(x2) # load 0x7eac1102631fa9d0 from memory into f1
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f6, 0(x2) # load 0x807fffff from memory into f6
fmsub.s f25, f21, f1, f6, dyn # perform operation
fmsub.s f25, f21, f1, f6, rdn # perform operation
fmsub.s f25, f21, f1, f6, rmm # perform operation
fmsub.s f25, f21, f1, f6, rne # perform operation
fmsub.s f25, f21, f1, f6, rtz # perform operation
fmsub.s f25, f21, f1, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f25, f21, f1, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f25, f21, f1, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f25, f21, f1, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f25, f21, f1, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f25, f21, f1, f6 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x400000)
li x14, 0xf932ae03de22b9a7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f30, 0(x2) # load 0x00000000 from memory into f30
li x3, 0xfb42335333c0762c # load x3 with value 0xfb42335333c0762c
sw x3, 0(x2) # store 0xfb42335333c0762c in memory
flw f5, 0(x2) # load 0xfb42335333c0762c from memory into f5
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f19, 0(x2) # load 0x00400000 from memory into f19
fmsub.s f14, f30, f5, f19, dyn # perform operation
fmsub.s f14, f30, f5, f19, rdn # perform operation
fmsub.s f14, f30, f5, f19, rmm # perform operation
fmsub.s f14, f30, f5, f19, rne # perform operation
fmsub.s f14, f30, f5, f19, rtz # perform operation
fmsub.s f14, f30, f5, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f14, f30, f5, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f14, f30, f5, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f14, f30, f5, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f14, f30, f5, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f14, f30, f5, f19 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x80400000)
li x20, 0xa14027e2b457a38e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f27, 0(x2) # load 0x00000000 from memory into f27
li x3, 0x7dd8d7b539602f10 # load x3 with value 0x7dd8d7b539602f10
sw x3, 0(x2) # store 0x7dd8d7b539602f10 in memory
flw f2, 0(x2) # load 0x7dd8d7b539602f10 from memory into f2
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f18, 0(x2) # load 0x80400000 from memory into f18
fmsub.s f20, f27, f2, f18, dyn # perform operation
fmsub.s f20, f27, f2, f18, rdn # perform operation
fmsub.s f20, f27, f2, f18, rmm # perform operation
fmsub.s f20, f27, f2, f18, rne # perform operation
fmsub.s f20, f27, f2, f18, rtz # perform operation
fmsub.s f20, f27, f2, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f20, f27, f2, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f20, f27, f2, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f20, f27, f2, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f20, f27, f2, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f20, f27, f2, f18 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x1)
li x28, 0xf15a50da4272a339 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f6, 0(x2) # load 0x00000000 from memory into f6
li x3, 0x6c999908e825bd7b # load x3 with value 0x6c999908e825bd7b
sw x3, 0(x2) # store 0x6c999908e825bd7b in memory
flw f18, 0(x2) # load 0x6c999908e825bd7b from memory into f18
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f31, 0(x2) # load 0x00000001 from memory into f31
fmsub.s f28, f6, f18, f31, dyn # perform operation
fmsub.s f28, f6, f18, f31, rdn # perform operation
fmsub.s f28, f6, f18, f31, rmm # perform operation
fmsub.s f28, f6, f18, f31, rne # perform operation
fmsub.s f28, f6, f18, f31, rtz # perform operation
fmsub.s f28, f6, f18, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f28, f6, f18, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f28, f6, f18, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f28, f6, f18, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f28, f6, f18, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f28, f6, f18, f31 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x80000001)
li x22, 0x358b03e300ce50ab # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f8, 0(x2) # load 0x00000000 from memory into f8
li x3, 0x911ef9e923a7807a # load x3 with value 0x911ef9e923a7807a
sw x3, 0(x2) # store 0x911ef9e923a7807a in memory
flw f17, 0(x2) # load 0x911ef9e923a7807a from memory into f17
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f11, 0(x2) # load 0x80000001 from memory into f11
fmsub.s f22, f8, f17, f11, dyn # perform operation
fmsub.s f22, f8, f17, f11, rdn # perform operation
fmsub.s f22, f8, f17, f11, rmm # perform operation
fmsub.s f22, f8, f17, f11, rne # perform operation
fmsub.s f22, f8, f17, f11, rtz # perform operation
fmsub.s f22, f8, f17, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f22, f8, f17, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f22, f8, f17, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f22, f8, f17, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f22, f8, f17, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f22, f8, f17, f11 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x7f800000)
li x4, 0xbeb63af979b9b1e4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f24, 0(x2) # load 0x00000000 from memory into f24
li x3, 0x372e6976436173d7 # load x3 with value 0x372e6976436173d7
sw x3, 0(x2) # store 0x372e6976436173d7 in memory
flw f9, 0(x2) # load 0x372e6976436173d7 from memory into f9
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f14, 0(x2) # load 0x7f800000 from memory into f14
fmsub.s f4, f24, f9, f14, dyn # perform operation
fmsub.s f4, f24, f9, f14, rdn # perform operation
fmsub.s f4, f24, f9, f14, rmm # perform operation
fmsub.s f4, f24, f9, f14, rne # perform operation
fmsub.s f4, f24, f9, f14, rtz # perform operation
fmsub.s f4, f24, f9, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f4, f24, f9, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f4, f24, f9, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f4, f24, f9, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f4, f24, f9, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f4, f24, f9, f14 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0xff800000)
li x16, 0x040ea01bc3463250 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f17, 0(x2) # load 0x00000000 from memory into f17
li x3, 0x38de7615ed0bc485 # load x3 with value 0x38de7615ed0bc485
sw x3, 0(x2) # store 0x38de7615ed0bc485 in memory
flw f18, 0(x2) # load 0x38de7615ed0bc485 from memory into f18
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f3, 0(x2) # load 0xff800000 from memory into f3
fmsub.s f16, f17, f18, f3, dyn # perform operation
fmsub.s f16, f17, f18, f3, rdn # perform operation
fmsub.s f16, f17, f18, f3, rmm # perform operation
fmsub.s f16, f17, f18, f3, rne # perform operation
fmsub.s f16, f17, f18, f3, rtz # perform operation
fmsub.s f16, f17, f18, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f16, f17, f18, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f16, f17, f18, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f16, f17, f18, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f16, f17, f18, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f16, f17, f18, f3 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x7fc00000)
li x11, 0x31f62f7284409828 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f18, 0(x2) # load 0x00000000 from memory into f18
li x3, 0x8f6f532b5d3ff324 # load x3 with value 0x8f6f532b5d3ff324
sw x3, 0(x2) # store 0x8f6f532b5d3ff324 in memory
flw f10, 0(x2) # load 0x8f6f532b5d3ff324 from memory into f10
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f16, 0(x2) # load 0x7fc00000 from memory into f16
fmsub.s f11, f18, f10, f16, dyn # perform operation
fmsub.s f11, f18, f10, f16, rdn # perform operation
fmsub.s f11, f18, f10, f16, rmm # perform operation
fmsub.s f11, f18, f10, f16, rne # perform operation
fmsub.s f11, f18, f10, f16, rtz # perform operation
fmsub.s f11, f18, f10, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f11, f18, f10, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f11, f18, f10, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f11, f18, f10, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f11, f18, f10, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f11, f18, f10, f16 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x7fffffff)
li x28, 0x7439881585dacf01 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f19, 0(x2) # load 0x00000000 from memory into f19
li x3, 0x522062b51d81c313 # load x3 with value 0x522062b51d81c313
sw x3, 0(x2) # store 0x522062b51d81c313 in memory
flw f15, 0(x2) # load 0x522062b51d81c313 from memory into f15
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f24, 0(x2) # load 0x7fffffff from memory into f24
fmsub.s f28, f19, f15, f24, dyn # perform operation
fmsub.s f28, f19, f15, f24, rdn # perform operation
fmsub.s f28, f19, f15, f24, rmm # perform operation
fmsub.s f28, f19, f15, f24, rne # perform operation
fmsub.s f28, f19, f15, f24, rtz # perform operation
fmsub.s f28, f19, f15, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f28, f19, f15, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f28, f19, f15, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f28, f19, f15, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f28, f19, f15, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f28, f19, f15, f24 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x7f800001)
li x3, 0x0c81dfba5e40c4d4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f22, 0(x2) # load 0x00000000 from memory into f22
li x3, 0xa407c94e415b27a9 # load x3 with value 0xa407c94e415b27a9
sw x3, 0(x2) # store 0xa407c94e415b27a9 in memory
flw f11, 0(x2) # load 0xa407c94e415b27a9 from memory into f11
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f26, 0(x2) # load 0x7f800001 from memory into f26
fmsub.s f3, f22, f11, f26, dyn # perform operation
fmsub.s f3, f22, f11, f26, rdn # perform operation
fmsub.s f3, f22, f11, f26, rmm # perform operation
fmsub.s f3, f22, f11, f26, rne # perform operation
fmsub.s f3, f22, f11, f26, rtz # perform operation
fmsub.s f3, f22, f11, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f3, f22, f11, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f3, f22, f11, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f3, f22, f11, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f3, f22, f11, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f3, f22, f11, f26 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x7fbfffff)
li x31, 0xedbf89b696e2f3df # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f15, 0(x2) # load 0x00000000 from memory into f15
li x3, 0xce0c9461d4764d80 # load x3 with value 0xce0c9461d4764d80
sw x3, 0(x2) # store 0xce0c9461d4764d80 in memory
flw f1, 0(x2) # load 0xce0c9461d4764d80 from memory into f1
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f30, 0(x2) # load 0x7fbfffff from memory into f30
fmsub.s f31, f15, f1, f30, dyn # perform operation
fmsub.s f31, f15, f1, f30, rdn # perform operation
fmsub.s f31, f15, f1, f30, rmm # perform operation
fmsub.s f31, f15, f1, f30, rne # perform operation
fmsub.s f31, f15, f1, f30, rtz # perform operation
fmsub.s f31, f15, f1, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f31, f15, f1, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f31, f15, f1, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f31, f15, f1, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f31, f15, f1, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f31, f15, f1, f30 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x7ef8654f)
li x26, 0x76aa13775d0c5a56 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f3, 0(x2) # load 0x00000000 from memory into f3
li x3, 0xf2de168a68980626 # load x3 with value 0xf2de168a68980626
sw x3, 0(x2) # store 0xf2de168a68980626 in memory
flw f12, 0(x2) # load 0xf2de168a68980626 from memory into f12
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f1, 0(x2) # load 0x7ef8654f from memory into f1
fmsub.s f26, f3, f12, f1, dyn # perform operation
fmsub.s f26, f3, f12, f1, rdn # perform operation
fmsub.s f26, f3, f12, f1, rmm # perform operation
fmsub.s f26, f3, f12, f1, rne # perform operation
fmsub.s f26, f3, f12, f1, rtz # perform operation
fmsub.s f26, f3, f12, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f26, f3, f12, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f26, f3, f12, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f26, f3, f12, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f26, f3, f12, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f26, f3, f12, f1 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x813d9ab0)
li x7, 0xc31cce75f3e2110d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f22, 0(x2) # load 0x00000000 from memory into f22
li x3, 0x7c86871f2226056d # load x3 with value 0x7c86871f2226056d
sw x3, 0(x2) # store 0x7c86871f2226056d in memory
flw f24, 0(x2) # load 0x7c86871f2226056d from memory into f24
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f13, 0(x2) # load 0x813d9ab0 from memory into f13
fmsub.s f7, f22, f24, f13, dyn # perform operation
fmsub.s f7, f22, f24, f13, rdn # perform operation
fmsub.s f7, f22, f24, f13, rmm # perform operation
fmsub.s f7, f22, f24, f13, rne # perform operation
fmsub.s f7, f22, f24, f13, rtz # perform operation
fmsub.s f7, f22, f24, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f7, f22, f24, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f7, f22, f24, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f7, f22, f24, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f7, f22, f24, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f7, f22, f24, f13 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0x0)
li x6, 0x4e94f141118137dd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f24, 0(x2) # load 0x80000000 from memory into f24
li x3, 0x50efc87fb872f4f3 # load x3 with value 0x50efc87fb872f4f3
sw x3, 0(x2) # store 0x50efc87fb872f4f3 in memory
flw f30, 0(x2) # load 0x50efc87fb872f4f3 from memory into f30
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f31, 0(x2) # load 0x00000000 from memory into f31
fmsub.s f6, f24, f30, f31, dyn # perform operation
fmsub.s f6, f24, f30, f31, rdn # perform operation
fmsub.s f6, f24, f30, f31, rmm # perform operation
fmsub.s f6, f24, f30, f31, rne # perform operation
fmsub.s f6, f24, f30, f31, rtz # perform operation
fmsub.s f6, f24, f30, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f6, f24, f30, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f6, f24, f30, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f6, f24, f30, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f6, f24, f30, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f6, f24, f30, f31 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0x80000000)
li x15, 0x1e224d43e5c8dba0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f17, 0(x2) # load 0x80000000 from memory into f17
li x3, 0x34781105954c6fe5 # load x3 with value 0x34781105954c6fe5
sw x3, 0(x2) # store 0x34781105954c6fe5 in memory
flw f25, 0(x2) # load 0x34781105954c6fe5 from memory into f25
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f26, 0(x2) # load 0x80000000 from memory into f26
fmsub.s f15, f17, f25, f26, dyn # perform operation
fmsub.s f15, f17, f25, f26, rdn # perform operation
fmsub.s f15, f17, f25, f26, rmm # perform operation
fmsub.s f15, f17, f25, f26, rne # perform operation
fmsub.s f15, f17, f25, f26, rtz # perform operation
fmsub.s f15, f17, f25, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f15, f17, f25, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f15, f17, f25, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f15, f17, f25, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f15, f17, f25, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f15, f17, f25, f26 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0x3f800000)
li x15, 0x6a2d945b17a4aed5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f29, 0(x2) # load 0x80000000 from memory into f29
li x3, 0xdd15b4ef317b2cb1 # load x3 with value 0xdd15b4ef317b2cb1
sw x3, 0(x2) # store 0xdd15b4ef317b2cb1 in memory
flw f2, 0(x2) # load 0xdd15b4ef317b2cb1 from memory into f2
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f27, 0(x2) # load 0x3f800000 from memory into f27
fmsub.s f15, f29, f2, f27, dyn # perform operation
fmsub.s f15, f29, f2, f27, rdn # perform operation
fmsub.s f15, f29, f2, f27, rmm # perform operation
fmsub.s f15, f29, f2, f27, rne # perform operation
fmsub.s f15, f29, f2, f27, rtz # perform operation
fmsub.s f15, f29, f2, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f15, f29, f2, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f15, f29, f2, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f15, f29, f2, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f15, f29, f2, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f15, f29, f2, f27 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0xbf800000)
li x27, 0x8d9667d3a1c5210c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f28, 0(x2) # load 0x80000000 from memory into f28
li x3, 0xb43b44373ed2a08d # load x3 with value 0xb43b44373ed2a08d
sw x3, 0(x2) # store 0xb43b44373ed2a08d in memory
flw f14, 0(x2) # load 0xb43b44373ed2a08d from memory into f14
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f11, 0(x2) # load 0xbf800000 from memory into f11
fmsub.s f27, f28, f14, f11, dyn # perform operation
fmsub.s f27, f28, f14, f11, rdn # perform operation
fmsub.s f27, f28, f14, f11, rmm # perform operation
fmsub.s f27, f28, f14, f11, rne # perform operation
fmsub.s f27, f28, f14, f11, rtz # perform operation
fmsub.s f27, f28, f14, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f27, f28, f14, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f27, f28, f14, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f27, f28, f14, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f27, f28, f14, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f27, f28, f14, f11 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0x3fc00000)
li x27, 0xa0aca63b8697ffd6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f8, 0(x2) # load 0x80000000 from memory into f8
li x3, 0xdd70c7739e8d29e9 # load x3 with value 0xdd70c7739e8d29e9
sw x3, 0(x2) # store 0xdd70c7739e8d29e9 in memory
flw f24, 0(x2) # load 0xdd70c7739e8d29e9 from memory into f24
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f11, 0(x2) # load 0x3fc00000 from memory into f11
fmsub.s f27, f8, f24, f11, dyn # perform operation
fmsub.s f27, f8, f24, f11, rdn # perform operation
fmsub.s f27, f8, f24, f11, rmm # perform operation
fmsub.s f27, f8, f24, f11, rne # perform operation
fmsub.s f27, f8, f24, f11, rtz # perform operation
fmsub.s f27, f8, f24, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f27, f8, f24, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f27, f8, f24, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f27, f8, f24, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f27, f8, f24, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f27, f8, f24, f11 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0xbfc00000)
li x22, 0x256b52e9c93ae504 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f14, 0(x2) # load 0x80000000 from memory into f14
li x3, 0xb74ff20b3d379b48 # load x3 with value 0xb74ff20b3d379b48
sw x3, 0(x2) # store 0xb74ff20b3d379b48 in memory
flw f18, 0(x2) # load 0xb74ff20b3d379b48 from memory into f18
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f29, 0(x2) # load 0xbfc00000 from memory into f29
fmsub.s f22, f14, f18, f29, dyn # perform operation
fmsub.s f22, f14, f18, f29, rdn # perform operation
fmsub.s f22, f14, f18, f29, rmm # perform operation
fmsub.s f22, f14, f18, f29, rne # perform operation
fmsub.s f22, f14, f18, f29, rtz # perform operation
fmsub.s f22, f14, f18, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f22, f14, f18, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f22, f14, f18, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f22, f14, f18, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f22, f14, f18, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f22, f14, f18, f29 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0x40000000)
li x16, 0xd02840c2f39990bb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f26, 0(x2) # load 0x80000000 from memory into f26
li x3, 0x681d325795f618dd # load x3 with value 0x681d325795f618dd
sw x3, 0(x2) # store 0x681d325795f618dd in memory
flw f23, 0(x2) # load 0x681d325795f618dd from memory into f23
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f14, 0(x2) # load 0x40000000 from memory into f14
fmsub.s f16, f26, f23, f14, dyn # perform operation
fmsub.s f16, f26, f23, f14, rdn # perform operation
fmsub.s f16, f26, f23, f14, rmm # perform operation
fmsub.s f16, f26, f23, f14, rne # perform operation
fmsub.s f16, f26, f23, f14, rtz # perform operation
fmsub.s f16, f26, f23, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f16, f26, f23, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f16, f26, f23, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f16, f26, f23, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f16, f26, f23, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f16, f26, f23, f14 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0xc0000000)
li x8, 0xb1a4b11a94841874 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f28, 0(x2) # load 0x80000000 from memory into f28
li x3, 0xb727b87039a5b6df # load x3 with value 0xb727b87039a5b6df
sw x3, 0(x2) # store 0xb727b87039a5b6df in memory
flw f20, 0(x2) # load 0xb727b87039a5b6df from memory into f20
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f7, 0(x2) # load 0xc0000000 from memory into f7
fmsub.s f8, f28, f20, f7, dyn # perform operation
fmsub.s f8, f28, f20, f7, rdn # perform operation
fmsub.s f8, f28, f20, f7, rmm # perform operation
fmsub.s f8, f28, f20, f7, rne # perform operation
fmsub.s f8, f28, f20, f7, rtz # perform operation
fmsub.s f8, f28, f20, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f8, f28, f20, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f8, f28, f20, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f8, f28, f20, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f8, f28, f20, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f8, f28, f20, f7 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0x800000)
li x6, 0x8474aae033333203 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f22, 0(x2) # load 0x80000000 from memory into f22
li x3, 0xd14b589f9c29fc72 # load x3 with value 0xd14b589f9c29fc72
sw x3, 0(x2) # store 0xd14b589f9c29fc72 in memory
flw f26, 0(x2) # load 0xd14b589f9c29fc72 from memory into f26
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f3, 0(x2) # load 0x00800000 from memory into f3
fmsub.s f6, f22, f26, f3, dyn # perform operation
fmsub.s f6, f22, f26, f3, rdn # perform operation
fmsub.s f6, f22, f26, f3, rmm # perform operation
fmsub.s f6, f22, f26, f3, rne # perform operation
fmsub.s f6, f22, f26, f3, rtz # perform operation
fmsub.s f6, f22, f26, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f6, f22, f26, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f6, f22, f26, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f6, f22, f26, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f6, f22, f26, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f6, f22, f26, f3 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0x80800000)
li x26, 0xafacf3c55e60a612 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f6, 0(x2) # load 0x80000000 from memory into f6
li x3, 0xbaa7ab623f1ee084 # load x3 with value 0xbaa7ab623f1ee084
sw x3, 0(x2) # store 0xbaa7ab623f1ee084 in memory
flw f9, 0(x2) # load 0xbaa7ab623f1ee084 from memory into f9
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f22, 0(x2) # load 0x80800000 from memory into f22
fmsub.s f26, f6, f9, f22, dyn # perform operation
fmsub.s f26, f6, f9, f22, rdn # perform operation
fmsub.s f26, f6, f9, f22, rmm # perform operation
fmsub.s f26, f6, f9, f22, rne # perform operation
fmsub.s f26, f6, f9, f22, rtz # perform operation
fmsub.s f26, f6, f9, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f26, f6, f9, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f26, f6, f9, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f26, f6, f9, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f26, f6, f9, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f26, f6, f9, f22 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0x7f7fffff)
li x24, 0x01c36b265d85902b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f4, 0(x2) # load 0x80000000 from memory into f4
li x3, 0xee5ff22eea8b744c # load x3 with value 0xee5ff22eea8b744c
sw x3, 0(x2) # store 0xee5ff22eea8b744c in memory
flw f11, 0(x2) # load 0xee5ff22eea8b744c from memory into f11
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f19, 0(x2) # load 0x7f7fffff from memory into f19
fmsub.s f24, f4, f11, f19, dyn # perform operation
fmsub.s f24, f4, f11, f19, rdn # perform operation
fmsub.s f24, f4, f11, f19, rmm # perform operation
fmsub.s f24, f4, f11, f19, rne # perform operation
fmsub.s f24, f4, f11, f19, rtz # perform operation
fmsub.s f24, f4, f11, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f24, f4, f11, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f24, f4, f11, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f24, f4, f11, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f24, f4, f11, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f24, f4, f11, f19 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0xff7fffff)
li x16, 0x6566d55fda09c20c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f9, 0(x2) # load 0x80000000 from memory into f9
li x3, 0xb424afaa5e13cf1b # load x3 with value 0xb424afaa5e13cf1b
sw x3, 0(x2) # store 0xb424afaa5e13cf1b in memory
flw f24, 0(x2) # load 0xb424afaa5e13cf1b from memory into f24
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f3, 0(x2) # load 0xff7fffff from memory into f3
fmsub.s f16, f9, f24, f3, dyn # perform operation
fmsub.s f16, f9, f24, f3, rdn # perform operation
fmsub.s f16, f9, f24, f3, rmm # perform operation
fmsub.s f16, f9, f24, f3, rne # perform operation
fmsub.s f16, f9, f24, f3, rtz # perform operation
fmsub.s f16, f9, f24, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f16, f9, f24, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f16, f9, f24, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f16, f9, f24, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f16, f9, f24, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f16, f9, f24, f3 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0x7fffff)
li x6, 0x5ef2ab7010ed7458 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f7, 0(x2) # load 0x80000000 from memory into f7
li x3, 0x5b2fe78b58b4e637 # load x3 with value 0x5b2fe78b58b4e637
sw x3, 0(x2) # store 0x5b2fe78b58b4e637 in memory
flw f2, 0(x2) # load 0x5b2fe78b58b4e637 from memory into f2
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f31, 0(x2) # load 0x007fffff from memory into f31
fmsub.s f6, f7, f2, f31, dyn # perform operation
fmsub.s f6, f7, f2, f31, rdn # perform operation
fmsub.s f6, f7, f2, f31, rmm # perform operation
fmsub.s f6, f7, f2, f31, rne # perform operation
fmsub.s f6, f7, f2, f31, rtz # perform operation
fmsub.s f6, f7, f2, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f6, f7, f2, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f6, f7, f2, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f6, f7, f2, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f6, f7, f2, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f6, f7, f2, f31 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0x807fffff)
li x24, 0x0326288bc7f211d3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f25, 0(x2) # load 0x80000000 from memory into f25
li x3, 0x15af89000c64ea6a # load x3 with value 0x15af89000c64ea6a
sw x3, 0(x2) # store 0x15af89000c64ea6a in memory
flw f4, 0(x2) # load 0x15af89000c64ea6a from memory into f4
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f13, 0(x2) # load 0x807fffff from memory into f13
fmsub.s f24, f25, f4, f13, dyn # perform operation
fmsub.s f24, f25, f4, f13, rdn # perform operation
fmsub.s f24, f25, f4, f13, rmm # perform operation
fmsub.s f24, f25, f4, f13, rne # perform operation
fmsub.s f24, f25, f4, f13, rtz # perform operation
fmsub.s f24, f25, f4, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f24, f25, f4, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f24, f25, f4, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f24, f25, f4, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f24, f25, f4, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f24, f25, f4, f13 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0x400000)
li x18, 0x2319c3ecac53cf88 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f24, 0(x2) # load 0x80000000 from memory into f24
li x3, 0xffb8cfb7373b8c79 # load x3 with value 0xffb8cfb7373b8c79
sw x3, 0(x2) # store 0xffb8cfb7373b8c79 in memory
flw f11, 0(x2) # load 0xffb8cfb7373b8c79 from memory into f11
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f28, 0(x2) # load 0x00400000 from memory into f28
fmsub.s f18, f24, f11, f28, dyn # perform operation
fmsub.s f18, f24, f11, f28, rdn # perform operation
fmsub.s f18, f24, f11, f28, rmm # perform operation
fmsub.s f18, f24, f11, f28, rne # perform operation
fmsub.s f18, f24, f11, f28, rtz # perform operation
fmsub.s f18, f24, f11, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f18, f24, f11, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f18, f24, f11, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f18, f24, f11, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f18, f24, f11, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f18, f24, f11, f28 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0x80400000)
li x28, 0x2955c8cc0cf09101 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f20, 0(x2) # load 0x80000000 from memory into f20
li x3, 0x4345438d2c4473b0 # load x3 with value 0x4345438d2c4473b0
sw x3, 0(x2) # store 0x4345438d2c4473b0 in memory
flw f25, 0(x2) # load 0x4345438d2c4473b0 from memory into f25
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f11, 0(x2) # load 0x80400000 from memory into f11
fmsub.s f28, f20, f25, f11, dyn # perform operation
fmsub.s f28, f20, f25, f11, rdn # perform operation
fmsub.s f28, f20, f25, f11, rmm # perform operation
fmsub.s f28, f20, f25, f11, rne # perform operation
fmsub.s f28, f20, f25, f11, rtz # perform operation
fmsub.s f28, f20, f25, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f28, f20, f25, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f28, f20, f25, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f28, f20, f25, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f28, f20, f25, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f28, f20, f25, f11 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0x1)
li x12, 0xbab770ba098ff6b1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f1, 0(x2) # load 0x80000000 from memory into f1
li x3, 0xb3209389e634a387 # load x3 with value 0xb3209389e634a387
sw x3, 0(x2) # store 0xb3209389e634a387 in memory
flw f18, 0(x2) # load 0xb3209389e634a387 from memory into f18
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f4, 0(x2) # load 0x00000001 from memory into f4
fmsub.s f12, f1, f18, f4, dyn # perform operation
fmsub.s f12, f1, f18, f4, rdn # perform operation
fmsub.s f12, f1, f18, f4, rmm # perform operation
fmsub.s f12, f1, f18, f4, rne # perform operation
fmsub.s f12, f1, f18, f4, rtz # perform operation
fmsub.s f12, f1, f18, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f12, f1, f18, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f12, f1, f18, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f12, f1, f18, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f12, f1, f18, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f12, f1, f18, f4 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0x80000001)
li x18, 0x1fb4c3fe37dab173 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f14, 0(x2) # load 0x80000000 from memory into f14
li x3, 0xb6220c7b5556b994 # load x3 with value 0xb6220c7b5556b994
sw x3, 0(x2) # store 0xb6220c7b5556b994 in memory
flw f16, 0(x2) # load 0xb6220c7b5556b994 from memory into f16
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f17, 0(x2) # load 0x80000001 from memory into f17
fmsub.s f18, f14, f16, f17, dyn # perform operation
fmsub.s f18, f14, f16, f17, rdn # perform operation
fmsub.s f18, f14, f16, f17, rmm # perform operation
fmsub.s f18, f14, f16, f17, rne # perform operation
fmsub.s f18, f14, f16, f17, rtz # perform operation
fmsub.s f18, f14, f16, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f18, f14, f16, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f18, f14, f16, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f18, f14, f16, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f18, f14, f16, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f18, f14, f16, f17 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0x7f800000)
li x3, 0x7eea3232bee460b4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f10, 0(x2) # load 0x80000000 from memory into f10
li x3, 0x1179526e64fe47d1 # load x3 with value 0x1179526e64fe47d1
sw x3, 0(x2) # store 0x1179526e64fe47d1 in memory
flw f13, 0(x2) # load 0x1179526e64fe47d1 from memory into f13
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f25, 0(x2) # load 0x7f800000 from memory into f25
fmsub.s f3, f10, f13, f25, dyn # perform operation
fmsub.s f3, f10, f13, f25, rdn # perform operation
fmsub.s f3, f10, f13, f25, rmm # perform operation
fmsub.s f3, f10, f13, f25, rne # perform operation
fmsub.s f3, f10, f13, f25, rtz # perform operation
fmsub.s f3, f10, f13, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f3, f10, f13, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f3, f10, f13, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f3, f10, f13, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f3, f10, f13, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f3, f10, f13, f25 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0xff800000)
li x18, 0xe18ae0d1da6f0e91 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f15, 0(x2) # load 0x80000000 from memory into f15
li x3, 0xbe59a56bf01d8e36 # load x3 with value 0xbe59a56bf01d8e36
sw x3, 0(x2) # store 0xbe59a56bf01d8e36 in memory
flw f23, 0(x2) # load 0xbe59a56bf01d8e36 from memory into f23
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f2, 0(x2) # load 0xff800000 from memory into f2
fmsub.s f18, f15, f23, f2, dyn # perform operation
fmsub.s f18, f15, f23, f2, rdn # perform operation
fmsub.s f18, f15, f23, f2, rmm # perform operation
fmsub.s f18, f15, f23, f2, rne # perform operation
fmsub.s f18, f15, f23, f2, rtz # perform operation
fmsub.s f18, f15, f23, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f18, f15, f23, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f18, f15, f23, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f18, f15, f23, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f18, f15, f23, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f18, f15, f23, f2 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0x7fc00000)
li x26, 0xfaf30876fff05555 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f30, 0(x2) # load 0x80000000 from memory into f30
li x3, 0xf99613ddcec2d539 # load x3 with value 0xf99613ddcec2d539
sw x3, 0(x2) # store 0xf99613ddcec2d539 in memory
flw f6, 0(x2) # load 0xf99613ddcec2d539 from memory into f6
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f27, 0(x2) # load 0x7fc00000 from memory into f27
fmsub.s f26, f30, f6, f27, dyn # perform operation
fmsub.s f26, f30, f6, f27, rdn # perform operation
fmsub.s f26, f30, f6, f27, rmm # perform operation
fmsub.s f26, f30, f6, f27, rne # perform operation
fmsub.s f26, f30, f6, f27, rtz # perform operation
fmsub.s f26, f30, f6, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f26, f30, f6, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f26, f30, f6, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f26, f30, f6, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f26, f30, f6, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f26, f30, f6, f27 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0x7fffffff)
li x6, 0x6d71e0647f45db58 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f4, 0(x2) # load 0x80000000 from memory into f4
li x3, 0x32d6c16e2a59c971 # load x3 with value 0x32d6c16e2a59c971
sw x3, 0(x2) # store 0x32d6c16e2a59c971 in memory
flw f23, 0(x2) # load 0x32d6c16e2a59c971 from memory into f23
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f24, 0(x2) # load 0x7fffffff from memory into f24
fmsub.s f6, f4, f23, f24, dyn # perform operation
fmsub.s f6, f4, f23, f24, rdn # perform operation
fmsub.s f6, f4, f23, f24, rmm # perform operation
fmsub.s f6, f4, f23, f24, rne # perform operation
fmsub.s f6, f4, f23, f24, rtz # perform operation
fmsub.s f6, f4, f23, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f6, f4, f23, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f6, f4, f23, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f6, f4, f23, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f6, f4, f23, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f6, f4, f23, f24 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0x7f800001)
li x10, 0x258ee474b5a16a18 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f8, 0(x2) # load 0x80000000 from memory into f8
li x3, 0xf3302113958e39b2 # load x3 with value 0xf3302113958e39b2
sw x3, 0(x2) # store 0xf3302113958e39b2 in memory
flw f5, 0(x2) # load 0xf3302113958e39b2 from memory into f5
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f2, 0(x2) # load 0x7f800001 from memory into f2
fmsub.s f10, f8, f5, f2, dyn # perform operation
fmsub.s f10, f8, f5, f2, rdn # perform operation
fmsub.s f10, f8, f5, f2, rmm # perform operation
fmsub.s f10, f8, f5, f2, rne # perform operation
fmsub.s f10, f8, f5, f2, rtz # perform operation
fmsub.s f10, f8, f5, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f10, f8, f5, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f10, f8, f5, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f10, f8, f5, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f10, f8, f5, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f10, f8, f5, f2 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0x7fbfffff)
li x8, 0x25a4796e76a5354e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f9, 0(x2) # load 0x80000000 from memory into f9
li x3, 0xefa7ad2552a88f58 # load x3 with value 0xefa7ad2552a88f58
sw x3, 0(x2) # store 0xefa7ad2552a88f58 in memory
flw f29, 0(x2) # load 0xefa7ad2552a88f58 from memory into f29
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f11, 0(x2) # load 0x7fbfffff from memory into f11
fmsub.s f8, f9, f29, f11, dyn # perform operation
fmsub.s f8, f9, f29, f11, rdn # perform operation
fmsub.s f8, f9, f29, f11, rmm # perform operation
fmsub.s f8, f9, f29, f11, rne # perform operation
fmsub.s f8, f9, f29, f11, rtz # perform operation
fmsub.s f8, f9, f29, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f8, f9, f29, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f8, f9, f29, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f8, f9, f29, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f8, f9, f29, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f8, f9, f29, f11 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0x7ef8654f)
li x3, 0xae9c049655c3a170 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f8, 0(x2) # load 0x80000000 from memory into f8
li x3, 0xee4fa731b68042dd # load x3 with value 0xee4fa731b68042dd
sw x3, 0(x2) # store 0xee4fa731b68042dd in memory
flw f29, 0(x2) # load 0xee4fa731b68042dd from memory into f29
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f19, 0(x2) # load 0x7ef8654f from memory into f19
fmsub.s f3, f8, f29, f19, dyn # perform operation
fmsub.s f3, f8, f29, f19, rdn # perform operation
fmsub.s f3, f8, f29, f19, rmm # perform operation
fmsub.s f3, f8, f29, f19, rne # perform operation
fmsub.s f3, f8, f29, f19, rtz # perform operation
fmsub.s f3, f8, f29, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f3, f8, f29, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f3, f8, f29, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f3, f8, f29, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f3, f8, f29, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f3, f8, f29, f19 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0x813d9ab0)
li x8, 0xd16a67b29402d2e1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f15, 0(x2) # load 0x80000000 from memory into f15
li x3, 0xc7f5ce3da91bb64b # load x3 with value 0xc7f5ce3da91bb64b
sw x3, 0(x2) # store 0xc7f5ce3da91bb64b in memory
flw f20, 0(x2) # load 0xc7f5ce3da91bb64b from memory into f20
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f27, 0(x2) # load 0x813d9ab0 from memory into f27
fmsub.s f8, f15, f20, f27, dyn # perform operation
fmsub.s f8, f15, f20, f27, rdn # perform operation
fmsub.s f8, f15, f20, f27, rmm # perform operation
fmsub.s f8, f15, f20, f27, rne # perform operation
fmsub.s f8, f15, f20, f27, rtz # perform operation
fmsub.s f8, f15, f20, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f8, f15, f20, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f8, f15, f20, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f8, f15, f20, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f8, f15, f20, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f8, f15, f20, f27 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0x0)
li x19, 0x5f76a0ee47b16521 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f7, 0(x2) # load 0x3f800000 from memory into f7
li x3, 0xfe5ff2562672d495 # load x3 with value 0xfe5ff2562672d495
sw x3, 0(x2) # store 0xfe5ff2562672d495 in memory
flw f10, 0(x2) # load 0xfe5ff2562672d495 from memory into f10
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f20, 0(x2) # load 0x00000000 from memory into f20
fmsub.s f19, f7, f10, f20, dyn # perform operation
fmsub.s f19, f7, f10, f20, rdn # perform operation
fmsub.s f19, f7, f10, f20, rmm # perform operation
fmsub.s f19, f7, f10, f20, rne # perform operation
fmsub.s f19, f7, f10, f20, rtz # perform operation
fmsub.s f19, f7, f10, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f19, f7, f10, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f19, f7, f10, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f19, f7, f10, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f19, f7, f10, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f19, f7, f10, f20 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0x80000000)
li x29, 0x40eea08c0c62c819 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f23, 0(x2) # load 0x3f800000 from memory into f23
li x3, 0x5c05a89c23a7e901 # load x3 with value 0x5c05a89c23a7e901
sw x3, 0(x2) # store 0x5c05a89c23a7e901 in memory
flw f2, 0(x2) # load 0x5c05a89c23a7e901 from memory into f2
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f14, 0(x2) # load 0x80000000 from memory into f14
fmsub.s f29, f23, f2, f14, dyn # perform operation
fmsub.s f29, f23, f2, f14, rdn # perform operation
fmsub.s f29, f23, f2, f14, rmm # perform operation
fmsub.s f29, f23, f2, f14, rne # perform operation
fmsub.s f29, f23, f2, f14, rtz # perform operation
fmsub.s f29, f23, f2, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f29, f23, f2, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f29, f23, f2, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f29, f23, f2, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f29, f23, f2, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f29, f23, f2, f14 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0x3f800000)
li x23, 0xb1b8b430e5e67952 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f25, 0(x2) # load 0x3f800000 from memory into f25
li x3, 0x54961d715ba986 # load x3 with value 0x54961d715ba986
sw x3, 0(x2) # store 0x54961d715ba986 in memory
flw f13, 0(x2) # load 0x54961d715ba986 from memory into f13
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f1, 0(x2) # load 0x3f800000 from memory into f1
fmsub.s f23, f25, f13, f1, dyn # perform operation
fmsub.s f23, f25, f13, f1, rdn # perform operation
fmsub.s f23, f25, f13, f1, rmm # perform operation
fmsub.s f23, f25, f13, f1, rne # perform operation
fmsub.s f23, f25, f13, f1, rtz # perform operation
fmsub.s f23, f25, f13, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f23, f25, f13, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f23, f25, f13, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f23, f25, f13, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f23, f25, f13, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f23, f25, f13, f1 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0xbf800000)
li x10, 0x2a82403e83eb869d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f7, 0(x2) # load 0x3f800000 from memory into f7
li x3, 0x7caca0a25894b82d # load x3 with value 0x7caca0a25894b82d
sw x3, 0(x2) # store 0x7caca0a25894b82d in memory
flw f15, 0(x2) # load 0x7caca0a25894b82d from memory into f15
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f8, 0(x2) # load 0xbf800000 from memory into f8
fmsub.s f10, f7, f15, f8, dyn # perform operation
fmsub.s f10, f7, f15, f8, rdn # perform operation
fmsub.s f10, f7, f15, f8, rmm # perform operation
fmsub.s f10, f7, f15, f8, rne # perform operation
fmsub.s f10, f7, f15, f8, rtz # perform operation
fmsub.s f10, f7, f15, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f10, f7, f15, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f10, f7, f15, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f10, f7, f15, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f10, f7, f15, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f10, f7, f15, f8 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0x3fc00000)
li x11, 0x4479cf3070ddee74 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f6, 0(x2) # load 0x3f800000 from memory into f6
li x3, 0x4adf3f392d7fd0e5 # load x3 with value 0x4adf3f392d7fd0e5
sw x3, 0(x2) # store 0x4adf3f392d7fd0e5 in memory
flw f15, 0(x2) # load 0x4adf3f392d7fd0e5 from memory into f15
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f13, 0(x2) # load 0x3fc00000 from memory into f13
fmsub.s f11, f6, f15, f13, dyn # perform operation
fmsub.s f11, f6, f15, f13, rdn # perform operation
fmsub.s f11, f6, f15, f13, rmm # perform operation
fmsub.s f11, f6, f15, f13, rne # perform operation
fmsub.s f11, f6, f15, f13, rtz # perform operation
fmsub.s f11, f6, f15, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f11, f6, f15, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f11, f6, f15, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f11, f6, f15, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f11, f6, f15, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f11, f6, f15, f13 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0xbfc00000)
li x11, 0x007c8d198001aacd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f30, 0(x2) # load 0x3f800000 from memory into f30
li x3, 0xa0f242548523f98b # load x3 with value 0xa0f242548523f98b
sw x3, 0(x2) # store 0xa0f242548523f98b in memory
flw f13, 0(x2) # load 0xa0f242548523f98b from memory into f13
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f5, 0(x2) # load 0xbfc00000 from memory into f5
fmsub.s f11, f30, f13, f5, dyn # perform operation
fmsub.s f11, f30, f13, f5, rdn # perform operation
fmsub.s f11, f30, f13, f5, rmm # perform operation
fmsub.s f11, f30, f13, f5, rne # perform operation
fmsub.s f11, f30, f13, f5, rtz # perform operation
fmsub.s f11, f30, f13, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f11, f30, f13, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f11, f30, f13, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f11, f30, f13, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f11, f30, f13, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f11, f30, f13, f5 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0x40000000)
li x31, 0x35e75e50a065afc1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f21, 0(x2) # load 0x3f800000 from memory into f21
li x3, 0xd25c6a63038ac286 # load x3 with value 0xd25c6a63038ac286
sw x3, 0(x2) # store 0xd25c6a63038ac286 in memory
flw f26, 0(x2) # load 0xd25c6a63038ac286 from memory into f26
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f8, 0(x2) # load 0x40000000 from memory into f8
fmsub.s f31, f21, f26, f8, dyn # perform operation
fmsub.s f31, f21, f26, f8, rdn # perform operation
fmsub.s f31, f21, f26, f8, rmm # perform operation
fmsub.s f31, f21, f26, f8, rne # perform operation
fmsub.s f31, f21, f26, f8, rtz # perform operation
fmsub.s f31, f21, f26, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f31, f21, f26, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f31, f21, f26, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f31, f21, f26, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f31, f21, f26, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f31, f21, f26, f8 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0xc0000000)
li x10, 0x12bb9d49617af288 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f2, 0(x2) # load 0x3f800000 from memory into f2
li x3, 0x7e21d080a4e8b9be # load x3 with value 0x7e21d080a4e8b9be
sw x3, 0(x2) # store 0x7e21d080a4e8b9be in memory
flw f3, 0(x2) # load 0x7e21d080a4e8b9be from memory into f3
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f27, 0(x2) # load 0xc0000000 from memory into f27
fmsub.s f10, f2, f3, f27, dyn # perform operation
fmsub.s f10, f2, f3, f27, rdn # perform operation
fmsub.s f10, f2, f3, f27, rmm # perform operation
fmsub.s f10, f2, f3, f27, rne # perform operation
fmsub.s f10, f2, f3, f27, rtz # perform operation
fmsub.s f10, f2, f3, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f10, f2, f3, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f10, f2, f3, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f10, f2, f3, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f10, f2, f3, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f10, f2, f3, f27 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0x800000)
li x30, 0xd4f57e2792c8ca9b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f16, 0(x2) # load 0x3f800000 from memory into f16
li x3, 0x6516c838bc8108bc # load x3 with value 0x6516c838bc8108bc
sw x3, 0(x2) # store 0x6516c838bc8108bc in memory
flw f23, 0(x2) # load 0x6516c838bc8108bc from memory into f23
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f19, 0(x2) # load 0x00800000 from memory into f19
fmsub.s f30, f16, f23, f19, dyn # perform operation
fmsub.s f30, f16, f23, f19, rdn # perform operation
fmsub.s f30, f16, f23, f19, rmm # perform operation
fmsub.s f30, f16, f23, f19, rne # perform operation
fmsub.s f30, f16, f23, f19, rtz # perform operation
fmsub.s f30, f16, f23, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f30, f16, f23, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f30, f16, f23, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f30, f16, f23, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f30, f16, f23, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f30, f16, f23, f19 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0x80800000)
li x26, 0xd8293c96b7acd7a6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f10, 0(x2) # load 0x3f800000 from memory into f10
li x3, 0x268727561bc2ff98 # load x3 with value 0x268727561bc2ff98
sw x3, 0(x2) # store 0x268727561bc2ff98 in memory
flw f19, 0(x2) # load 0x268727561bc2ff98 from memory into f19
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f24, 0(x2) # load 0x80800000 from memory into f24
fmsub.s f26, f10, f19, f24, dyn # perform operation
fmsub.s f26, f10, f19, f24, rdn # perform operation
fmsub.s f26, f10, f19, f24, rmm # perform operation
fmsub.s f26, f10, f19, f24, rne # perform operation
fmsub.s f26, f10, f19, f24, rtz # perform operation
fmsub.s f26, f10, f19, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f26, f10, f19, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f26, f10, f19, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f26, f10, f19, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f26, f10, f19, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f26, f10, f19, f24 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0x7f7fffff)
li x22, 0x9fb6fc5eae6a7b31 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f16, 0(x2) # load 0x3f800000 from memory into f16
li x3, 0x4787f8ee05aa82d3 # load x3 with value 0x4787f8ee05aa82d3
sw x3, 0(x2) # store 0x4787f8ee05aa82d3 in memory
flw f30, 0(x2) # load 0x4787f8ee05aa82d3 from memory into f30
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f9, 0(x2) # load 0x7f7fffff from memory into f9
fmsub.s f22, f16, f30, f9, dyn # perform operation
fmsub.s f22, f16, f30, f9, rdn # perform operation
fmsub.s f22, f16, f30, f9, rmm # perform operation
fmsub.s f22, f16, f30, f9, rne # perform operation
fmsub.s f22, f16, f30, f9, rtz # perform operation
fmsub.s f22, f16, f30, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f22, f16, f30, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f22, f16, f30, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f22, f16, f30, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f22, f16, f30, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f22, f16, f30, f9 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0xff7fffff)
li x25, 0x53e7966b2ddb2363 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f28, 0(x2) # load 0x3f800000 from memory into f28
li x3, 0x9409127b09ee818a # load x3 with value 0x9409127b09ee818a
sw x3, 0(x2) # store 0x9409127b09ee818a in memory
flw f17, 0(x2) # load 0x9409127b09ee818a from memory into f17
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f5, 0(x2) # load 0xff7fffff from memory into f5
fmsub.s f25, f28, f17, f5, dyn # perform operation
fmsub.s f25, f28, f17, f5, rdn # perform operation
fmsub.s f25, f28, f17, f5, rmm # perform operation
fmsub.s f25, f28, f17, f5, rne # perform operation
fmsub.s f25, f28, f17, f5, rtz # perform operation
fmsub.s f25, f28, f17, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f25, f28, f17, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f25, f28, f17, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f25, f28, f17, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f25, f28, f17, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f25, f28, f17, f5 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0x7fffff)
li x21, 0x0ceaf2f6c40d01ca # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f24, 0(x2) # load 0x3f800000 from memory into f24
li x3, 0x5a094d40e5e0e756 # load x3 with value 0x5a094d40e5e0e756
sw x3, 0(x2) # store 0x5a094d40e5e0e756 in memory
flw f26, 0(x2) # load 0x5a094d40e5e0e756 from memory into f26
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f8, 0(x2) # load 0x007fffff from memory into f8
fmsub.s f21, f24, f26, f8, dyn # perform operation
fmsub.s f21, f24, f26, f8, rdn # perform operation
fmsub.s f21, f24, f26, f8, rmm # perform operation
fmsub.s f21, f24, f26, f8, rne # perform operation
fmsub.s f21, f24, f26, f8, rtz # perform operation
fmsub.s f21, f24, f26, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f21, f24, f26, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f21, f24, f26, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f21, f24, f26, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f21, f24, f26, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f21, f24, f26, f8 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0x807fffff)
li x24, 0xb8f931da7455e333 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f23, 0(x2) # load 0x3f800000 from memory into f23
li x3, 0x6333906cd9e19625 # load x3 with value 0x6333906cd9e19625
sw x3, 0(x2) # store 0x6333906cd9e19625 in memory
flw f5, 0(x2) # load 0x6333906cd9e19625 from memory into f5
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f4, 0(x2) # load 0x807fffff from memory into f4
fmsub.s f24, f23, f5, f4, dyn # perform operation
fmsub.s f24, f23, f5, f4, rdn # perform operation
fmsub.s f24, f23, f5, f4, rmm # perform operation
fmsub.s f24, f23, f5, f4, rne # perform operation
fmsub.s f24, f23, f5, f4, rtz # perform operation
fmsub.s f24, f23, f5, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f24, f23, f5, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f24, f23, f5, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f24, f23, f5, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f24, f23, f5, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f24, f23, f5, f4 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0x400000)
li x31, 0x9a5666d340cbb46e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f24, 0(x2) # load 0x3f800000 from memory into f24
li x3, 0x6a2003157ce98fe1 # load x3 with value 0x6a2003157ce98fe1
sw x3, 0(x2) # store 0x6a2003157ce98fe1 in memory
flw f11, 0(x2) # load 0x6a2003157ce98fe1 from memory into f11
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f19, 0(x2) # load 0x00400000 from memory into f19
fmsub.s f31, f24, f11, f19, dyn # perform operation
fmsub.s f31, f24, f11, f19, rdn # perform operation
fmsub.s f31, f24, f11, f19, rmm # perform operation
fmsub.s f31, f24, f11, f19, rne # perform operation
fmsub.s f31, f24, f11, f19, rtz # perform operation
fmsub.s f31, f24, f11, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f31, f24, f11, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f31, f24, f11, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f31, f24, f11, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f31, f24, f11, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f31, f24, f11, f19 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0x80400000)
li x14, 0xdb0f14a91b85e56d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f28, 0(x2) # load 0x3f800000 from memory into f28
li x3, 0x5371728d7049dd9e # load x3 with value 0x5371728d7049dd9e
sw x3, 0(x2) # store 0x5371728d7049dd9e in memory
flw f20, 0(x2) # load 0x5371728d7049dd9e from memory into f20
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f16, 0(x2) # load 0x80400000 from memory into f16
fmsub.s f14, f28, f20, f16, dyn # perform operation
fmsub.s f14, f28, f20, f16, rdn # perform operation
fmsub.s f14, f28, f20, f16, rmm # perform operation
fmsub.s f14, f28, f20, f16, rne # perform operation
fmsub.s f14, f28, f20, f16, rtz # perform operation
fmsub.s f14, f28, f20, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f14, f28, f20, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f14, f28, f20, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f14, f28, f20, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f14, f28, f20, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f14, f28, f20, f16 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0x1)
li x25, 0xa102423bba61c375 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f18, 0(x2) # load 0x3f800000 from memory into f18
li x3, 0xef308caf673a72d8 # load x3 with value 0xef308caf673a72d8
sw x3, 0(x2) # store 0xef308caf673a72d8 in memory
flw f20, 0(x2) # load 0xef308caf673a72d8 from memory into f20
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f7, 0(x2) # load 0x00000001 from memory into f7
fmsub.s f25, f18, f20, f7, dyn # perform operation
fmsub.s f25, f18, f20, f7, rdn # perform operation
fmsub.s f25, f18, f20, f7, rmm # perform operation
fmsub.s f25, f18, f20, f7, rne # perform operation
fmsub.s f25, f18, f20, f7, rtz # perform operation
fmsub.s f25, f18, f20, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f25, f18, f20, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f25, f18, f20, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f25, f18, f20, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f25, f18, f20, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f25, f18, f20, f7 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0x80000001)
li x3, 0x305a3b278f080a19 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f10, 0(x2) # load 0x3f800000 from memory into f10
li x3, 0x5b04fffd29ec49e9 # load x3 with value 0x5b04fffd29ec49e9
sw x3, 0(x2) # store 0x5b04fffd29ec49e9 in memory
flw f6, 0(x2) # load 0x5b04fffd29ec49e9 from memory into f6
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f26, 0(x2) # load 0x80000001 from memory into f26
fmsub.s f3, f10, f6, f26, dyn # perform operation
fmsub.s f3, f10, f6, f26, rdn # perform operation
fmsub.s f3, f10, f6, f26, rmm # perform operation
fmsub.s f3, f10, f6, f26, rne # perform operation
fmsub.s f3, f10, f6, f26, rtz # perform operation
fmsub.s f3, f10, f6, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f3, f10, f6, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f3, f10, f6, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f3, f10, f6, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f3, f10, f6, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f3, f10, f6, f26 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0x7f800000)
li x25, 0x0f10a64859a2d0c2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f22, 0(x2) # load 0x3f800000 from memory into f22
li x3, 0xfaf8bf7ac1fba567 # load x3 with value 0xfaf8bf7ac1fba567
sw x3, 0(x2) # store 0xfaf8bf7ac1fba567 in memory
flw f24, 0(x2) # load 0xfaf8bf7ac1fba567 from memory into f24
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f4, 0(x2) # load 0x7f800000 from memory into f4
fmsub.s f25, f22, f24, f4, dyn # perform operation
fmsub.s f25, f22, f24, f4, rdn # perform operation
fmsub.s f25, f22, f24, f4, rmm # perform operation
fmsub.s f25, f22, f24, f4, rne # perform operation
fmsub.s f25, f22, f24, f4, rtz # perform operation
fmsub.s f25, f22, f24, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f25, f22, f24, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f25, f22, f24, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f25, f22, f24, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f25, f22, f24, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f25, f22, f24, f4 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0xff800000)
li x16, 0x22585fbeb7c3a581 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f6, 0(x2) # load 0x3f800000 from memory into f6
li x3, 0x44d4d26aa228ac90 # load x3 with value 0x44d4d26aa228ac90
sw x3, 0(x2) # store 0x44d4d26aa228ac90 in memory
flw f21, 0(x2) # load 0x44d4d26aa228ac90 from memory into f21
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f11, 0(x2) # load 0xff800000 from memory into f11
fmsub.s f16, f6, f21, f11, dyn # perform operation
fmsub.s f16, f6, f21, f11, rdn # perform operation
fmsub.s f16, f6, f21, f11, rmm # perform operation
fmsub.s f16, f6, f21, f11, rne # perform operation
fmsub.s f16, f6, f21, f11, rtz # perform operation
fmsub.s f16, f6, f21, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f16, f6, f21, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f16, f6, f21, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f16, f6, f21, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f16, f6, f21, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f16, f6, f21, f11 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0x7fc00000)
li x11, 0xa907d2560bbec6eb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f29, 0(x2) # load 0x3f800000 from memory into f29
li x3, 0x4b4bdcb7214bd7e3 # load x3 with value 0x4b4bdcb7214bd7e3
sw x3, 0(x2) # store 0x4b4bdcb7214bd7e3 in memory
flw f26, 0(x2) # load 0x4b4bdcb7214bd7e3 from memory into f26
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f12, 0(x2) # load 0x7fc00000 from memory into f12
fmsub.s f11, f29, f26, f12, dyn # perform operation
fmsub.s f11, f29, f26, f12, rdn # perform operation
fmsub.s f11, f29, f26, f12, rmm # perform operation
fmsub.s f11, f29, f26, f12, rne # perform operation
fmsub.s f11, f29, f26, f12, rtz # perform operation
fmsub.s f11, f29, f26, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f11, f29, f26, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f11, f29, f26, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f11, f29, f26, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f11, f29, f26, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f11, f29, f26, f12 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0x7fffffff)
li x4, 0xc789a72dc8f57804 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f27, 0(x2) # load 0x3f800000 from memory into f27
li x3, 0xda0583ea68e167e0 # load x3 with value 0xda0583ea68e167e0
sw x3, 0(x2) # store 0xda0583ea68e167e0 in memory
flw f17, 0(x2) # load 0xda0583ea68e167e0 from memory into f17
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f6, 0(x2) # load 0x7fffffff from memory into f6
fmsub.s f4, f27, f17, f6, dyn # perform operation
fmsub.s f4, f27, f17, f6, rdn # perform operation
fmsub.s f4, f27, f17, f6, rmm # perform operation
fmsub.s f4, f27, f17, f6, rne # perform operation
fmsub.s f4, f27, f17, f6, rtz # perform operation
fmsub.s f4, f27, f17, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f4, f27, f17, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f4, f27, f17, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f4, f27, f17, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f4, f27, f17, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f4, f27, f17, f6 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0x7f800001)
li x28, 0x27b6cfade4b80fb0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f21, 0(x2) # load 0x3f800000 from memory into f21
li x3, 0xc8ad4b53a16eba5e # load x3 with value 0xc8ad4b53a16eba5e
sw x3, 0(x2) # store 0xc8ad4b53a16eba5e in memory
flw f1, 0(x2) # load 0xc8ad4b53a16eba5e from memory into f1
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f26, 0(x2) # load 0x7f800001 from memory into f26
fmsub.s f28, f21, f1, f26, dyn # perform operation
fmsub.s f28, f21, f1, f26, rdn # perform operation
fmsub.s f28, f21, f1, f26, rmm # perform operation
fmsub.s f28, f21, f1, f26, rne # perform operation
fmsub.s f28, f21, f1, f26, rtz # perform operation
fmsub.s f28, f21, f1, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f28, f21, f1, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f28, f21, f1, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f28, f21, f1, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f28, f21, f1, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f28, f21, f1, f26 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0x7fbfffff)
li x6, 0x110c97c0eab7ccc5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f22, 0(x2) # load 0x3f800000 from memory into f22
li x3, 0xa3f4bd690841f7d2 # load x3 with value 0xa3f4bd690841f7d2
sw x3, 0(x2) # store 0xa3f4bd690841f7d2 in memory
flw f24, 0(x2) # load 0xa3f4bd690841f7d2 from memory into f24
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f28, 0(x2) # load 0x7fbfffff from memory into f28
fmsub.s f6, f22, f24, f28, dyn # perform operation
fmsub.s f6, f22, f24, f28, rdn # perform operation
fmsub.s f6, f22, f24, f28, rmm # perform operation
fmsub.s f6, f22, f24, f28, rne # perform operation
fmsub.s f6, f22, f24, f28, rtz # perform operation
fmsub.s f6, f22, f24, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f6, f22, f24, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f6, f22, f24, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f6, f22, f24, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f6, f22, f24, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f6, f22, f24, f28 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0x7ef8654f)
li x16, 0x265c777cd66bd4aa # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f17, 0(x2) # load 0x3f800000 from memory into f17
li x3, 0x276f7e47848058cd # load x3 with value 0x276f7e47848058cd
sw x3, 0(x2) # store 0x276f7e47848058cd in memory
flw f23, 0(x2) # load 0x276f7e47848058cd from memory into f23
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f6, 0(x2) # load 0x7ef8654f from memory into f6
fmsub.s f16, f17, f23, f6, dyn # perform operation
fmsub.s f16, f17, f23, f6, rdn # perform operation
fmsub.s f16, f17, f23, f6, rmm # perform operation
fmsub.s f16, f17, f23, f6, rne # perform operation
fmsub.s f16, f17, f23, f6, rtz # perform operation
fmsub.s f16, f17, f23, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f16, f17, f23, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f16, f17, f23, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f16, f17, f23, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f16, f17, f23, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f16, f17, f23, f6 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0x813d9ab0)
li x7, 0xfbbf8cef0be25824 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f12, 0(x2) # load 0x3f800000 from memory into f12
li x3, 0x448238f975fc08e6 # load x3 with value 0x448238f975fc08e6
sw x3, 0(x2) # store 0x448238f975fc08e6 in memory
flw f6, 0(x2) # load 0x448238f975fc08e6 from memory into f6
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f25, 0(x2) # load 0x813d9ab0 from memory into f25
fmsub.s f7, f12, f6, f25, dyn # perform operation
fmsub.s f7, f12, f6, f25, rdn # perform operation
fmsub.s f7, f12, f6, f25, rmm # perform operation
fmsub.s f7, f12, f6, f25, rne # perform operation
fmsub.s f7, f12, f6, f25, rtz # perform operation
fmsub.s f7, f12, f6, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f7, f12, f6, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f7, f12, f6, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f7, f12, f6, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f7, f12, f6, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f7, f12, f6, f25 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0x0)
li x3, 0x2943fcb03aa4cda7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f26, 0(x2) # load 0xbf800000 from memory into f26
li x3, 0xaa34486b5a115075 # load x3 with value 0xaa34486b5a115075
sw x3, 0(x2) # store 0xaa34486b5a115075 in memory
flw f9, 0(x2) # load 0xaa34486b5a115075 from memory into f9
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f6, 0(x2) # load 0x00000000 from memory into f6
fmsub.s f3, f26, f9, f6, dyn # perform operation
fmsub.s f3, f26, f9, f6, rdn # perform operation
fmsub.s f3, f26, f9, f6, rmm # perform operation
fmsub.s f3, f26, f9, f6, rne # perform operation
fmsub.s f3, f26, f9, f6, rtz # perform operation
fmsub.s f3, f26, f9, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f3, f26, f9, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f3, f26, f9, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f3, f26, f9, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f3, f26, f9, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f3, f26, f9, f6 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0x80000000)
li x27, 0x5aecce4f63a4bdc5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f6, 0(x2) # load 0xbf800000 from memory into f6
li x3, 0x2e8c12363649d4ef # load x3 with value 0x2e8c12363649d4ef
sw x3, 0(x2) # store 0x2e8c12363649d4ef in memory
flw f21, 0(x2) # load 0x2e8c12363649d4ef from memory into f21
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f7, 0(x2) # load 0x80000000 from memory into f7
fmsub.s f27, f6, f21, f7, dyn # perform operation
fmsub.s f27, f6, f21, f7, rdn # perform operation
fmsub.s f27, f6, f21, f7, rmm # perform operation
fmsub.s f27, f6, f21, f7, rne # perform operation
fmsub.s f27, f6, f21, f7, rtz # perform operation
fmsub.s f27, f6, f21, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f27, f6, f21, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f27, f6, f21, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f27, f6, f21, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f27, f6, f21, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f27, f6, f21, f7 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0x3f800000)
li x27, 0x918e8bfb4159bed3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f1, 0(x2) # load 0xbf800000 from memory into f1
li x3, 0x95553bf3abfdc2ed # load x3 with value 0x95553bf3abfdc2ed
sw x3, 0(x2) # store 0x95553bf3abfdc2ed in memory
flw f21, 0(x2) # load 0x95553bf3abfdc2ed from memory into f21
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f7, 0(x2) # load 0x3f800000 from memory into f7
fmsub.s f27, f1, f21, f7, dyn # perform operation
fmsub.s f27, f1, f21, f7, rdn # perform operation
fmsub.s f27, f1, f21, f7, rmm # perform operation
fmsub.s f27, f1, f21, f7, rne # perform operation
fmsub.s f27, f1, f21, f7, rtz # perform operation
fmsub.s f27, f1, f21, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f27, f1, f21, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f27, f1, f21, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f27, f1, f21, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f27, f1, f21, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f27, f1, f21, f7 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0xbf800000)
li x8, 0xa28ab413108bf224 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f27, 0(x2) # load 0xbf800000 from memory into f27
li x3, 0x57300adcafe9df1e # load x3 with value 0x57300adcafe9df1e
sw x3, 0(x2) # store 0x57300adcafe9df1e in memory
flw f21, 0(x2) # load 0x57300adcafe9df1e from memory into f21
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f20, 0(x2) # load 0xbf800000 from memory into f20
fmsub.s f8, f27, f21, f20, dyn # perform operation
fmsub.s f8, f27, f21, f20, rdn # perform operation
fmsub.s f8, f27, f21, f20, rmm # perform operation
fmsub.s f8, f27, f21, f20, rne # perform operation
fmsub.s f8, f27, f21, f20, rtz # perform operation
fmsub.s f8, f27, f21, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f8, f27, f21, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f8, f27, f21, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f8, f27, f21, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f8, f27, f21, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f8, f27, f21, f20 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0x3fc00000)
li x1, 0x70869fe367521936 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f26, 0(x2) # load 0xbf800000 from memory into f26
li x3, 0x310ad87840830046 # load x3 with value 0x310ad87840830046
sw x3, 0(x2) # store 0x310ad87840830046 in memory
flw f2, 0(x2) # load 0x310ad87840830046 from memory into f2
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f14, 0(x2) # load 0x3fc00000 from memory into f14
fmsub.s f1, f26, f2, f14, dyn # perform operation
fmsub.s f1, f26, f2, f14, rdn # perform operation
fmsub.s f1, f26, f2, f14, rmm # perform operation
fmsub.s f1, f26, f2, f14, rne # perform operation
fmsub.s f1, f26, f2, f14, rtz # perform operation
fmsub.s f1, f26, f2, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f1, f26, f2, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f1, f26, f2, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f1, f26, f2, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f1, f26, f2, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f1, f26, f2, f14 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0xbfc00000)
li x31, 0xdeb8225434c85f6b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f3, 0(x2) # load 0xbf800000 from memory into f3
li x3, 0x97bae247d7da7047 # load x3 with value 0x97bae247d7da7047
sw x3, 0(x2) # store 0x97bae247d7da7047 in memory
flw f17, 0(x2) # load 0x97bae247d7da7047 from memory into f17
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f29, 0(x2) # load 0xbfc00000 from memory into f29
fmsub.s f31, f3, f17, f29, dyn # perform operation
fmsub.s f31, f3, f17, f29, rdn # perform operation
fmsub.s f31, f3, f17, f29, rmm # perform operation
fmsub.s f31, f3, f17, f29, rne # perform operation
fmsub.s f31, f3, f17, f29, rtz # perform operation
fmsub.s f31, f3, f17, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f31, f3, f17, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f31, f3, f17, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f31, f3, f17, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f31, f3, f17, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f31, f3, f17, f29 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0x40000000)
li x10, 0xdfa4ab949667937f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f25, 0(x2) # load 0xbf800000 from memory into f25
li x3, 0x5256890afc9ccd9b # load x3 with value 0x5256890afc9ccd9b
sw x3, 0(x2) # store 0x5256890afc9ccd9b in memory
flw f29, 0(x2) # load 0x5256890afc9ccd9b from memory into f29
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f23, 0(x2) # load 0x40000000 from memory into f23
fmsub.s f10, f25, f29, f23, dyn # perform operation
fmsub.s f10, f25, f29, f23, rdn # perform operation
fmsub.s f10, f25, f29, f23, rmm # perform operation
fmsub.s f10, f25, f29, f23, rne # perform operation
fmsub.s f10, f25, f29, f23, rtz # perform operation
fmsub.s f10, f25, f29, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f10, f25, f29, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f10, f25, f29, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f10, f25, f29, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f10, f25, f29, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f10, f25, f29, f23 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0xc0000000)
li x22, 0x607cba04dee702ef # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f3, 0(x2) # load 0xbf800000 from memory into f3
li x3, 0x67e6d21af590cc6c # load x3 with value 0x67e6d21af590cc6c
sw x3, 0(x2) # store 0x67e6d21af590cc6c in memory
flw f1, 0(x2) # load 0x67e6d21af590cc6c from memory into f1
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f13, 0(x2) # load 0xc0000000 from memory into f13
fmsub.s f22, f3, f1, f13, dyn # perform operation
fmsub.s f22, f3, f1, f13, rdn # perform operation
fmsub.s f22, f3, f1, f13, rmm # perform operation
fmsub.s f22, f3, f1, f13, rne # perform operation
fmsub.s f22, f3, f1, f13, rtz # perform operation
fmsub.s f22, f3, f1, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f22, f3, f1, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f22, f3, f1, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f22, f3, f1, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f22, f3, f1, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f22, f3, f1, f13 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0x800000)
li x22, 0xed5198ac57007833 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f16, 0(x2) # load 0xbf800000 from memory into f16
li x3, 0xa852994b2e8aaca7 # load x3 with value 0xa852994b2e8aaca7
sw x3, 0(x2) # store 0xa852994b2e8aaca7 in memory
flw f23, 0(x2) # load 0xa852994b2e8aaca7 from memory into f23
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f15, 0(x2) # load 0x00800000 from memory into f15
fmsub.s f22, f16, f23, f15, dyn # perform operation
fmsub.s f22, f16, f23, f15, rdn # perform operation
fmsub.s f22, f16, f23, f15, rmm # perform operation
fmsub.s f22, f16, f23, f15, rne # perform operation
fmsub.s f22, f16, f23, f15, rtz # perform operation
fmsub.s f22, f16, f23, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f22, f16, f23, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f22, f16, f23, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f22, f16, f23, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f22, f16, f23, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f22, f16, f23, f15 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0x80800000)
li x14, 0x35cd76afb6356feb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f15, 0(x2) # load 0xbf800000 from memory into f15
li x3, 0x89d1ed3310bd3cb4 # load x3 with value 0x89d1ed3310bd3cb4
sw x3, 0(x2) # store 0x89d1ed3310bd3cb4 in memory
flw f20, 0(x2) # load 0x89d1ed3310bd3cb4 from memory into f20
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f4, 0(x2) # load 0x80800000 from memory into f4
fmsub.s f14, f15, f20, f4, dyn # perform operation
fmsub.s f14, f15, f20, f4, rdn # perform operation
fmsub.s f14, f15, f20, f4, rmm # perform operation
fmsub.s f14, f15, f20, f4, rne # perform operation
fmsub.s f14, f15, f20, f4, rtz # perform operation
fmsub.s f14, f15, f20, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f14, f15, f20, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f14, f15, f20, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f14, f15, f20, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f14, f15, f20, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f14, f15, f20, f4 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0x7f7fffff)
li x24, 0xd9ffd006958964ce # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f7, 0(x2) # load 0xbf800000 from memory into f7
li x3, 0xaf4bcc58ed18165e # load x3 with value 0xaf4bcc58ed18165e
sw x3, 0(x2) # store 0xaf4bcc58ed18165e in memory
flw f30, 0(x2) # load 0xaf4bcc58ed18165e from memory into f30
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f9, 0(x2) # load 0x7f7fffff from memory into f9
fmsub.s f24, f7, f30, f9, dyn # perform operation
fmsub.s f24, f7, f30, f9, rdn # perform operation
fmsub.s f24, f7, f30, f9, rmm # perform operation
fmsub.s f24, f7, f30, f9, rne # perform operation
fmsub.s f24, f7, f30, f9, rtz # perform operation
fmsub.s f24, f7, f30, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f24, f7, f30, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f24, f7, f30, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f24, f7, f30, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f24, f7, f30, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f24, f7, f30, f9 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0xff7fffff)
li x9, 0xce6d32eae6d8c900 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f24, 0(x2) # load 0xbf800000 from memory into f24
li x3, 0x5809a44f063e2fc6 # load x3 with value 0x5809a44f063e2fc6
sw x3, 0(x2) # store 0x5809a44f063e2fc6 in memory
flw f31, 0(x2) # load 0x5809a44f063e2fc6 from memory into f31
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f14, 0(x2) # load 0xff7fffff from memory into f14
fmsub.s f9, f24, f31, f14, dyn # perform operation
fmsub.s f9, f24, f31, f14, rdn # perform operation
fmsub.s f9, f24, f31, f14, rmm # perform operation
fmsub.s f9, f24, f31, f14, rne # perform operation
fmsub.s f9, f24, f31, f14, rtz # perform operation
fmsub.s f9, f24, f31, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f9, f24, f31, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f9, f24, f31, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f9, f24, f31, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f9, f24, f31, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f9, f24, f31, f14 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0x7fffff)
li x22, 0x1a3ad6a8bbe46938 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f2, 0(x2) # load 0xbf800000 from memory into f2
li x3, 0x4fd76ae4439ac460 # load x3 with value 0x4fd76ae4439ac460
sw x3, 0(x2) # store 0x4fd76ae4439ac460 in memory
flw f29, 0(x2) # load 0x4fd76ae4439ac460 from memory into f29
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f21, 0(x2) # load 0x007fffff from memory into f21
fmsub.s f22, f2, f29, f21, dyn # perform operation
fmsub.s f22, f2, f29, f21, rdn # perform operation
fmsub.s f22, f2, f29, f21, rmm # perform operation
fmsub.s f22, f2, f29, f21, rne # perform operation
fmsub.s f22, f2, f29, f21, rtz # perform operation
fmsub.s f22, f2, f29, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f22, f2, f29, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f22, f2, f29, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f22, f2, f29, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f22, f2, f29, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f22, f2, f29, f21 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0x807fffff)
li x23, 0x236980a7c683e319 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f30, 0(x2) # load 0xbf800000 from memory into f30
li x3, 0x80501eb90a48ecd5 # load x3 with value 0x80501eb90a48ecd5
sw x3, 0(x2) # store 0x80501eb90a48ecd5 in memory
flw f22, 0(x2) # load 0x80501eb90a48ecd5 from memory into f22
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f24, 0(x2) # load 0x807fffff from memory into f24
fmsub.s f23, f30, f22, f24, dyn # perform operation
fmsub.s f23, f30, f22, f24, rdn # perform operation
fmsub.s f23, f30, f22, f24, rmm # perform operation
fmsub.s f23, f30, f22, f24, rne # perform operation
fmsub.s f23, f30, f22, f24, rtz # perform operation
fmsub.s f23, f30, f22, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f23, f30, f22, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f23, f30, f22, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f23, f30, f22, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f23, f30, f22, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f23, f30, f22, f24 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0x400000)
li x5, 0xb6005d4732447dce # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f25, 0(x2) # load 0xbf800000 from memory into f25
li x3, 0x779be89642f03aba # load x3 with value 0x779be89642f03aba
sw x3, 0(x2) # store 0x779be89642f03aba in memory
flw f7, 0(x2) # load 0x779be89642f03aba from memory into f7
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f14, 0(x2) # load 0x00400000 from memory into f14
fmsub.s f5, f25, f7, f14, dyn # perform operation
fmsub.s f5, f25, f7, f14, rdn # perform operation
fmsub.s f5, f25, f7, f14, rmm # perform operation
fmsub.s f5, f25, f7, f14, rne # perform operation
fmsub.s f5, f25, f7, f14, rtz # perform operation
fmsub.s f5, f25, f7, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f5, f25, f7, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f5, f25, f7, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f5, f25, f7, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f5, f25, f7, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f5, f25, f7, f14 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0x80400000)
li x23, 0xc65fca2fe3190a99 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f21, 0(x2) # load 0xbf800000 from memory into f21
li x3, 0x4e685d42781ef315 # load x3 with value 0x4e685d42781ef315
sw x3, 0(x2) # store 0x4e685d42781ef315 in memory
flw f16, 0(x2) # load 0x4e685d42781ef315 from memory into f16
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f29, 0(x2) # load 0x80400000 from memory into f29
fmsub.s f23, f21, f16, f29, dyn # perform operation
fmsub.s f23, f21, f16, f29, rdn # perform operation
fmsub.s f23, f21, f16, f29, rmm # perform operation
fmsub.s f23, f21, f16, f29, rne # perform operation
fmsub.s f23, f21, f16, f29, rtz # perform operation
fmsub.s f23, f21, f16, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f23, f21, f16, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f23, f21, f16, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f23, f21, f16, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f23, f21, f16, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f23, f21, f16, f29 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0x1)
li x12, 0x7c0c8b658c2d1dff # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f2, 0(x2) # load 0xbf800000 from memory into f2
li x3, 0x601fa57109974929 # load x3 with value 0x601fa57109974929
sw x3, 0(x2) # store 0x601fa57109974929 in memory
flw f22, 0(x2) # load 0x601fa57109974929 from memory into f22
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f26, 0(x2) # load 0x00000001 from memory into f26
fmsub.s f12, f2, f22, f26, dyn # perform operation
fmsub.s f12, f2, f22, f26, rdn # perform operation
fmsub.s f12, f2, f22, f26, rmm # perform operation
fmsub.s f12, f2, f22, f26, rne # perform operation
fmsub.s f12, f2, f22, f26, rtz # perform operation
fmsub.s f12, f2, f22, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f12, f2, f22, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f12, f2, f22, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f12, f2, f22, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f12, f2, f22, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f12, f2, f22, f26 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0x80000001)
li x8, 0x8f0deb64a99548ae # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f24, 0(x2) # load 0xbf800000 from memory into f24
li x3, 0x4f3a3b7372ce0fb1 # load x3 with value 0x4f3a3b7372ce0fb1
sw x3, 0(x2) # store 0x4f3a3b7372ce0fb1 in memory
flw f29, 0(x2) # load 0x4f3a3b7372ce0fb1 from memory into f29
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f20, 0(x2) # load 0x80000001 from memory into f20
fmsub.s f8, f24, f29, f20, dyn # perform operation
fmsub.s f8, f24, f29, f20, rdn # perform operation
fmsub.s f8, f24, f29, f20, rmm # perform operation
fmsub.s f8, f24, f29, f20, rne # perform operation
fmsub.s f8, f24, f29, f20, rtz # perform operation
fmsub.s f8, f24, f29, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f8, f24, f29, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f8, f24, f29, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f8, f24, f29, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f8, f24, f29, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f8, f24, f29, f20 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0x7f800000)
li x2, 0x2a6d2fbbd3c9702f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f9, 0(x2) # load 0xbf800000 from memory into f9
li x3, 0xd10ed112719b8b1f # load x3 with value 0xd10ed112719b8b1f
sw x3, 0(x2) # store 0xd10ed112719b8b1f in memory
flw f16, 0(x2) # load 0xd10ed112719b8b1f from memory into f16
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f17, 0(x2) # load 0x7f800000 from memory into f17
fmsub.s f2, f9, f16, f17, dyn # perform operation
fmsub.s f2, f9, f16, f17, rdn # perform operation
fmsub.s f2, f9, f16, f17, rmm # perform operation
fmsub.s f2, f9, f16, f17, rne # perform operation
fmsub.s f2, f9, f16, f17, rtz # perform operation
fmsub.s f2, f9, f16, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f2, f9, f16, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f2, f9, f16, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f2, f9, f16, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f2, f9, f16, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f2, f9, f16, f17 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0xff800000)
li x24, 0x105947ae0118dfeb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f21, 0(x2) # load 0xbf800000 from memory into f21
li x3, 0x129ab8ca0773218 # load x3 with value 0x129ab8ca0773218
sw x3, 0(x2) # store 0x129ab8ca0773218 in memory
flw f1, 0(x2) # load 0x129ab8ca0773218 from memory into f1
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f20, 0(x2) # load 0xff800000 from memory into f20
fmsub.s f24, f21, f1, f20, dyn # perform operation
fmsub.s f24, f21, f1, f20, rdn # perform operation
fmsub.s f24, f21, f1, f20, rmm # perform operation
fmsub.s f24, f21, f1, f20, rne # perform operation
fmsub.s f24, f21, f1, f20, rtz # perform operation
fmsub.s f24, f21, f1, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f24, f21, f1, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f24, f21, f1, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f24, f21, f1, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f24, f21, f1, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f24, f21, f1, f20 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0x7fc00000)
li x29, 0x54856eeb3fe97087 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f6, 0(x2) # load 0xbf800000 from memory into f6
li x3, 0x644c18e2ca1dcbe2 # load x3 with value 0x644c18e2ca1dcbe2
sw x3, 0(x2) # store 0x644c18e2ca1dcbe2 in memory
flw f16, 0(x2) # load 0x644c18e2ca1dcbe2 from memory into f16
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f19, 0(x2) # load 0x7fc00000 from memory into f19
fmsub.s f29, f6, f16, f19, dyn # perform operation
fmsub.s f29, f6, f16, f19, rdn # perform operation
fmsub.s f29, f6, f16, f19, rmm # perform operation
fmsub.s f29, f6, f16, f19, rne # perform operation
fmsub.s f29, f6, f16, f19, rtz # perform operation
fmsub.s f29, f6, f16, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f29, f6, f16, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f29, f6, f16, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f29, f6, f16, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f29, f6, f16, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f29, f6, f16, f19 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0x7fffffff)
li x9, 0x62fc5294a7cb3db4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f31, 0(x2) # load 0xbf800000 from memory into f31
li x3, 0x8567173530257079 # load x3 with value 0x8567173530257079
sw x3, 0(x2) # store 0x8567173530257079 in memory
flw f22, 0(x2) # load 0x8567173530257079 from memory into f22
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f25, 0(x2) # load 0x7fffffff from memory into f25
fmsub.s f9, f31, f22, f25, dyn # perform operation
fmsub.s f9, f31, f22, f25, rdn # perform operation
fmsub.s f9, f31, f22, f25, rmm # perform operation
fmsub.s f9, f31, f22, f25, rne # perform operation
fmsub.s f9, f31, f22, f25, rtz # perform operation
fmsub.s f9, f31, f22, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f9, f31, f22, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f9, f31, f22, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f9, f31, f22, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f9, f31, f22, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f9, f31, f22, f25 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0x7f800001)
li x25, 0x8a4804d2a485b686 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f13, 0(x2) # load 0xbf800000 from memory into f13
li x3, 0x28b163edf88c868d # load x3 with value 0x28b163edf88c868d
sw x3, 0(x2) # store 0x28b163edf88c868d in memory
flw f28, 0(x2) # load 0x28b163edf88c868d from memory into f28
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f16, 0(x2) # load 0x7f800001 from memory into f16
fmsub.s f25, f13, f28, f16, dyn # perform operation
fmsub.s f25, f13, f28, f16, rdn # perform operation
fmsub.s f25, f13, f28, f16, rmm # perform operation
fmsub.s f25, f13, f28, f16, rne # perform operation
fmsub.s f25, f13, f28, f16, rtz # perform operation
fmsub.s f25, f13, f28, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f25, f13, f28, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f25, f13, f28, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f25, f13, f28, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f25, f13, f28, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f25, f13, f28, f16 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0x7fbfffff)
li x2, 0xd7612c39b8c8c7b2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f14, 0(x2) # load 0xbf800000 from memory into f14
li x3, 0xeed212352f07ab73 # load x3 with value 0xeed212352f07ab73
sw x3, 0(x2) # store 0xeed212352f07ab73 in memory
flw f1, 0(x2) # load 0xeed212352f07ab73 from memory into f1
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f9, 0(x2) # load 0x7fbfffff from memory into f9
fmsub.s f2, f14, f1, f9, dyn # perform operation
fmsub.s f2, f14, f1, f9, rdn # perform operation
fmsub.s f2, f14, f1, f9, rmm # perform operation
fmsub.s f2, f14, f1, f9, rne # perform operation
fmsub.s f2, f14, f1, f9, rtz # perform operation
fmsub.s f2, f14, f1, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f2, f14, f1, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f2, f14, f1, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f2, f14, f1, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f2, f14, f1, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f2, f14, f1, f9 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0x7ef8654f)
li x29, 0x85df36711a8c3b9b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f5, 0(x2) # load 0xbf800000 from memory into f5
li x3, 0xeb4d2822d38530aa # load x3 with value 0xeb4d2822d38530aa
sw x3, 0(x2) # store 0xeb4d2822d38530aa in memory
flw f21, 0(x2) # load 0xeb4d2822d38530aa from memory into f21
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f3, 0(x2) # load 0x7ef8654f from memory into f3
fmsub.s f29, f5, f21, f3, dyn # perform operation
fmsub.s f29, f5, f21, f3, rdn # perform operation
fmsub.s f29, f5, f21, f3, rmm # perform operation
fmsub.s f29, f5, f21, f3, rne # perform operation
fmsub.s f29, f5, f21, f3, rtz # perform operation
fmsub.s f29, f5, f21, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f29, f5, f21, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f29, f5, f21, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f29, f5, f21, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f29, f5, f21, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f29, f5, f21, f3 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0x813d9ab0)
li x21, 0x8be5deba3f6b97af # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f13, 0(x2) # load 0xbf800000 from memory into f13
li x3, 0x52ef87139f81f9e8 # load x3 with value 0x52ef87139f81f9e8
sw x3, 0(x2) # store 0x52ef87139f81f9e8 in memory
flw f6, 0(x2) # load 0x52ef87139f81f9e8 from memory into f6
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f9, 0(x2) # load 0x813d9ab0 from memory into f9
fmsub.s f21, f13, f6, f9, dyn # perform operation
fmsub.s f21, f13, f6, f9, rdn # perform operation
fmsub.s f21, f13, f6, f9, rmm # perform operation
fmsub.s f21, f13, f6, f9, rne # perform operation
fmsub.s f21, f13, f6, f9, rtz # perform operation
fmsub.s f21, f13, f6, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f21, f13, f6, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f21, f13, f6, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f21, f13, f6, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f21, f13, f6, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f21, f13, f6, f9 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0x0)
li x3, 0xb942a24c3b25579c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f1, 0(x2) # load 0x3fc00000 from memory into f1
li x3, 0xbe512f2497dba986 # load x3 with value 0xbe512f2497dba986
sw x3, 0(x2) # store 0xbe512f2497dba986 in memory
flw f30, 0(x2) # load 0xbe512f2497dba986 from memory into f30
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f10, 0(x2) # load 0x00000000 from memory into f10
fmsub.s f3, f1, f30, f10, dyn # perform operation
fmsub.s f3, f1, f30, f10, rdn # perform operation
fmsub.s f3, f1, f30, f10, rmm # perform operation
fmsub.s f3, f1, f30, f10, rne # perform operation
fmsub.s f3, f1, f30, f10, rtz # perform operation
fmsub.s f3, f1, f30, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f3, f1, f30, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f3, f1, f30, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f3, f1, f30, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f3, f1, f30, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f3, f1, f30, f10 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0x80000000)
li x21, 0x545d3e2f20305ed1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f15, 0(x2) # load 0x3fc00000 from memory into f15
li x3, 0x143a922e80923cf3 # load x3 with value 0x143a922e80923cf3
sw x3, 0(x2) # store 0x143a922e80923cf3 in memory
flw f1, 0(x2) # load 0x143a922e80923cf3 from memory into f1
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f28, 0(x2) # load 0x80000000 from memory into f28
fmsub.s f21, f15, f1, f28, dyn # perform operation
fmsub.s f21, f15, f1, f28, rdn # perform operation
fmsub.s f21, f15, f1, f28, rmm # perform operation
fmsub.s f21, f15, f1, f28, rne # perform operation
fmsub.s f21, f15, f1, f28, rtz # perform operation
fmsub.s f21, f15, f1, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f21, f15, f1, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f21, f15, f1, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f21, f15, f1, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f21, f15, f1, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f21, f15, f1, f28 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0x3f800000)
li x23, 0x4f4d0e9b660696da # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f24, 0(x2) # load 0x3fc00000 from memory into f24
li x3, 0xa1a1a09a70f21eda # load x3 with value 0xa1a1a09a70f21eda
sw x3, 0(x2) # store 0xa1a1a09a70f21eda in memory
flw f14, 0(x2) # load 0xa1a1a09a70f21eda from memory into f14
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f18, 0(x2) # load 0x3f800000 from memory into f18
fmsub.s f23, f24, f14, f18, dyn # perform operation
fmsub.s f23, f24, f14, f18, rdn # perform operation
fmsub.s f23, f24, f14, f18, rmm # perform operation
fmsub.s f23, f24, f14, f18, rne # perform operation
fmsub.s f23, f24, f14, f18, rtz # perform operation
fmsub.s f23, f24, f14, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f23, f24, f14, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f23, f24, f14, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f23, f24, f14, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f23, f24, f14, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f23, f24, f14, f18 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0xbf800000)
li x26, 0xd5f10564134d881e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f6, 0(x2) # load 0x3fc00000 from memory into f6
li x3, 0xff85a74a2f8ffe9c # load x3 with value 0xff85a74a2f8ffe9c
sw x3, 0(x2) # store 0xff85a74a2f8ffe9c in memory
flw f28, 0(x2) # load 0xff85a74a2f8ffe9c from memory into f28
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f9, 0(x2) # load 0xbf800000 from memory into f9
fmsub.s f26, f6, f28, f9, dyn # perform operation
fmsub.s f26, f6, f28, f9, rdn # perform operation
fmsub.s f26, f6, f28, f9, rmm # perform operation
fmsub.s f26, f6, f28, f9, rne # perform operation
fmsub.s f26, f6, f28, f9, rtz # perform operation
fmsub.s f26, f6, f28, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f26, f6, f28, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f26, f6, f28, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f26, f6, f28, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f26, f6, f28, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f26, f6, f28, f9 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0x3fc00000)
li x1, 0xd780bfbd3c939271 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f30, 0(x2) # load 0x3fc00000 from memory into f30
li x3, 0xf9bac18d5f7f7a3 # load x3 with value 0xf9bac18d5f7f7a3
sw x3, 0(x2) # store 0xf9bac18d5f7f7a3 in memory
flw f14, 0(x2) # load 0xf9bac18d5f7f7a3 from memory into f14
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f22, 0(x2) # load 0x3fc00000 from memory into f22
fmsub.s f1, f30, f14, f22, dyn # perform operation
fmsub.s f1, f30, f14, f22, rdn # perform operation
fmsub.s f1, f30, f14, f22, rmm # perform operation
fmsub.s f1, f30, f14, f22, rne # perform operation
fmsub.s f1, f30, f14, f22, rtz # perform operation
fmsub.s f1, f30, f14, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f1, f30, f14, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f1, f30, f14, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f1, f30, f14, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f1, f30, f14, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f1, f30, f14, f22 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0xbfc00000)
li x2, 0xb997bd4912872f8f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f31, 0(x2) # load 0x3fc00000 from memory into f31
li x3, 0xc2b36fcbca0df5b0 # load x3 with value 0xc2b36fcbca0df5b0
sw x3, 0(x2) # store 0xc2b36fcbca0df5b0 in memory
flw f22, 0(x2) # load 0xc2b36fcbca0df5b0 from memory into f22
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f29, 0(x2) # load 0xbfc00000 from memory into f29
fmsub.s f2, f31, f22, f29, dyn # perform operation
fmsub.s f2, f31, f22, f29, rdn # perform operation
fmsub.s f2, f31, f22, f29, rmm # perform operation
fmsub.s f2, f31, f22, f29, rne # perform operation
fmsub.s f2, f31, f22, f29, rtz # perform operation
fmsub.s f2, f31, f22, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f2, f31, f22, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f2, f31, f22, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f2, f31, f22, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f2, f31, f22, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f2, f31, f22, f29 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0x40000000)
li x20, 0xb1caa7f3709964be # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f2, 0(x2) # load 0x3fc00000 from memory into f2
li x3, 0x8a3f965da42e3285 # load x3 with value 0x8a3f965da42e3285
sw x3, 0(x2) # store 0x8a3f965da42e3285 in memory
flw f14, 0(x2) # load 0x8a3f965da42e3285 from memory into f14
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f24, 0(x2) # load 0x40000000 from memory into f24
fmsub.s f20, f2, f14, f24, dyn # perform operation
fmsub.s f20, f2, f14, f24, rdn # perform operation
fmsub.s f20, f2, f14, f24, rmm # perform operation
fmsub.s f20, f2, f14, f24, rne # perform operation
fmsub.s f20, f2, f14, f24, rtz # perform operation
fmsub.s f20, f2, f14, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f20, f2, f14, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f20, f2, f14, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f20, f2, f14, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f20, f2, f14, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f20, f2, f14, f24 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0xc0000000)
li x23, 0x74aa22c8e16b5f3b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f2, 0(x2) # load 0x3fc00000 from memory into f2
li x3, 0x25061824f9007461 # load x3 with value 0x25061824f9007461
sw x3, 0(x2) # store 0x25061824f9007461 in memory
flw f1, 0(x2) # load 0x25061824f9007461 from memory into f1
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f15, 0(x2) # load 0xc0000000 from memory into f15
fmsub.s f23, f2, f1, f15, dyn # perform operation
fmsub.s f23, f2, f1, f15, rdn # perform operation
fmsub.s f23, f2, f1, f15, rmm # perform operation
fmsub.s f23, f2, f1, f15, rne # perform operation
fmsub.s f23, f2, f1, f15, rtz # perform operation
fmsub.s f23, f2, f1, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f23, f2, f1, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f23, f2, f1, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f23, f2, f1, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f23, f2, f1, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f23, f2, f1, f15 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0x800000)
li x29, 0x84dd4655bfccb0f7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f19, 0(x2) # load 0x3fc00000 from memory into f19
li x3, 0x83eccb5bd0adeb3e # load x3 with value 0x83eccb5bd0adeb3e
sw x3, 0(x2) # store 0x83eccb5bd0adeb3e in memory
flw f9, 0(x2) # load 0x83eccb5bd0adeb3e from memory into f9
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f10, 0(x2) # load 0x00800000 from memory into f10
fmsub.s f29, f19, f9, f10, dyn # perform operation
fmsub.s f29, f19, f9, f10, rdn # perform operation
fmsub.s f29, f19, f9, f10, rmm # perform operation
fmsub.s f29, f19, f9, f10, rne # perform operation
fmsub.s f29, f19, f9, f10, rtz # perform operation
fmsub.s f29, f19, f9, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f29, f19, f9, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f29, f19, f9, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f29, f19, f9, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f29, f19, f9, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f29, f19, f9, f10 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0x80800000)
li x4, 0x858b20e3f02a197a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f1, 0(x2) # load 0x3fc00000 from memory into f1
li x3, 0x30ca0a11af715767 # load x3 with value 0x30ca0a11af715767
sw x3, 0(x2) # store 0x30ca0a11af715767 in memory
flw f21, 0(x2) # load 0x30ca0a11af715767 from memory into f21
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f12, 0(x2) # load 0x80800000 from memory into f12
fmsub.s f4, f1, f21, f12, dyn # perform operation
fmsub.s f4, f1, f21, f12, rdn # perform operation
fmsub.s f4, f1, f21, f12, rmm # perform operation
fmsub.s f4, f1, f21, f12, rne # perform operation
fmsub.s f4, f1, f21, f12, rtz # perform operation
fmsub.s f4, f1, f21, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f4, f1, f21, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f4, f1, f21, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f4, f1, f21, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f4, f1, f21, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f4, f1, f21, f12 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0x7f7fffff)
li x21, 0xc59edd613b168575 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f13, 0(x2) # load 0x3fc00000 from memory into f13
li x3, 0x6fb542ffdfd5e608 # load x3 with value 0x6fb542ffdfd5e608
sw x3, 0(x2) # store 0x6fb542ffdfd5e608 in memory
flw f17, 0(x2) # load 0x6fb542ffdfd5e608 from memory into f17
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f1, 0(x2) # load 0x7f7fffff from memory into f1
fmsub.s f21, f13, f17, f1, dyn # perform operation
fmsub.s f21, f13, f17, f1, rdn # perform operation
fmsub.s f21, f13, f17, f1, rmm # perform operation
fmsub.s f21, f13, f17, f1, rne # perform operation
fmsub.s f21, f13, f17, f1, rtz # perform operation
fmsub.s f21, f13, f17, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f21, f13, f17, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f21, f13, f17, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f21, f13, f17, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f21, f13, f17, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f21, f13, f17, f1 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0xff7fffff)
li x3, 0x76686de4bf221579 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f19, 0(x2) # load 0x3fc00000 from memory into f19
li x3, 0x7720947ee6b2f9cd # load x3 with value 0x7720947ee6b2f9cd
sw x3, 0(x2) # store 0x7720947ee6b2f9cd in memory
flw f23, 0(x2) # load 0x7720947ee6b2f9cd from memory into f23
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f7, 0(x2) # load 0xff7fffff from memory into f7
fmsub.s f3, f19, f23, f7, dyn # perform operation
fmsub.s f3, f19, f23, f7, rdn # perform operation
fmsub.s f3, f19, f23, f7, rmm # perform operation
fmsub.s f3, f19, f23, f7, rne # perform operation
fmsub.s f3, f19, f23, f7, rtz # perform operation
fmsub.s f3, f19, f23, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f3, f19, f23, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f3, f19, f23, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f3, f19, f23, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f3, f19, f23, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f3, f19, f23, f7 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0x7fffff)
li x16, 0xef337c6e84ff78c6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f9, 0(x2) # load 0x3fc00000 from memory into f9
li x3, 0x1da63a43f95ef80d # load x3 with value 0x1da63a43f95ef80d
sw x3, 0(x2) # store 0x1da63a43f95ef80d in memory
flw f2, 0(x2) # load 0x1da63a43f95ef80d from memory into f2
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f14, 0(x2) # load 0x007fffff from memory into f14
fmsub.s f16, f9, f2, f14, dyn # perform operation
fmsub.s f16, f9, f2, f14, rdn # perform operation
fmsub.s f16, f9, f2, f14, rmm # perform operation
fmsub.s f16, f9, f2, f14, rne # perform operation
fmsub.s f16, f9, f2, f14, rtz # perform operation
fmsub.s f16, f9, f2, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f16, f9, f2, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f16, f9, f2, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f16, f9, f2, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f16, f9, f2, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f16, f9, f2, f14 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0x807fffff)
li x16, 0x25ab003c42ebcb8c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f13, 0(x2) # load 0x3fc00000 from memory into f13
li x3, 0x85e462155dd8ea6f # load x3 with value 0x85e462155dd8ea6f
sw x3, 0(x2) # store 0x85e462155dd8ea6f in memory
flw f30, 0(x2) # load 0x85e462155dd8ea6f from memory into f30
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f1, 0(x2) # load 0x807fffff from memory into f1
fmsub.s f16, f13, f30, f1, dyn # perform operation
fmsub.s f16, f13, f30, f1, rdn # perform operation
fmsub.s f16, f13, f30, f1, rmm # perform operation
fmsub.s f16, f13, f30, f1, rne # perform operation
fmsub.s f16, f13, f30, f1, rtz # perform operation
fmsub.s f16, f13, f30, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f16, f13, f30, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f16, f13, f30, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f16, f13, f30, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f16, f13, f30, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f16, f13, f30, f1 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0x400000)
li x10, 0x402bd4375dd4f61c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f21, 0(x2) # load 0x3fc00000 from memory into f21
li x3, 0xe7cd3ab4f850248b # load x3 with value 0xe7cd3ab4f850248b
sw x3, 0(x2) # store 0xe7cd3ab4f850248b in memory
flw f16, 0(x2) # load 0xe7cd3ab4f850248b from memory into f16
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f29, 0(x2) # load 0x00400000 from memory into f29
fmsub.s f10, f21, f16, f29, dyn # perform operation
fmsub.s f10, f21, f16, f29, rdn # perform operation
fmsub.s f10, f21, f16, f29, rmm # perform operation
fmsub.s f10, f21, f16, f29, rne # perform operation
fmsub.s f10, f21, f16, f29, rtz # perform operation
fmsub.s f10, f21, f16, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f10, f21, f16, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f10, f21, f16, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f10, f21, f16, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f10, f21, f16, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f10, f21, f16, f29 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0x80400000)
li x11, 0xf7804e6a83ef09ed # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f23, 0(x2) # load 0x3fc00000 from memory into f23
li x3, 0x2bc525d0761805cf # load x3 with value 0x2bc525d0761805cf
sw x3, 0(x2) # store 0x2bc525d0761805cf in memory
flw f3, 0(x2) # load 0x2bc525d0761805cf from memory into f3
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f9, 0(x2) # load 0x80400000 from memory into f9
fmsub.s f11, f23, f3, f9, dyn # perform operation
fmsub.s f11, f23, f3, f9, rdn # perform operation
fmsub.s f11, f23, f3, f9, rmm # perform operation
fmsub.s f11, f23, f3, f9, rne # perform operation
fmsub.s f11, f23, f3, f9, rtz # perform operation
fmsub.s f11, f23, f3, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f11, f23, f3, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f11, f23, f3, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f11, f23, f3, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f11, f23, f3, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f11, f23, f3, f9 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0x1)
li x5, 0xdc6b928d172649b2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f19, 0(x2) # load 0x3fc00000 from memory into f19
li x3, 0x92bcf4b830ed4e5f # load x3 with value 0x92bcf4b830ed4e5f
sw x3, 0(x2) # store 0x92bcf4b830ed4e5f in memory
flw f22, 0(x2) # load 0x92bcf4b830ed4e5f from memory into f22
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f29, 0(x2) # load 0x00000001 from memory into f29
fmsub.s f5, f19, f22, f29, dyn # perform operation
fmsub.s f5, f19, f22, f29, rdn # perform operation
fmsub.s f5, f19, f22, f29, rmm # perform operation
fmsub.s f5, f19, f22, f29, rne # perform operation
fmsub.s f5, f19, f22, f29, rtz # perform operation
fmsub.s f5, f19, f22, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f5, f19, f22, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f5, f19, f22, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f5, f19, f22, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f5, f19, f22, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f5, f19, f22, f29 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0x80000001)
li x6, 0x4fc926b24bf39b0e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f27, 0(x2) # load 0x3fc00000 from memory into f27
li x3, 0xdce87d2815155cb3 # load x3 with value 0xdce87d2815155cb3
sw x3, 0(x2) # store 0xdce87d2815155cb3 in memory
flw f10, 0(x2) # load 0xdce87d2815155cb3 from memory into f10
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f26, 0(x2) # load 0x80000001 from memory into f26
fmsub.s f6, f27, f10, f26, dyn # perform operation
fmsub.s f6, f27, f10, f26, rdn # perform operation
fmsub.s f6, f27, f10, f26, rmm # perform operation
fmsub.s f6, f27, f10, f26, rne # perform operation
fmsub.s f6, f27, f10, f26, rtz # perform operation
fmsub.s f6, f27, f10, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f6, f27, f10, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f6, f27, f10, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f6, f27, f10, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f6, f27, f10, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f6, f27, f10, f26 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0x7f800000)
li x19, 0x975ee4dc86bb8cc9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f6, 0(x2) # load 0x3fc00000 from memory into f6
li x3, 0xd9f3e71736794f0c # load x3 with value 0xd9f3e71736794f0c
sw x3, 0(x2) # store 0xd9f3e71736794f0c in memory
flw f24, 0(x2) # load 0xd9f3e71736794f0c from memory into f24
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f15, 0(x2) # load 0x7f800000 from memory into f15
fmsub.s f19, f6, f24, f15, dyn # perform operation
fmsub.s f19, f6, f24, f15, rdn # perform operation
fmsub.s f19, f6, f24, f15, rmm # perform operation
fmsub.s f19, f6, f24, f15, rne # perform operation
fmsub.s f19, f6, f24, f15, rtz # perform operation
fmsub.s f19, f6, f24, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f19, f6, f24, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f19, f6, f24, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f19, f6, f24, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f19, f6, f24, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f19, f6, f24, f15 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0xff800000)
li x9, 0xf5a6db8c44316134 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f5, 0(x2) # load 0x3fc00000 from memory into f5
li x3, 0x82ea13a0baf74896 # load x3 with value 0x82ea13a0baf74896
sw x3, 0(x2) # store 0x82ea13a0baf74896 in memory
flw f30, 0(x2) # load 0x82ea13a0baf74896 from memory into f30
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f15, 0(x2) # load 0xff800000 from memory into f15
fmsub.s f9, f5, f30, f15, dyn # perform operation
fmsub.s f9, f5, f30, f15, rdn # perform operation
fmsub.s f9, f5, f30, f15, rmm # perform operation
fmsub.s f9, f5, f30, f15, rne # perform operation
fmsub.s f9, f5, f30, f15, rtz # perform operation
fmsub.s f9, f5, f30, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f9, f5, f30, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f9, f5, f30, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f9, f5, f30, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f9, f5, f30, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f9, f5, f30, f15 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0x7fc00000)
li x19, 0xba3b3ad85434ab3b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f6, 0(x2) # load 0x3fc00000 from memory into f6
li x3, 0x917e02332d24ece7 # load x3 with value 0x917e02332d24ece7
sw x3, 0(x2) # store 0x917e02332d24ece7 in memory
flw f30, 0(x2) # load 0x917e02332d24ece7 from memory into f30
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f10, 0(x2) # load 0x7fc00000 from memory into f10
fmsub.s f19, f6, f30, f10, dyn # perform operation
fmsub.s f19, f6, f30, f10, rdn # perform operation
fmsub.s f19, f6, f30, f10, rmm # perform operation
fmsub.s f19, f6, f30, f10, rne # perform operation
fmsub.s f19, f6, f30, f10, rtz # perform operation
fmsub.s f19, f6, f30, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f19, f6, f30, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f19, f6, f30, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f19, f6, f30, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f19, f6, f30, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f19, f6, f30, f10 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0x7fffffff)
li x23, 0x3dd5f812b41f1de7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f30, 0(x2) # load 0x3fc00000 from memory into f30
li x3, 0xb63b97262f451614 # load x3 with value 0xb63b97262f451614
sw x3, 0(x2) # store 0xb63b97262f451614 in memory
flw f21, 0(x2) # load 0xb63b97262f451614 from memory into f21
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f26, 0(x2) # load 0x7fffffff from memory into f26
fmsub.s f23, f30, f21, f26, dyn # perform operation
fmsub.s f23, f30, f21, f26, rdn # perform operation
fmsub.s f23, f30, f21, f26, rmm # perform operation
fmsub.s f23, f30, f21, f26, rne # perform operation
fmsub.s f23, f30, f21, f26, rtz # perform operation
fmsub.s f23, f30, f21, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f23, f30, f21, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f23, f30, f21, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f23, f30, f21, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f23, f30, f21, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f23, f30, f21, f26 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0x7f800001)
li x29, 0xdfcd935498c78989 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f8, 0(x2) # load 0x3fc00000 from memory into f8
li x3, 0x88e2a046201c85f6 # load x3 with value 0x88e2a046201c85f6
sw x3, 0(x2) # store 0x88e2a046201c85f6 in memory
flw f27, 0(x2) # load 0x88e2a046201c85f6 from memory into f27
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f2, 0(x2) # load 0x7f800001 from memory into f2
fmsub.s f29, f8, f27, f2, dyn # perform operation
fmsub.s f29, f8, f27, f2, rdn # perform operation
fmsub.s f29, f8, f27, f2, rmm # perform operation
fmsub.s f29, f8, f27, f2, rne # perform operation
fmsub.s f29, f8, f27, f2, rtz # perform operation
fmsub.s f29, f8, f27, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f29, f8, f27, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f29, f8, f27, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f29, f8, f27, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f29, f8, f27, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f29, f8, f27, f2 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0x7fbfffff)
li x8, 0x9fd2631cf8775d81 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f12, 0(x2) # load 0x3fc00000 from memory into f12
li x3, 0x42d90398ed42f124 # load x3 with value 0x42d90398ed42f124
sw x3, 0(x2) # store 0x42d90398ed42f124 in memory
flw f7, 0(x2) # load 0x42d90398ed42f124 from memory into f7
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f4, 0(x2) # load 0x7fbfffff from memory into f4
fmsub.s f8, f12, f7, f4, dyn # perform operation
fmsub.s f8, f12, f7, f4, rdn # perform operation
fmsub.s f8, f12, f7, f4, rmm # perform operation
fmsub.s f8, f12, f7, f4, rne # perform operation
fmsub.s f8, f12, f7, f4, rtz # perform operation
fmsub.s f8, f12, f7, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f8, f12, f7, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f8, f12, f7, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f8, f12, f7, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f8, f12, f7, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f8, f12, f7, f4 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0x7ef8654f)
li x30, 0xc6710adf87742160 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f22, 0(x2) # load 0x3fc00000 from memory into f22
li x3, 0x8fb51388e3c996f9 # load x3 with value 0x8fb51388e3c996f9
sw x3, 0(x2) # store 0x8fb51388e3c996f9 in memory
flw f13, 0(x2) # load 0x8fb51388e3c996f9 from memory into f13
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f18, 0(x2) # load 0x7ef8654f from memory into f18
fmsub.s f30, f22, f13, f18, dyn # perform operation
fmsub.s f30, f22, f13, f18, rdn # perform operation
fmsub.s f30, f22, f13, f18, rmm # perform operation
fmsub.s f30, f22, f13, f18, rne # perform operation
fmsub.s f30, f22, f13, f18, rtz # perform operation
fmsub.s f30, f22, f13, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f30, f22, f13, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f30, f22, f13, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f30, f22, f13, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f30, f22, f13, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f30, f22, f13, f18 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0x813d9ab0)
li x27, 0xf6c8ac4a14a5127e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f12, 0(x2) # load 0x3fc00000 from memory into f12
li x3, 0xa41ad1037921ab2f # load x3 with value 0xa41ad1037921ab2f
sw x3, 0(x2) # store 0xa41ad1037921ab2f in memory
flw f7, 0(x2) # load 0xa41ad1037921ab2f from memory into f7
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f1, 0(x2) # load 0x813d9ab0 from memory into f1
fmsub.s f27, f12, f7, f1, dyn # perform operation
fmsub.s f27, f12, f7, f1, rdn # perform operation
fmsub.s f27, f12, f7, f1, rmm # perform operation
fmsub.s f27, f12, f7, f1, rne # perform operation
fmsub.s f27, f12, f7, f1, rtz # perform operation
fmsub.s f27, f12, f7, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f27, f12, f7, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f27, f12, f7, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f27, f12, f7, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f27, f12, f7, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f27, f12, f7, f1 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0x0)
li x29, 0xc2810225c470753b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f21, 0(x2) # load 0xbfc00000 from memory into f21
li x3, 0xc06ba94b27da63c0 # load x3 with value 0xc06ba94b27da63c0
sw x3, 0(x2) # store 0xc06ba94b27da63c0 in memory
flw f2, 0(x2) # load 0xc06ba94b27da63c0 from memory into f2
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f23, 0(x2) # load 0x00000000 from memory into f23
fmsub.s f29, f21, f2, f23, dyn # perform operation
fmsub.s f29, f21, f2, f23, rdn # perform operation
fmsub.s f29, f21, f2, f23, rmm # perform operation
fmsub.s f29, f21, f2, f23, rne # perform operation
fmsub.s f29, f21, f2, f23, rtz # perform operation
fmsub.s f29, f21, f2, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f29, f21, f2, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f29, f21, f2, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f29, f21, f2, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f29, f21, f2, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f29, f21, f2, f23 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0x80000000)
li x7, 0x98ca6e9d49f65b30 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f13, 0(x2) # load 0xbfc00000 from memory into f13
li x3, 0x989d14c163fe752e # load x3 with value 0x989d14c163fe752e
sw x3, 0(x2) # store 0x989d14c163fe752e in memory
flw f27, 0(x2) # load 0x989d14c163fe752e from memory into f27
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f17, 0(x2) # load 0x80000000 from memory into f17
fmsub.s f7, f13, f27, f17, dyn # perform operation
fmsub.s f7, f13, f27, f17, rdn # perform operation
fmsub.s f7, f13, f27, f17, rmm # perform operation
fmsub.s f7, f13, f27, f17, rne # perform operation
fmsub.s f7, f13, f27, f17, rtz # perform operation
fmsub.s f7, f13, f27, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f7, f13, f27, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f7, f13, f27, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f7, f13, f27, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f7, f13, f27, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f7, f13, f27, f17 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0x3f800000)
li x7, 0xa0c88bb834cdf00c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f24, 0(x2) # load 0xbfc00000 from memory into f24
li x3, 0xbd98572e791d453d # load x3 with value 0xbd98572e791d453d
sw x3, 0(x2) # store 0xbd98572e791d453d in memory
flw f30, 0(x2) # load 0xbd98572e791d453d from memory into f30
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f5, 0(x2) # load 0x3f800000 from memory into f5
fmsub.s f7, f24, f30, f5, dyn # perform operation
fmsub.s f7, f24, f30, f5, rdn # perform operation
fmsub.s f7, f24, f30, f5, rmm # perform operation
fmsub.s f7, f24, f30, f5, rne # perform operation
fmsub.s f7, f24, f30, f5, rtz # perform operation
fmsub.s f7, f24, f30, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f7, f24, f30, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f7, f24, f30, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f7, f24, f30, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f7, f24, f30, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f7, f24, f30, f5 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0xbf800000)
li x12, 0xd630bdaf3f74c181 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f21, 0(x2) # load 0xbfc00000 from memory into f21
li x3, 0xce684e0a8198e043 # load x3 with value 0xce684e0a8198e043
sw x3, 0(x2) # store 0xce684e0a8198e043 in memory
flw f2, 0(x2) # load 0xce684e0a8198e043 from memory into f2
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f11, 0(x2) # load 0xbf800000 from memory into f11
fmsub.s f12, f21, f2, f11, dyn # perform operation
fmsub.s f12, f21, f2, f11, rdn # perform operation
fmsub.s f12, f21, f2, f11, rmm # perform operation
fmsub.s f12, f21, f2, f11, rne # perform operation
fmsub.s f12, f21, f2, f11, rtz # perform operation
fmsub.s f12, f21, f2, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f12, f21, f2, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f12, f21, f2, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f12, f21, f2, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f12, f21, f2, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f12, f21, f2, f11 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0x3fc00000)
li x28, 0xd7fe3eb2d9b72d0c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f29, 0(x2) # load 0xbfc00000 from memory into f29
li x3, 0xc29cf5cfeaf55f8b # load x3 with value 0xc29cf5cfeaf55f8b
sw x3, 0(x2) # store 0xc29cf5cfeaf55f8b in memory
flw f9, 0(x2) # load 0xc29cf5cfeaf55f8b from memory into f9
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f8, 0(x2) # load 0x3fc00000 from memory into f8
fmsub.s f28, f29, f9, f8, dyn # perform operation
fmsub.s f28, f29, f9, f8, rdn # perform operation
fmsub.s f28, f29, f9, f8, rmm # perform operation
fmsub.s f28, f29, f9, f8, rne # perform operation
fmsub.s f28, f29, f9, f8, rtz # perform operation
fmsub.s f28, f29, f9, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f28, f29, f9, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f28, f29, f9, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f28, f29, f9, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f28, f29, f9, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f28, f29, f9, f8 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0xbfc00000)
li x18, 0xb4c9e36f4043034c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f21, 0(x2) # load 0xbfc00000 from memory into f21
li x3, 0x215ff54f55011d7d # load x3 with value 0x215ff54f55011d7d
sw x3, 0(x2) # store 0x215ff54f55011d7d in memory
flw f30, 0(x2) # load 0x215ff54f55011d7d from memory into f30
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f25, 0(x2) # load 0xbfc00000 from memory into f25
fmsub.s f18, f21, f30, f25, dyn # perform operation
fmsub.s f18, f21, f30, f25, rdn # perform operation
fmsub.s f18, f21, f30, f25, rmm # perform operation
fmsub.s f18, f21, f30, f25, rne # perform operation
fmsub.s f18, f21, f30, f25, rtz # perform operation
fmsub.s f18, f21, f30, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f18, f21, f30, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f18, f21, f30, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f18, f21, f30, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f18, f21, f30, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f18, f21, f30, f25 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0x40000000)
li x1, 0x4938b16ed1b46a87 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f5, 0(x2) # load 0xbfc00000 from memory into f5
li x3, 0xcafc1a2ce4e331dd # load x3 with value 0xcafc1a2ce4e331dd
sw x3, 0(x2) # store 0xcafc1a2ce4e331dd in memory
flw f19, 0(x2) # load 0xcafc1a2ce4e331dd from memory into f19
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f3, 0(x2) # load 0x40000000 from memory into f3
fmsub.s f1, f5, f19, f3, dyn # perform operation
fmsub.s f1, f5, f19, f3, rdn # perform operation
fmsub.s f1, f5, f19, f3, rmm # perform operation
fmsub.s f1, f5, f19, f3, rne # perform operation
fmsub.s f1, f5, f19, f3, rtz # perform operation
fmsub.s f1, f5, f19, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f1, f5, f19, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f1, f5, f19, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f1, f5, f19, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f1, f5, f19, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f1, f5, f19, f3 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0xc0000000)
li x2, 0x45da6726ce895657 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f17, 0(x2) # load 0xbfc00000 from memory into f17
li x3, 0xf9aef82578a5a006 # load x3 with value 0xf9aef82578a5a006
sw x3, 0(x2) # store 0xf9aef82578a5a006 in memory
flw f5, 0(x2) # load 0xf9aef82578a5a006 from memory into f5
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f31, 0(x2) # load 0xc0000000 from memory into f31
fmsub.s f2, f17, f5, f31, dyn # perform operation
fmsub.s f2, f17, f5, f31, rdn # perform operation
fmsub.s f2, f17, f5, f31, rmm # perform operation
fmsub.s f2, f17, f5, f31, rne # perform operation
fmsub.s f2, f17, f5, f31, rtz # perform operation
fmsub.s f2, f17, f5, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f2, f17, f5, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f2, f17, f5, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f2, f17, f5, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f2, f17, f5, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f2, f17, f5, f31 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0x800000)
li x8, 0x367c8e51b5c83aa1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f5, 0(x2) # load 0xbfc00000 from memory into f5
li x3, 0x6b465c68ab88b45d # load x3 with value 0x6b465c68ab88b45d
sw x3, 0(x2) # store 0x6b465c68ab88b45d in memory
flw f26, 0(x2) # load 0x6b465c68ab88b45d from memory into f26
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f28, 0(x2) # load 0x00800000 from memory into f28
fmsub.s f8, f5, f26, f28, dyn # perform operation
fmsub.s f8, f5, f26, f28, rdn # perform operation
fmsub.s f8, f5, f26, f28, rmm # perform operation
fmsub.s f8, f5, f26, f28, rne # perform operation
fmsub.s f8, f5, f26, f28, rtz # perform operation
fmsub.s f8, f5, f26, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f8, f5, f26, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f8, f5, f26, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f8, f5, f26, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f8, f5, f26, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f8, f5, f26, f28 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0x80800000)
li x21, 0x14b45846ec208718 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f11, 0(x2) # load 0xbfc00000 from memory into f11
li x3, 0x7c223b61df754355 # load x3 with value 0x7c223b61df754355
sw x3, 0(x2) # store 0x7c223b61df754355 in memory
flw f29, 0(x2) # load 0x7c223b61df754355 from memory into f29
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f18, 0(x2) # load 0x80800000 from memory into f18
fmsub.s f21, f11, f29, f18, dyn # perform operation
fmsub.s f21, f11, f29, f18, rdn # perform operation
fmsub.s f21, f11, f29, f18, rmm # perform operation
fmsub.s f21, f11, f29, f18, rne # perform operation
fmsub.s f21, f11, f29, f18, rtz # perform operation
fmsub.s f21, f11, f29, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f21, f11, f29, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f21, f11, f29, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f21, f11, f29, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f21, f11, f29, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f21, f11, f29, f18 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0x7f7fffff)
li x25, 0x25aefd45aa04c71d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f20, 0(x2) # load 0xbfc00000 from memory into f20
li x3, 0x39fe145a8bc4c310 # load x3 with value 0x39fe145a8bc4c310
sw x3, 0(x2) # store 0x39fe145a8bc4c310 in memory
flw f12, 0(x2) # load 0x39fe145a8bc4c310 from memory into f12
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f22, 0(x2) # load 0x7f7fffff from memory into f22
fmsub.s f25, f20, f12, f22, dyn # perform operation
fmsub.s f25, f20, f12, f22, rdn # perform operation
fmsub.s f25, f20, f12, f22, rmm # perform operation
fmsub.s f25, f20, f12, f22, rne # perform operation
fmsub.s f25, f20, f12, f22, rtz # perform operation
fmsub.s f25, f20, f12, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f25, f20, f12, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f25, f20, f12, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f25, f20, f12, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f25, f20, f12, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f25, f20, f12, f22 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0xff7fffff)
li x27, 0x8bbabfa51c0bddb2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f11, 0(x2) # load 0xbfc00000 from memory into f11
li x3, 0xac7b35de82ecbdd1 # load x3 with value 0xac7b35de82ecbdd1
sw x3, 0(x2) # store 0xac7b35de82ecbdd1 in memory
flw f14, 0(x2) # load 0xac7b35de82ecbdd1 from memory into f14
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f30, 0(x2) # load 0xff7fffff from memory into f30
fmsub.s f27, f11, f14, f30, dyn # perform operation
fmsub.s f27, f11, f14, f30, rdn # perform operation
fmsub.s f27, f11, f14, f30, rmm # perform operation
fmsub.s f27, f11, f14, f30, rne # perform operation
fmsub.s f27, f11, f14, f30, rtz # perform operation
fmsub.s f27, f11, f14, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f27, f11, f14, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f27, f11, f14, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f27, f11, f14, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f27, f11, f14, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f27, f11, f14, f30 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0x7fffff)
li x20, 0xbc471fbb5c1101ec # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f13, 0(x2) # load 0xbfc00000 from memory into f13
li x3, 0x73a0d80b922ff045 # load x3 with value 0x73a0d80b922ff045
sw x3, 0(x2) # store 0x73a0d80b922ff045 in memory
flw f25, 0(x2) # load 0x73a0d80b922ff045 from memory into f25
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f26, 0(x2) # load 0x007fffff from memory into f26
fmsub.s f20, f13, f25, f26, dyn # perform operation
fmsub.s f20, f13, f25, f26, rdn # perform operation
fmsub.s f20, f13, f25, f26, rmm # perform operation
fmsub.s f20, f13, f25, f26, rne # perform operation
fmsub.s f20, f13, f25, f26, rtz # perform operation
fmsub.s f20, f13, f25, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f20, f13, f25, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f20, f13, f25, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f20, f13, f25, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f20, f13, f25, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f20, f13, f25, f26 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0x807fffff)
li x27, 0x81a14c2e165a0138 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f10, 0(x2) # load 0xbfc00000 from memory into f10
li x3, 0x5f85fbfcdacd9cea # load x3 with value 0x5f85fbfcdacd9cea
sw x3, 0(x2) # store 0x5f85fbfcdacd9cea in memory
flw f23, 0(x2) # load 0x5f85fbfcdacd9cea from memory into f23
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f6, 0(x2) # load 0x807fffff from memory into f6
fmsub.s f27, f10, f23, f6, dyn # perform operation
fmsub.s f27, f10, f23, f6, rdn # perform operation
fmsub.s f27, f10, f23, f6, rmm # perform operation
fmsub.s f27, f10, f23, f6, rne # perform operation
fmsub.s f27, f10, f23, f6, rtz # perform operation
fmsub.s f27, f10, f23, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f27, f10, f23, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f27, f10, f23, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f27, f10, f23, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f27, f10, f23, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f27, f10, f23, f6 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0x400000)
li x4, 0xe09691603fe69b2f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f24, 0(x2) # load 0xbfc00000 from memory into f24
li x3, 0x193fe0f0f9ef36cb # load x3 with value 0x193fe0f0f9ef36cb
sw x3, 0(x2) # store 0x193fe0f0f9ef36cb in memory
flw f5, 0(x2) # load 0x193fe0f0f9ef36cb from memory into f5
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f26, 0(x2) # load 0x00400000 from memory into f26
fmsub.s f4, f24, f5, f26, dyn # perform operation
fmsub.s f4, f24, f5, f26, rdn # perform operation
fmsub.s f4, f24, f5, f26, rmm # perform operation
fmsub.s f4, f24, f5, f26, rne # perform operation
fmsub.s f4, f24, f5, f26, rtz # perform operation
fmsub.s f4, f24, f5, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f4, f24, f5, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f4, f24, f5, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f4, f24, f5, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f4, f24, f5, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f4, f24, f5, f26 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0x80400000)
li x13, 0x17831d13dea329e8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f16, 0(x2) # load 0xbfc00000 from memory into f16
li x3, 0xec8e9ed0e28c542e # load x3 with value 0xec8e9ed0e28c542e
sw x3, 0(x2) # store 0xec8e9ed0e28c542e in memory
flw f9, 0(x2) # load 0xec8e9ed0e28c542e from memory into f9
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f2, 0(x2) # load 0x80400000 from memory into f2
fmsub.s f13, f16, f9, f2, dyn # perform operation
fmsub.s f13, f16, f9, f2, rdn # perform operation
fmsub.s f13, f16, f9, f2, rmm # perform operation
fmsub.s f13, f16, f9, f2, rne # perform operation
fmsub.s f13, f16, f9, f2, rtz # perform operation
fmsub.s f13, f16, f9, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f13, f16, f9, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f13, f16, f9, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f13, f16, f9, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f13, f16, f9, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f13, f16, f9, f2 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0x1)
li x29, 0x5625968ceab68b3a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f10, 0(x2) # load 0xbfc00000 from memory into f10
li x3, 0x12d718f4667db540 # load x3 with value 0x12d718f4667db540
sw x3, 0(x2) # store 0x12d718f4667db540 in memory
flw f28, 0(x2) # load 0x12d718f4667db540 from memory into f28
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f22, 0(x2) # load 0x00000001 from memory into f22
fmsub.s f29, f10, f28, f22, dyn # perform operation
fmsub.s f29, f10, f28, f22, rdn # perform operation
fmsub.s f29, f10, f28, f22, rmm # perform operation
fmsub.s f29, f10, f28, f22, rne # perform operation
fmsub.s f29, f10, f28, f22, rtz # perform operation
fmsub.s f29, f10, f28, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f29, f10, f28, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f29, f10, f28, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f29, f10, f28, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f29, f10, f28, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f29, f10, f28, f22 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0x80000001)
li x19, 0x8a5c7993a1e3ef52 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f9, 0(x2) # load 0xbfc00000 from memory into f9
li x3, 0xf3defc257794db5b # load x3 with value 0xf3defc257794db5b
sw x3, 0(x2) # store 0xf3defc257794db5b in memory
flw f31, 0(x2) # load 0xf3defc257794db5b from memory into f31
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f2, 0(x2) # load 0x80000001 from memory into f2
fmsub.s f19, f9, f31, f2, dyn # perform operation
fmsub.s f19, f9, f31, f2, rdn # perform operation
fmsub.s f19, f9, f31, f2, rmm # perform operation
fmsub.s f19, f9, f31, f2, rne # perform operation
fmsub.s f19, f9, f31, f2, rtz # perform operation
fmsub.s f19, f9, f31, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f19, f9, f31, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f19, f9, f31, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f19, f9, f31, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f19, f9, f31, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f19, f9, f31, f2 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0x7f800000)
li x30, 0xbd64460131af0b43 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f15, 0(x2) # load 0xbfc00000 from memory into f15
li x3, 0x22422151dab1bb97 # load x3 with value 0x22422151dab1bb97
sw x3, 0(x2) # store 0x22422151dab1bb97 in memory
flw f2, 0(x2) # load 0x22422151dab1bb97 from memory into f2
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f5, 0(x2) # load 0x7f800000 from memory into f5
fmsub.s f30, f15, f2, f5, dyn # perform operation
fmsub.s f30, f15, f2, f5, rdn # perform operation
fmsub.s f30, f15, f2, f5, rmm # perform operation
fmsub.s f30, f15, f2, f5, rne # perform operation
fmsub.s f30, f15, f2, f5, rtz # perform operation
fmsub.s f30, f15, f2, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f30, f15, f2, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f30, f15, f2, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f30, f15, f2, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f30, f15, f2, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f30, f15, f2, f5 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0xff800000)
li x11, 0x319abce0c7f00ed1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f17, 0(x2) # load 0xbfc00000 from memory into f17
li x3, 0xa5e06aa945738f95 # load x3 with value 0xa5e06aa945738f95
sw x3, 0(x2) # store 0xa5e06aa945738f95 in memory
flw f26, 0(x2) # load 0xa5e06aa945738f95 from memory into f26
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f2, 0(x2) # load 0xff800000 from memory into f2
fmsub.s f11, f17, f26, f2, dyn # perform operation
fmsub.s f11, f17, f26, f2, rdn # perform operation
fmsub.s f11, f17, f26, f2, rmm # perform operation
fmsub.s f11, f17, f26, f2, rne # perform operation
fmsub.s f11, f17, f26, f2, rtz # perform operation
fmsub.s f11, f17, f26, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f11, f17, f26, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f11, f17, f26, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f11, f17, f26, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f11, f17, f26, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f11, f17, f26, f2 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0x7fc00000)
li x26, 0xfff25947f7aff3d5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f14, 0(x2) # load 0xbfc00000 from memory into f14
li x3, 0x32d2f1316d6c2fab # load x3 with value 0x32d2f1316d6c2fab
sw x3, 0(x2) # store 0x32d2f1316d6c2fab in memory
flw f30, 0(x2) # load 0x32d2f1316d6c2fab from memory into f30
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f3, 0(x2) # load 0x7fc00000 from memory into f3
fmsub.s f26, f14, f30, f3, dyn # perform operation
fmsub.s f26, f14, f30, f3, rdn # perform operation
fmsub.s f26, f14, f30, f3, rmm # perform operation
fmsub.s f26, f14, f30, f3, rne # perform operation
fmsub.s f26, f14, f30, f3, rtz # perform operation
fmsub.s f26, f14, f30, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f26, f14, f30, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f26, f14, f30, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f26, f14, f30, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f26, f14, f30, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f26, f14, f30, f3 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0x7fffffff)
li x12, 0xed5046ae402d6c02 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f13, 0(x2) # load 0xbfc00000 from memory into f13
li x3, 0x5cefa172962a718c # load x3 with value 0x5cefa172962a718c
sw x3, 0(x2) # store 0x5cefa172962a718c in memory
flw f17, 0(x2) # load 0x5cefa172962a718c from memory into f17
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f11, 0(x2) # load 0x7fffffff from memory into f11
fmsub.s f12, f13, f17, f11, dyn # perform operation
fmsub.s f12, f13, f17, f11, rdn # perform operation
fmsub.s f12, f13, f17, f11, rmm # perform operation
fmsub.s f12, f13, f17, f11, rne # perform operation
fmsub.s f12, f13, f17, f11, rtz # perform operation
fmsub.s f12, f13, f17, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f12, f13, f17, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f12, f13, f17, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f12, f13, f17, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f12, f13, f17, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f12, f13, f17, f11 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0x7f800001)
li x14, 0x9d298e4cabbff656 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f16, 0(x2) # load 0xbfc00000 from memory into f16
li x3, 0x46a3c8ec18fc7ff4 # load x3 with value 0x46a3c8ec18fc7ff4
sw x3, 0(x2) # store 0x46a3c8ec18fc7ff4 in memory
flw f26, 0(x2) # load 0x46a3c8ec18fc7ff4 from memory into f26
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f10, 0(x2) # load 0x7f800001 from memory into f10
fmsub.s f14, f16, f26, f10, dyn # perform operation
fmsub.s f14, f16, f26, f10, rdn # perform operation
fmsub.s f14, f16, f26, f10, rmm # perform operation
fmsub.s f14, f16, f26, f10, rne # perform operation
fmsub.s f14, f16, f26, f10, rtz # perform operation
fmsub.s f14, f16, f26, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f14, f16, f26, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f14, f16, f26, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f14, f16, f26, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f14, f16, f26, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f14, f16, f26, f10 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0x7fbfffff)
li x23, 0x46f3813730b11cfa # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f27, 0(x2) # load 0xbfc00000 from memory into f27
li x3, 0xe9c5d971809d96b1 # load x3 with value 0xe9c5d971809d96b1
sw x3, 0(x2) # store 0xe9c5d971809d96b1 in memory
flw f29, 0(x2) # load 0xe9c5d971809d96b1 from memory into f29
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f5, 0(x2) # load 0x7fbfffff from memory into f5
fmsub.s f23, f27, f29, f5, dyn # perform operation
fmsub.s f23, f27, f29, f5, rdn # perform operation
fmsub.s f23, f27, f29, f5, rmm # perform operation
fmsub.s f23, f27, f29, f5, rne # perform operation
fmsub.s f23, f27, f29, f5, rtz # perform operation
fmsub.s f23, f27, f29, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f23, f27, f29, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f23, f27, f29, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f23, f27, f29, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f23, f27, f29, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f23, f27, f29, f5 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0x7ef8654f)
li x8, 0xd48b1a0a02580c19 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f7, 0(x2) # load 0xbfc00000 from memory into f7
li x3, 0x6672e51834551243 # load x3 with value 0x6672e51834551243
sw x3, 0(x2) # store 0x6672e51834551243 in memory
flw f10, 0(x2) # load 0x6672e51834551243 from memory into f10
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f18, 0(x2) # load 0x7ef8654f from memory into f18
fmsub.s f8, f7, f10, f18, dyn # perform operation
fmsub.s f8, f7, f10, f18, rdn # perform operation
fmsub.s f8, f7, f10, f18, rmm # perform operation
fmsub.s f8, f7, f10, f18, rne # perform operation
fmsub.s f8, f7, f10, f18, rtz # perform operation
fmsub.s f8, f7, f10, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f8, f7, f10, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f8, f7, f10, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f8, f7, f10, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f8, f7, f10, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f8, f7, f10, f18 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0x813d9ab0)
li x21, 0xc5746d4aae291f4b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f12, 0(x2) # load 0xbfc00000 from memory into f12
li x3, 0x3f32690cf482311e # load x3 with value 0x3f32690cf482311e
sw x3, 0(x2) # store 0x3f32690cf482311e in memory
flw f20, 0(x2) # load 0x3f32690cf482311e from memory into f20
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f5, 0(x2) # load 0x813d9ab0 from memory into f5
fmsub.s f21, f12, f20, f5, dyn # perform operation
fmsub.s f21, f12, f20, f5, rdn # perform operation
fmsub.s f21, f12, f20, f5, rmm # perform operation
fmsub.s f21, f12, f20, f5, rne # perform operation
fmsub.s f21, f12, f20, f5, rtz # perform operation
fmsub.s f21, f12, f20, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f21, f12, f20, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f21, f12, f20, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f21, f12, f20, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f21, f12, f20, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f21, f12, f20, f5 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0x0)
li x31, 0xbdc5437536f4d131 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f1, 0(x2) # load 0x40000000 from memory into f1
li x3, 0x4268865747df61a9 # load x3 with value 0x4268865747df61a9
sw x3, 0(x2) # store 0x4268865747df61a9 in memory
flw f5, 0(x2) # load 0x4268865747df61a9 from memory into f5
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f27, 0(x2) # load 0x00000000 from memory into f27
fmsub.s f31, f1, f5, f27, dyn # perform operation
fmsub.s f31, f1, f5, f27, rdn # perform operation
fmsub.s f31, f1, f5, f27, rmm # perform operation
fmsub.s f31, f1, f5, f27, rne # perform operation
fmsub.s f31, f1, f5, f27, rtz # perform operation
fmsub.s f31, f1, f5, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f31, f1, f5, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f31, f1, f5, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f31, f1, f5, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f31, f1, f5, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f31, f1, f5, f27 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0x80000000)
li x15, 0xf11a30442e7fc0d5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f24, 0(x2) # load 0x40000000 from memory into f24
li x3, 0x92bbd05c3f0a0f9e # load x3 with value 0x92bbd05c3f0a0f9e
sw x3, 0(x2) # store 0x92bbd05c3f0a0f9e in memory
flw f30, 0(x2) # load 0x92bbd05c3f0a0f9e from memory into f30
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f27, 0(x2) # load 0x80000000 from memory into f27
fmsub.s f15, f24, f30, f27, dyn # perform operation
fmsub.s f15, f24, f30, f27, rdn # perform operation
fmsub.s f15, f24, f30, f27, rmm # perform operation
fmsub.s f15, f24, f30, f27, rne # perform operation
fmsub.s f15, f24, f30, f27, rtz # perform operation
fmsub.s f15, f24, f30, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f15, f24, f30, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f15, f24, f30, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f15, f24, f30, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f15, f24, f30, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f15, f24, f30, f27 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0x3f800000)
li x16, 0xf09be957f640c35d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f2, 0(x2) # load 0x40000000 from memory into f2
li x3, 0x8b06e1712d039a51 # load x3 with value 0x8b06e1712d039a51
sw x3, 0(x2) # store 0x8b06e1712d039a51 in memory
flw f8, 0(x2) # load 0x8b06e1712d039a51 from memory into f8
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f15, 0(x2) # load 0x3f800000 from memory into f15
fmsub.s f16, f2, f8, f15, dyn # perform operation
fmsub.s f16, f2, f8, f15, rdn # perform operation
fmsub.s f16, f2, f8, f15, rmm # perform operation
fmsub.s f16, f2, f8, f15, rne # perform operation
fmsub.s f16, f2, f8, f15, rtz # perform operation
fmsub.s f16, f2, f8, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f16, f2, f8, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f16, f2, f8, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f16, f2, f8, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f16, f2, f8, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f16, f2, f8, f15 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0xbf800000)
li x28, 0xd3bb4b80e3d5f2af # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f19, 0(x2) # load 0x40000000 from memory into f19
li x3, 0xb00907db9e78ccd9 # load x3 with value 0xb00907db9e78ccd9
sw x3, 0(x2) # store 0xb00907db9e78ccd9 in memory
flw f14, 0(x2) # load 0xb00907db9e78ccd9 from memory into f14
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f6, 0(x2) # load 0xbf800000 from memory into f6
fmsub.s f28, f19, f14, f6, dyn # perform operation
fmsub.s f28, f19, f14, f6, rdn # perform operation
fmsub.s f28, f19, f14, f6, rmm # perform operation
fmsub.s f28, f19, f14, f6, rne # perform operation
fmsub.s f28, f19, f14, f6, rtz # perform operation
fmsub.s f28, f19, f14, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f28, f19, f14, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f28, f19, f14, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f28, f19, f14, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f28, f19, f14, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f28, f19, f14, f6 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0x3fc00000)
li x22, 0x098a982226d69692 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f7, 0(x2) # load 0x40000000 from memory into f7
li x3, 0x978073f757aa922d # load x3 with value 0x978073f757aa922d
sw x3, 0(x2) # store 0x978073f757aa922d in memory
flw f21, 0(x2) # load 0x978073f757aa922d from memory into f21
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f28, 0(x2) # load 0x3fc00000 from memory into f28
fmsub.s f22, f7, f21, f28, dyn # perform operation
fmsub.s f22, f7, f21, f28, rdn # perform operation
fmsub.s f22, f7, f21, f28, rmm # perform operation
fmsub.s f22, f7, f21, f28, rne # perform operation
fmsub.s f22, f7, f21, f28, rtz # perform operation
fmsub.s f22, f7, f21, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f22, f7, f21, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f22, f7, f21, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f22, f7, f21, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f22, f7, f21, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f22, f7, f21, f28 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0xbfc00000)
li x31, 0xe12dfbbf033ea247 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f12, 0(x2) # load 0x40000000 from memory into f12
li x3, 0xad7f5899bc776d5 # load x3 with value 0xad7f5899bc776d5
sw x3, 0(x2) # store 0xad7f5899bc776d5 in memory
flw f20, 0(x2) # load 0xad7f5899bc776d5 from memory into f20
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f19, 0(x2) # load 0xbfc00000 from memory into f19
fmsub.s f31, f12, f20, f19, dyn # perform operation
fmsub.s f31, f12, f20, f19, rdn # perform operation
fmsub.s f31, f12, f20, f19, rmm # perform operation
fmsub.s f31, f12, f20, f19, rne # perform operation
fmsub.s f31, f12, f20, f19, rtz # perform operation
fmsub.s f31, f12, f20, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f31, f12, f20, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f31, f12, f20, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f31, f12, f20, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f31, f12, f20, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f31, f12, f20, f19 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0x40000000)
li x17, 0x91b17864dc4be81f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f5, 0(x2) # load 0x40000000 from memory into f5
li x3, 0x18e5195da19fceca # load x3 with value 0x18e5195da19fceca
sw x3, 0(x2) # store 0x18e5195da19fceca in memory
flw f29, 0(x2) # load 0x18e5195da19fceca from memory into f29
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f30, 0(x2) # load 0x40000000 from memory into f30
fmsub.s f17, f5, f29, f30, dyn # perform operation
fmsub.s f17, f5, f29, f30, rdn # perform operation
fmsub.s f17, f5, f29, f30, rmm # perform operation
fmsub.s f17, f5, f29, f30, rne # perform operation
fmsub.s f17, f5, f29, f30, rtz # perform operation
fmsub.s f17, f5, f29, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f17, f5, f29, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f17, f5, f29, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f17, f5, f29, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f17, f5, f29, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f17, f5, f29, f30 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0xc0000000)
li x7, 0x3950ddb3ad4f2c48 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f23, 0(x2) # load 0x40000000 from memory into f23
li x3, 0x5152f4784db2c38 # load x3 with value 0x5152f4784db2c38
sw x3, 0(x2) # store 0x5152f4784db2c38 in memory
flw f21, 0(x2) # load 0x5152f4784db2c38 from memory into f21
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f25, 0(x2) # load 0xc0000000 from memory into f25
fmsub.s f7, f23, f21, f25, dyn # perform operation
fmsub.s f7, f23, f21, f25, rdn # perform operation
fmsub.s f7, f23, f21, f25, rmm # perform operation
fmsub.s f7, f23, f21, f25, rne # perform operation
fmsub.s f7, f23, f21, f25, rtz # perform operation
fmsub.s f7, f23, f21, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f7, f23, f21, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f7, f23, f21, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f7, f23, f21, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f7, f23, f21, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f7, f23, f21, f25 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0x800000)
li x9, 0xce45283d4122524e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f21, 0(x2) # load 0x40000000 from memory into f21
li x3, 0x8875e6b5ba664b9c # load x3 with value 0x8875e6b5ba664b9c
sw x3, 0(x2) # store 0x8875e6b5ba664b9c in memory
flw f24, 0(x2) # load 0x8875e6b5ba664b9c from memory into f24
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f27, 0(x2) # load 0x00800000 from memory into f27
fmsub.s f9, f21, f24, f27, dyn # perform operation
fmsub.s f9, f21, f24, f27, rdn # perform operation
fmsub.s f9, f21, f24, f27, rmm # perform operation
fmsub.s f9, f21, f24, f27, rne # perform operation
fmsub.s f9, f21, f24, f27, rtz # perform operation
fmsub.s f9, f21, f24, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f9, f21, f24, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f9, f21, f24, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f9, f21, f24, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f9, f21, f24, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f9, f21, f24, f27 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0x80800000)
li x24, 0x42d1980d2f88ebc2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f25, 0(x2) # load 0x40000000 from memory into f25
li x3, 0x3afafe54afdfee48 # load x3 with value 0x3afafe54afdfee48
sw x3, 0(x2) # store 0x3afafe54afdfee48 in memory
flw f8, 0(x2) # load 0x3afafe54afdfee48 from memory into f8
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f16, 0(x2) # load 0x80800000 from memory into f16
fmsub.s f24, f25, f8, f16, dyn # perform operation
fmsub.s f24, f25, f8, f16, rdn # perform operation
fmsub.s f24, f25, f8, f16, rmm # perform operation
fmsub.s f24, f25, f8, f16, rne # perform operation
fmsub.s f24, f25, f8, f16, rtz # perform operation
fmsub.s f24, f25, f8, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f24, f25, f8, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f24, f25, f8, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f24, f25, f8, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f24, f25, f8, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f24, f25, f8, f16 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0x7f7fffff)
li x7, 0xfd45554956a48556 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f29, 0(x2) # load 0x40000000 from memory into f29
li x3, 0xb103a759990c8166 # load x3 with value 0xb103a759990c8166
sw x3, 0(x2) # store 0xb103a759990c8166 in memory
flw f4, 0(x2) # load 0xb103a759990c8166 from memory into f4
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f24, 0(x2) # load 0x7f7fffff from memory into f24
fmsub.s f7, f29, f4, f24, dyn # perform operation
fmsub.s f7, f29, f4, f24, rdn # perform operation
fmsub.s f7, f29, f4, f24, rmm # perform operation
fmsub.s f7, f29, f4, f24, rne # perform operation
fmsub.s f7, f29, f4, f24, rtz # perform operation
fmsub.s f7, f29, f4, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f7, f29, f4, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f7, f29, f4, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f7, f29, f4, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f7, f29, f4, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f7, f29, f4, f24 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0xff7fffff)
li x23, 0x5cbd75f336699df5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f15, 0(x2) # load 0x40000000 from memory into f15
li x3, 0xa9ca9803dfba7518 # load x3 with value 0xa9ca9803dfba7518
sw x3, 0(x2) # store 0xa9ca9803dfba7518 in memory
flw f20, 0(x2) # load 0xa9ca9803dfba7518 from memory into f20
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f16, 0(x2) # load 0xff7fffff from memory into f16
fmsub.s f23, f15, f20, f16, dyn # perform operation
fmsub.s f23, f15, f20, f16, rdn # perform operation
fmsub.s f23, f15, f20, f16, rmm # perform operation
fmsub.s f23, f15, f20, f16, rne # perform operation
fmsub.s f23, f15, f20, f16, rtz # perform operation
fmsub.s f23, f15, f20, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f23, f15, f20, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f23, f15, f20, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f23, f15, f20, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f23, f15, f20, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f23, f15, f20, f16 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0x7fffff)
li x1, 0xf94c86d619535ff6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f30, 0(x2) # load 0x40000000 from memory into f30
li x3, 0x9a0c04140f0f32d6 # load x3 with value 0x9a0c04140f0f32d6
sw x3, 0(x2) # store 0x9a0c04140f0f32d6 in memory
flw f14, 0(x2) # load 0x9a0c04140f0f32d6 from memory into f14
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f6, 0(x2) # load 0x007fffff from memory into f6
fmsub.s f1, f30, f14, f6, dyn # perform operation
fmsub.s f1, f30, f14, f6, rdn # perform operation
fmsub.s f1, f30, f14, f6, rmm # perform operation
fmsub.s f1, f30, f14, f6, rne # perform operation
fmsub.s f1, f30, f14, f6, rtz # perform operation
fmsub.s f1, f30, f14, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f1, f30, f14, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f1, f30, f14, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f1, f30, f14, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f1, f30, f14, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f1, f30, f14, f6 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0x807fffff)
li x14, 0x4653472f0efcdc0d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f25, 0(x2) # load 0x40000000 from memory into f25
li x3, 0x89d13c578e616ed0 # load x3 with value 0x89d13c578e616ed0
sw x3, 0(x2) # store 0x89d13c578e616ed0 in memory
flw f10, 0(x2) # load 0x89d13c578e616ed0 from memory into f10
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f22, 0(x2) # load 0x807fffff from memory into f22
fmsub.s f14, f25, f10, f22, dyn # perform operation
fmsub.s f14, f25, f10, f22, rdn # perform operation
fmsub.s f14, f25, f10, f22, rmm # perform operation
fmsub.s f14, f25, f10, f22, rne # perform operation
fmsub.s f14, f25, f10, f22, rtz # perform operation
fmsub.s f14, f25, f10, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f14, f25, f10, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f14, f25, f10, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f14, f25, f10, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f14, f25, f10, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f14, f25, f10, f22 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0x400000)
li x14, 0xcce4958f856a2860 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f2, 0(x2) # load 0x40000000 from memory into f2
li x3, 0x3f6a80a0163bf218 # load x3 with value 0x3f6a80a0163bf218
sw x3, 0(x2) # store 0x3f6a80a0163bf218 in memory
flw f1, 0(x2) # load 0x3f6a80a0163bf218 from memory into f1
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f17, 0(x2) # load 0x00400000 from memory into f17
fmsub.s f14, f2, f1, f17, dyn # perform operation
fmsub.s f14, f2, f1, f17, rdn # perform operation
fmsub.s f14, f2, f1, f17, rmm # perform operation
fmsub.s f14, f2, f1, f17, rne # perform operation
fmsub.s f14, f2, f1, f17, rtz # perform operation
fmsub.s f14, f2, f1, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f14, f2, f1, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f14, f2, f1, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f14, f2, f1, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f14, f2, f1, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f14, f2, f1, f17 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0x80400000)
li x14, 0x44f4649fb70dc49a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f9, 0(x2) # load 0x40000000 from memory into f9
li x3, 0x87035dd4f22289af # load x3 with value 0x87035dd4f22289af
sw x3, 0(x2) # store 0x87035dd4f22289af in memory
flw f2, 0(x2) # load 0x87035dd4f22289af from memory into f2
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f1, 0(x2) # load 0x80400000 from memory into f1
fmsub.s f14, f9, f2, f1, dyn # perform operation
fmsub.s f14, f9, f2, f1, rdn # perform operation
fmsub.s f14, f9, f2, f1, rmm # perform operation
fmsub.s f14, f9, f2, f1, rne # perform operation
fmsub.s f14, f9, f2, f1, rtz # perform operation
fmsub.s f14, f9, f2, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f14, f9, f2, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f14, f9, f2, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f14, f9, f2, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f14, f9, f2, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f14, f9, f2, f1 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0x1)
li x15, 0xbe9f0f8ee9a2fa59 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f8, 0(x2) # load 0x40000000 from memory into f8
li x3, 0x2478383c4c7f0099 # load x3 with value 0x2478383c4c7f0099
sw x3, 0(x2) # store 0x2478383c4c7f0099 in memory
flw f19, 0(x2) # load 0x2478383c4c7f0099 from memory into f19
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f27, 0(x2) # load 0x00000001 from memory into f27
fmsub.s f15, f8, f19, f27, dyn # perform operation
fmsub.s f15, f8, f19, f27, rdn # perform operation
fmsub.s f15, f8, f19, f27, rmm # perform operation
fmsub.s f15, f8, f19, f27, rne # perform operation
fmsub.s f15, f8, f19, f27, rtz # perform operation
fmsub.s f15, f8, f19, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f15, f8, f19, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f15, f8, f19, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f15, f8, f19, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f15, f8, f19, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f15, f8, f19, f27 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0x80000001)
li x19, 0x38fea1c566660db5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f5, 0(x2) # load 0x40000000 from memory into f5
li x3, 0x2c22537ee07379df # load x3 with value 0x2c22537ee07379df
sw x3, 0(x2) # store 0x2c22537ee07379df in memory
flw f26, 0(x2) # load 0x2c22537ee07379df from memory into f26
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f8, 0(x2) # load 0x80000001 from memory into f8
fmsub.s f19, f5, f26, f8, dyn # perform operation
fmsub.s f19, f5, f26, f8, rdn # perform operation
fmsub.s f19, f5, f26, f8, rmm # perform operation
fmsub.s f19, f5, f26, f8, rne # perform operation
fmsub.s f19, f5, f26, f8, rtz # perform operation
fmsub.s f19, f5, f26, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f19, f5, f26, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f19, f5, f26, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f19, f5, f26, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f19, f5, f26, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f19, f5, f26, f8 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0x7f800000)
li x5, 0xf1da470594728989 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f6, 0(x2) # load 0x40000000 from memory into f6
li x3, 0x3d065e3a43b419d3 # load x3 with value 0x3d065e3a43b419d3
sw x3, 0(x2) # store 0x3d065e3a43b419d3 in memory
flw f10, 0(x2) # load 0x3d065e3a43b419d3 from memory into f10
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f12, 0(x2) # load 0x7f800000 from memory into f12
fmsub.s f5, f6, f10, f12, dyn # perform operation
fmsub.s f5, f6, f10, f12, rdn # perform operation
fmsub.s f5, f6, f10, f12, rmm # perform operation
fmsub.s f5, f6, f10, f12, rne # perform operation
fmsub.s f5, f6, f10, f12, rtz # perform operation
fmsub.s f5, f6, f10, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f5, f6, f10, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f5, f6, f10, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f5, f6, f10, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f5, f6, f10, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f5, f6, f10, f12 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0xff800000)
li x23, 0x6f6ee8e2dd8474b9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f30, 0(x2) # load 0x40000000 from memory into f30
li x3, 0xfd0d3e91180499c9 # load x3 with value 0xfd0d3e91180499c9
sw x3, 0(x2) # store 0xfd0d3e91180499c9 in memory
flw f29, 0(x2) # load 0xfd0d3e91180499c9 from memory into f29
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f22, 0(x2) # load 0xff800000 from memory into f22
fmsub.s f23, f30, f29, f22, dyn # perform operation
fmsub.s f23, f30, f29, f22, rdn # perform operation
fmsub.s f23, f30, f29, f22, rmm # perform operation
fmsub.s f23, f30, f29, f22, rne # perform operation
fmsub.s f23, f30, f29, f22, rtz # perform operation
fmsub.s f23, f30, f29, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f23, f30, f29, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f23, f30, f29, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f23, f30, f29, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f23, f30, f29, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f23, f30, f29, f22 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0x7fc00000)
li x11, 0x7a19b125c2ff23cc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f16, 0(x2) # load 0x40000000 from memory into f16
li x3, 0xd3f12176a984dff6 # load x3 with value 0xd3f12176a984dff6
sw x3, 0(x2) # store 0xd3f12176a984dff6 in memory
flw f22, 0(x2) # load 0xd3f12176a984dff6 from memory into f22
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f13, 0(x2) # load 0x7fc00000 from memory into f13
fmsub.s f11, f16, f22, f13, dyn # perform operation
fmsub.s f11, f16, f22, f13, rdn # perform operation
fmsub.s f11, f16, f22, f13, rmm # perform operation
fmsub.s f11, f16, f22, f13, rne # perform operation
fmsub.s f11, f16, f22, f13, rtz # perform operation
fmsub.s f11, f16, f22, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f11, f16, f22, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f11, f16, f22, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f11, f16, f22, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f11, f16, f22, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f11, f16, f22, f13 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0x7fffffff)
li x26, 0x4c718f483a742de8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f8, 0(x2) # load 0x40000000 from memory into f8
li x3, 0xf2943d386f47bd86 # load x3 with value 0xf2943d386f47bd86
sw x3, 0(x2) # store 0xf2943d386f47bd86 in memory
flw f29, 0(x2) # load 0xf2943d386f47bd86 from memory into f29
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f9, 0(x2) # load 0x7fffffff from memory into f9
fmsub.s f26, f8, f29, f9, dyn # perform operation
fmsub.s f26, f8, f29, f9, rdn # perform operation
fmsub.s f26, f8, f29, f9, rmm # perform operation
fmsub.s f26, f8, f29, f9, rne # perform operation
fmsub.s f26, f8, f29, f9, rtz # perform operation
fmsub.s f26, f8, f29, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f26, f8, f29, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f26, f8, f29, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f26, f8, f29, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f26, f8, f29, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f26, f8, f29, f9 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0x7f800001)
li x2, 0x2e0211c3c5464ac1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f8, 0(x2) # load 0x40000000 from memory into f8
li x3, 0x8317f81f60044d36 # load x3 with value 0x8317f81f60044d36
sw x3, 0(x2) # store 0x8317f81f60044d36 in memory
flw f1, 0(x2) # load 0x8317f81f60044d36 from memory into f1
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f6, 0(x2) # load 0x7f800001 from memory into f6
fmsub.s f2, f8, f1, f6, dyn # perform operation
fmsub.s f2, f8, f1, f6, rdn # perform operation
fmsub.s f2, f8, f1, f6, rmm # perform operation
fmsub.s f2, f8, f1, f6, rne # perform operation
fmsub.s f2, f8, f1, f6, rtz # perform operation
fmsub.s f2, f8, f1, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f2, f8, f1, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f2, f8, f1, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f2, f8, f1, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f2, f8, f1, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f2, f8, f1, f6 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0x7fbfffff)
li x26, 0xbe6952340a27f7f0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f3, 0(x2) # load 0x40000000 from memory into f3
li x3, 0x7f90b7f98cebf77a # load x3 with value 0x7f90b7f98cebf77a
sw x3, 0(x2) # store 0x7f90b7f98cebf77a in memory
flw f10, 0(x2) # load 0x7f90b7f98cebf77a from memory into f10
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f23, 0(x2) # load 0x7fbfffff from memory into f23
fmsub.s f26, f3, f10, f23, dyn # perform operation
fmsub.s f26, f3, f10, f23, rdn # perform operation
fmsub.s f26, f3, f10, f23, rmm # perform operation
fmsub.s f26, f3, f10, f23, rne # perform operation
fmsub.s f26, f3, f10, f23, rtz # perform operation
fmsub.s f26, f3, f10, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f26, f3, f10, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f26, f3, f10, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f26, f3, f10, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f26, f3, f10, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f26, f3, f10, f23 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0x7ef8654f)
li x8, 0x7b1ae000709b1b11 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f13, 0(x2) # load 0x40000000 from memory into f13
li x3, 0xdaba95ee9cc15772 # load x3 with value 0xdaba95ee9cc15772
sw x3, 0(x2) # store 0xdaba95ee9cc15772 in memory
flw f23, 0(x2) # load 0xdaba95ee9cc15772 from memory into f23
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f29, 0(x2) # load 0x7ef8654f from memory into f29
fmsub.s f8, f13, f23, f29, dyn # perform operation
fmsub.s f8, f13, f23, f29, rdn # perform operation
fmsub.s f8, f13, f23, f29, rmm # perform operation
fmsub.s f8, f13, f23, f29, rne # perform operation
fmsub.s f8, f13, f23, f29, rtz # perform operation
fmsub.s f8, f13, f23, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f8, f13, f23, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f8, f13, f23, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f8, f13, f23, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f8, f13, f23, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f8, f13, f23, f29 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0x813d9ab0)
li x11, 0x9dc3ad85270cd4c4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f15, 0(x2) # load 0x40000000 from memory into f15
li x3, 0x8e6f755e637c4e84 # load x3 with value 0x8e6f755e637c4e84
sw x3, 0(x2) # store 0x8e6f755e637c4e84 in memory
flw f1, 0(x2) # load 0x8e6f755e637c4e84 from memory into f1
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f22, 0(x2) # load 0x813d9ab0 from memory into f22
fmsub.s f11, f15, f1, f22, dyn # perform operation
fmsub.s f11, f15, f1, f22, rdn # perform operation
fmsub.s f11, f15, f1, f22, rmm # perform operation
fmsub.s f11, f15, f1, f22, rne # perform operation
fmsub.s f11, f15, f1, f22, rtz # perform operation
fmsub.s f11, f15, f1, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f11, f15, f1, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f11, f15, f1, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f11, f15, f1, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f11, f15, f1, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f11, f15, f1, f22 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0x0)
li x22, 0x7d4b2fcbd46c2a38 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f14, 0(x2) # load 0xc0000000 from memory into f14
li x3, 0xe3057c52fe8b6af7 # load x3 with value 0xe3057c52fe8b6af7
sw x3, 0(x2) # store 0xe3057c52fe8b6af7 in memory
flw f30, 0(x2) # load 0xe3057c52fe8b6af7 from memory into f30
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f1, 0(x2) # load 0x00000000 from memory into f1
fmsub.s f22, f14, f30, f1, dyn # perform operation
fmsub.s f22, f14, f30, f1, rdn # perform operation
fmsub.s f22, f14, f30, f1, rmm # perform operation
fmsub.s f22, f14, f30, f1, rne # perform operation
fmsub.s f22, f14, f30, f1, rtz # perform operation
fmsub.s f22, f14, f30, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f22, f14, f30, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f22, f14, f30, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f22, f14, f30, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f22, f14, f30, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f22, f14, f30, f1 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0x80000000)
li x28, 0x4cc6dfb8863a1d29 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f26, 0(x2) # load 0xc0000000 from memory into f26
li x3, 0x60d0910859ae41f2 # load x3 with value 0x60d0910859ae41f2
sw x3, 0(x2) # store 0x60d0910859ae41f2 in memory
flw f20, 0(x2) # load 0x60d0910859ae41f2 from memory into f20
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f5, 0(x2) # load 0x80000000 from memory into f5
fmsub.s f28, f26, f20, f5, dyn # perform operation
fmsub.s f28, f26, f20, f5, rdn # perform operation
fmsub.s f28, f26, f20, f5, rmm # perform operation
fmsub.s f28, f26, f20, f5, rne # perform operation
fmsub.s f28, f26, f20, f5, rtz # perform operation
fmsub.s f28, f26, f20, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f28, f26, f20, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f28, f26, f20, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f28, f26, f20, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f28, f26, f20, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f28, f26, f20, f5 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0x3f800000)
li x26, 0xc95db69686163dc8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f7, 0(x2) # load 0xc0000000 from memory into f7
li x3, 0x2eebf8a56d50730b # load x3 with value 0x2eebf8a56d50730b
sw x3, 0(x2) # store 0x2eebf8a56d50730b in memory
flw f11, 0(x2) # load 0x2eebf8a56d50730b from memory into f11
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f17, 0(x2) # load 0x3f800000 from memory into f17
fmsub.s f26, f7, f11, f17, dyn # perform operation
fmsub.s f26, f7, f11, f17, rdn # perform operation
fmsub.s f26, f7, f11, f17, rmm # perform operation
fmsub.s f26, f7, f11, f17, rne # perform operation
fmsub.s f26, f7, f11, f17, rtz # perform operation
fmsub.s f26, f7, f11, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f26, f7, f11, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f26, f7, f11, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f26, f7, f11, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f26, f7, f11, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f26, f7, f11, f17 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0xbf800000)
li x26, 0xc8f7b150f90e6ada # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f18, 0(x2) # load 0xc0000000 from memory into f18
li x3, 0x6fe433a692ba797f # load x3 with value 0x6fe433a692ba797f
sw x3, 0(x2) # store 0x6fe433a692ba797f in memory
flw f5, 0(x2) # load 0x6fe433a692ba797f from memory into f5
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f19, 0(x2) # load 0xbf800000 from memory into f19
fmsub.s f26, f18, f5, f19, dyn # perform operation
fmsub.s f26, f18, f5, f19, rdn # perform operation
fmsub.s f26, f18, f5, f19, rmm # perform operation
fmsub.s f26, f18, f5, f19, rne # perform operation
fmsub.s f26, f18, f5, f19, rtz # perform operation
fmsub.s f26, f18, f5, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f26, f18, f5, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f26, f18, f5, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f26, f18, f5, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f26, f18, f5, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f26, f18, f5, f19 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0x3fc00000)
li x31, 0x5ae61a0dd64b8235 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f3, 0(x2) # load 0xc0000000 from memory into f3
li x3, 0xf31d333d6a9e2b6e # load x3 with value 0xf31d333d6a9e2b6e
sw x3, 0(x2) # store 0xf31d333d6a9e2b6e in memory
flw f27, 0(x2) # load 0xf31d333d6a9e2b6e from memory into f27
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f23, 0(x2) # load 0x3fc00000 from memory into f23
fmsub.s f31, f3, f27, f23, dyn # perform operation
fmsub.s f31, f3, f27, f23, rdn # perform operation
fmsub.s f31, f3, f27, f23, rmm # perform operation
fmsub.s f31, f3, f27, f23, rne # perform operation
fmsub.s f31, f3, f27, f23, rtz # perform operation
fmsub.s f31, f3, f27, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f31, f3, f27, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f31, f3, f27, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f31, f3, f27, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f31, f3, f27, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f31, f3, f27, f23 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0xbfc00000)
li x9, 0x3c493cc8d86572f3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f10, 0(x2) # load 0xc0000000 from memory into f10
li x3, 0x7fbbf96b32a1c222 # load x3 with value 0x7fbbf96b32a1c222
sw x3, 0(x2) # store 0x7fbbf96b32a1c222 in memory
flw f6, 0(x2) # load 0x7fbbf96b32a1c222 from memory into f6
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f8, 0(x2) # load 0xbfc00000 from memory into f8
fmsub.s f9, f10, f6, f8, dyn # perform operation
fmsub.s f9, f10, f6, f8, rdn # perform operation
fmsub.s f9, f10, f6, f8, rmm # perform operation
fmsub.s f9, f10, f6, f8, rne # perform operation
fmsub.s f9, f10, f6, f8, rtz # perform operation
fmsub.s f9, f10, f6, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f9, f10, f6, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f9, f10, f6, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f9, f10, f6, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f9, f10, f6, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f9, f10, f6, f8 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0x40000000)
li x4, 0xf188ed4c046479a5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f11, 0(x2) # load 0xc0000000 from memory into f11
li x3, 0x717b8a074dde348e # load x3 with value 0x717b8a074dde348e
sw x3, 0(x2) # store 0x717b8a074dde348e in memory
flw f17, 0(x2) # load 0x717b8a074dde348e from memory into f17
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f16, 0(x2) # load 0x40000000 from memory into f16
fmsub.s f4, f11, f17, f16, dyn # perform operation
fmsub.s f4, f11, f17, f16, rdn # perform operation
fmsub.s f4, f11, f17, f16, rmm # perform operation
fmsub.s f4, f11, f17, f16, rne # perform operation
fmsub.s f4, f11, f17, f16, rtz # perform operation
fmsub.s f4, f11, f17, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f4, f11, f17, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f4, f11, f17, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f4, f11, f17, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f4, f11, f17, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f4, f11, f17, f16 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0xc0000000)
li x8, 0x67aabd1b82e4e52a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f25, 0(x2) # load 0xc0000000 from memory into f25
li x3, 0xc46c9261e7fac165 # load x3 with value 0xc46c9261e7fac165
sw x3, 0(x2) # store 0xc46c9261e7fac165 in memory
flw f16, 0(x2) # load 0xc46c9261e7fac165 from memory into f16
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f23, 0(x2) # load 0xc0000000 from memory into f23
fmsub.s f8, f25, f16, f23, dyn # perform operation
fmsub.s f8, f25, f16, f23, rdn # perform operation
fmsub.s f8, f25, f16, f23, rmm # perform operation
fmsub.s f8, f25, f16, f23, rne # perform operation
fmsub.s f8, f25, f16, f23, rtz # perform operation
fmsub.s f8, f25, f16, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f8, f25, f16, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f8, f25, f16, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f8, f25, f16, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f8, f25, f16, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f8, f25, f16, f23 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0x800000)
li x15, 0xb868604d4006b3ad # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f14, 0(x2) # load 0xc0000000 from memory into f14
li x3, 0xa2072bf9ecb18db9 # load x3 with value 0xa2072bf9ecb18db9
sw x3, 0(x2) # store 0xa2072bf9ecb18db9 in memory
flw f30, 0(x2) # load 0xa2072bf9ecb18db9 from memory into f30
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f7, 0(x2) # load 0x00800000 from memory into f7
fmsub.s f15, f14, f30, f7, dyn # perform operation
fmsub.s f15, f14, f30, f7, rdn # perform operation
fmsub.s f15, f14, f30, f7, rmm # perform operation
fmsub.s f15, f14, f30, f7, rne # perform operation
fmsub.s f15, f14, f30, f7, rtz # perform operation
fmsub.s f15, f14, f30, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f15, f14, f30, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f15, f14, f30, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f15, f14, f30, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f15, f14, f30, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f15, f14, f30, f7 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0x80800000)
li x26, 0xcf4abe170efbfd63 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f11, 0(x2) # load 0xc0000000 from memory into f11
li x3, 0x3b5044e5f9287099 # load x3 with value 0x3b5044e5f9287099
sw x3, 0(x2) # store 0x3b5044e5f9287099 in memory
flw f25, 0(x2) # load 0x3b5044e5f9287099 from memory into f25
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f1, 0(x2) # load 0x80800000 from memory into f1
fmsub.s f26, f11, f25, f1, dyn # perform operation
fmsub.s f26, f11, f25, f1, rdn # perform operation
fmsub.s f26, f11, f25, f1, rmm # perform operation
fmsub.s f26, f11, f25, f1, rne # perform operation
fmsub.s f26, f11, f25, f1, rtz # perform operation
fmsub.s f26, f11, f25, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f26, f11, f25, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f26, f11, f25, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f26, f11, f25, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f26, f11, f25, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f26, f11, f25, f1 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0x7f7fffff)
li x8, 0x897cabe31dbe8907 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f29, 0(x2) # load 0xc0000000 from memory into f29
li x3, 0x20d26769f29074eb # load x3 with value 0x20d26769f29074eb
sw x3, 0(x2) # store 0x20d26769f29074eb in memory
flw f6, 0(x2) # load 0x20d26769f29074eb from memory into f6
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f20, 0(x2) # load 0x7f7fffff from memory into f20
fmsub.s f8, f29, f6, f20, dyn # perform operation
fmsub.s f8, f29, f6, f20, rdn # perform operation
fmsub.s f8, f29, f6, f20, rmm # perform operation
fmsub.s f8, f29, f6, f20, rne # perform operation
fmsub.s f8, f29, f6, f20, rtz # perform operation
fmsub.s f8, f29, f6, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f8, f29, f6, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f8, f29, f6, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f8, f29, f6, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f8, f29, f6, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f8, f29, f6, f20 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0xff7fffff)
li x21, 0xcf1e2a45dc0474cb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f26, 0(x2) # load 0xc0000000 from memory into f26
li x3, 0x52f3821977756a2d # load x3 with value 0x52f3821977756a2d
sw x3, 0(x2) # store 0x52f3821977756a2d in memory
flw f25, 0(x2) # load 0x52f3821977756a2d from memory into f25
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f29, 0(x2) # load 0xff7fffff from memory into f29
fmsub.s f21, f26, f25, f29, dyn # perform operation
fmsub.s f21, f26, f25, f29, rdn # perform operation
fmsub.s f21, f26, f25, f29, rmm # perform operation
fmsub.s f21, f26, f25, f29, rne # perform operation
fmsub.s f21, f26, f25, f29, rtz # perform operation
fmsub.s f21, f26, f25, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f21, f26, f25, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f21, f26, f25, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f21, f26, f25, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f21, f26, f25, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f21, f26, f25, f29 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0x7fffff)
li x23, 0x8b256b5ac64b4207 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f3, 0(x2) # load 0xc0000000 from memory into f3
li x3, 0x474ef7a78b7b1df # load x3 with value 0x474ef7a78b7b1df
sw x3, 0(x2) # store 0x474ef7a78b7b1df in memory
flw f21, 0(x2) # load 0x474ef7a78b7b1df from memory into f21
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f17, 0(x2) # load 0x007fffff from memory into f17
fmsub.s f23, f3, f21, f17, dyn # perform operation
fmsub.s f23, f3, f21, f17, rdn # perform operation
fmsub.s f23, f3, f21, f17, rmm # perform operation
fmsub.s f23, f3, f21, f17, rne # perform operation
fmsub.s f23, f3, f21, f17, rtz # perform operation
fmsub.s f23, f3, f21, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f23, f3, f21, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f23, f3, f21, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f23, f3, f21, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f23, f3, f21, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f23, f3, f21, f17 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0x807fffff)
li x27, 0x9800a8c8a3bd541c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f14, 0(x2) # load 0xc0000000 from memory into f14
li x3, 0x4ad13aa80f93591f # load x3 with value 0x4ad13aa80f93591f
sw x3, 0(x2) # store 0x4ad13aa80f93591f in memory
flw f11, 0(x2) # load 0x4ad13aa80f93591f from memory into f11
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f30, 0(x2) # load 0x807fffff from memory into f30
fmsub.s f27, f14, f11, f30, dyn # perform operation
fmsub.s f27, f14, f11, f30, rdn # perform operation
fmsub.s f27, f14, f11, f30, rmm # perform operation
fmsub.s f27, f14, f11, f30, rne # perform operation
fmsub.s f27, f14, f11, f30, rtz # perform operation
fmsub.s f27, f14, f11, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f27, f14, f11, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f27, f14, f11, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f27, f14, f11, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f27, f14, f11, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f27, f14, f11, f30 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0x400000)
li x4, 0x3b8eb8f1b2d2a418 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f12, 0(x2) # load 0xc0000000 from memory into f12
li x3, 0x7e9531af631bb77e # load x3 with value 0x7e9531af631bb77e
sw x3, 0(x2) # store 0x7e9531af631bb77e in memory
flw f18, 0(x2) # load 0x7e9531af631bb77e from memory into f18
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f10, 0(x2) # load 0x00400000 from memory into f10
fmsub.s f4, f12, f18, f10, dyn # perform operation
fmsub.s f4, f12, f18, f10, rdn # perform operation
fmsub.s f4, f12, f18, f10, rmm # perform operation
fmsub.s f4, f12, f18, f10, rne # perform operation
fmsub.s f4, f12, f18, f10, rtz # perform operation
fmsub.s f4, f12, f18, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f4, f12, f18, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f4, f12, f18, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f4, f12, f18, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f4, f12, f18, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f4, f12, f18, f10 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0x80400000)
li x29, 0xc733e4c3b4d7aeb9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f15, 0(x2) # load 0xc0000000 from memory into f15
li x3, 0x3722cc4c6c92b169 # load x3 with value 0x3722cc4c6c92b169
sw x3, 0(x2) # store 0x3722cc4c6c92b169 in memory
flw f4, 0(x2) # load 0x3722cc4c6c92b169 from memory into f4
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f11, 0(x2) # load 0x80400000 from memory into f11
fmsub.s f29, f15, f4, f11, dyn # perform operation
fmsub.s f29, f15, f4, f11, rdn # perform operation
fmsub.s f29, f15, f4, f11, rmm # perform operation
fmsub.s f29, f15, f4, f11, rne # perform operation
fmsub.s f29, f15, f4, f11, rtz # perform operation
fmsub.s f29, f15, f4, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f29, f15, f4, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f29, f15, f4, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f29, f15, f4, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f29, f15, f4, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f29, f15, f4, f11 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0x1)
li x18, 0x150f976f4dfaf7da # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f31, 0(x2) # load 0xc0000000 from memory into f31
li x3, 0x185612c8a06d9bce # load x3 with value 0x185612c8a06d9bce
sw x3, 0(x2) # store 0x185612c8a06d9bce in memory
flw f4, 0(x2) # load 0x185612c8a06d9bce from memory into f4
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f8, 0(x2) # load 0x00000001 from memory into f8
fmsub.s f18, f31, f4, f8, dyn # perform operation
fmsub.s f18, f31, f4, f8, rdn # perform operation
fmsub.s f18, f31, f4, f8, rmm # perform operation
fmsub.s f18, f31, f4, f8, rne # perform operation
fmsub.s f18, f31, f4, f8, rtz # perform operation
fmsub.s f18, f31, f4, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f18, f31, f4, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f18, f31, f4, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f18, f31, f4, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f18, f31, f4, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f18, f31, f4, f8 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0x80000001)
li x29, 0x7e175b316ec38c23 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f19, 0(x2) # load 0xc0000000 from memory into f19
li x3, 0xf34b5abf83997bed # load x3 with value 0xf34b5abf83997bed
sw x3, 0(x2) # store 0xf34b5abf83997bed in memory
flw f11, 0(x2) # load 0xf34b5abf83997bed from memory into f11
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f20, 0(x2) # load 0x80000001 from memory into f20
fmsub.s f29, f19, f11, f20, dyn # perform operation
fmsub.s f29, f19, f11, f20, rdn # perform operation
fmsub.s f29, f19, f11, f20, rmm # perform operation
fmsub.s f29, f19, f11, f20, rne # perform operation
fmsub.s f29, f19, f11, f20, rtz # perform operation
fmsub.s f29, f19, f11, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f29, f19, f11, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f29, f19, f11, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f29, f19, f11, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f29, f19, f11, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f29, f19, f11, f20 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0x7f800000)
li x28, 0xb717c1a57521aa8c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f24, 0(x2) # load 0xc0000000 from memory into f24
li x3, 0xed9824c2057c49b2 # load x3 with value 0xed9824c2057c49b2
sw x3, 0(x2) # store 0xed9824c2057c49b2 in memory
flw f15, 0(x2) # load 0xed9824c2057c49b2 from memory into f15
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f22, 0(x2) # load 0x7f800000 from memory into f22
fmsub.s f28, f24, f15, f22, dyn # perform operation
fmsub.s f28, f24, f15, f22, rdn # perform operation
fmsub.s f28, f24, f15, f22, rmm # perform operation
fmsub.s f28, f24, f15, f22, rne # perform operation
fmsub.s f28, f24, f15, f22, rtz # perform operation
fmsub.s f28, f24, f15, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f28, f24, f15, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f28, f24, f15, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f28, f24, f15, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f28, f24, f15, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f28, f24, f15, f22 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0xff800000)
li x25, 0xa7e06e544522827f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f10, 0(x2) # load 0xc0000000 from memory into f10
li x3, 0xec63eb2c16af65f0 # load x3 with value 0xec63eb2c16af65f0
sw x3, 0(x2) # store 0xec63eb2c16af65f0 in memory
flw f28, 0(x2) # load 0xec63eb2c16af65f0 from memory into f28
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f19, 0(x2) # load 0xff800000 from memory into f19
fmsub.s f25, f10, f28, f19, dyn # perform operation
fmsub.s f25, f10, f28, f19, rdn # perform operation
fmsub.s f25, f10, f28, f19, rmm # perform operation
fmsub.s f25, f10, f28, f19, rne # perform operation
fmsub.s f25, f10, f28, f19, rtz # perform operation
fmsub.s f25, f10, f28, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f25, f10, f28, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f25, f10, f28, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f25, f10, f28, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f25, f10, f28, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f25, f10, f28, f19 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0x7fc00000)
li x25, 0x48a28ff2e242d0d5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f2, 0(x2) # load 0xc0000000 from memory into f2
li x3, 0x46d9e6b6bea2c789 # load x3 with value 0x46d9e6b6bea2c789
sw x3, 0(x2) # store 0x46d9e6b6bea2c789 in memory
flw f29, 0(x2) # load 0x46d9e6b6bea2c789 from memory into f29
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f18, 0(x2) # load 0x7fc00000 from memory into f18
fmsub.s f25, f2, f29, f18, dyn # perform operation
fmsub.s f25, f2, f29, f18, rdn # perform operation
fmsub.s f25, f2, f29, f18, rmm # perform operation
fmsub.s f25, f2, f29, f18, rne # perform operation
fmsub.s f25, f2, f29, f18, rtz # perform operation
fmsub.s f25, f2, f29, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f25, f2, f29, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f25, f2, f29, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f25, f2, f29, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f25, f2, f29, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f25, f2, f29, f18 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0x7fffffff)
li x11, 0x4b1e328bb15ee436 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f14, 0(x2) # load 0xc0000000 from memory into f14
li x3, 0x4d338482a6b364ac # load x3 with value 0x4d338482a6b364ac
sw x3, 0(x2) # store 0x4d338482a6b364ac in memory
flw f31, 0(x2) # load 0x4d338482a6b364ac from memory into f31
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f13, 0(x2) # load 0x7fffffff from memory into f13
fmsub.s f11, f14, f31, f13, dyn # perform operation
fmsub.s f11, f14, f31, f13, rdn # perform operation
fmsub.s f11, f14, f31, f13, rmm # perform operation
fmsub.s f11, f14, f31, f13, rne # perform operation
fmsub.s f11, f14, f31, f13, rtz # perform operation
fmsub.s f11, f14, f31, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f11, f14, f31, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f11, f14, f31, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f11, f14, f31, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f11, f14, f31, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f11, f14, f31, f13 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0x7f800001)
li x31, 0xf076c386862449a1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f15, 0(x2) # load 0xc0000000 from memory into f15
li x3, 0x39128d1ac728c18 # load x3 with value 0x39128d1ac728c18
sw x3, 0(x2) # store 0x39128d1ac728c18 in memory
flw f12, 0(x2) # load 0x39128d1ac728c18 from memory into f12
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f16, 0(x2) # load 0x7f800001 from memory into f16
fmsub.s f31, f15, f12, f16, dyn # perform operation
fmsub.s f31, f15, f12, f16, rdn # perform operation
fmsub.s f31, f15, f12, f16, rmm # perform operation
fmsub.s f31, f15, f12, f16, rne # perform operation
fmsub.s f31, f15, f12, f16, rtz # perform operation
fmsub.s f31, f15, f12, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f31, f15, f12, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f31, f15, f12, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f31, f15, f12, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f31, f15, f12, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f31, f15, f12, f16 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0x7fbfffff)
li x9, 0xfdb5a1bdadbd4f2f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f26, 0(x2) # load 0xc0000000 from memory into f26
li x3, 0xc1777314a625104d # load x3 with value 0xc1777314a625104d
sw x3, 0(x2) # store 0xc1777314a625104d in memory
flw f11, 0(x2) # load 0xc1777314a625104d from memory into f11
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f10, 0(x2) # load 0x7fbfffff from memory into f10
fmsub.s f9, f26, f11, f10, dyn # perform operation
fmsub.s f9, f26, f11, f10, rdn # perform operation
fmsub.s f9, f26, f11, f10, rmm # perform operation
fmsub.s f9, f26, f11, f10, rne # perform operation
fmsub.s f9, f26, f11, f10, rtz # perform operation
fmsub.s f9, f26, f11, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f9, f26, f11, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f9, f26, f11, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f9, f26, f11, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f9, f26, f11, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f9, f26, f11, f10 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0x7ef8654f)
li x14, 0xe0d39ad868396479 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f7, 0(x2) # load 0xc0000000 from memory into f7
li x3, 0x349700322fdecb09 # load x3 with value 0x349700322fdecb09
sw x3, 0(x2) # store 0x349700322fdecb09 in memory
flw f26, 0(x2) # load 0x349700322fdecb09 from memory into f26
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f13, 0(x2) # load 0x7ef8654f from memory into f13
fmsub.s f14, f7, f26, f13, dyn # perform operation
fmsub.s f14, f7, f26, f13, rdn # perform operation
fmsub.s f14, f7, f26, f13, rmm # perform operation
fmsub.s f14, f7, f26, f13, rne # perform operation
fmsub.s f14, f7, f26, f13, rtz # perform operation
fmsub.s f14, f7, f26, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f14, f7, f26, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f14, f7, f26, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f14, f7, f26, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f14, f7, f26, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f14, f7, f26, f13 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0x813d9ab0)
li x5, 0xa9c46070bb4d7797 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f11, 0(x2) # load 0xc0000000 from memory into f11
li x3, 0x370f34e654294ce5 # load x3 with value 0x370f34e654294ce5
sw x3, 0(x2) # store 0x370f34e654294ce5 in memory
flw f13, 0(x2) # load 0x370f34e654294ce5 from memory into f13
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f1, 0(x2) # load 0x813d9ab0 from memory into f1
fmsub.s f5, f11, f13, f1, dyn # perform operation
fmsub.s f5, f11, f13, f1, rdn # perform operation
fmsub.s f5, f11, f13, f1, rmm # perform operation
fmsub.s f5, f11, f13, f1, rne # perform operation
fmsub.s f5, f11, f13, f1, rtz # perform operation
fmsub.s f5, f11, f13, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f5, f11, f13, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f5, f11, f13, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f5, f11, f13, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f5, f11, f13, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f5, f11, f13, f1 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0x0)
li x23, 0xf39ecfca91a455ce # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f2, 0(x2) # load 0x00800000 from memory into f2
li x3, 0xdbdea439ef2979a7 # load x3 with value 0xdbdea439ef2979a7
sw x3, 0(x2) # store 0xdbdea439ef2979a7 in memory
flw f17, 0(x2) # load 0xdbdea439ef2979a7 from memory into f17
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f9, 0(x2) # load 0x00000000 from memory into f9
fmsub.s f23, f2, f17, f9, dyn # perform operation
fmsub.s f23, f2, f17, f9, rdn # perform operation
fmsub.s f23, f2, f17, f9, rmm # perform operation
fmsub.s f23, f2, f17, f9, rne # perform operation
fmsub.s f23, f2, f17, f9, rtz # perform operation
fmsub.s f23, f2, f17, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f23, f2, f17, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f23, f2, f17, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f23, f2, f17, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f23, f2, f17, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f23, f2, f17, f9 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0x80000000)
li x21, 0x0419f9512d57d5fc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f12, 0(x2) # load 0x00800000 from memory into f12
li x3, 0x6e5809b84003ca19 # load x3 with value 0x6e5809b84003ca19
sw x3, 0(x2) # store 0x6e5809b84003ca19 in memory
flw f7, 0(x2) # load 0x6e5809b84003ca19 from memory into f7
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f9, 0(x2) # load 0x80000000 from memory into f9
fmsub.s f21, f12, f7, f9, dyn # perform operation
fmsub.s f21, f12, f7, f9, rdn # perform operation
fmsub.s f21, f12, f7, f9, rmm # perform operation
fmsub.s f21, f12, f7, f9, rne # perform operation
fmsub.s f21, f12, f7, f9, rtz # perform operation
fmsub.s f21, f12, f7, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f21, f12, f7, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f21, f12, f7, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f21, f12, f7, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f21, f12, f7, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f21, f12, f7, f9 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0x3f800000)
li x14, 0x0018bd40e9ba4ff2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f28, 0(x2) # load 0x00800000 from memory into f28
li x3, 0x8767d8bbae9f39a2 # load x3 with value 0x8767d8bbae9f39a2
sw x3, 0(x2) # store 0x8767d8bbae9f39a2 in memory
flw f9, 0(x2) # load 0x8767d8bbae9f39a2 from memory into f9
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f23, 0(x2) # load 0x3f800000 from memory into f23
fmsub.s f14, f28, f9, f23, dyn # perform operation
fmsub.s f14, f28, f9, f23, rdn # perform operation
fmsub.s f14, f28, f9, f23, rmm # perform operation
fmsub.s f14, f28, f9, f23, rne # perform operation
fmsub.s f14, f28, f9, f23, rtz # perform operation
fmsub.s f14, f28, f9, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f14, f28, f9, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f14, f28, f9, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f14, f28, f9, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f14, f28, f9, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f14, f28, f9, f23 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0xbf800000)
li x28, 0x5acd3ea10fc6eccb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f1, 0(x2) # load 0x00800000 from memory into f1
li x3, 0xc15424a9539180c3 # load x3 with value 0xc15424a9539180c3
sw x3, 0(x2) # store 0xc15424a9539180c3 in memory
flw f24, 0(x2) # load 0xc15424a9539180c3 from memory into f24
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f16, 0(x2) # load 0xbf800000 from memory into f16
fmsub.s f28, f1, f24, f16, dyn # perform operation
fmsub.s f28, f1, f24, f16, rdn # perform operation
fmsub.s f28, f1, f24, f16, rmm # perform operation
fmsub.s f28, f1, f24, f16, rne # perform operation
fmsub.s f28, f1, f24, f16, rtz # perform operation
fmsub.s f28, f1, f24, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f28, f1, f24, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f28, f1, f24, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f28, f1, f24, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f28, f1, f24, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f28, f1, f24, f16 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0x3fc00000)
li x5, 0xe37bd9585bb1c088 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f27, 0(x2) # load 0x00800000 from memory into f27
li x3, 0xf115114eb11d69aa # load x3 with value 0xf115114eb11d69aa
sw x3, 0(x2) # store 0xf115114eb11d69aa in memory
flw f6, 0(x2) # load 0xf115114eb11d69aa from memory into f6
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f3, 0(x2) # load 0x3fc00000 from memory into f3
fmsub.s f5, f27, f6, f3, dyn # perform operation
fmsub.s f5, f27, f6, f3, rdn # perform operation
fmsub.s f5, f27, f6, f3, rmm # perform operation
fmsub.s f5, f27, f6, f3, rne # perform operation
fmsub.s f5, f27, f6, f3, rtz # perform operation
fmsub.s f5, f27, f6, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f5, f27, f6, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f5, f27, f6, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f5, f27, f6, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f5, f27, f6, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f5, f27, f6, f3 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0xbfc00000)
li x17, 0xef10b610e09c6231 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f1, 0(x2) # load 0x00800000 from memory into f1
li x3, 0xf8379360e2743736 # load x3 with value 0xf8379360e2743736
sw x3, 0(x2) # store 0xf8379360e2743736 in memory
flw f11, 0(x2) # load 0xf8379360e2743736 from memory into f11
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f6, 0(x2) # load 0xbfc00000 from memory into f6
fmsub.s f17, f1, f11, f6, dyn # perform operation
fmsub.s f17, f1, f11, f6, rdn # perform operation
fmsub.s f17, f1, f11, f6, rmm # perform operation
fmsub.s f17, f1, f11, f6, rne # perform operation
fmsub.s f17, f1, f11, f6, rtz # perform operation
fmsub.s f17, f1, f11, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f17, f1, f11, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f17, f1, f11, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f17, f1, f11, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f17, f1, f11, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f17, f1, f11, f6 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0x40000000)
li x7, 0xda487a23dbca289a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f31, 0(x2) # load 0x00800000 from memory into f31
li x3, 0xe323927a5d181195 # load x3 with value 0xe323927a5d181195
sw x3, 0(x2) # store 0xe323927a5d181195 in memory
flw f15, 0(x2) # load 0xe323927a5d181195 from memory into f15
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f19, 0(x2) # load 0x40000000 from memory into f19
fmsub.s f7, f31, f15, f19, dyn # perform operation
fmsub.s f7, f31, f15, f19, rdn # perform operation
fmsub.s f7, f31, f15, f19, rmm # perform operation
fmsub.s f7, f31, f15, f19, rne # perform operation
fmsub.s f7, f31, f15, f19, rtz # perform operation
fmsub.s f7, f31, f15, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f7, f31, f15, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f7, f31, f15, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f7, f31, f15, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f7, f31, f15, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f7, f31, f15, f19 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0xc0000000)
li x6, 0x85c607c16a912d5e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f30, 0(x2) # load 0x00800000 from memory into f30
li x3, 0xea3101e09eaaa05 # load x3 with value 0xea3101e09eaaa05
sw x3, 0(x2) # store 0xea3101e09eaaa05 in memory
flw f9, 0(x2) # load 0xea3101e09eaaa05 from memory into f9
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f7, 0(x2) # load 0xc0000000 from memory into f7
fmsub.s f6, f30, f9, f7, dyn # perform operation
fmsub.s f6, f30, f9, f7, rdn # perform operation
fmsub.s f6, f30, f9, f7, rmm # perform operation
fmsub.s f6, f30, f9, f7, rne # perform operation
fmsub.s f6, f30, f9, f7, rtz # perform operation
fmsub.s f6, f30, f9, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f6, f30, f9, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f6, f30, f9, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f6, f30, f9, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f6, f30, f9, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f6, f30, f9, f7 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0x800000)
li x13, 0x954b9efef6c0b6cb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f23, 0(x2) # load 0x00800000 from memory into f23
li x3, 0x1ed71ed18a068503 # load x3 with value 0x1ed71ed18a068503
sw x3, 0(x2) # store 0x1ed71ed18a068503 in memory
flw f10, 0(x2) # load 0x1ed71ed18a068503 from memory into f10
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f2, 0(x2) # load 0x00800000 from memory into f2
fmsub.s f13, f23, f10, f2, dyn # perform operation
fmsub.s f13, f23, f10, f2, rdn # perform operation
fmsub.s f13, f23, f10, f2, rmm # perform operation
fmsub.s f13, f23, f10, f2, rne # perform operation
fmsub.s f13, f23, f10, f2, rtz # perform operation
fmsub.s f13, f23, f10, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f13, f23, f10, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f13, f23, f10, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f13, f23, f10, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f13, f23, f10, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f13, f23, f10, f2 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0x80800000)
li x31, 0xa20ff3d720ed15e0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f8, 0(x2) # load 0x00800000 from memory into f8
li x3, 0xb81d1909ae5127a4 # load x3 with value 0xb81d1909ae5127a4
sw x3, 0(x2) # store 0xb81d1909ae5127a4 in memory
flw f4, 0(x2) # load 0xb81d1909ae5127a4 from memory into f4
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f26, 0(x2) # load 0x80800000 from memory into f26
fmsub.s f31, f8, f4, f26, dyn # perform operation
fmsub.s f31, f8, f4, f26, rdn # perform operation
fmsub.s f31, f8, f4, f26, rmm # perform operation
fmsub.s f31, f8, f4, f26, rne # perform operation
fmsub.s f31, f8, f4, f26, rtz # perform operation
fmsub.s f31, f8, f4, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f31, f8, f4, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f31, f8, f4, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f31, f8, f4, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f31, f8, f4, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f31, f8, f4, f26 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0x7f7fffff)
li x1, 0x060407a6f7cbe11d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f9, 0(x2) # load 0x00800000 from memory into f9
li x3, 0xe93b5377357788aa # load x3 with value 0xe93b5377357788aa
sw x3, 0(x2) # store 0xe93b5377357788aa in memory
flw f14, 0(x2) # load 0xe93b5377357788aa from memory into f14
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f3, 0(x2) # load 0x7f7fffff from memory into f3
fmsub.s f1, f9, f14, f3, dyn # perform operation
fmsub.s f1, f9, f14, f3, rdn # perform operation
fmsub.s f1, f9, f14, f3, rmm # perform operation
fmsub.s f1, f9, f14, f3, rne # perform operation
fmsub.s f1, f9, f14, f3, rtz # perform operation
fmsub.s f1, f9, f14, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f1, f9, f14, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f1, f9, f14, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f1, f9, f14, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f1, f9, f14, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f1, f9, f14, f3 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0xff7fffff)
li x9, 0x467731bdd5e13fc7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f12, 0(x2) # load 0x00800000 from memory into f12
li x3, 0xcf50d15459cfaa8d # load x3 with value 0xcf50d15459cfaa8d
sw x3, 0(x2) # store 0xcf50d15459cfaa8d in memory
flw f11, 0(x2) # load 0xcf50d15459cfaa8d from memory into f11
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f24, 0(x2) # load 0xff7fffff from memory into f24
fmsub.s f9, f12, f11, f24, dyn # perform operation
fmsub.s f9, f12, f11, f24, rdn # perform operation
fmsub.s f9, f12, f11, f24, rmm # perform operation
fmsub.s f9, f12, f11, f24, rne # perform operation
fmsub.s f9, f12, f11, f24, rtz # perform operation
fmsub.s f9, f12, f11, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f9, f12, f11, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f9, f12, f11, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f9, f12, f11, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f9, f12, f11, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f9, f12, f11, f24 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0x7fffff)
li x10, 0x6afe8d8027542e3a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f23, 0(x2) # load 0x00800000 from memory into f23
li x3, 0xb3c9fef2329f26e8 # load x3 with value 0xb3c9fef2329f26e8
sw x3, 0(x2) # store 0xb3c9fef2329f26e8 in memory
flw f14, 0(x2) # load 0xb3c9fef2329f26e8 from memory into f14
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f26, 0(x2) # load 0x007fffff from memory into f26
fmsub.s f10, f23, f14, f26, dyn # perform operation
fmsub.s f10, f23, f14, f26, rdn # perform operation
fmsub.s f10, f23, f14, f26, rmm # perform operation
fmsub.s f10, f23, f14, f26, rne # perform operation
fmsub.s f10, f23, f14, f26, rtz # perform operation
fmsub.s f10, f23, f14, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f10, f23, f14, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f10, f23, f14, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f10, f23, f14, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f10, f23, f14, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f10, f23, f14, f26 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0x807fffff)
li x2, 0x05e2e2b124303501 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f4, 0(x2) # load 0x00800000 from memory into f4
li x3, 0xa8b6d24c8ba33e05 # load x3 with value 0xa8b6d24c8ba33e05
sw x3, 0(x2) # store 0xa8b6d24c8ba33e05 in memory
flw f23, 0(x2) # load 0xa8b6d24c8ba33e05 from memory into f23
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f7, 0(x2) # load 0x807fffff from memory into f7
fmsub.s f2, f4, f23, f7, dyn # perform operation
fmsub.s f2, f4, f23, f7, rdn # perform operation
fmsub.s f2, f4, f23, f7, rmm # perform operation
fmsub.s f2, f4, f23, f7, rne # perform operation
fmsub.s f2, f4, f23, f7, rtz # perform operation
fmsub.s f2, f4, f23, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f2, f4, f23, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f2, f4, f23, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f2, f4, f23, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f2, f4, f23, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f2, f4, f23, f7 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0x400000)
li x24, 0xd3fa8c3e3111d635 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f25, 0(x2) # load 0x00800000 from memory into f25
li x3, 0x2a7d6f49f42bb917 # load x3 with value 0x2a7d6f49f42bb917
sw x3, 0(x2) # store 0x2a7d6f49f42bb917 in memory
flw f30, 0(x2) # load 0x2a7d6f49f42bb917 from memory into f30
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f3, 0(x2) # load 0x00400000 from memory into f3
fmsub.s f24, f25, f30, f3, dyn # perform operation
fmsub.s f24, f25, f30, f3, rdn # perform operation
fmsub.s f24, f25, f30, f3, rmm # perform operation
fmsub.s f24, f25, f30, f3, rne # perform operation
fmsub.s f24, f25, f30, f3, rtz # perform operation
fmsub.s f24, f25, f30, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f24, f25, f30, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f24, f25, f30, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f24, f25, f30, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f24, f25, f30, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f24, f25, f30, f3 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0x80400000)
li x18, 0x355334ec8a997722 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f4, 0(x2) # load 0x00800000 from memory into f4
li x3, 0x8e11451c4c9bb7c3 # load x3 with value 0x8e11451c4c9bb7c3
sw x3, 0(x2) # store 0x8e11451c4c9bb7c3 in memory
flw f11, 0(x2) # load 0x8e11451c4c9bb7c3 from memory into f11
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f17, 0(x2) # load 0x80400000 from memory into f17
fmsub.s f18, f4, f11, f17, dyn # perform operation
fmsub.s f18, f4, f11, f17, rdn # perform operation
fmsub.s f18, f4, f11, f17, rmm # perform operation
fmsub.s f18, f4, f11, f17, rne # perform operation
fmsub.s f18, f4, f11, f17, rtz # perform operation
fmsub.s f18, f4, f11, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f18, f4, f11, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f18, f4, f11, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f18, f4, f11, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f18, f4, f11, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f18, f4, f11, f17 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0x1)
li x26, 0xa2127c02be2f753b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f4, 0(x2) # load 0x00800000 from memory into f4
li x3, 0xccf6765bd2e68cdb # load x3 with value 0xccf6765bd2e68cdb
sw x3, 0(x2) # store 0xccf6765bd2e68cdb in memory
flw f9, 0(x2) # load 0xccf6765bd2e68cdb from memory into f9
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f13, 0(x2) # load 0x00000001 from memory into f13
fmsub.s f26, f4, f9, f13, dyn # perform operation
fmsub.s f26, f4, f9, f13, rdn # perform operation
fmsub.s f26, f4, f9, f13, rmm # perform operation
fmsub.s f26, f4, f9, f13, rne # perform operation
fmsub.s f26, f4, f9, f13, rtz # perform operation
fmsub.s f26, f4, f9, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f26, f4, f9, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f26, f4, f9, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f26, f4, f9, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f26, f4, f9, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f26, f4, f9, f13 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0x80000001)
li x30, 0x60728164185a7069 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f17, 0(x2) # load 0x00800000 from memory into f17
li x3, 0x8912c758afb99e17 # load x3 with value 0x8912c758afb99e17
sw x3, 0(x2) # store 0x8912c758afb99e17 in memory
flw f31, 0(x2) # load 0x8912c758afb99e17 from memory into f31
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f1, 0(x2) # load 0x80000001 from memory into f1
fmsub.s f30, f17, f31, f1, dyn # perform operation
fmsub.s f30, f17, f31, f1, rdn # perform operation
fmsub.s f30, f17, f31, f1, rmm # perform operation
fmsub.s f30, f17, f31, f1, rne # perform operation
fmsub.s f30, f17, f31, f1, rtz # perform operation
fmsub.s f30, f17, f31, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f30, f17, f31, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f30, f17, f31, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f30, f17, f31, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f30, f17, f31, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f30, f17, f31, f1 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0x7f800000)
li x25, 0x4098bbdc2c81eb79 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f13, 0(x2) # load 0x00800000 from memory into f13
li x3, 0x10ace8ac47940762 # load x3 with value 0x10ace8ac47940762
sw x3, 0(x2) # store 0x10ace8ac47940762 in memory
flw f9, 0(x2) # load 0x10ace8ac47940762 from memory into f9
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f6, 0(x2) # load 0x7f800000 from memory into f6
fmsub.s f25, f13, f9, f6, dyn # perform operation
fmsub.s f25, f13, f9, f6, rdn # perform operation
fmsub.s f25, f13, f9, f6, rmm # perform operation
fmsub.s f25, f13, f9, f6, rne # perform operation
fmsub.s f25, f13, f9, f6, rtz # perform operation
fmsub.s f25, f13, f9, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f25, f13, f9, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f25, f13, f9, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f25, f13, f9, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f25, f13, f9, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f25, f13, f9, f6 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0xff800000)
li x8, 0xba6e3a512693403a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f4, 0(x2) # load 0x00800000 from memory into f4
li x3, 0xf5372d8071e3b33d # load x3 with value 0xf5372d8071e3b33d
sw x3, 0(x2) # store 0xf5372d8071e3b33d in memory
flw f18, 0(x2) # load 0xf5372d8071e3b33d from memory into f18
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f16, 0(x2) # load 0xff800000 from memory into f16
fmsub.s f8, f4, f18, f16, dyn # perform operation
fmsub.s f8, f4, f18, f16, rdn # perform operation
fmsub.s f8, f4, f18, f16, rmm # perform operation
fmsub.s f8, f4, f18, f16, rne # perform operation
fmsub.s f8, f4, f18, f16, rtz # perform operation
fmsub.s f8, f4, f18, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f8, f4, f18, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f8, f4, f18, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f8, f4, f18, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f8, f4, f18, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f8, f4, f18, f16 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0x7fc00000)
li x13, 0x58f30f94f732d431 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f29, 0(x2) # load 0x00800000 from memory into f29
li x3, 0xbde346f10c6ba4b2 # load x3 with value 0xbde346f10c6ba4b2
sw x3, 0(x2) # store 0xbde346f10c6ba4b2 in memory
flw f20, 0(x2) # load 0xbde346f10c6ba4b2 from memory into f20
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f19, 0(x2) # load 0x7fc00000 from memory into f19
fmsub.s f13, f29, f20, f19, dyn # perform operation
fmsub.s f13, f29, f20, f19, rdn # perform operation
fmsub.s f13, f29, f20, f19, rmm # perform operation
fmsub.s f13, f29, f20, f19, rne # perform operation
fmsub.s f13, f29, f20, f19, rtz # perform operation
fmsub.s f13, f29, f20, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f13, f29, f20, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f13, f29, f20, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f13, f29, f20, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f13, f29, f20, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f13, f29, f20, f19 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0x7fffffff)
li x4, 0x734a7deac9e2f3ef # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f8, 0(x2) # load 0x00800000 from memory into f8
li x3, 0xad90fa63a70d8bfd # load x3 with value 0xad90fa63a70d8bfd
sw x3, 0(x2) # store 0xad90fa63a70d8bfd in memory
flw f7, 0(x2) # load 0xad90fa63a70d8bfd from memory into f7
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f3, 0(x2) # load 0x7fffffff from memory into f3
fmsub.s f4, f8, f7, f3, dyn # perform operation
fmsub.s f4, f8, f7, f3, rdn # perform operation
fmsub.s f4, f8, f7, f3, rmm # perform operation
fmsub.s f4, f8, f7, f3, rne # perform operation
fmsub.s f4, f8, f7, f3, rtz # perform operation
fmsub.s f4, f8, f7, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f4, f8, f7, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f4, f8, f7, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f4, f8, f7, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f4, f8, f7, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f4, f8, f7, f3 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0x7f800001)
li x8, 0x484067d932d599ff # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f5, 0(x2) # load 0x00800000 from memory into f5
li x3, 0x2ec86dba5a15add1 # load x3 with value 0x2ec86dba5a15add1
sw x3, 0(x2) # store 0x2ec86dba5a15add1 in memory
flw f15, 0(x2) # load 0x2ec86dba5a15add1 from memory into f15
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f20, 0(x2) # load 0x7f800001 from memory into f20
fmsub.s f8, f5, f15, f20, dyn # perform operation
fmsub.s f8, f5, f15, f20, rdn # perform operation
fmsub.s f8, f5, f15, f20, rmm # perform operation
fmsub.s f8, f5, f15, f20, rne # perform operation
fmsub.s f8, f5, f15, f20, rtz # perform operation
fmsub.s f8, f5, f15, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f8, f5, f15, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f8, f5, f15, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f8, f5, f15, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f8, f5, f15, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f8, f5, f15, f20 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0x7fbfffff)
li x26, 0x205b025391ddc7f6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f14, 0(x2) # load 0x00800000 from memory into f14
li x3, 0x5757f043c402ca6f # load x3 with value 0x5757f043c402ca6f
sw x3, 0(x2) # store 0x5757f043c402ca6f in memory
flw f29, 0(x2) # load 0x5757f043c402ca6f from memory into f29
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f22, 0(x2) # load 0x7fbfffff from memory into f22
fmsub.s f26, f14, f29, f22, dyn # perform operation
fmsub.s f26, f14, f29, f22, rdn # perform operation
fmsub.s f26, f14, f29, f22, rmm # perform operation
fmsub.s f26, f14, f29, f22, rne # perform operation
fmsub.s f26, f14, f29, f22, rtz # perform operation
fmsub.s f26, f14, f29, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f26, f14, f29, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f26, f14, f29, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f26, f14, f29, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f26, f14, f29, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f26, f14, f29, f22 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0x7ef8654f)
li x26, 0xa96242ff3f5ee960 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f27, 0(x2) # load 0x00800000 from memory into f27
li x3, 0x4d8d5b1cc8b5733d # load x3 with value 0x4d8d5b1cc8b5733d
sw x3, 0(x2) # store 0x4d8d5b1cc8b5733d in memory
flw f8, 0(x2) # load 0x4d8d5b1cc8b5733d from memory into f8
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f18, 0(x2) # load 0x7ef8654f from memory into f18
fmsub.s f26, f27, f8, f18, dyn # perform operation
fmsub.s f26, f27, f8, f18, rdn # perform operation
fmsub.s f26, f27, f8, f18, rmm # perform operation
fmsub.s f26, f27, f8, f18, rne # perform operation
fmsub.s f26, f27, f8, f18, rtz # perform operation
fmsub.s f26, f27, f8, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f26, f27, f8, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f26, f27, f8, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f26, f27, f8, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f26, f27, f8, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f26, f27, f8, f18 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0x813d9ab0)
li x16, 0x84cb0a5707e4ca0a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f30, 0(x2) # load 0x00800000 from memory into f30
li x3, 0xb1b234a266c18019 # load x3 with value 0xb1b234a266c18019
sw x3, 0(x2) # store 0xb1b234a266c18019 in memory
flw f8, 0(x2) # load 0xb1b234a266c18019 from memory into f8
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f9, 0(x2) # load 0x813d9ab0 from memory into f9
fmsub.s f16, f30, f8, f9, dyn # perform operation
fmsub.s f16, f30, f8, f9, rdn # perform operation
fmsub.s f16, f30, f8, f9, rmm # perform operation
fmsub.s f16, f30, f8, f9, rne # perform operation
fmsub.s f16, f30, f8, f9, rtz # perform operation
fmsub.s f16, f30, f8, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f16, f30, f8, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f16, f30, f8, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f16, f30, f8, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f16, f30, f8, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f16, f30, f8, f9 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0x0)
li x4, 0x3a8a0043091fa9ed # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f1, 0(x2) # load 0x80800000 from memory into f1
li x3, 0xc6dd42b82cc25557 # load x3 with value 0xc6dd42b82cc25557
sw x3, 0(x2) # store 0xc6dd42b82cc25557 in memory
flw f30, 0(x2) # load 0xc6dd42b82cc25557 from memory into f30
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f22, 0(x2) # load 0x00000000 from memory into f22
fmsub.s f4, f1, f30, f22, dyn # perform operation
fmsub.s f4, f1, f30, f22, rdn # perform operation
fmsub.s f4, f1, f30, f22, rmm # perform operation
fmsub.s f4, f1, f30, f22, rne # perform operation
fmsub.s f4, f1, f30, f22, rtz # perform operation
fmsub.s f4, f1, f30, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f4, f1, f30, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f4, f1, f30, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f4, f1, f30, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f4, f1, f30, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f4, f1, f30, f22 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0x80000000)
li x14, 0xef2935c48e695827 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f24, 0(x2) # load 0x80800000 from memory into f24
li x3, 0xeb880805ba975e2b # load x3 with value 0xeb880805ba975e2b
sw x3, 0(x2) # store 0xeb880805ba975e2b in memory
flw f12, 0(x2) # load 0xeb880805ba975e2b from memory into f12
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f28, 0(x2) # load 0x80000000 from memory into f28
fmsub.s f14, f24, f12, f28, dyn # perform operation
fmsub.s f14, f24, f12, f28, rdn # perform operation
fmsub.s f14, f24, f12, f28, rmm # perform operation
fmsub.s f14, f24, f12, f28, rne # perform operation
fmsub.s f14, f24, f12, f28, rtz # perform operation
fmsub.s f14, f24, f12, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f14, f24, f12, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f14, f24, f12, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f14, f24, f12, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f14, f24, f12, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f14, f24, f12, f28 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0x3f800000)
li x14, 0xf06dd450b6c07745 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f10, 0(x2) # load 0x80800000 from memory into f10
li x3, 0x87bbe05123024074 # load x3 with value 0x87bbe05123024074
sw x3, 0(x2) # store 0x87bbe05123024074 in memory
flw f2, 0(x2) # load 0x87bbe05123024074 from memory into f2
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f18, 0(x2) # load 0x3f800000 from memory into f18
fmsub.s f14, f10, f2, f18, dyn # perform operation
fmsub.s f14, f10, f2, f18, rdn # perform operation
fmsub.s f14, f10, f2, f18, rmm # perform operation
fmsub.s f14, f10, f2, f18, rne # perform operation
fmsub.s f14, f10, f2, f18, rtz # perform operation
fmsub.s f14, f10, f2, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f14, f10, f2, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f14, f10, f2, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f14, f10, f2, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f14, f10, f2, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f14, f10, f2, f18 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0xbf800000)
li x23, 0x27e2fbe11b8ba0a7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f16, 0(x2) # load 0x80800000 from memory into f16
li x3, 0xb7e08514b7060b9b # load x3 with value 0xb7e08514b7060b9b
sw x3, 0(x2) # store 0xb7e08514b7060b9b in memory
flw f24, 0(x2) # load 0xb7e08514b7060b9b from memory into f24
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f12, 0(x2) # load 0xbf800000 from memory into f12
fmsub.s f23, f16, f24, f12, dyn # perform operation
fmsub.s f23, f16, f24, f12, rdn # perform operation
fmsub.s f23, f16, f24, f12, rmm # perform operation
fmsub.s f23, f16, f24, f12, rne # perform operation
fmsub.s f23, f16, f24, f12, rtz # perform operation
fmsub.s f23, f16, f24, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f23, f16, f24, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f23, f16, f24, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f23, f16, f24, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f23, f16, f24, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f23, f16, f24, f12 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0x3fc00000)
li x4, 0x7b4814c4979e54ca # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f20, 0(x2) # load 0x80800000 from memory into f20
li x3, 0x63ff13b9fe33887 # load x3 with value 0x63ff13b9fe33887
sw x3, 0(x2) # store 0x63ff13b9fe33887 in memory
flw f29, 0(x2) # load 0x63ff13b9fe33887 from memory into f29
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f22, 0(x2) # load 0x3fc00000 from memory into f22
fmsub.s f4, f20, f29, f22, dyn # perform operation
fmsub.s f4, f20, f29, f22, rdn # perform operation
fmsub.s f4, f20, f29, f22, rmm # perform operation
fmsub.s f4, f20, f29, f22, rne # perform operation
fmsub.s f4, f20, f29, f22, rtz # perform operation
fmsub.s f4, f20, f29, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f4, f20, f29, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f4, f20, f29, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f4, f20, f29, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f4, f20, f29, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f4, f20, f29, f22 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0xbfc00000)
li x26, 0xa2fb40015186deca # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f1, 0(x2) # load 0x80800000 from memory into f1
li x3, 0xebfd7e39c6f32f # load x3 with value 0xebfd7e39c6f32f
sw x3, 0(x2) # store 0xebfd7e39c6f32f in memory
flw f14, 0(x2) # load 0xebfd7e39c6f32f from memory into f14
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f21, 0(x2) # load 0xbfc00000 from memory into f21
fmsub.s f26, f1, f14, f21, dyn # perform operation
fmsub.s f26, f1, f14, f21, rdn # perform operation
fmsub.s f26, f1, f14, f21, rmm # perform operation
fmsub.s f26, f1, f14, f21, rne # perform operation
fmsub.s f26, f1, f14, f21, rtz # perform operation
fmsub.s f26, f1, f14, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f26, f1, f14, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f26, f1, f14, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f26, f1, f14, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f26, f1, f14, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f26, f1, f14, f21 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0x40000000)
li x8, 0x5b2321174c684ca0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f10, 0(x2) # load 0x80800000 from memory into f10
li x3, 0x440df49f4f39c267 # load x3 with value 0x440df49f4f39c267
sw x3, 0(x2) # store 0x440df49f4f39c267 in memory
flw f23, 0(x2) # load 0x440df49f4f39c267 from memory into f23
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f29, 0(x2) # load 0x40000000 from memory into f29
fmsub.s f8, f10, f23, f29, dyn # perform operation
fmsub.s f8, f10, f23, f29, rdn # perform operation
fmsub.s f8, f10, f23, f29, rmm # perform operation
fmsub.s f8, f10, f23, f29, rne # perform operation
fmsub.s f8, f10, f23, f29, rtz # perform operation
fmsub.s f8, f10, f23, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f8, f10, f23, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f8, f10, f23, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f8, f10, f23, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f8, f10, f23, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f8, f10, f23, f29 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0xc0000000)
li x21, 0xf66d9c8187e827e9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f25, 0(x2) # load 0x80800000 from memory into f25
li x3, 0xf9df04f44c413723 # load x3 with value 0xf9df04f44c413723
sw x3, 0(x2) # store 0xf9df04f44c413723 in memory
flw f10, 0(x2) # load 0xf9df04f44c413723 from memory into f10
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f26, 0(x2) # load 0xc0000000 from memory into f26
fmsub.s f21, f25, f10, f26, dyn # perform operation
fmsub.s f21, f25, f10, f26, rdn # perform operation
fmsub.s f21, f25, f10, f26, rmm # perform operation
fmsub.s f21, f25, f10, f26, rne # perform operation
fmsub.s f21, f25, f10, f26, rtz # perform operation
fmsub.s f21, f25, f10, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f21, f25, f10, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f21, f25, f10, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f21, f25, f10, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f21, f25, f10, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f21, f25, f10, f26 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0x800000)
li x6, 0xe6f8526f913bf6c4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f28, 0(x2) # load 0x80800000 from memory into f28
li x3, 0x593135e20ded9f9e # load x3 with value 0x593135e20ded9f9e
sw x3, 0(x2) # store 0x593135e20ded9f9e in memory
flw f2, 0(x2) # load 0x593135e20ded9f9e from memory into f2
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f18, 0(x2) # load 0x00800000 from memory into f18
fmsub.s f6, f28, f2, f18, dyn # perform operation
fmsub.s f6, f28, f2, f18, rdn # perform operation
fmsub.s f6, f28, f2, f18, rmm # perform operation
fmsub.s f6, f28, f2, f18, rne # perform operation
fmsub.s f6, f28, f2, f18, rtz # perform operation
fmsub.s f6, f28, f2, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f6, f28, f2, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f6, f28, f2, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f6, f28, f2, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f6, f28, f2, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f6, f28, f2, f18 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0x80800000)
li x22, 0xc71df74add32cb0c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f13, 0(x2) # load 0x80800000 from memory into f13
li x3, 0x7cdae283696ed988 # load x3 with value 0x7cdae283696ed988
sw x3, 0(x2) # store 0x7cdae283696ed988 in memory
flw f15, 0(x2) # load 0x7cdae283696ed988 from memory into f15
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f4, 0(x2) # load 0x80800000 from memory into f4
fmsub.s f22, f13, f15, f4, dyn # perform operation
fmsub.s f22, f13, f15, f4, rdn # perform operation
fmsub.s f22, f13, f15, f4, rmm # perform operation
fmsub.s f22, f13, f15, f4, rne # perform operation
fmsub.s f22, f13, f15, f4, rtz # perform operation
fmsub.s f22, f13, f15, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f22, f13, f15, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f22, f13, f15, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f22, f13, f15, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f22, f13, f15, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f22, f13, f15, f4 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0x7f7fffff)
li x17, 0x0cd1750a327c5cfd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f2, 0(x2) # load 0x80800000 from memory into f2
li x3, 0x25b3aad216f722d5 # load x3 with value 0x25b3aad216f722d5
sw x3, 0(x2) # store 0x25b3aad216f722d5 in memory
flw f23, 0(x2) # load 0x25b3aad216f722d5 from memory into f23
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f30, 0(x2) # load 0x7f7fffff from memory into f30
fmsub.s f17, f2, f23, f30, dyn # perform operation
fmsub.s f17, f2, f23, f30, rdn # perform operation
fmsub.s f17, f2, f23, f30, rmm # perform operation
fmsub.s f17, f2, f23, f30, rne # perform operation
fmsub.s f17, f2, f23, f30, rtz # perform operation
fmsub.s f17, f2, f23, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f17, f2, f23, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f17, f2, f23, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f17, f2, f23, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f17, f2, f23, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f17, f2, f23, f30 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0xff7fffff)
li x14, 0x052ea64987c432f4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f29, 0(x2) # load 0x80800000 from memory into f29
li x3, 0x376ef9e2e8b6f9dd # load x3 with value 0x376ef9e2e8b6f9dd
sw x3, 0(x2) # store 0x376ef9e2e8b6f9dd in memory
flw f15, 0(x2) # load 0x376ef9e2e8b6f9dd from memory into f15
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f13, 0(x2) # load 0xff7fffff from memory into f13
fmsub.s f14, f29, f15, f13, dyn # perform operation
fmsub.s f14, f29, f15, f13, rdn # perform operation
fmsub.s f14, f29, f15, f13, rmm # perform operation
fmsub.s f14, f29, f15, f13, rne # perform operation
fmsub.s f14, f29, f15, f13, rtz # perform operation
fmsub.s f14, f29, f15, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f14, f29, f15, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f14, f29, f15, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f14, f29, f15, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f14, f29, f15, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f14, f29, f15, f13 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0x7fffff)
li x10, 0xd6e6823956294205 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f13, 0(x2) # load 0x80800000 from memory into f13
li x3, 0x9e7aba64e02a0b4f # load x3 with value 0x9e7aba64e02a0b4f
sw x3, 0(x2) # store 0x9e7aba64e02a0b4f in memory
flw f30, 0(x2) # load 0x9e7aba64e02a0b4f from memory into f30
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f3, 0(x2) # load 0x007fffff from memory into f3
fmsub.s f10, f13, f30, f3, dyn # perform operation
fmsub.s f10, f13, f30, f3, rdn # perform operation
fmsub.s f10, f13, f30, f3, rmm # perform operation
fmsub.s f10, f13, f30, f3, rne # perform operation
fmsub.s f10, f13, f30, f3, rtz # perform operation
fmsub.s f10, f13, f30, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f10, f13, f30, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f10, f13, f30, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f10, f13, f30, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f10, f13, f30, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f10, f13, f30, f3 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0x807fffff)
li x5, 0x032153314349fc6b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f28, 0(x2) # load 0x80800000 from memory into f28
li x3, 0xe008eb1c0f02cb8c # load x3 with value 0xe008eb1c0f02cb8c
sw x3, 0(x2) # store 0xe008eb1c0f02cb8c in memory
flw f24, 0(x2) # load 0xe008eb1c0f02cb8c from memory into f24
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f18, 0(x2) # load 0x807fffff from memory into f18
fmsub.s f5, f28, f24, f18, dyn # perform operation
fmsub.s f5, f28, f24, f18, rdn # perform operation
fmsub.s f5, f28, f24, f18, rmm # perform operation
fmsub.s f5, f28, f24, f18, rne # perform operation
fmsub.s f5, f28, f24, f18, rtz # perform operation
fmsub.s f5, f28, f24, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f5, f28, f24, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f5, f28, f24, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f5, f28, f24, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f5, f28, f24, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f5, f28, f24, f18 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0x400000)
li x13, 0xa188297804e44d5b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f15, 0(x2) # load 0x80800000 from memory into f15
li x3, 0x41475ae66a1178db # load x3 with value 0x41475ae66a1178db
sw x3, 0(x2) # store 0x41475ae66a1178db in memory
flw f23, 0(x2) # load 0x41475ae66a1178db from memory into f23
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f17, 0(x2) # load 0x00400000 from memory into f17
fmsub.s f13, f15, f23, f17, dyn # perform operation
fmsub.s f13, f15, f23, f17, rdn # perform operation
fmsub.s f13, f15, f23, f17, rmm # perform operation
fmsub.s f13, f15, f23, f17, rne # perform operation
fmsub.s f13, f15, f23, f17, rtz # perform operation
fmsub.s f13, f15, f23, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f13, f15, f23, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f13, f15, f23, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f13, f15, f23, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f13, f15, f23, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f13, f15, f23, f17 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0x80400000)
li x15, 0xd4ac5347a237f5bd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f1, 0(x2) # load 0x80800000 from memory into f1
li x3, 0x81f1a234b0c6c273 # load x3 with value 0x81f1a234b0c6c273
sw x3, 0(x2) # store 0x81f1a234b0c6c273 in memory
flw f14, 0(x2) # load 0x81f1a234b0c6c273 from memory into f14
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f18, 0(x2) # load 0x80400000 from memory into f18
fmsub.s f15, f1, f14, f18, dyn # perform operation
fmsub.s f15, f1, f14, f18, rdn # perform operation
fmsub.s f15, f1, f14, f18, rmm # perform operation
fmsub.s f15, f1, f14, f18, rne # perform operation
fmsub.s f15, f1, f14, f18, rtz # perform operation
fmsub.s f15, f1, f14, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f15, f1, f14, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f15, f1, f14, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f15, f1, f14, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f15, f1, f14, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f15, f1, f14, f18 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0x1)
li x30, 0x15e28201f09e08c4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f7, 0(x2) # load 0x80800000 from memory into f7
li x3, 0x59d96fe1c664013d # load x3 with value 0x59d96fe1c664013d
sw x3, 0(x2) # store 0x59d96fe1c664013d in memory
flw f25, 0(x2) # load 0x59d96fe1c664013d from memory into f25
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f26, 0(x2) # load 0x00000001 from memory into f26
fmsub.s f30, f7, f25, f26, dyn # perform operation
fmsub.s f30, f7, f25, f26, rdn # perform operation
fmsub.s f30, f7, f25, f26, rmm # perform operation
fmsub.s f30, f7, f25, f26, rne # perform operation
fmsub.s f30, f7, f25, f26, rtz # perform operation
fmsub.s f30, f7, f25, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f30, f7, f25, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f30, f7, f25, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f30, f7, f25, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f30, f7, f25, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f30, f7, f25, f26 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0x80000001)
li x14, 0x7ce5b606332b15b1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f8, 0(x2) # load 0x80800000 from memory into f8
li x3, 0x88b8aa4aa9be722c # load x3 with value 0x88b8aa4aa9be722c
sw x3, 0(x2) # store 0x88b8aa4aa9be722c in memory
flw f5, 0(x2) # load 0x88b8aa4aa9be722c from memory into f5
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f11, 0(x2) # load 0x80000001 from memory into f11
fmsub.s f14, f8, f5, f11, dyn # perform operation
fmsub.s f14, f8, f5, f11, rdn # perform operation
fmsub.s f14, f8, f5, f11, rmm # perform operation
fmsub.s f14, f8, f5, f11, rne # perform operation
fmsub.s f14, f8, f5, f11, rtz # perform operation
fmsub.s f14, f8, f5, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f14, f8, f5, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f14, f8, f5, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f14, f8, f5, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f14, f8, f5, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f14, f8, f5, f11 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0x7f800000)
li x22, 0x6356680d787c14b7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f21, 0(x2) # load 0x80800000 from memory into f21
li x3, 0xa80698321530fcff # load x3 with value 0xa80698321530fcff
sw x3, 0(x2) # store 0xa80698321530fcff in memory
flw f27, 0(x2) # load 0xa80698321530fcff from memory into f27
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f24, 0(x2) # load 0x7f800000 from memory into f24
fmsub.s f22, f21, f27, f24, dyn # perform operation
fmsub.s f22, f21, f27, f24, rdn # perform operation
fmsub.s f22, f21, f27, f24, rmm # perform operation
fmsub.s f22, f21, f27, f24, rne # perform operation
fmsub.s f22, f21, f27, f24, rtz # perform operation
fmsub.s f22, f21, f27, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f22, f21, f27, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f22, f21, f27, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f22, f21, f27, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f22, f21, f27, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f22, f21, f27, f24 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0xff800000)
li x21, 0xfb55212feecb84fc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f2, 0(x2) # load 0x80800000 from memory into f2
li x3, 0x3c52ff65d4849c23 # load x3 with value 0x3c52ff65d4849c23
sw x3, 0(x2) # store 0x3c52ff65d4849c23 in memory
flw f16, 0(x2) # load 0x3c52ff65d4849c23 from memory into f16
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f26, 0(x2) # load 0xff800000 from memory into f26
fmsub.s f21, f2, f16, f26, dyn # perform operation
fmsub.s f21, f2, f16, f26, rdn # perform operation
fmsub.s f21, f2, f16, f26, rmm # perform operation
fmsub.s f21, f2, f16, f26, rne # perform operation
fmsub.s f21, f2, f16, f26, rtz # perform operation
fmsub.s f21, f2, f16, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f21, f2, f16, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f21, f2, f16, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f21, f2, f16, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f21, f2, f16, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f21, f2, f16, f26 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0x7fc00000)
li x14, 0x1f0ce10598f22848 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f23, 0(x2) # load 0x80800000 from memory into f23
li x3, 0x9a7ff01efe26f178 # load x3 with value 0x9a7ff01efe26f178
sw x3, 0(x2) # store 0x9a7ff01efe26f178 in memory
flw f18, 0(x2) # load 0x9a7ff01efe26f178 from memory into f18
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f8, 0(x2) # load 0x7fc00000 from memory into f8
fmsub.s f14, f23, f18, f8, dyn # perform operation
fmsub.s f14, f23, f18, f8, rdn # perform operation
fmsub.s f14, f23, f18, f8, rmm # perform operation
fmsub.s f14, f23, f18, f8, rne # perform operation
fmsub.s f14, f23, f18, f8, rtz # perform operation
fmsub.s f14, f23, f18, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f14, f23, f18, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f14, f23, f18, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f14, f23, f18, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f14, f23, f18, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f14, f23, f18, f8 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0x7fffffff)
li x8, 0xce17216507f2e13a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f18, 0(x2) # load 0x80800000 from memory into f18
li x3, 0x4fee9231f147068c # load x3 with value 0x4fee9231f147068c
sw x3, 0(x2) # store 0x4fee9231f147068c in memory
flw f7, 0(x2) # load 0x4fee9231f147068c from memory into f7
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f23, 0(x2) # load 0x7fffffff from memory into f23
fmsub.s f8, f18, f7, f23, dyn # perform operation
fmsub.s f8, f18, f7, f23, rdn # perform operation
fmsub.s f8, f18, f7, f23, rmm # perform operation
fmsub.s f8, f18, f7, f23, rne # perform operation
fmsub.s f8, f18, f7, f23, rtz # perform operation
fmsub.s f8, f18, f7, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f8, f18, f7, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f8, f18, f7, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f8, f18, f7, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f8, f18, f7, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f8, f18, f7, f23 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0x7f800001)
li x10, 0x2824c0ed5ea63d26 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f12, 0(x2) # load 0x80800000 from memory into f12
li x3, 0x7609a58c5692dc56 # load x3 with value 0x7609a58c5692dc56
sw x3, 0(x2) # store 0x7609a58c5692dc56 in memory
flw f13, 0(x2) # load 0x7609a58c5692dc56 from memory into f13
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f4, 0(x2) # load 0x7f800001 from memory into f4
fmsub.s f10, f12, f13, f4, dyn # perform operation
fmsub.s f10, f12, f13, f4, rdn # perform operation
fmsub.s f10, f12, f13, f4, rmm # perform operation
fmsub.s f10, f12, f13, f4, rne # perform operation
fmsub.s f10, f12, f13, f4, rtz # perform operation
fmsub.s f10, f12, f13, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f10, f12, f13, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f10, f12, f13, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f10, f12, f13, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f10, f12, f13, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f10, f12, f13, f4 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0x7fbfffff)
li x20, 0xd3f35922e882ba40 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f31, 0(x2) # load 0x80800000 from memory into f31
li x3, 0xff0b491b4ab56f27 # load x3 with value 0xff0b491b4ab56f27
sw x3, 0(x2) # store 0xff0b491b4ab56f27 in memory
flw f6, 0(x2) # load 0xff0b491b4ab56f27 from memory into f6
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f3, 0(x2) # load 0x7fbfffff from memory into f3
fmsub.s f20, f31, f6, f3, dyn # perform operation
fmsub.s f20, f31, f6, f3, rdn # perform operation
fmsub.s f20, f31, f6, f3, rmm # perform operation
fmsub.s f20, f31, f6, f3, rne # perform operation
fmsub.s f20, f31, f6, f3, rtz # perform operation
fmsub.s f20, f31, f6, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f20, f31, f6, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f20, f31, f6, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f20, f31, f6, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f20, f31, f6, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f20, f31, f6, f3 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0x7ef8654f)
li x22, 0xcb86b067c6276855 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f1, 0(x2) # load 0x80800000 from memory into f1
li x3, 0x8411a8bf363583a9 # load x3 with value 0x8411a8bf363583a9
sw x3, 0(x2) # store 0x8411a8bf363583a9 in memory
flw f12, 0(x2) # load 0x8411a8bf363583a9 from memory into f12
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f31, 0(x2) # load 0x7ef8654f from memory into f31
fmsub.s f22, f1, f12, f31, dyn # perform operation
fmsub.s f22, f1, f12, f31, rdn # perform operation
fmsub.s f22, f1, f12, f31, rmm # perform operation
fmsub.s f22, f1, f12, f31, rne # perform operation
fmsub.s f22, f1, f12, f31, rtz # perform operation
fmsub.s f22, f1, f12, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f22, f1, f12, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f22, f1, f12, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f22, f1, f12, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f22, f1, f12, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f22, f1, f12, f31 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0x813d9ab0)
li x14, 0x21e0cff45708a7a1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f24, 0(x2) # load 0x80800000 from memory into f24
li x3, 0xb556f435880349eb # load x3 with value 0xb556f435880349eb
sw x3, 0(x2) # store 0xb556f435880349eb in memory
flw f30, 0(x2) # load 0xb556f435880349eb from memory into f30
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f4, 0(x2) # load 0x813d9ab0 from memory into f4
fmsub.s f14, f24, f30, f4, dyn # perform operation
fmsub.s f14, f24, f30, f4, rdn # perform operation
fmsub.s f14, f24, f30, f4, rmm # perform operation
fmsub.s f14, f24, f30, f4, rne # perform operation
fmsub.s f14, f24, f30, f4, rtz # perform operation
fmsub.s f14, f24, f30, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f14, f24, f30, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f14, f24, f30, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f14, f24, f30, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f14, f24, f30, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f14, f24, f30, f4 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0x0)
li x22, 0x39df1257ead18a11 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f7, 0(x2) # load 0x7f7fffff from memory into f7
li x3, 0xcca72a5d4a34abdd # load x3 with value 0xcca72a5d4a34abdd
sw x3, 0(x2) # store 0xcca72a5d4a34abdd in memory
flw f13, 0(x2) # load 0xcca72a5d4a34abdd from memory into f13
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f1, 0(x2) # load 0x00000000 from memory into f1
fmsub.s f22, f7, f13, f1, dyn # perform operation
fmsub.s f22, f7, f13, f1, rdn # perform operation
fmsub.s f22, f7, f13, f1, rmm # perform operation
fmsub.s f22, f7, f13, f1, rne # perform operation
fmsub.s f22, f7, f13, f1, rtz # perform operation
fmsub.s f22, f7, f13, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f22, f7, f13, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f22, f7, f13, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f22, f7, f13, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f22, f7, f13, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f22, f7, f13, f1 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0x80000000)
li x19, 0x13f2ecd2a6e6a889 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f10, 0(x2) # load 0x7f7fffff from memory into f10
li x3, 0x7bc08500da7f721a # load x3 with value 0x7bc08500da7f721a
sw x3, 0(x2) # store 0x7bc08500da7f721a in memory
flw f27, 0(x2) # load 0x7bc08500da7f721a from memory into f27
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f15, 0(x2) # load 0x80000000 from memory into f15
fmsub.s f19, f10, f27, f15, dyn # perform operation
fmsub.s f19, f10, f27, f15, rdn # perform operation
fmsub.s f19, f10, f27, f15, rmm # perform operation
fmsub.s f19, f10, f27, f15, rne # perform operation
fmsub.s f19, f10, f27, f15, rtz # perform operation
fmsub.s f19, f10, f27, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f19, f10, f27, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f19, f10, f27, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f19, f10, f27, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f19, f10, f27, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f19, f10, f27, f15 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0x3f800000)
li x29, 0x12e32ed0efc1eff6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f24, 0(x2) # load 0x7f7fffff from memory into f24
li x3, 0xcb3360c59ec64719 # load x3 with value 0xcb3360c59ec64719
sw x3, 0(x2) # store 0xcb3360c59ec64719 in memory
flw f22, 0(x2) # load 0xcb3360c59ec64719 from memory into f22
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f31, 0(x2) # load 0x3f800000 from memory into f31
fmsub.s f29, f24, f22, f31, dyn # perform operation
fmsub.s f29, f24, f22, f31, rdn # perform operation
fmsub.s f29, f24, f22, f31, rmm # perform operation
fmsub.s f29, f24, f22, f31, rne # perform operation
fmsub.s f29, f24, f22, f31, rtz # perform operation
fmsub.s f29, f24, f22, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f29, f24, f22, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f29, f24, f22, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f29, f24, f22, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f29, f24, f22, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f29, f24, f22, f31 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0xbf800000)
li x5, 0x9895c610eade3f72 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f16, 0(x2) # load 0x7f7fffff from memory into f16
li x3, 0x2cff3ef59eb3e051 # load x3 with value 0x2cff3ef59eb3e051
sw x3, 0(x2) # store 0x2cff3ef59eb3e051 in memory
flw f11, 0(x2) # load 0x2cff3ef59eb3e051 from memory into f11
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f24, 0(x2) # load 0xbf800000 from memory into f24
fmsub.s f5, f16, f11, f24, dyn # perform operation
fmsub.s f5, f16, f11, f24, rdn # perform operation
fmsub.s f5, f16, f11, f24, rmm # perform operation
fmsub.s f5, f16, f11, f24, rne # perform operation
fmsub.s f5, f16, f11, f24, rtz # perform operation
fmsub.s f5, f16, f11, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f5, f16, f11, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f5, f16, f11, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f5, f16, f11, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f5, f16, f11, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f5, f16, f11, f24 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0x3fc00000)
li x28, 0x7cd30d1d0d6a3021 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f1, 0(x2) # load 0x7f7fffff from memory into f1
li x3, 0x415b9d51390d7428 # load x3 with value 0x415b9d51390d7428
sw x3, 0(x2) # store 0x415b9d51390d7428 in memory
flw f27, 0(x2) # load 0x415b9d51390d7428 from memory into f27
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f29, 0(x2) # load 0x3fc00000 from memory into f29
fmsub.s f28, f1, f27, f29, dyn # perform operation
fmsub.s f28, f1, f27, f29, rdn # perform operation
fmsub.s f28, f1, f27, f29, rmm # perform operation
fmsub.s f28, f1, f27, f29, rne # perform operation
fmsub.s f28, f1, f27, f29, rtz # perform operation
fmsub.s f28, f1, f27, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f28, f1, f27, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f28, f1, f27, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f28, f1, f27, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f28, f1, f27, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f28, f1, f27, f29 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0xbfc00000)
li x14, 0xf7e85ad107e0dd40 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f13, 0(x2) # load 0x7f7fffff from memory into f13
li x3, 0xf6d9b2bb044f8ef # load x3 with value 0xf6d9b2bb044f8ef
sw x3, 0(x2) # store 0xf6d9b2bb044f8ef in memory
flw f29, 0(x2) # load 0xf6d9b2bb044f8ef from memory into f29
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f21, 0(x2) # load 0xbfc00000 from memory into f21
fmsub.s f14, f13, f29, f21, dyn # perform operation
fmsub.s f14, f13, f29, f21, rdn # perform operation
fmsub.s f14, f13, f29, f21, rmm # perform operation
fmsub.s f14, f13, f29, f21, rne # perform operation
fmsub.s f14, f13, f29, f21, rtz # perform operation
fmsub.s f14, f13, f29, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f14, f13, f29, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f14, f13, f29, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f14, f13, f29, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f14, f13, f29, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f14, f13, f29, f21 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0x40000000)
li x11, 0x5bbafc598c7dc12b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f15, 0(x2) # load 0x7f7fffff from memory into f15
li x3, 0xafa4f4f911cb2a4 # load x3 with value 0xafa4f4f911cb2a4
sw x3, 0(x2) # store 0xafa4f4f911cb2a4 in memory
flw f20, 0(x2) # load 0xafa4f4f911cb2a4 from memory into f20
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f25, 0(x2) # load 0x40000000 from memory into f25
fmsub.s f11, f15, f20, f25, dyn # perform operation
fmsub.s f11, f15, f20, f25, rdn # perform operation
fmsub.s f11, f15, f20, f25, rmm # perform operation
fmsub.s f11, f15, f20, f25, rne # perform operation
fmsub.s f11, f15, f20, f25, rtz # perform operation
fmsub.s f11, f15, f20, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f11, f15, f20, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f11, f15, f20, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f11, f15, f20, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f11, f15, f20, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f11, f15, f20, f25 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0xc0000000)
li x29, 0xc589680000fce28e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f28, 0(x2) # load 0x7f7fffff from memory into f28
li x3, 0x41cff7085f11da25 # load x3 with value 0x41cff7085f11da25
sw x3, 0(x2) # store 0x41cff7085f11da25 in memory
flw f14, 0(x2) # load 0x41cff7085f11da25 from memory into f14
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f20, 0(x2) # load 0xc0000000 from memory into f20
fmsub.s f29, f28, f14, f20, dyn # perform operation
fmsub.s f29, f28, f14, f20, rdn # perform operation
fmsub.s f29, f28, f14, f20, rmm # perform operation
fmsub.s f29, f28, f14, f20, rne # perform operation
fmsub.s f29, f28, f14, f20, rtz # perform operation
fmsub.s f29, f28, f14, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f29, f28, f14, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f29, f28, f14, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f29, f28, f14, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f29, f28, f14, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f29, f28, f14, f20 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0x800000)
li x10, 0x0fd050af37b98499 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f5, 0(x2) # load 0x7f7fffff from memory into f5
li x3, 0xb7f83b23af1358d1 # load x3 with value 0xb7f83b23af1358d1
sw x3, 0(x2) # store 0xb7f83b23af1358d1 in memory
flw f7, 0(x2) # load 0xb7f83b23af1358d1 from memory into f7
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f19, 0(x2) # load 0x00800000 from memory into f19
fmsub.s f10, f5, f7, f19, dyn # perform operation
fmsub.s f10, f5, f7, f19, rdn # perform operation
fmsub.s f10, f5, f7, f19, rmm # perform operation
fmsub.s f10, f5, f7, f19, rne # perform operation
fmsub.s f10, f5, f7, f19, rtz # perform operation
fmsub.s f10, f5, f7, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f10, f5, f7, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f10, f5, f7, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f10, f5, f7, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f10, f5, f7, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f10, f5, f7, f19 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0x80800000)
li x11, 0xe2b6d68faea96e0c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f14, 0(x2) # load 0x7f7fffff from memory into f14
li x3, 0x1932f8fdb7f4dbc5 # load x3 with value 0x1932f8fdb7f4dbc5
sw x3, 0(x2) # store 0x1932f8fdb7f4dbc5 in memory
flw f3, 0(x2) # load 0x1932f8fdb7f4dbc5 from memory into f3
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f27, 0(x2) # load 0x80800000 from memory into f27
fmsub.s f11, f14, f3, f27, dyn # perform operation
fmsub.s f11, f14, f3, f27, rdn # perform operation
fmsub.s f11, f14, f3, f27, rmm # perform operation
fmsub.s f11, f14, f3, f27, rne # perform operation
fmsub.s f11, f14, f3, f27, rtz # perform operation
fmsub.s f11, f14, f3, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f11, f14, f3, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f11, f14, f3, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f11, f14, f3, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f11, f14, f3, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f11, f14, f3, f27 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0x7f7fffff)
li x16, 0x6c68db7c77458d75 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f31, 0(x2) # load 0x7f7fffff from memory into f31
li x3, 0x5eb9e71d023fb514 # load x3 with value 0x5eb9e71d023fb514
sw x3, 0(x2) # store 0x5eb9e71d023fb514 in memory
flw f7, 0(x2) # load 0x5eb9e71d023fb514 from memory into f7
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f8, 0(x2) # load 0x7f7fffff from memory into f8
fmsub.s f16, f31, f7, f8, dyn # perform operation
fmsub.s f16, f31, f7, f8, rdn # perform operation
fmsub.s f16, f31, f7, f8, rmm # perform operation
fmsub.s f16, f31, f7, f8, rne # perform operation
fmsub.s f16, f31, f7, f8, rtz # perform operation
fmsub.s f16, f31, f7, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f16, f31, f7, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f16, f31, f7, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f16, f31, f7, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f16, f31, f7, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f16, f31, f7, f8 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0xff7fffff)
li x14, 0x91111d935ca68a9c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f3, 0(x2) # load 0x7f7fffff from memory into f3
li x3, 0xa3a5ec4ffb7af2de # load x3 with value 0xa3a5ec4ffb7af2de
sw x3, 0(x2) # store 0xa3a5ec4ffb7af2de in memory
flw f22, 0(x2) # load 0xa3a5ec4ffb7af2de from memory into f22
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f24, 0(x2) # load 0xff7fffff from memory into f24
fmsub.s f14, f3, f22, f24, dyn # perform operation
fmsub.s f14, f3, f22, f24, rdn # perform operation
fmsub.s f14, f3, f22, f24, rmm # perform operation
fmsub.s f14, f3, f22, f24, rne # perform operation
fmsub.s f14, f3, f22, f24, rtz # perform operation
fmsub.s f14, f3, f22, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f14, f3, f22, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f14, f3, f22, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f14, f3, f22, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f14, f3, f22, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f14, f3, f22, f24 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0x7fffff)
li x28, 0xda337db41b3f03d7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f22, 0(x2) # load 0x7f7fffff from memory into f22
li x3, 0xeddf37d6fa532d3 # load x3 with value 0xeddf37d6fa532d3
sw x3, 0(x2) # store 0xeddf37d6fa532d3 in memory
flw f2, 0(x2) # load 0xeddf37d6fa532d3 from memory into f2
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f23, 0(x2) # load 0x007fffff from memory into f23
fmsub.s f28, f22, f2, f23, dyn # perform operation
fmsub.s f28, f22, f2, f23, rdn # perform operation
fmsub.s f28, f22, f2, f23, rmm # perform operation
fmsub.s f28, f22, f2, f23, rne # perform operation
fmsub.s f28, f22, f2, f23, rtz # perform operation
fmsub.s f28, f22, f2, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f28, f22, f2, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f28, f22, f2, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f28, f22, f2, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f28, f22, f2, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f28, f22, f2, f23 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0x807fffff)
li x17, 0xd2a61f063632d99a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f7, 0(x2) # load 0x7f7fffff from memory into f7
li x3, 0xff692bce8347747c # load x3 with value 0xff692bce8347747c
sw x3, 0(x2) # store 0xff692bce8347747c in memory
flw f3, 0(x2) # load 0xff692bce8347747c from memory into f3
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f14, 0(x2) # load 0x807fffff from memory into f14
fmsub.s f17, f7, f3, f14, dyn # perform operation
fmsub.s f17, f7, f3, f14, rdn # perform operation
fmsub.s f17, f7, f3, f14, rmm # perform operation
fmsub.s f17, f7, f3, f14, rne # perform operation
fmsub.s f17, f7, f3, f14, rtz # perform operation
fmsub.s f17, f7, f3, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f17, f7, f3, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f17, f7, f3, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f17, f7, f3, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f17, f7, f3, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f17, f7, f3, f14 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0x400000)
li x2, 0x2438dc773c9e4c0a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f9, 0(x2) # load 0x7f7fffff from memory into f9
li x3, 0xa101dd7e2b959ae2 # load x3 with value 0xa101dd7e2b959ae2
sw x3, 0(x2) # store 0xa101dd7e2b959ae2 in memory
flw f21, 0(x2) # load 0xa101dd7e2b959ae2 from memory into f21
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f12, 0(x2) # load 0x00400000 from memory into f12
fmsub.s f2, f9, f21, f12, dyn # perform operation
fmsub.s f2, f9, f21, f12, rdn # perform operation
fmsub.s f2, f9, f21, f12, rmm # perform operation
fmsub.s f2, f9, f21, f12, rne # perform operation
fmsub.s f2, f9, f21, f12, rtz # perform operation
fmsub.s f2, f9, f21, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f2, f9, f21, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f2, f9, f21, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f2, f9, f21, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f2, f9, f21, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f2, f9, f21, f12 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0x80400000)
li x3, 0x32b3924ac9b4f9c4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f27, 0(x2) # load 0x7f7fffff from memory into f27
li x3, 0x4ec010e9db1689ce # load x3 with value 0x4ec010e9db1689ce
sw x3, 0(x2) # store 0x4ec010e9db1689ce in memory
flw f9, 0(x2) # load 0x4ec010e9db1689ce from memory into f9
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f25, 0(x2) # load 0x80400000 from memory into f25
fmsub.s f3, f27, f9, f25, dyn # perform operation
fmsub.s f3, f27, f9, f25, rdn # perform operation
fmsub.s f3, f27, f9, f25, rmm # perform operation
fmsub.s f3, f27, f9, f25, rne # perform operation
fmsub.s f3, f27, f9, f25, rtz # perform operation
fmsub.s f3, f27, f9, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f3, f27, f9, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f3, f27, f9, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f3, f27, f9, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f3, f27, f9, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f3, f27, f9, f25 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0x1)
li x4, 0x1b3f3a897b33bb60 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f29, 0(x2) # load 0x7f7fffff from memory into f29
li x3, 0xe4440984a45438b9 # load x3 with value 0xe4440984a45438b9
sw x3, 0(x2) # store 0xe4440984a45438b9 in memory
flw f27, 0(x2) # load 0xe4440984a45438b9 from memory into f27
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f19, 0(x2) # load 0x00000001 from memory into f19
fmsub.s f4, f29, f27, f19, dyn # perform operation
fmsub.s f4, f29, f27, f19, rdn # perform operation
fmsub.s f4, f29, f27, f19, rmm # perform operation
fmsub.s f4, f29, f27, f19, rne # perform operation
fmsub.s f4, f29, f27, f19, rtz # perform operation
fmsub.s f4, f29, f27, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f4, f29, f27, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f4, f29, f27, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f4, f29, f27, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f4, f29, f27, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f4, f29, f27, f19 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0x80000001)
li x17, 0x84a27ca780d98271 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f16, 0(x2) # load 0x7f7fffff from memory into f16
li x3, 0x623fc4d2d35cafeb # load x3 with value 0x623fc4d2d35cafeb
sw x3, 0(x2) # store 0x623fc4d2d35cafeb in memory
flw f2, 0(x2) # load 0x623fc4d2d35cafeb from memory into f2
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f9, 0(x2) # load 0x80000001 from memory into f9
fmsub.s f17, f16, f2, f9, dyn # perform operation
fmsub.s f17, f16, f2, f9, rdn # perform operation
fmsub.s f17, f16, f2, f9, rmm # perform operation
fmsub.s f17, f16, f2, f9, rne # perform operation
fmsub.s f17, f16, f2, f9, rtz # perform operation
fmsub.s f17, f16, f2, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f17, f16, f2, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f17, f16, f2, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f17, f16, f2, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f17, f16, f2, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f17, f16, f2, f9 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0x7f800000)
li x30, 0x79f15391a619e4ab # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f27, 0(x2) # load 0x7f7fffff from memory into f27
li x3, 0x5325c8e3a8490c00 # load x3 with value 0x5325c8e3a8490c00
sw x3, 0(x2) # store 0x5325c8e3a8490c00 in memory
flw f1, 0(x2) # load 0x5325c8e3a8490c00 from memory into f1
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f12, 0(x2) # load 0x7f800000 from memory into f12
fmsub.s f30, f27, f1, f12, dyn # perform operation
fmsub.s f30, f27, f1, f12, rdn # perform operation
fmsub.s f30, f27, f1, f12, rmm # perform operation
fmsub.s f30, f27, f1, f12, rne # perform operation
fmsub.s f30, f27, f1, f12, rtz # perform operation
fmsub.s f30, f27, f1, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f30, f27, f1, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f30, f27, f1, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f30, f27, f1, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f30, f27, f1, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f30, f27, f1, f12 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0xff800000)
li x30, 0x9ace31988a188948 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f10, 0(x2) # load 0x7f7fffff from memory into f10
li x3, 0x3f211dce73dd2bf3 # load x3 with value 0x3f211dce73dd2bf3
sw x3, 0(x2) # store 0x3f211dce73dd2bf3 in memory
flw f9, 0(x2) # load 0x3f211dce73dd2bf3 from memory into f9
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f2, 0(x2) # load 0xff800000 from memory into f2
fmsub.s f30, f10, f9, f2, dyn # perform operation
fmsub.s f30, f10, f9, f2, rdn # perform operation
fmsub.s f30, f10, f9, f2, rmm # perform operation
fmsub.s f30, f10, f9, f2, rne # perform operation
fmsub.s f30, f10, f9, f2, rtz # perform operation
fmsub.s f30, f10, f9, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f30, f10, f9, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f30, f10, f9, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f30, f10, f9, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f30, f10, f9, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f30, f10, f9, f2 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0x7fc00000)
li x23, 0x598bbef176325b25 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f21, 0(x2) # load 0x7f7fffff from memory into f21
li x3, 0x9da8320f480241cb # load x3 with value 0x9da8320f480241cb
sw x3, 0(x2) # store 0x9da8320f480241cb in memory
flw f7, 0(x2) # load 0x9da8320f480241cb from memory into f7
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f9, 0(x2) # load 0x7fc00000 from memory into f9
fmsub.s f23, f21, f7, f9, dyn # perform operation
fmsub.s f23, f21, f7, f9, rdn # perform operation
fmsub.s f23, f21, f7, f9, rmm # perform operation
fmsub.s f23, f21, f7, f9, rne # perform operation
fmsub.s f23, f21, f7, f9, rtz # perform operation
fmsub.s f23, f21, f7, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f23, f21, f7, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f23, f21, f7, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f23, f21, f7, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f23, f21, f7, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f23, f21, f7, f9 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0x7fffffff)
li x16, 0xfd46a5c3c801a9cc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f24, 0(x2) # load 0x7f7fffff from memory into f24
li x3, 0x57e4d94754cce36f # load x3 with value 0x57e4d94754cce36f
sw x3, 0(x2) # store 0x57e4d94754cce36f in memory
flw f15, 0(x2) # load 0x57e4d94754cce36f from memory into f15
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f20, 0(x2) # load 0x7fffffff from memory into f20
fmsub.s f16, f24, f15, f20, dyn # perform operation
fmsub.s f16, f24, f15, f20, rdn # perform operation
fmsub.s f16, f24, f15, f20, rmm # perform operation
fmsub.s f16, f24, f15, f20, rne # perform operation
fmsub.s f16, f24, f15, f20, rtz # perform operation
fmsub.s f16, f24, f15, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f16, f24, f15, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f16, f24, f15, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f16, f24, f15, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f16, f24, f15, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f16, f24, f15, f20 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0x7f800001)
li x5, 0x2d7f9683e0d6d468 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f2, 0(x2) # load 0x7f7fffff from memory into f2
li x3, 0x6037cfa68357aa33 # load x3 with value 0x6037cfa68357aa33
sw x3, 0(x2) # store 0x6037cfa68357aa33 in memory
flw f6, 0(x2) # load 0x6037cfa68357aa33 from memory into f6
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f16, 0(x2) # load 0x7f800001 from memory into f16
fmsub.s f5, f2, f6, f16, dyn # perform operation
fmsub.s f5, f2, f6, f16, rdn # perform operation
fmsub.s f5, f2, f6, f16, rmm # perform operation
fmsub.s f5, f2, f6, f16, rne # perform operation
fmsub.s f5, f2, f6, f16, rtz # perform operation
fmsub.s f5, f2, f6, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f5, f2, f6, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f5, f2, f6, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f5, f2, f6, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f5, f2, f6, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f5, f2, f6, f16 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0x7fbfffff)
li x9, 0xd3b3a49910428593 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f19, 0(x2) # load 0x7f7fffff from memory into f19
li x3, 0x2d741ede26620579 # load x3 with value 0x2d741ede26620579
sw x3, 0(x2) # store 0x2d741ede26620579 in memory
flw f13, 0(x2) # load 0x2d741ede26620579 from memory into f13
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f12, 0(x2) # load 0x7fbfffff from memory into f12
fmsub.s f9, f19, f13, f12, dyn # perform operation
fmsub.s f9, f19, f13, f12, rdn # perform operation
fmsub.s f9, f19, f13, f12, rmm # perform operation
fmsub.s f9, f19, f13, f12, rne # perform operation
fmsub.s f9, f19, f13, f12, rtz # perform operation
fmsub.s f9, f19, f13, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f9, f19, f13, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f9, f19, f13, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f9, f19, f13, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f9, f19, f13, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f9, f19, f13, f12 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0x7ef8654f)
li x24, 0x3cc4b138389e6bc3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f11, 0(x2) # load 0x7f7fffff from memory into f11
li x3, 0x7dec2237c5a70788 # load x3 with value 0x7dec2237c5a70788
sw x3, 0(x2) # store 0x7dec2237c5a70788 in memory
flw f1, 0(x2) # load 0x7dec2237c5a70788 from memory into f1
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f6, 0(x2) # load 0x7ef8654f from memory into f6
fmsub.s f24, f11, f1, f6, dyn # perform operation
fmsub.s f24, f11, f1, f6, rdn # perform operation
fmsub.s f24, f11, f1, f6, rmm # perform operation
fmsub.s f24, f11, f1, f6, rne # perform operation
fmsub.s f24, f11, f1, f6, rtz # perform operation
fmsub.s f24, f11, f1, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f24, f11, f1, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f24, f11, f1, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f24, f11, f1, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f24, f11, f1, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f24, f11, f1, f6 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0x813d9ab0)
li x28, 0xb0b7ce0c820a800b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f31, 0(x2) # load 0x7f7fffff from memory into f31
li x3, 0x7dd1adec8aa2a344 # load x3 with value 0x7dd1adec8aa2a344
sw x3, 0(x2) # store 0x7dd1adec8aa2a344 in memory
flw f18, 0(x2) # load 0x7dd1adec8aa2a344 from memory into f18
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f3, 0(x2) # load 0x813d9ab0 from memory into f3
fmsub.s f28, f31, f18, f3, dyn # perform operation
fmsub.s f28, f31, f18, f3, rdn # perform operation
fmsub.s f28, f31, f18, f3, rmm # perform operation
fmsub.s f28, f31, f18, f3, rne # perform operation
fmsub.s f28, f31, f18, f3, rtz # perform operation
fmsub.s f28, f31, f18, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f28, f31, f18, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f28, f31, f18, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f28, f31, f18, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f28, f31, f18, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f28, f31, f18, f3 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0x0)
li x17, 0xe93774c7589ad789 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f3, 0(x2) # load 0xff7fffff from memory into f3
li x3, 0x56a5f56fe6984cc2 # load x3 with value 0x56a5f56fe6984cc2
sw x3, 0(x2) # store 0x56a5f56fe6984cc2 in memory
flw f12, 0(x2) # load 0x56a5f56fe6984cc2 from memory into f12
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f25, 0(x2) # load 0x00000000 from memory into f25
fmsub.s f17, f3, f12, f25, dyn # perform operation
fmsub.s f17, f3, f12, f25, rdn # perform operation
fmsub.s f17, f3, f12, f25, rmm # perform operation
fmsub.s f17, f3, f12, f25, rne # perform operation
fmsub.s f17, f3, f12, f25, rtz # perform operation
fmsub.s f17, f3, f12, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f17, f3, f12, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f17, f3, f12, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f17, f3, f12, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f17, f3, f12, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f17, f3, f12, f25 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0x80000000)
li x28, 0xdc9d9ec948a2fd9c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f13, 0(x2) # load 0xff7fffff from memory into f13
li x3, 0xab4a7338aba9da36 # load x3 with value 0xab4a7338aba9da36
sw x3, 0(x2) # store 0xab4a7338aba9da36 in memory
flw f22, 0(x2) # load 0xab4a7338aba9da36 from memory into f22
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f10, 0(x2) # load 0x80000000 from memory into f10
fmsub.s f28, f13, f22, f10, dyn # perform operation
fmsub.s f28, f13, f22, f10, rdn # perform operation
fmsub.s f28, f13, f22, f10, rmm # perform operation
fmsub.s f28, f13, f22, f10, rne # perform operation
fmsub.s f28, f13, f22, f10, rtz # perform operation
fmsub.s f28, f13, f22, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f28, f13, f22, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f28, f13, f22, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f28, f13, f22, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f28, f13, f22, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f28, f13, f22, f10 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0x3f800000)
li x31, 0xa173bc527bc4d657 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f21, 0(x2) # load 0xff7fffff from memory into f21
li x3, 0x6356bca6e44b71bf # load x3 with value 0x6356bca6e44b71bf
sw x3, 0(x2) # store 0x6356bca6e44b71bf in memory
flw f7, 0(x2) # load 0x6356bca6e44b71bf from memory into f7
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f22, 0(x2) # load 0x3f800000 from memory into f22
fmsub.s f31, f21, f7, f22, dyn # perform operation
fmsub.s f31, f21, f7, f22, rdn # perform operation
fmsub.s f31, f21, f7, f22, rmm # perform operation
fmsub.s f31, f21, f7, f22, rne # perform operation
fmsub.s f31, f21, f7, f22, rtz # perform operation
fmsub.s f31, f21, f7, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f31, f21, f7, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f31, f21, f7, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f31, f21, f7, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f31, f21, f7, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f31, f21, f7, f22 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0xbf800000)
li x20, 0x9cf453bec1873582 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f31, 0(x2) # load 0xff7fffff from memory into f31
li x3, 0x8623b65cc713b6cc # load x3 with value 0x8623b65cc713b6cc
sw x3, 0(x2) # store 0x8623b65cc713b6cc in memory
flw f8, 0(x2) # load 0x8623b65cc713b6cc from memory into f8
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f25, 0(x2) # load 0xbf800000 from memory into f25
fmsub.s f20, f31, f8, f25, dyn # perform operation
fmsub.s f20, f31, f8, f25, rdn # perform operation
fmsub.s f20, f31, f8, f25, rmm # perform operation
fmsub.s f20, f31, f8, f25, rne # perform operation
fmsub.s f20, f31, f8, f25, rtz # perform operation
fmsub.s f20, f31, f8, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f20, f31, f8, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f20, f31, f8, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f20, f31, f8, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f20, f31, f8, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f20, f31, f8, f25 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0x3fc00000)
li x20, 0xd31b0441b5e6ca1e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f7, 0(x2) # load 0xff7fffff from memory into f7
li x3, 0x81b4c773efd60d89 # load x3 with value 0x81b4c773efd60d89
sw x3, 0(x2) # store 0x81b4c773efd60d89 in memory
flw f21, 0(x2) # load 0x81b4c773efd60d89 from memory into f21
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f31, 0(x2) # load 0x3fc00000 from memory into f31
fmsub.s f20, f7, f21, f31, dyn # perform operation
fmsub.s f20, f7, f21, f31, rdn # perform operation
fmsub.s f20, f7, f21, f31, rmm # perform operation
fmsub.s f20, f7, f21, f31, rne # perform operation
fmsub.s f20, f7, f21, f31, rtz # perform operation
fmsub.s f20, f7, f21, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f20, f7, f21, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f20, f7, f21, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f20, f7, f21, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f20, f7, f21, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f20, f7, f21, f31 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0xbfc00000)
li x8, 0x525472e6fbf0b34e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f15, 0(x2) # load 0xff7fffff from memory into f15
li x3, 0x60778a4672184c02 # load x3 with value 0x60778a4672184c02
sw x3, 0(x2) # store 0x60778a4672184c02 in memory
flw f6, 0(x2) # load 0x60778a4672184c02 from memory into f6
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f11, 0(x2) # load 0xbfc00000 from memory into f11
fmsub.s f8, f15, f6, f11, dyn # perform operation
fmsub.s f8, f15, f6, f11, rdn # perform operation
fmsub.s f8, f15, f6, f11, rmm # perform operation
fmsub.s f8, f15, f6, f11, rne # perform operation
fmsub.s f8, f15, f6, f11, rtz # perform operation
fmsub.s f8, f15, f6, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f8, f15, f6, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f8, f15, f6, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f8, f15, f6, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f8, f15, f6, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f8, f15, f6, f11 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0x40000000)
li x25, 0xced9a69c24e14319 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f3, 0(x2) # load 0xff7fffff from memory into f3
li x3, 0x24670ead3cb7c908 # load x3 with value 0x24670ead3cb7c908
sw x3, 0(x2) # store 0x24670ead3cb7c908 in memory
flw f6, 0(x2) # load 0x24670ead3cb7c908 from memory into f6
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f14, 0(x2) # load 0x40000000 from memory into f14
fmsub.s f25, f3, f6, f14, dyn # perform operation
fmsub.s f25, f3, f6, f14, rdn # perform operation
fmsub.s f25, f3, f6, f14, rmm # perform operation
fmsub.s f25, f3, f6, f14, rne # perform operation
fmsub.s f25, f3, f6, f14, rtz # perform operation
fmsub.s f25, f3, f6, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f25, f3, f6, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f25, f3, f6, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f25, f3, f6, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f25, f3, f6, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f25, f3, f6, f14 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0xc0000000)
li x31, 0x6492f3fec6fc347b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f15, 0(x2) # load 0xff7fffff from memory into f15
li x3, 0xba8be09a641d6302 # load x3 with value 0xba8be09a641d6302
sw x3, 0(x2) # store 0xba8be09a641d6302 in memory
flw f13, 0(x2) # load 0xba8be09a641d6302 from memory into f13
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f2, 0(x2) # load 0xc0000000 from memory into f2
fmsub.s f31, f15, f13, f2, dyn # perform operation
fmsub.s f31, f15, f13, f2, rdn # perform operation
fmsub.s f31, f15, f13, f2, rmm # perform operation
fmsub.s f31, f15, f13, f2, rne # perform operation
fmsub.s f31, f15, f13, f2, rtz # perform operation
fmsub.s f31, f15, f13, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f31, f15, f13, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f31, f15, f13, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f31, f15, f13, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f31, f15, f13, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f31, f15, f13, f2 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0x800000)
li x17, 0xa00fc1dd774bc332 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f14, 0(x2) # load 0xff7fffff from memory into f14
li x3, 0xa4266e17d14ad2ae # load x3 with value 0xa4266e17d14ad2ae
sw x3, 0(x2) # store 0xa4266e17d14ad2ae in memory
flw f20, 0(x2) # load 0xa4266e17d14ad2ae from memory into f20
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f19, 0(x2) # load 0x00800000 from memory into f19
fmsub.s f17, f14, f20, f19, dyn # perform operation
fmsub.s f17, f14, f20, f19, rdn # perform operation
fmsub.s f17, f14, f20, f19, rmm # perform operation
fmsub.s f17, f14, f20, f19, rne # perform operation
fmsub.s f17, f14, f20, f19, rtz # perform operation
fmsub.s f17, f14, f20, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f17, f14, f20, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f17, f14, f20, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f17, f14, f20, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f17, f14, f20, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f17, f14, f20, f19 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0x80800000)
li x19, 0xe521bd48bc0ee2bb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f20, 0(x2) # load 0xff7fffff from memory into f20
li x3, 0xa649d33bb56acb3c # load x3 with value 0xa649d33bb56acb3c
sw x3, 0(x2) # store 0xa649d33bb56acb3c in memory
flw f22, 0(x2) # load 0xa649d33bb56acb3c from memory into f22
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f17, 0(x2) # load 0x80800000 from memory into f17
fmsub.s f19, f20, f22, f17, dyn # perform operation
fmsub.s f19, f20, f22, f17, rdn # perform operation
fmsub.s f19, f20, f22, f17, rmm # perform operation
fmsub.s f19, f20, f22, f17, rne # perform operation
fmsub.s f19, f20, f22, f17, rtz # perform operation
fmsub.s f19, f20, f22, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f19, f20, f22, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f19, f20, f22, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f19, f20, f22, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f19, f20, f22, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f19, f20, f22, f17 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0x7f7fffff)
li x11, 0xe870f3ed7227c0e0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f30, 0(x2) # load 0xff7fffff from memory into f30
li x3, 0x1a379f1e9c5b9fa2 # load x3 with value 0x1a379f1e9c5b9fa2
sw x3, 0(x2) # store 0x1a379f1e9c5b9fa2 in memory
flw f21, 0(x2) # load 0x1a379f1e9c5b9fa2 from memory into f21
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f31, 0(x2) # load 0x7f7fffff from memory into f31
fmsub.s f11, f30, f21, f31, dyn # perform operation
fmsub.s f11, f30, f21, f31, rdn # perform operation
fmsub.s f11, f30, f21, f31, rmm # perform operation
fmsub.s f11, f30, f21, f31, rne # perform operation
fmsub.s f11, f30, f21, f31, rtz # perform operation
fmsub.s f11, f30, f21, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f11, f30, f21, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f11, f30, f21, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f11, f30, f21, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f11, f30, f21, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f11, f30, f21, f31 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0xff7fffff)
li x22, 0xe31d9ea32991b395 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f26, 0(x2) # load 0xff7fffff from memory into f26
li x3, 0x32c56e64d89ccba3 # load x3 with value 0x32c56e64d89ccba3
sw x3, 0(x2) # store 0x32c56e64d89ccba3 in memory
flw f6, 0(x2) # load 0x32c56e64d89ccba3 from memory into f6
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f21, 0(x2) # load 0xff7fffff from memory into f21
fmsub.s f22, f26, f6, f21, dyn # perform operation
fmsub.s f22, f26, f6, f21, rdn # perform operation
fmsub.s f22, f26, f6, f21, rmm # perform operation
fmsub.s f22, f26, f6, f21, rne # perform operation
fmsub.s f22, f26, f6, f21, rtz # perform operation
fmsub.s f22, f26, f6, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f22, f26, f6, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f22, f26, f6, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f22, f26, f6, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f22, f26, f6, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f22, f26, f6, f21 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0x7fffff)
li x14, 0x8f222b901be8e597 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f12, 0(x2) # load 0xff7fffff from memory into f12
li x3, 0xc379558a63983c0a # load x3 with value 0xc379558a63983c0a
sw x3, 0(x2) # store 0xc379558a63983c0a in memory
flw f19, 0(x2) # load 0xc379558a63983c0a from memory into f19
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f3, 0(x2) # load 0x007fffff from memory into f3
fmsub.s f14, f12, f19, f3, dyn # perform operation
fmsub.s f14, f12, f19, f3, rdn # perform operation
fmsub.s f14, f12, f19, f3, rmm # perform operation
fmsub.s f14, f12, f19, f3, rne # perform operation
fmsub.s f14, f12, f19, f3, rtz # perform operation
fmsub.s f14, f12, f19, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f14, f12, f19, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f14, f12, f19, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f14, f12, f19, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f14, f12, f19, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f14, f12, f19, f3 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0x807fffff)
li x8, 0x86d91ab72e52597b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f25, 0(x2) # load 0xff7fffff from memory into f25
li x3, 0xcfe6eb3fb2feb56 # load x3 with value 0xcfe6eb3fb2feb56
sw x3, 0(x2) # store 0xcfe6eb3fb2feb56 in memory
flw f2, 0(x2) # load 0xcfe6eb3fb2feb56 from memory into f2
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f21, 0(x2) # load 0x807fffff from memory into f21
fmsub.s f8, f25, f2, f21, dyn # perform operation
fmsub.s f8, f25, f2, f21, rdn # perform operation
fmsub.s f8, f25, f2, f21, rmm # perform operation
fmsub.s f8, f25, f2, f21, rne # perform operation
fmsub.s f8, f25, f2, f21, rtz # perform operation
fmsub.s f8, f25, f2, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f8, f25, f2, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f8, f25, f2, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f8, f25, f2, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f8, f25, f2, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f8, f25, f2, f21 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0x400000)
li x30, 0x21a40cd2198b3f23 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f21, 0(x2) # load 0xff7fffff from memory into f21
li x3, 0x4977db321969b3ec # load x3 with value 0x4977db321969b3ec
sw x3, 0(x2) # store 0x4977db321969b3ec in memory
flw f1, 0(x2) # load 0x4977db321969b3ec from memory into f1
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f2, 0(x2) # load 0x00400000 from memory into f2
fmsub.s f30, f21, f1, f2, dyn # perform operation
fmsub.s f30, f21, f1, f2, rdn # perform operation
fmsub.s f30, f21, f1, f2, rmm # perform operation
fmsub.s f30, f21, f1, f2, rne # perform operation
fmsub.s f30, f21, f1, f2, rtz # perform operation
fmsub.s f30, f21, f1, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f30, f21, f1, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f30, f21, f1, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f30, f21, f1, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f30, f21, f1, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f30, f21, f1, f2 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0x80400000)
li x12, 0x0e4c1009c9ef8717 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f17, 0(x2) # load 0xff7fffff from memory into f17
li x3, 0x5c41fc86fa70b47d # load x3 with value 0x5c41fc86fa70b47d
sw x3, 0(x2) # store 0x5c41fc86fa70b47d in memory
flw f28, 0(x2) # load 0x5c41fc86fa70b47d from memory into f28
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f19, 0(x2) # load 0x80400000 from memory into f19
fmsub.s f12, f17, f28, f19, dyn # perform operation
fmsub.s f12, f17, f28, f19, rdn # perform operation
fmsub.s f12, f17, f28, f19, rmm # perform operation
fmsub.s f12, f17, f28, f19, rne # perform operation
fmsub.s f12, f17, f28, f19, rtz # perform operation
fmsub.s f12, f17, f28, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f12, f17, f28, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f12, f17, f28, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f12, f17, f28, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f12, f17, f28, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f12, f17, f28, f19 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0x1)
li x23, 0xa05495dcdf0db53e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f25, 0(x2) # load 0xff7fffff from memory into f25
li x3, 0x43798215e1385c5c # load x3 with value 0x43798215e1385c5c
sw x3, 0(x2) # store 0x43798215e1385c5c in memory
flw f7, 0(x2) # load 0x43798215e1385c5c from memory into f7
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f19, 0(x2) # load 0x00000001 from memory into f19
fmsub.s f23, f25, f7, f19, dyn # perform operation
fmsub.s f23, f25, f7, f19, rdn # perform operation
fmsub.s f23, f25, f7, f19, rmm # perform operation
fmsub.s f23, f25, f7, f19, rne # perform operation
fmsub.s f23, f25, f7, f19, rtz # perform operation
fmsub.s f23, f25, f7, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f23, f25, f7, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f23, f25, f7, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f23, f25, f7, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f23, f25, f7, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f23, f25, f7, f19 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0x80000001)
li x23, 0x1d7e1ae3d52d56a1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f2, 0(x2) # load 0xff7fffff from memory into f2
li x3, 0x85a27d2555a2b714 # load x3 with value 0x85a27d2555a2b714
sw x3, 0(x2) # store 0x85a27d2555a2b714 in memory
flw f26, 0(x2) # load 0x85a27d2555a2b714 from memory into f26
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f1, 0(x2) # load 0x80000001 from memory into f1
fmsub.s f23, f2, f26, f1, dyn # perform operation
fmsub.s f23, f2, f26, f1, rdn # perform operation
fmsub.s f23, f2, f26, f1, rmm # perform operation
fmsub.s f23, f2, f26, f1, rne # perform operation
fmsub.s f23, f2, f26, f1, rtz # perform operation
fmsub.s f23, f2, f26, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f23, f2, f26, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f23, f2, f26, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f23, f2, f26, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f23, f2, f26, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f23, f2, f26, f1 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0x7f800000)
li x3, 0xd7e65e5ad75311a7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f5, 0(x2) # load 0xff7fffff from memory into f5
li x3, 0x580b23badcf61caa # load x3 with value 0x580b23badcf61caa
sw x3, 0(x2) # store 0x580b23badcf61caa in memory
flw f26, 0(x2) # load 0x580b23badcf61caa from memory into f26
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f13, 0(x2) # load 0x7f800000 from memory into f13
fmsub.s f3, f5, f26, f13, dyn # perform operation
fmsub.s f3, f5, f26, f13, rdn # perform operation
fmsub.s f3, f5, f26, f13, rmm # perform operation
fmsub.s f3, f5, f26, f13, rne # perform operation
fmsub.s f3, f5, f26, f13, rtz # perform operation
fmsub.s f3, f5, f26, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f3, f5, f26, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f3, f5, f26, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f3, f5, f26, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f3, f5, f26, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f3, f5, f26, f13 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0xff800000)
li x31, 0x05434e363e997b0d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f18, 0(x2) # load 0xff7fffff from memory into f18
li x3, 0x5fa025361166b641 # load x3 with value 0x5fa025361166b641
sw x3, 0(x2) # store 0x5fa025361166b641 in memory
flw f27, 0(x2) # load 0x5fa025361166b641 from memory into f27
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f9, 0(x2) # load 0xff800000 from memory into f9
fmsub.s f31, f18, f27, f9, dyn # perform operation
fmsub.s f31, f18, f27, f9, rdn # perform operation
fmsub.s f31, f18, f27, f9, rmm # perform operation
fmsub.s f31, f18, f27, f9, rne # perform operation
fmsub.s f31, f18, f27, f9, rtz # perform operation
fmsub.s f31, f18, f27, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f31, f18, f27, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f31, f18, f27, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f31, f18, f27, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f31, f18, f27, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f31, f18, f27, f9 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0x7fc00000)
li x28, 0x53befae8d11487c9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f6, 0(x2) # load 0xff7fffff from memory into f6
li x3, 0xa80b590e057dc34d # load x3 with value 0xa80b590e057dc34d
sw x3, 0(x2) # store 0xa80b590e057dc34d in memory
flw f1, 0(x2) # load 0xa80b590e057dc34d from memory into f1
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f14, 0(x2) # load 0x7fc00000 from memory into f14
fmsub.s f28, f6, f1, f14, dyn # perform operation
fmsub.s f28, f6, f1, f14, rdn # perform operation
fmsub.s f28, f6, f1, f14, rmm # perform operation
fmsub.s f28, f6, f1, f14, rne # perform operation
fmsub.s f28, f6, f1, f14, rtz # perform operation
fmsub.s f28, f6, f1, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f28, f6, f1, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f28, f6, f1, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f28, f6, f1, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f28, f6, f1, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f28, f6, f1, f14 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0x7fffffff)
li x23, 0xd7b02117009ca179 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f17, 0(x2) # load 0xff7fffff from memory into f17
li x3, 0xd9d589921dae241e # load x3 with value 0xd9d589921dae241e
sw x3, 0(x2) # store 0xd9d589921dae241e in memory
flw f11, 0(x2) # load 0xd9d589921dae241e from memory into f11
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f1, 0(x2) # load 0x7fffffff from memory into f1
fmsub.s f23, f17, f11, f1, dyn # perform operation
fmsub.s f23, f17, f11, f1, rdn # perform operation
fmsub.s f23, f17, f11, f1, rmm # perform operation
fmsub.s f23, f17, f11, f1, rne # perform operation
fmsub.s f23, f17, f11, f1, rtz # perform operation
fmsub.s f23, f17, f11, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f23, f17, f11, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f23, f17, f11, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f23, f17, f11, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f23, f17, f11, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f23, f17, f11, f1 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0x7f800001)
li x22, 0xf73fec8bc420920e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f3, 0(x2) # load 0xff7fffff from memory into f3
li x3, 0xc30e0f52f6aae54a # load x3 with value 0xc30e0f52f6aae54a
sw x3, 0(x2) # store 0xc30e0f52f6aae54a in memory
flw f26, 0(x2) # load 0xc30e0f52f6aae54a from memory into f26
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f25, 0(x2) # load 0x7f800001 from memory into f25
fmsub.s f22, f3, f26, f25, dyn # perform operation
fmsub.s f22, f3, f26, f25, rdn # perform operation
fmsub.s f22, f3, f26, f25, rmm # perform operation
fmsub.s f22, f3, f26, f25, rne # perform operation
fmsub.s f22, f3, f26, f25, rtz # perform operation
fmsub.s f22, f3, f26, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f22, f3, f26, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f22, f3, f26, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f22, f3, f26, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f22, f3, f26, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f22, f3, f26, f25 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0x7fbfffff)
li x18, 0x6ab72775e52a079b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f23, 0(x2) # load 0xff7fffff from memory into f23
li x3, 0xe92e7b43626e2c5e # load x3 with value 0xe92e7b43626e2c5e
sw x3, 0(x2) # store 0xe92e7b43626e2c5e in memory
flw f9, 0(x2) # load 0xe92e7b43626e2c5e from memory into f9
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f2, 0(x2) # load 0x7fbfffff from memory into f2
fmsub.s f18, f23, f9, f2, dyn # perform operation
fmsub.s f18, f23, f9, f2, rdn # perform operation
fmsub.s f18, f23, f9, f2, rmm # perform operation
fmsub.s f18, f23, f9, f2, rne # perform operation
fmsub.s f18, f23, f9, f2, rtz # perform operation
fmsub.s f18, f23, f9, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f18, f23, f9, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f18, f23, f9, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f18, f23, f9, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f18, f23, f9, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f18, f23, f9, f2 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0x7ef8654f)
li x8, 0xdea13a3ee57db789 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f3, 0(x2) # load 0xff7fffff from memory into f3
li x3, 0x2e97dde7e4cee5e0 # load x3 with value 0x2e97dde7e4cee5e0
sw x3, 0(x2) # store 0x2e97dde7e4cee5e0 in memory
flw f22, 0(x2) # load 0x2e97dde7e4cee5e0 from memory into f22
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f5, 0(x2) # load 0x7ef8654f from memory into f5
fmsub.s f8, f3, f22, f5, dyn # perform operation
fmsub.s f8, f3, f22, f5, rdn # perform operation
fmsub.s f8, f3, f22, f5, rmm # perform operation
fmsub.s f8, f3, f22, f5, rne # perform operation
fmsub.s f8, f3, f22, f5, rtz # perform operation
fmsub.s f8, f3, f22, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f8, f3, f22, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f8, f3, f22, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f8, f3, f22, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f8, f3, f22, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f8, f3, f22, f5 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0x813d9ab0)
li x23, 0x9df6d4b25d7a8ac4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f19, 0(x2) # load 0xff7fffff from memory into f19
li x3, 0x8362fd39720d372b # load x3 with value 0x8362fd39720d372b
sw x3, 0(x2) # store 0x8362fd39720d372b in memory
flw f8, 0(x2) # load 0x8362fd39720d372b from memory into f8
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f26, 0(x2) # load 0x813d9ab0 from memory into f26
fmsub.s f23, f19, f8, f26, dyn # perform operation
fmsub.s f23, f19, f8, f26, rdn # perform operation
fmsub.s f23, f19, f8, f26, rmm # perform operation
fmsub.s f23, f19, f8, f26, rne # perform operation
fmsub.s f23, f19, f8, f26, rtz # perform operation
fmsub.s f23, f19, f8, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f23, f19, f8, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f23, f19, f8, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f23, f19, f8, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f23, f19, f8, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f23, f19, f8, f26 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0x0)
li x30, 0x0ad86735d8a53923 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f16, 0(x2) # load 0x007fffff from memory into f16
li x3, 0xdd10c746d626df56 # load x3 with value 0xdd10c746d626df56
sw x3, 0(x2) # store 0xdd10c746d626df56 in memory
flw f8, 0(x2) # load 0xdd10c746d626df56 from memory into f8
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f23, 0(x2) # load 0x00000000 from memory into f23
fmsub.s f30, f16, f8, f23, dyn # perform operation
fmsub.s f30, f16, f8, f23, rdn # perform operation
fmsub.s f30, f16, f8, f23, rmm # perform operation
fmsub.s f30, f16, f8, f23, rne # perform operation
fmsub.s f30, f16, f8, f23, rtz # perform operation
fmsub.s f30, f16, f8, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f30, f16, f8, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f30, f16, f8, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f30, f16, f8, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f30, f16, f8, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f30, f16, f8, f23 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0x80000000)
li x22, 0xe6672463314d4b48 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f4, 0(x2) # load 0x007fffff from memory into f4
li x3, 0x9f1df6f6e07413fe # load x3 with value 0x9f1df6f6e07413fe
sw x3, 0(x2) # store 0x9f1df6f6e07413fe in memory
flw f25, 0(x2) # load 0x9f1df6f6e07413fe from memory into f25
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f17, 0(x2) # load 0x80000000 from memory into f17
fmsub.s f22, f4, f25, f17, dyn # perform operation
fmsub.s f22, f4, f25, f17, rdn # perform operation
fmsub.s f22, f4, f25, f17, rmm # perform operation
fmsub.s f22, f4, f25, f17, rne # perform operation
fmsub.s f22, f4, f25, f17, rtz # perform operation
fmsub.s f22, f4, f25, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f22, f4, f25, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f22, f4, f25, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f22, f4, f25, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f22, f4, f25, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f22, f4, f25, f17 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0x3f800000)
li x6, 0xa35ffa9de6e74fad # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f3, 0(x2) # load 0x007fffff from memory into f3
li x3, 0x1c682ede294b219f # load x3 with value 0x1c682ede294b219f
sw x3, 0(x2) # store 0x1c682ede294b219f in memory
flw f9, 0(x2) # load 0x1c682ede294b219f from memory into f9
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f16, 0(x2) # load 0x3f800000 from memory into f16
fmsub.s f6, f3, f9, f16, dyn # perform operation
fmsub.s f6, f3, f9, f16, rdn # perform operation
fmsub.s f6, f3, f9, f16, rmm # perform operation
fmsub.s f6, f3, f9, f16, rne # perform operation
fmsub.s f6, f3, f9, f16, rtz # perform operation
fmsub.s f6, f3, f9, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f6, f3, f9, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f6, f3, f9, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f6, f3, f9, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f6, f3, f9, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f6, f3, f9, f16 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0xbf800000)
li x5, 0xe22e016845f27a54 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f24, 0(x2) # load 0x007fffff from memory into f24
li x3, 0x4aec556413c53823 # load x3 with value 0x4aec556413c53823
sw x3, 0(x2) # store 0x4aec556413c53823 in memory
flw f4, 0(x2) # load 0x4aec556413c53823 from memory into f4
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f16, 0(x2) # load 0xbf800000 from memory into f16
fmsub.s f5, f24, f4, f16, dyn # perform operation
fmsub.s f5, f24, f4, f16, rdn # perform operation
fmsub.s f5, f24, f4, f16, rmm # perform operation
fmsub.s f5, f24, f4, f16, rne # perform operation
fmsub.s f5, f24, f4, f16, rtz # perform operation
fmsub.s f5, f24, f4, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f5, f24, f4, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f5, f24, f4, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f5, f24, f4, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f5, f24, f4, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f5, f24, f4, f16 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0x3fc00000)
li x12, 0x56cd4270cbe3dbbc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f20, 0(x2) # load 0x007fffff from memory into f20
li x3, 0x48ccbf90c08783eb # load x3 with value 0x48ccbf90c08783eb
sw x3, 0(x2) # store 0x48ccbf90c08783eb in memory
flw f13, 0(x2) # load 0x48ccbf90c08783eb from memory into f13
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f31, 0(x2) # load 0x3fc00000 from memory into f31
fmsub.s f12, f20, f13, f31, dyn # perform operation
fmsub.s f12, f20, f13, f31, rdn # perform operation
fmsub.s f12, f20, f13, f31, rmm # perform operation
fmsub.s f12, f20, f13, f31, rne # perform operation
fmsub.s f12, f20, f13, f31, rtz # perform operation
fmsub.s f12, f20, f13, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f12, f20, f13, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f12, f20, f13, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f12, f20, f13, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f12, f20, f13, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f12, f20, f13, f31 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0xbfc00000)
li x2, 0xabb43bad81ec00bc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f26, 0(x2) # load 0x007fffff from memory into f26
li x3, 0xcebf459e8530906 # load x3 with value 0xcebf459e8530906
sw x3, 0(x2) # store 0xcebf459e8530906 in memory
flw f5, 0(x2) # load 0xcebf459e8530906 from memory into f5
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f31, 0(x2) # load 0xbfc00000 from memory into f31
fmsub.s f2, f26, f5, f31, dyn # perform operation
fmsub.s f2, f26, f5, f31, rdn # perform operation
fmsub.s f2, f26, f5, f31, rmm # perform operation
fmsub.s f2, f26, f5, f31, rne # perform operation
fmsub.s f2, f26, f5, f31, rtz # perform operation
fmsub.s f2, f26, f5, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f2, f26, f5, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f2, f26, f5, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f2, f26, f5, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f2, f26, f5, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f2, f26, f5, f31 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0x40000000)
li x4, 0x1e35cd6ba242d3d3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f22, 0(x2) # load 0x007fffff from memory into f22
li x3, 0x88c680b040655e07 # load x3 with value 0x88c680b040655e07
sw x3, 0(x2) # store 0x88c680b040655e07 in memory
flw f13, 0(x2) # load 0x88c680b040655e07 from memory into f13
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f3, 0(x2) # load 0x40000000 from memory into f3
fmsub.s f4, f22, f13, f3, dyn # perform operation
fmsub.s f4, f22, f13, f3, rdn # perform operation
fmsub.s f4, f22, f13, f3, rmm # perform operation
fmsub.s f4, f22, f13, f3, rne # perform operation
fmsub.s f4, f22, f13, f3, rtz # perform operation
fmsub.s f4, f22, f13, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f4, f22, f13, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f4, f22, f13, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f4, f22, f13, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f4, f22, f13, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f4, f22, f13, f3 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0xc0000000)
li x20, 0x9d8fcfd4318f371b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f2, 0(x2) # load 0x007fffff from memory into f2
li x3, 0xbe7c692850441823 # load x3 with value 0xbe7c692850441823
sw x3, 0(x2) # store 0xbe7c692850441823 in memory
flw f12, 0(x2) # load 0xbe7c692850441823 from memory into f12
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f7, 0(x2) # load 0xc0000000 from memory into f7
fmsub.s f20, f2, f12, f7, dyn # perform operation
fmsub.s f20, f2, f12, f7, rdn # perform operation
fmsub.s f20, f2, f12, f7, rmm # perform operation
fmsub.s f20, f2, f12, f7, rne # perform operation
fmsub.s f20, f2, f12, f7, rtz # perform operation
fmsub.s f20, f2, f12, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f20, f2, f12, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f20, f2, f12, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f20, f2, f12, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f20, f2, f12, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f20, f2, f12, f7 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0x800000)
li x30, 0xf26d17d6f676528f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f20, 0(x2) # load 0x007fffff from memory into f20
li x3, 0x5733bfeef22b3901 # load x3 with value 0x5733bfeef22b3901
sw x3, 0(x2) # store 0x5733bfeef22b3901 in memory
flw f13, 0(x2) # load 0x5733bfeef22b3901 from memory into f13
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f12, 0(x2) # load 0x00800000 from memory into f12
fmsub.s f30, f20, f13, f12, dyn # perform operation
fmsub.s f30, f20, f13, f12, rdn # perform operation
fmsub.s f30, f20, f13, f12, rmm # perform operation
fmsub.s f30, f20, f13, f12, rne # perform operation
fmsub.s f30, f20, f13, f12, rtz # perform operation
fmsub.s f30, f20, f13, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f30, f20, f13, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f30, f20, f13, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f30, f20, f13, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f30, f20, f13, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f30, f20, f13, f12 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0x80800000)
li x5, 0x25f0e6755071b669 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f15, 0(x2) # load 0x007fffff from memory into f15
li x3, 0x32966793f108927a # load x3 with value 0x32966793f108927a
sw x3, 0(x2) # store 0x32966793f108927a in memory
flw f12, 0(x2) # load 0x32966793f108927a from memory into f12
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f31, 0(x2) # load 0x80800000 from memory into f31
fmsub.s f5, f15, f12, f31, dyn # perform operation
fmsub.s f5, f15, f12, f31, rdn # perform operation
fmsub.s f5, f15, f12, f31, rmm # perform operation
fmsub.s f5, f15, f12, f31, rne # perform operation
fmsub.s f5, f15, f12, f31, rtz # perform operation
fmsub.s f5, f15, f12, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f5, f15, f12, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f5, f15, f12, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f5, f15, f12, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f5, f15, f12, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f5, f15, f12, f31 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0x7f7fffff)
li x6, 0x4b240860a184e0b5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f3, 0(x2) # load 0x007fffff from memory into f3
li x3, 0x8146109cace989d1 # load x3 with value 0x8146109cace989d1
sw x3, 0(x2) # store 0x8146109cace989d1 in memory
flw f28, 0(x2) # load 0x8146109cace989d1 from memory into f28
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f19, 0(x2) # load 0x7f7fffff from memory into f19
fmsub.s f6, f3, f28, f19, dyn # perform operation
fmsub.s f6, f3, f28, f19, rdn # perform operation
fmsub.s f6, f3, f28, f19, rmm # perform operation
fmsub.s f6, f3, f28, f19, rne # perform operation
fmsub.s f6, f3, f28, f19, rtz # perform operation
fmsub.s f6, f3, f28, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f6, f3, f28, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f6, f3, f28, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f6, f3, f28, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f6, f3, f28, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f6, f3, f28, f19 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0xff7fffff)
li x10, 0x8e359f1e16feccc1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f1, 0(x2) # load 0x007fffff from memory into f1
li x3, 0x6d4f2ccfcda37c68 # load x3 with value 0x6d4f2ccfcda37c68
sw x3, 0(x2) # store 0x6d4f2ccfcda37c68 in memory
flw f6, 0(x2) # load 0x6d4f2ccfcda37c68 from memory into f6
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f5, 0(x2) # load 0xff7fffff from memory into f5
fmsub.s f10, f1, f6, f5, dyn # perform operation
fmsub.s f10, f1, f6, f5, rdn # perform operation
fmsub.s f10, f1, f6, f5, rmm # perform operation
fmsub.s f10, f1, f6, f5, rne # perform operation
fmsub.s f10, f1, f6, f5, rtz # perform operation
fmsub.s f10, f1, f6, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f10, f1, f6, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f10, f1, f6, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f10, f1, f6, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f10, f1, f6, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f10, f1, f6, f5 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0x7fffff)
li x6, 0x532e892086a1ab86 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f17, 0(x2) # load 0x007fffff from memory into f17
li x3, 0x7262b18f610ec732 # load x3 with value 0x7262b18f610ec732
sw x3, 0(x2) # store 0x7262b18f610ec732 in memory
flw f9, 0(x2) # load 0x7262b18f610ec732 from memory into f9
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f16, 0(x2) # load 0x007fffff from memory into f16
fmsub.s f6, f17, f9, f16, dyn # perform operation
fmsub.s f6, f17, f9, f16, rdn # perform operation
fmsub.s f6, f17, f9, f16, rmm # perform operation
fmsub.s f6, f17, f9, f16, rne # perform operation
fmsub.s f6, f17, f9, f16, rtz # perform operation
fmsub.s f6, f17, f9, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f6, f17, f9, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f6, f17, f9, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f6, f17, f9, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f6, f17, f9, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f6, f17, f9, f16 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0x807fffff)
li x22, 0x14dd8519ed705dd9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f2, 0(x2) # load 0x007fffff from memory into f2
li x3, 0x20fda2aa608c5cfb # load x3 with value 0x20fda2aa608c5cfb
sw x3, 0(x2) # store 0x20fda2aa608c5cfb in memory
flw f25, 0(x2) # load 0x20fda2aa608c5cfb from memory into f25
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f21, 0(x2) # load 0x807fffff from memory into f21
fmsub.s f22, f2, f25, f21, dyn # perform operation
fmsub.s f22, f2, f25, f21, rdn # perform operation
fmsub.s f22, f2, f25, f21, rmm # perform operation
fmsub.s f22, f2, f25, f21, rne # perform operation
fmsub.s f22, f2, f25, f21, rtz # perform operation
fmsub.s f22, f2, f25, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f22, f2, f25, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f22, f2, f25, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f22, f2, f25, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f22, f2, f25, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f22, f2, f25, f21 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0x400000)
li x24, 0xba21494ce5e84ef6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f10, 0(x2) # load 0x007fffff from memory into f10
li x3, 0xdb9013824078f6ae # load x3 with value 0xdb9013824078f6ae
sw x3, 0(x2) # store 0xdb9013824078f6ae in memory
flw f23, 0(x2) # load 0xdb9013824078f6ae from memory into f23
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f11, 0(x2) # load 0x00400000 from memory into f11
fmsub.s f24, f10, f23, f11, dyn # perform operation
fmsub.s f24, f10, f23, f11, rdn # perform operation
fmsub.s f24, f10, f23, f11, rmm # perform operation
fmsub.s f24, f10, f23, f11, rne # perform operation
fmsub.s f24, f10, f23, f11, rtz # perform operation
fmsub.s f24, f10, f23, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f24, f10, f23, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f24, f10, f23, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f24, f10, f23, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f24, f10, f23, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f24, f10, f23, f11 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0x80400000)
li x16, 0x96ad087d19f9bc8c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f4, 0(x2) # load 0x007fffff from memory into f4
li x3, 0x3c0e22c79f3083fa # load x3 with value 0x3c0e22c79f3083fa
sw x3, 0(x2) # store 0x3c0e22c79f3083fa in memory
flw f26, 0(x2) # load 0x3c0e22c79f3083fa from memory into f26
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f9, 0(x2) # load 0x80400000 from memory into f9
fmsub.s f16, f4, f26, f9, dyn # perform operation
fmsub.s f16, f4, f26, f9, rdn # perform operation
fmsub.s f16, f4, f26, f9, rmm # perform operation
fmsub.s f16, f4, f26, f9, rne # perform operation
fmsub.s f16, f4, f26, f9, rtz # perform operation
fmsub.s f16, f4, f26, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f16, f4, f26, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f16, f4, f26, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f16, f4, f26, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f16, f4, f26, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f16, f4, f26, f9 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0x1)
li x5, 0x69d693521c6cab04 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f22, 0(x2) # load 0x007fffff from memory into f22
li x3, 0xc77dfbccef93d2a # load x3 with value 0xc77dfbccef93d2a
sw x3, 0(x2) # store 0xc77dfbccef93d2a in memory
flw f3, 0(x2) # load 0xc77dfbccef93d2a from memory into f3
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f19, 0(x2) # load 0x00000001 from memory into f19
fmsub.s f5, f22, f3, f19, dyn # perform operation
fmsub.s f5, f22, f3, f19, rdn # perform operation
fmsub.s f5, f22, f3, f19, rmm # perform operation
fmsub.s f5, f22, f3, f19, rne # perform operation
fmsub.s f5, f22, f3, f19, rtz # perform operation
fmsub.s f5, f22, f3, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f5, f22, f3, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f5, f22, f3, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f5, f22, f3, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f5, f22, f3, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f5, f22, f3, f19 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0x80000001)
li x29, 0xf2943349b78a6c2d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f20, 0(x2) # load 0x007fffff from memory into f20
li x3, 0xa2004717b6d9cc38 # load x3 with value 0xa2004717b6d9cc38
sw x3, 0(x2) # store 0xa2004717b6d9cc38 in memory
flw f17, 0(x2) # load 0xa2004717b6d9cc38 from memory into f17
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f2, 0(x2) # load 0x80000001 from memory into f2
fmsub.s f29, f20, f17, f2, dyn # perform operation
fmsub.s f29, f20, f17, f2, rdn # perform operation
fmsub.s f29, f20, f17, f2, rmm # perform operation
fmsub.s f29, f20, f17, f2, rne # perform operation
fmsub.s f29, f20, f17, f2, rtz # perform operation
fmsub.s f29, f20, f17, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f29, f20, f17, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f29, f20, f17, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f29, f20, f17, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f29, f20, f17, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f29, f20, f17, f2 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0x7f800000)
li x15, 0x3caff1f2d5f9e74e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f12, 0(x2) # load 0x007fffff from memory into f12
li x3, 0x4297a6afa27b77b # load x3 with value 0x4297a6afa27b77b
sw x3, 0(x2) # store 0x4297a6afa27b77b in memory
flw f21, 0(x2) # load 0x4297a6afa27b77b from memory into f21
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f27, 0(x2) # load 0x7f800000 from memory into f27
fmsub.s f15, f12, f21, f27, dyn # perform operation
fmsub.s f15, f12, f21, f27, rdn # perform operation
fmsub.s f15, f12, f21, f27, rmm # perform operation
fmsub.s f15, f12, f21, f27, rne # perform operation
fmsub.s f15, f12, f21, f27, rtz # perform operation
fmsub.s f15, f12, f21, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f15, f12, f21, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f15, f12, f21, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f15, f12, f21, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f15, f12, f21, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f15, f12, f21, f27 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0xff800000)
li x22, 0xe4511b5585b14441 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f3, 0(x2) # load 0x007fffff from memory into f3
li x3, 0x101d937b12538d54 # load x3 with value 0x101d937b12538d54
sw x3, 0(x2) # store 0x101d937b12538d54 in memory
flw f11, 0(x2) # load 0x101d937b12538d54 from memory into f11
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f9, 0(x2) # load 0xff800000 from memory into f9
fmsub.s f22, f3, f11, f9, dyn # perform operation
fmsub.s f22, f3, f11, f9, rdn # perform operation
fmsub.s f22, f3, f11, f9, rmm # perform operation
fmsub.s f22, f3, f11, f9, rne # perform operation
fmsub.s f22, f3, f11, f9, rtz # perform operation
fmsub.s f22, f3, f11, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f22, f3, f11, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f22, f3, f11, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f22, f3, f11, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f22, f3, f11, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f22, f3, f11, f9 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0x7fc00000)
li x25, 0x7df94cef3bbb90a9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f9, 0(x2) # load 0x007fffff from memory into f9
li x3, 0x25096a55cca88a15 # load x3 with value 0x25096a55cca88a15
sw x3, 0(x2) # store 0x25096a55cca88a15 in memory
flw f21, 0(x2) # load 0x25096a55cca88a15 from memory into f21
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f7, 0(x2) # load 0x7fc00000 from memory into f7
fmsub.s f25, f9, f21, f7, dyn # perform operation
fmsub.s f25, f9, f21, f7, rdn # perform operation
fmsub.s f25, f9, f21, f7, rmm # perform operation
fmsub.s f25, f9, f21, f7, rne # perform operation
fmsub.s f25, f9, f21, f7, rtz # perform operation
fmsub.s f25, f9, f21, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f25, f9, f21, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f25, f9, f21, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f25, f9, f21, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f25, f9, f21, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f25, f9, f21, f7 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0x7fffffff)
li x29, 0xf7e373faaddb3e88 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f17, 0(x2) # load 0x007fffff from memory into f17
li x3, 0xbd7a5f7ee32b8046 # load x3 with value 0xbd7a5f7ee32b8046
sw x3, 0(x2) # store 0xbd7a5f7ee32b8046 in memory
flw f20, 0(x2) # load 0xbd7a5f7ee32b8046 from memory into f20
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f12, 0(x2) # load 0x7fffffff from memory into f12
fmsub.s f29, f17, f20, f12, dyn # perform operation
fmsub.s f29, f17, f20, f12, rdn # perform operation
fmsub.s f29, f17, f20, f12, rmm # perform operation
fmsub.s f29, f17, f20, f12, rne # perform operation
fmsub.s f29, f17, f20, f12, rtz # perform operation
fmsub.s f29, f17, f20, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f29, f17, f20, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f29, f17, f20, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f29, f17, f20, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f29, f17, f20, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f29, f17, f20, f12 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0x7f800001)
li x19, 0xac7645d24c511873 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f16, 0(x2) # load 0x007fffff from memory into f16
li x3, 0x27618fabad449bac # load x3 with value 0x27618fabad449bac
sw x3, 0(x2) # store 0x27618fabad449bac in memory
flw f4, 0(x2) # load 0x27618fabad449bac from memory into f4
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f21, 0(x2) # load 0x7f800001 from memory into f21
fmsub.s f19, f16, f4, f21, dyn # perform operation
fmsub.s f19, f16, f4, f21, rdn # perform operation
fmsub.s f19, f16, f4, f21, rmm # perform operation
fmsub.s f19, f16, f4, f21, rne # perform operation
fmsub.s f19, f16, f4, f21, rtz # perform operation
fmsub.s f19, f16, f4, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f19, f16, f4, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f19, f16, f4, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f19, f16, f4, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f19, f16, f4, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f19, f16, f4, f21 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0x7fbfffff)
li x10, 0x80a18ae214281822 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f20, 0(x2) # load 0x007fffff from memory into f20
li x3, 0xc57905dd4d3e33f0 # load x3 with value 0xc57905dd4d3e33f0
sw x3, 0(x2) # store 0xc57905dd4d3e33f0 in memory
flw f21, 0(x2) # load 0xc57905dd4d3e33f0 from memory into f21
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f28, 0(x2) # load 0x7fbfffff from memory into f28
fmsub.s f10, f20, f21, f28, dyn # perform operation
fmsub.s f10, f20, f21, f28, rdn # perform operation
fmsub.s f10, f20, f21, f28, rmm # perform operation
fmsub.s f10, f20, f21, f28, rne # perform operation
fmsub.s f10, f20, f21, f28, rtz # perform operation
fmsub.s f10, f20, f21, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f10, f20, f21, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f10, f20, f21, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f10, f20, f21, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f10, f20, f21, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f10, f20, f21, f28 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0x7ef8654f)
li x10, 0xafdaef1df5402877 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f27, 0(x2) # load 0x007fffff from memory into f27
li x3, 0x391182583733ea1c # load x3 with value 0x391182583733ea1c
sw x3, 0(x2) # store 0x391182583733ea1c in memory
flw f3, 0(x2) # load 0x391182583733ea1c from memory into f3
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f19, 0(x2) # load 0x7ef8654f from memory into f19
fmsub.s f10, f27, f3, f19, dyn # perform operation
fmsub.s f10, f27, f3, f19, rdn # perform operation
fmsub.s f10, f27, f3, f19, rmm # perform operation
fmsub.s f10, f27, f3, f19, rne # perform operation
fmsub.s f10, f27, f3, f19, rtz # perform operation
fmsub.s f10, f27, f3, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f10, f27, f3, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f10, f27, f3, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f10, f27, f3, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f10, f27, f3, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f10, f27, f3, f19 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0x813d9ab0)
li x5, 0xb650a1c5cbdfec77 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f3, 0(x2) # load 0x007fffff from memory into f3
li x3, 0x125ceda14507fc29 # load x3 with value 0x125ceda14507fc29
sw x3, 0(x2) # store 0x125ceda14507fc29 in memory
flw f1, 0(x2) # load 0x125ceda14507fc29 from memory into f1
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f16, 0(x2) # load 0x813d9ab0 from memory into f16
fmsub.s f5, f3, f1, f16, dyn # perform operation
fmsub.s f5, f3, f1, f16, rdn # perform operation
fmsub.s f5, f3, f1, f16, rmm # perform operation
fmsub.s f5, f3, f1, f16, rne # perform operation
fmsub.s f5, f3, f1, f16, rtz # perform operation
fmsub.s f5, f3, f1, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f5, f3, f1, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f5, f3, f1, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f5, f3, f1, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f5, f3, f1, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f5, f3, f1, f16 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0x0)
li x12, 0x6627a3e374d2ea0b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f11, 0(x2) # load 0x807fffff from memory into f11
li x3, 0xc4ffcf56721ba5d # load x3 with value 0xc4ffcf56721ba5d
sw x3, 0(x2) # store 0xc4ffcf56721ba5d in memory
flw f24, 0(x2) # load 0xc4ffcf56721ba5d from memory into f24
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f5, 0(x2) # load 0x00000000 from memory into f5
fmsub.s f12, f11, f24, f5, dyn # perform operation
fmsub.s f12, f11, f24, f5, rdn # perform operation
fmsub.s f12, f11, f24, f5, rmm # perform operation
fmsub.s f12, f11, f24, f5, rne # perform operation
fmsub.s f12, f11, f24, f5, rtz # perform operation
fmsub.s f12, f11, f24, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f12, f11, f24, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f12, f11, f24, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f12, f11, f24, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f12, f11, f24, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f12, f11, f24, f5 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0x80000000)
li x30, 0xbdd7e374f21c508e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f27, 0(x2) # load 0x807fffff from memory into f27
li x3, 0x955a39a37424ef7b # load x3 with value 0x955a39a37424ef7b
sw x3, 0(x2) # store 0x955a39a37424ef7b in memory
flw f31, 0(x2) # load 0x955a39a37424ef7b from memory into f31
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f17, 0(x2) # load 0x80000000 from memory into f17
fmsub.s f30, f27, f31, f17, dyn # perform operation
fmsub.s f30, f27, f31, f17, rdn # perform operation
fmsub.s f30, f27, f31, f17, rmm # perform operation
fmsub.s f30, f27, f31, f17, rne # perform operation
fmsub.s f30, f27, f31, f17, rtz # perform operation
fmsub.s f30, f27, f31, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f30, f27, f31, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f30, f27, f31, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f30, f27, f31, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f30, f27, f31, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f30, f27, f31, f17 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0x3f800000)
li x12, 0xc8363fb37aeb3bb9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f15, 0(x2) # load 0x807fffff from memory into f15
li x3, 0xb25e29da2ed47f8a # load x3 with value 0xb25e29da2ed47f8a
sw x3, 0(x2) # store 0xb25e29da2ed47f8a in memory
flw f25, 0(x2) # load 0xb25e29da2ed47f8a from memory into f25
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f19, 0(x2) # load 0x3f800000 from memory into f19
fmsub.s f12, f15, f25, f19, dyn # perform operation
fmsub.s f12, f15, f25, f19, rdn # perform operation
fmsub.s f12, f15, f25, f19, rmm # perform operation
fmsub.s f12, f15, f25, f19, rne # perform operation
fmsub.s f12, f15, f25, f19, rtz # perform operation
fmsub.s f12, f15, f25, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f12, f15, f25, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f12, f15, f25, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f12, f15, f25, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f12, f15, f25, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f12, f15, f25, f19 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0xbf800000)
li x18, 0x196778f262e5edaa # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f14, 0(x2) # load 0x807fffff from memory into f14
li x3, 0xe8841c3bf86a9379 # load x3 with value 0xe8841c3bf86a9379
sw x3, 0(x2) # store 0xe8841c3bf86a9379 in memory
flw f4, 0(x2) # load 0xe8841c3bf86a9379 from memory into f4
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f8, 0(x2) # load 0xbf800000 from memory into f8
fmsub.s f18, f14, f4, f8, dyn # perform operation
fmsub.s f18, f14, f4, f8, rdn # perform operation
fmsub.s f18, f14, f4, f8, rmm # perform operation
fmsub.s f18, f14, f4, f8, rne # perform operation
fmsub.s f18, f14, f4, f8, rtz # perform operation
fmsub.s f18, f14, f4, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f18, f14, f4, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f18, f14, f4, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f18, f14, f4, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f18, f14, f4, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f18, f14, f4, f8 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0x3fc00000)
li x20, 0x448e8738b5fd356d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f30, 0(x2) # load 0x807fffff from memory into f30
li x3, 0x8a98263b3f47b00e # load x3 with value 0x8a98263b3f47b00e
sw x3, 0(x2) # store 0x8a98263b3f47b00e in memory
flw f6, 0(x2) # load 0x8a98263b3f47b00e from memory into f6
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f5, 0(x2) # load 0x3fc00000 from memory into f5
fmsub.s f20, f30, f6, f5, dyn # perform operation
fmsub.s f20, f30, f6, f5, rdn # perform operation
fmsub.s f20, f30, f6, f5, rmm # perform operation
fmsub.s f20, f30, f6, f5, rne # perform operation
fmsub.s f20, f30, f6, f5, rtz # perform operation
fmsub.s f20, f30, f6, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f20, f30, f6, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f20, f30, f6, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f20, f30, f6, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f20, f30, f6, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f20, f30, f6, f5 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0xbfc00000)
li x7, 0xd937452d421e2fb4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f31, 0(x2) # load 0x807fffff from memory into f31
li x3, 0x21b5e67050f9aa60 # load x3 with value 0x21b5e67050f9aa60
sw x3, 0(x2) # store 0x21b5e67050f9aa60 in memory
flw f2, 0(x2) # load 0x21b5e67050f9aa60 from memory into f2
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f29, 0(x2) # load 0xbfc00000 from memory into f29
fmsub.s f7, f31, f2, f29, dyn # perform operation
fmsub.s f7, f31, f2, f29, rdn # perform operation
fmsub.s f7, f31, f2, f29, rmm # perform operation
fmsub.s f7, f31, f2, f29, rne # perform operation
fmsub.s f7, f31, f2, f29, rtz # perform operation
fmsub.s f7, f31, f2, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f7, f31, f2, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f7, f31, f2, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f7, f31, f2, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f7, f31, f2, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f7, f31, f2, f29 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0x40000000)
li x5, 0x572585259ca35426 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f25, 0(x2) # load 0x807fffff from memory into f25
li x3, 0x6e86b8acab4c7f5d # load x3 with value 0x6e86b8acab4c7f5d
sw x3, 0(x2) # store 0x6e86b8acab4c7f5d in memory
flw f29, 0(x2) # load 0x6e86b8acab4c7f5d from memory into f29
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f22, 0(x2) # load 0x40000000 from memory into f22
fmsub.s f5, f25, f29, f22, dyn # perform operation
fmsub.s f5, f25, f29, f22, rdn # perform operation
fmsub.s f5, f25, f29, f22, rmm # perform operation
fmsub.s f5, f25, f29, f22, rne # perform operation
fmsub.s f5, f25, f29, f22, rtz # perform operation
fmsub.s f5, f25, f29, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f5, f25, f29, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f5, f25, f29, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f5, f25, f29, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f5, f25, f29, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f5, f25, f29, f22 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0xc0000000)
li x3, 0xa598928579ccb461 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f29, 0(x2) # load 0x807fffff from memory into f29
li x3, 0xc1984bf14c4cc528 # load x3 with value 0xc1984bf14c4cc528
sw x3, 0(x2) # store 0xc1984bf14c4cc528 in memory
flw f25, 0(x2) # load 0xc1984bf14c4cc528 from memory into f25
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f7, 0(x2) # load 0xc0000000 from memory into f7
fmsub.s f3, f29, f25, f7, dyn # perform operation
fmsub.s f3, f29, f25, f7, rdn # perform operation
fmsub.s f3, f29, f25, f7, rmm # perform operation
fmsub.s f3, f29, f25, f7, rne # perform operation
fmsub.s f3, f29, f25, f7, rtz # perform operation
fmsub.s f3, f29, f25, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f3, f29, f25, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f3, f29, f25, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f3, f29, f25, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f3, f29, f25, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f3, f29, f25, f7 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0x800000)
li x28, 0xf98615a5c57f127d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f29, 0(x2) # load 0x807fffff from memory into f29
li x3, 0xe17da8826166758b # load x3 with value 0xe17da8826166758b
sw x3, 0(x2) # store 0xe17da8826166758b in memory
flw f7, 0(x2) # load 0xe17da8826166758b from memory into f7
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f16, 0(x2) # load 0x00800000 from memory into f16
fmsub.s f28, f29, f7, f16, dyn # perform operation
fmsub.s f28, f29, f7, f16, rdn # perform operation
fmsub.s f28, f29, f7, f16, rmm # perform operation
fmsub.s f28, f29, f7, f16, rne # perform operation
fmsub.s f28, f29, f7, f16, rtz # perform operation
fmsub.s f28, f29, f7, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f28, f29, f7, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f28, f29, f7, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f28, f29, f7, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f28, f29, f7, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f28, f29, f7, f16 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0x80800000)
li x20, 0x4f999d31f32508c6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f15, 0(x2) # load 0x807fffff from memory into f15
li x3, 0x75d1c1aedf4105ec # load x3 with value 0x75d1c1aedf4105ec
sw x3, 0(x2) # store 0x75d1c1aedf4105ec in memory
flw f18, 0(x2) # load 0x75d1c1aedf4105ec from memory into f18
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f26, 0(x2) # load 0x80800000 from memory into f26
fmsub.s f20, f15, f18, f26, dyn # perform operation
fmsub.s f20, f15, f18, f26, rdn # perform operation
fmsub.s f20, f15, f18, f26, rmm # perform operation
fmsub.s f20, f15, f18, f26, rne # perform operation
fmsub.s f20, f15, f18, f26, rtz # perform operation
fmsub.s f20, f15, f18, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f20, f15, f18, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f20, f15, f18, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f20, f15, f18, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f20, f15, f18, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f20, f15, f18, f26 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0x7f7fffff)
li x1, 0xb668ded043051b0b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f19, 0(x2) # load 0x807fffff from memory into f19
li x3, 0xd8ec8f6af3960db0 # load x3 with value 0xd8ec8f6af3960db0
sw x3, 0(x2) # store 0xd8ec8f6af3960db0 in memory
flw f14, 0(x2) # load 0xd8ec8f6af3960db0 from memory into f14
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f26, 0(x2) # load 0x7f7fffff from memory into f26
fmsub.s f1, f19, f14, f26, dyn # perform operation
fmsub.s f1, f19, f14, f26, rdn # perform operation
fmsub.s f1, f19, f14, f26, rmm # perform operation
fmsub.s f1, f19, f14, f26, rne # perform operation
fmsub.s f1, f19, f14, f26, rtz # perform operation
fmsub.s f1, f19, f14, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f1, f19, f14, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f1, f19, f14, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f1, f19, f14, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f1, f19, f14, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f1, f19, f14, f26 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0xff7fffff)
li x10, 0xe44e4f2c1f43f2f6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f4, 0(x2) # load 0x807fffff from memory into f4
li x3, 0x4fdb2dfbb61739e7 # load x3 with value 0x4fdb2dfbb61739e7
sw x3, 0(x2) # store 0x4fdb2dfbb61739e7 in memory
flw f9, 0(x2) # load 0x4fdb2dfbb61739e7 from memory into f9
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f14, 0(x2) # load 0xff7fffff from memory into f14
fmsub.s f10, f4, f9, f14, dyn # perform operation
fmsub.s f10, f4, f9, f14, rdn # perform operation
fmsub.s f10, f4, f9, f14, rmm # perform operation
fmsub.s f10, f4, f9, f14, rne # perform operation
fmsub.s f10, f4, f9, f14, rtz # perform operation
fmsub.s f10, f4, f9, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f10, f4, f9, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f10, f4, f9, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f10, f4, f9, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f10, f4, f9, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f10, f4, f9, f14 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0x7fffff)
li x1, 0x691f2f584f589441 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f23, 0(x2) # load 0x807fffff from memory into f23
li x3, 0x376a5dee2e18990f # load x3 with value 0x376a5dee2e18990f
sw x3, 0(x2) # store 0x376a5dee2e18990f in memory
flw f2, 0(x2) # load 0x376a5dee2e18990f from memory into f2
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f13, 0(x2) # load 0x007fffff from memory into f13
fmsub.s f1, f23, f2, f13, dyn # perform operation
fmsub.s f1, f23, f2, f13, rdn # perform operation
fmsub.s f1, f23, f2, f13, rmm # perform operation
fmsub.s f1, f23, f2, f13, rne # perform operation
fmsub.s f1, f23, f2, f13, rtz # perform operation
fmsub.s f1, f23, f2, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f1, f23, f2, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f1, f23, f2, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f1, f23, f2, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f1, f23, f2, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f1, f23, f2, f13 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0x807fffff)
li x18, 0xbc22f84e060515d1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f22, 0(x2) # load 0x807fffff from memory into f22
li x3, 0xffa77bfc346106ce # load x3 with value 0xffa77bfc346106ce
sw x3, 0(x2) # store 0xffa77bfc346106ce in memory
flw f28, 0(x2) # load 0xffa77bfc346106ce from memory into f28
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f25, 0(x2) # load 0x807fffff from memory into f25
fmsub.s f18, f22, f28, f25, dyn # perform operation
fmsub.s f18, f22, f28, f25, rdn # perform operation
fmsub.s f18, f22, f28, f25, rmm # perform operation
fmsub.s f18, f22, f28, f25, rne # perform operation
fmsub.s f18, f22, f28, f25, rtz # perform operation
fmsub.s f18, f22, f28, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f18, f22, f28, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f18, f22, f28, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f18, f22, f28, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f18, f22, f28, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f18, f22, f28, f25 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0x400000)
li x23, 0xe8ac5d27f6b422f1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f16, 0(x2) # load 0x807fffff from memory into f16
li x3, 0x7495452087862ef9 # load x3 with value 0x7495452087862ef9
sw x3, 0(x2) # store 0x7495452087862ef9 in memory
flw f12, 0(x2) # load 0x7495452087862ef9 from memory into f12
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f19, 0(x2) # load 0x00400000 from memory into f19
fmsub.s f23, f16, f12, f19, dyn # perform operation
fmsub.s f23, f16, f12, f19, rdn # perform operation
fmsub.s f23, f16, f12, f19, rmm # perform operation
fmsub.s f23, f16, f12, f19, rne # perform operation
fmsub.s f23, f16, f12, f19, rtz # perform operation
fmsub.s f23, f16, f12, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f23, f16, f12, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f23, f16, f12, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f23, f16, f12, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f23, f16, f12, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f23, f16, f12, f19 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0x80400000)
li x2, 0xdcd7086ddbbce4f4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f8, 0(x2) # load 0x807fffff from memory into f8
li x3, 0x17c4699c17750857 # load x3 with value 0x17c4699c17750857
sw x3, 0(x2) # store 0x17c4699c17750857 in memory
flw f12, 0(x2) # load 0x17c4699c17750857 from memory into f12
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f16, 0(x2) # load 0x80400000 from memory into f16
fmsub.s f2, f8, f12, f16, dyn # perform operation
fmsub.s f2, f8, f12, f16, rdn # perform operation
fmsub.s f2, f8, f12, f16, rmm # perform operation
fmsub.s f2, f8, f12, f16, rne # perform operation
fmsub.s f2, f8, f12, f16, rtz # perform operation
fmsub.s f2, f8, f12, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f2, f8, f12, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f2, f8, f12, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f2, f8, f12, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f2, f8, f12, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f2, f8, f12, f16 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0x1)
li x12, 0xad418fa5cb61f384 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f11, 0(x2) # load 0x807fffff from memory into f11
li x3, 0x77040cdc7f1edcc8 # load x3 with value 0x77040cdc7f1edcc8
sw x3, 0(x2) # store 0x77040cdc7f1edcc8 in memory
flw f31, 0(x2) # load 0x77040cdc7f1edcc8 from memory into f31
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f9, 0(x2) # load 0x00000001 from memory into f9
fmsub.s f12, f11, f31, f9, dyn # perform operation
fmsub.s f12, f11, f31, f9, rdn # perform operation
fmsub.s f12, f11, f31, f9, rmm # perform operation
fmsub.s f12, f11, f31, f9, rne # perform operation
fmsub.s f12, f11, f31, f9, rtz # perform operation
fmsub.s f12, f11, f31, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f12, f11, f31, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f12, f11, f31, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f12, f11, f31, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f12, f11, f31, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f12, f11, f31, f9 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0x80000001)
li x29, 0x23b91e7b749c18b7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f18, 0(x2) # load 0x807fffff from memory into f18
li x3, 0xfa52ddffca6ac605 # load x3 with value 0xfa52ddffca6ac605
sw x3, 0(x2) # store 0xfa52ddffca6ac605 in memory
flw f27, 0(x2) # load 0xfa52ddffca6ac605 from memory into f27
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f20, 0(x2) # load 0x80000001 from memory into f20
fmsub.s f29, f18, f27, f20, dyn # perform operation
fmsub.s f29, f18, f27, f20, rdn # perform operation
fmsub.s f29, f18, f27, f20, rmm # perform operation
fmsub.s f29, f18, f27, f20, rne # perform operation
fmsub.s f29, f18, f27, f20, rtz # perform operation
fmsub.s f29, f18, f27, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f29, f18, f27, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f29, f18, f27, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f29, f18, f27, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f29, f18, f27, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f29, f18, f27, f20 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0x7f800000)
li x6, 0xedb334238f6fdbfe # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f28, 0(x2) # load 0x807fffff from memory into f28
li x3, 0x6f55aee1b7fd5c26 # load x3 with value 0x6f55aee1b7fd5c26
sw x3, 0(x2) # store 0x6f55aee1b7fd5c26 in memory
flw f10, 0(x2) # load 0x6f55aee1b7fd5c26 from memory into f10
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f29, 0(x2) # load 0x7f800000 from memory into f29
fmsub.s f6, f28, f10, f29, dyn # perform operation
fmsub.s f6, f28, f10, f29, rdn # perform operation
fmsub.s f6, f28, f10, f29, rmm # perform operation
fmsub.s f6, f28, f10, f29, rne # perform operation
fmsub.s f6, f28, f10, f29, rtz # perform operation
fmsub.s f6, f28, f10, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f6, f28, f10, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f6, f28, f10, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f6, f28, f10, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f6, f28, f10, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f6, f28, f10, f29 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0xff800000)
li x8, 0x8c03d1eb5c349bb8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f11, 0(x2) # load 0x807fffff from memory into f11
li x3, 0x4401a148fe3d4e9a # load x3 with value 0x4401a148fe3d4e9a
sw x3, 0(x2) # store 0x4401a148fe3d4e9a in memory
flw f1, 0(x2) # load 0x4401a148fe3d4e9a from memory into f1
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f7, 0(x2) # load 0xff800000 from memory into f7
fmsub.s f8, f11, f1, f7, dyn # perform operation
fmsub.s f8, f11, f1, f7, rdn # perform operation
fmsub.s f8, f11, f1, f7, rmm # perform operation
fmsub.s f8, f11, f1, f7, rne # perform operation
fmsub.s f8, f11, f1, f7, rtz # perform operation
fmsub.s f8, f11, f1, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f8, f11, f1, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f8, f11, f1, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f8, f11, f1, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f8, f11, f1, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f8, f11, f1, f7 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0x7fc00000)
li x30, 0x8f26bd596f6dbb88 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f3, 0(x2) # load 0x807fffff from memory into f3
li x3, 0x496b908228e5e63 # load x3 with value 0x496b908228e5e63
sw x3, 0(x2) # store 0x496b908228e5e63 in memory
flw f17, 0(x2) # load 0x496b908228e5e63 from memory into f17
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f11, 0(x2) # load 0x7fc00000 from memory into f11
fmsub.s f30, f3, f17, f11, dyn # perform operation
fmsub.s f30, f3, f17, f11, rdn # perform operation
fmsub.s f30, f3, f17, f11, rmm # perform operation
fmsub.s f30, f3, f17, f11, rne # perform operation
fmsub.s f30, f3, f17, f11, rtz # perform operation
fmsub.s f30, f3, f17, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f30, f3, f17, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f30, f3, f17, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f30, f3, f17, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f30, f3, f17, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f30, f3, f17, f11 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0x7fffffff)
li x14, 0x05dfb8aad0e51c5d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f6, 0(x2) # load 0x807fffff from memory into f6
li x3, 0x717c59a17f8dba40 # load x3 with value 0x717c59a17f8dba40
sw x3, 0(x2) # store 0x717c59a17f8dba40 in memory
flw f1, 0(x2) # load 0x717c59a17f8dba40 from memory into f1
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f30, 0(x2) # load 0x7fffffff from memory into f30
fmsub.s f14, f6, f1, f30, dyn # perform operation
fmsub.s f14, f6, f1, f30, rdn # perform operation
fmsub.s f14, f6, f1, f30, rmm # perform operation
fmsub.s f14, f6, f1, f30, rne # perform operation
fmsub.s f14, f6, f1, f30, rtz # perform operation
fmsub.s f14, f6, f1, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f14, f6, f1, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f14, f6, f1, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f14, f6, f1, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f14, f6, f1, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f14, f6, f1, f30 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0x7f800001)
li x19, 0xa0de9a90ca3349e8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f22, 0(x2) # load 0x807fffff from memory into f22
li x3, 0xbe449dd22e802a87 # load x3 with value 0xbe449dd22e802a87
sw x3, 0(x2) # store 0xbe449dd22e802a87 in memory
flw f2, 0(x2) # load 0xbe449dd22e802a87 from memory into f2
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f31, 0(x2) # load 0x7f800001 from memory into f31
fmsub.s f19, f22, f2, f31, dyn # perform operation
fmsub.s f19, f22, f2, f31, rdn # perform operation
fmsub.s f19, f22, f2, f31, rmm # perform operation
fmsub.s f19, f22, f2, f31, rne # perform operation
fmsub.s f19, f22, f2, f31, rtz # perform operation
fmsub.s f19, f22, f2, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f19, f22, f2, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f19, f22, f2, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f19, f22, f2, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f19, f22, f2, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f19, f22, f2, f31 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0x7fbfffff)
li x18, 0xdfacdd23c94bd4dd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f26, 0(x2) # load 0x807fffff from memory into f26
li x3, 0x57a9cd58f19935f # load x3 with value 0x57a9cd58f19935f
sw x3, 0(x2) # store 0x57a9cd58f19935f in memory
flw f31, 0(x2) # load 0x57a9cd58f19935f from memory into f31
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f14, 0(x2) # load 0x7fbfffff from memory into f14
fmsub.s f18, f26, f31, f14, dyn # perform operation
fmsub.s f18, f26, f31, f14, rdn # perform operation
fmsub.s f18, f26, f31, f14, rmm # perform operation
fmsub.s f18, f26, f31, f14, rne # perform operation
fmsub.s f18, f26, f31, f14, rtz # perform operation
fmsub.s f18, f26, f31, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f18, f26, f31, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f18, f26, f31, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f18, f26, f31, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f18, f26, f31, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f18, f26, f31, f14 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0x7ef8654f)
li x20, 0x79779de3a414feeb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f21, 0(x2) # load 0x807fffff from memory into f21
li x3, 0x657fc11a033f07d6 # load x3 with value 0x657fc11a033f07d6
sw x3, 0(x2) # store 0x657fc11a033f07d6 in memory
flw f7, 0(x2) # load 0x657fc11a033f07d6 from memory into f7
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f17, 0(x2) # load 0x7ef8654f from memory into f17
fmsub.s f20, f21, f7, f17, dyn # perform operation
fmsub.s f20, f21, f7, f17, rdn # perform operation
fmsub.s f20, f21, f7, f17, rmm # perform operation
fmsub.s f20, f21, f7, f17, rne # perform operation
fmsub.s f20, f21, f7, f17, rtz # perform operation
fmsub.s f20, f21, f7, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f20, f21, f7, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f20, f21, f7, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f20, f21, f7, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f20, f21, f7, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f20, f21, f7, f17 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0x813d9ab0)
li x24, 0x582f830129c14347 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f28, 0(x2) # load 0x807fffff from memory into f28
li x3, 0xe7bc2260e76f3635 # load x3 with value 0xe7bc2260e76f3635
sw x3, 0(x2) # store 0xe7bc2260e76f3635 in memory
flw f19, 0(x2) # load 0xe7bc2260e76f3635 from memory into f19
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f13, 0(x2) # load 0x813d9ab0 from memory into f13
fmsub.s f24, f28, f19, f13, dyn # perform operation
fmsub.s f24, f28, f19, f13, rdn # perform operation
fmsub.s f24, f28, f19, f13, rmm # perform operation
fmsub.s f24, f28, f19, f13, rne # perform operation
fmsub.s f24, f28, f19, f13, rtz # perform operation
fmsub.s f24, f28, f19, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f24, f28, f19, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f24, f28, f19, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f24, f28, f19, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f24, f28, f19, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f24, f28, f19, f13 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0x0)
li x13, 0xb6d0b5577ed5adde # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f11, 0(x2) # load 0x00400000 from memory into f11
li x3, 0xfc885979aa6c1556 # load x3 with value 0xfc885979aa6c1556
sw x3, 0(x2) # store 0xfc885979aa6c1556 in memory
flw f16, 0(x2) # load 0xfc885979aa6c1556 from memory into f16
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f25, 0(x2) # load 0x00000000 from memory into f25
fmsub.s f13, f11, f16, f25, dyn # perform operation
fmsub.s f13, f11, f16, f25, rdn # perform operation
fmsub.s f13, f11, f16, f25, rmm # perform operation
fmsub.s f13, f11, f16, f25, rne # perform operation
fmsub.s f13, f11, f16, f25, rtz # perform operation
fmsub.s f13, f11, f16, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f13, f11, f16, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f13, f11, f16, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f13, f11, f16, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f13, f11, f16, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f13, f11, f16, f25 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0x80000000)
li x21, 0x0e8299cb3c8db1b1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f5, 0(x2) # load 0x00400000 from memory into f5
li x3, 0x549511857c4e967c # load x3 with value 0x549511857c4e967c
sw x3, 0(x2) # store 0x549511857c4e967c in memory
flw f15, 0(x2) # load 0x549511857c4e967c from memory into f15
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f19, 0(x2) # load 0x80000000 from memory into f19
fmsub.s f21, f5, f15, f19, dyn # perform operation
fmsub.s f21, f5, f15, f19, rdn # perform operation
fmsub.s f21, f5, f15, f19, rmm # perform operation
fmsub.s f21, f5, f15, f19, rne # perform operation
fmsub.s f21, f5, f15, f19, rtz # perform operation
fmsub.s f21, f5, f15, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f21, f5, f15, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f21, f5, f15, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f21, f5, f15, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f21, f5, f15, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f21, f5, f15, f19 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0x3f800000)
li x28, 0x6d0d56ea3a41be61 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f25, 0(x2) # load 0x00400000 from memory into f25
li x3, 0xce097c077f495293 # load x3 with value 0xce097c077f495293
sw x3, 0(x2) # store 0xce097c077f495293 in memory
flw f4, 0(x2) # load 0xce097c077f495293 from memory into f4
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f16, 0(x2) # load 0x3f800000 from memory into f16
fmsub.s f28, f25, f4, f16, dyn # perform operation
fmsub.s f28, f25, f4, f16, rdn # perform operation
fmsub.s f28, f25, f4, f16, rmm # perform operation
fmsub.s f28, f25, f4, f16, rne # perform operation
fmsub.s f28, f25, f4, f16, rtz # perform operation
fmsub.s f28, f25, f4, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f28, f25, f4, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f28, f25, f4, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f28, f25, f4, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f28, f25, f4, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f28, f25, f4, f16 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0xbf800000)
li x19, 0xc225625f8d568117 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f13, 0(x2) # load 0x00400000 from memory into f13
li x3, 0x416ca164c83bbadf # load x3 with value 0x416ca164c83bbadf
sw x3, 0(x2) # store 0x416ca164c83bbadf in memory
flw f26, 0(x2) # load 0x416ca164c83bbadf from memory into f26
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f14, 0(x2) # load 0xbf800000 from memory into f14
fmsub.s f19, f13, f26, f14, dyn # perform operation
fmsub.s f19, f13, f26, f14, rdn # perform operation
fmsub.s f19, f13, f26, f14, rmm # perform operation
fmsub.s f19, f13, f26, f14, rne # perform operation
fmsub.s f19, f13, f26, f14, rtz # perform operation
fmsub.s f19, f13, f26, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f19, f13, f26, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f19, f13, f26, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f19, f13, f26, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f19, f13, f26, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f19, f13, f26, f14 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0x3fc00000)
li x7, 0xa97baa8403f7199f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f1, 0(x2) # load 0x00400000 from memory into f1
li x3, 0xfa3b898533c27917 # load x3 with value 0xfa3b898533c27917
sw x3, 0(x2) # store 0xfa3b898533c27917 in memory
flw f25, 0(x2) # load 0xfa3b898533c27917 from memory into f25
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f31, 0(x2) # load 0x3fc00000 from memory into f31
fmsub.s f7, f1, f25, f31, dyn # perform operation
fmsub.s f7, f1, f25, f31, rdn # perform operation
fmsub.s f7, f1, f25, f31, rmm # perform operation
fmsub.s f7, f1, f25, f31, rne # perform operation
fmsub.s f7, f1, f25, f31, rtz # perform operation
fmsub.s f7, f1, f25, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f7, f1, f25, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f7, f1, f25, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f7, f1, f25, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f7, f1, f25, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f7, f1, f25, f31 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0xbfc00000)
li x10, 0xa4a2996f2bf76132 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f25, 0(x2) # load 0x00400000 from memory into f25
li x3, 0x88a5f26f9f198cbc # load x3 with value 0x88a5f26f9f198cbc
sw x3, 0(x2) # store 0x88a5f26f9f198cbc in memory
flw f31, 0(x2) # load 0x88a5f26f9f198cbc from memory into f31
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f27, 0(x2) # load 0xbfc00000 from memory into f27
fmsub.s f10, f25, f31, f27, dyn # perform operation
fmsub.s f10, f25, f31, f27, rdn # perform operation
fmsub.s f10, f25, f31, f27, rmm # perform operation
fmsub.s f10, f25, f31, f27, rne # perform operation
fmsub.s f10, f25, f31, f27, rtz # perform operation
fmsub.s f10, f25, f31, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f10, f25, f31, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f10, f25, f31, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f10, f25, f31, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f10, f25, f31, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f10, f25, f31, f27 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0x40000000)
li x9, 0xf3c4bd99e713d7c2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f10, 0(x2) # load 0x00400000 from memory into f10
li x3, 0x5f492f32b7e9a951 # load x3 with value 0x5f492f32b7e9a951
sw x3, 0(x2) # store 0x5f492f32b7e9a951 in memory
flw f28, 0(x2) # load 0x5f492f32b7e9a951 from memory into f28
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f24, 0(x2) # load 0x40000000 from memory into f24
fmsub.s f9, f10, f28, f24, dyn # perform operation
fmsub.s f9, f10, f28, f24, rdn # perform operation
fmsub.s f9, f10, f28, f24, rmm # perform operation
fmsub.s f9, f10, f28, f24, rne # perform operation
fmsub.s f9, f10, f28, f24, rtz # perform operation
fmsub.s f9, f10, f28, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f9, f10, f28, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f9, f10, f28, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f9, f10, f28, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f9, f10, f28, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f9, f10, f28, f24 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0xc0000000)
li x30, 0x9ca69465696f46ef # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f26, 0(x2) # load 0x00400000 from memory into f26
li x3, 0x2d63c08090291901 # load x3 with value 0x2d63c08090291901
sw x3, 0(x2) # store 0x2d63c08090291901 in memory
flw f22, 0(x2) # load 0x2d63c08090291901 from memory into f22
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f24, 0(x2) # load 0xc0000000 from memory into f24
fmsub.s f30, f26, f22, f24, dyn # perform operation
fmsub.s f30, f26, f22, f24, rdn # perform operation
fmsub.s f30, f26, f22, f24, rmm # perform operation
fmsub.s f30, f26, f22, f24, rne # perform operation
fmsub.s f30, f26, f22, f24, rtz # perform operation
fmsub.s f30, f26, f22, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f30, f26, f22, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f30, f26, f22, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f30, f26, f22, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f30, f26, f22, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f30, f26, f22, f24 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0x800000)
li x18, 0xe36b7464dcd806c6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f25, 0(x2) # load 0x00400000 from memory into f25
li x3, 0x785c20867574e621 # load x3 with value 0x785c20867574e621
sw x3, 0(x2) # store 0x785c20867574e621 in memory
flw f17, 0(x2) # load 0x785c20867574e621 from memory into f17
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f10, 0(x2) # load 0x00800000 from memory into f10
fmsub.s f18, f25, f17, f10, dyn # perform operation
fmsub.s f18, f25, f17, f10, rdn # perform operation
fmsub.s f18, f25, f17, f10, rmm # perform operation
fmsub.s f18, f25, f17, f10, rne # perform operation
fmsub.s f18, f25, f17, f10, rtz # perform operation
fmsub.s f18, f25, f17, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f18, f25, f17, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f18, f25, f17, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f18, f25, f17, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f18, f25, f17, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f18, f25, f17, f10 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0x80800000)
li x27, 0x12ee9f0ba27eaf71 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f13, 0(x2) # load 0x00400000 from memory into f13
li x3, 0xb18ee748ee056a53 # load x3 with value 0xb18ee748ee056a53
sw x3, 0(x2) # store 0xb18ee748ee056a53 in memory
flw f28, 0(x2) # load 0xb18ee748ee056a53 from memory into f28
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f25, 0(x2) # load 0x80800000 from memory into f25
fmsub.s f27, f13, f28, f25, dyn # perform operation
fmsub.s f27, f13, f28, f25, rdn # perform operation
fmsub.s f27, f13, f28, f25, rmm # perform operation
fmsub.s f27, f13, f28, f25, rne # perform operation
fmsub.s f27, f13, f28, f25, rtz # perform operation
fmsub.s f27, f13, f28, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f27, f13, f28, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f27, f13, f28, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f27, f13, f28, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f27, f13, f28, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f27, f13, f28, f25 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0x7f7fffff)
li x12, 0x6b1b4cfc8227112f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f14, 0(x2) # load 0x00400000 from memory into f14
li x3, 0xca24755aa81e02ae # load x3 with value 0xca24755aa81e02ae
sw x3, 0(x2) # store 0xca24755aa81e02ae in memory
flw f27, 0(x2) # load 0xca24755aa81e02ae from memory into f27
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f25, 0(x2) # load 0x7f7fffff from memory into f25
fmsub.s f12, f14, f27, f25, dyn # perform operation
fmsub.s f12, f14, f27, f25, rdn # perform operation
fmsub.s f12, f14, f27, f25, rmm # perform operation
fmsub.s f12, f14, f27, f25, rne # perform operation
fmsub.s f12, f14, f27, f25, rtz # perform operation
fmsub.s f12, f14, f27, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f12, f14, f27, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f12, f14, f27, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f12, f14, f27, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f12, f14, f27, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f12, f14, f27, f25 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0xff7fffff)
li x4, 0x8103b7425cea5a45 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f18, 0(x2) # load 0x00400000 from memory into f18
li x3, 0x940a4f5ff01a7414 # load x3 with value 0x940a4f5ff01a7414
sw x3, 0(x2) # store 0x940a4f5ff01a7414 in memory
flw f6, 0(x2) # load 0x940a4f5ff01a7414 from memory into f6
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f11, 0(x2) # load 0xff7fffff from memory into f11
fmsub.s f4, f18, f6, f11, dyn # perform operation
fmsub.s f4, f18, f6, f11, rdn # perform operation
fmsub.s f4, f18, f6, f11, rmm # perform operation
fmsub.s f4, f18, f6, f11, rne # perform operation
fmsub.s f4, f18, f6, f11, rtz # perform operation
fmsub.s f4, f18, f6, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f4, f18, f6, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f4, f18, f6, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f4, f18, f6, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f4, f18, f6, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f4, f18, f6, f11 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0x7fffff)
li x17, 0xeb28257a48fa8b28 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f3, 0(x2) # load 0x00400000 from memory into f3
li x3, 0x3d83b7c04e3a681f # load x3 with value 0x3d83b7c04e3a681f
sw x3, 0(x2) # store 0x3d83b7c04e3a681f in memory
flw f23, 0(x2) # load 0x3d83b7c04e3a681f from memory into f23
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f11, 0(x2) # load 0x007fffff from memory into f11
fmsub.s f17, f3, f23, f11, dyn # perform operation
fmsub.s f17, f3, f23, f11, rdn # perform operation
fmsub.s f17, f3, f23, f11, rmm # perform operation
fmsub.s f17, f3, f23, f11, rne # perform operation
fmsub.s f17, f3, f23, f11, rtz # perform operation
fmsub.s f17, f3, f23, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f17, f3, f23, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f17, f3, f23, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f17, f3, f23, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f17, f3, f23, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f17, f3, f23, f11 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0x807fffff)
li x6, 0xfc41b04ee530ab17 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f31, 0(x2) # load 0x00400000 from memory into f31
li x3, 0x9be5ee2a33caaf11 # load x3 with value 0x9be5ee2a33caaf11
sw x3, 0(x2) # store 0x9be5ee2a33caaf11 in memory
flw f26, 0(x2) # load 0x9be5ee2a33caaf11 from memory into f26
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f17, 0(x2) # load 0x807fffff from memory into f17
fmsub.s f6, f31, f26, f17, dyn # perform operation
fmsub.s f6, f31, f26, f17, rdn # perform operation
fmsub.s f6, f31, f26, f17, rmm # perform operation
fmsub.s f6, f31, f26, f17, rne # perform operation
fmsub.s f6, f31, f26, f17, rtz # perform operation
fmsub.s f6, f31, f26, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f6, f31, f26, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f6, f31, f26, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f6, f31, f26, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f6, f31, f26, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f6, f31, f26, f17 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0x400000)
li x15, 0x80e3fab7fbc5ea72 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f11, 0(x2) # load 0x00400000 from memory into f11
li x3, 0x2a44cd7d4307f942 # load x3 with value 0x2a44cd7d4307f942
sw x3, 0(x2) # store 0x2a44cd7d4307f942 in memory
flw f14, 0(x2) # load 0x2a44cd7d4307f942 from memory into f14
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f1, 0(x2) # load 0x00400000 from memory into f1
fmsub.s f15, f11, f14, f1, dyn # perform operation
fmsub.s f15, f11, f14, f1, rdn # perform operation
fmsub.s f15, f11, f14, f1, rmm # perform operation
fmsub.s f15, f11, f14, f1, rne # perform operation
fmsub.s f15, f11, f14, f1, rtz # perform operation
fmsub.s f15, f11, f14, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f15, f11, f14, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f15, f11, f14, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f15, f11, f14, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f15, f11, f14, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f15, f11, f14, f1 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0x80400000)
li x6, 0x50e67d775fbd9a6f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f11, 0(x2) # load 0x00400000 from memory into f11
li x3, 0x5cf8208e07dc5598 # load x3 with value 0x5cf8208e07dc5598
sw x3, 0(x2) # store 0x5cf8208e07dc5598 in memory
flw f29, 0(x2) # load 0x5cf8208e07dc5598 from memory into f29
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f31, 0(x2) # load 0x80400000 from memory into f31
fmsub.s f6, f11, f29, f31, dyn # perform operation
fmsub.s f6, f11, f29, f31, rdn # perform operation
fmsub.s f6, f11, f29, f31, rmm # perform operation
fmsub.s f6, f11, f29, f31, rne # perform operation
fmsub.s f6, f11, f29, f31, rtz # perform operation
fmsub.s f6, f11, f29, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f6, f11, f29, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f6, f11, f29, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f6, f11, f29, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f6, f11, f29, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f6, f11, f29, f31 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0x1)
li x12, 0x94c74b06db3da318 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f1, 0(x2) # load 0x00400000 from memory into f1
li x3, 0x8452a709ad97a46 # load x3 with value 0x8452a709ad97a46
sw x3, 0(x2) # store 0x8452a709ad97a46 in memory
flw f25, 0(x2) # load 0x8452a709ad97a46 from memory into f25
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f30, 0(x2) # load 0x00000001 from memory into f30
fmsub.s f12, f1, f25, f30, dyn # perform operation
fmsub.s f12, f1, f25, f30, rdn # perform operation
fmsub.s f12, f1, f25, f30, rmm # perform operation
fmsub.s f12, f1, f25, f30, rne # perform operation
fmsub.s f12, f1, f25, f30, rtz # perform operation
fmsub.s f12, f1, f25, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f12, f1, f25, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f12, f1, f25, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f12, f1, f25, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f12, f1, f25, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f12, f1, f25, f30 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0x80000001)
li x23, 0x418d17b0daa8c2bf # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f8, 0(x2) # load 0x00400000 from memory into f8
li x3, 0x3f3c08e1caa9de3f # load x3 with value 0x3f3c08e1caa9de3f
sw x3, 0(x2) # store 0x3f3c08e1caa9de3f in memory
flw f18, 0(x2) # load 0x3f3c08e1caa9de3f from memory into f18
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f5, 0(x2) # load 0x80000001 from memory into f5
fmsub.s f23, f8, f18, f5, dyn # perform operation
fmsub.s f23, f8, f18, f5, rdn # perform operation
fmsub.s f23, f8, f18, f5, rmm # perform operation
fmsub.s f23, f8, f18, f5, rne # perform operation
fmsub.s f23, f8, f18, f5, rtz # perform operation
fmsub.s f23, f8, f18, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f23, f8, f18, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f23, f8, f18, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f23, f8, f18, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f23, f8, f18, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f23, f8, f18, f5 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0x7f800000)
li x22, 0x69365bc11c434370 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f7, 0(x2) # load 0x00400000 from memory into f7
li x3, 0x685bf86c83d71cce # load x3 with value 0x685bf86c83d71cce
sw x3, 0(x2) # store 0x685bf86c83d71cce in memory
flw f17, 0(x2) # load 0x685bf86c83d71cce from memory into f17
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f2, 0(x2) # load 0x7f800000 from memory into f2
fmsub.s f22, f7, f17, f2, dyn # perform operation
fmsub.s f22, f7, f17, f2, rdn # perform operation
fmsub.s f22, f7, f17, f2, rmm # perform operation
fmsub.s f22, f7, f17, f2, rne # perform operation
fmsub.s f22, f7, f17, f2, rtz # perform operation
fmsub.s f22, f7, f17, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f22, f7, f17, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f22, f7, f17, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f22, f7, f17, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f22, f7, f17, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f22, f7, f17, f2 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0xff800000)
li x6, 0xde821b6d9caac667 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f30, 0(x2) # load 0x00400000 from memory into f30
li x3, 0x6b452c9321b92322 # load x3 with value 0x6b452c9321b92322
sw x3, 0(x2) # store 0x6b452c9321b92322 in memory
flw f25, 0(x2) # load 0x6b452c9321b92322 from memory into f25
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f20, 0(x2) # load 0xff800000 from memory into f20
fmsub.s f6, f30, f25, f20, dyn # perform operation
fmsub.s f6, f30, f25, f20, rdn # perform operation
fmsub.s f6, f30, f25, f20, rmm # perform operation
fmsub.s f6, f30, f25, f20, rne # perform operation
fmsub.s f6, f30, f25, f20, rtz # perform operation
fmsub.s f6, f30, f25, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f6, f30, f25, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f6, f30, f25, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f6, f30, f25, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f6, f30, f25, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f6, f30, f25, f20 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0x7fc00000)
li x26, 0x1ba1aec3e163ad15 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f5, 0(x2) # load 0x00400000 from memory into f5
li x3, 0x166bf214284b574a # load x3 with value 0x166bf214284b574a
sw x3, 0(x2) # store 0x166bf214284b574a in memory
flw f13, 0(x2) # load 0x166bf214284b574a from memory into f13
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f17, 0(x2) # load 0x7fc00000 from memory into f17
fmsub.s f26, f5, f13, f17, dyn # perform operation
fmsub.s f26, f5, f13, f17, rdn # perform operation
fmsub.s f26, f5, f13, f17, rmm # perform operation
fmsub.s f26, f5, f13, f17, rne # perform operation
fmsub.s f26, f5, f13, f17, rtz # perform operation
fmsub.s f26, f5, f13, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f26, f5, f13, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f26, f5, f13, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f26, f5, f13, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f26, f5, f13, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f26, f5, f13, f17 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0x7fffffff)
li x8, 0xa9ea633dd31c0f31 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f11, 0(x2) # load 0x00400000 from memory into f11
li x3, 0x6c77361d0fc6ae83 # load x3 with value 0x6c77361d0fc6ae83
sw x3, 0(x2) # store 0x6c77361d0fc6ae83 in memory
flw f10, 0(x2) # load 0x6c77361d0fc6ae83 from memory into f10
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f30, 0(x2) # load 0x7fffffff from memory into f30
fmsub.s f8, f11, f10, f30, dyn # perform operation
fmsub.s f8, f11, f10, f30, rdn # perform operation
fmsub.s f8, f11, f10, f30, rmm # perform operation
fmsub.s f8, f11, f10, f30, rne # perform operation
fmsub.s f8, f11, f10, f30, rtz # perform operation
fmsub.s f8, f11, f10, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f8, f11, f10, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f8, f11, f10, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f8, f11, f10, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f8, f11, f10, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f8, f11, f10, f30 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0x7f800001)
li x22, 0x3a0ea3f145712aaf # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f10, 0(x2) # load 0x00400000 from memory into f10
li x3, 0x84fe43d4436fecea # load x3 with value 0x84fe43d4436fecea
sw x3, 0(x2) # store 0x84fe43d4436fecea in memory
flw f25, 0(x2) # load 0x84fe43d4436fecea from memory into f25
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f12, 0(x2) # load 0x7f800001 from memory into f12
fmsub.s f22, f10, f25, f12, dyn # perform operation
fmsub.s f22, f10, f25, f12, rdn # perform operation
fmsub.s f22, f10, f25, f12, rmm # perform operation
fmsub.s f22, f10, f25, f12, rne # perform operation
fmsub.s f22, f10, f25, f12, rtz # perform operation
fmsub.s f22, f10, f25, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f22, f10, f25, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f22, f10, f25, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f22, f10, f25, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f22, f10, f25, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f22, f10, f25, f12 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0x7fbfffff)
li x13, 0x80888212f508a4f8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f31, 0(x2) # load 0x00400000 from memory into f31
li x3, 0xcb1fb97f0abb6ac8 # load x3 with value 0xcb1fb97f0abb6ac8
sw x3, 0(x2) # store 0xcb1fb97f0abb6ac8 in memory
flw f8, 0(x2) # load 0xcb1fb97f0abb6ac8 from memory into f8
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f17, 0(x2) # load 0x7fbfffff from memory into f17
fmsub.s f13, f31, f8, f17, dyn # perform operation
fmsub.s f13, f31, f8, f17, rdn # perform operation
fmsub.s f13, f31, f8, f17, rmm # perform operation
fmsub.s f13, f31, f8, f17, rne # perform operation
fmsub.s f13, f31, f8, f17, rtz # perform operation
fmsub.s f13, f31, f8, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f13, f31, f8, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f13, f31, f8, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f13, f31, f8, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f13, f31, f8, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f13, f31, f8, f17 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0x7ef8654f)
li x6, 0x362d112202c88646 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f24, 0(x2) # load 0x00400000 from memory into f24
li x3, 0xf102c121d2dff47 # load x3 with value 0xf102c121d2dff47
sw x3, 0(x2) # store 0xf102c121d2dff47 in memory
flw f9, 0(x2) # load 0xf102c121d2dff47 from memory into f9
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f17, 0(x2) # load 0x7ef8654f from memory into f17
fmsub.s f6, f24, f9, f17, dyn # perform operation
fmsub.s f6, f24, f9, f17, rdn # perform operation
fmsub.s f6, f24, f9, f17, rmm # perform operation
fmsub.s f6, f24, f9, f17, rne # perform operation
fmsub.s f6, f24, f9, f17, rtz # perform operation
fmsub.s f6, f24, f9, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f6, f24, f9, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f6, f24, f9, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f6, f24, f9, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f6, f24, f9, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f6, f24, f9, f17 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0x813d9ab0)
li x20, 0x669e831b5b6d2e14 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f7, 0(x2) # load 0x00400000 from memory into f7
li x3, 0x339237fc68da469b # load x3 with value 0x339237fc68da469b
sw x3, 0(x2) # store 0x339237fc68da469b in memory
flw f4, 0(x2) # load 0x339237fc68da469b from memory into f4
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f13, 0(x2) # load 0x813d9ab0 from memory into f13
fmsub.s f20, f7, f4, f13, dyn # perform operation
fmsub.s f20, f7, f4, f13, rdn # perform operation
fmsub.s f20, f7, f4, f13, rmm # perform operation
fmsub.s f20, f7, f4, f13, rne # perform operation
fmsub.s f20, f7, f4, f13, rtz # perform operation
fmsub.s f20, f7, f4, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f20, f7, f4, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f20, f7, f4, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f20, f7, f4, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f20, f7, f4, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f20, f7, f4, f13 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0x0)
li x24, 0xad5b01bc1f31e4f6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f2, 0(x2) # load 0x80400000 from memory into f2
li x3, 0x2350062de617d697 # load x3 with value 0x2350062de617d697
sw x3, 0(x2) # store 0x2350062de617d697 in memory
flw f1, 0(x2) # load 0x2350062de617d697 from memory into f1
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f16, 0(x2) # load 0x00000000 from memory into f16
fmsub.s f24, f2, f1, f16, dyn # perform operation
fmsub.s f24, f2, f1, f16, rdn # perform operation
fmsub.s f24, f2, f1, f16, rmm # perform operation
fmsub.s f24, f2, f1, f16, rne # perform operation
fmsub.s f24, f2, f1, f16, rtz # perform operation
fmsub.s f24, f2, f1, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f24, f2, f1, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f24, f2, f1, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f24, f2, f1, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f24, f2, f1, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f24, f2, f1, f16 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0x80000000)
li x14, 0x0242b693100321f2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f16, 0(x2) # load 0x80400000 from memory into f16
li x3, 0xdedf0d4d1b036f4a # load x3 with value 0xdedf0d4d1b036f4a
sw x3, 0(x2) # store 0xdedf0d4d1b036f4a in memory
flw f13, 0(x2) # load 0xdedf0d4d1b036f4a from memory into f13
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f21, 0(x2) # load 0x80000000 from memory into f21
fmsub.s f14, f16, f13, f21, dyn # perform operation
fmsub.s f14, f16, f13, f21, rdn # perform operation
fmsub.s f14, f16, f13, f21, rmm # perform operation
fmsub.s f14, f16, f13, f21, rne # perform operation
fmsub.s f14, f16, f13, f21, rtz # perform operation
fmsub.s f14, f16, f13, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f14, f16, f13, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f14, f16, f13, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f14, f16, f13, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f14, f16, f13, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f14, f16, f13, f21 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0x3f800000)
li x27, 0xd86d4960d7526849 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f22, 0(x2) # load 0x80400000 from memory into f22
li x3, 0x20b18ace22551d75 # load x3 with value 0x20b18ace22551d75
sw x3, 0(x2) # store 0x20b18ace22551d75 in memory
flw f5, 0(x2) # load 0x20b18ace22551d75 from memory into f5
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f14, 0(x2) # load 0x3f800000 from memory into f14
fmsub.s f27, f22, f5, f14, dyn # perform operation
fmsub.s f27, f22, f5, f14, rdn # perform operation
fmsub.s f27, f22, f5, f14, rmm # perform operation
fmsub.s f27, f22, f5, f14, rne # perform operation
fmsub.s f27, f22, f5, f14, rtz # perform operation
fmsub.s f27, f22, f5, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f27, f22, f5, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f27, f22, f5, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f27, f22, f5, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f27, f22, f5, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f27, f22, f5, f14 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0xbf800000)
li x5, 0x9e77f6f7e99b4c94 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f29, 0(x2) # load 0x80400000 from memory into f29
li x3, 0xd37f1a44d65eba9f # load x3 with value 0xd37f1a44d65eba9f
sw x3, 0(x2) # store 0xd37f1a44d65eba9f in memory
flw f24, 0(x2) # load 0xd37f1a44d65eba9f from memory into f24
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f8, 0(x2) # load 0xbf800000 from memory into f8
fmsub.s f5, f29, f24, f8, dyn # perform operation
fmsub.s f5, f29, f24, f8, rdn # perform operation
fmsub.s f5, f29, f24, f8, rmm # perform operation
fmsub.s f5, f29, f24, f8, rne # perform operation
fmsub.s f5, f29, f24, f8, rtz # perform operation
fmsub.s f5, f29, f24, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f5, f29, f24, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f5, f29, f24, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f5, f29, f24, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f5, f29, f24, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f5, f29, f24, f8 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0x3fc00000)
li x31, 0xca8f4b054650c5c3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f18, 0(x2) # load 0x80400000 from memory into f18
li x3, 0x53861e6bd23373a9 # load x3 with value 0x53861e6bd23373a9
sw x3, 0(x2) # store 0x53861e6bd23373a9 in memory
flw f12, 0(x2) # load 0x53861e6bd23373a9 from memory into f12
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f19, 0(x2) # load 0x3fc00000 from memory into f19
fmsub.s f31, f18, f12, f19, dyn # perform operation
fmsub.s f31, f18, f12, f19, rdn # perform operation
fmsub.s f31, f18, f12, f19, rmm # perform operation
fmsub.s f31, f18, f12, f19, rne # perform operation
fmsub.s f31, f18, f12, f19, rtz # perform operation
fmsub.s f31, f18, f12, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f31, f18, f12, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f31, f18, f12, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f31, f18, f12, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f31, f18, f12, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f31, f18, f12, f19 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0xbfc00000)
li x6, 0x7a61b1965fdbd459 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f9, 0(x2) # load 0x80400000 from memory into f9
li x3, 0xc67a1f59cbe4a2aa # load x3 with value 0xc67a1f59cbe4a2aa
sw x3, 0(x2) # store 0xc67a1f59cbe4a2aa in memory
flw f3, 0(x2) # load 0xc67a1f59cbe4a2aa from memory into f3
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f12, 0(x2) # load 0xbfc00000 from memory into f12
fmsub.s f6, f9, f3, f12, dyn # perform operation
fmsub.s f6, f9, f3, f12, rdn # perform operation
fmsub.s f6, f9, f3, f12, rmm # perform operation
fmsub.s f6, f9, f3, f12, rne # perform operation
fmsub.s f6, f9, f3, f12, rtz # perform operation
fmsub.s f6, f9, f3, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f6, f9, f3, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f6, f9, f3, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f6, f9, f3, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f6, f9, f3, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f6, f9, f3, f12 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0x40000000)
li x7, 0x1ab1d8d84743ebb8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f29, 0(x2) # load 0x80400000 from memory into f29
li x3, 0x99d0406ce94781fd # load x3 with value 0x99d0406ce94781fd
sw x3, 0(x2) # store 0x99d0406ce94781fd in memory
flw f30, 0(x2) # load 0x99d0406ce94781fd from memory into f30
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f2, 0(x2) # load 0x40000000 from memory into f2
fmsub.s f7, f29, f30, f2, dyn # perform operation
fmsub.s f7, f29, f30, f2, rdn # perform operation
fmsub.s f7, f29, f30, f2, rmm # perform operation
fmsub.s f7, f29, f30, f2, rne # perform operation
fmsub.s f7, f29, f30, f2, rtz # perform operation
fmsub.s f7, f29, f30, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f7, f29, f30, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f7, f29, f30, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f7, f29, f30, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f7, f29, f30, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f7, f29, f30, f2 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0xc0000000)
li x24, 0x9a31119cdeb872be # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f20, 0(x2) # load 0x80400000 from memory into f20
li x3, 0xaa959dd0f8df856e # load x3 with value 0xaa959dd0f8df856e
sw x3, 0(x2) # store 0xaa959dd0f8df856e in memory
flw f18, 0(x2) # load 0xaa959dd0f8df856e from memory into f18
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f16, 0(x2) # load 0xc0000000 from memory into f16
fmsub.s f24, f20, f18, f16, dyn # perform operation
fmsub.s f24, f20, f18, f16, rdn # perform operation
fmsub.s f24, f20, f18, f16, rmm # perform operation
fmsub.s f24, f20, f18, f16, rne # perform operation
fmsub.s f24, f20, f18, f16, rtz # perform operation
fmsub.s f24, f20, f18, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f24, f20, f18, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f24, f20, f18, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f24, f20, f18, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f24, f20, f18, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f24, f20, f18, f16 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0x800000)
li x19, 0x158a9da732403c81 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f30, 0(x2) # load 0x80400000 from memory into f30
li x3, 0xbf8d9271b861622 # load x3 with value 0xbf8d9271b861622
sw x3, 0(x2) # store 0xbf8d9271b861622 in memory
flw f13, 0(x2) # load 0xbf8d9271b861622 from memory into f13
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f16, 0(x2) # load 0x00800000 from memory into f16
fmsub.s f19, f30, f13, f16, dyn # perform operation
fmsub.s f19, f30, f13, f16, rdn # perform operation
fmsub.s f19, f30, f13, f16, rmm # perform operation
fmsub.s f19, f30, f13, f16, rne # perform operation
fmsub.s f19, f30, f13, f16, rtz # perform operation
fmsub.s f19, f30, f13, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f19, f30, f13, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f19, f30, f13, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f19, f30, f13, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f19, f30, f13, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f19, f30, f13, f16 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0x80800000)
li x12, 0x85691edeb28ca025 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f27, 0(x2) # load 0x80400000 from memory into f27
li x3, 0x8561271c58ccbb48 # load x3 with value 0x8561271c58ccbb48
sw x3, 0(x2) # store 0x8561271c58ccbb48 in memory
flw f26, 0(x2) # load 0x8561271c58ccbb48 from memory into f26
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f18, 0(x2) # load 0x80800000 from memory into f18
fmsub.s f12, f27, f26, f18, dyn # perform operation
fmsub.s f12, f27, f26, f18, rdn # perform operation
fmsub.s f12, f27, f26, f18, rmm # perform operation
fmsub.s f12, f27, f26, f18, rne # perform operation
fmsub.s f12, f27, f26, f18, rtz # perform operation
fmsub.s f12, f27, f26, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f12, f27, f26, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f12, f27, f26, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f12, f27, f26, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f12, f27, f26, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f12, f27, f26, f18 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0x7f7fffff)
li x6, 0xfd3693a6e361b36e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f15, 0(x2) # load 0x80400000 from memory into f15
li x3, 0xa513e4f34ad0fee0 # load x3 with value 0xa513e4f34ad0fee0
sw x3, 0(x2) # store 0xa513e4f34ad0fee0 in memory
flw f12, 0(x2) # load 0xa513e4f34ad0fee0 from memory into f12
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f30, 0(x2) # load 0x7f7fffff from memory into f30
fmsub.s f6, f15, f12, f30, dyn # perform operation
fmsub.s f6, f15, f12, f30, rdn # perform operation
fmsub.s f6, f15, f12, f30, rmm # perform operation
fmsub.s f6, f15, f12, f30, rne # perform operation
fmsub.s f6, f15, f12, f30, rtz # perform operation
fmsub.s f6, f15, f12, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f6, f15, f12, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f6, f15, f12, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f6, f15, f12, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f6, f15, f12, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f6, f15, f12, f30 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0xff7fffff)
li x21, 0xc8fbe8725c7bb743 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f18, 0(x2) # load 0x80400000 from memory into f18
li x3, 0x66ae996b9a85ef14 # load x3 with value 0x66ae996b9a85ef14
sw x3, 0(x2) # store 0x66ae996b9a85ef14 in memory
flw f31, 0(x2) # load 0x66ae996b9a85ef14 from memory into f31
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f6, 0(x2) # load 0xff7fffff from memory into f6
fmsub.s f21, f18, f31, f6, dyn # perform operation
fmsub.s f21, f18, f31, f6, rdn # perform operation
fmsub.s f21, f18, f31, f6, rmm # perform operation
fmsub.s f21, f18, f31, f6, rne # perform operation
fmsub.s f21, f18, f31, f6, rtz # perform operation
fmsub.s f21, f18, f31, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f21, f18, f31, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f21, f18, f31, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f21, f18, f31, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f21, f18, f31, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f21, f18, f31, f6 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0x7fffff)
li x27, 0xf756d9e8edf8b40f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f7, 0(x2) # load 0x80400000 from memory into f7
li x3, 0xdee93f6bb3f12419 # load x3 with value 0xdee93f6bb3f12419
sw x3, 0(x2) # store 0xdee93f6bb3f12419 in memory
flw f1, 0(x2) # load 0xdee93f6bb3f12419 from memory into f1
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f30, 0(x2) # load 0x007fffff from memory into f30
fmsub.s f27, f7, f1, f30, dyn # perform operation
fmsub.s f27, f7, f1, f30, rdn # perform operation
fmsub.s f27, f7, f1, f30, rmm # perform operation
fmsub.s f27, f7, f1, f30, rne # perform operation
fmsub.s f27, f7, f1, f30, rtz # perform operation
fmsub.s f27, f7, f1, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f27, f7, f1, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f27, f7, f1, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f27, f7, f1, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f27, f7, f1, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f27, f7, f1, f30 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0x807fffff)
li x25, 0x18a3c068b9b94ac8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f8, 0(x2) # load 0x80400000 from memory into f8
li x3, 0xf0e08393f16c0e4d # load x3 with value 0xf0e08393f16c0e4d
sw x3, 0(x2) # store 0xf0e08393f16c0e4d in memory
flw f16, 0(x2) # load 0xf0e08393f16c0e4d from memory into f16
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f24, 0(x2) # load 0x807fffff from memory into f24
fmsub.s f25, f8, f16, f24, dyn # perform operation
fmsub.s f25, f8, f16, f24, rdn # perform operation
fmsub.s f25, f8, f16, f24, rmm # perform operation
fmsub.s f25, f8, f16, f24, rne # perform operation
fmsub.s f25, f8, f16, f24, rtz # perform operation
fmsub.s f25, f8, f16, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f25, f8, f16, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f25, f8, f16, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f25, f8, f16, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f25, f8, f16, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f25, f8, f16, f24 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0x400000)
li x13, 0x75ce1933b5153484 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f31, 0(x2) # load 0x80400000 from memory into f31
li x3, 0x71ed8f9593534e32 # load x3 with value 0x71ed8f9593534e32
sw x3, 0(x2) # store 0x71ed8f9593534e32 in memory
flw f14, 0(x2) # load 0x71ed8f9593534e32 from memory into f14
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f19, 0(x2) # load 0x00400000 from memory into f19
fmsub.s f13, f31, f14, f19, dyn # perform operation
fmsub.s f13, f31, f14, f19, rdn # perform operation
fmsub.s f13, f31, f14, f19, rmm # perform operation
fmsub.s f13, f31, f14, f19, rne # perform operation
fmsub.s f13, f31, f14, f19, rtz # perform operation
fmsub.s f13, f31, f14, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f13, f31, f14, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f13, f31, f14, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f13, f31, f14, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f13, f31, f14, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f13, f31, f14, f19 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0x80400000)
li x25, 0xa346f22081fc9a1d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f3, 0(x2) # load 0x80400000 from memory into f3
li x3, 0xb346f29009adb917 # load x3 with value 0xb346f29009adb917
sw x3, 0(x2) # store 0xb346f29009adb917 in memory
flw f21, 0(x2) # load 0xb346f29009adb917 from memory into f21
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f15, 0(x2) # load 0x80400000 from memory into f15
fmsub.s f25, f3, f21, f15, dyn # perform operation
fmsub.s f25, f3, f21, f15, rdn # perform operation
fmsub.s f25, f3, f21, f15, rmm # perform operation
fmsub.s f25, f3, f21, f15, rne # perform operation
fmsub.s f25, f3, f21, f15, rtz # perform operation
fmsub.s f25, f3, f21, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f25, f3, f21, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f25, f3, f21, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f25, f3, f21, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f25, f3, f21, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f25, f3, f21, f15 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0x1)
li x22, 0x0b2c118e8fae95e5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f11, 0(x2) # load 0x80400000 from memory into f11
li x3, 0x3305b935f3195ab5 # load x3 with value 0x3305b935f3195ab5
sw x3, 0(x2) # store 0x3305b935f3195ab5 in memory
flw f25, 0(x2) # load 0x3305b935f3195ab5 from memory into f25
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f19, 0(x2) # load 0x00000001 from memory into f19
fmsub.s f22, f11, f25, f19, dyn # perform operation
fmsub.s f22, f11, f25, f19, rdn # perform operation
fmsub.s f22, f11, f25, f19, rmm # perform operation
fmsub.s f22, f11, f25, f19, rne # perform operation
fmsub.s f22, f11, f25, f19, rtz # perform operation
fmsub.s f22, f11, f25, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f22, f11, f25, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f22, f11, f25, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f22, f11, f25, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f22, f11, f25, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f22, f11, f25, f19 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0x80000001)
li x25, 0xc3ceeeceec0773d6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f26, 0(x2) # load 0x80400000 from memory into f26
li x3, 0xcc2ef545da862c06 # load x3 with value 0xcc2ef545da862c06
sw x3, 0(x2) # store 0xcc2ef545da862c06 in memory
flw f3, 0(x2) # load 0xcc2ef545da862c06 from memory into f3
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f13, 0(x2) # load 0x80000001 from memory into f13
fmsub.s f25, f26, f3, f13, dyn # perform operation
fmsub.s f25, f26, f3, f13, rdn # perform operation
fmsub.s f25, f26, f3, f13, rmm # perform operation
fmsub.s f25, f26, f3, f13, rne # perform operation
fmsub.s f25, f26, f3, f13, rtz # perform operation
fmsub.s f25, f26, f3, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f25, f26, f3, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f25, f26, f3, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f25, f26, f3, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f25, f26, f3, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f25, f26, f3, f13 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0x7f800000)
li x22, 0x30ce1bad48d1bc2a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f23, 0(x2) # load 0x80400000 from memory into f23
li x3, 0x2fc97ba37fa5102b # load x3 with value 0x2fc97ba37fa5102b
sw x3, 0(x2) # store 0x2fc97ba37fa5102b in memory
flw f3, 0(x2) # load 0x2fc97ba37fa5102b from memory into f3
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f13, 0(x2) # load 0x7f800000 from memory into f13
fmsub.s f22, f23, f3, f13, dyn # perform operation
fmsub.s f22, f23, f3, f13, rdn # perform operation
fmsub.s f22, f23, f3, f13, rmm # perform operation
fmsub.s f22, f23, f3, f13, rne # perform operation
fmsub.s f22, f23, f3, f13, rtz # perform operation
fmsub.s f22, f23, f3, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f22, f23, f3, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f22, f23, f3, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f22, f23, f3, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f22, f23, f3, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f22, f23, f3, f13 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0xff800000)
li x26, 0xbfb7694d99c4a92c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f24, 0(x2) # load 0x80400000 from memory into f24
li x3, 0x3fc65b2e6a995041 # load x3 with value 0x3fc65b2e6a995041
sw x3, 0(x2) # store 0x3fc65b2e6a995041 in memory
flw f21, 0(x2) # load 0x3fc65b2e6a995041 from memory into f21
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f5, 0(x2) # load 0xff800000 from memory into f5
fmsub.s f26, f24, f21, f5, dyn # perform operation
fmsub.s f26, f24, f21, f5, rdn # perform operation
fmsub.s f26, f24, f21, f5, rmm # perform operation
fmsub.s f26, f24, f21, f5, rne # perform operation
fmsub.s f26, f24, f21, f5, rtz # perform operation
fmsub.s f26, f24, f21, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f26, f24, f21, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f26, f24, f21, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f26, f24, f21, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f26, f24, f21, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f26, f24, f21, f5 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0x7fc00000)
li x17, 0xb6fa320beb91b3a4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f25, 0(x2) # load 0x80400000 from memory into f25
li x3, 0x7295aa471583b235 # load x3 with value 0x7295aa471583b235
sw x3, 0(x2) # store 0x7295aa471583b235 in memory
flw f23, 0(x2) # load 0x7295aa471583b235 from memory into f23
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f11, 0(x2) # load 0x7fc00000 from memory into f11
fmsub.s f17, f25, f23, f11, dyn # perform operation
fmsub.s f17, f25, f23, f11, rdn # perform operation
fmsub.s f17, f25, f23, f11, rmm # perform operation
fmsub.s f17, f25, f23, f11, rne # perform operation
fmsub.s f17, f25, f23, f11, rtz # perform operation
fmsub.s f17, f25, f23, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f17, f25, f23, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f17, f25, f23, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f17, f25, f23, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f17, f25, f23, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f17, f25, f23, f11 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0x7fffffff)
li x21, 0xc38e50be58c4f4d3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f16, 0(x2) # load 0x80400000 from memory into f16
li x3, 0x35e7f6949400cb51 # load x3 with value 0x35e7f6949400cb51
sw x3, 0(x2) # store 0x35e7f6949400cb51 in memory
flw f27, 0(x2) # load 0x35e7f6949400cb51 from memory into f27
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f22, 0(x2) # load 0x7fffffff from memory into f22
fmsub.s f21, f16, f27, f22, dyn # perform operation
fmsub.s f21, f16, f27, f22, rdn # perform operation
fmsub.s f21, f16, f27, f22, rmm # perform operation
fmsub.s f21, f16, f27, f22, rne # perform operation
fmsub.s f21, f16, f27, f22, rtz # perform operation
fmsub.s f21, f16, f27, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f21, f16, f27, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f21, f16, f27, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f21, f16, f27, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f21, f16, f27, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f21, f16, f27, f22 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0x7f800001)
li x24, 0xde278b58f140a480 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f20, 0(x2) # load 0x80400000 from memory into f20
li x3, 0x887290675048d51e # load x3 with value 0x887290675048d51e
sw x3, 0(x2) # store 0x887290675048d51e in memory
flw f12, 0(x2) # load 0x887290675048d51e from memory into f12
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f3, 0(x2) # load 0x7f800001 from memory into f3
fmsub.s f24, f20, f12, f3, dyn # perform operation
fmsub.s f24, f20, f12, f3, rdn # perform operation
fmsub.s f24, f20, f12, f3, rmm # perform operation
fmsub.s f24, f20, f12, f3, rne # perform operation
fmsub.s f24, f20, f12, f3, rtz # perform operation
fmsub.s f24, f20, f12, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f24, f20, f12, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f24, f20, f12, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f24, f20, f12, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f24, f20, f12, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f24, f20, f12, f3 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0x7fbfffff)
li x9, 0xec97a82d4d948ba6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f28, 0(x2) # load 0x80400000 from memory into f28
li x3, 0x41cab48974df88d1 # load x3 with value 0x41cab48974df88d1
sw x3, 0(x2) # store 0x41cab48974df88d1 in memory
flw f14, 0(x2) # load 0x41cab48974df88d1 from memory into f14
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f18, 0(x2) # load 0x7fbfffff from memory into f18
fmsub.s f9, f28, f14, f18, dyn # perform operation
fmsub.s f9, f28, f14, f18, rdn # perform operation
fmsub.s f9, f28, f14, f18, rmm # perform operation
fmsub.s f9, f28, f14, f18, rne # perform operation
fmsub.s f9, f28, f14, f18, rtz # perform operation
fmsub.s f9, f28, f14, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f9, f28, f14, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f9, f28, f14, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f9, f28, f14, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f9, f28, f14, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f9, f28, f14, f18 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0x7ef8654f)
li x29, 0xbbbf0b7af4c4fdeb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f16, 0(x2) # load 0x80400000 from memory into f16
li x3, 0xf4d5a690dd2f21b6 # load x3 with value 0xf4d5a690dd2f21b6
sw x3, 0(x2) # store 0xf4d5a690dd2f21b6 in memory
flw f24, 0(x2) # load 0xf4d5a690dd2f21b6 from memory into f24
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f9, 0(x2) # load 0x7ef8654f from memory into f9
fmsub.s f29, f16, f24, f9, dyn # perform operation
fmsub.s f29, f16, f24, f9, rdn # perform operation
fmsub.s f29, f16, f24, f9, rmm # perform operation
fmsub.s f29, f16, f24, f9, rne # perform operation
fmsub.s f29, f16, f24, f9, rtz # perform operation
fmsub.s f29, f16, f24, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f29, f16, f24, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f29, f16, f24, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f29, f16, f24, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f29, f16, f24, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f29, f16, f24, f9 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0x813d9ab0)
li x18, 0xbcd9d646fcd6af5b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f7, 0(x2) # load 0x80400000 from memory into f7
li x3, 0x4e3b1879d30aa5d5 # load x3 with value 0x4e3b1879d30aa5d5
sw x3, 0(x2) # store 0x4e3b1879d30aa5d5 in memory
flw f24, 0(x2) # load 0x4e3b1879d30aa5d5 from memory into f24
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f3, 0(x2) # load 0x813d9ab0 from memory into f3
fmsub.s f18, f7, f24, f3, dyn # perform operation
fmsub.s f18, f7, f24, f3, rdn # perform operation
fmsub.s f18, f7, f24, f3, rmm # perform operation
fmsub.s f18, f7, f24, f3, rne # perform operation
fmsub.s f18, f7, f24, f3, rtz # perform operation
fmsub.s f18, f7, f24, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f18, f7, f24, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f18, f7, f24, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f18, f7, f24, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f18, f7, f24, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f18, f7, f24, f3 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x0)
li x12, 0x32e658477ad8b126 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f13, 0(x2) # load 0x00000001 from memory into f13
li x3, 0xb77fc05cb9fd542 # load x3 with value 0xb77fc05cb9fd542
sw x3, 0(x2) # store 0xb77fc05cb9fd542 in memory
flw f5, 0(x2) # load 0xb77fc05cb9fd542 from memory into f5
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f26, 0(x2) # load 0x00000000 from memory into f26
fmsub.s f12, f13, f5, f26, dyn # perform operation
fmsub.s f12, f13, f5, f26, rdn # perform operation
fmsub.s f12, f13, f5, f26, rmm # perform operation
fmsub.s f12, f13, f5, f26, rne # perform operation
fmsub.s f12, f13, f5, f26, rtz # perform operation
fmsub.s f12, f13, f5, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f12, f13, f5, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f12, f13, f5, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f12, f13, f5, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f12, f13, f5, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f12, f13, f5, f26 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x80000000)
li x23, 0x2e4ca01f4ff73dcf # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f3, 0(x2) # load 0x00000001 from memory into f3
li x3, 0x2c739badc0f91003 # load x3 with value 0x2c739badc0f91003
sw x3, 0(x2) # store 0x2c739badc0f91003 in memory
flw f30, 0(x2) # load 0x2c739badc0f91003 from memory into f30
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f17, 0(x2) # load 0x80000000 from memory into f17
fmsub.s f23, f3, f30, f17, dyn # perform operation
fmsub.s f23, f3, f30, f17, rdn # perform operation
fmsub.s f23, f3, f30, f17, rmm # perform operation
fmsub.s f23, f3, f30, f17, rne # perform operation
fmsub.s f23, f3, f30, f17, rtz # perform operation
fmsub.s f23, f3, f30, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f23, f3, f30, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f23, f3, f30, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f23, f3, f30, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f23, f3, f30, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f23, f3, f30, f17 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x3f800000)
li x30, 0xd3a87144bd30f367 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f8, 0(x2) # load 0x00000001 from memory into f8
li x3, 0xe1bb03d7065510e3 # load x3 with value 0xe1bb03d7065510e3
sw x3, 0(x2) # store 0xe1bb03d7065510e3 in memory
flw f13, 0(x2) # load 0xe1bb03d7065510e3 from memory into f13
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f5, 0(x2) # load 0x3f800000 from memory into f5
fmsub.s f30, f8, f13, f5, dyn # perform operation
fmsub.s f30, f8, f13, f5, rdn # perform operation
fmsub.s f30, f8, f13, f5, rmm # perform operation
fmsub.s f30, f8, f13, f5, rne # perform operation
fmsub.s f30, f8, f13, f5, rtz # perform operation
fmsub.s f30, f8, f13, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f30, f8, f13, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f30, f8, f13, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f30, f8, f13, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f30, f8, f13, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f30, f8, f13, f5 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0xbf800000)
li x27, 0x84a0eda894bd106c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f11, 0(x2) # load 0x00000001 from memory into f11
li x3, 0xade93917d8317080 # load x3 with value 0xade93917d8317080
sw x3, 0(x2) # store 0xade93917d8317080 in memory
flw f29, 0(x2) # load 0xade93917d8317080 from memory into f29
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f25, 0(x2) # load 0xbf800000 from memory into f25
fmsub.s f27, f11, f29, f25, dyn # perform operation
fmsub.s f27, f11, f29, f25, rdn # perform operation
fmsub.s f27, f11, f29, f25, rmm # perform operation
fmsub.s f27, f11, f29, f25, rne # perform operation
fmsub.s f27, f11, f29, f25, rtz # perform operation
fmsub.s f27, f11, f29, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f27, f11, f29, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f27, f11, f29, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f27, f11, f29, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f27, f11, f29, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f27, f11, f29, f25 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x3fc00000)
li x18, 0x7048e52c4c272f1d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f11, 0(x2) # load 0x00000001 from memory into f11
li x3, 0xa942364a8fa76824 # load x3 with value 0xa942364a8fa76824
sw x3, 0(x2) # store 0xa942364a8fa76824 in memory
flw f20, 0(x2) # load 0xa942364a8fa76824 from memory into f20
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f4, 0(x2) # load 0x3fc00000 from memory into f4
fmsub.s f18, f11, f20, f4, dyn # perform operation
fmsub.s f18, f11, f20, f4, rdn # perform operation
fmsub.s f18, f11, f20, f4, rmm # perform operation
fmsub.s f18, f11, f20, f4, rne # perform operation
fmsub.s f18, f11, f20, f4, rtz # perform operation
fmsub.s f18, f11, f20, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f18, f11, f20, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f18, f11, f20, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f18, f11, f20, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f18, f11, f20, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f18, f11, f20, f4 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0xbfc00000)
li x12, 0x549617421a4ab0d6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f6, 0(x2) # load 0x00000001 from memory into f6
li x3, 0x22bf6d419102e737 # load x3 with value 0x22bf6d419102e737
sw x3, 0(x2) # store 0x22bf6d419102e737 in memory
flw f8, 0(x2) # load 0x22bf6d419102e737 from memory into f8
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f24, 0(x2) # load 0xbfc00000 from memory into f24
fmsub.s f12, f6, f8, f24, dyn # perform operation
fmsub.s f12, f6, f8, f24, rdn # perform operation
fmsub.s f12, f6, f8, f24, rmm # perform operation
fmsub.s f12, f6, f8, f24, rne # perform operation
fmsub.s f12, f6, f8, f24, rtz # perform operation
fmsub.s f12, f6, f8, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f12, f6, f8, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f12, f6, f8, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f12, f6, f8, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f12, f6, f8, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f12, f6, f8, f24 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x40000000)
li x18, 0x5e1d73817329d4c8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f9, 0(x2) # load 0x00000001 from memory into f9
li x3, 0xaec9c285afa54a59 # load x3 with value 0xaec9c285afa54a59
sw x3, 0(x2) # store 0xaec9c285afa54a59 in memory
flw f19, 0(x2) # load 0xaec9c285afa54a59 from memory into f19
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f8, 0(x2) # load 0x40000000 from memory into f8
fmsub.s f18, f9, f19, f8, dyn # perform operation
fmsub.s f18, f9, f19, f8, rdn # perform operation
fmsub.s f18, f9, f19, f8, rmm # perform operation
fmsub.s f18, f9, f19, f8, rne # perform operation
fmsub.s f18, f9, f19, f8, rtz # perform operation
fmsub.s f18, f9, f19, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f18, f9, f19, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f18, f9, f19, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f18, f9, f19, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f18, f9, f19, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f18, f9, f19, f8 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0xc0000000)
li x20, 0x11712ec91d8eb39b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f25, 0(x2) # load 0x00000001 from memory into f25
li x3, 0xf698168231df583d # load x3 with value 0xf698168231df583d
sw x3, 0(x2) # store 0xf698168231df583d in memory
flw f18, 0(x2) # load 0xf698168231df583d from memory into f18
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f11, 0(x2) # load 0xc0000000 from memory into f11
fmsub.s f20, f25, f18, f11, dyn # perform operation
fmsub.s f20, f25, f18, f11, rdn # perform operation
fmsub.s f20, f25, f18, f11, rmm # perform operation
fmsub.s f20, f25, f18, f11, rne # perform operation
fmsub.s f20, f25, f18, f11, rtz # perform operation
fmsub.s f20, f25, f18, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f20, f25, f18, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f20, f25, f18, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f20, f25, f18, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f20, f25, f18, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f20, f25, f18, f11 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x800000)
li x1, 0x871351508c6af719 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f19, 0(x2) # load 0x00000001 from memory into f19
li x3, 0x1862702bfbcd219f # load x3 with value 0x1862702bfbcd219f
sw x3, 0(x2) # store 0x1862702bfbcd219f in memory
flw f17, 0(x2) # load 0x1862702bfbcd219f from memory into f17
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f29, 0(x2) # load 0x00800000 from memory into f29
fmsub.s f1, f19, f17, f29, dyn # perform operation
fmsub.s f1, f19, f17, f29, rdn # perform operation
fmsub.s f1, f19, f17, f29, rmm # perform operation
fmsub.s f1, f19, f17, f29, rne # perform operation
fmsub.s f1, f19, f17, f29, rtz # perform operation
fmsub.s f1, f19, f17, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f1, f19, f17, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f1, f19, f17, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f1, f19, f17, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f1, f19, f17, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f1, f19, f17, f29 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x80800000)
li x11, 0x58e8d65dc92487ba # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f21, 0(x2) # load 0x00000001 from memory into f21
li x3, 0xa582158f84f95e18 # load x3 with value 0xa582158f84f95e18
sw x3, 0(x2) # store 0xa582158f84f95e18 in memory
flw f15, 0(x2) # load 0xa582158f84f95e18 from memory into f15
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f10, 0(x2) # load 0x80800000 from memory into f10
fmsub.s f11, f21, f15, f10, dyn # perform operation
fmsub.s f11, f21, f15, f10, rdn # perform operation
fmsub.s f11, f21, f15, f10, rmm # perform operation
fmsub.s f11, f21, f15, f10, rne # perform operation
fmsub.s f11, f21, f15, f10, rtz # perform operation
fmsub.s f11, f21, f15, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f11, f21, f15, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f11, f21, f15, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f11, f21, f15, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f11, f21, f15, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f11, f21, f15, f10 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x7f7fffff)
li x14, 0x0590f9bebc955310 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f31, 0(x2) # load 0x00000001 from memory into f31
li x3, 0x8ffff1156b416147 # load x3 with value 0x8ffff1156b416147
sw x3, 0(x2) # store 0x8ffff1156b416147 in memory
flw f2, 0(x2) # load 0x8ffff1156b416147 from memory into f2
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f24, 0(x2) # load 0x7f7fffff from memory into f24
fmsub.s f14, f31, f2, f24, dyn # perform operation
fmsub.s f14, f31, f2, f24, rdn # perform operation
fmsub.s f14, f31, f2, f24, rmm # perform operation
fmsub.s f14, f31, f2, f24, rne # perform operation
fmsub.s f14, f31, f2, f24, rtz # perform operation
fmsub.s f14, f31, f2, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f14, f31, f2, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f14, f31, f2, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f14, f31, f2, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f14, f31, f2, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f14, f31, f2, f24 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0xff7fffff)
li x5, 0xc70cc3d16024e06e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f16, 0(x2) # load 0x00000001 from memory into f16
li x3, 0x52f4cea4f3efb84e # load x3 with value 0x52f4cea4f3efb84e
sw x3, 0(x2) # store 0x52f4cea4f3efb84e in memory
flw f14, 0(x2) # load 0x52f4cea4f3efb84e from memory into f14
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f17, 0(x2) # load 0xff7fffff from memory into f17
fmsub.s f5, f16, f14, f17, dyn # perform operation
fmsub.s f5, f16, f14, f17, rdn # perform operation
fmsub.s f5, f16, f14, f17, rmm # perform operation
fmsub.s f5, f16, f14, f17, rne # perform operation
fmsub.s f5, f16, f14, f17, rtz # perform operation
fmsub.s f5, f16, f14, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f5, f16, f14, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f5, f16, f14, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f5, f16, f14, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f5, f16, f14, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f5, f16, f14, f17 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x7fffff)
li x2, 0xc60a40a2cbade4db # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f21, 0(x2) # load 0x00000001 from memory into f21
li x3, 0xda20dfed0e15fbaf # load x3 with value 0xda20dfed0e15fbaf
sw x3, 0(x2) # store 0xda20dfed0e15fbaf in memory
flw f15, 0(x2) # load 0xda20dfed0e15fbaf from memory into f15
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f9, 0(x2) # load 0x007fffff from memory into f9
fmsub.s f2, f21, f15, f9, dyn # perform operation
fmsub.s f2, f21, f15, f9, rdn # perform operation
fmsub.s f2, f21, f15, f9, rmm # perform operation
fmsub.s f2, f21, f15, f9, rne # perform operation
fmsub.s f2, f21, f15, f9, rtz # perform operation
fmsub.s f2, f21, f15, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f2, f21, f15, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f2, f21, f15, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f2, f21, f15, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f2, f21, f15, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f2, f21, f15, f9 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x807fffff)
li x15, 0xc23cfe98049cba5d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f21, 0(x2) # load 0x00000001 from memory into f21
li x3, 0x29a03959bfa6f400 # load x3 with value 0x29a03959bfa6f400
sw x3, 0(x2) # store 0x29a03959bfa6f400 in memory
flw f25, 0(x2) # load 0x29a03959bfa6f400 from memory into f25
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f30, 0(x2) # load 0x807fffff from memory into f30
fmsub.s f15, f21, f25, f30, dyn # perform operation
fmsub.s f15, f21, f25, f30, rdn # perform operation
fmsub.s f15, f21, f25, f30, rmm # perform operation
fmsub.s f15, f21, f25, f30, rne # perform operation
fmsub.s f15, f21, f25, f30, rtz # perform operation
fmsub.s f15, f21, f25, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f15, f21, f25, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f15, f21, f25, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f15, f21, f25, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f15, f21, f25, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f15, f21, f25, f30 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x400000)
li x4, 0xef5738ae2e1153a0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f24, 0(x2) # load 0x00000001 from memory into f24
li x3, 0x70fa3cad29e5f49c # load x3 with value 0x70fa3cad29e5f49c
sw x3, 0(x2) # store 0x70fa3cad29e5f49c in memory
flw f14, 0(x2) # load 0x70fa3cad29e5f49c from memory into f14
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f16, 0(x2) # load 0x00400000 from memory into f16
fmsub.s f4, f24, f14, f16, dyn # perform operation
fmsub.s f4, f24, f14, f16, rdn # perform operation
fmsub.s f4, f24, f14, f16, rmm # perform operation
fmsub.s f4, f24, f14, f16, rne # perform operation
fmsub.s f4, f24, f14, f16, rtz # perform operation
fmsub.s f4, f24, f14, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f4, f24, f14, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f4, f24, f14, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f4, f24, f14, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f4, f24, f14, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f4, f24, f14, f16 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x80400000)
li x29, 0xece162421120045a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f1, 0(x2) # load 0x00000001 from memory into f1
li x3, 0x555cba0aeefd3ecb # load x3 with value 0x555cba0aeefd3ecb
sw x3, 0(x2) # store 0x555cba0aeefd3ecb in memory
flw f8, 0(x2) # load 0x555cba0aeefd3ecb from memory into f8
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f21, 0(x2) # load 0x80400000 from memory into f21
fmsub.s f29, f1, f8, f21, dyn # perform operation
fmsub.s f29, f1, f8, f21, rdn # perform operation
fmsub.s f29, f1, f8, f21, rmm # perform operation
fmsub.s f29, f1, f8, f21, rne # perform operation
fmsub.s f29, f1, f8, f21, rtz # perform operation
fmsub.s f29, f1, f8, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f29, f1, f8, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f29, f1, f8, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f29, f1, f8, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f29, f1, f8, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f29, f1, f8, f21 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x1)
li x14, 0xc46cf488e6148290 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f21, 0(x2) # load 0x00000001 from memory into f21
li x3, 0x5bdc87076537227d # load x3 with value 0x5bdc87076537227d
sw x3, 0(x2) # store 0x5bdc87076537227d in memory
flw f20, 0(x2) # load 0x5bdc87076537227d from memory into f20
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f29, 0(x2) # load 0x00000001 from memory into f29
fmsub.s f14, f21, f20, f29, dyn # perform operation
fmsub.s f14, f21, f20, f29, rdn # perform operation
fmsub.s f14, f21, f20, f29, rmm # perform operation
fmsub.s f14, f21, f20, f29, rne # perform operation
fmsub.s f14, f21, f20, f29, rtz # perform operation
fmsub.s f14, f21, f20, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f14, f21, f20, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f14, f21, f20, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f14, f21, f20, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f14, f21, f20, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f14, f21, f20, f29 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x80000001)
li x2, 0xea1a19bc5eaaf176 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f30, 0(x2) # load 0x00000001 from memory into f30
li x3, 0x8d787c76587e91ce # load x3 with value 0x8d787c76587e91ce
sw x3, 0(x2) # store 0x8d787c76587e91ce in memory
flw f20, 0(x2) # load 0x8d787c76587e91ce from memory into f20
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f14, 0(x2) # load 0x80000001 from memory into f14
fmsub.s f2, f30, f20, f14, dyn # perform operation
fmsub.s f2, f30, f20, f14, rdn # perform operation
fmsub.s f2, f30, f20, f14, rmm # perform operation
fmsub.s f2, f30, f20, f14, rne # perform operation
fmsub.s f2, f30, f20, f14, rtz # perform operation
fmsub.s f2, f30, f20, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f2, f30, f20, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f2, f30, f20, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f2, f30, f20, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f2, f30, f20, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f2, f30, f20, f14 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x7f800000)
li x22, 0x0ebce7289a07d5a4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f23, 0(x2) # load 0x00000001 from memory into f23
li x3, 0x85ea97457e224fb5 # load x3 with value 0x85ea97457e224fb5
sw x3, 0(x2) # store 0x85ea97457e224fb5 in memory
flw f31, 0(x2) # load 0x85ea97457e224fb5 from memory into f31
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f29, 0(x2) # load 0x7f800000 from memory into f29
fmsub.s f22, f23, f31, f29, dyn # perform operation
fmsub.s f22, f23, f31, f29, rdn # perform operation
fmsub.s f22, f23, f31, f29, rmm # perform operation
fmsub.s f22, f23, f31, f29, rne # perform operation
fmsub.s f22, f23, f31, f29, rtz # perform operation
fmsub.s f22, f23, f31, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f22, f23, f31, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f22, f23, f31, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f22, f23, f31, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f22, f23, f31, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f22, f23, f31, f29 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0xff800000)
li x18, 0x9ce18a4dcb202830 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f13, 0(x2) # load 0x00000001 from memory into f13
li x3, 0x1f87380bccb09a2b # load x3 with value 0x1f87380bccb09a2b
sw x3, 0(x2) # store 0x1f87380bccb09a2b in memory
flw f10, 0(x2) # load 0x1f87380bccb09a2b from memory into f10
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f17, 0(x2) # load 0xff800000 from memory into f17
fmsub.s f18, f13, f10, f17, dyn # perform operation
fmsub.s f18, f13, f10, f17, rdn # perform operation
fmsub.s f18, f13, f10, f17, rmm # perform operation
fmsub.s f18, f13, f10, f17, rne # perform operation
fmsub.s f18, f13, f10, f17, rtz # perform operation
fmsub.s f18, f13, f10, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f18, f13, f10, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f18, f13, f10, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f18, f13, f10, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f18, f13, f10, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f18, f13, f10, f17 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x7fc00000)
li x29, 0x42239671eb1d4333 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f24, 0(x2) # load 0x00000001 from memory into f24
li x3, 0x60bbf37cf80cd7c7 # load x3 with value 0x60bbf37cf80cd7c7
sw x3, 0(x2) # store 0x60bbf37cf80cd7c7 in memory
flw f26, 0(x2) # load 0x60bbf37cf80cd7c7 from memory into f26
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f18, 0(x2) # load 0x7fc00000 from memory into f18
fmsub.s f29, f24, f26, f18, dyn # perform operation
fmsub.s f29, f24, f26, f18, rdn # perform operation
fmsub.s f29, f24, f26, f18, rmm # perform operation
fmsub.s f29, f24, f26, f18, rne # perform operation
fmsub.s f29, f24, f26, f18, rtz # perform operation
fmsub.s f29, f24, f26, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f29, f24, f26, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f29, f24, f26, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f29, f24, f26, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f29, f24, f26, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f29, f24, f26, f18 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x7fffffff)
li x6, 0x479cdcabdf7a1b0e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f20, 0(x2) # load 0x00000001 from memory into f20
li x3, 0x697d5c53988284cc # load x3 with value 0x697d5c53988284cc
sw x3, 0(x2) # store 0x697d5c53988284cc in memory
flw f15, 0(x2) # load 0x697d5c53988284cc from memory into f15
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f9, 0(x2) # load 0x7fffffff from memory into f9
fmsub.s f6, f20, f15, f9, dyn # perform operation
fmsub.s f6, f20, f15, f9, rdn # perform operation
fmsub.s f6, f20, f15, f9, rmm # perform operation
fmsub.s f6, f20, f15, f9, rne # perform operation
fmsub.s f6, f20, f15, f9, rtz # perform operation
fmsub.s f6, f20, f15, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f6, f20, f15, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f6, f20, f15, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f6, f20, f15, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f6, f20, f15, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f6, f20, f15, f9 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x7f800001)
li x30, 0x8c95700ed49a2849 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f10, 0(x2) # load 0x00000001 from memory into f10
li x3, 0x2e2d50589bcb7bc2 # load x3 with value 0x2e2d50589bcb7bc2
sw x3, 0(x2) # store 0x2e2d50589bcb7bc2 in memory
flw f8, 0(x2) # load 0x2e2d50589bcb7bc2 from memory into f8
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f17, 0(x2) # load 0x7f800001 from memory into f17
fmsub.s f30, f10, f8, f17, dyn # perform operation
fmsub.s f30, f10, f8, f17, rdn # perform operation
fmsub.s f30, f10, f8, f17, rmm # perform operation
fmsub.s f30, f10, f8, f17, rne # perform operation
fmsub.s f30, f10, f8, f17, rtz # perform operation
fmsub.s f30, f10, f8, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f30, f10, f8, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f30, f10, f8, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f30, f10, f8, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f30, f10, f8, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f30, f10, f8, f17 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x7fbfffff)
li x29, 0xec5dba1c18522020 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f13, 0(x2) # load 0x00000001 from memory into f13
li x3, 0x50753f1779bdb5ac # load x3 with value 0x50753f1779bdb5ac
sw x3, 0(x2) # store 0x50753f1779bdb5ac in memory
flw f23, 0(x2) # load 0x50753f1779bdb5ac from memory into f23
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f22, 0(x2) # load 0x7fbfffff from memory into f22
fmsub.s f29, f13, f23, f22, dyn # perform operation
fmsub.s f29, f13, f23, f22, rdn # perform operation
fmsub.s f29, f13, f23, f22, rmm # perform operation
fmsub.s f29, f13, f23, f22, rne # perform operation
fmsub.s f29, f13, f23, f22, rtz # perform operation
fmsub.s f29, f13, f23, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f29, f13, f23, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f29, f13, f23, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f29, f13, f23, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f29, f13, f23, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f29, f13, f23, f22 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x7ef8654f)
li x19, 0xec0d756671930d2a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f23, 0(x2) # load 0x00000001 from memory into f23
li x3, 0x17634ee179811703 # load x3 with value 0x17634ee179811703
sw x3, 0(x2) # store 0x17634ee179811703 in memory
flw f13, 0(x2) # load 0x17634ee179811703 from memory into f13
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f6, 0(x2) # load 0x7ef8654f from memory into f6
fmsub.s f19, f23, f13, f6, dyn # perform operation
fmsub.s f19, f23, f13, f6, rdn # perform operation
fmsub.s f19, f23, f13, f6, rmm # perform operation
fmsub.s f19, f23, f13, f6, rne # perform operation
fmsub.s f19, f23, f13, f6, rtz # perform operation
fmsub.s f19, f23, f13, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f19, f23, f13, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f19, f23, f13, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f19, f23, f13, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f19, f23, f13, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f19, f23, f13, f6 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x813d9ab0)
li x10, 0x2bd4d99dc4b2b58d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f12, 0(x2) # load 0x00000001 from memory into f12
li x3, 0x1c9f282112b0e964 # load x3 with value 0x1c9f282112b0e964
sw x3, 0(x2) # store 0x1c9f282112b0e964 in memory
flw f4, 0(x2) # load 0x1c9f282112b0e964 from memory into f4
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f11, 0(x2) # load 0x813d9ab0 from memory into f11
fmsub.s f10, f12, f4, f11, dyn # perform operation
fmsub.s f10, f12, f4, f11, rdn # perform operation
fmsub.s f10, f12, f4, f11, rmm # perform operation
fmsub.s f10, f12, f4, f11, rne # perform operation
fmsub.s f10, f12, f4, f11, rtz # perform operation
fmsub.s f10, f12, f4, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f10, f12, f4, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f10, f12, f4, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f10, f12, f4, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f10, f12, f4, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f10, f12, f4, f11 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0x0)
li x27, 0xabdd4bcac8382a79 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f26, 0(x2) # load 0x80000001 from memory into f26
li x3, 0xcb6a637dc644c391 # load x3 with value 0xcb6a637dc644c391
sw x3, 0(x2) # store 0xcb6a637dc644c391 in memory
flw f20, 0(x2) # load 0xcb6a637dc644c391 from memory into f20
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f28, 0(x2) # load 0x00000000 from memory into f28
fmsub.s f27, f26, f20, f28, dyn # perform operation
fmsub.s f27, f26, f20, f28, rdn # perform operation
fmsub.s f27, f26, f20, f28, rmm # perform operation
fmsub.s f27, f26, f20, f28, rne # perform operation
fmsub.s f27, f26, f20, f28, rtz # perform operation
fmsub.s f27, f26, f20, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f27, f26, f20, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f27, f26, f20, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f27, f26, f20, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f27, f26, f20, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f27, f26, f20, f28 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0x80000000)
li x26, 0x4391045350dc7428 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f3, 0(x2) # load 0x80000001 from memory into f3
li x3, 0x9e291376bb83339 # load x3 with value 0x9e291376bb83339
sw x3, 0(x2) # store 0x9e291376bb83339 in memory
flw f10, 0(x2) # load 0x9e291376bb83339 from memory into f10
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f19, 0(x2) # load 0x80000000 from memory into f19
fmsub.s f26, f3, f10, f19, dyn # perform operation
fmsub.s f26, f3, f10, f19, rdn # perform operation
fmsub.s f26, f3, f10, f19, rmm # perform operation
fmsub.s f26, f3, f10, f19, rne # perform operation
fmsub.s f26, f3, f10, f19, rtz # perform operation
fmsub.s f26, f3, f10, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f26, f3, f10, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f26, f3, f10, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f26, f3, f10, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f26, f3, f10, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f26, f3, f10, f19 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0x3f800000)
li x11, 0x114ebc9db07a5531 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f28, 0(x2) # load 0x80000001 from memory into f28
li x3, 0xb65fef557d6ad83e # load x3 with value 0xb65fef557d6ad83e
sw x3, 0(x2) # store 0xb65fef557d6ad83e in memory
flw f16, 0(x2) # load 0xb65fef557d6ad83e from memory into f16
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f9, 0(x2) # load 0x3f800000 from memory into f9
fmsub.s f11, f28, f16, f9, dyn # perform operation
fmsub.s f11, f28, f16, f9, rdn # perform operation
fmsub.s f11, f28, f16, f9, rmm # perform operation
fmsub.s f11, f28, f16, f9, rne # perform operation
fmsub.s f11, f28, f16, f9, rtz # perform operation
fmsub.s f11, f28, f16, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f11, f28, f16, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f11, f28, f16, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f11, f28, f16, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f11, f28, f16, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f11, f28, f16, f9 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0xbf800000)
li x7, 0x75a3233f2c4f84e5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f22, 0(x2) # load 0x80000001 from memory into f22
li x3, 0x2d917eaabd7bb19b # load x3 with value 0x2d917eaabd7bb19b
sw x3, 0(x2) # store 0x2d917eaabd7bb19b in memory
flw f4, 0(x2) # load 0x2d917eaabd7bb19b from memory into f4
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f18, 0(x2) # load 0xbf800000 from memory into f18
fmsub.s f7, f22, f4, f18, dyn # perform operation
fmsub.s f7, f22, f4, f18, rdn # perform operation
fmsub.s f7, f22, f4, f18, rmm # perform operation
fmsub.s f7, f22, f4, f18, rne # perform operation
fmsub.s f7, f22, f4, f18, rtz # perform operation
fmsub.s f7, f22, f4, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f7, f22, f4, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f7, f22, f4, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f7, f22, f4, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f7, f22, f4, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f7, f22, f4, f18 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0x3fc00000)
li x4, 0x1abc38265d688b32 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f12, 0(x2) # load 0x80000001 from memory into f12
li x3, 0x941b9c46dd5a861b # load x3 with value 0x941b9c46dd5a861b
sw x3, 0(x2) # store 0x941b9c46dd5a861b in memory
flw f10, 0(x2) # load 0x941b9c46dd5a861b from memory into f10
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f26, 0(x2) # load 0x3fc00000 from memory into f26
fmsub.s f4, f12, f10, f26, dyn # perform operation
fmsub.s f4, f12, f10, f26, rdn # perform operation
fmsub.s f4, f12, f10, f26, rmm # perform operation
fmsub.s f4, f12, f10, f26, rne # perform operation
fmsub.s f4, f12, f10, f26, rtz # perform operation
fmsub.s f4, f12, f10, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f4, f12, f10, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f4, f12, f10, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f4, f12, f10, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f4, f12, f10, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f4, f12, f10, f26 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0xbfc00000)
li x10, 0x52489d8d7f33bdc4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f12, 0(x2) # load 0x80000001 from memory into f12
li x3, 0xd2659b417e731a90 # load x3 with value 0xd2659b417e731a90
sw x3, 0(x2) # store 0xd2659b417e731a90 in memory
flw f11, 0(x2) # load 0xd2659b417e731a90 from memory into f11
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f30, 0(x2) # load 0xbfc00000 from memory into f30
fmsub.s f10, f12, f11, f30, dyn # perform operation
fmsub.s f10, f12, f11, f30, rdn # perform operation
fmsub.s f10, f12, f11, f30, rmm # perform operation
fmsub.s f10, f12, f11, f30, rne # perform operation
fmsub.s f10, f12, f11, f30, rtz # perform operation
fmsub.s f10, f12, f11, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f10, f12, f11, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f10, f12, f11, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f10, f12, f11, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f10, f12, f11, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f10, f12, f11, f30 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0x40000000)
li x3, 0x2edffd613903dc2f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f20, 0(x2) # load 0x80000001 from memory into f20
li x3, 0x589109f7a6d0b5e4 # load x3 with value 0x589109f7a6d0b5e4
sw x3, 0(x2) # store 0x589109f7a6d0b5e4 in memory
flw f28, 0(x2) # load 0x589109f7a6d0b5e4 from memory into f28
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f23, 0(x2) # load 0x40000000 from memory into f23
fmsub.s f3, f20, f28, f23, dyn # perform operation
fmsub.s f3, f20, f28, f23, rdn # perform operation
fmsub.s f3, f20, f28, f23, rmm # perform operation
fmsub.s f3, f20, f28, f23, rne # perform operation
fmsub.s f3, f20, f28, f23, rtz # perform operation
fmsub.s f3, f20, f28, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f3, f20, f28, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f3, f20, f28, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f3, f20, f28, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f3, f20, f28, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f3, f20, f28, f23 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0xc0000000)
li x13, 0x324155b748a701ef # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f8, 0(x2) # load 0x80000001 from memory into f8
li x3, 0xea40ae875701c1d8 # load x3 with value 0xea40ae875701c1d8
sw x3, 0(x2) # store 0xea40ae875701c1d8 in memory
flw f4, 0(x2) # load 0xea40ae875701c1d8 from memory into f4
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f9, 0(x2) # load 0xc0000000 from memory into f9
fmsub.s f13, f8, f4, f9, dyn # perform operation
fmsub.s f13, f8, f4, f9, rdn # perform operation
fmsub.s f13, f8, f4, f9, rmm # perform operation
fmsub.s f13, f8, f4, f9, rne # perform operation
fmsub.s f13, f8, f4, f9, rtz # perform operation
fmsub.s f13, f8, f4, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f13, f8, f4, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f13, f8, f4, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f13, f8, f4, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f13, f8, f4, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f13, f8, f4, f9 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0x800000)
li x27, 0x225e3107a63b8688 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f17, 0(x2) # load 0x80000001 from memory into f17
li x3, 0x4d2b11a5e30dd2c1 # load x3 with value 0x4d2b11a5e30dd2c1
sw x3, 0(x2) # store 0x4d2b11a5e30dd2c1 in memory
flw f20, 0(x2) # load 0x4d2b11a5e30dd2c1 from memory into f20
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f16, 0(x2) # load 0x00800000 from memory into f16
fmsub.s f27, f17, f20, f16, dyn # perform operation
fmsub.s f27, f17, f20, f16, rdn # perform operation
fmsub.s f27, f17, f20, f16, rmm # perform operation
fmsub.s f27, f17, f20, f16, rne # perform operation
fmsub.s f27, f17, f20, f16, rtz # perform operation
fmsub.s f27, f17, f20, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f27, f17, f20, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f27, f17, f20, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f27, f17, f20, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f27, f17, f20, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f27, f17, f20, f16 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0x80800000)
li x1, 0x90740cfe05d0ff48 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f26, 0(x2) # load 0x80000001 from memory into f26
li x3, 0xa39421b4f8dc754b # load x3 with value 0xa39421b4f8dc754b
sw x3, 0(x2) # store 0xa39421b4f8dc754b in memory
flw f4, 0(x2) # load 0xa39421b4f8dc754b from memory into f4
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f21, 0(x2) # load 0x80800000 from memory into f21
fmsub.s f1, f26, f4, f21, dyn # perform operation
fmsub.s f1, f26, f4, f21, rdn # perform operation
fmsub.s f1, f26, f4, f21, rmm # perform operation
fmsub.s f1, f26, f4, f21, rne # perform operation
fmsub.s f1, f26, f4, f21, rtz # perform operation
fmsub.s f1, f26, f4, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f1, f26, f4, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f1, f26, f4, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f1, f26, f4, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f1, f26, f4, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f1, f26, f4, f21 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0x7f7fffff)
li x6, 0x92318ba63c24d879 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f15, 0(x2) # load 0x80000001 from memory into f15
li x3, 0xb1b58c3cb8285429 # load x3 with value 0xb1b58c3cb8285429
sw x3, 0(x2) # store 0xb1b58c3cb8285429 in memory
flw f13, 0(x2) # load 0xb1b58c3cb8285429 from memory into f13
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f11, 0(x2) # load 0x7f7fffff from memory into f11
fmsub.s f6, f15, f13, f11, dyn # perform operation
fmsub.s f6, f15, f13, f11, rdn # perform operation
fmsub.s f6, f15, f13, f11, rmm # perform operation
fmsub.s f6, f15, f13, f11, rne # perform operation
fmsub.s f6, f15, f13, f11, rtz # perform operation
fmsub.s f6, f15, f13, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f6, f15, f13, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f6, f15, f13, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f6, f15, f13, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f6, f15, f13, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f6, f15, f13, f11 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0xff7fffff)
li x9, 0x677950ea3af4f0b2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f3, 0(x2) # load 0x80000001 from memory into f3
li x3, 0xbe6447b87e073f0f # load x3 with value 0xbe6447b87e073f0f
sw x3, 0(x2) # store 0xbe6447b87e073f0f in memory
flw f14, 0(x2) # load 0xbe6447b87e073f0f from memory into f14
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f27, 0(x2) # load 0xff7fffff from memory into f27
fmsub.s f9, f3, f14, f27, dyn # perform operation
fmsub.s f9, f3, f14, f27, rdn # perform operation
fmsub.s f9, f3, f14, f27, rmm # perform operation
fmsub.s f9, f3, f14, f27, rne # perform operation
fmsub.s f9, f3, f14, f27, rtz # perform operation
fmsub.s f9, f3, f14, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f9, f3, f14, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f9, f3, f14, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f9, f3, f14, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f9, f3, f14, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f9, f3, f14, f27 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0x7fffff)
li x11, 0xd211cbb4f56e05c5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f12, 0(x2) # load 0x80000001 from memory into f12
li x3, 0x6edfc5df827ae26d # load x3 with value 0x6edfc5df827ae26d
sw x3, 0(x2) # store 0x6edfc5df827ae26d in memory
flw f9, 0(x2) # load 0x6edfc5df827ae26d from memory into f9
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f22, 0(x2) # load 0x007fffff from memory into f22
fmsub.s f11, f12, f9, f22, dyn # perform operation
fmsub.s f11, f12, f9, f22, rdn # perform operation
fmsub.s f11, f12, f9, f22, rmm # perform operation
fmsub.s f11, f12, f9, f22, rne # perform operation
fmsub.s f11, f12, f9, f22, rtz # perform operation
fmsub.s f11, f12, f9, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f11, f12, f9, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f11, f12, f9, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f11, f12, f9, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f11, f12, f9, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f11, f12, f9, f22 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0x807fffff)
li x31, 0xee2f216c4742b150 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f19, 0(x2) # load 0x80000001 from memory into f19
li x3, 0x7d7cf1b006d4d095 # load x3 with value 0x7d7cf1b006d4d095
sw x3, 0(x2) # store 0x7d7cf1b006d4d095 in memory
flw f18, 0(x2) # load 0x7d7cf1b006d4d095 from memory into f18
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f25, 0(x2) # load 0x807fffff from memory into f25
fmsub.s f31, f19, f18, f25, dyn # perform operation
fmsub.s f31, f19, f18, f25, rdn # perform operation
fmsub.s f31, f19, f18, f25, rmm # perform operation
fmsub.s f31, f19, f18, f25, rne # perform operation
fmsub.s f31, f19, f18, f25, rtz # perform operation
fmsub.s f31, f19, f18, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f31, f19, f18, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f31, f19, f18, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f31, f19, f18, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f31, f19, f18, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f31, f19, f18, f25 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0x400000)
li x18, 0xf2cf1ef300a653cc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f7, 0(x2) # load 0x80000001 from memory into f7
li x3, 0xc989d28d4bb8a68f # load x3 with value 0xc989d28d4bb8a68f
sw x3, 0(x2) # store 0xc989d28d4bb8a68f in memory
flw f15, 0(x2) # load 0xc989d28d4bb8a68f from memory into f15
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f10, 0(x2) # load 0x00400000 from memory into f10
fmsub.s f18, f7, f15, f10, dyn # perform operation
fmsub.s f18, f7, f15, f10, rdn # perform operation
fmsub.s f18, f7, f15, f10, rmm # perform operation
fmsub.s f18, f7, f15, f10, rne # perform operation
fmsub.s f18, f7, f15, f10, rtz # perform operation
fmsub.s f18, f7, f15, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f18, f7, f15, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f18, f7, f15, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f18, f7, f15, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f18, f7, f15, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f18, f7, f15, f10 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0x80400000)
li x27, 0xecb7cbba847f04cc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f17, 0(x2) # load 0x80000001 from memory into f17
li x3, 0x767d294bc75f6e0b # load x3 with value 0x767d294bc75f6e0b
sw x3, 0(x2) # store 0x767d294bc75f6e0b in memory
flw f16, 0(x2) # load 0x767d294bc75f6e0b from memory into f16
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f21, 0(x2) # load 0x80400000 from memory into f21
fmsub.s f27, f17, f16, f21, dyn # perform operation
fmsub.s f27, f17, f16, f21, rdn # perform operation
fmsub.s f27, f17, f16, f21, rmm # perform operation
fmsub.s f27, f17, f16, f21, rne # perform operation
fmsub.s f27, f17, f16, f21, rtz # perform operation
fmsub.s f27, f17, f16, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f27, f17, f16, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f27, f17, f16, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f27, f17, f16, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f27, f17, f16, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f27, f17, f16, f21 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0x1)
li x28, 0xc78ec4feb919cdd6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f12, 0(x2) # load 0x80000001 from memory into f12
li x3, 0xd92d079679ca84cf # load x3 with value 0xd92d079679ca84cf
sw x3, 0(x2) # store 0xd92d079679ca84cf in memory
flw f11, 0(x2) # load 0xd92d079679ca84cf from memory into f11
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f14, 0(x2) # load 0x00000001 from memory into f14
fmsub.s f28, f12, f11, f14, dyn # perform operation
fmsub.s f28, f12, f11, f14, rdn # perform operation
fmsub.s f28, f12, f11, f14, rmm # perform operation
fmsub.s f28, f12, f11, f14, rne # perform operation
fmsub.s f28, f12, f11, f14, rtz # perform operation
fmsub.s f28, f12, f11, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f28, f12, f11, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f28, f12, f11, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f28, f12, f11, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f28, f12, f11, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f28, f12, f11, f14 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0x80000001)
li x8, 0xec789ef46d7044eb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f16, 0(x2) # load 0x80000001 from memory into f16
li x3, 0x93a75786fae597f7 # load x3 with value 0x93a75786fae597f7
sw x3, 0(x2) # store 0x93a75786fae597f7 in memory
flw f10, 0(x2) # load 0x93a75786fae597f7 from memory into f10
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f21, 0(x2) # load 0x80000001 from memory into f21
fmsub.s f8, f16, f10, f21, dyn # perform operation
fmsub.s f8, f16, f10, f21, rdn # perform operation
fmsub.s f8, f16, f10, f21, rmm # perform operation
fmsub.s f8, f16, f10, f21, rne # perform operation
fmsub.s f8, f16, f10, f21, rtz # perform operation
fmsub.s f8, f16, f10, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f8, f16, f10, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f8, f16, f10, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f8, f16, f10, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f8, f16, f10, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f8, f16, f10, f21 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0x7f800000)
li x25, 0xc700890f89d50209 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f16, 0(x2) # load 0x80000001 from memory into f16
li x3, 0xb7acceda61b9b7e6 # load x3 with value 0xb7acceda61b9b7e6
sw x3, 0(x2) # store 0xb7acceda61b9b7e6 in memory
flw f19, 0(x2) # load 0xb7acceda61b9b7e6 from memory into f19
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f17, 0(x2) # load 0x7f800000 from memory into f17
fmsub.s f25, f16, f19, f17, dyn # perform operation
fmsub.s f25, f16, f19, f17, rdn # perform operation
fmsub.s f25, f16, f19, f17, rmm # perform operation
fmsub.s f25, f16, f19, f17, rne # perform operation
fmsub.s f25, f16, f19, f17, rtz # perform operation
fmsub.s f25, f16, f19, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f25, f16, f19, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f25, f16, f19, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f25, f16, f19, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f25, f16, f19, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f25, f16, f19, f17 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0xff800000)
li x21, 0x2153983d2d56904a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f8, 0(x2) # load 0x80000001 from memory into f8
li x3, 0x4b6e9585b5c403c0 # load x3 with value 0x4b6e9585b5c403c0
sw x3, 0(x2) # store 0x4b6e9585b5c403c0 in memory
flw f27, 0(x2) # load 0x4b6e9585b5c403c0 from memory into f27
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f23, 0(x2) # load 0xff800000 from memory into f23
fmsub.s f21, f8, f27, f23, dyn # perform operation
fmsub.s f21, f8, f27, f23, rdn # perform operation
fmsub.s f21, f8, f27, f23, rmm # perform operation
fmsub.s f21, f8, f27, f23, rne # perform operation
fmsub.s f21, f8, f27, f23, rtz # perform operation
fmsub.s f21, f8, f27, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f21, f8, f27, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f21, f8, f27, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f21, f8, f27, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f21, f8, f27, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f21, f8, f27, f23 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0x7fc00000)
li x29, 0x333c33a416b78251 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f16, 0(x2) # load 0x80000001 from memory into f16
li x3, 0x427f6583e717c875 # load x3 with value 0x427f6583e717c875
sw x3, 0(x2) # store 0x427f6583e717c875 in memory
flw f5, 0(x2) # load 0x427f6583e717c875 from memory into f5
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f6, 0(x2) # load 0x7fc00000 from memory into f6
fmsub.s f29, f16, f5, f6, dyn # perform operation
fmsub.s f29, f16, f5, f6, rdn # perform operation
fmsub.s f29, f16, f5, f6, rmm # perform operation
fmsub.s f29, f16, f5, f6, rne # perform operation
fmsub.s f29, f16, f5, f6, rtz # perform operation
fmsub.s f29, f16, f5, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f29, f16, f5, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f29, f16, f5, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f29, f16, f5, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f29, f16, f5, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f29, f16, f5, f6 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0x7fffffff)
li x23, 0x70a89e934c20e174 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f2, 0(x2) # load 0x80000001 from memory into f2
li x3, 0x1acbf3c21ab274d8 # load x3 with value 0x1acbf3c21ab274d8
sw x3, 0(x2) # store 0x1acbf3c21ab274d8 in memory
flw f19, 0(x2) # load 0x1acbf3c21ab274d8 from memory into f19
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f15, 0(x2) # load 0x7fffffff from memory into f15
fmsub.s f23, f2, f19, f15, dyn # perform operation
fmsub.s f23, f2, f19, f15, rdn # perform operation
fmsub.s f23, f2, f19, f15, rmm # perform operation
fmsub.s f23, f2, f19, f15, rne # perform operation
fmsub.s f23, f2, f19, f15, rtz # perform operation
fmsub.s f23, f2, f19, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f23, f2, f19, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f23, f2, f19, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f23, f2, f19, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f23, f2, f19, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f23, f2, f19, f15 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0x7f800001)
li x31, 0xcbe74071c6219315 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f17, 0(x2) # load 0x80000001 from memory into f17
li x3, 0x4e2c0d7b8ca89980 # load x3 with value 0x4e2c0d7b8ca89980
sw x3, 0(x2) # store 0x4e2c0d7b8ca89980 in memory
flw f22, 0(x2) # load 0x4e2c0d7b8ca89980 from memory into f22
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f23, 0(x2) # load 0x7f800001 from memory into f23
fmsub.s f31, f17, f22, f23, dyn # perform operation
fmsub.s f31, f17, f22, f23, rdn # perform operation
fmsub.s f31, f17, f22, f23, rmm # perform operation
fmsub.s f31, f17, f22, f23, rne # perform operation
fmsub.s f31, f17, f22, f23, rtz # perform operation
fmsub.s f31, f17, f22, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f31, f17, f22, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f31, f17, f22, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f31, f17, f22, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f31, f17, f22, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f31, f17, f22, f23 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0x7fbfffff)
li x15, 0x074090c475fcac18 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f1, 0(x2) # load 0x80000001 from memory into f1
li x3, 0x9a87f7dc77e39f9c # load x3 with value 0x9a87f7dc77e39f9c
sw x3, 0(x2) # store 0x9a87f7dc77e39f9c in memory
flw f14, 0(x2) # load 0x9a87f7dc77e39f9c from memory into f14
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f21, 0(x2) # load 0x7fbfffff from memory into f21
fmsub.s f15, f1, f14, f21, dyn # perform operation
fmsub.s f15, f1, f14, f21, rdn # perform operation
fmsub.s f15, f1, f14, f21, rmm # perform operation
fmsub.s f15, f1, f14, f21, rne # perform operation
fmsub.s f15, f1, f14, f21, rtz # perform operation
fmsub.s f15, f1, f14, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f15, f1, f14, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f15, f1, f14, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f15, f1, f14, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f15, f1, f14, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f15, f1, f14, f21 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0x7ef8654f)
li x4, 0xdea025a4babd91f5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f8, 0(x2) # load 0x80000001 from memory into f8
li x3, 0x5aa41f00bba85bfb # load x3 with value 0x5aa41f00bba85bfb
sw x3, 0(x2) # store 0x5aa41f00bba85bfb in memory
flw f26, 0(x2) # load 0x5aa41f00bba85bfb from memory into f26
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f27, 0(x2) # load 0x7ef8654f from memory into f27
fmsub.s f4, f8, f26, f27, dyn # perform operation
fmsub.s f4, f8, f26, f27, rdn # perform operation
fmsub.s f4, f8, f26, f27, rmm # perform operation
fmsub.s f4, f8, f26, f27, rne # perform operation
fmsub.s f4, f8, f26, f27, rtz # perform operation
fmsub.s f4, f8, f26, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f4, f8, f26, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f4, f8, f26, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f4, f8, f26, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f4, f8, f26, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f4, f8, f26, f27 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0x813d9ab0)
li x28, 0x3c9bd1e664734887 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f17, 0(x2) # load 0x80000001 from memory into f17
li x3, 0x5f97beca7054554f # load x3 with value 0x5f97beca7054554f
sw x3, 0(x2) # store 0x5f97beca7054554f in memory
flw f21, 0(x2) # load 0x5f97beca7054554f from memory into f21
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f22, 0(x2) # load 0x813d9ab0 from memory into f22
fmsub.s f28, f17, f21, f22, dyn # perform operation
fmsub.s f28, f17, f21, f22, rdn # perform operation
fmsub.s f28, f17, f21, f22, rmm # perform operation
fmsub.s f28, f17, f21, f22, rne # perform operation
fmsub.s f28, f17, f21, f22, rtz # perform operation
fmsub.s f28, f17, f21, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f28, f17, f21, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f28, f17, f21, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f28, f17, f21, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f28, f17, f21, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f28, f17, f21, f22 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0x0)
li x30, 0xda5191cceab00503 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f17, 0(x2) # load 0x7f800000 from memory into f17
li x3, 0xe1feea5a5423ab55 # load x3 with value 0xe1feea5a5423ab55
sw x3, 0(x2) # store 0xe1feea5a5423ab55 in memory
flw f21, 0(x2) # load 0xe1feea5a5423ab55 from memory into f21
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f5, 0(x2) # load 0x00000000 from memory into f5
fmsub.s f30, f17, f21, f5, dyn # perform operation
fmsub.s f30, f17, f21, f5, rdn # perform operation
fmsub.s f30, f17, f21, f5, rmm # perform operation
fmsub.s f30, f17, f21, f5, rne # perform operation
fmsub.s f30, f17, f21, f5, rtz # perform operation
fmsub.s f30, f17, f21, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f30, f17, f21, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f30, f17, f21, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f30, f17, f21, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f30, f17, f21, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f30, f17, f21, f5 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0x80000000)
li x9, 0x89238755dd03f9bf # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f13, 0(x2) # load 0x7f800000 from memory into f13
li x3, 0x2624c3a3d55d0e68 # load x3 with value 0x2624c3a3d55d0e68
sw x3, 0(x2) # store 0x2624c3a3d55d0e68 in memory
flw f14, 0(x2) # load 0x2624c3a3d55d0e68 from memory into f14
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f11, 0(x2) # load 0x80000000 from memory into f11
fmsub.s f9, f13, f14, f11, dyn # perform operation
fmsub.s f9, f13, f14, f11, rdn # perform operation
fmsub.s f9, f13, f14, f11, rmm # perform operation
fmsub.s f9, f13, f14, f11, rne # perform operation
fmsub.s f9, f13, f14, f11, rtz # perform operation
fmsub.s f9, f13, f14, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f9, f13, f14, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f9, f13, f14, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f9, f13, f14, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f9, f13, f14, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f9, f13, f14, f11 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0x3f800000)
li x25, 0x81278235857ac03d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f4, 0(x2) # load 0x7f800000 from memory into f4
li x3, 0x8f7241a12dcc02dc # load x3 with value 0x8f7241a12dcc02dc
sw x3, 0(x2) # store 0x8f7241a12dcc02dc in memory
flw f20, 0(x2) # load 0x8f7241a12dcc02dc from memory into f20
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f9, 0(x2) # load 0x3f800000 from memory into f9
fmsub.s f25, f4, f20, f9, dyn # perform operation
fmsub.s f25, f4, f20, f9, rdn # perform operation
fmsub.s f25, f4, f20, f9, rmm # perform operation
fmsub.s f25, f4, f20, f9, rne # perform operation
fmsub.s f25, f4, f20, f9, rtz # perform operation
fmsub.s f25, f4, f20, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f25, f4, f20, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f25, f4, f20, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f25, f4, f20, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f25, f4, f20, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f25, f4, f20, f9 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0xbf800000)
li x21, 0x69f55c161483565d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f12, 0(x2) # load 0x7f800000 from memory into f12
li x3, 0xffbb50af0c451a81 # load x3 with value 0xffbb50af0c451a81
sw x3, 0(x2) # store 0xffbb50af0c451a81 in memory
flw f24, 0(x2) # load 0xffbb50af0c451a81 from memory into f24
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f20, 0(x2) # load 0xbf800000 from memory into f20
fmsub.s f21, f12, f24, f20, dyn # perform operation
fmsub.s f21, f12, f24, f20, rdn # perform operation
fmsub.s f21, f12, f24, f20, rmm # perform operation
fmsub.s f21, f12, f24, f20, rne # perform operation
fmsub.s f21, f12, f24, f20, rtz # perform operation
fmsub.s f21, f12, f24, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f21, f12, f24, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f21, f12, f24, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f21, f12, f24, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f21, f12, f24, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f21, f12, f24, f20 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0x3fc00000)
li x6, 0x8ca030bd2ea7642d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f8, 0(x2) # load 0x7f800000 from memory into f8
li x3, 0x6a9f5969c3c54673 # load x3 with value 0x6a9f5969c3c54673
sw x3, 0(x2) # store 0x6a9f5969c3c54673 in memory
flw f15, 0(x2) # load 0x6a9f5969c3c54673 from memory into f15
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f22, 0(x2) # load 0x3fc00000 from memory into f22
fmsub.s f6, f8, f15, f22, dyn # perform operation
fmsub.s f6, f8, f15, f22, rdn # perform operation
fmsub.s f6, f8, f15, f22, rmm # perform operation
fmsub.s f6, f8, f15, f22, rne # perform operation
fmsub.s f6, f8, f15, f22, rtz # perform operation
fmsub.s f6, f8, f15, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f6, f8, f15, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f6, f8, f15, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f6, f8, f15, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f6, f8, f15, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f6, f8, f15, f22 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0xbfc00000)
li x27, 0x29c12b8a4a9312aa # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f7, 0(x2) # load 0x7f800000 from memory into f7
li x3, 0x81c4b9c5063644b3 # load x3 with value 0x81c4b9c5063644b3
sw x3, 0(x2) # store 0x81c4b9c5063644b3 in memory
flw f2, 0(x2) # load 0x81c4b9c5063644b3 from memory into f2
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f26, 0(x2) # load 0xbfc00000 from memory into f26
fmsub.s f27, f7, f2, f26, dyn # perform operation
fmsub.s f27, f7, f2, f26, rdn # perform operation
fmsub.s f27, f7, f2, f26, rmm # perform operation
fmsub.s f27, f7, f2, f26, rne # perform operation
fmsub.s f27, f7, f2, f26, rtz # perform operation
fmsub.s f27, f7, f2, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f27, f7, f2, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f27, f7, f2, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f27, f7, f2, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f27, f7, f2, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f27, f7, f2, f26 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0x40000000)
li x2, 0x3b03e920df74b34c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f31, 0(x2) # load 0x7f800000 from memory into f31
li x3, 0x82ee3f1a1c46eb00 # load x3 with value 0x82ee3f1a1c46eb00
sw x3, 0(x2) # store 0x82ee3f1a1c46eb00 in memory
flw f26, 0(x2) # load 0x82ee3f1a1c46eb00 from memory into f26
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f13, 0(x2) # load 0x40000000 from memory into f13
fmsub.s f2, f31, f26, f13, dyn # perform operation
fmsub.s f2, f31, f26, f13, rdn # perform operation
fmsub.s f2, f31, f26, f13, rmm # perform operation
fmsub.s f2, f31, f26, f13, rne # perform operation
fmsub.s f2, f31, f26, f13, rtz # perform operation
fmsub.s f2, f31, f26, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f2, f31, f26, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f2, f31, f26, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f2, f31, f26, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f2, f31, f26, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f2, f31, f26, f13 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0xc0000000)
li x12, 0x527145e0af6f0edb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f2, 0(x2) # load 0x7f800000 from memory into f2
li x3, 0xd7bfd8699beef3ec # load x3 with value 0xd7bfd8699beef3ec
sw x3, 0(x2) # store 0xd7bfd8699beef3ec in memory
flw f30, 0(x2) # load 0xd7bfd8699beef3ec from memory into f30
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f25, 0(x2) # load 0xc0000000 from memory into f25
fmsub.s f12, f2, f30, f25, dyn # perform operation
fmsub.s f12, f2, f30, f25, rdn # perform operation
fmsub.s f12, f2, f30, f25, rmm # perform operation
fmsub.s f12, f2, f30, f25, rne # perform operation
fmsub.s f12, f2, f30, f25, rtz # perform operation
fmsub.s f12, f2, f30, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f12, f2, f30, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f12, f2, f30, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f12, f2, f30, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f12, f2, f30, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f12, f2, f30, f25 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0x800000)
li x19, 0x215d1bdd15efca7c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f5, 0(x2) # load 0x7f800000 from memory into f5
li x3, 0xdd63d2c024f66222 # load x3 with value 0xdd63d2c024f66222
sw x3, 0(x2) # store 0xdd63d2c024f66222 in memory
flw f31, 0(x2) # load 0xdd63d2c024f66222 from memory into f31
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f20, 0(x2) # load 0x00800000 from memory into f20
fmsub.s f19, f5, f31, f20, dyn # perform operation
fmsub.s f19, f5, f31, f20, rdn # perform operation
fmsub.s f19, f5, f31, f20, rmm # perform operation
fmsub.s f19, f5, f31, f20, rne # perform operation
fmsub.s f19, f5, f31, f20, rtz # perform operation
fmsub.s f19, f5, f31, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f19, f5, f31, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f19, f5, f31, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f19, f5, f31, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f19, f5, f31, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f19, f5, f31, f20 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0x80800000)
li x28, 0x9ac1f43223b3acd6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f14, 0(x2) # load 0x7f800000 from memory into f14
li x3, 0x1b8ff035754d1b95 # load x3 with value 0x1b8ff035754d1b95
sw x3, 0(x2) # store 0x1b8ff035754d1b95 in memory
flw f9, 0(x2) # load 0x1b8ff035754d1b95 from memory into f9
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f1, 0(x2) # load 0x80800000 from memory into f1
fmsub.s f28, f14, f9, f1, dyn # perform operation
fmsub.s f28, f14, f9, f1, rdn # perform operation
fmsub.s f28, f14, f9, f1, rmm # perform operation
fmsub.s f28, f14, f9, f1, rne # perform operation
fmsub.s f28, f14, f9, f1, rtz # perform operation
fmsub.s f28, f14, f9, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f28, f14, f9, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f28, f14, f9, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f28, f14, f9, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f28, f14, f9, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f28, f14, f9, f1 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0x7f7fffff)
li x24, 0x371d5ad2d7efee71 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f10, 0(x2) # load 0x7f800000 from memory into f10
li x3, 0xa02d0deec7e748f1 # load x3 with value 0xa02d0deec7e748f1
sw x3, 0(x2) # store 0xa02d0deec7e748f1 in memory
flw f31, 0(x2) # load 0xa02d0deec7e748f1 from memory into f31
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f6, 0(x2) # load 0x7f7fffff from memory into f6
fmsub.s f24, f10, f31, f6, dyn # perform operation
fmsub.s f24, f10, f31, f6, rdn # perform operation
fmsub.s f24, f10, f31, f6, rmm # perform operation
fmsub.s f24, f10, f31, f6, rne # perform operation
fmsub.s f24, f10, f31, f6, rtz # perform operation
fmsub.s f24, f10, f31, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f24, f10, f31, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f24, f10, f31, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f24, f10, f31, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f24, f10, f31, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f24, f10, f31, f6 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0xff7fffff)
li x2, 0xa1cdf4f8bcf951f7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f8, 0(x2) # load 0x7f800000 from memory into f8
li x3, 0x31634dac478561a9 # load x3 with value 0x31634dac478561a9
sw x3, 0(x2) # store 0x31634dac478561a9 in memory
flw f23, 0(x2) # load 0x31634dac478561a9 from memory into f23
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f13, 0(x2) # load 0xff7fffff from memory into f13
fmsub.s f2, f8, f23, f13, dyn # perform operation
fmsub.s f2, f8, f23, f13, rdn # perform operation
fmsub.s f2, f8, f23, f13, rmm # perform operation
fmsub.s f2, f8, f23, f13, rne # perform operation
fmsub.s f2, f8, f23, f13, rtz # perform operation
fmsub.s f2, f8, f23, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f2, f8, f23, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f2, f8, f23, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f2, f8, f23, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f2, f8, f23, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f2, f8, f23, f13 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0x7fffff)
li x15, 0x1f38c3579af5ef03 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f31, 0(x2) # load 0x7f800000 from memory into f31
li x3, 0x75577b0ae6174af0 # load x3 with value 0x75577b0ae6174af0
sw x3, 0(x2) # store 0x75577b0ae6174af0 in memory
flw f11, 0(x2) # load 0x75577b0ae6174af0 from memory into f11
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f7, 0(x2) # load 0x007fffff from memory into f7
fmsub.s f15, f31, f11, f7, dyn # perform operation
fmsub.s f15, f31, f11, f7, rdn # perform operation
fmsub.s f15, f31, f11, f7, rmm # perform operation
fmsub.s f15, f31, f11, f7, rne # perform operation
fmsub.s f15, f31, f11, f7, rtz # perform operation
fmsub.s f15, f31, f11, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f15, f31, f11, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f15, f31, f11, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f15, f31, f11, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f15, f31, f11, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f15, f31, f11, f7 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0x807fffff)
li x21, 0x7a01de7928a1b9a9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f8, 0(x2) # load 0x7f800000 from memory into f8
li x3, 0xb6973faa48067513 # load x3 with value 0xb6973faa48067513
sw x3, 0(x2) # store 0xb6973faa48067513 in memory
flw f30, 0(x2) # load 0xb6973faa48067513 from memory into f30
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f6, 0(x2) # load 0x807fffff from memory into f6
fmsub.s f21, f8, f30, f6, dyn # perform operation
fmsub.s f21, f8, f30, f6, rdn # perform operation
fmsub.s f21, f8, f30, f6, rmm # perform operation
fmsub.s f21, f8, f30, f6, rne # perform operation
fmsub.s f21, f8, f30, f6, rtz # perform operation
fmsub.s f21, f8, f30, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f21, f8, f30, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f21, f8, f30, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f21, f8, f30, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f21, f8, f30, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f21, f8, f30, f6 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0x400000)
li x25, 0x7170553e63fc8881 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f26, 0(x2) # load 0x7f800000 from memory into f26
li x3, 0xef84db20191949de # load x3 with value 0xef84db20191949de
sw x3, 0(x2) # store 0xef84db20191949de in memory
flw f9, 0(x2) # load 0xef84db20191949de from memory into f9
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f27, 0(x2) # load 0x00400000 from memory into f27
fmsub.s f25, f26, f9, f27, dyn # perform operation
fmsub.s f25, f26, f9, f27, rdn # perform operation
fmsub.s f25, f26, f9, f27, rmm # perform operation
fmsub.s f25, f26, f9, f27, rne # perform operation
fmsub.s f25, f26, f9, f27, rtz # perform operation
fmsub.s f25, f26, f9, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f25, f26, f9, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f25, f26, f9, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f25, f26, f9, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f25, f26, f9, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f25, f26, f9, f27 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0x80400000)
li x18, 0x9ca13e6b249ac623 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f29, 0(x2) # load 0x7f800000 from memory into f29
li x3, 0xf9ccef03c3b669d8 # load x3 with value 0xf9ccef03c3b669d8
sw x3, 0(x2) # store 0xf9ccef03c3b669d8 in memory
flw f17, 0(x2) # load 0xf9ccef03c3b669d8 from memory into f17
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f23, 0(x2) # load 0x80400000 from memory into f23
fmsub.s f18, f29, f17, f23, dyn # perform operation
fmsub.s f18, f29, f17, f23, rdn # perform operation
fmsub.s f18, f29, f17, f23, rmm # perform operation
fmsub.s f18, f29, f17, f23, rne # perform operation
fmsub.s f18, f29, f17, f23, rtz # perform operation
fmsub.s f18, f29, f17, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f18, f29, f17, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f18, f29, f17, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f18, f29, f17, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f18, f29, f17, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f18, f29, f17, f23 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0x1)
li x31, 0x22e25bf7fa61f98a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f18, 0(x2) # load 0x7f800000 from memory into f18
li x3, 0x81c1080f05e8ed86 # load x3 with value 0x81c1080f05e8ed86
sw x3, 0(x2) # store 0x81c1080f05e8ed86 in memory
flw f26, 0(x2) # load 0x81c1080f05e8ed86 from memory into f26
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f9, 0(x2) # load 0x00000001 from memory into f9
fmsub.s f31, f18, f26, f9, dyn # perform operation
fmsub.s f31, f18, f26, f9, rdn # perform operation
fmsub.s f31, f18, f26, f9, rmm # perform operation
fmsub.s f31, f18, f26, f9, rne # perform operation
fmsub.s f31, f18, f26, f9, rtz # perform operation
fmsub.s f31, f18, f26, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f31, f18, f26, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f31, f18, f26, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f31, f18, f26, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f31, f18, f26, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f31, f18, f26, f9 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0x80000001)
li x25, 0x39200b7ba01ac422 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f26, 0(x2) # load 0x7f800000 from memory into f26
li x3, 0x9771aeec7d88397 # load x3 with value 0x9771aeec7d88397
sw x3, 0(x2) # store 0x9771aeec7d88397 in memory
flw f15, 0(x2) # load 0x9771aeec7d88397 from memory into f15
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f21, 0(x2) # load 0x80000001 from memory into f21
fmsub.s f25, f26, f15, f21, dyn # perform operation
fmsub.s f25, f26, f15, f21, rdn # perform operation
fmsub.s f25, f26, f15, f21, rmm # perform operation
fmsub.s f25, f26, f15, f21, rne # perform operation
fmsub.s f25, f26, f15, f21, rtz # perform operation
fmsub.s f25, f26, f15, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f25, f26, f15, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f25, f26, f15, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f25, f26, f15, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f25, f26, f15, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f25, f26, f15, f21 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0x7f800000)
li x6, 0x44fe72b8d955ecd9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f16, 0(x2) # load 0x7f800000 from memory into f16
li x3, 0x74ff30efab088ab4 # load x3 with value 0x74ff30efab088ab4
sw x3, 0(x2) # store 0x74ff30efab088ab4 in memory
flw f15, 0(x2) # load 0x74ff30efab088ab4 from memory into f15
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f13, 0(x2) # load 0x7f800000 from memory into f13
fmsub.s f6, f16, f15, f13, dyn # perform operation
fmsub.s f6, f16, f15, f13, rdn # perform operation
fmsub.s f6, f16, f15, f13, rmm # perform operation
fmsub.s f6, f16, f15, f13, rne # perform operation
fmsub.s f6, f16, f15, f13, rtz # perform operation
fmsub.s f6, f16, f15, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f6, f16, f15, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f6, f16, f15, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f6, f16, f15, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f6, f16, f15, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f6, f16, f15, f13 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0xff800000)
li x15, 0x91ea1a58fc569315 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f27, 0(x2) # load 0x7f800000 from memory into f27
li x3, 0xfd564bd7053b499b # load x3 with value 0xfd564bd7053b499b
sw x3, 0(x2) # store 0xfd564bd7053b499b in memory
flw f23, 0(x2) # load 0xfd564bd7053b499b from memory into f23
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f19, 0(x2) # load 0xff800000 from memory into f19
fmsub.s f15, f27, f23, f19, dyn # perform operation
fmsub.s f15, f27, f23, f19, rdn # perform operation
fmsub.s f15, f27, f23, f19, rmm # perform operation
fmsub.s f15, f27, f23, f19, rne # perform operation
fmsub.s f15, f27, f23, f19, rtz # perform operation
fmsub.s f15, f27, f23, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f15, f27, f23, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f15, f27, f23, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f15, f27, f23, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f15, f27, f23, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f15, f27, f23, f19 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0x7fc00000)
li x30, 0x094be43dc1ae1db0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f5, 0(x2) # load 0x7f800000 from memory into f5
li x3, 0x3fde4260121a9606 # load x3 with value 0x3fde4260121a9606
sw x3, 0(x2) # store 0x3fde4260121a9606 in memory
flw f15, 0(x2) # load 0x3fde4260121a9606 from memory into f15
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f18, 0(x2) # load 0x7fc00000 from memory into f18
fmsub.s f30, f5, f15, f18, dyn # perform operation
fmsub.s f30, f5, f15, f18, rdn # perform operation
fmsub.s f30, f5, f15, f18, rmm # perform operation
fmsub.s f30, f5, f15, f18, rne # perform operation
fmsub.s f30, f5, f15, f18, rtz # perform operation
fmsub.s f30, f5, f15, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f30, f5, f15, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f30, f5, f15, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f30, f5, f15, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f30, f5, f15, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f30, f5, f15, f18 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0x7fffffff)
li x23, 0x311dbc8fcba74c03 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f10, 0(x2) # load 0x7f800000 from memory into f10
li x3, 0x5e44f00341ed1c86 # load x3 with value 0x5e44f00341ed1c86
sw x3, 0(x2) # store 0x5e44f00341ed1c86 in memory
flw f1, 0(x2) # load 0x5e44f00341ed1c86 from memory into f1
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f30, 0(x2) # load 0x7fffffff from memory into f30
fmsub.s f23, f10, f1, f30, dyn # perform operation
fmsub.s f23, f10, f1, f30, rdn # perform operation
fmsub.s f23, f10, f1, f30, rmm # perform operation
fmsub.s f23, f10, f1, f30, rne # perform operation
fmsub.s f23, f10, f1, f30, rtz # perform operation
fmsub.s f23, f10, f1, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f23, f10, f1, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f23, f10, f1, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f23, f10, f1, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f23, f10, f1, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f23, f10, f1, f30 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0x7f800001)
li x28, 0x7374426feb75e37c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f26, 0(x2) # load 0x7f800000 from memory into f26
li x3, 0x394559ece4249afb # load x3 with value 0x394559ece4249afb
sw x3, 0(x2) # store 0x394559ece4249afb in memory
flw f11, 0(x2) # load 0x394559ece4249afb from memory into f11
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f5, 0(x2) # load 0x7f800001 from memory into f5
fmsub.s f28, f26, f11, f5, dyn # perform operation
fmsub.s f28, f26, f11, f5, rdn # perform operation
fmsub.s f28, f26, f11, f5, rmm # perform operation
fmsub.s f28, f26, f11, f5, rne # perform operation
fmsub.s f28, f26, f11, f5, rtz # perform operation
fmsub.s f28, f26, f11, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f28, f26, f11, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f28, f26, f11, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f28, f26, f11, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f28, f26, f11, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f28, f26, f11, f5 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0x7fbfffff)
li x5, 0x095cab1a5668b01e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f8, 0(x2) # load 0x7f800000 from memory into f8
li x3, 0xd2b0b1e09c7a0190 # load x3 with value 0xd2b0b1e09c7a0190
sw x3, 0(x2) # store 0xd2b0b1e09c7a0190 in memory
flw f23, 0(x2) # load 0xd2b0b1e09c7a0190 from memory into f23
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f13, 0(x2) # load 0x7fbfffff from memory into f13
fmsub.s f5, f8, f23, f13, dyn # perform operation
fmsub.s f5, f8, f23, f13, rdn # perform operation
fmsub.s f5, f8, f23, f13, rmm # perform operation
fmsub.s f5, f8, f23, f13, rne # perform operation
fmsub.s f5, f8, f23, f13, rtz # perform operation
fmsub.s f5, f8, f23, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f5, f8, f23, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f5, f8, f23, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f5, f8, f23, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f5, f8, f23, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f5, f8, f23, f13 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0x7ef8654f)
li x22, 0xdefd66ead41067f6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f3, 0(x2) # load 0x7f800000 from memory into f3
li x3, 0x58f3c0415a3ee83b # load x3 with value 0x58f3c0415a3ee83b
sw x3, 0(x2) # store 0x58f3c0415a3ee83b in memory
flw f7, 0(x2) # load 0x58f3c0415a3ee83b from memory into f7
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f14, 0(x2) # load 0x7ef8654f from memory into f14
fmsub.s f22, f3, f7, f14, dyn # perform operation
fmsub.s f22, f3, f7, f14, rdn # perform operation
fmsub.s f22, f3, f7, f14, rmm # perform operation
fmsub.s f22, f3, f7, f14, rne # perform operation
fmsub.s f22, f3, f7, f14, rtz # perform operation
fmsub.s f22, f3, f7, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f22, f3, f7, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f22, f3, f7, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f22, f3, f7, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f22, f3, f7, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f22, f3, f7, f14 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0x813d9ab0)
li x2, 0xc18af8bb16abc77b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f10, 0(x2) # load 0x7f800000 from memory into f10
li x3, 0x369363eb84b4a17e # load x3 with value 0x369363eb84b4a17e
sw x3, 0(x2) # store 0x369363eb84b4a17e in memory
flw f25, 0(x2) # load 0x369363eb84b4a17e from memory into f25
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f17, 0(x2) # load 0x813d9ab0 from memory into f17
fmsub.s f2, f10, f25, f17, dyn # perform operation
fmsub.s f2, f10, f25, f17, rdn # perform operation
fmsub.s f2, f10, f25, f17, rmm # perform operation
fmsub.s f2, f10, f25, f17, rne # perform operation
fmsub.s f2, f10, f25, f17, rtz # perform operation
fmsub.s f2, f10, f25, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f2, f10, f25, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f2, f10, f25, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f2, f10, f25, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f2, f10, f25, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f2, f10, f25, f17 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0x0)
li x28, 0xc619998add4b2c79 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f1, 0(x2) # load 0xff800000 from memory into f1
li x3, 0x378345080bc64403 # load x3 with value 0x378345080bc64403
sw x3, 0(x2) # store 0x378345080bc64403 in memory
flw f15, 0(x2) # load 0x378345080bc64403 from memory into f15
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f3, 0(x2) # load 0x00000000 from memory into f3
fmsub.s f28, f1, f15, f3, dyn # perform operation
fmsub.s f28, f1, f15, f3, rdn # perform operation
fmsub.s f28, f1, f15, f3, rmm # perform operation
fmsub.s f28, f1, f15, f3, rne # perform operation
fmsub.s f28, f1, f15, f3, rtz # perform operation
fmsub.s f28, f1, f15, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f28, f1, f15, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f28, f1, f15, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f28, f1, f15, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f28, f1, f15, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f28, f1, f15, f3 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0x80000000)
li x2, 0xb72d456dbc62026d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f29, 0(x2) # load 0xff800000 from memory into f29
li x3, 0xce2937c83da6e0f1 # load x3 with value 0xce2937c83da6e0f1
sw x3, 0(x2) # store 0xce2937c83da6e0f1 in memory
flw f15, 0(x2) # load 0xce2937c83da6e0f1 from memory into f15
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f30, 0(x2) # load 0x80000000 from memory into f30
fmsub.s f2, f29, f15, f30, dyn # perform operation
fmsub.s f2, f29, f15, f30, rdn # perform operation
fmsub.s f2, f29, f15, f30, rmm # perform operation
fmsub.s f2, f29, f15, f30, rne # perform operation
fmsub.s f2, f29, f15, f30, rtz # perform operation
fmsub.s f2, f29, f15, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f2, f29, f15, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f2, f29, f15, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f2, f29, f15, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f2, f29, f15, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f2, f29, f15, f30 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0x3f800000)
li x1, 0x076d73d3465360aa # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f11, 0(x2) # load 0xff800000 from memory into f11
li x3, 0x8fae80d49a67ceba # load x3 with value 0x8fae80d49a67ceba
sw x3, 0(x2) # store 0x8fae80d49a67ceba in memory
flw f8, 0(x2) # load 0x8fae80d49a67ceba from memory into f8
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f2, 0(x2) # load 0x3f800000 from memory into f2
fmsub.s f1, f11, f8, f2, dyn # perform operation
fmsub.s f1, f11, f8, f2, rdn # perform operation
fmsub.s f1, f11, f8, f2, rmm # perform operation
fmsub.s f1, f11, f8, f2, rne # perform operation
fmsub.s f1, f11, f8, f2, rtz # perform operation
fmsub.s f1, f11, f8, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f1, f11, f8, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f1, f11, f8, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f1, f11, f8, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f1, f11, f8, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f1, f11, f8, f2 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0xbf800000)
li x19, 0x81075535d28ad410 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f18, 0(x2) # load 0xff800000 from memory into f18
li x3, 0x7738aacbcfad9a25 # load x3 with value 0x7738aacbcfad9a25
sw x3, 0(x2) # store 0x7738aacbcfad9a25 in memory
flw f9, 0(x2) # load 0x7738aacbcfad9a25 from memory into f9
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f1, 0(x2) # load 0xbf800000 from memory into f1
fmsub.s f19, f18, f9, f1, dyn # perform operation
fmsub.s f19, f18, f9, f1, rdn # perform operation
fmsub.s f19, f18, f9, f1, rmm # perform operation
fmsub.s f19, f18, f9, f1, rne # perform operation
fmsub.s f19, f18, f9, f1, rtz # perform operation
fmsub.s f19, f18, f9, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f19, f18, f9, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f19, f18, f9, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f19, f18, f9, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f19, f18, f9, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f19, f18, f9, f1 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0x3fc00000)
li x4, 0x7b17acb155ff724e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f23, 0(x2) # load 0xff800000 from memory into f23
li x3, 0x879e5888170cdfaf # load x3 with value 0x879e5888170cdfaf
sw x3, 0(x2) # store 0x879e5888170cdfaf in memory
flw f6, 0(x2) # load 0x879e5888170cdfaf from memory into f6
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f16, 0(x2) # load 0x3fc00000 from memory into f16
fmsub.s f4, f23, f6, f16, dyn # perform operation
fmsub.s f4, f23, f6, f16, rdn # perform operation
fmsub.s f4, f23, f6, f16, rmm # perform operation
fmsub.s f4, f23, f6, f16, rne # perform operation
fmsub.s f4, f23, f6, f16, rtz # perform operation
fmsub.s f4, f23, f6, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f4, f23, f6, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f4, f23, f6, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f4, f23, f6, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f4, f23, f6, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f4, f23, f6, f16 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0xbfc00000)
li x26, 0x966336aa2cbfeea9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f3, 0(x2) # load 0xff800000 from memory into f3
li x3, 0xba9a1b2ae0b4bf7a # load x3 with value 0xba9a1b2ae0b4bf7a
sw x3, 0(x2) # store 0xba9a1b2ae0b4bf7a in memory
flw f7, 0(x2) # load 0xba9a1b2ae0b4bf7a from memory into f7
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f24, 0(x2) # load 0xbfc00000 from memory into f24
fmsub.s f26, f3, f7, f24, dyn # perform operation
fmsub.s f26, f3, f7, f24, rdn # perform operation
fmsub.s f26, f3, f7, f24, rmm # perform operation
fmsub.s f26, f3, f7, f24, rne # perform operation
fmsub.s f26, f3, f7, f24, rtz # perform operation
fmsub.s f26, f3, f7, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f26, f3, f7, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f26, f3, f7, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f26, f3, f7, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f26, f3, f7, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f26, f3, f7, f24 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0x40000000)
li x4, 0xa5b22a4e2f18c1dc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f1, 0(x2) # load 0xff800000 from memory into f1
li x3, 0x9570d8d368ec70f5 # load x3 with value 0x9570d8d368ec70f5
sw x3, 0(x2) # store 0x9570d8d368ec70f5 in memory
flw f25, 0(x2) # load 0x9570d8d368ec70f5 from memory into f25
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f24, 0(x2) # load 0x40000000 from memory into f24
fmsub.s f4, f1, f25, f24, dyn # perform operation
fmsub.s f4, f1, f25, f24, rdn # perform operation
fmsub.s f4, f1, f25, f24, rmm # perform operation
fmsub.s f4, f1, f25, f24, rne # perform operation
fmsub.s f4, f1, f25, f24, rtz # perform operation
fmsub.s f4, f1, f25, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f4, f1, f25, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f4, f1, f25, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f4, f1, f25, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f4, f1, f25, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f4, f1, f25, f24 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0xc0000000)
li x22, 0xe4ff5502e628bbf2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f15, 0(x2) # load 0xff800000 from memory into f15
li x3, 0x66d2efb0d5efb3b0 # load x3 with value 0x66d2efb0d5efb3b0
sw x3, 0(x2) # store 0x66d2efb0d5efb3b0 in memory
flw f5, 0(x2) # load 0x66d2efb0d5efb3b0 from memory into f5
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f11, 0(x2) # load 0xc0000000 from memory into f11
fmsub.s f22, f15, f5, f11, dyn # perform operation
fmsub.s f22, f15, f5, f11, rdn # perform operation
fmsub.s f22, f15, f5, f11, rmm # perform operation
fmsub.s f22, f15, f5, f11, rne # perform operation
fmsub.s f22, f15, f5, f11, rtz # perform operation
fmsub.s f22, f15, f5, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f22, f15, f5, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f22, f15, f5, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f22, f15, f5, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f22, f15, f5, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f22, f15, f5, f11 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0x800000)
li x25, 0x66a5c4a2fb9fad3a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f14, 0(x2) # load 0xff800000 from memory into f14
li x3, 0x5ca2ddc3b6a8dfbb # load x3 with value 0x5ca2ddc3b6a8dfbb
sw x3, 0(x2) # store 0x5ca2ddc3b6a8dfbb in memory
flw f24, 0(x2) # load 0x5ca2ddc3b6a8dfbb from memory into f24
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f12, 0(x2) # load 0x00800000 from memory into f12
fmsub.s f25, f14, f24, f12, dyn # perform operation
fmsub.s f25, f14, f24, f12, rdn # perform operation
fmsub.s f25, f14, f24, f12, rmm # perform operation
fmsub.s f25, f14, f24, f12, rne # perform operation
fmsub.s f25, f14, f24, f12, rtz # perform operation
fmsub.s f25, f14, f24, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f25, f14, f24, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f25, f14, f24, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f25, f14, f24, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f25, f14, f24, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f25, f14, f24, f12 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0x80800000)
li x10, 0xbbb1b62699792675 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f30, 0(x2) # load 0xff800000 from memory into f30
li x3, 0xe74e671af1e216d5 # load x3 with value 0xe74e671af1e216d5
sw x3, 0(x2) # store 0xe74e671af1e216d5 in memory
flw f11, 0(x2) # load 0xe74e671af1e216d5 from memory into f11
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f14, 0(x2) # load 0x80800000 from memory into f14
fmsub.s f10, f30, f11, f14, dyn # perform operation
fmsub.s f10, f30, f11, f14, rdn # perform operation
fmsub.s f10, f30, f11, f14, rmm # perform operation
fmsub.s f10, f30, f11, f14, rne # perform operation
fmsub.s f10, f30, f11, f14, rtz # perform operation
fmsub.s f10, f30, f11, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f10, f30, f11, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f10, f30, f11, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f10, f30, f11, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f10, f30, f11, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f10, f30, f11, f14 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0x7f7fffff)
li x8, 0xb2a16339e87848ca # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f22, 0(x2) # load 0xff800000 from memory into f22
li x3, 0x22772221830d25e8 # load x3 with value 0x22772221830d25e8
sw x3, 0(x2) # store 0x22772221830d25e8 in memory
flw f1, 0(x2) # load 0x22772221830d25e8 from memory into f1
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f14, 0(x2) # load 0x7f7fffff from memory into f14
fmsub.s f8, f22, f1, f14, dyn # perform operation
fmsub.s f8, f22, f1, f14, rdn # perform operation
fmsub.s f8, f22, f1, f14, rmm # perform operation
fmsub.s f8, f22, f1, f14, rne # perform operation
fmsub.s f8, f22, f1, f14, rtz # perform operation
fmsub.s f8, f22, f1, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f8, f22, f1, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f8, f22, f1, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f8, f22, f1, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f8, f22, f1, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f8, f22, f1, f14 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0xff7fffff)
li x7, 0x687207d0912b2996 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f11, 0(x2) # load 0xff800000 from memory into f11
li x3, 0x9a2a8555b2c1d1e9 # load x3 with value 0x9a2a8555b2c1d1e9
sw x3, 0(x2) # store 0x9a2a8555b2c1d1e9 in memory
flw f20, 0(x2) # load 0x9a2a8555b2c1d1e9 from memory into f20
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f18, 0(x2) # load 0xff7fffff from memory into f18
fmsub.s f7, f11, f20, f18, dyn # perform operation
fmsub.s f7, f11, f20, f18, rdn # perform operation
fmsub.s f7, f11, f20, f18, rmm # perform operation
fmsub.s f7, f11, f20, f18, rne # perform operation
fmsub.s f7, f11, f20, f18, rtz # perform operation
fmsub.s f7, f11, f20, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f7, f11, f20, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f7, f11, f20, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f7, f11, f20, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f7, f11, f20, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f7, f11, f20, f18 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0x7fffff)
li x2, 0xfc3cdbc35441fdba # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f18, 0(x2) # load 0xff800000 from memory into f18
li x3, 0x2bc6b9b319d518ec # load x3 with value 0x2bc6b9b319d518ec
sw x3, 0(x2) # store 0x2bc6b9b319d518ec in memory
flw f25, 0(x2) # load 0x2bc6b9b319d518ec from memory into f25
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f9, 0(x2) # load 0x007fffff from memory into f9
fmsub.s f2, f18, f25, f9, dyn # perform operation
fmsub.s f2, f18, f25, f9, rdn # perform operation
fmsub.s f2, f18, f25, f9, rmm # perform operation
fmsub.s f2, f18, f25, f9, rne # perform operation
fmsub.s f2, f18, f25, f9, rtz # perform operation
fmsub.s f2, f18, f25, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f2, f18, f25, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f2, f18, f25, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f2, f18, f25, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f2, f18, f25, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f2, f18, f25, f9 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0x807fffff)
li x28, 0xec33828082c6d785 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f14, 0(x2) # load 0xff800000 from memory into f14
li x3, 0x99d13bf6b6371da2 # load x3 with value 0x99d13bf6b6371da2
sw x3, 0(x2) # store 0x99d13bf6b6371da2 in memory
flw f19, 0(x2) # load 0x99d13bf6b6371da2 from memory into f19
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f25, 0(x2) # load 0x807fffff from memory into f25
fmsub.s f28, f14, f19, f25, dyn # perform operation
fmsub.s f28, f14, f19, f25, rdn # perform operation
fmsub.s f28, f14, f19, f25, rmm # perform operation
fmsub.s f28, f14, f19, f25, rne # perform operation
fmsub.s f28, f14, f19, f25, rtz # perform operation
fmsub.s f28, f14, f19, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f28, f14, f19, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f28, f14, f19, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f28, f14, f19, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f28, f14, f19, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f28, f14, f19, f25 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0x400000)
li x12, 0x48dd5f3bb7841d9b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f3, 0(x2) # load 0xff800000 from memory into f3
li x3, 0x8f216e274bea62e0 # load x3 with value 0x8f216e274bea62e0
sw x3, 0(x2) # store 0x8f216e274bea62e0 in memory
flw f27, 0(x2) # load 0x8f216e274bea62e0 from memory into f27
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f21, 0(x2) # load 0x00400000 from memory into f21
fmsub.s f12, f3, f27, f21, dyn # perform operation
fmsub.s f12, f3, f27, f21, rdn # perform operation
fmsub.s f12, f3, f27, f21, rmm # perform operation
fmsub.s f12, f3, f27, f21, rne # perform operation
fmsub.s f12, f3, f27, f21, rtz # perform operation
fmsub.s f12, f3, f27, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f12, f3, f27, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f12, f3, f27, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f12, f3, f27, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f12, f3, f27, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f12, f3, f27, f21 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0x80400000)
li x7, 0xb3b1bf7ca72c6168 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f8, 0(x2) # load 0xff800000 from memory into f8
li x3, 0xea93b86e95250d1f # load x3 with value 0xea93b86e95250d1f
sw x3, 0(x2) # store 0xea93b86e95250d1f in memory
flw f28, 0(x2) # load 0xea93b86e95250d1f from memory into f28
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f3, 0(x2) # load 0x80400000 from memory into f3
fmsub.s f7, f8, f28, f3, dyn # perform operation
fmsub.s f7, f8, f28, f3, rdn # perform operation
fmsub.s f7, f8, f28, f3, rmm # perform operation
fmsub.s f7, f8, f28, f3, rne # perform operation
fmsub.s f7, f8, f28, f3, rtz # perform operation
fmsub.s f7, f8, f28, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f7, f8, f28, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f7, f8, f28, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f7, f8, f28, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f7, f8, f28, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f7, f8, f28, f3 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0x1)
li x28, 0x02edf8b39cfeb234 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f24, 0(x2) # load 0xff800000 from memory into f24
li x3, 0x71626a8015c48df0 # load x3 with value 0x71626a8015c48df0
sw x3, 0(x2) # store 0x71626a8015c48df0 in memory
flw f22, 0(x2) # load 0x71626a8015c48df0 from memory into f22
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f15, 0(x2) # load 0x00000001 from memory into f15
fmsub.s f28, f24, f22, f15, dyn # perform operation
fmsub.s f28, f24, f22, f15, rdn # perform operation
fmsub.s f28, f24, f22, f15, rmm # perform operation
fmsub.s f28, f24, f22, f15, rne # perform operation
fmsub.s f28, f24, f22, f15, rtz # perform operation
fmsub.s f28, f24, f22, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f28, f24, f22, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f28, f24, f22, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f28, f24, f22, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f28, f24, f22, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f28, f24, f22, f15 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0x80000001)
li x24, 0xadc6c4bdc912600b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f23, 0(x2) # load 0xff800000 from memory into f23
li x3, 0x9a5ad33ca4fddfed # load x3 with value 0x9a5ad33ca4fddfed
sw x3, 0(x2) # store 0x9a5ad33ca4fddfed in memory
flw f13, 0(x2) # load 0x9a5ad33ca4fddfed from memory into f13
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f22, 0(x2) # load 0x80000001 from memory into f22
fmsub.s f24, f23, f13, f22, dyn # perform operation
fmsub.s f24, f23, f13, f22, rdn # perform operation
fmsub.s f24, f23, f13, f22, rmm # perform operation
fmsub.s f24, f23, f13, f22, rne # perform operation
fmsub.s f24, f23, f13, f22, rtz # perform operation
fmsub.s f24, f23, f13, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f24, f23, f13, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f24, f23, f13, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f24, f23, f13, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f24, f23, f13, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f24, f23, f13, f22 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0x7f800000)
li x15, 0xe57f73f99271a208 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f23, 0(x2) # load 0xff800000 from memory into f23
li x3, 0xa9db0251ae343441 # load x3 with value 0xa9db0251ae343441
sw x3, 0(x2) # store 0xa9db0251ae343441 in memory
flw f10, 0(x2) # load 0xa9db0251ae343441 from memory into f10
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f18, 0(x2) # load 0x7f800000 from memory into f18
fmsub.s f15, f23, f10, f18, dyn # perform operation
fmsub.s f15, f23, f10, f18, rdn # perform operation
fmsub.s f15, f23, f10, f18, rmm # perform operation
fmsub.s f15, f23, f10, f18, rne # perform operation
fmsub.s f15, f23, f10, f18, rtz # perform operation
fmsub.s f15, f23, f10, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f15, f23, f10, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f15, f23, f10, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f15, f23, f10, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f15, f23, f10, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f15, f23, f10, f18 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0xff800000)
li x31, 0x47055d02e9b7f901 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f3, 0(x2) # load 0xff800000 from memory into f3
li x3, 0xc36d883b2b5e03be # load x3 with value 0xc36d883b2b5e03be
sw x3, 0(x2) # store 0xc36d883b2b5e03be in memory
flw f1, 0(x2) # load 0xc36d883b2b5e03be from memory into f1
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f15, 0(x2) # load 0xff800000 from memory into f15
fmsub.s f31, f3, f1, f15, dyn # perform operation
fmsub.s f31, f3, f1, f15, rdn # perform operation
fmsub.s f31, f3, f1, f15, rmm # perform operation
fmsub.s f31, f3, f1, f15, rne # perform operation
fmsub.s f31, f3, f1, f15, rtz # perform operation
fmsub.s f31, f3, f1, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f31, f3, f1, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f31, f3, f1, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f31, f3, f1, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f31, f3, f1, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f31, f3, f1, f15 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0x7fc00000)
li x14, 0x81821d6a5677323d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f20, 0(x2) # load 0xff800000 from memory into f20
li x3, 0xc82824f7cf0ad5d1 # load x3 with value 0xc82824f7cf0ad5d1
sw x3, 0(x2) # store 0xc82824f7cf0ad5d1 in memory
flw f25, 0(x2) # load 0xc82824f7cf0ad5d1 from memory into f25
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f1, 0(x2) # load 0x7fc00000 from memory into f1
fmsub.s f14, f20, f25, f1, dyn # perform operation
fmsub.s f14, f20, f25, f1, rdn # perform operation
fmsub.s f14, f20, f25, f1, rmm # perform operation
fmsub.s f14, f20, f25, f1, rne # perform operation
fmsub.s f14, f20, f25, f1, rtz # perform operation
fmsub.s f14, f20, f25, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f14, f20, f25, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f14, f20, f25, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f14, f20, f25, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f14, f20, f25, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f14, f20, f25, f1 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0x7fffffff)
li x2, 0x389583ee63386711 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f24, 0(x2) # load 0xff800000 from memory into f24
li x3, 0x267561690662de5a # load x3 with value 0x267561690662de5a
sw x3, 0(x2) # store 0x267561690662de5a in memory
flw f27, 0(x2) # load 0x267561690662de5a from memory into f27
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f29, 0(x2) # load 0x7fffffff from memory into f29
fmsub.s f2, f24, f27, f29, dyn # perform operation
fmsub.s f2, f24, f27, f29, rdn # perform operation
fmsub.s f2, f24, f27, f29, rmm # perform operation
fmsub.s f2, f24, f27, f29, rne # perform operation
fmsub.s f2, f24, f27, f29, rtz # perform operation
fmsub.s f2, f24, f27, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f2, f24, f27, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f2, f24, f27, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f2, f24, f27, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f2, f24, f27, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f2, f24, f27, f29 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0x7f800001)
li x7, 0xcc0adb51a9568e25 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f9, 0(x2) # load 0xff800000 from memory into f9
li x3, 0xcb2b275287b4255c # load x3 with value 0xcb2b275287b4255c
sw x3, 0(x2) # store 0xcb2b275287b4255c in memory
flw f10, 0(x2) # load 0xcb2b275287b4255c from memory into f10
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f16, 0(x2) # load 0x7f800001 from memory into f16
fmsub.s f7, f9, f10, f16, dyn # perform operation
fmsub.s f7, f9, f10, f16, rdn # perform operation
fmsub.s f7, f9, f10, f16, rmm # perform operation
fmsub.s f7, f9, f10, f16, rne # perform operation
fmsub.s f7, f9, f10, f16, rtz # perform operation
fmsub.s f7, f9, f10, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f7, f9, f10, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f7, f9, f10, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f7, f9, f10, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f7, f9, f10, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f7, f9, f10, f16 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0x7fbfffff)
li x22, 0x96457c41361b1226 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f10, 0(x2) # load 0xff800000 from memory into f10
li x3, 0x5412cb6edea925b # load x3 with value 0x5412cb6edea925b
sw x3, 0(x2) # store 0x5412cb6edea925b in memory
flw f29, 0(x2) # load 0x5412cb6edea925b from memory into f29
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f3, 0(x2) # load 0x7fbfffff from memory into f3
fmsub.s f22, f10, f29, f3, dyn # perform operation
fmsub.s f22, f10, f29, f3, rdn # perform operation
fmsub.s f22, f10, f29, f3, rmm # perform operation
fmsub.s f22, f10, f29, f3, rne # perform operation
fmsub.s f22, f10, f29, f3, rtz # perform operation
fmsub.s f22, f10, f29, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f22, f10, f29, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f22, f10, f29, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f22, f10, f29, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f22, f10, f29, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f22, f10, f29, f3 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0x7ef8654f)
li x6, 0x35e35f40b8122607 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f16, 0(x2) # load 0xff800000 from memory into f16
li x3, 0xffa444b0dc0e1275 # load x3 with value 0xffa444b0dc0e1275
sw x3, 0(x2) # store 0xffa444b0dc0e1275 in memory
flw f29, 0(x2) # load 0xffa444b0dc0e1275 from memory into f29
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f8, 0(x2) # load 0x7ef8654f from memory into f8
fmsub.s f6, f16, f29, f8, dyn # perform operation
fmsub.s f6, f16, f29, f8, rdn # perform operation
fmsub.s f6, f16, f29, f8, rmm # perform operation
fmsub.s f6, f16, f29, f8, rne # perform operation
fmsub.s f6, f16, f29, f8, rtz # perform operation
fmsub.s f6, f16, f29, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f6, f16, f29, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f6, f16, f29, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f6, f16, f29, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f6, f16, f29, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f6, f16, f29, f8 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0x813d9ab0)
li x13, 0xb6cfd685e0f876d9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f23, 0(x2) # load 0xff800000 from memory into f23
li x3, 0x97f66f41e8b227c3 # load x3 with value 0x97f66f41e8b227c3
sw x3, 0(x2) # store 0x97f66f41e8b227c3 in memory
flw f29, 0(x2) # load 0x97f66f41e8b227c3 from memory into f29
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f12, 0(x2) # load 0x813d9ab0 from memory into f12
fmsub.s f13, f23, f29, f12, dyn # perform operation
fmsub.s f13, f23, f29, f12, rdn # perform operation
fmsub.s f13, f23, f29, f12, rmm # perform operation
fmsub.s f13, f23, f29, f12, rne # perform operation
fmsub.s f13, f23, f29, f12, rtz # perform operation
fmsub.s f13, f23, f29, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f13, f23, f29, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f13, f23, f29, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f13, f23, f29, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f13, f23, f29, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f13, f23, f29, f12 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0x0)
li x9, 0x3e7a99fbba35bec2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f3, 0(x2) # load 0x7fc00000 from memory into f3
li x3, 0xa99167e769b6dd91 # load x3 with value 0xa99167e769b6dd91
sw x3, 0(x2) # store 0xa99167e769b6dd91 in memory
flw f16, 0(x2) # load 0xa99167e769b6dd91 from memory into f16
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f28, 0(x2) # load 0x00000000 from memory into f28
fmsub.s f9, f3, f16, f28, dyn # perform operation
fmsub.s f9, f3, f16, f28, rdn # perform operation
fmsub.s f9, f3, f16, f28, rmm # perform operation
fmsub.s f9, f3, f16, f28, rne # perform operation
fmsub.s f9, f3, f16, f28, rtz # perform operation
fmsub.s f9, f3, f16, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f9, f3, f16, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f9, f3, f16, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f9, f3, f16, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f9, f3, f16, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f9, f3, f16, f28 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0x80000000)
li x28, 0xe3f1ade361c1bc99 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f15, 0(x2) # load 0x7fc00000 from memory into f15
li x3, 0xeede3564796c5c19 # load x3 with value 0xeede3564796c5c19
sw x3, 0(x2) # store 0xeede3564796c5c19 in memory
flw f14, 0(x2) # load 0xeede3564796c5c19 from memory into f14
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f25, 0(x2) # load 0x80000000 from memory into f25
fmsub.s f28, f15, f14, f25, dyn # perform operation
fmsub.s f28, f15, f14, f25, rdn # perform operation
fmsub.s f28, f15, f14, f25, rmm # perform operation
fmsub.s f28, f15, f14, f25, rne # perform operation
fmsub.s f28, f15, f14, f25, rtz # perform operation
fmsub.s f28, f15, f14, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f28, f15, f14, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f28, f15, f14, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f28, f15, f14, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f28, f15, f14, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f28, f15, f14, f25 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0x3f800000)
li x4, 0x33fb27e9f81f84f4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f29, 0(x2) # load 0x7fc00000 from memory into f29
li x3, 0x8cb14e25831e1bb7 # load x3 with value 0x8cb14e25831e1bb7
sw x3, 0(x2) # store 0x8cb14e25831e1bb7 in memory
flw f31, 0(x2) # load 0x8cb14e25831e1bb7 from memory into f31
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f27, 0(x2) # load 0x3f800000 from memory into f27
fmsub.s f4, f29, f31, f27, dyn # perform operation
fmsub.s f4, f29, f31, f27, rdn # perform operation
fmsub.s f4, f29, f31, f27, rmm # perform operation
fmsub.s f4, f29, f31, f27, rne # perform operation
fmsub.s f4, f29, f31, f27, rtz # perform operation
fmsub.s f4, f29, f31, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f4, f29, f31, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f4, f29, f31, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f4, f29, f31, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f4, f29, f31, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f4, f29, f31, f27 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0xbf800000)
li x17, 0x3accd6ef2bf631c6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f11, 0(x2) # load 0x7fc00000 from memory into f11
li x3, 0xb747727ea95f8cf7 # load x3 with value 0xb747727ea95f8cf7
sw x3, 0(x2) # store 0xb747727ea95f8cf7 in memory
flw f25, 0(x2) # load 0xb747727ea95f8cf7 from memory into f25
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f23, 0(x2) # load 0xbf800000 from memory into f23
fmsub.s f17, f11, f25, f23, dyn # perform operation
fmsub.s f17, f11, f25, f23, rdn # perform operation
fmsub.s f17, f11, f25, f23, rmm # perform operation
fmsub.s f17, f11, f25, f23, rne # perform operation
fmsub.s f17, f11, f25, f23, rtz # perform operation
fmsub.s f17, f11, f25, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f17, f11, f25, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f17, f11, f25, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f17, f11, f25, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f17, f11, f25, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f17, f11, f25, f23 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0x3fc00000)
li x2, 0x1378be8f6ca451a2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f1, 0(x2) # load 0x7fc00000 from memory into f1
li x3, 0xfdd718c87bf1bf1 # load x3 with value 0xfdd718c87bf1bf1
sw x3, 0(x2) # store 0xfdd718c87bf1bf1 in memory
flw f5, 0(x2) # load 0xfdd718c87bf1bf1 from memory into f5
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f23, 0(x2) # load 0x3fc00000 from memory into f23
fmsub.s f2, f1, f5, f23, dyn # perform operation
fmsub.s f2, f1, f5, f23, rdn # perform operation
fmsub.s f2, f1, f5, f23, rmm # perform operation
fmsub.s f2, f1, f5, f23, rne # perform operation
fmsub.s f2, f1, f5, f23, rtz # perform operation
fmsub.s f2, f1, f5, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f2, f1, f5, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f2, f1, f5, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f2, f1, f5, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f2, f1, f5, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f2, f1, f5, f23 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0xbfc00000)
li x28, 0x837608bd290b0d4e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f15, 0(x2) # load 0x7fc00000 from memory into f15
li x3, 0x483c7d6cef087905 # load x3 with value 0x483c7d6cef087905
sw x3, 0(x2) # store 0x483c7d6cef087905 in memory
flw f8, 0(x2) # load 0x483c7d6cef087905 from memory into f8
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f20, 0(x2) # load 0xbfc00000 from memory into f20
fmsub.s f28, f15, f8, f20, dyn # perform operation
fmsub.s f28, f15, f8, f20, rdn # perform operation
fmsub.s f28, f15, f8, f20, rmm # perform operation
fmsub.s f28, f15, f8, f20, rne # perform operation
fmsub.s f28, f15, f8, f20, rtz # perform operation
fmsub.s f28, f15, f8, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f28, f15, f8, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f28, f15, f8, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f28, f15, f8, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f28, f15, f8, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f28, f15, f8, f20 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0x40000000)
li x5, 0x4831fc6418ff7430 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f1, 0(x2) # load 0x7fc00000 from memory into f1
li x3, 0x12310a5e4d9010c0 # load x3 with value 0x12310a5e4d9010c0
sw x3, 0(x2) # store 0x12310a5e4d9010c0 in memory
flw f18, 0(x2) # load 0x12310a5e4d9010c0 from memory into f18
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f13, 0(x2) # load 0x40000000 from memory into f13
fmsub.s f5, f1, f18, f13, dyn # perform operation
fmsub.s f5, f1, f18, f13, rdn # perform operation
fmsub.s f5, f1, f18, f13, rmm # perform operation
fmsub.s f5, f1, f18, f13, rne # perform operation
fmsub.s f5, f1, f18, f13, rtz # perform operation
fmsub.s f5, f1, f18, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f5, f1, f18, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f5, f1, f18, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f5, f1, f18, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f5, f1, f18, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f5, f1, f18, f13 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0xc0000000)
li x18, 0x90263bc0df6a6fa2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f30, 0(x2) # load 0x7fc00000 from memory into f30
li x3, 0x6b322e0b0545ae3c # load x3 with value 0x6b322e0b0545ae3c
sw x3, 0(x2) # store 0x6b322e0b0545ae3c in memory
flw f9, 0(x2) # load 0x6b322e0b0545ae3c from memory into f9
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f17, 0(x2) # load 0xc0000000 from memory into f17
fmsub.s f18, f30, f9, f17, dyn # perform operation
fmsub.s f18, f30, f9, f17, rdn # perform operation
fmsub.s f18, f30, f9, f17, rmm # perform operation
fmsub.s f18, f30, f9, f17, rne # perform operation
fmsub.s f18, f30, f9, f17, rtz # perform operation
fmsub.s f18, f30, f9, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f18, f30, f9, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f18, f30, f9, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f18, f30, f9, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f18, f30, f9, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f18, f30, f9, f17 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0x800000)
li x12, 0xf194faaee9eb2341 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f9, 0(x2) # load 0x7fc00000 from memory into f9
li x3, 0xf559c44222896d7b # load x3 with value 0xf559c44222896d7b
sw x3, 0(x2) # store 0xf559c44222896d7b in memory
flw f29, 0(x2) # load 0xf559c44222896d7b from memory into f29
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f6, 0(x2) # load 0x00800000 from memory into f6
fmsub.s f12, f9, f29, f6, dyn # perform operation
fmsub.s f12, f9, f29, f6, rdn # perform operation
fmsub.s f12, f9, f29, f6, rmm # perform operation
fmsub.s f12, f9, f29, f6, rne # perform operation
fmsub.s f12, f9, f29, f6, rtz # perform operation
fmsub.s f12, f9, f29, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f12, f9, f29, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f12, f9, f29, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f12, f9, f29, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f12, f9, f29, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f12, f9, f29, f6 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0x80800000)
li x22, 0x030732a9f1af2062 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f26, 0(x2) # load 0x7fc00000 from memory into f26
li x3, 0xd42296a9866f61bb # load x3 with value 0xd42296a9866f61bb
sw x3, 0(x2) # store 0xd42296a9866f61bb in memory
flw f11, 0(x2) # load 0xd42296a9866f61bb from memory into f11
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f20, 0(x2) # load 0x80800000 from memory into f20
fmsub.s f22, f26, f11, f20, dyn # perform operation
fmsub.s f22, f26, f11, f20, rdn # perform operation
fmsub.s f22, f26, f11, f20, rmm # perform operation
fmsub.s f22, f26, f11, f20, rne # perform operation
fmsub.s f22, f26, f11, f20, rtz # perform operation
fmsub.s f22, f26, f11, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f22, f26, f11, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f22, f26, f11, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f22, f26, f11, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f22, f26, f11, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f22, f26, f11, f20 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0x7f7fffff)
li x29, 0x0f330d9739d0fe97 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f14, 0(x2) # load 0x7fc00000 from memory into f14
li x3, 0xf1dd7ddd36ec91c1 # load x3 with value 0xf1dd7ddd36ec91c1
sw x3, 0(x2) # store 0xf1dd7ddd36ec91c1 in memory
flw f31, 0(x2) # load 0xf1dd7ddd36ec91c1 from memory into f31
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f30, 0(x2) # load 0x7f7fffff from memory into f30
fmsub.s f29, f14, f31, f30, dyn # perform operation
fmsub.s f29, f14, f31, f30, rdn # perform operation
fmsub.s f29, f14, f31, f30, rmm # perform operation
fmsub.s f29, f14, f31, f30, rne # perform operation
fmsub.s f29, f14, f31, f30, rtz # perform operation
fmsub.s f29, f14, f31, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f29, f14, f31, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f29, f14, f31, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f29, f14, f31, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f29, f14, f31, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f29, f14, f31, f30 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0xff7fffff)
li x14, 0x1835446c80180927 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f11, 0(x2) # load 0x7fc00000 from memory into f11
li x3, 0x44b1d4db40884a9b # load x3 with value 0x44b1d4db40884a9b
sw x3, 0(x2) # store 0x44b1d4db40884a9b in memory
flw f9, 0(x2) # load 0x44b1d4db40884a9b from memory into f9
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f25, 0(x2) # load 0xff7fffff from memory into f25
fmsub.s f14, f11, f9, f25, dyn # perform operation
fmsub.s f14, f11, f9, f25, rdn # perform operation
fmsub.s f14, f11, f9, f25, rmm # perform operation
fmsub.s f14, f11, f9, f25, rne # perform operation
fmsub.s f14, f11, f9, f25, rtz # perform operation
fmsub.s f14, f11, f9, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f14, f11, f9, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f14, f11, f9, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f14, f11, f9, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f14, f11, f9, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f14, f11, f9, f25 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0x7fffff)
li x15, 0xff474c1b81531479 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f28, 0(x2) # load 0x7fc00000 from memory into f28
li x3, 0x742784703195c469 # load x3 with value 0x742784703195c469
sw x3, 0(x2) # store 0x742784703195c469 in memory
flw f6, 0(x2) # load 0x742784703195c469 from memory into f6
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f11, 0(x2) # load 0x007fffff from memory into f11
fmsub.s f15, f28, f6, f11, dyn # perform operation
fmsub.s f15, f28, f6, f11, rdn # perform operation
fmsub.s f15, f28, f6, f11, rmm # perform operation
fmsub.s f15, f28, f6, f11, rne # perform operation
fmsub.s f15, f28, f6, f11, rtz # perform operation
fmsub.s f15, f28, f6, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f15, f28, f6, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f15, f28, f6, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f15, f28, f6, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f15, f28, f6, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f15, f28, f6, f11 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0x807fffff)
li x10, 0x08f6c01ec243fbf9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f28, 0(x2) # load 0x7fc00000 from memory into f28
li x3, 0x5d8d0f60c0dfe116 # load x3 with value 0x5d8d0f60c0dfe116
sw x3, 0(x2) # store 0x5d8d0f60c0dfe116 in memory
flw f19, 0(x2) # load 0x5d8d0f60c0dfe116 from memory into f19
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f8, 0(x2) # load 0x807fffff from memory into f8
fmsub.s f10, f28, f19, f8, dyn # perform operation
fmsub.s f10, f28, f19, f8, rdn # perform operation
fmsub.s f10, f28, f19, f8, rmm # perform operation
fmsub.s f10, f28, f19, f8, rne # perform operation
fmsub.s f10, f28, f19, f8, rtz # perform operation
fmsub.s f10, f28, f19, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f10, f28, f19, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f10, f28, f19, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f10, f28, f19, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f10, f28, f19, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f10, f28, f19, f8 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0x400000)
li x17, 0xabaca726b76a566f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f14, 0(x2) # load 0x7fc00000 from memory into f14
li x3, 0xa3afc17260a14674 # load x3 with value 0xa3afc17260a14674
sw x3, 0(x2) # store 0xa3afc17260a14674 in memory
flw f19, 0(x2) # load 0xa3afc17260a14674 from memory into f19
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f25, 0(x2) # load 0x00400000 from memory into f25
fmsub.s f17, f14, f19, f25, dyn # perform operation
fmsub.s f17, f14, f19, f25, rdn # perform operation
fmsub.s f17, f14, f19, f25, rmm # perform operation
fmsub.s f17, f14, f19, f25, rne # perform operation
fmsub.s f17, f14, f19, f25, rtz # perform operation
fmsub.s f17, f14, f19, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f17, f14, f19, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f17, f14, f19, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f17, f14, f19, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f17, f14, f19, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f17, f14, f19, f25 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0x80400000)
li x18, 0xc20616d07099bbe6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f26, 0(x2) # load 0x7fc00000 from memory into f26
li x3, 0x2ef6415c7de18ec9 # load x3 with value 0x2ef6415c7de18ec9
sw x3, 0(x2) # store 0x2ef6415c7de18ec9 in memory
flw f2, 0(x2) # load 0x2ef6415c7de18ec9 from memory into f2
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f9, 0(x2) # load 0x80400000 from memory into f9
fmsub.s f18, f26, f2, f9, dyn # perform operation
fmsub.s f18, f26, f2, f9, rdn # perform operation
fmsub.s f18, f26, f2, f9, rmm # perform operation
fmsub.s f18, f26, f2, f9, rne # perform operation
fmsub.s f18, f26, f2, f9, rtz # perform operation
fmsub.s f18, f26, f2, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f18, f26, f2, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f18, f26, f2, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f18, f26, f2, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f18, f26, f2, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f18, f26, f2, f9 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0x1)
li x28, 0x5eec45291609ea89 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f25, 0(x2) # load 0x7fc00000 from memory into f25
li x3, 0xdb781d9234800b44 # load x3 with value 0xdb781d9234800b44
sw x3, 0(x2) # store 0xdb781d9234800b44 in memory
flw f8, 0(x2) # load 0xdb781d9234800b44 from memory into f8
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f17, 0(x2) # load 0x00000001 from memory into f17
fmsub.s f28, f25, f8, f17, dyn # perform operation
fmsub.s f28, f25, f8, f17, rdn # perform operation
fmsub.s f28, f25, f8, f17, rmm # perform operation
fmsub.s f28, f25, f8, f17, rne # perform operation
fmsub.s f28, f25, f8, f17, rtz # perform operation
fmsub.s f28, f25, f8, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f28, f25, f8, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f28, f25, f8, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f28, f25, f8, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f28, f25, f8, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f28, f25, f8, f17 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0x80000001)
li x31, 0xc94dcc1e152b6665 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f25, 0(x2) # load 0x7fc00000 from memory into f25
li x3, 0xa8e1cd69bb163f1e # load x3 with value 0xa8e1cd69bb163f1e
sw x3, 0(x2) # store 0xa8e1cd69bb163f1e in memory
flw f22, 0(x2) # load 0xa8e1cd69bb163f1e from memory into f22
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f7, 0(x2) # load 0x80000001 from memory into f7
fmsub.s f31, f25, f22, f7, dyn # perform operation
fmsub.s f31, f25, f22, f7, rdn # perform operation
fmsub.s f31, f25, f22, f7, rmm # perform operation
fmsub.s f31, f25, f22, f7, rne # perform operation
fmsub.s f31, f25, f22, f7, rtz # perform operation
fmsub.s f31, f25, f22, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f31, f25, f22, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f31, f25, f22, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f31, f25, f22, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f31, f25, f22, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f31, f25, f22, f7 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0x7f800000)
li x1, 0x5be701991490a4c5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f28, 0(x2) # load 0x7fc00000 from memory into f28
li x3, 0x720c1401f2257c35 # load x3 with value 0x720c1401f2257c35
sw x3, 0(x2) # store 0x720c1401f2257c35 in memory
flw f6, 0(x2) # load 0x720c1401f2257c35 from memory into f6
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f22, 0(x2) # load 0x7f800000 from memory into f22
fmsub.s f1, f28, f6, f22, dyn # perform operation
fmsub.s f1, f28, f6, f22, rdn # perform operation
fmsub.s f1, f28, f6, f22, rmm # perform operation
fmsub.s f1, f28, f6, f22, rne # perform operation
fmsub.s f1, f28, f6, f22, rtz # perform operation
fmsub.s f1, f28, f6, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f1, f28, f6, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f1, f28, f6, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f1, f28, f6, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f1, f28, f6, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f1, f28, f6, f22 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0xff800000)
li x1, 0xa0944b1075a85b81 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f25, 0(x2) # load 0x7fc00000 from memory into f25
li x3, 0xd9d69e7e638e0606 # load x3 with value 0xd9d69e7e638e0606
sw x3, 0(x2) # store 0xd9d69e7e638e0606 in memory
flw f31, 0(x2) # load 0xd9d69e7e638e0606 from memory into f31
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f21, 0(x2) # load 0xff800000 from memory into f21
fmsub.s f1, f25, f31, f21, dyn # perform operation
fmsub.s f1, f25, f31, f21, rdn # perform operation
fmsub.s f1, f25, f31, f21, rmm # perform operation
fmsub.s f1, f25, f31, f21, rne # perform operation
fmsub.s f1, f25, f31, f21, rtz # perform operation
fmsub.s f1, f25, f31, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f1, f25, f31, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f1, f25, f31, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f1, f25, f31, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f1, f25, f31, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f1, f25, f31, f21 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0x7fc00000)
li x24, 0x4b99f57a9c303aff # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f30, 0(x2) # load 0x7fc00000 from memory into f30
li x3, 0xbd34b1242cc0c2d0 # load x3 with value 0xbd34b1242cc0c2d0
sw x3, 0(x2) # store 0xbd34b1242cc0c2d0 in memory
flw f8, 0(x2) # load 0xbd34b1242cc0c2d0 from memory into f8
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f9, 0(x2) # load 0x7fc00000 from memory into f9
fmsub.s f24, f30, f8, f9, dyn # perform operation
fmsub.s f24, f30, f8, f9, rdn # perform operation
fmsub.s f24, f30, f8, f9, rmm # perform operation
fmsub.s f24, f30, f8, f9, rne # perform operation
fmsub.s f24, f30, f8, f9, rtz # perform operation
fmsub.s f24, f30, f8, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f24, f30, f8, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f24, f30, f8, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f24, f30, f8, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f24, f30, f8, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f24, f30, f8, f9 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0x7fffffff)
li x4, 0xda5bcbf2d384281d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f5, 0(x2) # load 0x7fc00000 from memory into f5
li x3, 0x18a13fce9cdf1426 # load x3 with value 0x18a13fce9cdf1426
sw x3, 0(x2) # store 0x18a13fce9cdf1426 in memory
flw f13, 0(x2) # load 0x18a13fce9cdf1426 from memory into f13
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f2, 0(x2) # load 0x7fffffff from memory into f2
fmsub.s f4, f5, f13, f2, dyn # perform operation
fmsub.s f4, f5, f13, f2, rdn # perform operation
fmsub.s f4, f5, f13, f2, rmm # perform operation
fmsub.s f4, f5, f13, f2, rne # perform operation
fmsub.s f4, f5, f13, f2, rtz # perform operation
fmsub.s f4, f5, f13, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f4, f5, f13, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f4, f5, f13, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f4, f5, f13, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f4, f5, f13, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f4, f5, f13, f2 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0x7f800001)
li x5, 0x64fb2f5eaf8b64b3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f16, 0(x2) # load 0x7fc00000 from memory into f16
li x3, 0x73d9455a877c471a # load x3 with value 0x73d9455a877c471a
sw x3, 0(x2) # store 0x73d9455a877c471a in memory
flw f29, 0(x2) # load 0x73d9455a877c471a from memory into f29
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f21, 0(x2) # load 0x7f800001 from memory into f21
fmsub.s f5, f16, f29, f21, dyn # perform operation
fmsub.s f5, f16, f29, f21, rdn # perform operation
fmsub.s f5, f16, f29, f21, rmm # perform operation
fmsub.s f5, f16, f29, f21, rne # perform operation
fmsub.s f5, f16, f29, f21, rtz # perform operation
fmsub.s f5, f16, f29, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f5, f16, f29, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f5, f16, f29, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f5, f16, f29, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f5, f16, f29, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f5, f16, f29, f21 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0x7fbfffff)
li x11, 0x1afb6d10b6d41f61 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f7, 0(x2) # load 0x7fc00000 from memory into f7
li x3, 0x5bb076b234433d1d # load x3 with value 0x5bb076b234433d1d
sw x3, 0(x2) # store 0x5bb076b234433d1d in memory
flw f6, 0(x2) # load 0x5bb076b234433d1d from memory into f6
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f28, 0(x2) # load 0x7fbfffff from memory into f28
fmsub.s f11, f7, f6, f28, dyn # perform operation
fmsub.s f11, f7, f6, f28, rdn # perform operation
fmsub.s f11, f7, f6, f28, rmm # perform operation
fmsub.s f11, f7, f6, f28, rne # perform operation
fmsub.s f11, f7, f6, f28, rtz # perform operation
fmsub.s f11, f7, f6, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f11, f7, f6, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f11, f7, f6, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f11, f7, f6, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f11, f7, f6, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f11, f7, f6, f28 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0x7ef8654f)
li x26, 0xa701b90bedde7da1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f30, 0(x2) # load 0x7fc00000 from memory into f30
li x3, 0xb6ac1affc12173a0 # load x3 with value 0xb6ac1affc12173a0
sw x3, 0(x2) # store 0xb6ac1affc12173a0 in memory
flw f17, 0(x2) # load 0xb6ac1affc12173a0 from memory into f17
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f22, 0(x2) # load 0x7ef8654f from memory into f22
fmsub.s f26, f30, f17, f22, dyn # perform operation
fmsub.s f26, f30, f17, f22, rdn # perform operation
fmsub.s f26, f30, f17, f22, rmm # perform operation
fmsub.s f26, f30, f17, f22, rne # perform operation
fmsub.s f26, f30, f17, f22, rtz # perform operation
fmsub.s f26, f30, f17, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f26, f30, f17, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f26, f30, f17, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f26, f30, f17, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f26, f30, f17, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f26, f30, f17, f22 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0x813d9ab0)
li x23, 0x934503c712f6c858 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f10, 0(x2) # load 0x7fc00000 from memory into f10
li x3, 0x65027f4bf051c058 # load x3 with value 0x65027f4bf051c058
sw x3, 0(x2) # store 0x65027f4bf051c058 in memory
flw f20, 0(x2) # load 0x65027f4bf051c058 from memory into f20
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f30, 0(x2) # load 0x813d9ab0 from memory into f30
fmsub.s f23, f10, f20, f30, dyn # perform operation
fmsub.s f23, f10, f20, f30, rdn # perform operation
fmsub.s f23, f10, f20, f30, rmm # perform operation
fmsub.s f23, f10, f20, f30, rne # perform operation
fmsub.s f23, f10, f20, f30, rtz # perform operation
fmsub.s f23, f10, f20, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f23, f10, f20, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f23, f10, f20, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f23, f10, f20, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f23, f10, f20, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f23, f10, f20, f30 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0x0)
li x30, 0x9f9efdb9cfb3130f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f25, 0(x2) # load 0x7fffffff from memory into f25
li x3, 0x63dfa304569698e5 # load x3 with value 0x63dfa304569698e5
sw x3, 0(x2) # store 0x63dfa304569698e5 in memory
flw f27, 0(x2) # load 0x63dfa304569698e5 from memory into f27
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f23, 0(x2) # load 0x00000000 from memory into f23
fmsub.s f30, f25, f27, f23, dyn # perform operation
fmsub.s f30, f25, f27, f23, rdn # perform operation
fmsub.s f30, f25, f27, f23, rmm # perform operation
fmsub.s f30, f25, f27, f23, rne # perform operation
fmsub.s f30, f25, f27, f23, rtz # perform operation
fmsub.s f30, f25, f27, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f30, f25, f27, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f30, f25, f27, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f30, f25, f27, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f30, f25, f27, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f30, f25, f27, f23 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0x80000000)
li x31, 0x66c8b908473b06b3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f12, 0(x2) # load 0x7fffffff from memory into f12
li x3, 0xb6b4dd32af92695a # load x3 with value 0xb6b4dd32af92695a
sw x3, 0(x2) # store 0xb6b4dd32af92695a in memory
flw f15, 0(x2) # load 0xb6b4dd32af92695a from memory into f15
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f2, 0(x2) # load 0x80000000 from memory into f2
fmsub.s f31, f12, f15, f2, dyn # perform operation
fmsub.s f31, f12, f15, f2, rdn # perform operation
fmsub.s f31, f12, f15, f2, rmm # perform operation
fmsub.s f31, f12, f15, f2, rne # perform operation
fmsub.s f31, f12, f15, f2, rtz # perform operation
fmsub.s f31, f12, f15, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f31, f12, f15, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f31, f12, f15, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f31, f12, f15, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f31, f12, f15, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f31, f12, f15, f2 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0x3f800000)
li x11, 0xd9b64d11a904f840 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f27, 0(x2) # load 0x7fffffff from memory into f27
li x3, 0xdeb5d11296332d5d # load x3 with value 0xdeb5d11296332d5d
sw x3, 0(x2) # store 0xdeb5d11296332d5d in memory
flw f7, 0(x2) # load 0xdeb5d11296332d5d from memory into f7
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f16, 0(x2) # load 0x3f800000 from memory into f16
fmsub.s f11, f27, f7, f16, dyn # perform operation
fmsub.s f11, f27, f7, f16, rdn # perform operation
fmsub.s f11, f27, f7, f16, rmm # perform operation
fmsub.s f11, f27, f7, f16, rne # perform operation
fmsub.s f11, f27, f7, f16, rtz # perform operation
fmsub.s f11, f27, f7, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f11, f27, f7, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f11, f27, f7, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f11, f27, f7, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f11, f27, f7, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f11, f27, f7, f16 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0xbf800000)
li x14, 0x3828ce90a9e0c5f8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f2, 0(x2) # load 0x7fffffff from memory into f2
li x3, 0xd97818a24128152e # load x3 with value 0xd97818a24128152e
sw x3, 0(x2) # store 0xd97818a24128152e in memory
flw f21, 0(x2) # load 0xd97818a24128152e from memory into f21
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f7, 0(x2) # load 0xbf800000 from memory into f7
fmsub.s f14, f2, f21, f7, dyn # perform operation
fmsub.s f14, f2, f21, f7, rdn # perform operation
fmsub.s f14, f2, f21, f7, rmm # perform operation
fmsub.s f14, f2, f21, f7, rne # perform operation
fmsub.s f14, f2, f21, f7, rtz # perform operation
fmsub.s f14, f2, f21, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f14, f2, f21, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f14, f2, f21, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f14, f2, f21, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f14, f2, f21, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f14, f2, f21, f7 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0x3fc00000)
li x13, 0x66f6b3f924d6d026 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f23, 0(x2) # load 0x7fffffff from memory into f23
li x3, 0x46b30452c7335f30 # load x3 with value 0x46b30452c7335f30
sw x3, 0(x2) # store 0x46b30452c7335f30 in memory
flw f8, 0(x2) # load 0x46b30452c7335f30 from memory into f8
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f22, 0(x2) # load 0x3fc00000 from memory into f22
fmsub.s f13, f23, f8, f22, dyn # perform operation
fmsub.s f13, f23, f8, f22, rdn # perform operation
fmsub.s f13, f23, f8, f22, rmm # perform operation
fmsub.s f13, f23, f8, f22, rne # perform operation
fmsub.s f13, f23, f8, f22, rtz # perform operation
fmsub.s f13, f23, f8, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f13, f23, f8, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f13, f23, f8, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f13, f23, f8, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f13, f23, f8, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f13, f23, f8, f22 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0xbfc00000)
li x10, 0xd0793a12bcb59be8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f19, 0(x2) # load 0x7fffffff from memory into f19
li x3, 0x128785927fb18606 # load x3 with value 0x128785927fb18606
sw x3, 0(x2) # store 0x128785927fb18606 in memory
flw f12, 0(x2) # load 0x128785927fb18606 from memory into f12
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f13, 0(x2) # load 0xbfc00000 from memory into f13
fmsub.s f10, f19, f12, f13, dyn # perform operation
fmsub.s f10, f19, f12, f13, rdn # perform operation
fmsub.s f10, f19, f12, f13, rmm # perform operation
fmsub.s f10, f19, f12, f13, rne # perform operation
fmsub.s f10, f19, f12, f13, rtz # perform operation
fmsub.s f10, f19, f12, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f10, f19, f12, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f10, f19, f12, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f10, f19, f12, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f10, f19, f12, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f10, f19, f12, f13 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0x40000000)
li x25, 0xf220ab2d844c670e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f6, 0(x2) # load 0x7fffffff from memory into f6
li x3, 0xdc7cdae4cd7068c3 # load x3 with value 0xdc7cdae4cd7068c3
sw x3, 0(x2) # store 0xdc7cdae4cd7068c3 in memory
flw f19, 0(x2) # load 0xdc7cdae4cd7068c3 from memory into f19
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f13, 0(x2) # load 0x40000000 from memory into f13
fmsub.s f25, f6, f19, f13, dyn # perform operation
fmsub.s f25, f6, f19, f13, rdn # perform operation
fmsub.s f25, f6, f19, f13, rmm # perform operation
fmsub.s f25, f6, f19, f13, rne # perform operation
fmsub.s f25, f6, f19, f13, rtz # perform operation
fmsub.s f25, f6, f19, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f25, f6, f19, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f25, f6, f19, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f25, f6, f19, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f25, f6, f19, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f25, f6, f19, f13 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0xc0000000)
li x26, 0x44e4b6ed5f1f22b6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f25, 0(x2) # load 0x7fffffff from memory into f25
li x3, 0x77913ed16965666b # load x3 with value 0x77913ed16965666b
sw x3, 0(x2) # store 0x77913ed16965666b in memory
flw f2, 0(x2) # load 0x77913ed16965666b from memory into f2
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f22, 0(x2) # load 0xc0000000 from memory into f22
fmsub.s f26, f25, f2, f22, dyn # perform operation
fmsub.s f26, f25, f2, f22, rdn # perform operation
fmsub.s f26, f25, f2, f22, rmm # perform operation
fmsub.s f26, f25, f2, f22, rne # perform operation
fmsub.s f26, f25, f2, f22, rtz # perform operation
fmsub.s f26, f25, f2, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f26, f25, f2, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f26, f25, f2, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f26, f25, f2, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f26, f25, f2, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f26, f25, f2, f22 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0x800000)
li x18, 0xd77cee5030505514 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f22, 0(x2) # load 0x7fffffff from memory into f22
li x3, 0xba3640611f1aca1 # load x3 with value 0xba3640611f1aca1
sw x3, 0(x2) # store 0xba3640611f1aca1 in memory
flw f19, 0(x2) # load 0xba3640611f1aca1 from memory into f19
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f21, 0(x2) # load 0x00800000 from memory into f21
fmsub.s f18, f22, f19, f21, dyn # perform operation
fmsub.s f18, f22, f19, f21, rdn # perform operation
fmsub.s f18, f22, f19, f21, rmm # perform operation
fmsub.s f18, f22, f19, f21, rne # perform operation
fmsub.s f18, f22, f19, f21, rtz # perform operation
fmsub.s f18, f22, f19, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f18, f22, f19, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f18, f22, f19, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f18, f22, f19, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f18, f22, f19, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f18, f22, f19, f21 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0x80800000)
li x31, 0xddcdccab96658de5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f20, 0(x2) # load 0x7fffffff from memory into f20
li x3, 0xc4a81aec49fb9d6d # load x3 with value 0xc4a81aec49fb9d6d
sw x3, 0(x2) # store 0xc4a81aec49fb9d6d in memory
flw f11, 0(x2) # load 0xc4a81aec49fb9d6d from memory into f11
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f18, 0(x2) # load 0x80800000 from memory into f18
fmsub.s f31, f20, f11, f18, dyn # perform operation
fmsub.s f31, f20, f11, f18, rdn # perform operation
fmsub.s f31, f20, f11, f18, rmm # perform operation
fmsub.s f31, f20, f11, f18, rne # perform operation
fmsub.s f31, f20, f11, f18, rtz # perform operation
fmsub.s f31, f20, f11, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f31, f20, f11, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f31, f20, f11, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f31, f20, f11, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f31, f20, f11, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f31, f20, f11, f18 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0x7f7fffff)
li x22, 0x2818a073929cb087 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f31, 0(x2) # load 0x7fffffff from memory into f31
li x3, 0x36d0224c5cffbf16 # load x3 with value 0x36d0224c5cffbf16
sw x3, 0(x2) # store 0x36d0224c5cffbf16 in memory
flw f26, 0(x2) # load 0x36d0224c5cffbf16 from memory into f26
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f8, 0(x2) # load 0x7f7fffff from memory into f8
fmsub.s f22, f31, f26, f8, dyn # perform operation
fmsub.s f22, f31, f26, f8, rdn # perform operation
fmsub.s f22, f31, f26, f8, rmm # perform operation
fmsub.s f22, f31, f26, f8, rne # perform operation
fmsub.s f22, f31, f26, f8, rtz # perform operation
fmsub.s f22, f31, f26, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f22, f31, f26, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f22, f31, f26, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f22, f31, f26, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f22, f31, f26, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f22, f31, f26, f8 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0xff7fffff)
li x5, 0x84b9de2bc2453874 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f18, 0(x2) # load 0x7fffffff from memory into f18
li x3, 0xa25ec32841d731a7 # load x3 with value 0xa25ec32841d731a7
sw x3, 0(x2) # store 0xa25ec32841d731a7 in memory
flw f25, 0(x2) # load 0xa25ec32841d731a7 from memory into f25
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f8, 0(x2) # load 0xff7fffff from memory into f8
fmsub.s f5, f18, f25, f8, dyn # perform operation
fmsub.s f5, f18, f25, f8, rdn # perform operation
fmsub.s f5, f18, f25, f8, rmm # perform operation
fmsub.s f5, f18, f25, f8, rne # perform operation
fmsub.s f5, f18, f25, f8, rtz # perform operation
fmsub.s f5, f18, f25, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f5, f18, f25, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f5, f18, f25, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f5, f18, f25, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f5, f18, f25, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f5, f18, f25, f8 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0x7fffff)
li x15, 0xb88875c7353126f9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f13, 0(x2) # load 0x7fffffff from memory into f13
li x3, 0x6cea72f2b7ebcb22 # load x3 with value 0x6cea72f2b7ebcb22
sw x3, 0(x2) # store 0x6cea72f2b7ebcb22 in memory
flw f10, 0(x2) # load 0x6cea72f2b7ebcb22 from memory into f10
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f2, 0(x2) # load 0x007fffff from memory into f2
fmsub.s f15, f13, f10, f2, dyn # perform operation
fmsub.s f15, f13, f10, f2, rdn # perform operation
fmsub.s f15, f13, f10, f2, rmm # perform operation
fmsub.s f15, f13, f10, f2, rne # perform operation
fmsub.s f15, f13, f10, f2, rtz # perform operation
fmsub.s f15, f13, f10, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f15, f13, f10, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f15, f13, f10, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f15, f13, f10, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f15, f13, f10, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f15, f13, f10, f2 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0x807fffff)
li x2, 0x5223058e52ba4c8f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f24, 0(x2) # load 0x7fffffff from memory into f24
li x3, 0xe7cd7e06527d016f # load x3 with value 0xe7cd7e06527d016f
sw x3, 0(x2) # store 0xe7cd7e06527d016f in memory
flw f7, 0(x2) # load 0xe7cd7e06527d016f from memory into f7
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f8, 0(x2) # load 0x807fffff from memory into f8
fmsub.s f2, f24, f7, f8, dyn # perform operation
fmsub.s f2, f24, f7, f8, rdn # perform operation
fmsub.s f2, f24, f7, f8, rmm # perform operation
fmsub.s f2, f24, f7, f8, rne # perform operation
fmsub.s f2, f24, f7, f8, rtz # perform operation
fmsub.s f2, f24, f7, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f2, f24, f7, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f2, f24, f7, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f2, f24, f7, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f2, f24, f7, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f2, f24, f7, f8 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0x400000)
li x14, 0xc9d45be1e44bef4f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f4, 0(x2) # load 0x7fffffff from memory into f4
li x3, 0x8e1998cb35006c9d # load x3 with value 0x8e1998cb35006c9d
sw x3, 0(x2) # store 0x8e1998cb35006c9d in memory
flw f17, 0(x2) # load 0x8e1998cb35006c9d from memory into f17
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f6, 0(x2) # load 0x00400000 from memory into f6
fmsub.s f14, f4, f17, f6, dyn # perform operation
fmsub.s f14, f4, f17, f6, rdn # perform operation
fmsub.s f14, f4, f17, f6, rmm # perform operation
fmsub.s f14, f4, f17, f6, rne # perform operation
fmsub.s f14, f4, f17, f6, rtz # perform operation
fmsub.s f14, f4, f17, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f14, f4, f17, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f14, f4, f17, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f14, f4, f17, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f14, f4, f17, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f14, f4, f17, f6 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0x80400000)
li x28, 0x56d3594c90e2ceb9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f14, 0(x2) # load 0x7fffffff from memory into f14
li x3, 0xda64b44092268e0d # load x3 with value 0xda64b44092268e0d
sw x3, 0(x2) # store 0xda64b44092268e0d in memory
flw f11, 0(x2) # load 0xda64b44092268e0d from memory into f11
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f29, 0(x2) # load 0x80400000 from memory into f29
fmsub.s f28, f14, f11, f29, dyn # perform operation
fmsub.s f28, f14, f11, f29, rdn # perform operation
fmsub.s f28, f14, f11, f29, rmm # perform operation
fmsub.s f28, f14, f11, f29, rne # perform operation
fmsub.s f28, f14, f11, f29, rtz # perform operation
fmsub.s f28, f14, f11, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f28, f14, f11, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f28, f14, f11, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f28, f14, f11, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f28, f14, f11, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f28, f14, f11, f29 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0x1)
li x26, 0xc6b6383212dfe2a1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f23, 0(x2) # load 0x7fffffff from memory into f23
li x3, 0x466858a03ba21b31 # load x3 with value 0x466858a03ba21b31
sw x3, 0(x2) # store 0x466858a03ba21b31 in memory
flw f15, 0(x2) # load 0x466858a03ba21b31 from memory into f15
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f20, 0(x2) # load 0x00000001 from memory into f20
fmsub.s f26, f23, f15, f20, dyn # perform operation
fmsub.s f26, f23, f15, f20, rdn # perform operation
fmsub.s f26, f23, f15, f20, rmm # perform operation
fmsub.s f26, f23, f15, f20, rne # perform operation
fmsub.s f26, f23, f15, f20, rtz # perform operation
fmsub.s f26, f23, f15, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f26, f23, f15, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f26, f23, f15, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f26, f23, f15, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f26, f23, f15, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f26, f23, f15, f20 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0x80000001)
li x30, 0x68f1a825d04fcdce # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f26, 0(x2) # load 0x7fffffff from memory into f26
li x3, 0x4b7e5833f65853d8 # load x3 with value 0x4b7e5833f65853d8
sw x3, 0(x2) # store 0x4b7e5833f65853d8 in memory
flw f21, 0(x2) # load 0x4b7e5833f65853d8 from memory into f21
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f27, 0(x2) # load 0x80000001 from memory into f27
fmsub.s f30, f26, f21, f27, dyn # perform operation
fmsub.s f30, f26, f21, f27, rdn # perform operation
fmsub.s f30, f26, f21, f27, rmm # perform operation
fmsub.s f30, f26, f21, f27, rne # perform operation
fmsub.s f30, f26, f21, f27, rtz # perform operation
fmsub.s f30, f26, f21, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f30, f26, f21, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f30, f26, f21, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f30, f26, f21, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f30, f26, f21, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f30, f26, f21, f27 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0x7f800000)
li x6, 0xb9c7129d11b6848c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f21, 0(x2) # load 0x7fffffff from memory into f21
li x3, 0x9400ce6875c7475f # load x3 with value 0x9400ce6875c7475f
sw x3, 0(x2) # store 0x9400ce6875c7475f in memory
flw f31, 0(x2) # load 0x9400ce6875c7475f from memory into f31
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f26, 0(x2) # load 0x7f800000 from memory into f26
fmsub.s f6, f21, f31, f26, dyn # perform operation
fmsub.s f6, f21, f31, f26, rdn # perform operation
fmsub.s f6, f21, f31, f26, rmm # perform operation
fmsub.s f6, f21, f31, f26, rne # perform operation
fmsub.s f6, f21, f31, f26, rtz # perform operation
fmsub.s f6, f21, f31, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f6, f21, f31, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f6, f21, f31, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f6, f21, f31, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f6, f21, f31, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f6, f21, f31, f26 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0xff800000)
li x18, 0x4051a04a07160cce # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f28, 0(x2) # load 0x7fffffff from memory into f28
li x3, 0x743025ac88c75153 # load x3 with value 0x743025ac88c75153
sw x3, 0(x2) # store 0x743025ac88c75153 in memory
flw f23, 0(x2) # load 0x743025ac88c75153 from memory into f23
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f30, 0(x2) # load 0xff800000 from memory into f30
fmsub.s f18, f28, f23, f30, dyn # perform operation
fmsub.s f18, f28, f23, f30, rdn # perform operation
fmsub.s f18, f28, f23, f30, rmm # perform operation
fmsub.s f18, f28, f23, f30, rne # perform operation
fmsub.s f18, f28, f23, f30, rtz # perform operation
fmsub.s f18, f28, f23, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f18, f28, f23, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f18, f28, f23, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f18, f28, f23, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f18, f28, f23, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f18, f28, f23, f30 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0x7fc00000)
li x13, 0xcc59c558d687734b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f30, 0(x2) # load 0x7fffffff from memory into f30
li x3, 0x575fb97dff4d503b # load x3 with value 0x575fb97dff4d503b
sw x3, 0(x2) # store 0x575fb97dff4d503b in memory
flw f28, 0(x2) # load 0x575fb97dff4d503b from memory into f28
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f20, 0(x2) # load 0x7fc00000 from memory into f20
fmsub.s f13, f30, f28, f20, dyn # perform operation
fmsub.s f13, f30, f28, f20, rdn # perform operation
fmsub.s f13, f30, f28, f20, rmm # perform operation
fmsub.s f13, f30, f28, f20, rne # perform operation
fmsub.s f13, f30, f28, f20, rtz # perform operation
fmsub.s f13, f30, f28, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f13, f30, f28, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f13, f30, f28, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f13, f30, f28, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f13, f30, f28, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f13, f30, f28, f20 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0x7fffffff)
li x30, 0x24c98c0e972464c7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f8, 0(x2) # load 0x7fffffff from memory into f8
li x3, 0x8344ce0cccbdbe20 # load x3 with value 0x8344ce0cccbdbe20
sw x3, 0(x2) # store 0x8344ce0cccbdbe20 in memory
flw f23, 0(x2) # load 0x8344ce0cccbdbe20 from memory into f23
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f20, 0(x2) # load 0x7fffffff from memory into f20
fmsub.s f30, f8, f23, f20, dyn # perform operation
fmsub.s f30, f8, f23, f20, rdn # perform operation
fmsub.s f30, f8, f23, f20, rmm # perform operation
fmsub.s f30, f8, f23, f20, rne # perform operation
fmsub.s f30, f8, f23, f20, rtz # perform operation
fmsub.s f30, f8, f23, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f30, f8, f23, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f30, f8, f23, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f30, f8, f23, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f30, f8, f23, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f30, f8, f23, f20 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0x7f800001)
li x11, 0x9321c8e58036e32a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f26, 0(x2) # load 0x7fffffff from memory into f26
li x3, 0xf01e31496edcb730 # load x3 with value 0xf01e31496edcb730
sw x3, 0(x2) # store 0xf01e31496edcb730 in memory
flw f27, 0(x2) # load 0xf01e31496edcb730 from memory into f27
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f15, 0(x2) # load 0x7f800001 from memory into f15
fmsub.s f11, f26, f27, f15, dyn # perform operation
fmsub.s f11, f26, f27, f15, rdn # perform operation
fmsub.s f11, f26, f27, f15, rmm # perform operation
fmsub.s f11, f26, f27, f15, rne # perform operation
fmsub.s f11, f26, f27, f15, rtz # perform operation
fmsub.s f11, f26, f27, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f11, f26, f27, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f11, f26, f27, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f11, f26, f27, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f11, f26, f27, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f11, f26, f27, f15 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0x7fbfffff)
li x10, 0x86c430f2da09fc0c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f24, 0(x2) # load 0x7fffffff from memory into f24
li x3, 0x16799906dbdef0b5 # load x3 with value 0x16799906dbdef0b5
sw x3, 0(x2) # store 0x16799906dbdef0b5 in memory
flw f3, 0(x2) # load 0x16799906dbdef0b5 from memory into f3
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f4, 0(x2) # load 0x7fbfffff from memory into f4
fmsub.s f10, f24, f3, f4, dyn # perform operation
fmsub.s f10, f24, f3, f4, rdn # perform operation
fmsub.s f10, f24, f3, f4, rmm # perform operation
fmsub.s f10, f24, f3, f4, rne # perform operation
fmsub.s f10, f24, f3, f4, rtz # perform operation
fmsub.s f10, f24, f3, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f10, f24, f3, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f10, f24, f3, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f10, f24, f3, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f10, f24, f3, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f10, f24, f3, f4 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0x7ef8654f)
li x9, 0xab7811a832559d54 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f31, 0(x2) # load 0x7fffffff from memory into f31
li x3, 0x9947384421b0e883 # load x3 with value 0x9947384421b0e883
sw x3, 0(x2) # store 0x9947384421b0e883 in memory
flw f30, 0(x2) # load 0x9947384421b0e883 from memory into f30
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f22, 0(x2) # load 0x7ef8654f from memory into f22
fmsub.s f9, f31, f30, f22, dyn # perform operation
fmsub.s f9, f31, f30, f22, rdn # perform operation
fmsub.s f9, f31, f30, f22, rmm # perform operation
fmsub.s f9, f31, f30, f22, rne # perform operation
fmsub.s f9, f31, f30, f22, rtz # perform operation
fmsub.s f9, f31, f30, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f9, f31, f30, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f9, f31, f30, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f9, f31, f30, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f9, f31, f30, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f9, f31, f30, f22 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0x813d9ab0)
li x9, 0xe270632ad96e6033 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f22, 0(x2) # load 0x7fffffff from memory into f22
li x3, 0xbc943fb40411120d # load x3 with value 0xbc943fb40411120d
sw x3, 0(x2) # store 0xbc943fb40411120d in memory
flw f16, 0(x2) # load 0xbc943fb40411120d from memory into f16
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f21, 0(x2) # load 0x813d9ab0 from memory into f21
fmsub.s f9, f22, f16, f21, dyn # perform operation
fmsub.s f9, f22, f16, f21, rdn # perform operation
fmsub.s f9, f22, f16, f21, rmm # perform operation
fmsub.s f9, f22, f16, f21, rne # perform operation
fmsub.s f9, f22, f16, f21, rtz # perform operation
fmsub.s f9, f22, f16, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f9, f22, f16, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f9, f22, f16, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f9, f22, f16, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f9, f22, f16, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f9, f22, f16, f21 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0x0)
li x27, 0x78e9d4a163281f65 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f28, 0(x2) # load 0x7f800001 from memory into f28
li x3, 0x68026a3aa981bd5b # load x3 with value 0x68026a3aa981bd5b
sw x3, 0(x2) # store 0x68026a3aa981bd5b in memory
flw f9, 0(x2) # load 0x68026a3aa981bd5b from memory into f9
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f24, 0(x2) # load 0x00000000 from memory into f24
fmsub.s f27, f28, f9, f24, dyn # perform operation
fmsub.s f27, f28, f9, f24, rdn # perform operation
fmsub.s f27, f28, f9, f24, rmm # perform operation
fmsub.s f27, f28, f9, f24, rne # perform operation
fmsub.s f27, f28, f9, f24, rtz # perform operation
fmsub.s f27, f28, f9, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f27, f28, f9, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f27, f28, f9, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f27, f28, f9, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f27, f28, f9, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f27, f28, f9, f24 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0x80000000)
li x20, 0xd9a6905d25506de1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f16, 0(x2) # load 0x7f800001 from memory into f16
li x3, 0x6c49b6dffec77718 # load x3 with value 0x6c49b6dffec77718
sw x3, 0(x2) # store 0x6c49b6dffec77718 in memory
flw f26, 0(x2) # load 0x6c49b6dffec77718 from memory into f26
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f8, 0(x2) # load 0x80000000 from memory into f8
fmsub.s f20, f16, f26, f8, dyn # perform operation
fmsub.s f20, f16, f26, f8, rdn # perform operation
fmsub.s f20, f16, f26, f8, rmm # perform operation
fmsub.s f20, f16, f26, f8, rne # perform operation
fmsub.s f20, f16, f26, f8, rtz # perform operation
fmsub.s f20, f16, f26, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f20, f16, f26, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f20, f16, f26, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f20, f16, f26, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f20, f16, f26, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f20, f16, f26, f8 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0x3f800000)
li x7, 0x6012a332fc7a53bb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f9, 0(x2) # load 0x7f800001 from memory into f9
li x3, 0x16dfb8bf6bed11cd # load x3 with value 0x16dfb8bf6bed11cd
sw x3, 0(x2) # store 0x16dfb8bf6bed11cd in memory
flw f1, 0(x2) # load 0x16dfb8bf6bed11cd from memory into f1
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f22, 0(x2) # load 0x3f800000 from memory into f22
fmsub.s f7, f9, f1, f22, dyn # perform operation
fmsub.s f7, f9, f1, f22, rdn # perform operation
fmsub.s f7, f9, f1, f22, rmm # perform operation
fmsub.s f7, f9, f1, f22, rne # perform operation
fmsub.s f7, f9, f1, f22, rtz # perform operation
fmsub.s f7, f9, f1, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f7, f9, f1, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f7, f9, f1, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f7, f9, f1, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f7, f9, f1, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f7, f9, f1, f22 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0xbf800000)
li x11, 0xe36094b4f2481cfc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f8, 0(x2) # load 0x7f800001 from memory into f8
li x3, 0x821e43c7b9011d3e # load x3 with value 0x821e43c7b9011d3e
sw x3, 0(x2) # store 0x821e43c7b9011d3e in memory
flw f29, 0(x2) # load 0x821e43c7b9011d3e from memory into f29
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f4, 0(x2) # load 0xbf800000 from memory into f4
fmsub.s f11, f8, f29, f4, dyn # perform operation
fmsub.s f11, f8, f29, f4, rdn # perform operation
fmsub.s f11, f8, f29, f4, rmm # perform operation
fmsub.s f11, f8, f29, f4, rne # perform operation
fmsub.s f11, f8, f29, f4, rtz # perform operation
fmsub.s f11, f8, f29, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f11, f8, f29, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f11, f8, f29, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f11, f8, f29, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f11, f8, f29, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f11, f8, f29, f4 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0x3fc00000)
li x6, 0x903b0703b9e5c263 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f29, 0(x2) # load 0x7f800001 from memory into f29
li x3, 0xb674767c845351db # load x3 with value 0xb674767c845351db
sw x3, 0(x2) # store 0xb674767c845351db in memory
flw f8, 0(x2) # load 0xb674767c845351db from memory into f8
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f31, 0(x2) # load 0x3fc00000 from memory into f31
fmsub.s f6, f29, f8, f31, dyn # perform operation
fmsub.s f6, f29, f8, f31, rdn # perform operation
fmsub.s f6, f29, f8, f31, rmm # perform operation
fmsub.s f6, f29, f8, f31, rne # perform operation
fmsub.s f6, f29, f8, f31, rtz # perform operation
fmsub.s f6, f29, f8, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f6, f29, f8, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f6, f29, f8, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f6, f29, f8, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f6, f29, f8, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f6, f29, f8, f31 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0xbfc00000)
li x11, 0x081d026bfcbe4269 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f1, 0(x2) # load 0x7f800001 from memory into f1
li x3, 0x808a9f04dc99c20f # load x3 with value 0x808a9f04dc99c20f
sw x3, 0(x2) # store 0x808a9f04dc99c20f in memory
flw f13, 0(x2) # load 0x808a9f04dc99c20f from memory into f13
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f17, 0(x2) # load 0xbfc00000 from memory into f17
fmsub.s f11, f1, f13, f17, dyn # perform operation
fmsub.s f11, f1, f13, f17, rdn # perform operation
fmsub.s f11, f1, f13, f17, rmm # perform operation
fmsub.s f11, f1, f13, f17, rne # perform operation
fmsub.s f11, f1, f13, f17, rtz # perform operation
fmsub.s f11, f1, f13, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f11, f1, f13, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f11, f1, f13, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f11, f1, f13, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f11, f1, f13, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f11, f1, f13, f17 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0x40000000)
li x5, 0x6e98400e8755dbc6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f22, 0(x2) # load 0x7f800001 from memory into f22
li x3, 0x6c14f2a4c2105692 # load x3 with value 0x6c14f2a4c2105692
sw x3, 0(x2) # store 0x6c14f2a4c2105692 in memory
flw f17, 0(x2) # load 0x6c14f2a4c2105692 from memory into f17
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f31, 0(x2) # load 0x40000000 from memory into f31
fmsub.s f5, f22, f17, f31, dyn # perform operation
fmsub.s f5, f22, f17, f31, rdn # perform operation
fmsub.s f5, f22, f17, f31, rmm # perform operation
fmsub.s f5, f22, f17, f31, rne # perform operation
fmsub.s f5, f22, f17, f31, rtz # perform operation
fmsub.s f5, f22, f17, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f5, f22, f17, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f5, f22, f17, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f5, f22, f17, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f5, f22, f17, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f5, f22, f17, f31 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0xc0000000)
li x20, 0x1597b48618f1e1eb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f4, 0(x2) # load 0x7f800001 from memory into f4
li x3, 0xd316c1210f5e8c7b # load x3 with value 0xd316c1210f5e8c7b
sw x3, 0(x2) # store 0xd316c1210f5e8c7b in memory
flw f5, 0(x2) # load 0xd316c1210f5e8c7b from memory into f5
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f1, 0(x2) # load 0xc0000000 from memory into f1
fmsub.s f20, f4, f5, f1, dyn # perform operation
fmsub.s f20, f4, f5, f1, rdn # perform operation
fmsub.s f20, f4, f5, f1, rmm # perform operation
fmsub.s f20, f4, f5, f1, rne # perform operation
fmsub.s f20, f4, f5, f1, rtz # perform operation
fmsub.s f20, f4, f5, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f20, f4, f5, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f20, f4, f5, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f20, f4, f5, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f20, f4, f5, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f20, f4, f5, f1 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0x800000)
li x28, 0xf3dda2db289f763b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f17, 0(x2) # load 0x7f800001 from memory into f17
li x3, 0xbc2f223c20953af9 # load x3 with value 0xbc2f223c20953af9
sw x3, 0(x2) # store 0xbc2f223c20953af9 in memory
flw f2, 0(x2) # load 0xbc2f223c20953af9 from memory into f2
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f24, 0(x2) # load 0x00800000 from memory into f24
fmsub.s f28, f17, f2, f24, dyn # perform operation
fmsub.s f28, f17, f2, f24, rdn # perform operation
fmsub.s f28, f17, f2, f24, rmm # perform operation
fmsub.s f28, f17, f2, f24, rne # perform operation
fmsub.s f28, f17, f2, f24, rtz # perform operation
fmsub.s f28, f17, f2, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f28, f17, f2, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f28, f17, f2, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f28, f17, f2, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f28, f17, f2, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f28, f17, f2, f24 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0x80800000)
li x15, 0xb2367655a85f009d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f11, 0(x2) # load 0x7f800001 from memory into f11
li x3, 0x4c0e42ee3f0a61b5 # load x3 with value 0x4c0e42ee3f0a61b5
sw x3, 0(x2) # store 0x4c0e42ee3f0a61b5 in memory
flw f23, 0(x2) # load 0x4c0e42ee3f0a61b5 from memory into f23
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f17, 0(x2) # load 0x80800000 from memory into f17
fmsub.s f15, f11, f23, f17, dyn # perform operation
fmsub.s f15, f11, f23, f17, rdn # perform operation
fmsub.s f15, f11, f23, f17, rmm # perform operation
fmsub.s f15, f11, f23, f17, rne # perform operation
fmsub.s f15, f11, f23, f17, rtz # perform operation
fmsub.s f15, f11, f23, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f15, f11, f23, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f15, f11, f23, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f15, f11, f23, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f15, f11, f23, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f15, f11, f23, f17 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0x7f7fffff)
li x22, 0x2fecbe91e2540aea # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f15, 0(x2) # load 0x7f800001 from memory into f15
li x3, 0x6bd15d05ddf8b4dc # load x3 with value 0x6bd15d05ddf8b4dc
sw x3, 0(x2) # store 0x6bd15d05ddf8b4dc in memory
flw f26, 0(x2) # load 0x6bd15d05ddf8b4dc from memory into f26
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f8, 0(x2) # load 0x7f7fffff from memory into f8
fmsub.s f22, f15, f26, f8, dyn # perform operation
fmsub.s f22, f15, f26, f8, rdn # perform operation
fmsub.s f22, f15, f26, f8, rmm # perform operation
fmsub.s f22, f15, f26, f8, rne # perform operation
fmsub.s f22, f15, f26, f8, rtz # perform operation
fmsub.s f22, f15, f26, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f22, f15, f26, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f22, f15, f26, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f22, f15, f26, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f22, f15, f26, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f22, f15, f26, f8 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0xff7fffff)
li x19, 0x26174fff67b855f2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f4, 0(x2) # load 0x7f800001 from memory into f4
li x3, 0xec0900d55504695f # load x3 with value 0xec0900d55504695f
sw x3, 0(x2) # store 0xec0900d55504695f in memory
flw f28, 0(x2) # load 0xec0900d55504695f from memory into f28
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f23, 0(x2) # load 0xff7fffff from memory into f23
fmsub.s f19, f4, f28, f23, dyn # perform operation
fmsub.s f19, f4, f28, f23, rdn # perform operation
fmsub.s f19, f4, f28, f23, rmm # perform operation
fmsub.s f19, f4, f28, f23, rne # perform operation
fmsub.s f19, f4, f28, f23, rtz # perform operation
fmsub.s f19, f4, f28, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f19, f4, f28, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f19, f4, f28, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f19, f4, f28, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f19, f4, f28, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f19, f4, f28, f23 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0x7fffff)
li x1, 0x7f3b6c52c85044a4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f4, 0(x2) # load 0x7f800001 from memory into f4
li x3, 0x5d96023769539773 # load x3 with value 0x5d96023769539773
sw x3, 0(x2) # store 0x5d96023769539773 in memory
flw f10, 0(x2) # load 0x5d96023769539773 from memory into f10
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f24, 0(x2) # load 0x007fffff from memory into f24
fmsub.s f1, f4, f10, f24, dyn # perform operation
fmsub.s f1, f4, f10, f24, rdn # perform operation
fmsub.s f1, f4, f10, f24, rmm # perform operation
fmsub.s f1, f4, f10, f24, rne # perform operation
fmsub.s f1, f4, f10, f24, rtz # perform operation
fmsub.s f1, f4, f10, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f1, f4, f10, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f1, f4, f10, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f1, f4, f10, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f1, f4, f10, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f1, f4, f10, f24 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0x807fffff)
li x6, 0x940a4f0f4b83ce72 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f23, 0(x2) # load 0x7f800001 from memory into f23
li x3, 0x35e3dcf7e840c7b7 # load x3 with value 0x35e3dcf7e840c7b7
sw x3, 0(x2) # store 0x35e3dcf7e840c7b7 in memory
flw f19, 0(x2) # load 0x35e3dcf7e840c7b7 from memory into f19
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f5, 0(x2) # load 0x807fffff from memory into f5
fmsub.s f6, f23, f19, f5, dyn # perform operation
fmsub.s f6, f23, f19, f5, rdn # perform operation
fmsub.s f6, f23, f19, f5, rmm # perform operation
fmsub.s f6, f23, f19, f5, rne # perform operation
fmsub.s f6, f23, f19, f5, rtz # perform operation
fmsub.s f6, f23, f19, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f6, f23, f19, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f6, f23, f19, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f6, f23, f19, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f6, f23, f19, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f6, f23, f19, f5 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0x400000)
li x15, 0x1513ca846fb83a44 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f25, 0(x2) # load 0x7f800001 from memory into f25
li x3, 0x2223ab5a7fe58a19 # load x3 with value 0x2223ab5a7fe58a19
sw x3, 0(x2) # store 0x2223ab5a7fe58a19 in memory
flw f22, 0(x2) # load 0x2223ab5a7fe58a19 from memory into f22
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f16, 0(x2) # load 0x00400000 from memory into f16
fmsub.s f15, f25, f22, f16, dyn # perform operation
fmsub.s f15, f25, f22, f16, rdn # perform operation
fmsub.s f15, f25, f22, f16, rmm # perform operation
fmsub.s f15, f25, f22, f16, rne # perform operation
fmsub.s f15, f25, f22, f16, rtz # perform operation
fmsub.s f15, f25, f22, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f15, f25, f22, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f15, f25, f22, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f15, f25, f22, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f15, f25, f22, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f15, f25, f22, f16 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0x80400000)
li x10, 0x217caea8e712534a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f1, 0(x2) # load 0x7f800001 from memory into f1
li x3, 0x8efed2921f512527 # load x3 with value 0x8efed2921f512527
sw x3, 0(x2) # store 0x8efed2921f512527 in memory
flw f23, 0(x2) # load 0x8efed2921f512527 from memory into f23
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f5, 0(x2) # load 0x80400000 from memory into f5
fmsub.s f10, f1, f23, f5, dyn # perform operation
fmsub.s f10, f1, f23, f5, rdn # perform operation
fmsub.s f10, f1, f23, f5, rmm # perform operation
fmsub.s f10, f1, f23, f5, rne # perform operation
fmsub.s f10, f1, f23, f5, rtz # perform operation
fmsub.s f10, f1, f23, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f10, f1, f23, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f10, f1, f23, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f10, f1, f23, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f10, f1, f23, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f10, f1, f23, f5 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0x1)
li x31, 0x4d6d73a48b32ab89 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f9, 0(x2) # load 0x7f800001 from memory into f9
li x3, 0x4338a8d75a866268 # load x3 with value 0x4338a8d75a866268
sw x3, 0(x2) # store 0x4338a8d75a866268 in memory
flw f17, 0(x2) # load 0x4338a8d75a866268 from memory into f17
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f21, 0(x2) # load 0x00000001 from memory into f21
fmsub.s f31, f9, f17, f21, dyn # perform operation
fmsub.s f31, f9, f17, f21, rdn # perform operation
fmsub.s f31, f9, f17, f21, rmm # perform operation
fmsub.s f31, f9, f17, f21, rne # perform operation
fmsub.s f31, f9, f17, f21, rtz # perform operation
fmsub.s f31, f9, f17, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f31, f9, f17, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f31, f9, f17, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f31, f9, f17, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f31, f9, f17, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f31, f9, f17, f21 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0x80000001)
li x11, 0xbd8e7391061e2c36 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f16, 0(x2) # load 0x7f800001 from memory into f16
li x3, 0xf48eebfde05e229b # load x3 with value 0xf48eebfde05e229b
sw x3, 0(x2) # store 0xf48eebfde05e229b in memory
flw f13, 0(x2) # load 0xf48eebfde05e229b from memory into f13
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f30, 0(x2) # load 0x80000001 from memory into f30
fmsub.s f11, f16, f13, f30, dyn # perform operation
fmsub.s f11, f16, f13, f30, rdn # perform operation
fmsub.s f11, f16, f13, f30, rmm # perform operation
fmsub.s f11, f16, f13, f30, rne # perform operation
fmsub.s f11, f16, f13, f30, rtz # perform operation
fmsub.s f11, f16, f13, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f11, f16, f13, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f11, f16, f13, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f11, f16, f13, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f11, f16, f13, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f11, f16, f13, f30 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0x7f800000)
li x15, 0xc666f239a6895e9e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f2, 0(x2) # load 0x7f800001 from memory into f2
li x3, 0x7fb83e20e335b6df # load x3 with value 0x7fb83e20e335b6df
sw x3, 0(x2) # store 0x7fb83e20e335b6df in memory
flw f11, 0(x2) # load 0x7fb83e20e335b6df from memory into f11
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f23, 0(x2) # load 0x7f800000 from memory into f23
fmsub.s f15, f2, f11, f23, dyn # perform operation
fmsub.s f15, f2, f11, f23, rdn # perform operation
fmsub.s f15, f2, f11, f23, rmm # perform operation
fmsub.s f15, f2, f11, f23, rne # perform operation
fmsub.s f15, f2, f11, f23, rtz # perform operation
fmsub.s f15, f2, f11, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f15, f2, f11, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f15, f2, f11, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f15, f2, f11, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f15, f2, f11, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f15, f2, f11, f23 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0xff800000)
li x1, 0x3c8a2047ab886048 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f18, 0(x2) # load 0x7f800001 from memory into f18
li x3, 0x1395d1a458070031 # load x3 with value 0x1395d1a458070031
sw x3, 0(x2) # store 0x1395d1a458070031 in memory
flw f9, 0(x2) # load 0x1395d1a458070031 from memory into f9
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f26, 0(x2) # load 0xff800000 from memory into f26
fmsub.s f1, f18, f9, f26, dyn # perform operation
fmsub.s f1, f18, f9, f26, rdn # perform operation
fmsub.s f1, f18, f9, f26, rmm # perform operation
fmsub.s f1, f18, f9, f26, rne # perform operation
fmsub.s f1, f18, f9, f26, rtz # perform operation
fmsub.s f1, f18, f9, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f1, f18, f9, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f1, f18, f9, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f1, f18, f9, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f1, f18, f9, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f1, f18, f9, f26 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0x7fc00000)
li x11, 0xae05310654df8715 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f20, 0(x2) # load 0x7f800001 from memory into f20
li x3, 0xd6437db401d25ff0 # load x3 with value 0xd6437db401d25ff0
sw x3, 0(x2) # store 0xd6437db401d25ff0 in memory
flw f15, 0(x2) # load 0xd6437db401d25ff0 from memory into f15
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f26, 0(x2) # load 0x7fc00000 from memory into f26
fmsub.s f11, f20, f15, f26, dyn # perform operation
fmsub.s f11, f20, f15, f26, rdn # perform operation
fmsub.s f11, f20, f15, f26, rmm # perform operation
fmsub.s f11, f20, f15, f26, rne # perform operation
fmsub.s f11, f20, f15, f26, rtz # perform operation
fmsub.s f11, f20, f15, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f11, f20, f15, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f11, f20, f15, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f11, f20, f15, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f11, f20, f15, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f11, f20, f15, f26 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0x7fffffff)
li x26, 0x15703ff727be93d8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f10, 0(x2) # load 0x7f800001 from memory into f10
li x3, 0xd43b7b6094e0c6f7 # load x3 with value 0xd43b7b6094e0c6f7
sw x3, 0(x2) # store 0xd43b7b6094e0c6f7 in memory
flw f18, 0(x2) # load 0xd43b7b6094e0c6f7 from memory into f18
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f23, 0(x2) # load 0x7fffffff from memory into f23
fmsub.s f26, f10, f18, f23, dyn # perform operation
fmsub.s f26, f10, f18, f23, rdn # perform operation
fmsub.s f26, f10, f18, f23, rmm # perform operation
fmsub.s f26, f10, f18, f23, rne # perform operation
fmsub.s f26, f10, f18, f23, rtz # perform operation
fmsub.s f26, f10, f18, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f26, f10, f18, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f26, f10, f18, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f26, f10, f18, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f26, f10, f18, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f26, f10, f18, f23 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0x7f800001)
li x25, 0x0588daf4d02c8110 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f18, 0(x2) # load 0x7f800001 from memory into f18
li x3, 0xbf553a9b640b64d6 # load x3 with value 0xbf553a9b640b64d6
sw x3, 0(x2) # store 0xbf553a9b640b64d6 in memory
flw f22, 0(x2) # load 0xbf553a9b640b64d6 from memory into f22
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f8, 0(x2) # load 0x7f800001 from memory into f8
fmsub.s f25, f18, f22, f8, dyn # perform operation
fmsub.s f25, f18, f22, f8, rdn # perform operation
fmsub.s f25, f18, f22, f8, rmm # perform operation
fmsub.s f25, f18, f22, f8, rne # perform operation
fmsub.s f25, f18, f22, f8, rtz # perform operation
fmsub.s f25, f18, f22, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f25, f18, f22, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f25, f18, f22, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f25, f18, f22, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f25, f18, f22, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f25, f18, f22, f8 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0x7fbfffff)
li x27, 0x9d3afab0b265c9fa # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f24, 0(x2) # load 0x7f800001 from memory into f24
li x3, 0xcebbaabd9f3380a2 # load x3 with value 0xcebbaabd9f3380a2
sw x3, 0(x2) # store 0xcebbaabd9f3380a2 in memory
flw f15, 0(x2) # load 0xcebbaabd9f3380a2 from memory into f15
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f31, 0(x2) # load 0x7fbfffff from memory into f31
fmsub.s f27, f24, f15, f31, dyn # perform operation
fmsub.s f27, f24, f15, f31, rdn # perform operation
fmsub.s f27, f24, f15, f31, rmm # perform operation
fmsub.s f27, f24, f15, f31, rne # perform operation
fmsub.s f27, f24, f15, f31, rtz # perform operation
fmsub.s f27, f24, f15, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f27, f24, f15, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f27, f24, f15, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f27, f24, f15, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f27, f24, f15, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f27, f24, f15, f31 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0x7ef8654f)
li x18, 0x4d04f2aa896117c0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f26, 0(x2) # load 0x7f800001 from memory into f26
li x3, 0x399052ace5214b1f # load x3 with value 0x399052ace5214b1f
sw x3, 0(x2) # store 0x399052ace5214b1f in memory
flw f3, 0(x2) # load 0x399052ace5214b1f from memory into f3
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f24, 0(x2) # load 0x7ef8654f from memory into f24
fmsub.s f18, f26, f3, f24, dyn # perform operation
fmsub.s f18, f26, f3, f24, rdn # perform operation
fmsub.s f18, f26, f3, f24, rmm # perform operation
fmsub.s f18, f26, f3, f24, rne # perform operation
fmsub.s f18, f26, f3, f24, rtz # perform operation
fmsub.s f18, f26, f3, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f18, f26, f3, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f18, f26, f3, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f18, f26, f3, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f18, f26, f3, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f18, f26, f3, f24 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0x813d9ab0)
li x1, 0x5b78ad1f3071ba01 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f5, 0(x2) # load 0x7f800001 from memory into f5
li x3, 0xf1ce1073930cd0f0 # load x3 with value 0xf1ce1073930cd0f0
sw x3, 0(x2) # store 0xf1ce1073930cd0f0 in memory
flw f10, 0(x2) # load 0xf1ce1073930cd0f0 from memory into f10
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f23, 0(x2) # load 0x813d9ab0 from memory into f23
fmsub.s f1, f5, f10, f23, dyn # perform operation
fmsub.s f1, f5, f10, f23, rdn # perform operation
fmsub.s f1, f5, f10, f23, rmm # perform operation
fmsub.s f1, f5, f10, f23, rne # perform operation
fmsub.s f1, f5, f10, f23, rtz # perform operation
fmsub.s f1, f5, f10, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f1, f5, f10, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f1, f5, f10, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f1, f5, f10, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f1, f5, f10, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f1, f5, f10, f23 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0x0)
li x7, 0x2f78c3bb658f997f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f20, 0(x2) # load 0x7fbfffff from memory into f20
li x3, 0xafc848b5815dea23 # load x3 with value 0xafc848b5815dea23
sw x3, 0(x2) # store 0xafc848b5815dea23 in memory
flw f3, 0(x2) # load 0xafc848b5815dea23 from memory into f3
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f4, 0(x2) # load 0x00000000 from memory into f4
fmsub.s f7, f20, f3, f4, dyn # perform operation
fmsub.s f7, f20, f3, f4, rdn # perform operation
fmsub.s f7, f20, f3, f4, rmm # perform operation
fmsub.s f7, f20, f3, f4, rne # perform operation
fmsub.s f7, f20, f3, f4, rtz # perform operation
fmsub.s f7, f20, f3, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f7, f20, f3, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f7, f20, f3, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f7, f20, f3, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f7, f20, f3, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f7, f20, f3, f4 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0x80000000)
li x1, 0xf0b46b981e4f2d34 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f21, 0(x2) # load 0x7fbfffff from memory into f21
li x3, 0xf944588048b09cbb # load x3 with value 0xf944588048b09cbb
sw x3, 0(x2) # store 0xf944588048b09cbb in memory
flw f2, 0(x2) # load 0xf944588048b09cbb from memory into f2
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f14, 0(x2) # load 0x80000000 from memory into f14
fmsub.s f1, f21, f2, f14, dyn # perform operation
fmsub.s f1, f21, f2, f14, rdn # perform operation
fmsub.s f1, f21, f2, f14, rmm # perform operation
fmsub.s f1, f21, f2, f14, rne # perform operation
fmsub.s f1, f21, f2, f14, rtz # perform operation
fmsub.s f1, f21, f2, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f1, f21, f2, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f1, f21, f2, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f1, f21, f2, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f1, f21, f2, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f1, f21, f2, f14 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0x3f800000)
li x20, 0xa59b5488dd6bbadb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f28, 0(x2) # load 0x7fbfffff from memory into f28
li x3, 0x8af7fca3850f2466 # load x3 with value 0x8af7fca3850f2466
sw x3, 0(x2) # store 0x8af7fca3850f2466 in memory
flw f2, 0(x2) # load 0x8af7fca3850f2466 from memory into f2
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f24, 0(x2) # load 0x3f800000 from memory into f24
fmsub.s f20, f28, f2, f24, dyn # perform operation
fmsub.s f20, f28, f2, f24, rdn # perform operation
fmsub.s f20, f28, f2, f24, rmm # perform operation
fmsub.s f20, f28, f2, f24, rne # perform operation
fmsub.s f20, f28, f2, f24, rtz # perform operation
fmsub.s f20, f28, f2, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f20, f28, f2, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f20, f28, f2, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f20, f28, f2, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f20, f28, f2, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f20, f28, f2, f24 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0xbf800000)
li x24, 0xeaef79579cf0a707 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f23, 0(x2) # load 0x7fbfffff from memory into f23
li x3, 0xff19fc9454eb81d2 # load x3 with value 0xff19fc9454eb81d2
sw x3, 0(x2) # store 0xff19fc9454eb81d2 in memory
flw f10, 0(x2) # load 0xff19fc9454eb81d2 from memory into f10
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f16, 0(x2) # load 0xbf800000 from memory into f16
fmsub.s f24, f23, f10, f16, dyn # perform operation
fmsub.s f24, f23, f10, f16, rdn # perform operation
fmsub.s f24, f23, f10, f16, rmm # perform operation
fmsub.s f24, f23, f10, f16, rne # perform operation
fmsub.s f24, f23, f10, f16, rtz # perform operation
fmsub.s f24, f23, f10, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f24, f23, f10, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f24, f23, f10, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f24, f23, f10, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f24, f23, f10, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f24, f23, f10, f16 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0x3fc00000)
li x31, 0xb9b33f80444b58f9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f7, 0(x2) # load 0x7fbfffff from memory into f7
li x3, 0x90f540b92e2d562f # load x3 with value 0x90f540b92e2d562f
sw x3, 0(x2) # store 0x90f540b92e2d562f in memory
flw f4, 0(x2) # load 0x90f540b92e2d562f from memory into f4
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f20, 0(x2) # load 0x3fc00000 from memory into f20
fmsub.s f31, f7, f4, f20, dyn # perform operation
fmsub.s f31, f7, f4, f20, rdn # perform operation
fmsub.s f31, f7, f4, f20, rmm # perform operation
fmsub.s f31, f7, f4, f20, rne # perform operation
fmsub.s f31, f7, f4, f20, rtz # perform operation
fmsub.s f31, f7, f4, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f31, f7, f4, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f31, f7, f4, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f31, f7, f4, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f31, f7, f4, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f31, f7, f4, f20 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0xbfc00000)
li x24, 0xae96632b47f9c1c5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f25, 0(x2) # load 0x7fbfffff from memory into f25
li x3, 0x52dcb659f1f21d88 # load x3 with value 0x52dcb659f1f21d88
sw x3, 0(x2) # store 0x52dcb659f1f21d88 in memory
flw f20, 0(x2) # load 0x52dcb659f1f21d88 from memory into f20
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f26, 0(x2) # load 0xbfc00000 from memory into f26
fmsub.s f24, f25, f20, f26, dyn # perform operation
fmsub.s f24, f25, f20, f26, rdn # perform operation
fmsub.s f24, f25, f20, f26, rmm # perform operation
fmsub.s f24, f25, f20, f26, rne # perform operation
fmsub.s f24, f25, f20, f26, rtz # perform operation
fmsub.s f24, f25, f20, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f24, f25, f20, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f24, f25, f20, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f24, f25, f20, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f24, f25, f20, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f24, f25, f20, f26 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0x40000000)
li x11, 0x2da980f515829bf4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f3, 0(x2) # load 0x7fbfffff from memory into f3
li x3, 0x5facf15db4f4e01c # load x3 with value 0x5facf15db4f4e01c
sw x3, 0(x2) # store 0x5facf15db4f4e01c in memory
flw f19, 0(x2) # load 0x5facf15db4f4e01c from memory into f19
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f30, 0(x2) # load 0x40000000 from memory into f30
fmsub.s f11, f3, f19, f30, dyn # perform operation
fmsub.s f11, f3, f19, f30, rdn # perform operation
fmsub.s f11, f3, f19, f30, rmm # perform operation
fmsub.s f11, f3, f19, f30, rne # perform operation
fmsub.s f11, f3, f19, f30, rtz # perform operation
fmsub.s f11, f3, f19, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f11, f3, f19, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f11, f3, f19, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f11, f3, f19, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f11, f3, f19, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f11, f3, f19, f30 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0xc0000000)
li x14, 0x71dcb2126493060e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f5, 0(x2) # load 0x7fbfffff from memory into f5
li x3, 0x3b04b9fac9a84bc0 # load x3 with value 0x3b04b9fac9a84bc0
sw x3, 0(x2) # store 0x3b04b9fac9a84bc0 in memory
flw f20, 0(x2) # load 0x3b04b9fac9a84bc0 from memory into f20
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f23, 0(x2) # load 0xc0000000 from memory into f23
fmsub.s f14, f5, f20, f23, dyn # perform operation
fmsub.s f14, f5, f20, f23, rdn # perform operation
fmsub.s f14, f5, f20, f23, rmm # perform operation
fmsub.s f14, f5, f20, f23, rne # perform operation
fmsub.s f14, f5, f20, f23, rtz # perform operation
fmsub.s f14, f5, f20, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f14, f5, f20, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f14, f5, f20, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f14, f5, f20, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f14, f5, f20, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f14, f5, f20, f23 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0x800000)
li x21, 0xd5f5fec21c73b354 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f9, 0(x2) # load 0x7fbfffff from memory into f9
li x3, 0x707f7f4316d90190 # load x3 with value 0x707f7f4316d90190
sw x3, 0(x2) # store 0x707f7f4316d90190 in memory
flw f31, 0(x2) # load 0x707f7f4316d90190 from memory into f31
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f6, 0(x2) # load 0x00800000 from memory into f6
fmsub.s f21, f9, f31, f6, dyn # perform operation
fmsub.s f21, f9, f31, f6, rdn # perform operation
fmsub.s f21, f9, f31, f6, rmm # perform operation
fmsub.s f21, f9, f31, f6, rne # perform operation
fmsub.s f21, f9, f31, f6, rtz # perform operation
fmsub.s f21, f9, f31, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f21, f9, f31, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f21, f9, f31, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f21, f9, f31, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f21, f9, f31, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f21, f9, f31, f6 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0x80800000)
li x24, 0x2eb17c3f95912493 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f25, 0(x2) # load 0x7fbfffff from memory into f25
li x3, 0xeebfbece82b2b3e4 # load x3 with value 0xeebfbece82b2b3e4
sw x3, 0(x2) # store 0xeebfbece82b2b3e4 in memory
flw f17, 0(x2) # load 0xeebfbece82b2b3e4 from memory into f17
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f9, 0(x2) # load 0x80800000 from memory into f9
fmsub.s f24, f25, f17, f9, dyn # perform operation
fmsub.s f24, f25, f17, f9, rdn # perform operation
fmsub.s f24, f25, f17, f9, rmm # perform operation
fmsub.s f24, f25, f17, f9, rne # perform operation
fmsub.s f24, f25, f17, f9, rtz # perform operation
fmsub.s f24, f25, f17, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f24, f25, f17, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f24, f25, f17, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f24, f25, f17, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f24, f25, f17, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f24, f25, f17, f9 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0x7f7fffff)
li x5, 0x8b27e3f8f843dab0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f9, 0(x2) # load 0x7fbfffff from memory into f9
li x3, 0xf30dcc896c08ec49 # load x3 with value 0xf30dcc896c08ec49
sw x3, 0(x2) # store 0xf30dcc896c08ec49 in memory
flw f20, 0(x2) # load 0xf30dcc896c08ec49 from memory into f20
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f27, 0(x2) # load 0x7f7fffff from memory into f27
fmsub.s f5, f9, f20, f27, dyn # perform operation
fmsub.s f5, f9, f20, f27, rdn # perform operation
fmsub.s f5, f9, f20, f27, rmm # perform operation
fmsub.s f5, f9, f20, f27, rne # perform operation
fmsub.s f5, f9, f20, f27, rtz # perform operation
fmsub.s f5, f9, f20, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f5, f9, f20, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f5, f9, f20, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f5, f9, f20, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f5, f9, f20, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f5, f9, f20, f27 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0xff7fffff)
li x16, 0xd6007405ec03f417 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f21, 0(x2) # load 0x7fbfffff from memory into f21
li x3, 0xfa0138d958a920d4 # load x3 with value 0xfa0138d958a920d4
sw x3, 0(x2) # store 0xfa0138d958a920d4 in memory
flw f23, 0(x2) # load 0xfa0138d958a920d4 from memory into f23
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f26, 0(x2) # load 0xff7fffff from memory into f26
fmsub.s f16, f21, f23, f26, dyn # perform operation
fmsub.s f16, f21, f23, f26, rdn # perform operation
fmsub.s f16, f21, f23, f26, rmm # perform operation
fmsub.s f16, f21, f23, f26, rne # perform operation
fmsub.s f16, f21, f23, f26, rtz # perform operation
fmsub.s f16, f21, f23, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f16, f21, f23, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f16, f21, f23, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f16, f21, f23, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f16, f21, f23, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f16, f21, f23, f26 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0x7fffff)
li x11, 0x5d5895b526372bc9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f22, 0(x2) # load 0x7fbfffff from memory into f22
li x3, 0x96fddeb96cf9da5a # load x3 with value 0x96fddeb96cf9da5a
sw x3, 0(x2) # store 0x96fddeb96cf9da5a in memory
flw f23, 0(x2) # load 0x96fddeb96cf9da5a from memory into f23
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f25, 0(x2) # load 0x007fffff from memory into f25
fmsub.s f11, f22, f23, f25, dyn # perform operation
fmsub.s f11, f22, f23, f25, rdn # perform operation
fmsub.s f11, f22, f23, f25, rmm # perform operation
fmsub.s f11, f22, f23, f25, rne # perform operation
fmsub.s f11, f22, f23, f25, rtz # perform operation
fmsub.s f11, f22, f23, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f11, f22, f23, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f11, f22, f23, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f11, f22, f23, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f11, f22, f23, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f11, f22, f23, f25 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0x807fffff)
li x14, 0x021edfd302c88278 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f26, 0(x2) # load 0x7fbfffff from memory into f26
li x3, 0x7ed72c4d815cb88a # load x3 with value 0x7ed72c4d815cb88a
sw x3, 0(x2) # store 0x7ed72c4d815cb88a in memory
flw f2, 0(x2) # load 0x7ed72c4d815cb88a from memory into f2
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f29, 0(x2) # load 0x807fffff from memory into f29
fmsub.s f14, f26, f2, f29, dyn # perform operation
fmsub.s f14, f26, f2, f29, rdn # perform operation
fmsub.s f14, f26, f2, f29, rmm # perform operation
fmsub.s f14, f26, f2, f29, rne # perform operation
fmsub.s f14, f26, f2, f29, rtz # perform operation
fmsub.s f14, f26, f2, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f14, f26, f2, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f14, f26, f2, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f14, f26, f2, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f14, f26, f2, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f14, f26, f2, f29 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0x400000)
li x14, 0x4a28c3def3871599 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f4, 0(x2) # load 0x7fbfffff from memory into f4
li x3, 0xb60f3d0ac5ec610 # load x3 with value 0xb60f3d0ac5ec610
sw x3, 0(x2) # store 0xb60f3d0ac5ec610 in memory
flw f5, 0(x2) # load 0xb60f3d0ac5ec610 from memory into f5
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f1, 0(x2) # load 0x00400000 from memory into f1
fmsub.s f14, f4, f5, f1, dyn # perform operation
fmsub.s f14, f4, f5, f1, rdn # perform operation
fmsub.s f14, f4, f5, f1, rmm # perform operation
fmsub.s f14, f4, f5, f1, rne # perform operation
fmsub.s f14, f4, f5, f1, rtz # perform operation
fmsub.s f14, f4, f5, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f14, f4, f5, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f14, f4, f5, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f14, f4, f5, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f14, f4, f5, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f14, f4, f5, f1 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0x80400000)
li x15, 0xb655deeba388a916 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f20, 0(x2) # load 0x7fbfffff from memory into f20
li x3, 0x192b50643dcfb6d7 # load x3 with value 0x192b50643dcfb6d7
sw x3, 0(x2) # store 0x192b50643dcfb6d7 in memory
flw f12, 0(x2) # load 0x192b50643dcfb6d7 from memory into f12
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f23, 0(x2) # load 0x80400000 from memory into f23
fmsub.s f15, f20, f12, f23, dyn # perform operation
fmsub.s f15, f20, f12, f23, rdn # perform operation
fmsub.s f15, f20, f12, f23, rmm # perform operation
fmsub.s f15, f20, f12, f23, rne # perform operation
fmsub.s f15, f20, f12, f23, rtz # perform operation
fmsub.s f15, f20, f12, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f15, f20, f12, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f15, f20, f12, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f15, f20, f12, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f15, f20, f12, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f15, f20, f12, f23 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0x1)
li x23, 0xc104f26f9cf8025b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f3, 0(x2) # load 0x7fbfffff from memory into f3
li x3, 0xd1e83a956e7a9499 # load x3 with value 0xd1e83a956e7a9499
sw x3, 0(x2) # store 0xd1e83a956e7a9499 in memory
flw f18, 0(x2) # load 0xd1e83a956e7a9499 from memory into f18
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f1, 0(x2) # load 0x00000001 from memory into f1
fmsub.s f23, f3, f18, f1, dyn # perform operation
fmsub.s f23, f3, f18, f1, rdn # perform operation
fmsub.s f23, f3, f18, f1, rmm # perform operation
fmsub.s f23, f3, f18, f1, rne # perform operation
fmsub.s f23, f3, f18, f1, rtz # perform operation
fmsub.s f23, f3, f18, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f23, f3, f18, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f23, f3, f18, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f23, f3, f18, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f23, f3, f18, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f23, f3, f18, f1 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0x80000001)
li x6, 0x76d7cdaf5dcdc826 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f12, 0(x2) # load 0x7fbfffff from memory into f12
li x3, 0x81e5b0591e00b7ee # load x3 with value 0x81e5b0591e00b7ee
sw x3, 0(x2) # store 0x81e5b0591e00b7ee in memory
flw f30, 0(x2) # load 0x81e5b0591e00b7ee from memory into f30
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f15, 0(x2) # load 0x80000001 from memory into f15
fmsub.s f6, f12, f30, f15, dyn # perform operation
fmsub.s f6, f12, f30, f15, rdn # perform operation
fmsub.s f6, f12, f30, f15, rmm # perform operation
fmsub.s f6, f12, f30, f15, rne # perform operation
fmsub.s f6, f12, f30, f15, rtz # perform operation
fmsub.s f6, f12, f30, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f6, f12, f30, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f6, f12, f30, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f6, f12, f30, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f6, f12, f30, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f6, f12, f30, f15 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0x7f800000)
li x25, 0xd027c0b0b4689aa9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f2, 0(x2) # load 0x7fbfffff from memory into f2
li x3, 0xee843d0459644e68 # load x3 with value 0xee843d0459644e68
sw x3, 0(x2) # store 0xee843d0459644e68 in memory
flw f3, 0(x2) # load 0xee843d0459644e68 from memory into f3
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f13, 0(x2) # load 0x7f800000 from memory into f13
fmsub.s f25, f2, f3, f13, dyn # perform operation
fmsub.s f25, f2, f3, f13, rdn # perform operation
fmsub.s f25, f2, f3, f13, rmm # perform operation
fmsub.s f25, f2, f3, f13, rne # perform operation
fmsub.s f25, f2, f3, f13, rtz # perform operation
fmsub.s f25, f2, f3, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f25, f2, f3, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f25, f2, f3, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f25, f2, f3, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f25, f2, f3, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f25, f2, f3, f13 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0xff800000)
li x26, 0xf50537660e9a2cc5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f27, 0(x2) # load 0x7fbfffff from memory into f27
li x3, 0xe42751b13aae063f # load x3 with value 0xe42751b13aae063f
sw x3, 0(x2) # store 0xe42751b13aae063f in memory
flw f6, 0(x2) # load 0xe42751b13aae063f from memory into f6
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f15, 0(x2) # load 0xff800000 from memory into f15
fmsub.s f26, f27, f6, f15, dyn # perform operation
fmsub.s f26, f27, f6, f15, rdn # perform operation
fmsub.s f26, f27, f6, f15, rmm # perform operation
fmsub.s f26, f27, f6, f15, rne # perform operation
fmsub.s f26, f27, f6, f15, rtz # perform operation
fmsub.s f26, f27, f6, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f26, f27, f6, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f26, f27, f6, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f26, f27, f6, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f26, f27, f6, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f26, f27, f6, f15 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0x7fc00000)
li x29, 0x04f957959d46698f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f23, 0(x2) # load 0x7fbfffff from memory into f23
li x3, 0x4a9fe484e754f73c # load x3 with value 0x4a9fe484e754f73c
sw x3, 0(x2) # store 0x4a9fe484e754f73c in memory
flw f20, 0(x2) # load 0x4a9fe484e754f73c from memory into f20
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f14, 0(x2) # load 0x7fc00000 from memory into f14
fmsub.s f29, f23, f20, f14, dyn # perform operation
fmsub.s f29, f23, f20, f14, rdn # perform operation
fmsub.s f29, f23, f20, f14, rmm # perform operation
fmsub.s f29, f23, f20, f14, rne # perform operation
fmsub.s f29, f23, f20, f14, rtz # perform operation
fmsub.s f29, f23, f20, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f29, f23, f20, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f29, f23, f20, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f29, f23, f20, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f29, f23, f20, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f29, f23, f20, f14 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0x7fffffff)
li x1, 0x1bad6b3855a02b3f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f8, 0(x2) # load 0x7fbfffff from memory into f8
li x3, 0xaf118f303cecb4b7 # load x3 with value 0xaf118f303cecb4b7
sw x3, 0(x2) # store 0xaf118f303cecb4b7 in memory
flw f21, 0(x2) # load 0xaf118f303cecb4b7 from memory into f21
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f13, 0(x2) # load 0x7fffffff from memory into f13
fmsub.s f1, f8, f21, f13, dyn # perform operation
fmsub.s f1, f8, f21, f13, rdn # perform operation
fmsub.s f1, f8, f21, f13, rmm # perform operation
fmsub.s f1, f8, f21, f13, rne # perform operation
fmsub.s f1, f8, f21, f13, rtz # perform operation
fmsub.s f1, f8, f21, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f1, f8, f21, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f1, f8, f21, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f1, f8, f21, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f1, f8, f21, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f1, f8, f21, f13 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0x7f800001)
li x31, 0x3f1fd9d95610ad0d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f14, 0(x2) # load 0x7fbfffff from memory into f14
li x3, 0x9608199e66ed1b48 # load x3 with value 0x9608199e66ed1b48
sw x3, 0(x2) # store 0x9608199e66ed1b48 in memory
flw f9, 0(x2) # load 0x9608199e66ed1b48 from memory into f9
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f1, 0(x2) # load 0x7f800001 from memory into f1
fmsub.s f31, f14, f9, f1, dyn # perform operation
fmsub.s f31, f14, f9, f1, rdn # perform operation
fmsub.s f31, f14, f9, f1, rmm # perform operation
fmsub.s f31, f14, f9, f1, rne # perform operation
fmsub.s f31, f14, f9, f1, rtz # perform operation
fmsub.s f31, f14, f9, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f31, f14, f9, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f31, f14, f9, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f31, f14, f9, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f31, f14, f9, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f31, f14, f9, f1 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0x7fbfffff)
li x17, 0x0dd649958d147876 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f8, 0(x2) # load 0x7fbfffff from memory into f8
li x3, 0xcdd1604b0cb560d6 # load x3 with value 0xcdd1604b0cb560d6
sw x3, 0(x2) # store 0xcdd1604b0cb560d6 in memory
flw f25, 0(x2) # load 0xcdd1604b0cb560d6 from memory into f25
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f22, 0(x2) # load 0x7fbfffff from memory into f22
fmsub.s f17, f8, f25, f22, dyn # perform operation
fmsub.s f17, f8, f25, f22, rdn # perform operation
fmsub.s f17, f8, f25, f22, rmm # perform operation
fmsub.s f17, f8, f25, f22, rne # perform operation
fmsub.s f17, f8, f25, f22, rtz # perform operation
fmsub.s f17, f8, f25, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f17, f8, f25, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f17, f8, f25, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f17, f8, f25, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f17, f8, f25, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f17, f8, f25, f22 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0x7ef8654f)
li x17, 0xc5002b65ae2b9781 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f1, 0(x2) # load 0x7fbfffff from memory into f1
li x3, 0x1be5665e037aa3ce # load x3 with value 0x1be5665e037aa3ce
sw x3, 0(x2) # store 0x1be5665e037aa3ce in memory
flw f6, 0(x2) # load 0x1be5665e037aa3ce from memory into f6
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f16, 0(x2) # load 0x7ef8654f from memory into f16
fmsub.s f17, f1, f6, f16, dyn # perform operation
fmsub.s f17, f1, f6, f16, rdn # perform operation
fmsub.s f17, f1, f6, f16, rmm # perform operation
fmsub.s f17, f1, f6, f16, rne # perform operation
fmsub.s f17, f1, f6, f16, rtz # perform operation
fmsub.s f17, f1, f6, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f17, f1, f6, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f17, f1, f6, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f17, f1, f6, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f17, f1, f6, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f17, f1, f6, f16 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0x813d9ab0)
li x10, 0x3a30cc8f3f830e1a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f11, 0(x2) # load 0x7fbfffff from memory into f11
li x3, 0xc13d3bd3659b742 # load x3 with value 0xc13d3bd3659b742
sw x3, 0(x2) # store 0xc13d3bd3659b742 in memory
flw f7, 0(x2) # load 0xc13d3bd3659b742 from memory into f7
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f9, 0(x2) # load 0x813d9ab0 from memory into f9
fmsub.s f10, f11, f7, f9, dyn # perform operation
fmsub.s f10, f11, f7, f9, rdn # perform operation
fmsub.s f10, f11, f7, f9, rmm # perform operation
fmsub.s f10, f11, f7, f9, rne # perform operation
fmsub.s f10, f11, f7, f9, rtz # perform operation
fmsub.s f10, f11, f7, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f10, f11, f7, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f10, f11, f7, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f10, f11, f7, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f10, f11, f7, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f10, f11, f7, f9 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0x0)
li x13, 0xd1a506076e662237 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f3, 0(x2) # load 0x7ef8654f from memory into f3
li x3, 0xa499c7a8945382f8 # load x3 with value 0xa499c7a8945382f8
sw x3, 0(x2) # store 0xa499c7a8945382f8 in memory
flw f23, 0(x2) # load 0xa499c7a8945382f8 from memory into f23
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f19, 0(x2) # load 0x00000000 from memory into f19
fmsub.s f13, f3, f23, f19, dyn # perform operation
fmsub.s f13, f3, f23, f19, rdn # perform operation
fmsub.s f13, f3, f23, f19, rmm # perform operation
fmsub.s f13, f3, f23, f19, rne # perform operation
fmsub.s f13, f3, f23, f19, rtz # perform operation
fmsub.s f13, f3, f23, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f13, f3, f23, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f13, f3, f23, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f13, f3, f23, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f13, f3, f23, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f13, f3, f23, f19 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0x80000000)
li x17, 0x0a4c6f0cd3a95702 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f15, 0(x2) # load 0x7ef8654f from memory into f15
li x3, 0x389ee59d491d405d # load x3 with value 0x389ee59d491d405d
sw x3, 0(x2) # store 0x389ee59d491d405d in memory
flw f14, 0(x2) # load 0x389ee59d491d405d from memory into f14
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f9, 0(x2) # load 0x80000000 from memory into f9
fmsub.s f17, f15, f14, f9, dyn # perform operation
fmsub.s f17, f15, f14, f9, rdn # perform operation
fmsub.s f17, f15, f14, f9, rmm # perform operation
fmsub.s f17, f15, f14, f9, rne # perform operation
fmsub.s f17, f15, f14, f9, rtz # perform operation
fmsub.s f17, f15, f14, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f17, f15, f14, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f17, f15, f14, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f17, f15, f14, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f17, f15, f14, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f17, f15, f14, f9 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0x3f800000)
li x18, 0xa185dcabe4c0c102 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f30, 0(x2) # load 0x7ef8654f from memory into f30
li x3, 0xa93d25d6551f83ef # load x3 with value 0xa93d25d6551f83ef
sw x3, 0(x2) # store 0xa93d25d6551f83ef in memory
flw f2, 0(x2) # load 0xa93d25d6551f83ef from memory into f2
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f11, 0(x2) # load 0x3f800000 from memory into f11
fmsub.s f18, f30, f2, f11, dyn # perform operation
fmsub.s f18, f30, f2, f11, rdn # perform operation
fmsub.s f18, f30, f2, f11, rmm # perform operation
fmsub.s f18, f30, f2, f11, rne # perform operation
fmsub.s f18, f30, f2, f11, rtz # perform operation
fmsub.s f18, f30, f2, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f18, f30, f2, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f18, f30, f2, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f18, f30, f2, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f18, f30, f2, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f18, f30, f2, f11 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0xbf800000)
li x31, 0xad48aae74ba817dd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f26, 0(x2) # load 0x7ef8654f from memory into f26
li x3, 0xb5d88f3ea91e6f82 # load x3 with value 0xb5d88f3ea91e6f82
sw x3, 0(x2) # store 0xb5d88f3ea91e6f82 in memory
flw f7, 0(x2) # load 0xb5d88f3ea91e6f82 from memory into f7
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f13, 0(x2) # load 0xbf800000 from memory into f13
fmsub.s f31, f26, f7, f13, dyn # perform operation
fmsub.s f31, f26, f7, f13, rdn # perform operation
fmsub.s f31, f26, f7, f13, rmm # perform operation
fmsub.s f31, f26, f7, f13, rne # perform operation
fmsub.s f31, f26, f7, f13, rtz # perform operation
fmsub.s f31, f26, f7, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f31, f26, f7, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f31, f26, f7, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f31, f26, f7, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f31, f26, f7, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f31, f26, f7, f13 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0x3fc00000)
li x31, 0xe47f1ccc67ab7bef # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f2, 0(x2) # load 0x7ef8654f from memory into f2
li x3, 0x7b71207a9cef508 # load x3 with value 0x7b71207a9cef508
sw x3, 0(x2) # store 0x7b71207a9cef508 in memory
flw f26, 0(x2) # load 0x7b71207a9cef508 from memory into f26
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f18, 0(x2) # load 0x3fc00000 from memory into f18
fmsub.s f31, f2, f26, f18, dyn # perform operation
fmsub.s f31, f2, f26, f18, rdn # perform operation
fmsub.s f31, f2, f26, f18, rmm # perform operation
fmsub.s f31, f2, f26, f18, rne # perform operation
fmsub.s f31, f2, f26, f18, rtz # perform operation
fmsub.s f31, f2, f26, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f31, f2, f26, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f31, f2, f26, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f31, f2, f26, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f31, f2, f26, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f31, f2, f26, f18 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0xbfc00000)
li x2, 0xfd2f3a6b4ecfbf9d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f14, 0(x2) # load 0x7ef8654f from memory into f14
li x3, 0xe508d6be7322bdb1 # load x3 with value 0xe508d6be7322bdb1
sw x3, 0(x2) # store 0xe508d6be7322bdb1 in memory
flw f13, 0(x2) # load 0xe508d6be7322bdb1 from memory into f13
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f17, 0(x2) # load 0xbfc00000 from memory into f17
fmsub.s f2, f14, f13, f17, dyn # perform operation
fmsub.s f2, f14, f13, f17, rdn # perform operation
fmsub.s f2, f14, f13, f17, rmm # perform operation
fmsub.s f2, f14, f13, f17, rne # perform operation
fmsub.s f2, f14, f13, f17, rtz # perform operation
fmsub.s f2, f14, f13, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f2, f14, f13, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f2, f14, f13, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f2, f14, f13, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f2, f14, f13, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f2, f14, f13, f17 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0x40000000)
li x8, 0xdd34d601d634024f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f1, 0(x2) # load 0x7ef8654f from memory into f1
li x3, 0x61fedd83c7e9c6d0 # load x3 with value 0x61fedd83c7e9c6d0
sw x3, 0(x2) # store 0x61fedd83c7e9c6d0 in memory
flw f16, 0(x2) # load 0x61fedd83c7e9c6d0 from memory into f16
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f27, 0(x2) # load 0x40000000 from memory into f27
fmsub.s f8, f1, f16, f27, dyn # perform operation
fmsub.s f8, f1, f16, f27, rdn # perform operation
fmsub.s f8, f1, f16, f27, rmm # perform operation
fmsub.s f8, f1, f16, f27, rne # perform operation
fmsub.s f8, f1, f16, f27, rtz # perform operation
fmsub.s f8, f1, f16, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f8, f1, f16, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f8, f1, f16, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f8, f1, f16, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f8, f1, f16, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f8, f1, f16, f27 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0xc0000000)
li x18, 0x7d55b1ced86b0b7b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f17, 0(x2) # load 0x7ef8654f from memory into f17
li x3, 0x6a58c375ecaa49b8 # load x3 with value 0x6a58c375ecaa49b8
sw x3, 0(x2) # store 0x6a58c375ecaa49b8 in memory
flw f16, 0(x2) # load 0x6a58c375ecaa49b8 from memory into f16
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f2, 0(x2) # load 0xc0000000 from memory into f2
fmsub.s f18, f17, f16, f2, dyn # perform operation
fmsub.s f18, f17, f16, f2, rdn # perform operation
fmsub.s f18, f17, f16, f2, rmm # perform operation
fmsub.s f18, f17, f16, f2, rne # perform operation
fmsub.s f18, f17, f16, f2, rtz # perform operation
fmsub.s f18, f17, f16, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f18, f17, f16, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f18, f17, f16, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f18, f17, f16, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f18, f17, f16, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f18, f17, f16, f2 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0x800000)
li x23, 0x505a9eed00f6bc7b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f21, 0(x2) # load 0x7ef8654f from memory into f21
li x3, 0x76227972b8e2cc76 # load x3 with value 0x76227972b8e2cc76
sw x3, 0(x2) # store 0x76227972b8e2cc76 in memory
flw f7, 0(x2) # load 0x76227972b8e2cc76 from memory into f7
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f10, 0(x2) # load 0x00800000 from memory into f10
fmsub.s f23, f21, f7, f10, dyn # perform operation
fmsub.s f23, f21, f7, f10, rdn # perform operation
fmsub.s f23, f21, f7, f10, rmm # perform operation
fmsub.s f23, f21, f7, f10, rne # perform operation
fmsub.s f23, f21, f7, f10, rtz # perform operation
fmsub.s f23, f21, f7, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f23, f21, f7, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f23, f21, f7, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f23, f21, f7, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f23, f21, f7, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f23, f21, f7, f10 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0x80800000)
li x24, 0xe6f6139305b59286 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f22, 0(x2) # load 0x7ef8654f from memory into f22
li x3, 0x15d01d17ed9b626d # load x3 with value 0x15d01d17ed9b626d
sw x3, 0(x2) # store 0x15d01d17ed9b626d in memory
flw f30, 0(x2) # load 0x15d01d17ed9b626d from memory into f30
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f18, 0(x2) # load 0x80800000 from memory into f18
fmsub.s f24, f22, f30, f18, dyn # perform operation
fmsub.s f24, f22, f30, f18, rdn # perform operation
fmsub.s f24, f22, f30, f18, rmm # perform operation
fmsub.s f24, f22, f30, f18, rne # perform operation
fmsub.s f24, f22, f30, f18, rtz # perform operation
fmsub.s f24, f22, f30, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f24, f22, f30, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f24, f22, f30, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f24, f22, f30, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f24, f22, f30, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f24, f22, f30, f18 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0x7f7fffff)
li x18, 0xfb93d304ace2f186 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f31, 0(x2) # load 0x7ef8654f from memory into f31
li x3, 0x4456a2425d35f073 # load x3 with value 0x4456a2425d35f073
sw x3, 0(x2) # store 0x4456a2425d35f073 in memory
flw f13, 0(x2) # load 0x4456a2425d35f073 from memory into f13
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f25, 0(x2) # load 0x7f7fffff from memory into f25
fmsub.s f18, f31, f13, f25, dyn # perform operation
fmsub.s f18, f31, f13, f25, rdn # perform operation
fmsub.s f18, f31, f13, f25, rmm # perform operation
fmsub.s f18, f31, f13, f25, rne # perform operation
fmsub.s f18, f31, f13, f25, rtz # perform operation
fmsub.s f18, f31, f13, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f18, f31, f13, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f18, f31, f13, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f18, f31, f13, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f18, f31, f13, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f18, f31, f13, f25 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0xff7fffff)
li x23, 0xc2cbcaac39d90ff9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f24, 0(x2) # load 0x7ef8654f from memory into f24
li x3, 0x902c3b08f8f41702 # load x3 with value 0x902c3b08f8f41702
sw x3, 0(x2) # store 0x902c3b08f8f41702 in memory
flw f13, 0(x2) # load 0x902c3b08f8f41702 from memory into f13
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f1, 0(x2) # load 0xff7fffff from memory into f1
fmsub.s f23, f24, f13, f1, dyn # perform operation
fmsub.s f23, f24, f13, f1, rdn # perform operation
fmsub.s f23, f24, f13, f1, rmm # perform operation
fmsub.s f23, f24, f13, f1, rne # perform operation
fmsub.s f23, f24, f13, f1, rtz # perform operation
fmsub.s f23, f24, f13, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f23, f24, f13, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f23, f24, f13, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f23, f24, f13, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f23, f24, f13, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f23, f24, f13, f1 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0x7fffff)
li x17, 0x7cde96c3eb77469b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f5, 0(x2) # load 0x7ef8654f from memory into f5
li x3, 0x352597f8598f16e3 # load x3 with value 0x352597f8598f16e3
sw x3, 0(x2) # store 0x352597f8598f16e3 in memory
flw f10, 0(x2) # load 0x352597f8598f16e3 from memory into f10
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f28, 0(x2) # load 0x007fffff from memory into f28
fmsub.s f17, f5, f10, f28, dyn # perform operation
fmsub.s f17, f5, f10, f28, rdn # perform operation
fmsub.s f17, f5, f10, f28, rmm # perform operation
fmsub.s f17, f5, f10, f28, rne # perform operation
fmsub.s f17, f5, f10, f28, rtz # perform operation
fmsub.s f17, f5, f10, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f17, f5, f10, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f17, f5, f10, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f17, f5, f10, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f17, f5, f10, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f17, f5, f10, f28 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0x807fffff)
li x15, 0xbb60e6268e921185 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f20, 0(x2) # load 0x7ef8654f from memory into f20
li x3, 0x26ef79e8da72491 # load x3 with value 0x26ef79e8da72491
sw x3, 0(x2) # store 0x26ef79e8da72491 in memory
flw f30, 0(x2) # load 0x26ef79e8da72491 from memory into f30
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f26, 0(x2) # load 0x807fffff from memory into f26
fmsub.s f15, f20, f30, f26, dyn # perform operation
fmsub.s f15, f20, f30, f26, rdn # perform operation
fmsub.s f15, f20, f30, f26, rmm # perform operation
fmsub.s f15, f20, f30, f26, rne # perform operation
fmsub.s f15, f20, f30, f26, rtz # perform operation
fmsub.s f15, f20, f30, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f15, f20, f30, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f15, f20, f30, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f15, f20, f30, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f15, f20, f30, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f15, f20, f30, f26 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0x400000)
li x20, 0x2f01029dfa603769 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f17, 0(x2) # load 0x7ef8654f from memory into f17
li x3, 0xa7868878ac3150bc # load x3 with value 0xa7868878ac3150bc
sw x3, 0(x2) # store 0xa7868878ac3150bc in memory
flw f24, 0(x2) # load 0xa7868878ac3150bc from memory into f24
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f8, 0(x2) # load 0x00400000 from memory into f8
fmsub.s f20, f17, f24, f8, dyn # perform operation
fmsub.s f20, f17, f24, f8, rdn # perform operation
fmsub.s f20, f17, f24, f8, rmm # perform operation
fmsub.s f20, f17, f24, f8, rne # perform operation
fmsub.s f20, f17, f24, f8, rtz # perform operation
fmsub.s f20, f17, f24, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f20, f17, f24, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f20, f17, f24, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f20, f17, f24, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f20, f17, f24, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f20, f17, f24, f8 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0x80400000)
li x23, 0x8aad9ff34b1879b8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f27, 0(x2) # load 0x7ef8654f from memory into f27
li x3, 0x6354750a0098b924 # load x3 with value 0x6354750a0098b924
sw x3, 0(x2) # store 0x6354750a0098b924 in memory
flw f9, 0(x2) # load 0x6354750a0098b924 from memory into f9
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f12, 0(x2) # load 0x80400000 from memory into f12
fmsub.s f23, f27, f9, f12, dyn # perform operation
fmsub.s f23, f27, f9, f12, rdn # perform operation
fmsub.s f23, f27, f9, f12, rmm # perform operation
fmsub.s f23, f27, f9, f12, rne # perform operation
fmsub.s f23, f27, f9, f12, rtz # perform operation
fmsub.s f23, f27, f9, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f23, f27, f9, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f23, f27, f9, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f23, f27, f9, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f23, f27, f9, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f23, f27, f9, f12 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0x1)
li x22, 0xb3a6c45b1f808846 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f15, 0(x2) # load 0x7ef8654f from memory into f15
li x3, 0x5865313a2fea69f2 # load x3 with value 0x5865313a2fea69f2
sw x3, 0(x2) # store 0x5865313a2fea69f2 in memory
flw f18, 0(x2) # load 0x5865313a2fea69f2 from memory into f18
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f6, 0(x2) # load 0x00000001 from memory into f6
fmsub.s f22, f15, f18, f6, dyn # perform operation
fmsub.s f22, f15, f18, f6, rdn # perform operation
fmsub.s f22, f15, f18, f6, rmm # perform operation
fmsub.s f22, f15, f18, f6, rne # perform operation
fmsub.s f22, f15, f18, f6, rtz # perform operation
fmsub.s f22, f15, f18, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f22, f15, f18, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f22, f15, f18, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f22, f15, f18, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f22, f15, f18, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f22, f15, f18, f6 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0x80000001)
li x26, 0xbee164173af3dde3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f20, 0(x2) # load 0x7ef8654f from memory into f20
li x3, 0x82b17cf58a36cf53 # load x3 with value 0x82b17cf58a36cf53
sw x3, 0(x2) # store 0x82b17cf58a36cf53 in memory
flw f17, 0(x2) # load 0x82b17cf58a36cf53 from memory into f17
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f25, 0(x2) # load 0x80000001 from memory into f25
fmsub.s f26, f20, f17, f25, dyn # perform operation
fmsub.s f26, f20, f17, f25, rdn # perform operation
fmsub.s f26, f20, f17, f25, rmm # perform operation
fmsub.s f26, f20, f17, f25, rne # perform operation
fmsub.s f26, f20, f17, f25, rtz # perform operation
fmsub.s f26, f20, f17, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f26, f20, f17, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f26, f20, f17, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f26, f20, f17, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f26, f20, f17, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f26, f20, f17, f25 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0x7f800000)
li x24, 0xa7bbdd45ccc96af1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f20, 0(x2) # load 0x7ef8654f from memory into f20
li x3, 0x8c23eacc55449698 # load x3 with value 0x8c23eacc55449698
sw x3, 0(x2) # store 0x8c23eacc55449698 in memory
flw f30, 0(x2) # load 0x8c23eacc55449698 from memory into f30
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f17, 0(x2) # load 0x7f800000 from memory into f17
fmsub.s f24, f20, f30, f17, dyn # perform operation
fmsub.s f24, f20, f30, f17, rdn # perform operation
fmsub.s f24, f20, f30, f17, rmm # perform operation
fmsub.s f24, f20, f30, f17, rne # perform operation
fmsub.s f24, f20, f30, f17, rtz # perform operation
fmsub.s f24, f20, f30, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f24, f20, f30, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f24, f20, f30, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f24, f20, f30, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f24, f20, f30, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f24, f20, f30, f17 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0xff800000)
li x26, 0x681699f096c00f1f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f30, 0(x2) # load 0x7ef8654f from memory into f30
li x3, 0x3ea3d519f356d07d # load x3 with value 0x3ea3d519f356d07d
sw x3, 0(x2) # store 0x3ea3d519f356d07d in memory
flw f31, 0(x2) # load 0x3ea3d519f356d07d from memory into f31
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f11, 0(x2) # load 0xff800000 from memory into f11
fmsub.s f26, f30, f31, f11, dyn # perform operation
fmsub.s f26, f30, f31, f11, rdn # perform operation
fmsub.s f26, f30, f31, f11, rmm # perform operation
fmsub.s f26, f30, f31, f11, rne # perform operation
fmsub.s f26, f30, f31, f11, rtz # perform operation
fmsub.s f26, f30, f31, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f26, f30, f31, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f26, f30, f31, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f26, f30, f31, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f26, f30, f31, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f26, f30, f31, f11 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0x7fc00000)
li x4, 0x8956971e8f6094b1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f30, 0(x2) # load 0x7ef8654f from memory into f30
li x3, 0xbe6ba473517fb509 # load x3 with value 0xbe6ba473517fb509
sw x3, 0(x2) # store 0xbe6ba473517fb509 in memory
flw f31, 0(x2) # load 0xbe6ba473517fb509 from memory into f31
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f9, 0(x2) # load 0x7fc00000 from memory into f9
fmsub.s f4, f30, f31, f9, dyn # perform operation
fmsub.s f4, f30, f31, f9, rdn # perform operation
fmsub.s f4, f30, f31, f9, rmm # perform operation
fmsub.s f4, f30, f31, f9, rne # perform operation
fmsub.s f4, f30, f31, f9, rtz # perform operation
fmsub.s f4, f30, f31, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f4, f30, f31, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f4, f30, f31, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f4, f30, f31, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f4, f30, f31, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f4, f30, f31, f9 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0x7fffffff)
li x25, 0x1dc630dc0388bef6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f31, 0(x2) # load 0x7ef8654f from memory into f31
li x3, 0x2928339028e31fa8 # load x3 with value 0x2928339028e31fa8
sw x3, 0(x2) # store 0x2928339028e31fa8 in memory
flw f30, 0(x2) # load 0x2928339028e31fa8 from memory into f30
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f10, 0(x2) # load 0x7fffffff from memory into f10
fmsub.s f25, f31, f30, f10, dyn # perform operation
fmsub.s f25, f31, f30, f10, rdn # perform operation
fmsub.s f25, f31, f30, f10, rmm # perform operation
fmsub.s f25, f31, f30, f10, rne # perform operation
fmsub.s f25, f31, f30, f10, rtz # perform operation
fmsub.s f25, f31, f30, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f25, f31, f30, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f25, f31, f30, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f25, f31, f30, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f25, f31, f30, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f25, f31, f30, f10 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0x7f800001)
li x13, 0x31755ec4e90edace # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f30, 0(x2) # load 0x7ef8654f from memory into f30
li x3, 0x4aa67378bd987e3c # load x3 with value 0x4aa67378bd987e3c
sw x3, 0(x2) # store 0x4aa67378bd987e3c in memory
flw f17, 0(x2) # load 0x4aa67378bd987e3c from memory into f17
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f7, 0(x2) # load 0x7f800001 from memory into f7
fmsub.s f13, f30, f17, f7, dyn # perform operation
fmsub.s f13, f30, f17, f7, rdn # perform operation
fmsub.s f13, f30, f17, f7, rmm # perform operation
fmsub.s f13, f30, f17, f7, rne # perform operation
fmsub.s f13, f30, f17, f7, rtz # perform operation
fmsub.s f13, f30, f17, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f13, f30, f17, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f13, f30, f17, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f13, f30, f17, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f13, f30, f17, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f13, f30, f17, f7 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0x7fbfffff)
li x20, 0x761a750a658aebc2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f15, 0(x2) # load 0x7ef8654f from memory into f15
li x3, 0xb3d3c1a9df5b06a9 # load x3 with value 0xb3d3c1a9df5b06a9
sw x3, 0(x2) # store 0xb3d3c1a9df5b06a9 in memory
flw f2, 0(x2) # load 0xb3d3c1a9df5b06a9 from memory into f2
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f12, 0(x2) # load 0x7fbfffff from memory into f12
fmsub.s f20, f15, f2, f12, dyn # perform operation
fmsub.s f20, f15, f2, f12, rdn # perform operation
fmsub.s f20, f15, f2, f12, rmm # perform operation
fmsub.s f20, f15, f2, f12, rne # perform operation
fmsub.s f20, f15, f2, f12, rtz # perform operation
fmsub.s f20, f15, f2, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f20, f15, f2, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f20, f15, f2, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f20, f15, f2, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f20, f15, f2, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f20, f15, f2, f12 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0x7ef8654f)
li x29, 0x1df9e1cd2fbe1085 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f18, 0(x2) # load 0x7ef8654f from memory into f18
li x3, 0xdd533ea1bda68d15 # load x3 with value 0xdd533ea1bda68d15
sw x3, 0(x2) # store 0xdd533ea1bda68d15 in memory
flw f10, 0(x2) # load 0xdd533ea1bda68d15 from memory into f10
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f23, 0(x2) # load 0x7ef8654f from memory into f23
fmsub.s f29, f18, f10, f23, dyn # perform operation
fmsub.s f29, f18, f10, f23, rdn # perform operation
fmsub.s f29, f18, f10, f23, rmm # perform operation
fmsub.s f29, f18, f10, f23, rne # perform operation
fmsub.s f29, f18, f10, f23, rtz # perform operation
fmsub.s f29, f18, f10, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f29, f18, f10, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f29, f18, f10, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f29, f18, f10, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f29, f18, f10, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f29, f18, f10, f23 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0x813d9ab0)
li x16, 0x98db9b562cb4a0fe # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f17, 0(x2) # load 0x7ef8654f from memory into f17
li x3, 0xa2bcc2485b51bf4e # load x3 with value 0xa2bcc2485b51bf4e
sw x3, 0(x2) # store 0xa2bcc2485b51bf4e in memory
flw f6, 0(x2) # load 0xa2bcc2485b51bf4e from memory into f6
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f19, 0(x2) # load 0x813d9ab0 from memory into f19
fmsub.s f16, f17, f6, f19, dyn # perform operation
fmsub.s f16, f17, f6, f19, rdn # perform operation
fmsub.s f16, f17, f6, f19, rmm # perform operation
fmsub.s f16, f17, f6, f19, rne # perform operation
fmsub.s f16, f17, f6, f19, rtz # perform operation
fmsub.s f16, f17, f6, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f16, f17, f6, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f16, f17, f6, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f16, f17, f6, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f16, f17, f6, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f16, f17, f6, f19 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0x0)
li x3, 0x7dd7bc3bfbc700f6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f25, 0(x2) # load 0x813d9ab0 from memory into f25
li x3, 0x4e008dbc58fdae7d # load x3 with value 0x4e008dbc58fdae7d
sw x3, 0(x2) # store 0x4e008dbc58fdae7d in memory
flw f10, 0(x2) # load 0x4e008dbc58fdae7d from memory into f10
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f5, 0(x2) # load 0x00000000 from memory into f5
fmsub.s f3, f25, f10, f5, dyn # perform operation
fmsub.s f3, f25, f10, f5, rdn # perform operation
fmsub.s f3, f25, f10, f5, rmm # perform operation
fmsub.s f3, f25, f10, f5, rne # perform operation
fmsub.s f3, f25, f10, f5, rtz # perform operation
fmsub.s f3, f25, f10, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f3, f25, f10, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f3, f25, f10, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f3, f25, f10, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f3, f25, f10, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f3, f25, f10, f5 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0x80000000)
li x19, 0x3406826281d8766e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f26, 0(x2) # load 0x813d9ab0 from memory into f26
li x3, 0x624717d24387dbc9 # load x3 with value 0x624717d24387dbc9
sw x3, 0(x2) # store 0x624717d24387dbc9 in memory
flw f10, 0(x2) # load 0x624717d24387dbc9 from memory into f10
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f20, 0(x2) # load 0x80000000 from memory into f20
fmsub.s f19, f26, f10, f20, dyn # perform operation
fmsub.s f19, f26, f10, f20, rdn # perform operation
fmsub.s f19, f26, f10, f20, rmm # perform operation
fmsub.s f19, f26, f10, f20, rne # perform operation
fmsub.s f19, f26, f10, f20, rtz # perform operation
fmsub.s f19, f26, f10, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f19, f26, f10, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f19, f26, f10, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f19, f26, f10, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f19, f26, f10, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f19, f26, f10, f20 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0x3f800000)
li x14, 0x19fdbeb14734daf5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f26, 0(x2) # load 0x813d9ab0 from memory into f26
li x3, 0x76907450e4de0cb6 # load x3 with value 0x76907450e4de0cb6
sw x3, 0(x2) # store 0x76907450e4de0cb6 in memory
flw f22, 0(x2) # load 0x76907450e4de0cb6 from memory into f22
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f17, 0(x2) # load 0x3f800000 from memory into f17
fmsub.s f14, f26, f22, f17, dyn # perform operation
fmsub.s f14, f26, f22, f17, rdn # perform operation
fmsub.s f14, f26, f22, f17, rmm # perform operation
fmsub.s f14, f26, f22, f17, rne # perform operation
fmsub.s f14, f26, f22, f17, rtz # perform operation
fmsub.s f14, f26, f22, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f14, f26, f22, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f14, f26, f22, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f14, f26, f22, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f14, f26, f22, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f14, f26, f22, f17 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0xbf800000)
li x28, 0x55aa8d874cd0c31e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f1, 0(x2) # load 0x813d9ab0 from memory into f1
li x3, 0x572970d63958e6d4 # load x3 with value 0x572970d63958e6d4
sw x3, 0(x2) # store 0x572970d63958e6d4 in memory
flw f16, 0(x2) # load 0x572970d63958e6d4 from memory into f16
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f9, 0(x2) # load 0xbf800000 from memory into f9
fmsub.s f28, f1, f16, f9, dyn # perform operation
fmsub.s f28, f1, f16, f9, rdn # perform operation
fmsub.s f28, f1, f16, f9, rmm # perform operation
fmsub.s f28, f1, f16, f9, rne # perform operation
fmsub.s f28, f1, f16, f9, rtz # perform operation
fmsub.s f28, f1, f16, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f28, f1, f16, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f28, f1, f16, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f28, f1, f16, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f28, f1, f16, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f28, f1, f16, f9 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0x3fc00000)
li x1, 0x8424caf36b2ca633 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f15, 0(x2) # load 0x813d9ab0 from memory into f15
li x3, 0x537717908529a3a2 # load x3 with value 0x537717908529a3a2
sw x3, 0(x2) # store 0x537717908529a3a2 in memory
flw f13, 0(x2) # load 0x537717908529a3a2 from memory into f13
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f4, 0(x2) # load 0x3fc00000 from memory into f4
fmsub.s f1, f15, f13, f4, dyn # perform operation
fmsub.s f1, f15, f13, f4, rdn # perform operation
fmsub.s f1, f15, f13, f4, rmm # perform operation
fmsub.s f1, f15, f13, f4, rne # perform operation
fmsub.s f1, f15, f13, f4, rtz # perform operation
fmsub.s f1, f15, f13, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f1, f15, f13, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f1, f15, f13, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f1, f15, f13, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f1, f15, f13, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f1, f15, f13, f4 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0xbfc00000)
li x11, 0x50b3e5adba45e59d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f13, 0(x2) # load 0x813d9ab0 from memory into f13
li x3, 0x354333ecb090ad44 # load x3 with value 0x354333ecb090ad44
sw x3, 0(x2) # store 0x354333ecb090ad44 in memory
flw f25, 0(x2) # load 0x354333ecb090ad44 from memory into f25
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f23, 0(x2) # load 0xbfc00000 from memory into f23
fmsub.s f11, f13, f25, f23, dyn # perform operation
fmsub.s f11, f13, f25, f23, rdn # perform operation
fmsub.s f11, f13, f25, f23, rmm # perform operation
fmsub.s f11, f13, f25, f23, rne # perform operation
fmsub.s f11, f13, f25, f23, rtz # perform operation
fmsub.s f11, f13, f25, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f11, f13, f25, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f11, f13, f25, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f11, f13, f25, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f11, f13, f25, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f11, f13, f25, f23 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0x40000000)
li x3, 0xe8f0a632a00a7185 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f25, 0(x2) # load 0x813d9ab0 from memory into f25
li x3, 0x2cb12c51206a0e6e # load x3 with value 0x2cb12c51206a0e6e
sw x3, 0(x2) # store 0x2cb12c51206a0e6e in memory
flw f2, 0(x2) # load 0x2cb12c51206a0e6e from memory into f2
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f30, 0(x2) # load 0x40000000 from memory into f30
fmsub.s f3, f25, f2, f30, dyn # perform operation
fmsub.s f3, f25, f2, f30, rdn # perform operation
fmsub.s f3, f25, f2, f30, rmm # perform operation
fmsub.s f3, f25, f2, f30, rne # perform operation
fmsub.s f3, f25, f2, f30, rtz # perform operation
fmsub.s f3, f25, f2, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f3, f25, f2, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f3, f25, f2, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f3, f25, f2, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f3, f25, f2, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f3, f25, f2, f30 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0xc0000000)
li x28, 0xf3b3a48eb59067c1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f5, 0(x2) # load 0x813d9ab0 from memory into f5
li x3, 0xf57cc79b5e22b17a # load x3 with value 0xf57cc79b5e22b17a
sw x3, 0(x2) # store 0xf57cc79b5e22b17a in memory
flw f26, 0(x2) # load 0xf57cc79b5e22b17a from memory into f26
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f13, 0(x2) # load 0xc0000000 from memory into f13
fmsub.s f28, f5, f26, f13, dyn # perform operation
fmsub.s f28, f5, f26, f13, rdn # perform operation
fmsub.s f28, f5, f26, f13, rmm # perform operation
fmsub.s f28, f5, f26, f13, rne # perform operation
fmsub.s f28, f5, f26, f13, rtz # perform operation
fmsub.s f28, f5, f26, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f28, f5, f26, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f28, f5, f26, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f28, f5, f26, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f28, f5, f26, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f28, f5, f26, f13 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0x800000)
li x7, 0xf3b6857fffc829b5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f25, 0(x2) # load 0x813d9ab0 from memory into f25
li x3, 0x86b8828f61f51854 # load x3 with value 0x86b8828f61f51854
sw x3, 0(x2) # store 0x86b8828f61f51854 in memory
flw f30, 0(x2) # load 0x86b8828f61f51854 from memory into f30
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f3, 0(x2) # load 0x00800000 from memory into f3
fmsub.s f7, f25, f30, f3, dyn # perform operation
fmsub.s f7, f25, f30, f3, rdn # perform operation
fmsub.s f7, f25, f30, f3, rmm # perform operation
fmsub.s f7, f25, f30, f3, rne # perform operation
fmsub.s f7, f25, f30, f3, rtz # perform operation
fmsub.s f7, f25, f30, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f7, f25, f30, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f7, f25, f30, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f7, f25, f30, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f7, f25, f30, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f7, f25, f30, f3 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0x80800000)
li x10, 0xbd353c8c1dd23b3a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f18, 0(x2) # load 0x813d9ab0 from memory into f18
li x3, 0x2a2d3033855e6c33 # load x3 with value 0x2a2d3033855e6c33
sw x3, 0(x2) # store 0x2a2d3033855e6c33 in memory
flw f27, 0(x2) # load 0x2a2d3033855e6c33 from memory into f27
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f31, 0(x2) # load 0x80800000 from memory into f31
fmsub.s f10, f18, f27, f31, dyn # perform operation
fmsub.s f10, f18, f27, f31, rdn # perform operation
fmsub.s f10, f18, f27, f31, rmm # perform operation
fmsub.s f10, f18, f27, f31, rne # perform operation
fmsub.s f10, f18, f27, f31, rtz # perform operation
fmsub.s f10, f18, f27, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f10, f18, f27, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f10, f18, f27, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f10, f18, f27, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f10, f18, f27, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f10, f18, f27, f31 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0x7f7fffff)
li x4, 0xe88bba878694364b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f17, 0(x2) # load 0x813d9ab0 from memory into f17
li x3, 0xbe39b6abdc76226d # load x3 with value 0xbe39b6abdc76226d
sw x3, 0(x2) # store 0xbe39b6abdc76226d in memory
flw f7, 0(x2) # load 0xbe39b6abdc76226d from memory into f7
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f22, 0(x2) # load 0x7f7fffff from memory into f22
fmsub.s f4, f17, f7, f22, dyn # perform operation
fmsub.s f4, f17, f7, f22, rdn # perform operation
fmsub.s f4, f17, f7, f22, rmm # perform operation
fmsub.s f4, f17, f7, f22, rne # perform operation
fmsub.s f4, f17, f7, f22, rtz # perform operation
fmsub.s f4, f17, f7, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f4, f17, f7, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f4, f17, f7, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f4, f17, f7, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f4, f17, f7, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f4, f17, f7, f22 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0xff7fffff)
li x8, 0xca58424c078e68f1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f24, 0(x2) # load 0x813d9ab0 from memory into f24
li x3, 0x217f89f847d7449b # load x3 with value 0x217f89f847d7449b
sw x3, 0(x2) # store 0x217f89f847d7449b in memory
flw f12, 0(x2) # load 0x217f89f847d7449b from memory into f12
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f4, 0(x2) # load 0xff7fffff from memory into f4
fmsub.s f8, f24, f12, f4, dyn # perform operation
fmsub.s f8, f24, f12, f4, rdn # perform operation
fmsub.s f8, f24, f12, f4, rmm # perform operation
fmsub.s f8, f24, f12, f4, rne # perform operation
fmsub.s f8, f24, f12, f4, rtz # perform operation
fmsub.s f8, f24, f12, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f8, f24, f12, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f8, f24, f12, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f8, f24, f12, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f8, f24, f12, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f8, f24, f12, f4 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0x7fffff)
li x14, 0x1823bbbb46ef37bd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f15, 0(x2) # load 0x813d9ab0 from memory into f15
li x3, 0xaa89b441e8bb446 # load x3 with value 0xaa89b441e8bb446
sw x3, 0(x2) # store 0xaa89b441e8bb446 in memory
flw f27, 0(x2) # load 0xaa89b441e8bb446 from memory into f27
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f17, 0(x2) # load 0x007fffff from memory into f17
fmsub.s f14, f15, f27, f17, dyn # perform operation
fmsub.s f14, f15, f27, f17, rdn # perform operation
fmsub.s f14, f15, f27, f17, rmm # perform operation
fmsub.s f14, f15, f27, f17, rne # perform operation
fmsub.s f14, f15, f27, f17, rtz # perform operation
fmsub.s f14, f15, f27, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f14, f15, f27, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f14, f15, f27, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f14, f15, f27, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f14, f15, f27, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f14, f15, f27, f17 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0x807fffff)
li x15, 0x33c9cb95126bafd1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f23, 0(x2) # load 0x813d9ab0 from memory into f23
li x3, 0x4eb1f4035a7a1999 # load x3 with value 0x4eb1f4035a7a1999
sw x3, 0(x2) # store 0x4eb1f4035a7a1999 in memory
flw f27, 0(x2) # load 0x4eb1f4035a7a1999 from memory into f27
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f14, 0(x2) # load 0x807fffff from memory into f14
fmsub.s f15, f23, f27, f14, dyn # perform operation
fmsub.s f15, f23, f27, f14, rdn # perform operation
fmsub.s f15, f23, f27, f14, rmm # perform operation
fmsub.s f15, f23, f27, f14, rne # perform operation
fmsub.s f15, f23, f27, f14, rtz # perform operation
fmsub.s f15, f23, f27, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f15, f23, f27, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f15, f23, f27, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f15, f23, f27, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f15, f23, f27, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f15, f23, f27, f14 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0x400000)
li x30, 0x7b6d84647510b5e2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f22, 0(x2) # load 0x813d9ab0 from memory into f22
li x3, 0xa21b1341f69f2f0e # load x3 with value 0xa21b1341f69f2f0e
sw x3, 0(x2) # store 0xa21b1341f69f2f0e in memory
flw f17, 0(x2) # load 0xa21b1341f69f2f0e from memory into f17
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f28, 0(x2) # load 0x00400000 from memory into f28
fmsub.s f30, f22, f17, f28, dyn # perform operation
fmsub.s f30, f22, f17, f28, rdn # perform operation
fmsub.s f30, f22, f17, f28, rmm # perform operation
fmsub.s f30, f22, f17, f28, rne # perform operation
fmsub.s f30, f22, f17, f28, rtz # perform operation
fmsub.s f30, f22, f17, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f30, f22, f17, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f30, f22, f17, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f30, f22, f17, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f30, f22, f17, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f30, f22, f17, f28 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0x80400000)
li x27, 0x34e0b429b0d712af # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f26, 0(x2) # load 0x813d9ab0 from memory into f26
li x3, 0x7eb515a587f96cc4 # load x3 with value 0x7eb515a587f96cc4
sw x3, 0(x2) # store 0x7eb515a587f96cc4 in memory
flw f25, 0(x2) # load 0x7eb515a587f96cc4 from memory into f25
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f13, 0(x2) # load 0x80400000 from memory into f13
fmsub.s f27, f26, f25, f13, dyn # perform operation
fmsub.s f27, f26, f25, f13, rdn # perform operation
fmsub.s f27, f26, f25, f13, rmm # perform operation
fmsub.s f27, f26, f25, f13, rne # perform operation
fmsub.s f27, f26, f25, f13, rtz # perform operation
fmsub.s f27, f26, f25, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f27, f26, f25, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f27, f26, f25, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f27, f26, f25, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f27, f26, f25, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f27, f26, f25, f13 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0x1)
li x10, 0x1bfbaacff02a06ff # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f27, 0(x2) # load 0x813d9ab0 from memory into f27
li x3, 0x692d3ee2a343772f # load x3 with value 0x692d3ee2a343772f
sw x3, 0(x2) # store 0x692d3ee2a343772f in memory
flw f21, 0(x2) # load 0x692d3ee2a343772f from memory into f21
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f4, 0(x2) # load 0x00000001 from memory into f4
fmsub.s f10, f27, f21, f4, dyn # perform operation
fmsub.s f10, f27, f21, f4, rdn # perform operation
fmsub.s f10, f27, f21, f4, rmm # perform operation
fmsub.s f10, f27, f21, f4, rne # perform operation
fmsub.s f10, f27, f21, f4, rtz # perform operation
fmsub.s f10, f27, f21, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f10, f27, f21, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f10, f27, f21, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f10, f27, f21, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f10, f27, f21, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f10, f27, f21, f4 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0x80000001)
li x1, 0xbd3700779371d258 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f12, 0(x2) # load 0x813d9ab0 from memory into f12
li x3, 0x588c5d156550c16 # load x3 with value 0x588c5d156550c16
sw x3, 0(x2) # store 0x588c5d156550c16 in memory
flw f6, 0(x2) # load 0x588c5d156550c16 from memory into f6
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f11, 0(x2) # load 0x80000001 from memory into f11
fmsub.s f1, f12, f6, f11, dyn # perform operation
fmsub.s f1, f12, f6, f11, rdn # perform operation
fmsub.s f1, f12, f6, f11, rmm # perform operation
fmsub.s f1, f12, f6, f11, rne # perform operation
fmsub.s f1, f12, f6, f11, rtz # perform operation
fmsub.s f1, f12, f6, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f1, f12, f6, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f1, f12, f6, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f1, f12, f6, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f1, f12, f6, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f1, f12, f6, f11 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0x7f800000)
li x6, 0x92f922c4a4e38784 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f13, 0(x2) # load 0x813d9ab0 from memory into f13
li x3, 0xfc2f4ad6cc6997c0 # load x3 with value 0xfc2f4ad6cc6997c0
sw x3, 0(x2) # store 0xfc2f4ad6cc6997c0 in memory
flw f27, 0(x2) # load 0xfc2f4ad6cc6997c0 from memory into f27
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f24, 0(x2) # load 0x7f800000 from memory into f24
fmsub.s f6, f13, f27, f24, dyn # perform operation
fmsub.s f6, f13, f27, f24, rdn # perform operation
fmsub.s f6, f13, f27, f24, rmm # perform operation
fmsub.s f6, f13, f27, f24, rne # perform operation
fmsub.s f6, f13, f27, f24, rtz # perform operation
fmsub.s f6, f13, f27, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f6, f13, f27, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f6, f13, f27, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f6, f13, f27, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f6, f13, f27, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f6, f13, f27, f24 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0xff800000)
li x14, 0xa89b66bddda2e997 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f26, 0(x2) # load 0x813d9ab0 from memory into f26
li x3, 0xabe143467672e323 # load x3 with value 0xabe143467672e323
sw x3, 0(x2) # store 0xabe143467672e323 in memory
flw f2, 0(x2) # load 0xabe143467672e323 from memory into f2
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f30, 0(x2) # load 0xff800000 from memory into f30
fmsub.s f14, f26, f2, f30, dyn # perform operation
fmsub.s f14, f26, f2, f30, rdn # perform operation
fmsub.s f14, f26, f2, f30, rmm # perform operation
fmsub.s f14, f26, f2, f30, rne # perform operation
fmsub.s f14, f26, f2, f30, rtz # perform operation
fmsub.s f14, f26, f2, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f14, f26, f2, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f14, f26, f2, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f14, f26, f2, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f14, f26, f2, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f14, f26, f2, f30 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0x7fc00000)
li x17, 0x4bee1b28bf09398f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f13, 0(x2) # load 0x813d9ab0 from memory into f13
li x3, 0x6e40e9f79435cfea # load x3 with value 0x6e40e9f79435cfea
sw x3, 0(x2) # store 0x6e40e9f79435cfea in memory
flw f3, 0(x2) # load 0x6e40e9f79435cfea from memory into f3
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f28, 0(x2) # load 0x7fc00000 from memory into f28
fmsub.s f17, f13, f3, f28, dyn # perform operation
fmsub.s f17, f13, f3, f28, rdn # perform operation
fmsub.s f17, f13, f3, f28, rmm # perform operation
fmsub.s f17, f13, f3, f28, rne # perform operation
fmsub.s f17, f13, f3, f28, rtz # perform operation
fmsub.s f17, f13, f3, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f17, f13, f3, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f17, f13, f3, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f17, f13, f3, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f17, f13, f3, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f17, f13, f3, f28 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0x7fffffff)
li x20, 0xce6c01ed048de9ea # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f17, 0(x2) # load 0x813d9ab0 from memory into f17
li x3, 0xfe391e71157415e7 # load x3 with value 0xfe391e71157415e7
sw x3, 0(x2) # store 0xfe391e71157415e7 in memory
flw f29, 0(x2) # load 0xfe391e71157415e7 from memory into f29
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f18, 0(x2) # load 0x7fffffff from memory into f18
fmsub.s f20, f17, f29, f18, dyn # perform operation
fmsub.s f20, f17, f29, f18, rdn # perform operation
fmsub.s f20, f17, f29, f18, rmm # perform operation
fmsub.s f20, f17, f29, f18, rne # perform operation
fmsub.s f20, f17, f29, f18, rtz # perform operation
fmsub.s f20, f17, f29, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f20, f17, f29, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f20, f17, f29, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f20, f17, f29, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f20, f17, f29, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f20, f17, f29, f18 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0x7f800001)
li x4, 0x124db717bb3823c8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f19, 0(x2) # load 0x813d9ab0 from memory into f19
li x3, 0x2ca5707371f33cbe # load x3 with value 0x2ca5707371f33cbe
sw x3, 0(x2) # store 0x2ca5707371f33cbe in memory
flw f2, 0(x2) # load 0x2ca5707371f33cbe from memory into f2
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f16, 0(x2) # load 0x7f800001 from memory into f16
fmsub.s f4, f19, f2, f16, dyn # perform operation
fmsub.s f4, f19, f2, f16, rdn # perform operation
fmsub.s f4, f19, f2, f16, rmm # perform operation
fmsub.s f4, f19, f2, f16, rne # perform operation
fmsub.s f4, f19, f2, f16, rtz # perform operation
fmsub.s f4, f19, f2, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f4, f19, f2, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f4, f19, f2, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f4, f19, f2, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f4, f19, f2, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f4, f19, f2, f16 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0x7fbfffff)
li x5, 0x6a95b3a6e6c80485 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f12, 0(x2) # load 0x813d9ab0 from memory into f12
li x3, 0xf4217ac6fb3cb874 # load x3 with value 0xf4217ac6fb3cb874
sw x3, 0(x2) # store 0xf4217ac6fb3cb874 in memory
flw f23, 0(x2) # load 0xf4217ac6fb3cb874 from memory into f23
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f1, 0(x2) # load 0x7fbfffff from memory into f1
fmsub.s f5, f12, f23, f1, dyn # perform operation
fmsub.s f5, f12, f23, f1, rdn # perform operation
fmsub.s f5, f12, f23, f1, rmm # perform operation
fmsub.s f5, f12, f23, f1, rne # perform operation
fmsub.s f5, f12, f23, f1, rtz # perform operation
fmsub.s f5, f12, f23, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f5, f12, f23, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f5, f12, f23, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f5, f12, f23, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f5, f12, f23, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f5, f12, f23, f1 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0x7ef8654f)
li x18, 0x11b8e79ab8205563 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f31, 0(x2) # load 0x813d9ab0 from memory into f31
li x3, 0x9595626469009146 # load x3 with value 0x9595626469009146
sw x3, 0(x2) # store 0x9595626469009146 in memory
flw f7, 0(x2) # load 0x9595626469009146 from memory into f7
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f3, 0(x2) # load 0x7ef8654f from memory into f3
fmsub.s f18, f31, f7, f3, dyn # perform operation
fmsub.s f18, f31, f7, f3, rdn # perform operation
fmsub.s f18, f31, f7, f3, rmm # perform operation
fmsub.s f18, f31, f7, f3, rne # perform operation
fmsub.s f18, f31, f7, f3, rtz # perform operation
fmsub.s f18, f31, f7, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f18, f31, f7, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f18, f31, f7, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f18, f31, f7, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f18, f31, f7, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f18, f31, f7, f3 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0x813d9ab0)
li x21, 0x241cdf29e0cdca3e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f3, 0(x2) # load 0x813d9ab0 from memory into f3
li x3, 0xb975e1304b03d790 # load x3 with value 0xb975e1304b03d790
sw x3, 0(x2) # store 0xb975e1304b03d790 in memory
flw f4, 0(x2) # load 0xb975e1304b03d790 from memory into f4
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f12, 0(x2) # load 0x813d9ab0 from memory into f12
fmsub.s f21, f3, f4, f12, dyn # perform operation
fmsub.s f21, f3, f4, f12, rdn # perform operation
fmsub.s f21, f3, f4, f12, rmm # perform operation
fmsub.s f21, f3, f4, f12, rne # perform operation
fmsub.s f21, f3, f4, f12, rtz # perform operation
fmsub.s f21, f3, f4, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f21, f3, f4, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f21, f3, f4, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f21, f3, f4, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f21, f3, f4, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f21, f3, f4, f12 # perform operation

# Testcase cp_fd (Test destination fd = x0)
li x0, 0xf144c7257e4e28aa # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xee11daae1d8b1f52 # load x3 with value 0xee11daae1d8b1f52
sw x3, 0(x2) # store 0xee11daae1d8b1f52 in memory
flw f22, 0(x2) # load 0xee11daae1d8b1f52 from memory into f22
li x3, 0xdd13037cb766113c # load x3 with value 0xdd13037cb766113c
sw x3, 0(x2) # store 0xdd13037cb766113c in memory
flw f26, 0(x2) # load 0xdd13037cb766113c from memory into f26
li x3, 0xd0b59ee7f7a8faf0 # load x3 with value 0xd0b59ee7f7a8faf0
sw x3, 0(x2) # store 0xd0b59ee7f7a8faf0 in memory
flw f29, 0(x2) # load 0xd0b59ee7f7a8faf0 from memory into f29
fmsub.s f0, f22, f26, f29 # perform operation

# Testcase cp_fd (Test destination fd = x1)
li x1, 0x98aab4b5772695c2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x897265d0397bdc75 # load x3 with value 0x897265d0397bdc75
sw x3, 0(x2) # store 0x897265d0397bdc75 in memory
flw f4, 0(x2) # load 0x897265d0397bdc75 from memory into f4
li x3, 0x49551634ffe87b85 # load x3 with value 0x49551634ffe87b85
sw x3, 0(x2) # store 0x49551634ffe87b85 in memory
flw f21, 0(x2) # load 0x49551634ffe87b85 from memory into f21
li x3, 0x2e8b63cd3db26383 # load x3 with value 0x2e8b63cd3db26383
sw x3, 0(x2) # store 0x2e8b63cd3db26383 in memory
flw f24, 0(x2) # load 0x2e8b63cd3db26383 from memory into f24
fmsub.s f1, f4, f21, f24 # perform operation

# Testcase cp_fd (Test destination fd = x2)
li x2, 0xe90d5effb7a2aeea # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa28e9ddd199ad6b3 # load x3 with value 0xa28e9ddd199ad6b3
sw x3, 0(x2) # store 0xa28e9ddd199ad6b3 in memory
flw f11, 0(x2) # load 0xa28e9ddd199ad6b3 from memory into f11
li x3, 0xf774d05b5ab86697 # load x3 with value 0xf774d05b5ab86697
sw x3, 0(x2) # store 0xf774d05b5ab86697 in memory
flw f23, 0(x2) # load 0xf774d05b5ab86697 from memory into f23
li x3, 0xe3bf3d2ffffdfbb6 # load x3 with value 0xe3bf3d2ffffdfbb6
sw x3, 0(x2) # store 0xe3bf3d2ffffdfbb6 in memory
flw f19, 0(x2) # load 0xe3bf3d2ffffdfbb6 from memory into f19
fmsub.s f2, f11, f23, f19 # perform operation

# Testcase cp_fd (Test destination fd = x3)
li x3, 0xab3b795318834b3b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xe0077b29cd4d71b9 # load x3 with value 0xe0077b29cd4d71b9
sw x3, 0(x2) # store 0xe0077b29cd4d71b9 in memory
flw f22, 0(x2) # load 0xe0077b29cd4d71b9 from memory into f22
li x3, 0x1143ed8d34eb54b4 # load x3 with value 0x1143ed8d34eb54b4
sw x3, 0(x2) # store 0x1143ed8d34eb54b4 in memory
flw f7, 0(x2) # load 0x1143ed8d34eb54b4 from memory into f7
li x3, 0x47fdda1f3bb35a6 # load x3 with value 0x47fdda1f3bb35a6
sw x3, 0(x2) # store 0x47fdda1f3bb35a6 in memory
flw f27, 0(x2) # load 0x47fdda1f3bb35a6 from memory into f27
fmsub.s f3, f22, f7, f27 # perform operation

# Testcase cp_fd (Test destination fd = x4)
li x4, 0x63aa8ca90d7115a1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xfca26ce2669eb504 # load x3 with value 0xfca26ce2669eb504
sw x3, 0(x2) # store 0xfca26ce2669eb504 in memory
flw f24, 0(x2) # load 0xfca26ce2669eb504 from memory into f24
li x3, 0xf007dbe09a896390 # load x3 with value 0xf007dbe09a896390
sw x3, 0(x2) # store 0xf007dbe09a896390 in memory
flw f22, 0(x2) # load 0xf007dbe09a896390 from memory into f22
li x3, 0x9b687517228cc526 # load x3 with value 0x9b687517228cc526
sw x3, 0(x2) # store 0x9b687517228cc526 in memory
flw f4, 0(x2) # load 0x9b687517228cc526 from memory into f4
fmsub.s f4, f24, f22, f4 # perform operation

# Testcase cp_fd (Test destination fd = x5)
li x5, 0x4ac5876533f9d007 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xe3bd43dd83a10f56 # load x3 with value 0xe3bd43dd83a10f56
sw x3, 0(x2) # store 0xe3bd43dd83a10f56 in memory
flw f26, 0(x2) # load 0xe3bd43dd83a10f56 from memory into f26
li x3, 0x1cbd27430bec8a92 # load x3 with value 0x1cbd27430bec8a92
sw x3, 0(x2) # store 0x1cbd27430bec8a92 in memory
flw f28, 0(x2) # load 0x1cbd27430bec8a92 from memory into f28
li x3, 0x3240c08a0a7270b4 # load x3 with value 0x3240c08a0a7270b4
sw x3, 0(x2) # store 0x3240c08a0a7270b4 in memory
flw f13, 0(x2) # load 0x3240c08a0a7270b4 from memory into f13
fmsub.s f5, f26, f28, f13 # perform operation

# Testcase cp_fd (Test destination fd = x6)
li x6, 0x9e0bc73c0920aadf # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x4a45270972b4e7b3 # load x3 with value 0x4a45270972b4e7b3
sw x3, 0(x2) # store 0x4a45270972b4e7b3 in memory
flw f8, 0(x2) # load 0x4a45270972b4e7b3 from memory into f8
li x3, 0xf27513903a3200c4 # load x3 with value 0xf27513903a3200c4
sw x3, 0(x2) # store 0xf27513903a3200c4 in memory
flw f19, 0(x2) # load 0xf27513903a3200c4 from memory into f19
li x3, 0x3f2c19b5680a7f0b # load x3 with value 0x3f2c19b5680a7f0b
sw x3, 0(x2) # store 0x3f2c19b5680a7f0b in memory
flw f7, 0(x2) # load 0x3f2c19b5680a7f0b from memory into f7
fmsub.s f6, f8, f19, f7 # perform operation

# Testcase cp_fd (Test destination fd = x7)
li x7, 0x40a49cf6c4cd4daf # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xd756796379e30489 # load x3 with value 0xd756796379e30489
sw x3, 0(x2) # store 0xd756796379e30489 in memory
flw f20, 0(x2) # load 0xd756796379e30489 from memory into f20
li x3, 0xa6977a510152f2d3 # load x3 with value 0xa6977a510152f2d3
sw x3, 0(x2) # store 0xa6977a510152f2d3 in memory
flw f12, 0(x2) # load 0xa6977a510152f2d3 from memory into f12
li x3, 0x2f3f6d44b1e0eceb # load x3 with value 0x2f3f6d44b1e0eceb
sw x3, 0(x2) # store 0x2f3f6d44b1e0eceb in memory
flw f1, 0(x2) # load 0x2f3f6d44b1e0eceb from memory into f1
fmsub.s f7, f20, f12, f1 # perform operation

# Testcase cp_fd (Test destination fd = x8)
li x8, 0x67b9cee3b1a9a69a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x46847ee966501ea9 # load x3 with value 0x46847ee966501ea9
sw x3, 0(x2) # store 0x46847ee966501ea9 in memory
flw f10, 0(x2) # load 0x46847ee966501ea9 from memory into f10
li x3, 0x2b8c16f2bc62a68b # load x3 with value 0x2b8c16f2bc62a68b
sw x3, 0(x2) # store 0x2b8c16f2bc62a68b in memory
flw f27, 0(x2) # load 0x2b8c16f2bc62a68b from memory into f27
li x3, 0xc9915264da259600 # load x3 with value 0xc9915264da259600
sw x3, 0(x2) # store 0xc9915264da259600 in memory
flw f22, 0(x2) # load 0xc9915264da259600 from memory into f22
fmsub.s f8, f10, f27, f22 # perform operation

# Testcase cp_fd (Test destination fd = x9)
li x9, 0x436809f81f0de543 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xe6167cbd63b2912d # load x3 with value 0xe6167cbd63b2912d
sw x3, 0(x2) # store 0xe6167cbd63b2912d in memory
flw f3, 0(x2) # load 0xe6167cbd63b2912d from memory into f3
li x3, 0xc44a2a2b70aff3a9 # load x3 with value 0xc44a2a2b70aff3a9
sw x3, 0(x2) # store 0xc44a2a2b70aff3a9 in memory
flw f5, 0(x2) # load 0xc44a2a2b70aff3a9 from memory into f5
li x3, 0xdfc564094142deb5 # load x3 with value 0xdfc564094142deb5
sw x3, 0(x2) # store 0xdfc564094142deb5 in memory
flw f12, 0(x2) # load 0xdfc564094142deb5 from memory into f12
fmsub.s f9, f3, f5, f12 # perform operation

# Testcase cp_fd (Test destination fd = x10)
li x10, 0x1acb01447d4ecc95 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x37a34fc98047a67f # load x3 with value 0x37a34fc98047a67f
sw x3, 0(x2) # store 0x37a34fc98047a67f in memory
flw f13, 0(x2) # load 0x37a34fc98047a67f from memory into f13
li x3, 0xac6070cdd2639403 # load x3 with value 0xac6070cdd2639403
sw x3, 0(x2) # store 0xac6070cdd2639403 in memory
flw f29, 0(x2) # load 0xac6070cdd2639403 from memory into f29
li x3, 0xdab5c6057ea7a993 # load x3 with value 0xdab5c6057ea7a993
sw x3, 0(x2) # store 0xdab5c6057ea7a993 in memory
flw f21, 0(x2) # load 0xdab5c6057ea7a993 from memory into f21
fmsub.s f10, f13, f29, f21 # perform operation

# Testcase cp_fd (Test destination fd = x11)
li x11, 0xd3cf8dea0f939c41 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x13e29d87f4ef090a # load x3 with value 0x13e29d87f4ef090a
sw x3, 0(x2) # store 0x13e29d87f4ef090a in memory
flw f16, 0(x2) # load 0x13e29d87f4ef090a from memory into f16
li x3, 0x283604aac189def3 # load x3 with value 0x283604aac189def3
sw x3, 0(x2) # store 0x283604aac189def3 in memory
flw f29, 0(x2) # load 0x283604aac189def3 from memory into f29
li x3, 0xdb53b802e23773ab # load x3 with value 0xdb53b802e23773ab
sw x3, 0(x2) # store 0xdb53b802e23773ab in memory
flw f14, 0(x2) # load 0xdb53b802e23773ab from memory into f14
fmsub.s f11, f16, f29, f14 # perform operation

# Testcase cp_fd (Test destination fd = x12)
li x12, 0xa459d8e4d22b2e90 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x5c21b77dfd34b7a7 # load x3 with value 0x5c21b77dfd34b7a7
sw x3, 0(x2) # store 0x5c21b77dfd34b7a7 in memory
flw f24, 0(x2) # load 0x5c21b77dfd34b7a7 from memory into f24
li x3, 0x1c6bbd2a79cf3dca # load x3 with value 0x1c6bbd2a79cf3dca
sw x3, 0(x2) # store 0x1c6bbd2a79cf3dca in memory
flw f27, 0(x2) # load 0x1c6bbd2a79cf3dca from memory into f27
li x3, 0x834de8b7211abf1a # load x3 with value 0x834de8b7211abf1a
sw x3, 0(x2) # store 0x834de8b7211abf1a in memory
flw f9, 0(x2) # load 0x834de8b7211abf1a from memory into f9
fmsub.s f12, f24, f27, f9 # perform operation

# Testcase cp_fd (Test destination fd = x13)
li x13, 0x7c8d6273ff7734cb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3ddffdf383baeee8 # load x3 with value 0x3ddffdf383baeee8
sw x3, 0(x2) # store 0x3ddffdf383baeee8 in memory
flw f3, 0(x2) # load 0x3ddffdf383baeee8 from memory into f3
li x3, 0xa579cd970eac3936 # load x3 with value 0xa579cd970eac3936
sw x3, 0(x2) # store 0xa579cd970eac3936 in memory
flw f16, 0(x2) # load 0xa579cd970eac3936 from memory into f16
li x3, 0x54f07e56829b6231 # load x3 with value 0x54f07e56829b6231
sw x3, 0(x2) # store 0x54f07e56829b6231 in memory
flw f22, 0(x2) # load 0x54f07e56829b6231 from memory into f22
fmsub.s f13, f3, f16, f22 # perform operation

# Testcase cp_fd (Test destination fd = x14)
li x14, 0xaa07f114c447ca29 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xcbd9eee61415a676 # load x3 with value 0xcbd9eee61415a676
sw x3, 0(x2) # store 0xcbd9eee61415a676 in memory
flw f28, 0(x2) # load 0xcbd9eee61415a676 from memory into f28
li x3, 0x767d79aba101ffe1 # load x3 with value 0x767d79aba101ffe1
sw x3, 0(x2) # store 0x767d79aba101ffe1 in memory
flw f23, 0(x2) # load 0x767d79aba101ffe1 from memory into f23
li x3, 0xa3d0debc3282e217 # load x3 with value 0xa3d0debc3282e217
sw x3, 0(x2) # store 0xa3d0debc3282e217 in memory
flw f29, 0(x2) # load 0xa3d0debc3282e217 from memory into f29
fmsub.s f14, f28, f23, f29 # perform operation

# Testcase cp_fd (Test destination fd = x15)
li x15, 0xce52b9095b24de99 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x9bab7c66ef9ac90c # load x3 with value 0x9bab7c66ef9ac90c
sw x3, 0(x2) # store 0x9bab7c66ef9ac90c in memory
flw f9, 0(x2) # load 0x9bab7c66ef9ac90c from memory into f9
li x3, 0xf7f2c213c86bf551 # load x3 with value 0xf7f2c213c86bf551
sw x3, 0(x2) # store 0xf7f2c213c86bf551 in memory
flw f13, 0(x2) # load 0xf7f2c213c86bf551 from memory into f13
li x3, 0x3d588f4bdfea42db # load x3 with value 0x3d588f4bdfea42db
sw x3, 0(x2) # store 0x3d588f4bdfea42db in memory
flw f16, 0(x2) # load 0x3d588f4bdfea42db from memory into f16
fmsub.s f15, f9, f13, f16 # perform operation

# Testcase cp_fd (Test destination fd = x16)
li x16, 0xdb20694854a1724b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x1e6d497117af277d # load x3 with value 0x1e6d497117af277d
sw x3, 0(x2) # store 0x1e6d497117af277d in memory
flw f2, 0(x2) # load 0x1e6d497117af277d from memory into f2
li x3, 0x3aea134bd6d8f637 # load x3 with value 0x3aea134bd6d8f637
sw x3, 0(x2) # store 0x3aea134bd6d8f637 in memory
flw f29, 0(x2) # load 0x3aea134bd6d8f637 from memory into f29
li x3, 0xe3b779aee7b972cc # load x3 with value 0xe3b779aee7b972cc
sw x3, 0(x2) # store 0xe3b779aee7b972cc in memory
flw f16, 0(x2) # load 0xe3b779aee7b972cc from memory into f16
fmsub.s f16, f2, f29, f16 # perform operation

# Testcase cp_fd (Test destination fd = x17)
li x17, 0xe91ff8fddd76f07c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x9225802c7a671e96 # load x3 with value 0x9225802c7a671e96
sw x3, 0(x2) # store 0x9225802c7a671e96 in memory
flw f30, 0(x2) # load 0x9225802c7a671e96 from memory into f30
li x3, 0xd8568a0d572b2309 # load x3 with value 0xd8568a0d572b2309
sw x3, 0(x2) # store 0xd8568a0d572b2309 in memory
flw f5, 0(x2) # load 0xd8568a0d572b2309 from memory into f5
li x3, 0x3e3945fc1a2142e4 # load x3 with value 0x3e3945fc1a2142e4
sw x3, 0(x2) # store 0x3e3945fc1a2142e4 in memory
flw f6, 0(x2) # load 0x3e3945fc1a2142e4 from memory into f6
fmsub.s f17, f30, f5, f6 # perform operation

# Testcase cp_fd (Test destination fd = x18)
li x18, 0x9cfa3c32bcb14527 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x8d8b60e4bace9e86 # load x3 with value 0x8d8b60e4bace9e86
sw x3, 0(x2) # store 0x8d8b60e4bace9e86 in memory
flw f8, 0(x2) # load 0x8d8b60e4bace9e86 from memory into f8
li x3, 0x4e979d6e5be4b069 # load x3 with value 0x4e979d6e5be4b069
sw x3, 0(x2) # store 0x4e979d6e5be4b069 in memory
flw f12, 0(x2) # load 0x4e979d6e5be4b069 from memory into f12
li x3, 0x2cd3be49846bfff0 # load x3 with value 0x2cd3be49846bfff0
sw x3, 0(x2) # store 0x2cd3be49846bfff0 in memory
flw f31, 0(x2) # load 0x2cd3be49846bfff0 from memory into f31
fmsub.s f18, f8, f12, f31 # perform operation

# Testcase cp_fd (Test destination fd = x19)
li x19, 0x1470a63471ce9eaa # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x986eb5ce6185fff5 # load x3 with value 0x986eb5ce6185fff5
sw x3, 0(x2) # store 0x986eb5ce6185fff5 in memory
flw f9, 0(x2) # load 0x986eb5ce6185fff5 from memory into f9
li x3, 0x2f0476495a4edafa # load x3 with value 0x2f0476495a4edafa
sw x3, 0(x2) # store 0x2f0476495a4edafa in memory
flw f25, 0(x2) # load 0x2f0476495a4edafa from memory into f25
li x3, 0xe19b38563344ae46 # load x3 with value 0xe19b38563344ae46
sw x3, 0(x2) # store 0xe19b38563344ae46 in memory
flw f21, 0(x2) # load 0xe19b38563344ae46 from memory into f21
fmsub.s f19, f9, f25, f21 # perform operation

# Testcase cp_fd (Test destination fd = x20)
li x20, 0xa74251482cc679b1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x1629a78d113c725d # load x3 with value 0x1629a78d113c725d
sw x3, 0(x2) # store 0x1629a78d113c725d in memory
flw f30, 0(x2) # load 0x1629a78d113c725d from memory into f30
li x3, 0xf9f445ca9575085 # load x3 with value 0xf9f445ca9575085
sw x3, 0(x2) # store 0xf9f445ca9575085 in memory
flw f14, 0(x2) # load 0xf9f445ca9575085 from memory into f14
li x3, 0x4337bf9b0ed8ffed # load x3 with value 0x4337bf9b0ed8ffed
sw x3, 0(x2) # store 0x4337bf9b0ed8ffed in memory
flw f15, 0(x2) # load 0x4337bf9b0ed8ffed from memory into f15
fmsub.s f20, f30, f14, f15 # perform operation

# Testcase cp_fd (Test destination fd = x21)
li x21, 0x669a7300b3fe131a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc41ec6652bd29b0f # load x3 with value 0xc41ec6652bd29b0f
sw x3, 0(x2) # store 0xc41ec6652bd29b0f in memory
flw f2, 0(x2) # load 0xc41ec6652bd29b0f from memory into f2
li x3, 0x478d4ab6904f6eff # load x3 with value 0x478d4ab6904f6eff
sw x3, 0(x2) # store 0x478d4ab6904f6eff in memory
flw f20, 0(x2) # load 0x478d4ab6904f6eff from memory into f20
li x3, 0x2b07e9153960a8bc # load x3 with value 0x2b07e9153960a8bc
sw x3, 0(x2) # store 0x2b07e9153960a8bc in memory
flw f24, 0(x2) # load 0x2b07e9153960a8bc from memory into f24
fmsub.s f21, f2, f20, f24 # perform operation

# Testcase cp_fd (Test destination fd = x22)
li x22, 0xf1ab754bc2c56472 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xcec2c247b8ce0d47 # load x3 with value 0xcec2c247b8ce0d47
sw x3, 0(x2) # store 0xcec2c247b8ce0d47 in memory
flw f16, 0(x2) # load 0xcec2c247b8ce0d47 from memory into f16
li x3, 0x46b77610dd5ddb61 # load x3 with value 0x46b77610dd5ddb61
sw x3, 0(x2) # store 0x46b77610dd5ddb61 in memory
flw f9, 0(x2) # load 0x46b77610dd5ddb61 from memory into f9
li x3, 0x51a13274602a1564 # load x3 with value 0x51a13274602a1564
sw x3, 0(x2) # store 0x51a13274602a1564 in memory
flw f29, 0(x2) # load 0x51a13274602a1564 from memory into f29
fmsub.s f22, f16, f9, f29 # perform operation

# Testcase cp_fd (Test destination fd = x23)
li x23, 0x69cef4d54997d16b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xdd3fae0f876d62c1 # load x3 with value 0xdd3fae0f876d62c1
sw x3, 0(x2) # store 0xdd3fae0f876d62c1 in memory
flw f18, 0(x2) # load 0xdd3fae0f876d62c1 from memory into f18
li x3, 0x5bd28721af448394 # load x3 with value 0x5bd28721af448394
sw x3, 0(x2) # store 0x5bd28721af448394 in memory
flw f9, 0(x2) # load 0x5bd28721af448394 from memory into f9
li x3, 0xa4ef8f1265cef055 # load x3 with value 0xa4ef8f1265cef055
sw x3, 0(x2) # store 0xa4ef8f1265cef055 in memory
flw f23, 0(x2) # load 0xa4ef8f1265cef055 from memory into f23
fmsub.s f23, f18, f9, f23 # perform operation

# Testcase cp_fd (Test destination fd = x24)
li x24, 0x7ba56f59f56d836f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x60c1c552ca9ecfcf # load x3 with value 0x60c1c552ca9ecfcf
sw x3, 0(x2) # store 0x60c1c552ca9ecfcf in memory
flw f27, 0(x2) # load 0x60c1c552ca9ecfcf from memory into f27
li x3, 0x3411191c41d2b63e # load x3 with value 0x3411191c41d2b63e
sw x3, 0(x2) # store 0x3411191c41d2b63e in memory
flw f17, 0(x2) # load 0x3411191c41d2b63e from memory into f17
li x3, 0xcc4e9468f0cad304 # load x3 with value 0xcc4e9468f0cad304
sw x3, 0(x2) # store 0xcc4e9468f0cad304 in memory
flw f25, 0(x2) # load 0xcc4e9468f0cad304 from memory into f25
fmsub.s f24, f27, f17, f25 # perform operation

# Testcase cp_fd (Test destination fd = x25)
li x25, 0x74e079c5da4a43b2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xdaa751d06e622f7e # load x3 with value 0xdaa751d06e622f7e
sw x3, 0(x2) # store 0xdaa751d06e622f7e in memory
flw f19, 0(x2) # load 0xdaa751d06e622f7e from memory into f19
li x3, 0xd2616ca32749d303 # load x3 with value 0xd2616ca32749d303
sw x3, 0(x2) # store 0xd2616ca32749d303 in memory
flw f3, 0(x2) # load 0xd2616ca32749d303 from memory into f3
li x3, 0xbd9223bab6a409da # load x3 with value 0xbd9223bab6a409da
sw x3, 0(x2) # store 0xbd9223bab6a409da in memory
flw f29, 0(x2) # load 0xbd9223bab6a409da from memory into f29
fmsub.s f25, f19, f3, f29 # perform operation

# Testcase cp_fd (Test destination fd = x26)
li x26, 0x8e278235856298dd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x2b619ce4957c1398 # load x3 with value 0x2b619ce4957c1398
sw x3, 0(x2) # store 0x2b619ce4957c1398 in memory
flw f7, 0(x2) # load 0x2b619ce4957c1398 from memory into f7
li x3, 0x3cfcbc8a837f3388 # load x3 with value 0x3cfcbc8a837f3388
sw x3, 0(x2) # store 0x3cfcbc8a837f3388 in memory
flw f6, 0(x2) # load 0x3cfcbc8a837f3388 from memory into f6
li x3, 0x3a8dfa055bd3ca41 # load x3 with value 0x3a8dfa055bd3ca41
sw x3, 0(x2) # store 0x3a8dfa055bd3ca41 in memory
flw f23, 0(x2) # load 0x3a8dfa055bd3ca41 from memory into f23
fmsub.s f26, f7, f6, f23 # perform operation

# Testcase cp_fd (Test destination fd = x27)
li x27, 0x3580d3c1b940fdc6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x4c4b435f38f81036 # load x3 with value 0x4c4b435f38f81036
sw x3, 0(x2) # store 0x4c4b435f38f81036 in memory
flw f17, 0(x2) # load 0x4c4b435f38f81036 from memory into f17
li x3, 0xfb9f16b0e32f06a2 # load x3 with value 0xfb9f16b0e32f06a2
sw x3, 0(x2) # store 0xfb9f16b0e32f06a2 in memory
flw f8, 0(x2) # load 0xfb9f16b0e32f06a2 from memory into f8
li x3, 0xa02e8e1d8320363c # load x3 with value 0xa02e8e1d8320363c
sw x3, 0(x2) # store 0xa02e8e1d8320363c in memory
flw f23, 0(x2) # load 0xa02e8e1d8320363c from memory into f23
fmsub.s f27, f17, f8, f23 # perform operation

# Testcase cp_fd (Test destination fd = x28)
li x28, 0xa22d59f41d9a66b0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xd5694f65e426fadc # load x3 with value 0xd5694f65e426fadc
sw x3, 0(x2) # store 0xd5694f65e426fadc in memory
flw f26, 0(x2) # load 0xd5694f65e426fadc from memory into f26
li x3, 0x807e4e0382aa6401 # load x3 with value 0x807e4e0382aa6401
sw x3, 0(x2) # store 0x807e4e0382aa6401 in memory
flw f25, 0(x2) # load 0x807e4e0382aa6401 from memory into f25
li x3, 0xd95dad39e8f01474 # load x3 with value 0xd95dad39e8f01474
sw x3, 0(x2) # store 0xd95dad39e8f01474 in memory
flw f21, 0(x2) # load 0xd95dad39e8f01474 from memory into f21
fmsub.s f28, f26, f25, f21 # perform operation

# Testcase cp_fd (Test destination fd = x29)
li x29, 0x9fae2b989099006f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xcc30a6a2141f86cb # load x3 with value 0xcc30a6a2141f86cb
sw x3, 0(x2) # store 0xcc30a6a2141f86cb in memory
flw f8, 0(x2) # load 0xcc30a6a2141f86cb from memory into f8
li x3, 0xc3393f2957c94e2c # load x3 with value 0xc3393f2957c94e2c
sw x3, 0(x2) # store 0xc3393f2957c94e2c in memory
flw f18, 0(x2) # load 0xc3393f2957c94e2c from memory into f18
li x3, 0xa4481434f8a57d3d # load x3 with value 0xa4481434f8a57d3d
sw x3, 0(x2) # store 0xa4481434f8a57d3d in memory
flw f13, 0(x2) # load 0xa4481434f8a57d3d from memory into f13
fmsub.s f29, f8, f18, f13 # perform operation

# Testcase cp_fd (Test destination fd = x30)
li x30, 0x1eb4675ea9dce0c1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x67a011798efc8493 # load x3 with value 0x67a011798efc8493
sw x3, 0(x2) # store 0x67a011798efc8493 in memory
flw f17, 0(x2) # load 0x67a011798efc8493 from memory into f17
li x3, 0x70b355a53592ef1f # load x3 with value 0x70b355a53592ef1f
sw x3, 0(x2) # store 0x70b355a53592ef1f in memory
flw f11, 0(x2) # load 0x70b355a53592ef1f from memory into f11
li x3, 0x92ef944fa15582ed # load x3 with value 0x92ef944fa15582ed
sw x3, 0(x2) # store 0x92ef944fa15582ed in memory
flw f5, 0(x2) # load 0x92ef944fa15582ed from memory into f5
fmsub.s f30, f17, f11, f5 # perform operation

# Testcase cp_fd (Test destination fd = x31)
li x31, 0xa1556089b7522be9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x981ec1e4c304a18d # load x3 with value 0x981ec1e4c304a18d
sw x3, 0(x2) # store 0x981ec1e4c304a18d in memory
flw f9, 0(x2) # load 0x981ec1e4c304a18d from memory into f9
li x3, 0x1207f43e5046d722 # load x3 with value 0x1207f43e5046d722
sw x3, 0(x2) # store 0x1207f43e5046d722 in memory
flw f27, 0(x2) # load 0x1207f43e5046d722 from memory into f27
li x3, 0x7ea59f89b67ddf7d # load x3 with value 0x7ea59f89b67ddf7d
sw x3, 0(x2) # store 0x7ea59f89b67ddf7d in memory
flw f3, 0(x2) # load 0x7ea59f89b67ddf7d from memory into f3
fmsub.s f31, f9, f27, f3 # perform operation

# Testcase cp_fs1 (Test source fs1 = f0)
li x5, 0x8f092bfb89563d20 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3c030202f05e6bb8 # load x3 with value 0x3c030202f05e6bb8
sw x3, 0(x2) # store 0x3c030202f05e6bb8 in memory
flw f0, 0(x2) # load 0x3c030202f05e6bb8 from memory into f0
li x3, 0xddb264f5a9cd02a0 # load x3 with value 0xddb264f5a9cd02a0
sw x3, 0(x2) # store 0xddb264f5a9cd02a0 in memory
flw f9, 0(x2) # load 0xddb264f5a9cd02a0 from memory into f9
li x3, 0xf9d866add1333d8f # load x3 with value 0xf9d866add1333d8f
sw x3, 0(x2) # store 0xf9d866add1333d8f in memory
flw f12, 0(x2) # load 0xf9d866add1333d8f from memory into f12
fmsub.s f5, f0, f9, f12 # perform operation

# Testcase cp_fs1 (Test source fs1 = f1)
li x15, 0x8a15323f7212af15 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xf435435ad828e09d # load x3 with value 0xf435435ad828e09d
sw x3, 0(x2) # store 0xf435435ad828e09d in memory
flw f1, 0(x2) # load 0xf435435ad828e09d from memory into f1
li x3, 0xfa9fbdc67c2a8a52 # load x3 with value 0xfa9fbdc67c2a8a52
sw x3, 0(x2) # store 0xfa9fbdc67c2a8a52 in memory
flw f10, 0(x2) # load 0xfa9fbdc67c2a8a52 from memory into f10
li x3, 0xeb8c585c4893e7e7 # load x3 with value 0xeb8c585c4893e7e7
sw x3, 0(x2) # store 0xeb8c585c4893e7e7 in memory
flw f24, 0(x2) # load 0xeb8c585c4893e7e7 from memory into f24
fmsub.s f15, f1, f10, f24 # perform operation

# Testcase cp_fs1 (Test source fs1 = f2)
li x5, 0xde5e0f2ad74c9dc2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x41e0b8c4b5a11943 # load x3 with value 0x41e0b8c4b5a11943
sw x3, 0(x2) # store 0x41e0b8c4b5a11943 in memory
flw f2, 0(x2) # load 0x41e0b8c4b5a11943 from memory into f2
li x3, 0x82bc196eaf425a3e # load x3 with value 0x82bc196eaf425a3e
sw x3, 0(x2) # store 0x82bc196eaf425a3e in memory
flw f19, 0(x2) # load 0x82bc196eaf425a3e from memory into f19
li x3, 0xe805225f290e8169 # load x3 with value 0xe805225f290e8169
sw x3, 0(x2) # store 0xe805225f290e8169 in memory
flw f22, 0(x2) # load 0xe805225f290e8169 from memory into f22
fmsub.s f5, f2, f19, f22 # perform operation

# Testcase cp_fs1 (Test source fs1 = f3)
li x18, 0xf0bf56458cf33369 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x1d1b71e232936180 # load x3 with value 0x1d1b71e232936180
sw x3, 0(x2) # store 0x1d1b71e232936180 in memory
flw f3, 0(x2) # load 0x1d1b71e232936180 from memory into f3
li x3, 0x14d221052ac2e58c # load x3 with value 0x14d221052ac2e58c
sw x3, 0(x2) # store 0x14d221052ac2e58c in memory
flw f31, 0(x2) # load 0x14d221052ac2e58c from memory into f31
li x3, 0xd91c5d9bf1bdbad5 # load x3 with value 0xd91c5d9bf1bdbad5
sw x3, 0(x2) # store 0xd91c5d9bf1bdbad5 in memory
flw f10, 0(x2) # load 0xd91c5d9bf1bdbad5 from memory into f10
fmsub.s f18, f3, f31, f10 # perform operation

# Testcase cp_fs1 (Test source fs1 = f4)
li x1, 0xcab28662a3a1151c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x407e07b6cacdd157 # load x3 with value 0x407e07b6cacdd157
sw x3, 0(x2) # store 0x407e07b6cacdd157 in memory
flw f4, 0(x2) # load 0x407e07b6cacdd157 from memory into f4
li x3, 0xc0eb9828a51379d3 # load x3 with value 0xc0eb9828a51379d3
sw x3, 0(x2) # store 0xc0eb9828a51379d3 in memory
flw f25, 0(x2) # load 0xc0eb9828a51379d3 from memory into f25
li x3, 0x6bce279df777fc6 # load x3 with value 0x6bce279df777fc6
sw x3, 0(x2) # store 0x6bce279df777fc6 in memory
flw f16, 0(x2) # load 0x6bce279df777fc6 from memory into f16
fmsub.s f1, f4, f25, f16 # perform operation

# Testcase cp_fs1 (Test source fs1 = f5)
li x2, 0x6e77d443d3508361 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x59f0c95acc8b8d46 # load x3 with value 0x59f0c95acc8b8d46
sw x3, 0(x2) # store 0x59f0c95acc8b8d46 in memory
flw f5, 0(x2) # load 0x59f0c95acc8b8d46 from memory into f5
li x3, 0x5e1cfd74e8015431 # load x3 with value 0x5e1cfd74e8015431
sw x3, 0(x2) # store 0x5e1cfd74e8015431 in memory
flw f28, 0(x2) # load 0x5e1cfd74e8015431 from memory into f28
li x3, 0x6d6bb61927f18453 # load x3 with value 0x6d6bb61927f18453
sw x3, 0(x2) # store 0x6d6bb61927f18453 in memory
flw f25, 0(x2) # load 0x6d6bb61927f18453 from memory into f25
fmsub.s f2, f5, f28, f25 # perform operation

# Testcase cp_fs1 (Test source fs1 = f6)
li x25, 0xdd5a76a314e97bc6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x2b5dc5f0e09f7a9a # load x3 with value 0x2b5dc5f0e09f7a9a
sw x3, 0(x2) # store 0x2b5dc5f0e09f7a9a in memory
flw f6, 0(x2) # load 0x2b5dc5f0e09f7a9a from memory into f6
li x3, 0xd535d429b58311ee # load x3 with value 0xd535d429b58311ee
sw x3, 0(x2) # store 0xd535d429b58311ee in memory
flw f16, 0(x2) # load 0xd535d429b58311ee from memory into f16
li x3, 0x70f26c7a06209522 # load x3 with value 0x70f26c7a06209522
sw x3, 0(x2) # store 0x70f26c7a06209522 in memory
flw f11, 0(x2) # load 0x70f26c7a06209522 from memory into f11
fmsub.s f25, f6, f16, f11 # perform operation

# Testcase cp_fs1 (Test source fs1 = f7)
li x2, 0xba2288c29a968efb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xe94b8d48d329ee99 # load x3 with value 0xe94b8d48d329ee99
sw x3, 0(x2) # store 0xe94b8d48d329ee99 in memory
flw f7, 0(x2) # load 0xe94b8d48d329ee99 from memory into f7
li x3, 0x9a4345d525f053a9 # load x3 with value 0x9a4345d525f053a9
sw x3, 0(x2) # store 0x9a4345d525f053a9 in memory
flw f13, 0(x2) # load 0x9a4345d525f053a9 from memory into f13
li x3, 0x59ffcdf906977fa7 # load x3 with value 0x59ffcdf906977fa7
sw x3, 0(x2) # store 0x59ffcdf906977fa7 in memory
flw f27, 0(x2) # load 0x59ffcdf906977fa7 from memory into f27
fmsub.s f2, f7, f13, f27 # perform operation

# Testcase cp_fs1 (Test source fs1 = f8)
li x11, 0x80e87a52a6e204c0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x39271a9df13da049 # load x3 with value 0x39271a9df13da049
sw x3, 0(x2) # store 0x39271a9df13da049 in memory
flw f8, 0(x2) # load 0x39271a9df13da049 from memory into f8
li x3, 0x7e83620b72ba8a17 # load x3 with value 0x7e83620b72ba8a17
sw x3, 0(x2) # store 0x7e83620b72ba8a17 in memory
flw f22, 0(x2) # load 0x7e83620b72ba8a17 from memory into f22
li x3, 0xe261f01fac23e92 # load x3 with value 0xe261f01fac23e92
sw x3, 0(x2) # store 0xe261f01fac23e92 in memory
flw f9, 0(x2) # load 0xe261f01fac23e92 from memory into f9
fmsub.s f11, f8, f22, f9 # perform operation

# Testcase cp_fs1 (Test source fs1 = f9)
li x20, 0x5aba6c567e75f7a9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa64cfbcd4a4f4c4f # load x3 with value 0xa64cfbcd4a4f4c4f
sw x3, 0(x2) # store 0xa64cfbcd4a4f4c4f in memory
flw f9, 0(x2) # load 0xa64cfbcd4a4f4c4f from memory into f9
li x3, 0x63b459bd6d40be45 # load x3 with value 0x63b459bd6d40be45
sw x3, 0(x2) # store 0x63b459bd6d40be45 in memory
flw f2, 0(x2) # load 0x63b459bd6d40be45 from memory into f2
li x3, 0x7ea09d208ba9c41 # load x3 with value 0x7ea09d208ba9c41
sw x3, 0(x2) # store 0x7ea09d208ba9c41 in memory
flw f31, 0(x2) # load 0x7ea09d208ba9c41 from memory into f31
fmsub.s f20, f9, f2, f31 # perform operation

# Testcase cp_fs1 (Test source fs1 = f10)
li x13, 0x42ec73569d79db15 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xaf26390e63f68fea # load x3 with value 0xaf26390e63f68fea
sw x3, 0(x2) # store 0xaf26390e63f68fea in memory
flw f10, 0(x2) # load 0xaf26390e63f68fea from memory into f10
li x3, 0x319c5cd06f0ce8be # load x3 with value 0x319c5cd06f0ce8be
sw x3, 0(x2) # store 0x319c5cd06f0ce8be in memory
flw f5, 0(x2) # load 0x319c5cd06f0ce8be from memory into f5
li x3, 0xf3e090424f176230 # load x3 with value 0xf3e090424f176230
sw x3, 0(x2) # store 0xf3e090424f176230 in memory
flw f25, 0(x2) # load 0xf3e090424f176230 from memory into f25
fmsub.s f13, f10, f5, f25 # perform operation

# Testcase cp_fs1 (Test source fs1 = f11)
li x26, 0xc518f33bd42a1d1b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x6699949cc5757696 # load x3 with value 0x6699949cc5757696
sw x3, 0(x2) # store 0x6699949cc5757696 in memory
flw f11, 0(x2) # load 0x6699949cc5757696 from memory into f11
li x3, 0x7b115ec0ce996c70 # load x3 with value 0x7b115ec0ce996c70
sw x3, 0(x2) # store 0x7b115ec0ce996c70 in memory
flw f7, 0(x2) # load 0x7b115ec0ce996c70 from memory into f7
li x3, 0xc52969b68f607b92 # load x3 with value 0xc52969b68f607b92
sw x3, 0(x2) # store 0xc52969b68f607b92 in memory
flw f3, 0(x2) # load 0xc52969b68f607b92 from memory into f3
fmsub.s f26, f11, f7, f3 # perform operation

# Testcase cp_fs1 (Test source fs1 = f12)
li x9, 0x6bac7d6cb78971ce # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7c32ed20108e109d # load x3 with value 0x7c32ed20108e109d
sw x3, 0(x2) # store 0x7c32ed20108e109d in memory
flw f12, 0(x2) # load 0x7c32ed20108e109d from memory into f12
li x3, 0x78fa55033ee61704 # load x3 with value 0x78fa55033ee61704
sw x3, 0(x2) # store 0x78fa55033ee61704 in memory
flw f3, 0(x2) # load 0x78fa55033ee61704 from memory into f3
li x3, 0xbe242693cea59872 # load x3 with value 0xbe242693cea59872
sw x3, 0(x2) # store 0xbe242693cea59872 in memory
flw f31, 0(x2) # load 0xbe242693cea59872 from memory into f31
fmsub.s f9, f12, f3, f31 # perform operation

# Testcase cp_fs1 (Test source fs1 = f13)
li x30, 0xf8087ea9bd547c30 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xde3c3022aed8f5ec # load x3 with value 0xde3c3022aed8f5ec
sw x3, 0(x2) # store 0xde3c3022aed8f5ec in memory
flw f13, 0(x2) # load 0xde3c3022aed8f5ec from memory into f13
li x3, 0xc151853cb29da430 # load x3 with value 0xc151853cb29da430
sw x3, 0(x2) # store 0xc151853cb29da430 in memory
flw f14, 0(x2) # load 0xc151853cb29da430 from memory into f14
li x3, 0xc8bfb04b1555d1af # load x3 with value 0xc8bfb04b1555d1af
sw x3, 0(x2) # store 0xc8bfb04b1555d1af in memory
flw f13, 0(x2) # load 0xc8bfb04b1555d1af from memory into f13
fmsub.s f30, f13, f14, f13 # perform operation

# Testcase cp_fs1 (Test source fs1 = f14)
li x12, 0xda2c01b08aa69dc6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x8f896d29560fd3e5 # load x3 with value 0x8f896d29560fd3e5
sw x3, 0(x2) # store 0x8f896d29560fd3e5 in memory
flw f14, 0(x2) # load 0x8f896d29560fd3e5 from memory into f14
li x3, 0x53a83cc8d6407149 # load x3 with value 0x53a83cc8d6407149
sw x3, 0(x2) # store 0x53a83cc8d6407149 in memory
flw f8, 0(x2) # load 0x53a83cc8d6407149 from memory into f8
li x3, 0x3ee4a0c3da404a35 # load x3 with value 0x3ee4a0c3da404a35
sw x3, 0(x2) # store 0x3ee4a0c3da404a35 in memory
flw f3, 0(x2) # load 0x3ee4a0c3da404a35 from memory into f3
fmsub.s f12, f14, f8, f3 # perform operation

# Testcase cp_fs1 (Test source fs1 = f15)
li x24, 0x333fb225d1da14c4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7d2e220586517d62 # load x3 with value 0x7d2e220586517d62
sw x3, 0(x2) # store 0x7d2e220586517d62 in memory
flw f15, 0(x2) # load 0x7d2e220586517d62 from memory into f15
li x3, 0xb357c7fb7cbb5e85 # load x3 with value 0xb357c7fb7cbb5e85
sw x3, 0(x2) # store 0xb357c7fb7cbb5e85 in memory
flw f26, 0(x2) # load 0xb357c7fb7cbb5e85 from memory into f26
li x3, 0x4e0c9c343c60a7f5 # load x3 with value 0x4e0c9c343c60a7f5
sw x3, 0(x2) # store 0x4e0c9c343c60a7f5 in memory
flw f1, 0(x2) # load 0x4e0c9c343c60a7f5 from memory into f1
fmsub.s f24, f15, f26, f1 # perform operation

# Testcase cp_fs1 (Test source fs1 = f16)
li x11, 0xc59f111c93fdf7ec # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa594aa015f894582 # load x3 with value 0xa594aa015f894582
sw x3, 0(x2) # store 0xa594aa015f894582 in memory
flw f16, 0(x2) # load 0xa594aa015f894582 from memory into f16
li x3, 0x1e6a72c57e13bdc # load x3 with value 0x1e6a72c57e13bdc
sw x3, 0(x2) # store 0x1e6a72c57e13bdc in memory
flw f24, 0(x2) # load 0x1e6a72c57e13bdc from memory into f24
li x3, 0x4fc76371fdff2c7d # load x3 with value 0x4fc76371fdff2c7d
sw x3, 0(x2) # store 0x4fc76371fdff2c7d in memory
flw f3, 0(x2) # load 0x4fc76371fdff2c7d from memory into f3
fmsub.s f11, f16, f24, f3 # perform operation

# Testcase cp_fs1 (Test source fs1 = f17)
li x15, 0xd9c621d108a0d787 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7a2f71b1b7f06b # load x3 with value 0xff7a2f71b1b7f06b
sw x3, 0(x2) # store 0xff7a2f71b1b7f06b in memory
flw f17, 0(x2) # load 0xff7a2f71b1b7f06b from memory into f17
li x3, 0xb0ff5189aaf78d05 # load x3 with value 0xb0ff5189aaf78d05
sw x3, 0(x2) # store 0xb0ff5189aaf78d05 in memory
flw f26, 0(x2) # load 0xb0ff5189aaf78d05 from memory into f26
li x3, 0x3e37469c40c98581 # load x3 with value 0x3e37469c40c98581
sw x3, 0(x2) # store 0x3e37469c40c98581 in memory
flw f25, 0(x2) # load 0x3e37469c40c98581 from memory into f25
fmsub.s f15, f17, f26, f25 # perform operation

# Testcase cp_fs1 (Test source fs1 = f18)
li x11, 0xe7f34ba1c034da14 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xf10cf4b8e7c9e845 # load x3 with value 0xf10cf4b8e7c9e845
sw x3, 0(x2) # store 0xf10cf4b8e7c9e845 in memory
flw f18, 0(x2) # load 0xf10cf4b8e7c9e845 from memory into f18
li x3, 0x55b08d49b757b275 # load x3 with value 0x55b08d49b757b275
sw x3, 0(x2) # store 0x55b08d49b757b275 in memory
flw f3, 0(x2) # load 0x55b08d49b757b275 from memory into f3
li x3, 0x44d46a738fede92d # load x3 with value 0x44d46a738fede92d
sw x3, 0(x2) # store 0x44d46a738fede92d in memory
flw f6, 0(x2) # load 0x44d46a738fede92d from memory into f6
fmsub.s f11, f18, f3, f6 # perform operation

# Testcase cp_fs1 (Test source fs1 = f19)
li x18, 0x84c5322040cd2779 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x8d436585b28acc5b # load x3 with value 0x8d436585b28acc5b
sw x3, 0(x2) # store 0x8d436585b28acc5b in memory
flw f19, 0(x2) # load 0x8d436585b28acc5b from memory into f19
li x3, 0x84e54a6e4ee7ff79 # load x3 with value 0x84e54a6e4ee7ff79
sw x3, 0(x2) # store 0x84e54a6e4ee7ff79 in memory
flw f30, 0(x2) # load 0x84e54a6e4ee7ff79 from memory into f30
li x3, 0x2464f534bc43f645 # load x3 with value 0x2464f534bc43f645
sw x3, 0(x2) # store 0x2464f534bc43f645 in memory
flw f25, 0(x2) # load 0x2464f534bc43f645 from memory into f25
fmsub.s f18, f19, f30, f25 # perform operation

# Testcase cp_fs1 (Test source fs1 = f20)
li x2, 0xdad17eda61a975e9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa4ed0dbb3f3c8104 # load x3 with value 0xa4ed0dbb3f3c8104
sw x3, 0(x2) # store 0xa4ed0dbb3f3c8104 in memory
flw f20, 0(x2) # load 0xa4ed0dbb3f3c8104 from memory into f20
li x3, 0x6b574055fb432f76 # load x3 with value 0x6b574055fb432f76
sw x3, 0(x2) # store 0x6b574055fb432f76 in memory
flw f5, 0(x2) # load 0x6b574055fb432f76 from memory into f5
li x3, 0xad886dccabf60795 # load x3 with value 0xad886dccabf60795
sw x3, 0(x2) # store 0xad886dccabf60795 in memory
flw f10, 0(x2) # load 0xad886dccabf60795 from memory into f10
fmsub.s f2, f20, f5, f10 # perform operation

# Testcase cp_fs1 (Test source fs1 = f21)
li x25, 0xc4d9b0f4a51f1cdb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xde234a319d47e249 # load x3 with value 0xde234a319d47e249
sw x3, 0(x2) # store 0xde234a319d47e249 in memory
flw f21, 0(x2) # load 0xde234a319d47e249 from memory into f21
li x3, 0xce5f1b048f7da702 # load x3 with value 0xce5f1b048f7da702
sw x3, 0(x2) # store 0xce5f1b048f7da702 in memory
flw f30, 0(x2) # load 0xce5f1b048f7da702 from memory into f30
li x3, 0xa4cffa12db9c42b8 # load x3 with value 0xa4cffa12db9c42b8
sw x3, 0(x2) # store 0xa4cffa12db9c42b8 in memory
flw f26, 0(x2) # load 0xa4cffa12db9c42b8 from memory into f26
fmsub.s f25, f21, f30, f26 # perform operation

# Testcase cp_fs1 (Test source fs1 = f22)
li x24, 0x384e2a5ae0fbe04d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x868a8baabcc1ef5e # load x3 with value 0x868a8baabcc1ef5e
sw x3, 0(x2) # store 0x868a8baabcc1ef5e in memory
flw f22, 0(x2) # load 0x868a8baabcc1ef5e from memory into f22
li x3, 0x4e0412e620a23d7d # load x3 with value 0x4e0412e620a23d7d
sw x3, 0(x2) # store 0x4e0412e620a23d7d in memory
flw f23, 0(x2) # load 0x4e0412e620a23d7d from memory into f23
li x3, 0x50fdde36ce3fe522 # load x3 with value 0x50fdde36ce3fe522
sw x3, 0(x2) # store 0x50fdde36ce3fe522 in memory
flw f3, 0(x2) # load 0x50fdde36ce3fe522 from memory into f3
fmsub.s f24, f22, f23, f3 # perform operation

# Testcase cp_fs1 (Test source fs1 = f23)
li x15, 0xdfd43d493e475cc2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa9a2bb7ecdf92a85 # load x3 with value 0xa9a2bb7ecdf92a85
sw x3, 0(x2) # store 0xa9a2bb7ecdf92a85 in memory
flw f23, 0(x2) # load 0xa9a2bb7ecdf92a85 from memory into f23
li x3, 0x6876f0829af63530 # load x3 with value 0x6876f0829af63530
sw x3, 0(x2) # store 0x6876f0829af63530 in memory
flw f7, 0(x2) # load 0x6876f0829af63530 from memory into f7
li x3, 0xc2c98987f55f1c5b # load x3 with value 0xc2c98987f55f1c5b
sw x3, 0(x2) # store 0xc2c98987f55f1c5b in memory
flw f9, 0(x2) # load 0xc2c98987f55f1c5b from memory into f9
fmsub.s f15, f23, f7, f9 # perform operation

# Testcase cp_fs1 (Test source fs1 = f24)
li x6, 0x1b62b5d3229042fb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x45e904811620fdff # load x3 with value 0x45e904811620fdff
sw x3, 0(x2) # store 0x45e904811620fdff in memory
flw f24, 0(x2) # load 0x45e904811620fdff from memory into f24
li x3, 0x26f4b327bb283c8e # load x3 with value 0x26f4b327bb283c8e
sw x3, 0(x2) # store 0x26f4b327bb283c8e in memory
flw f16, 0(x2) # load 0x26f4b327bb283c8e from memory into f16
li x3, 0x5edfeb73b0f969a3 # load x3 with value 0x5edfeb73b0f969a3
sw x3, 0(x2) # store 0x5edfeb73b0f969a3 in memory
flw f22, 0(x2) # load 0x5edfeb73b0f969a3 from memory into f22
fmsub.s f6, f24, f16, f22 # perform operation

# Testcase cp_fs1 (Test source fs1 = f25)
li x29, 0x21e2466b07aeff82 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xd719330b80df666 # load x3 with value 0xd719330b80df666
sw x3, 0(x2) # store 0xd719330b80df666 in memory
flw f25, 0(x2) # load 0xd719330b80df666 from memory into f25
li x3, 0xc031ecd8294e4196 # load x3 with value 0xc031ecd8294e4196
sw x3, 0(x2) # store 0xc031ecd8294e4196 in memory
flw f15, 0(x2) # load 0xc031ecd8294e4196 from memory into f15
li x3, 0xa86994dac53be83c # load x3 with value 0xa86994dac53be83c
sw x3, 0(x2) # store 0xa86994dac53be83c in memory
flw f14, 0(x2) # load 0xa86994dac53be83c from memory into f14
fmsub.s f29, f25, f15, f14 # perform operation

# Testcase cp_fs1 (Test source fs1 = f26)
li x11, 0x5dd7ea419d73954e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x386f39d6bde10130 # load x3 with value 0x386f39d6bde10130
sw x3, 0(x2) # store 0x386f39d6bde10130 in memory
flw f26, 0(x2) # load 0x386f39d6bde10130 from memory into f26
li x3, 0x4d883be8959c386b # load x3 with value 0x4d883be8959c386b
sw x3, 0(x2) # store 0x4d883be8959c386b in memory
flw f23, 0(x2) # load 0x4d883be8959c386b from memory into f23
li x3, 0x28fb9188efd9cf27 # load x3 with value 0x28fb9188efd9cf27
sw x3, 0(x2) # store 0x28fb9188efd9cf27 in memory
flw f25, 0(x2) # load 0x28fb9188efd9cf27 from memory into f25
fmsub.s f11, f26, f23, f25 # perform operation

# Testcase cp_fs1 (Test source fs1 = f27)
li x3, 0x2dc1983550297a96 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xb0c70fba653c81f1 # load x3 with value 0xb0c70fba653c81f1
sw x3, 0(x2) # store 0xb0c70fba653c81f1 in memory
flw f27, 0(x2) # load 0xb0c70fba653c81f1 from memory into f27
li x3, 0xe8c524f1983804a4 # load x3 with value 0xe8c524f1983804a4
sw x3, 0(x2) # store 0xe8c524f1983804a4 in memory
flw f11, 0(x2) # load 0xe8c524f1983804a4 from memory into f11
li x3, 0x88c5fdb0f0369431 # load x3 with value 0x88c5fdb0f0369431
sw x3, 0(x2) # store 0x88c5fdb0f0369431 in memory
flw f23, 0(x2) # load 0x88c5fdb0f0369431 from memory into f23
fmsub.s f3, f27, f11, f23 # perform operation

# Testcase cp_fs1 (Test source fs1 = f28)
li x10, 0x74179a88d6896ed9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x5f39985d01fd11a6 # load x3 with value 0x5f39985d01fd11a6
sw x3, 0(x2) # store 0x5f39985d01fd11a6 in memory
flw f28, 0(x2) # load 0x5f39985d01fd11a6 from memory into f28
li x3, 0x518f0034b9f4bd9d # load x3 with value 0x518f0034b9f4bd9d
sw x3, 0(x2) # store 0x518f0034b9f4bd9d in memory
flw f4, 0(x2) # load 0x518f0034b9f4bd9d from memory into f4
li x3, 0x48ce391268a6bd0c # load x3 with value 0x48ce391268a6bd0c
sw x3, 0(x2) # store 0x48ce391268a6bd0c in memory
flw f1, 0(x2) # load 0x48ce391268a6bd0c from memory into f1
fmsub.s f10, f28, f4, f1 # perform operation

# Testcase cp_fs1 (Test source fs1 = f29)
li x20, 0x8791b334d9761d2f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xad057874e4e1121d # load x3 with value 0xad057874e4e1121d
sw x3, 0(x2) # store 0xad057874e4e1121d in memory
flw f29, 0(x2) # load 0xad057874e4e1121d from memory into f29
li x3, 0x5614225175120ea7 # load x3 with value 0x5614225175120ea7
sw x3, 0(x2) # store 0x5614225175120ea7 in memory
flw f7, 0(x2) # load 0x5614225175120ea7 from memory into f7
li x3, 0xb06dd2390db397a2 # load x3 with value 0xb06dd2390db397a2
sw x3, 0(x2) # store 0xb06dd2390db397a2 in memory
flw f28, 0(x2) # load 0xb06dd2390db397a2 from memory into f28
fmsub.s f20, f29, f7, f28 # perform operation

# Testcase cp_fs1 (Test source fs1 = f30)
li x31, 0xe95411638acc816d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x6632aa6e1024ff39 # load x3 with value 0x6632aa6e1024ff39
sw x3, 0(x2) # store 0x6632aa6e1024ff39 in memory
flw f30, 0(x2) # load 0x6632aa6e1024ff39 from memory into f30
li x3, 0xef4dc9378371a103 # load x3 with value 0xef4dc9378371a103
sw x3, 0(x2) # store 0xef4dc9378371a103 in memory
flw f6, 0(x2) # load 0xef4dc9378371a103 from memory into f6
li x3, 0x6ab56576f07d7bf6 # load x3 with value 0x6ab56576f07d7bf6
sw x3, 0(x2) # store 0x6ab56576f07d7bf6 in memory
flw f14, 0(x2) # load 0x6ab56576f07d7bf6 from memory into f14
fmsub.s f31, f30, f6, f14 # perform operation

# Testcase cp_fs1 (Test source fs1 = f31)
li x18, 0x34b09d8edc167765 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xdb7e7a0281ea7bc4 # load x3 with value 0xdb7e7a0281ea7bc4
sw x3, 0(x2) # store 0xdb7e7a0281ea7bc4 in memory
flw f31, 0(x2) # load 0xdb7e7a0281ea7bc4 from memory into f31
li x3, 0x2a782c272d5e4d3e # load x3 with value 0x2a782c272d5e4d3e
sw x3, 0(x2) # store 0x2a782c272d5e4d3e in memory
flw f22, 0(x2) # load 0x2a782c272d5e4d3e from memory into f22
li x3, 0x8f2fdfb8b8d397c2 # load x3 with value 0x8f2fdfb8b8d397c2
sw x3, 0(x2) # store 0x8f2fdfb8b8d397c2 in memory
flw f27, 0(x2) # load 0x8f2fdfb8b8d397c2 from memory into f27
fmsub.s f18, f31, f22, f27 # perform operation

# Testcase cp_fs2 (Test source fs2 = f0)
li x25, 0xc656a90b7634f7ba # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xe8c89c6711552483 # load x3 with value 0xe8c89c6711552483
sw x3, 0(x2) # store 0xe8c89c6711552483 in memory
flw f12, 0(x2) # load 0xe8c89c6711552483 from memory into f12
li x3, 0x148e598d5a35b4ad # load x3 with value 0x148e598d5a35b4ad
sw x3, 0(x2) # store 0x148e598d5a35b4ad in memory
flw f0, 0(x2) # load 0x148e598d5a35b4ad from memory into f0
li x3, 0x2d8751b0e10909b0 # load x3 with value 0x2d8751b0e10909b0
sw x3, 0(x2) # store 0x2d8751b0e10909b0 in memory
flw f3, 0(x2) # load 0x2d8751b0e10909b0 from memory into f3
fmsub.s f25, f12, f0, f3 # perform operation

# Testcase cp_fs2 (Test source fs2 = f1)
li x4, 0x9654845bf2dbb826 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x2c202cad4a4f5311 # load x3 with value 0x2c202cad4a4f5311
sw x3, 0(x2) # store 0x2c202cad4a4f5311 in memory
flw f14, 0(x2) # load 0x2c202cad4a4f5311 from memory into f14
li x3, 0x69d2eb32713af6ff # load x3 with value 0x69d2eb32713af6ff
sw x3, 0(x2) # store 0x69d2eb32713af6ff in memory
flw f1, 0(x2) # load 0x69d2eb32713af6ff from memory into f1
li x3, 0xa752866ab5355e4a # load x3 with value 0xa752866ab5355e4a
sw x3, 0(x2) # store 0xa752866ab5355e4a in memory
flw f13, 0(x2) # load 0xa752866ab5355e4a from memory into f13
fmsub.s f4, f14, f1, f13 # perform operation

# Testcase cp_fs2 (Test source fs2 = f2)
li x16, 0x126ec75f2e8db65c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc2be1810156c0ec5 # load x3 with value 0xc2be1810156c0ec5
sw x3, 0(x2) # store 0xc2be1810156c0ec5 in memory
flw f29, 0(x2) # load 0xc2be1810156c0ec5 from memory into f29
li x3, 0xb50c574fd3c850fc # load x3 with value 0xb50c574fd3c850fc
sw x3, 0(x2) # store 0xb50c574fd3c850fc in memory
flw f2, 0(x2) # load 0xb50c574fd3c850fc from memory into f2
li x3, 0x436745989ff4c0f1 # load x3 with value 0x436745989ff4c0f1
sw x3, 0(x2) # store 0x436745989ff4c0f1 in memory
flw f7, 0(x2) # load 0x436745989ff4c0f1 from memory into f7
fmsub.s f16, f29, f2, f7 # perform operation

# Testcase cp_fs2 (Test source fs2 = f3)
li x2, 0xf1a9fd396eaac65a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x164d925a3df8bafa # load x3 with value 0x164d925a3df8bafa
sw x3, 0(x2) # store 0x164d925a3df8bafa in memory
flw f5, 0(x2) # load 0x164d925a3df8bafa from memory into f5
li x3, 0x7b4a5c5b53c14aae # load x3 with value 0x7b4a5c5b53c14aae
sw x3, 0(x2) # store 0x7b4a5c5b53c14aae in memory
flw f3, 0(x2) # load 0x7b4a5c5b53c14aae from memory into f3
li x3, 0xdcb17ffedd7e245 # load x3 with value 0xdcb17ffedd7e245
sw x3, 0(x2) # store 0xdcb17ffedd7e245 in memory
flw f31, 0(x2) # load 0xdcb17ffedd7e245 from memory into f31
fmsub.s f2, f5, f3, f31 # perform operation

# Testcase cp_fs2 (Test source fs2 = f4)
li x13, 0x8cba50daa50d541a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x97afff26138ecf7 # load x3 with value 0x97afff26138ecf7
sw x3, 0(x2) # store 0x97afff26138ecf7 in memory
flw f19, 0(x2) # load 0x97afff26138ecf7 from memory into f19
li x3, 0x96e8fe4fbd7f1929 # load x3 with value 0x96e8fe4fbd7f1929
sw x3, 0(x2) # store 0x96e8fe4fbd7f1929 in memory
flw f4, 0(x2) # load 0x96e8fe4fbd7f1929 from memory into f4
li x3, 0xe3352351f875cf47 # load x3 with value 0xe3352351f875cf47
sw x3, 0(x2) # store 0xe3352351f875cf47 in memory
flw f16, 0(x2) # load 0xe3352351f875cf47 from memory into f16
fmsub.s f13, f19, f4, f16 # perform operation

# Testcase cp_fs2 (Test source fs2 = f5)
li x26, 0x877ce7cd4990b8a7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbd3df1093cb295e # load x3 with value 0xbd3df1093cb295e
sw x3, 0(x2) # store 0xbd3df1093cb295e in memory
flw f16, 0(x2) # load 0xbd3df1093cb295e from memory into f16
li x3, 0xf5f0cfee78b23533 # load x3 with value 0xf5f0cfee78b23533
sw x3, 0(x2) # store 0xf5f0cfee78b23533 in memory
flw f5, 0(x2) # load 0xf5f0cfee78b23533 from memory into f5
li x3, 0xb848104824118a8a # load x3 with value 0xb848104824118a8a
sw x3, 0(x2) # store 0xb848104824118a8a in memory
flw f10, 0(x2) # load 0xb848104824118a8a from memory into f10
fmsub.s f26, f16, f5, f10 # perform operation

# Testcase cp_fs2 (Test source fs2 = f6)
li x25, 0xea45ea6a28119377 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x23882e0c549bf0ab # load x3 with value 0x23882e0c549bf0ab
sw x3, 0(x2) # store 0x23882e0c549bf0ab in memory
flw f17, 0(x2) # load 0x23882e0c549bf0ab from memory into f17
li x3, 0xe69209859cc7d159 # load x3 with value 0xe69209859cc7d159
sw x3, 0(x2) # store 0xe69209859cc7d159 in memory
flw f6, 0(x2) # load 0xe69209859cc7d159 from memory into f6
li x3, 0x911998141ebf070e # load x3 with value 0x911998141ebf070e
sw x3, 0(x2) # store 0x911998141ebf070e in memory
flw f31, 0(x2) # load 0x911998141ebf070e from memory into f31
fmsub.s f25, f17, f6, f31 # perform operation

# Testcase cp_fs2 (Test source fs2 = f7)
li x2, 0x8048a3410b9aeddd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x461dcaa2c4ea629 # load x3 with value 0x461dcaa2c4ea629
sw x3, 0(x2) # store 0x461dcaa2c4ea629 in memory
flw f29, 0(x2) # load 0x461dcaa2c4ea629 from memory into f29
li x3, 0x2aaef01c73b1ea9e # load x3 with value 0x2aaef01c73b1ea9e
sw x3, 0(x2) # store 0x2aaef01c73b1ea9e in memory
flw f7, 0(x2) # load 0x2aaef01c73b1ea9e from memory into f7
li x3, 0xf4b755354d6fe6e # load x3 with value 0xf4b755354d6fe6e
sw x3, 0(x2) # store 0xf4b755354d6fe6e in memory
flw f19, 0(x2) # load 0xf4b755354d6fe6e from memory into f19
fmsub.s f2, f29, f7, f19 # perform operation

# Testcase cp_fs2 (Test source fs2 = f8)
li x31, 0x034686bfc5ba1c61 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x11aa8c5761bdfff3 # load x3 with value 0x11aa8c5761bdfff3
sw x3, 0(x2) # store 0x11aa8c5761bdfff3 in memory
flw f17, 0(x2) # load 0x11aa8c5761bdfff3 from memory into f17
li x3, 0xebfbcc45470b53d # load x3 with value 0xebfbcc45470b53d
sw x3, 0(x2) # store 0xebfbcc45470b53d in memory
flw f8, 0(x2) # load 0xebfbcc45470b53d from memory into f8
li x3, 0xfee85d0f8092cf66 # load x3 with value 0xfee85d0f8092cf66
sw x3, 0(x2) # store 0xfee85d0f8092cf66 in memory
flw f18, 0(x2) # load 0xfee85d0f8092cf66 from memory into f18
fmsub.s f31, f17, f8, f18 # perform operation

# Testcase cp_fs2 (Test source fs2 = f9)
li x23, 0xba3ad655c9af2c57 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3c0566881ed47a95 # load x3 with value 0x3c0566881ed47a95
sw x3, 0(x2) # store 0x3c0566881ed47a95 in memory
flw f2, 0(x2) # load 0x3c0566881ed47a95 from memory into f2
li x3, 0x5a194917c21b21b9 # load x3 with value 0x5a194917c21b21b9
sw x3, 0(x2) # store 0x5a194917c21b21b9 in memory
flw f9, 0(x2) # load 0x5a194917c21b21b9 from memory into f9
li x3, 0x3af1cf57ba004542 # load x3 with value 0x3af1cf57ba004542
sw x3, 0(x2) # store 0x3af1cf57ba004542 in memory
flw f7, 0(x2) # load 0x3af1cf57ba004542 from memory into f7
fmsub.s f23, f2, f9, f7 # perform operation

# Testcase cp_fs2 (Test source fs2 = f10)
li x22, 0x9846d80e9acf77dd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x9861c0f35e0efcef # load x3 with value 0x9861c0f35e0efcef
sw x3, 0(x2) # store 0x9861c0f35e0efcef in memory
flw f31, 0(x2) # load 0x9861c0f35e0efcef from memory into f31
li x3, 0x9695a5c70de65d37 # load x3 with value 0x9695a5c70de65d37
sw x3, 0(x2) # store 0x9695a5c70de65d37 in memory
flw f10, 0(x2) # load 0x9695a5c70de65d37 from memory into f10
li x3, 0x54019517a3199eac # load x3 with value 0x54019517a3199eac
sw x3, 0(x2) # store 0x54019517a3199eac in memory
flw f13, 0(x2) # load 0x54019517a3199eac from memory into f13
fmsub.s f22, f31, f10, f13 # perform operation

# Testcase cp_fs2 (Test source fs2 = f11)
li x21, 0x8123d4b8d3a7f167 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x43c6bcf60e883577 # load x3 with value 0x43c6bcf60e883577
sw x3, 0(x2) # store 0x43c6bcf60e883577 in memory
flw f23, 0(x2) # load 0x43c6bcf60e883577 from memory into f23
li x3, 0x30ef75c16777d928 # load x3 with value 0x30ef75c16777d928
sw x3, 0(x2) # store 0x30ef75c16777d928 in memory
flw f11, 0(x2) # load 0x30ef75c16777d928 from memory into f11
li x3, 0xf39c73e46fc0e766 # load x3 with value 0xf39c73e46fc0e766
sw x3, 0(x2) # store 0xf39c73e46fc0e766 in memory
flw f2, 0(x2) # load 0xf39c73e46fc0e766 from memory into f2
fmsub.s f21, f23, f11, f2 # perform operation

# Testcase cp_fs2 (Test source fs2 = f12)
li x22, 0xe5d144303c5965b4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xcd2e5dbde57c9927 # load x3 with value 0xcd2e5dbde57c9927
sw x3, 0(x2) # store 0xcd2e5dbde57c9927 in memory
flw f27, 0(x2) # load 0xcd2e5dbde57c9927 from memory into f27
li x3, 0xd34825c822e6e145 # load x3 with value 0xd34825c822e6e145
sw x3, 0(x2) # store 0xd34825c822e6e145 in memory
flw f12, 0(x2) # load 0xd34825c822e6e145 from memory into f12
li x3, 0x4971924464bdbee2 # load x3 with value 0x4971924464bdbee2
sw x3, 0(x2) # store 0x4971924464bdbee2 in memory
flw f16, 0(x2) # load 0x4971924464bdbee2 from memory into f16
fmsub.s f22, f27, f12, f16 # perform operation

# Testcase cp_fs2 (Test source fs2 = f13)
li x10, 0x7514d8683f78b948 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x6087cc3660876263 # load x3 with value 0x6087cc3660876263
sw x3, 0(x2) # store 0x6087cc3660876263 in memory
flw f2, 0(x2) # load 0x6087cc3660876263 from memory into f2
li x3, 0x3629daa84114b365 # load x3 with value 0x3629daa84114b365
sw x3, 0(x2) # store 0x3629daa84114b365 in memory
flw f13, 0(x2) # load 0x3629daa84114b365 from memory into f13
li x3, 0x98412b103c47ca5c # load x3 with value 0x98412b103c47ca5c
sw x3, 0(x2) # store 0x98412b103c47ca5c in memory
flw f24, 0(x2) # load 0x98412b103c47ca5c from memory into f24
fmsub.s f10, f2, f13, f24 # perform operation

# Testcase cp_fs2 (Test source fs2 = f14)
li x8, 0xf9b6356427aa5da4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x6b4c4145e13d5487 # load x3 with value 0x6b4c4145e13d5487
sw x3, 0(x2) # store 0x6b4c4145e13d5487 in memory
flw f9, 0(x2) # load 0x6b4c4145e13d5487 from memory into f9
li x3, 0x9219f0dbb1de08f8 # load x3 with value 0x9219f0dbb1de08f8
sw x3, 0(x2) # store 0x9219f0dbb1de08f8 in memory
flw f14, 0(x2) # load 0x9219f0dbb1de08f8 from memory into f14
li x3, 0xfe37da4ff8841b46 # load x3 with value 0xfe37da4ff8841b46
sw x3, 0(x2) # store 0xfe37da4ff8841b46 in memory
flw f11, 0(x2) # load 0xfe37da4ff8841b46 from memory into f11
fmsub.s f8, f9, f14, f11 # perform operation

# Testcase cp_fs2 (Test source fs2 = f15)
li x27, 0x404a39146f17cb77 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xd80bea426ff51838 # load x3 with value 0xd80bea426ff51838
sw x3, 0(x2) # store 0xd80bea426ff51838 in memory
flw f21, 0(x2) # load 0xd80bea426ff51838 from memory into f21
li x3, 0x7131c42680e21c09 # load x3 with value 0x7131c42680e21c09
sw x3, 0(x2) # store 0x7131c42680e21c09 in memory
flw f15, 0(x2) # load 0x7131c42680e21c09 from memory into f15
li x3, 0xd682ea31b8dac276 # load x3 with value 0xd682ea31b8dac276
sw x3, 0(x2) # store 0xd682ea31b8dac276 in memory
flw f9, 0(x2) # load 0xd682ea31b8dac276 from memory into f9
fmsub.s f27, f21, f15, f9 # perform operation

# Testcase cp_fs2 (Test source fs2 = f16)
li x29, 0xa9f1403343875325 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xb6722056293dbcf7 # load x3 with value 0xb6722056293dbcf7
sw x3, 0(x2) # store 0xb6722056293dbcf7 in memory
flw f5, 0(x2) # load 0xb6722056293dbcf7 from memory into f5
li x3, 0x567a5359cc290543 # load x3 with value 0x567a5359cc290543
sw x3, 0(x2) # store 0x567a5359cc290543 in memory
flw f16, 0(x2) # load 0x567a5359cc290543 from memory into f16
li x3, 0x7b4ea0241f48c153 # load x3 with value 0x7b4ea0241f48c153
sw x3, 0(x2) # store 0x7b4ea0241f48c153 in memory
flw f16, 0(x2) # load 0x7b4ea0241f48c153 from memory into f16
fmsub.s f29, f5, f16, f16 # perform operation

# Testcase cp_fs2 (Test source fs2 = f17)
li x26, 0xff01c7ba4c065337 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xd91ecff3166af35a # load x3 with value 0xd91ecff3166af35a
sw x3, 0(x2) # store 0xd91ecff3166af35a in memory
flw f21, 0(x2) # load 0xd91ecff3166af35a from memory into f21
li x3, 0xe14d8ca63d1d7d62 # load x3 with value 0xe14d8ca63d1d7d62
sw x3, 0(x2) # store 0xe14d8ca63d1d7d62 in memory
flw f17, 0(x2) # load 0xe14d8ca63d1d7d62 from memory into f17
li x3, 0xedeede70325d1179 # load x3 with value 0xedeede70325d1179
sw x3, 0(x2) # store 0xedeede70325d1179 in memory
flw f18, 0(x2) # load 0xedeede70325d1179 from memory into f18
fmsub.s f26, f21, f17, f18 # perform operation

# Testcase cp_fs2 (Test source fs2 = f18)
li x30, 0x5c69115c8aa86475 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xb08e7c00ec9b1bf2 # load x3 with value 0xb08e7c00ec9b1bf2
sw x3, 0(x2) # store 0xb08e7c00ec9b1bf2 in memory
flw f16, 0(x2) # load 0xb08e7c00ec9b1bf2 from memory into f16
li x3, 0x3b93e5897204ba71 # load x3 with value 0x3b93e5897204ba71
sw x3, 0(x2) # store 0x3b93e5897204ba71 in memory
flw f18, 0(x2) # load 0x3b93e5897204ba71 from memory into f18
li x3, 0x74c74530bebd8ce7 # load x3 with value 0x74c74530bebd8ce7
sw x3, 0(x2) # store 0x74c74530bebd8ce7 in memory
flw f25, 0(x2) # load 0x74c74530bebd8ce7 from memory into f25
fmsub.s f30, f16, f18, f25 # perform operation

# Testcase cp_fs2 (Test source fs2 = f19)
li x27, 0x38a592a5ff503e91 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x73a0e673250cf490 # load x3 with value 0x73a0e673250cf490
sw x3, 0(x2) # store 0x73a0e673250cf490 in memory
flw f17, 0(x2) # load 0x73a0e673250cf490 from memory into f17
li x3, 0x14fdafdac4d0dcae # load x3 with value 0x14fdafdac4d0dcae
sw x3, 0(x2) # store 0x14fdafdac4d0dcae in memory
flw f19, 0(x2) # load 0x14fdafdac4d0dcae from memory into f19
li x3, 0x2e98e42c79345eb1 # load x3 with value 0x2e98e42c79345eb1
sw x3, 0(x2) # store 0x2e98e42c79345eb1 in memory
flw f4, 0(x2) # load 0x2e98e42c79345eb1 from memory into f4
fmsub.s f27, f17, f19, f4 # perform operation

# Testcase cp_fs2 (Test source fs2 = f20)
li x31, 0xf6fd28c493d073fe # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7652e13789a6798b # load x3 with value 0x7652e13789a6798b
sw x3, 0(x2) # store 0x7652e13789a6798b in memory
flw f14, 0(x2) # load 0x7652e13789a6798b from memory into f14
li x3, 0x54ad0228f8bc6867 # load x3 with value 0x54ad0228f8bc6867
sw x3, 0(x2) # store 0x54ad0228f8bc6867 in memory
flw f20, 0(x2) # load 0x54ad0228f8bc6867 from memory into f20
li x3, 0x46d6bf26317a8da4 # load x3 with value 0x46d6bf26317a8da4
sw x3, 0(x2) # store 0x46d6bf26317a8da4 in memory
flw f10, 0(x2) # load 0x46d6bf26317a8da4 from memory into f10
fmsub.s f31, f14, f20, f10 # perform operation

# Testcase cp_fs2 (Test source fs2 = f21)
li x21, 0x3b5a8ef243516da8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbc469be3774c15b3 # load x3 with value 0xbc469be3774c15b3
sw x3, 0(x2) # store 0xbc469be3774c15b3 in memory
flw f9, 0(x2) # load 0xbc469be3774c15b3 from memory into f9
li x3, 0x3ed9a061f6f75b6 # load x3 with value 0x3ed9a061f6f75b6
sw x3, 0(x2) # store 0x3ed9a061f6f75b6 in memory
flw f21, 0(x2) # load 0x3ed9a061f6f75b6 from memory into f21
li x3, 0x469331b414619b38 # load x3 with value 0x469331b414619b38
sw x3, 0(x2) # store 0x469331b414619b38 in memory
flw f4, 0(x2) # load 0x469331b414619b38 from memory into f4
fmsub.s f21, f9, f21, f4 # perform operation

# Testcase cp_fs2 (Test source fs2 = f22)
li x18, 0x451482b76aba69e5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x8990aa250a3e2ea1 # load x3 with value 0x8990aa250a3e2ea1
sw x3, 0(x2) # store 0x8990aa250a3e2ea1 in memory
flw f5, 0(x2) # load 0x8990aa250a3e2ea1 from memory into f5
li x3, 0x434eb3661ccb5f48 # load x3 with value 0x434eb3661ccb5f48
sw x3, 0(x2) # store 0x434eb3661ccb5f48 in memory
flw f22, 0(x2) # load 0x434eb3661ccb5f48 from memory into f22
li x3, 0x284545332759cee0 # load x3 with value 0x284545332759cee0
sw x3, 0(x2) # store 0x284545332759cee0 in memory
flw f31, 0(x2) # load 0x284545332759cee0 from memory into f31
fmsub.s f18, f5, f22, f31 # perform operation

# Testcase cp_fs2 (Test source fs2 = f23)
li x4, 0x95d41dfe61a21495 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xd9804e25265a2604 # load x3 with value 0xd9804e25265a2604
sw x3, 0(x2) # store 0xd9804e25265a2604 in memory
flw f18, 0(x2) # load 0xd9804e25265a2604 from memory into f18
li x3, 0x80b62de02f49637c # load x3 with value 0x80b62de02f49637c
sw x3, 0(x2) # store 0x80b62de02f49637c in memory
flw f23, 0(x2) # load 0x80b62de02f49637c from memory into f23
li x3, 0x3fe683aaa69d1842 # load x3 with value 0x3fe683aaa69d1842
sw x3, 0(x2) # store 0x3fe683aaa69d1842 in memory
flw f7, 0(x2) # load 0x3fe683aaa69d1842 from memory into f7
fmsub.s f4, f18, f23, f7 # perform operation

# Testcase cp_fs2 (Test source fs2 = f24)
li x23, 0x678757397d44793c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xef9ed33ce1aae665 # load x3 with value 0xef9ed33ce1aae665
sw x3, 0(x2) # store 0xef9ed33ce1aae665 in memory
flw f9, 0(x2) # load 0xef9ed33ce1aae665 from memory into f9
li x3, 0x788229851246808f # load x3 with value 0x788229851246808f
sw x3, 0(x2) # store 0x788229851246808f in memory
flw f24, 0(x2) # load 0x788229851246808f from memory into f24
li x3, 0xf549561096e54923 # load x3 with value 0xf549561096e54923
sw x3, 0(x2) # store 0xf549561096e54923 in memory
flw f10, 0(x2) # load 0xf549561096e54923 from memory into f10
fmsub.s f23, f9, f24, f10 # perform operation

# Testcase cp_fs2 (Test source fs2 = f25)
li x23, 0x00f5fb5ecfd8a996 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x31c0c0cdaf35168f # load x3 with value 0x31c0c0cdaf35168f
sw x3, 0(x2) # store 0x31c0c0cdaf35168f in memory
flw f26, 0(x2) # load 0x31c0c0cdaf35168f from memory into f26
li x3, 0x6999711475a0b510 # load x3 with value 0x6999711475a0b510
sw x3, 0(x2) # store 0x6999711475a0b510 in memory
flw f25, 0(x2) # load 0x6999711475a0b510 from memory into f25
li x3, 0x8bdc1de25ddab484 # load x3 with value 0x8bdc1de25ddab484
sw x3, 0(x2) # store 0x8bdc1de25ddab484 in memory
flw f15, 0(x2) # load 0x8bdc1de25ddab484 from memory into f15
fmsub.s f23, f26, f25, f15 # perform operation

# Testcase cp_fs2 (Test source fs2 = f26)
li x1, 0x69852894cb26733a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x6d839140314b8cc2 # load x3 with value 0x6d839140314b8cc2
sw x3, 0(x2) # store 0x6d839140314b8cc2 in memory
flw f13, 0(x2) # load 0x6d839140314b8cc2 from memory into f13
li x3, 0x48c972b4dddf2d07 # load x3 with value 0x48c972b4dddf2d07
sw x3, 0(x2) # store 0x48c972b4dddf2d07 in memory
flw f26, 0(x2) # load 0x48c972b4dddf2d07 from memory into f26
li x3, 0x13b9867384b8d11e # load x3 with value 0x13b9867384b8d11e
sw x3, 0(x2) # store 0x13b9867384b8d11e in memory
flw f16, 0(x2) # load 0x13b9867384b8d11e from memory into f16
fmsub.s f1, f13, f26, f16 # perform operation

# Testcase cp_fs2 (Test source fs2 = f27)
li x25, 0x5c41070cf4385a84 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x8eb3dd9e9a474861 # load x3 with value 0x8eb3dd9e9a474861
sw x3, 0(x2) # store 0x8eb3dd9e9a474861 in memory
flw f10, 0(x2) # load 0x8eb3dd9e9a474861 from memory into f10
li x3, 0x367e1c3fd3c40b92 # load x3 with value 0x367e1c3fd3c40b92
sw x3, 0(x2) # store 0x367e1c3fd3c40b92 in memory
flw f27, 0(x2) # load 0x367e1c3fd3c40b92 from memory into f27
li x3, 0x2ae34c1790f61519 # load x3 with value 0x2ae34c1790f61519
sw x3, 0(x2) # store 0x2ae34c1790f61519 in memory
flw f20, 0(x2) # load 0x2ae34c1790f61519 from memory into f20
fmsub.s f25, f10, f27, f20 # perform operation

# Testcase cp_fs2 (Test source fs2 = f28)
li x5, 0x327577a89fdb4551 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x87325f2ea97ee46c # load x3 with value 0x87325f2ea97ee46c
sw x3, 0(x2) # store 0x87325f2ea97ee46c in memory
flw f9, 0(x2) # load 0x87325f2ea97ee46c from memory into f9
li x3, 0x1757ff5c4b5f7c84 # load x3 with value 0x1757ff5c4b5f7c84
sw x3, 0(x2) # store 0x1757ff5c4b5f7c84 in memory
flw f28, 0(x2) # load 0x1757ff5c4b5f7c84 from memory into f28
li x3, 0xd303b74e9cc89ef9 # load x3 with value 0xd303b74e9cc89ef9
sw x3, 0(x2) # store 0xd303b74e9cc89ef9 in memory
flw f30, 0(x2) # load 0xd303b74e9cc89ef9 from memory into f30
fmsub.s f5, f9, f28, f30 # perform operation

# Testcase cp_fs2 (Test source fs2 = f29)
li x4, 0x78084ff9efa8b49c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x9cc41991db1b0ebd # load x3 with value 0x9cc41991db1b0ebd
sw x3, 0(x2) # store 0x9cc41991db1b0ebd in memory
flw f9, 0(x2) # load 0x9cc41991db1b0ebd from memory into f9
li x3, 0xe2d8bf895c864067 # load x3 with value 0xe2d8bf895c864067
sw x3, 0(x2) # store 0xe2d8bf895c864067 in memory
flw f29, 0(x2) # load 0xe2d8bf895c864067 from memory into f29
li x3, 0x2394d5a23366fddc # load x3 with value 0x2394d5a23366fddc
sw x3, 0(x2) # store 0x2394d5a23366fddc in memory
flw f15, 0(x2) # load 0x2394d5a23366fddc from memory into f15
fmsub.s f4, f9, f29, f15 # perform operation

# Testcase cp_fs2 (Test source fs2 = f30)
li x23, 0x5377483336a87c5a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xf929d29becbac85 # load x3 with value 0xf929d29becbac85
sw x3, 0(x2) # store 0xf929d29becbac85 in memory
flw f26, 0(x2) # load 0xf929d29becbac85 from memory into f26
li x3, 0xc12e3f85621354cf # load x3 with value 0xc12e3f85621354cf
sw x3, 0(x2) # store 0xc12e3f85621354cf in memory
flw f30, 0(x2) # load 0xc12e3f85621354cf from memory into f30
li x3, 0x22c4ba27934abbdc # load x3 with value 0x22c4ba27934abbdc
sw x3, 0(x2) # store 0x22c4ba27934abbdc in memory
flw f4, 0(x2) # load 0x22c4ba27934abbdc from memory into f4
fmsub.s f23, f26, f30, f4 # perform operation

# Testcase cp_fs2 (Test source fs2 = f31)
li x22, 0x82903ecffe82cfc2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x92d65f1927dba963 # load x3 with value 0x92d65f1927dba963
sw x3, 0(x2) # store 0x92d65f1927dba963 in memory
flw f13, 0(x2) # load 0x92d65f1927dba963 from memory into f13
li x3, 0xe6792d3d46ae2452 # load x3 with value 0xe6792d3d46ae2452
sw x3, 0(x2) # store 0xe6792d3d46ae2452 in memory
flw f31, 0(x2) # load 0xe6792d3d46ae2452 from memory into f31
li x3, 0xda8012f76338dd17 # load x3 with value 0xda8012f76338dd17
sw x3, 0(x2) # store 0xda8012f76338dd17 in memory
flw f8, 0(x2) # load 0xda8012f76338dd17 from memory into f8
fmsub.s f22, f13, f31, f8 # perform operation

.EQU NUMTESTS,1


self_loop:
    j self_loop

.data

.align 4
scratch:
    .bss 8

.end
