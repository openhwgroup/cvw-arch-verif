///////////////////////////////////////////
// /home/jcassidy/cvw/addins/cvw-arch-verif/tests/lockstep/rv32/F/WALLY-COV-fnmsub.s.S
// David_Harris@hmc.edu

 # testgen_header.S
//
// Copyright (C) 2024 Harvey Mudd College & Oklahoma State University, Habib University, UET Lahore
//
// SPDX-License-Identifier: Apache-2.0 WITH SHL-2.1
///////////////////////////////////////////

#include "macros.h"

.section .text.init
.globl rvtest_entry_point

rvtest_entry_point:

# initialize signature pointer
la x4, begin_signature

    
# set mstatus.FS to 01 to enable fp
li t0,0x4000
csrs mstatus, t0


# Testcase cp_gpr/fpr_hazard nohaz test
add x31, x16, x13 # perform first operation
fnmsub.s f21, f23, f30, f18 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard nohaz test
add x29, x28, x16 # perform first operation
fnmsub.s f11, f19, f14, f17 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard nohaz test
add x30, x2, x27 # perform first operation
fnmsub.s f3, f24, f23, f14 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard raw test
fmul.s f1, f20, f28 # perform first operation
fnmsub.s f28, f1, f17, f19 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard raw test
fmul.s f29, f26, f12 # perform first operation
fnmsub.s f26, f17, f29, f31 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard raw test
fmul.s f25, f27, f30 # perform first operation
fnmsub.s f27, f5, f7, f25 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard waw test
fmul.s f8, f10, f1 # perform first operation
fnmsub.s f8, f16, f26, f13 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard waw test
fmul.s f18, f31, f27 # perform first operation
fnmsub.s f18, f26, f11, f8 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard waw test
fmul.s f11, f5, f16 # perform first operation
fnmsub.s f11, f10, f23, f30 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard war test
fmul.s f20, f7, f26 # perform first operation
fnmsub.s f7, f19, f14, f18 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard war test
fmul.s f20, f27, f2 # perform first operation
fnmsub.s f2, f7, f19, f17 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard war test
fmul.s f25, f3, f31 # perform first operation
fnmsub.s f29, f19, f15, f18 # perform second (triggering) operation

# Testcase cp_fs1 (Test source fs1 = f0)
la x2, scratch
li x3, 0xf1f80e2f # load x3 with value 0xf1f80e2f
sw x3, 0(x2) # store 0xf1f80e2f in memory
flw f0, 0(x2) # load 0xf1f80e2f from memory into f0
la x2, scratch
li x3, 0xb80cd327 # load x3 with value 0xb80cd327
sw x3, 0(x2) # store 0xb80cd327 in memory
flw f30, 0(x2) # load 0xb80cd327 from memory into f30
la x2, scratch
li x3, 0x5bdf67ad # load x3 with value 0x5bdf67ad
sw x3, 0(x2) # store 0x5bdf67ad in memory
flw f19, 0(x2) # load 0x5bdf67ad from memory into f19
fnmsub.s f10, f0, f30, f19 # perform operation

# Testcase cp_fs1 (Test source fs1 = f1)
la x2, scratch
li x3, 0xcd270f08 # load x3 with value 0xcd270f08
sw x3, 0(x2) # store 0xcd270f08 in memory
flw f1, 0(x2) # load 0xcd270f08 from memory into f1
la x2, scratch
li x3, 0x5f3d0b2b # load x3 with value 0x5f3d0b2b
sw x3, 0(x2) # store 0x5f3d0b2b in memory
flw f22, 0(x2) # load 0x5f3d0b2b from memory into f22
la x2, scratch
li x3, 0x817bfa29 # load x3 with value 0x817bfa29
sw x3, 0(x2) # store 0x817bfa29 in memory
flw f27, 0(x2) # load 0x817bfa29 from memory into f27
fnmsub.s f18, f1, f22, f27 # perform operation

# Testcase cp_fs1 (Test source fs1 = f2)
la x2, scratch
li x3, 0x92e76477 # load x3 with value 0x92e76477
sw x3, 0(x2) # store 0x92e76477 in memory
flw f2, 0(x2) # load 0x92e76477 from memory into f2
la x2, scratch
li x3, 0xa21451ad # load x3 with value 0xa21451ad
sw x3, 0(x2) # store 0xa21451ad in memory
flw f28, 0(x2) # load 0xa21451ad from memory into f28
la x2, scratch
li x3, 0x740f28b5 # load x3 with value 0x740f28b5
sw x3, 0(x2) # store 0x740f28b5 in memory
flw f8, 0(x2) # load 0x740f28b5 from memory into f8
fnmsub.s f22, f2, f28, f8 # perform operation

# Testcase cp_fs1 (Test source fs1 = f3)
la x2, scratch
li x3, 0x726924a0 # load x3 with value 0x726924a0
sw x3, 0(x2) # store 0x726924a0 in memory
flw f3, 0(x2) # load 0x726924a0 from memory into f3
la x2, scratch
li x3, 0x88b49645 # load x3 with value 0x88b49645
sw x3, 0(x2) # store 0x88b49645 in memory
flw f8, 0(x2) # load 0x88b49645 from memory into f8
la x2, scratch
li x3, 0x27d9bfcd # load x3 with value 0x27d9bfcd
sw x3, 0(x2) # store 0x27d9bfcd in memory
flw f12, 0(x2) # load 0x27d9bfcd from memory into f12
fnmsub.s f23, f3, f8, f12 # perform operation

# Testcase cp_fs1 (Test source fs1 = f4)
mv x5, x4 # switch signature pointer register to avoid conflict with test
la x2, scratch
li x3, 0xa6b3226e # load x3 with value 0xa6b3226e
sw x3, 0(x2) # store 0xa6b3226e in memory
flw f4, 0(x2) # load 0xa6b3226e from memory into f4
la x2, scratch
li x3, 0x7086f31a # load x3 with value 0x7086f31a
sw x3, 0(x2) # store 0x7086f31a in memory
flw f21, 0(x2) # load 0x7086f31a from memory into f21
la x2, scratch
li x3, 0xe864fad7 # load x3 with value 0xe864fad7
sw x3, 0(x2) # store 0xe864fad7 in memory
flw f31, 0(x2) # load 0xe864fad7 from memory into f31
fnmsub.s f8, f4, f21, f31 # perform operation

# Testcase cp_fs1 (Test source fs1 = f5)
mv x6, x5 # switch signature pointer register to avoid conflict with test
la x2, scratch
li x3, 0x52bbf94a # load x3 with value 0x52bbf94a
sw x3, 0(x2) # store 0x52bbf94a in memory
flw f5, 0(x2) # load 0x52bbf94a from memory into f5
la x2, scratch
li x3, 0xb17dde5b # load x3 with value 0xb17dde5b
sw x3, 0(x2) # store 0xb17dde5b in memory
flw f29, 0(x2) # load 0xb17dde5b from memory into f29
la x2, scratch
li x3, 0xb9af7da7 # load x3 with value 0xb9af7da7
sw x3, 0(x2) # store 0xb9af7da7 in memory
flw f18, 0(x2) # load 0xb9af7da7 from memory into f18
fnmsub.s f16, f5, f29, f18 # perform operation

# Testcase cp_fs1 (Test source fs1 = f6)
mv x7, x6 # switch signature pointer register to avoid conflict with test
la x2, scratch
li x3, 0x0a9e7835 # load x3 with value 0x0a9e7835
sw x3, 0(x2) # store 0x0a9e7835 in memory
flw f6, 0(x2) # load 0x0a9e7835 from memory into f6
la x2, scratch
li x3, 0xd2d52498 # load x3 with value 0xd2d52498
sw x3, 0(x2) # store 0xd2d52498 in memory
flw f22, 0(x2) # load 0xd2d52498 from memory into f22
la x2, scratch
li x3, 0x599106d5 # load x3 with value 0x599106d5
sw x3, 0(x2) # store 0x599106d5 in memory
flw f18, 0(x2) # load 0x599106d5 from memory into f18
fnmsub.s f12, f6, f22, f18 # perform operation

# Testcase cp_fs1 (Test source fs1 = f7)
mv x4, x7 # switch signature pointer register to avoid conflict with test
la x2, scratch
li x3, 0x726d5064 # load x3 with value 0x726d5064
sw x3, 0(x2) # store 0x726d5064 in memory
flw f7, 0(x2) # load 0x726d5064 from memory into f7
la x2, scratch
li x3, 0x1566f657 # load x3 with value 0x1566f657
sw x3, 0(x2) # store 0x1566f657 in memory
flw f16, 0(x2) # load 0x1566f657 from memory into f16
la x2, scratch
li x3, 0x6f6049d0 # load x3 with value 0x6f6049d0
sw x3, 0(x2) # store 0x6f6049d0 in memory
flw f19, 0(x2) # load 0x6f6049d0 from memory into f19
fnmsub.s f23, f7, f16, f19 # perform operation

# Testcase cp_fs1 (Test source fs1 = f8)
la x2, scratch
li x3, 0x46e1ba12 # load x3 with value 0x46e1ba12
sw x3, 0(x2) # store 0x46e1ba12 in memory
flw f8, 0(x2) # load 0x46e1ba12 from memory into f8
la x2, scratch
li x3, 0xc7b539e0 # load x3 with value 0xc7b539e0
sw x3, 0(x2) # store 0xc7b539e0 in memory
flw f10, 0(x2) # load 0xc7b539e0 from memory into f10
la x2, scratch
li x3, 0x006d3f74 # load x3 with value 0x006d3f74
sw x3, 0(x2) # store 0x006d3f74 in memory
flw f30, 0(x2) # load 0x006d3f74 from memory into f30
fnmsub.s f18, f8, f10, f30 # perform operation

# Testcase cp_fs1 (Test source fs1 = f9)
la x2, scratch
li x3, 0xe0c53ef9 # load x3 with value 0xe0c53ef9
sw x3, 0(x2) # store 0xe0c53ef9 in memory
flw f9, 0(x2) # load 0xe0c53ef9 from memory into f9
la x2, scratch
li x3, 0x798d06cf # load x3 with value 0x798d06cf
sw x3, 0(x2) # store 0x798d06cf in memory
flw f5, 0(x2) # load 0x798d06cf from memory into f5
la x2, scratch
li x3, 0x06a39693 # load x3 with value 0x06a39693
sw x3, 0(x2) # store 0x06a39693 in memory
flw f10, 0(x2) # load 0x06a39693 from memory into f10
fnmsub.s f9, f9, f5, f10 # perform operation

# Testcase cp_fs1 (Test source fs1 = f10)
la x2, scratch
li x3, 0xd223ac7c # load x3 with value 0xd223ac7c
sw x3, 0(x2) # store 0xd223ac7c in memory
flw f10, 0(x2) # load 0xd223ac7c from memory into f10
la x2, scratch
li x3, 0x09ee863d # load x3 with value 0x09ee863d
sw x3, 0(x2) # store 0x09ee863d in memory
flw f11, 0(x2) # load 0x09ee863d from memory into f11
la x2, scratch
li x3, 0xe1a79029 # load x3 with value 0xe1a79029
sw x3, 0(x2) # store 0xe1a79029 in memory
flw f31, 0(x2) # load 0xe1a79029 from memory into f31
fnmsub.s f17, f10, f11, f31 # perform operation

# Testcase cp_fs1 (Test source fs1 = f11)
la x2, scratch
li x3, 0xb8f1c4ae # load x3 with value 0xb8f1c4ae
sw x3, 0(x2) # store 0xb8f1c4ae in memory
flw f11, 0(x2) # load 0xb8f1c4ae from memory into f11
la x2, scratch
li x3, 0x279d1b47 # load x3 with value 0x279d1b47
sw x3, 0(x2) # store 0x279d1b47 in memory
flw f21, 0(x2) # load 0x279d1b47 from memory into f21
la x2, scratch
li x3, 0x4df5337b # load x3 with value 0x4df5337b
sw x3, 0(x2) # store 0x4df5337b in memory
flw f20, 0(x2) # load 0x4df5337b from memory into f20
fnmsub.s f27, f11, f21, f20 # perform operation

# Testcase cp_fs1 (Test source fs1 = f12)
la x2, scratch
li x3, 0x9e1bac09 # load x3 with value 0x9e1bac09
sw x3, 0(x2) # store 0x9e1bac09 in memory
flw f12, 0(x2) # load 0x9e1bac09 from memory into f12
la x2, scratch
li x3, 0x5fa70b50 # load x3 with value 0x5fa70b50
sw x3, 0(x2) # store 0x5fa70b50 in memory
flw f6, 0(x2) # load 0x5fa70b50 from memory into f6
la x2, scratch
li x3, 0x6182e466 # load x3 with value 0x6182e466
sw x3, 0(x2) # store 0x6182e466 in memory
flw f1, 0(x2) # load 0x6182e466 from memory into f1
fnmsub.s f5, f12, f6, f1 # perform operation

# Testcase cp_fs1 (Test source fs1 = f13)
la x2, scratch
li x3, 0x84562f97 # load x3 with value 0x84562f97
sw x3, 0(x2) # store 0x84562f97 in memory
flw f13, 0(x2) # load 0x84562f97 from memory into f13
la x2, scratch
li x3, 0xc3d611a4 # load x3 with value 0xc3d611a4
sw x3, 0(x2) # store 0xc3d611a4 in memory
flw f5, 0(x2) # load 0xc3d611a4 from memory into f5
la x2, scratch
li x3, 0xaa33dcdf # load x3 with value 0xaa33dcdf
sw x3, 0(x2) # store 0xaa33dcdf in memory
flw f11, 0(x2) # load 0xaa33dcdf from memory into f11
fnmsub.s f31, f13, f5, f11 # perform operation

# Testcase cp_fs1 (Test source fs1 = f14)
la x2, scratch
li x3, 0x822508df # load x3 with value 0x822508df
sw x3, 0(x2) # store 0x822508df in memory
flw f14, 0(x2) # load 0x822508df from memory into f14
la x2, scratch
li x3, 0x0c6d0c81 # load x3 with value 0x0c6d0c81
sw x3, 0(x2) # store 0x0c6d0c81 in memory
flw f29, 0(x2) # load 0x0c6d0c81 from memory into f29
la x2, scratch
li x3, 0xa6006f34 # load x3 with value 0xa6006f34
sw x3, 0(x2) # store 0xa6006f34 in memory
flw f27, 0(x2) # load 0xa6006f34 from memory into f27
fnmsub.s f20, f14, f29, f27 # perform operation

# Testcase cp_fs1 (Test source fs1 = f15)
la x2, scratch
li x3, 0x74eaac5c # load x3 with value 0x74eaac5c
sw x3, 0(x2) # store 0x74eaac5c in memory
flw f15, 0(x2) # load 0x74eaac5c from memory into f15
la x2, scratch
li x3, 0xa311a9ad # load x3 with value 0xa311a9ad
sw x3, 0(x2) # store 0xa311a9ad in memory
flw f21, 0(x2) # load 0xa311a9ad from memory into f21
la x2, scratch
li x3, 0x84040ba5 # load x3 with value 0x84040ba5
sw x3, 0(x2) # store 0x84040ba5 in memory
flw f18, 0(x2) # load 0x84040ba5 from memory into f18
fnmsub.s f25, f15, f21, f18 # perform operation

# Testcase cp_fs1 (Test source fs1 = f16)
la x2, scratch
li x3, 0xacb6788b # load x3 with value 0xacb6788b
sw x3, 0(x2) # store 0xacb6788b in memory
flw f16, 0(x2) # load 0xacb6788b from memory into f16
la x2, scratch
li x3, 0x5e88f9ad # load x3 with value 0x5e88f9ad
sw x3, 0(x2) # store 0x5e88f9ad in memory
flw f15, 0(x2) # load 0x5e88f9ad from memory into f15
la x2, scratch
li x3, 0xd4353feb # load x3 with value 0xd4353feb
sw x3, 0(x2) # store 0xd4353feb in memory
flw f6, 0(x2) # load 0xd4353feb from memory into f6
fnmsub.s f27, f16, f15, f6 # perform operation

# Testcase cp_fs1 (Test source fs1 = f17)
la x2, scratch
li x3, 0xbed1d73c # load x3 with value 0xbed1d73c
sw x3, 0(x2) # store 0xbed1d73c in memory
flw f17, 0(x2) # load 0xbed1d73c from memory into f17
la x2, scratch
li x3, 0xb7bb2fc2 # load x3 with value 0xb7bb2fc2
sw x3, 0(x2) # store 0xb7bb2fc2 in memory
flw f5, 0(x2) # load 0xb7bb2fc2 from memory into f5
la x2, scratch
li x3, 0x9a2be633 # load x3 with value 0x9a2be633
sw x3, 0(x2) # store 0x9a2be633 in memory
flw f26, 0(x2) # load 0x9a2be633 from memory into f26
fnmsub.s f30, f17, f5, f26 # perform operation

# Testcase cp_fs1 (Test source fs1 = f18)
la x2, scratch
li x3, 0xdab0f340 # load x3 with value 0xdab0f340
sw x3, 0(x2) # store 0xdab0f340 in memory
flw f18, 0(x2) # load 0xdab0f340 from memory into f18
la x2, scratch
li x3, 0x4ae0a161 # load x3 with value 0x4ae0a161
sw x3, 0(x2) # store 0x4ae0a161 in memory
flw f2, 0(x2) # load 0x4ae0a161 from memory into f2
la x2, scratch
li x3, 0xab74bdde # load x3 with value 0xab74bdde
sw x3, 0(x2) # store 0xab74bdde in memory
flw f29, 0(x2) # load 0xab74bdde from memory into f29
fnmsub.s f22, f18, f2, f29 # perform operation

# Testcase cp_fs1 (Test source fs1 = f19)
la x2, scratch
li x3, 0x71b480bb # load x3 with value 0x71b480bb
sw x3, 0(x2) # store 0x71b480bb in memory
flw f19, 0(x2) # load 0x71b480bb from memory into f19
la x2, scratch
li x3, 0x07ab7b5f # load x3 with value 0x07ab7b5f
sw x3, 0(x2) # store 0x07ab7b5f in memory
flw f24, 0(x2) # load 0x07ab7b5f from memory into f24
la x2, scratch
li x3, 0x21c3929f # load x3 with value 0x21c3929f
sw x3, 0(x2) # store 0x21c3929f in memory
flw f15, 0(x2) # load 0x21c3929f from memory into f15
fnmsub.s f26, f19, f24, f15 # perform operation

# Testcase cp_fs1 (Test source fs1 = f20)
la x2, scratch
li x3, 0x9aa137a1 # load x3 with value 0x9aa137a1
sw x3, 0(x2) # store 0x9aa137a1 in memory
flw f20, 0(x2) # load 0x9aa137a1 from memory into f20
la x2, scratch
li x3, 0xaf3f3462 # load x3 with value 0xaf3f3462
sw x3, 0(x2) # store 0xaf3f3462 in memory
flw f11, 0(x2) # load 0xaf3f3462 from memory into f11
la x2, scratch
li x3, 0xb35a80b3 # load x3 with value 0xb35a80b3
sw x3, 0(x2) # store 0xb35a80b3 in memory
flw f3, 0(x2) # load 0xb35a80b3 from memory into f3
fnmsub.s f10, f20, f11, f3 # perform operation

# Testcase cp_fs1 (Test source fs1 = f21)
la x2, scratch
li x3, 0xfe4f29de # load x3 with value 0xfe4f29de
sw x3, 0(x2) # store 0xfe4f29de in memory
flw f21, 0(x2) # load 0xfe4f29de from memory into f21
la x2, scratch
li x3, 0x9a6165bb # load x3 with value 0x9a6165bb
sw x3, 0(x2) # store 0x9a6165bb in memory
flw f12, 0(x2) # load 0x9a6165bb from memory into f12
la x2, scratch
li x3, 0x5359fd94 # load x3 with value 0x5359fd94
sw x3, 0(x2) # store 0x5359fd94 in memory
flw f24, 0(x2) # load 0x5359fd94 from memory into f24
fnmsub.s f31, f21, f12, f24 # perform operation

# Testcase cp_fs1 (Test source fs1 = f22)
la x2, scratch
li x3, 0xc3db0935 # load x3 with value 0xc3db0935
sw x3, 0(x2) # store 0xc3db0935 in memory
flw f22, 0(x2) # load 0xc3db0935 from memory into f22
la x2, scratch
li x3, 0x74777f63 # load x3 with value 0x74777f63
sw x3, 0(x2) # store 0x74777f63 in memory
flw f15, 0(x2) # load 0x74777f63 from memory into f15
la x2, scratch
li x3, 0x0555a270 # load x3 with value 0x0555a270
sw x3, 0(x2) # store 0x0555a270 in memory
flw f1, 0(x2) # load 0x0555a270 from memory into f1
fnmsub.s f20, f22, f15, f1 # perform operation

# Testcase cp_fs1 (Test source fs1 = f23)
la x2, scratch
li x3, 0x4a214602 # load x3 with value 0x4a214602
sw x3, 0(x2) # store 0x4a214602 in memory
flw f23, 0(x2) # load 0x4a214602 from memory into f23
la x2, scratch
li x3, 0x292f6274 # load x3 with value 0x292f6274
sw x3, 0(x2) # store 0x292f6274 in memory
flw f17, 0(x2) # load 0x292f6274 from memory into f17
la x2, scratch
li x3, 0x14e7c51e # load x3 with value 0x14e7c51e
sw x3, 0(x2) # store 0x14e7c51e in memory
flw f11, 0(x2) # load 0x14e7c51e from memory into f11
fnmsub.s f3, f23, f17, f11 # perform operation

# Testcase cp_fs1 (Test source fs1 = f24)
la x2, scratch
li x3, 0x89e89b3d # load x3 with value 0x89e89b3d
sw x3, 0(x2) # store 0x89e89b3d in memory
flw f24, 0(x2) # load 0x89e89b3d from memory into f24
la x2, scratch
li x3, 0x796f1156 # load x3 with value 0x796f1156
sw x3, 0(x2) # store 0x796f1156 in memory
flw f2, 0(x2) # load 0x796f1156 from memory into f2
la x2, scratch
li x3, 0xb67a6f8b # load x3 with value 0xb67a6f8b
sw x3, 0(x2) # store 0xb67a6f8b in memory
flw f7, 0(x2) # load 0xb67a6f8b from memory into f7
fnmsub.s f5, f24, f2, f7 # perform operation

# Testcase cp_fs1 (Test source fs1 = f25)
la x2, scratch
li x3, 0x03fae4bf # load x3 with value 0x03fae4bf
sw x3, 0(x2) # store 0x03fae4bf in memory
flw f25, 0(x2) # load 0x03fae4bf from memory into f25
la x2, scratch
li x3, 0x6c167757 # load x3 with value 0x6c167757
sw x3, 0(x2) # store 0x6c167757 in memory
flw f10, 0(x2) # load 0x6c167757 from memory into f10
la x2, scratch
li x3, 0xeb6ee3c1 # load x3 with value 0xeb6ee3c1
sw x3, 0(x2) # store 0xeb6ee3c1 in memory
flw f24, 0(x2) # load 0xeb6ee3c1 from memory into f24
fnmsub.s f19, f25, f10, f24 # perform operation

# Testcase cp_fs1 (Test source fs1 = f26)
la x2, scratch
li x3, 0x043c560f # load x3 with value 0x043c560f
sw x3, 0(x2) # store 0x043c560f in memory
flw f26, 0(x2) # load 0x043c560f from memory into f26
la x2, scratch
li x3, 0xe5866412 # load x3 with value 0xe5866412
sw x3, 0(x2) # store 0xe5866412 in memory
flw f3, 0(x2) # load 0xe5866412 from memory into f3
la x2, scratch
li x3, 0x56b2091a # load x3 with value 0x56b2091a
sw x3, 0(x2) # store 0x56b2091a in memory
flw f9, 0(x2) # load 0x56b2091a from memory into f9
fnmsub.s f1, f26, f3, f9 # perform operation

# Testcase cp_fs1 (Test source fs1 = f27)
la x2, scratch
li x3, 0x48323377 # load x3 with value 0x48323377
sw x3, 0(x2) # store 0x48323377 in memory
flw f27, 0(x2) # load 0x48323377 from memory into f27
la x2, scratch
li x3, 0x63ff65bd # load x3 with value 0x63ff65bd
sw x3, 0(x2) # store 0x63ff65bd in memory
flw f29, 0(x2) # load 0x63ff65bd from memory into f29
la x2, scratch
li x3, 0x971dd31f # load x3 with value 0x971dd31f
sw x3, 0(x2) # store 0x971dd31f in memory
flw f13, 0(x2) # load 0x971dd31f from memory into f13
fnmsub.s f2, f27, f29, f13 # perform operation

# Testcase cp_fs1 (Test source fs1 = f28)
la x2, scratch
li x3, 0xbdf8808a # load x3 with value 0xbdf8808a
sw x3, 0(x2) # store 0xbdf8808a in memory
flw f28, 0(x2) # load 0xbdf8808a from memory into f28
la x2, scratch
li x3, 0x67550447 # load x3 with value 0x67550447
sw x3, 0(x2) # store 0x67550447 in memory
flw f25, 0(x2) # load 0x67550447 from memory into f25
la x2, scratch
li x3, 0xd87de657 # load x3 with value 0xd87de657
sw x3, 0(x2) # store 0xd87de657 in memory
flw f20, 0(x2) # load 0xd87de657 from memory into f20
fnmsub.s f7, f28, f25, f20 # perform operation

# Testcase cp_fs1 (Test source fs1 = f29)
la x2, scratch
li x3, 0xf4a2444e # load x3 with value 0xf4a2444e
sw x3, 0(x2) # store 0xf4a2444e in memory
flw f29, 0(x2) # load 0xf4a2444e from memory into f29
la x2, scratch
li x3, 0xb97ed6c4 # load x3 with value 0xb97ed6c4
sw x3, 0(x2) # store 0xb97ed6c4 in memory
flw f28, 0(x2) # load 0xb97ed6c4 from memory into f28
la x2, scratch
li x3, 0x62280245 # load x3 with value 0x62280245
sw x3, 0(x2) # store 0x62280245 in memory
flw f18, 0(x2) # load 0x62280245 from memory into f18
fnmsub.s f29, f29, f28, f18 # perform operation

# Testcase cp_fs1 (Test source fs1 = f30)
la x2, scratch
li x3, 0x30984b2d # load x3 with value 0x30984b2d
sw x3, 0(x2) # store 0x30984b2d in memory
flw f30, 0(x2) # load 0x30984b2d from memory into f30
la x2, scratch
li x3, 0x70c0d422 # load x3 with value 0x70c0d422
sw x3, 0(x2) # store 0x70c0d422 in memory
flw f21, 0(x2) # load 0x70c0d422 from memory into f21
la x2, scratch
li x3, 0x4446d2f7 # load x3 with value 0x4446d2f7
sw x3, 0(x2) # store 0x4446d2f7 in memory
flw f17, 0(x2) # load 0x4446d2f7 from memory into f17
fnmsub.s f22, f30, f21, f17 # perform operation

# Testcase cp_fs1 (Test source fs1 = f31)
la x2, scratch
li x3, 0xf4fca458 # load x3 with value 0xf4fca458
sw x3, 0(x2) # store 0xf4fca458 in memory
flw f31, 0(x2) # load 0xf4fca458 from memory into f31
la x2, scratch
li x3, 0x6d7aec44 # load x3 with value 0x6d7aec44
sw x3, 0(x2) # store 0x6d7aec44 in memory
flw f5, 0(x2) # load 0x6d7aec44 from memory into f5
la x2, scratch
li x3, 0x1affcf9f # load x3 with value 0x1affcf9f
sw x3, 0(x2) # store 0x1affcf9f in memory
flw f11, 0(x2) # load 0x1affcf9f from memory into f11
fnmsub.s f2, f31, f5, f11 # perform operation

# Testcase cp_fs2 (Test source fs2 = f0)
la x2, scratch
li x3, 0x2035120a # load x3 with value 0x2035120a
sw x3, 0(x2) # store 0x2035120a in memory
flw f22, 0(x2) # load 0x2035120a from memory into f22
la x2, scratch
li x3, 0x1cacd299 # load x3 with value 0x1cacd299
sw x3, 0(x2) # store 0x1cacd299 in memory
flw f0, 0(x2) # load 0x1cacd299 from memory into f0
la x2, scratch
li x3, 0xd2f16f7e # load x3 with value 0xd2f16f7e
sw x3, 0(x2) # store 0xd2f16f7e in memory
flw f10, 0(x2) # load 0xd2f16f7e from memory into f10
fnmsub.s f30, f22, f0, f10 # perform operation

# Testcase cp_fs2 (Test source fs2 = f1)
la x2, scratch
li x3, 0x89f618e4 # load x3 with value 0x89f618e4
sw x3, 0(x2) # store 0x89f618e4 in memory
flw f31, 0(x2) # load 0x89f618e4 from memory into f31
la x2, scratch
li x3, 0xa26aac8a # load x3 with value 0xa26aac8a
sw x3, 0(x2) # store 0xa26aac8a in memory
flw f1, 0(x2) # load 0xa26aac8a from memory into f1
la x2, scratch
li x3, 0xf465fd84 # load x3 with value 0xf465fd84
sw x3, 0(x2) # store 0xf465fd84 in memory
flw f17, 0(x2) # load 0xf465fd84 from memory into f17
fnmsub.s f12, f31, f1, f17 # perform operation

# Testcase cp_fs2 (Test source fs2 = f2)
la x2, scratch
li x3, 0x6da25842 # load x3 with value 0x6da25842
sw x3, 0(x2) # store 0x6da25842 in memory
flw f1, 0(x2) # load 0x6da25842 from memory into f1
la x2, scratch
li x3, 0xff9b2f70 # load x3 with value 0xff9b2f70
sw x3, 0(x2) # store 0xff9b2f70 in memory
flw f2, 0(x2) # load 0xff9b2f70 from memory into f2
la x2, scratch
li x3, 0x6cf617f7 # load x3 with value 0x6cf617f7
sw x3, 0(x2) # store 0x6cf617f7 in memory
flw f6, 0(x2) # load 0x6cf617f7 from memory into f6
fnmsub.s f10, f1, f2, f6 # perform operation

# Testcase cp_fs2 (Test source fs2 = f3)
la x2, scratch
li x3, 0x591b0561 # load x3 with value 0x591b0561
sw x3, 0(x2) # store 0x591b0561 in memory
flw f31, 0(x2) # load 0x591b0561 from memory into f31
la x2, scratch
li x3, 0xd55ac37c # load x3 with value 0xd55ac37c
sw x3, 0(x2) # store 0xd55ac37c in memory
flw f3, 0(x2) # load 0xd55ac37c from memory into f3
la x2, scratch
li x3, 0xbd9999eb # load x3 with value 0xbd9999eb
sw x3, 0(x2) # store 0xbd9999eb in memory
flw f13, 0(x2) # load 0xbd9999eb from memory into f13
fnmsub.s f30, f31, f3, f13 # perform operation

# Testcase cp_fs2 (Test source fs2 = f4)
mv x5, x4 # switch signature pointer register to avoid conflict with test
la x2, scratch
li x3, 0x83c398bf # load x3 with value 0x83c398bf
sw x3, 0(x2) # store 0x83c398bf in memory
flw f2, 0(x2) # load 0x83c398bf from memory into f2
la x2, scratch
li x3, 0xbff81428 # load x3 with value 0xbff81428
sw x3, 0(x2) # store 0xbff81428 in memory
flw f4, 0(x2) # load 0xbff81428 from memory into f4
la x2, scratch
li x3, 0x9b1f0c9a # load x3 with value 0x9b1f0c9a
sw x3, 0(x2) # store 0x9b1f0c9a in memory
flw f20, 0(x2) # load 0x9b1f0c9a from memory into f20
fnmsub.s f3, f2, f4, f20 # perform operation

# Testcase cp_fs2 (Test source fs2 = f5)
mv x6, x5 # switch signature pointer register to avoid conflict with test
la x2, scratch
li x3, 0xc89916fe # load x3 with value 0xc89916fe
sw x3, 0(x2) # store 0xc89916fe in memory
flw f27, 0(x2) # load 0xc89916fe from memory into f27
la x2, scratch
li x3, 0xeba0d0d3 # load x3 with value 0xeba0d0d3
sw x3, 0(x2) # store 0xeba0d0d3 in memory
flw f5, 0(x2) # load 0xeba0d0d3 from memory into f5
la x2, scratch
li x3, 0xfc840509 # load x3 with value 0xfc840509
sw x3, 0(x2) # store 0xfc840509 in memory
flw f25, 0(x2) # load 0xfc840509 from memory into f25
fnmsub.s f31, f27, f5, f25 # perform operation

# Testcase cp_fs2 (Test source fs2 = f6)
mv x7, x6 # switch signature pointer register to avoid conflict with test
la x2, scratch
li x3, 0x40e8ed71 # load x3 with value 0x40e8ed71
sw x3, 0(x2) # store 0x40e8ed71 in memory
flw f5, 0(x2) # load 0x40e8ed71 from memory into f5
la x2, scratch
li x3, 0x9bfed65e # load x3 with value 0x9bfed65e
sw x3, 0(x2) # store 0x9bfed65e in memory
flw f6, 0(x2) # load 0x9bfed65e from memory into f6
la x2, scratch
li x3, 0xaa0627f2 # load x3 with value 0xaa0627f2
sw x3, 0(x2) # store 0xaa0627f2 in memory
flw f27, 0(x2) # load 0xaa0627f2 from memory into f27
fnmsub.s f2, f5, f6, f27 # perform operation

# Testcase cp_fs2 (Test source fs2 = f7)
mv x4, x7 # switch signature pointer register to avoid conflict with test
la x2, scratch
li x3, 0x1013128d # load x3 with value 0x1013128d
sw x3, 0(x2) # store 0x1013128d in memory
flw f19, 0(x2) # load 0x1013128d from memory into f19
la x2, scratch
li x3, 0x6c0a1341 # load x3 with value 0x6c0a1341
sw x3, 0(x2) # store 0x6c0a1341 in memory
flw f7, 0(x2) # load 0x6c0a1341 from memory into f7
la x2, scratch
li x3, 0xd02cdca6 # load x3 with value 0xd02cdca6
sw x3, 0(x2) # store 0xd02cdca6 in memory
flw f20, 0(x2) # load 0xd02cdca6 from memory into f20
fnmsub.s f21, f19, f7, f20 # perform operation

# Testcase cp_fs2 (Test source fs2 = f8)
la x2, scratch
li x3, 0xff7d9bb3 # load x3 with value 0xff7d9bb3
sw x3, 0(x2) # store 0xff7d9bb3 in memory
flw f1, 0(x2) # load 0xff7d9bb3 from memory into f1
la x2, scratch
li x3, 0x9dd86b44 # load x3 with value 0x9dd86b44
sw x3, 0(x2) # store 0x9dd86b44 in memory
flw f8, 0(x2) # load 0x9dd86b44 from memory into f8
la x2, scratch
li x3, 0xfcb6ce21 # load x3 with value 0xfcb6ce21
sw x3, 0(x2) # store 0xfcb6ce21 in memory
flw f12, 0(x2) # load 0xfcb6ce21 from memory into f12
fnmsub.s f15, f1, f8, f12 # perform operation

# Testcase cp_fs2 (Test source fs2 = f9)
la x2, scratch
li x3, 0xca63bdfe # load x3 with value 0xca63bdfe
sw x3, 0(x2) # store 0xca63bdfe in memory
flw f10, 0(x2) # load 0xca63bdfe from memory into f10
la x2, scratch
li x3, 0x4620b8fd # load x3 with value 0x4620b8fd
sw x3, 0(x2) # store 0x4620b8fd in memory
flw f9, 0(x2) # load 0x4620b8fd from memory into f9
la x2, scratch
li x3, 0x23720c46 # load x3 with value 0x23720c46
sw x3, 0(x2) # store 0x23720c46 in memory
flw f16, 0(x2) # load 0x23720c46 from memory into f16
fnmsub.s f7, f10, f9, f16 # perform operation

# Testcase cp_fs2 (Test source fs2 = f10)
la x2, scratch
li x3, 0x8ddf9b6c # load x3 with value 0x8ddf9b6c
sw x3, 0(x2) # store 0x8ddf9b6c in memory
flw f7, 0(x2) # load 0x8ddf9b6c from memory into f7
la x2, scratch
li x3, 0x2260f41d # load x3 with value 0x2260f41d
sw x3, 0(x2) # store 0x2260f41d in memory
flw f10, 0(x2) # load 0x2260f41d from memory into f10
la x2, scratch
li x3, 0x0ce022ce # load x3 with value 0x0ce022ce
sw x3, 0(x2) # store 0x0ce022ce in memory
flw f23, 0(x2) # load 0x0ce022ce from memory into f23
fnmsub.s f31, f7, f10, f23 # perform operation

# Testcase cp_fs2 (Test source fs2 = f11)
la x2, scratch
li x3, 0x4529f9ec # load x3 with value 0x4529f9ec
sw x3, 0(x2) # store 0x4529f9ec in memory
flw f19, 0(x2) # load 0x4529f9ec from memory into f19
la x2, scratch
li x3, 0xf50f1ca8 # load x3 with value 0xf50f1ca8
sw x3, 0(x2) # store 0xf50f1ca8 in memory
flw f11, 0(x2) # load 0xf50f1ca8 from memory into f11
la x2, scratch
li x3, 0x46f94461 # load x3 with value 0x46f94461
sw x3, 0(x2) # store 0x46f94461 in memory
flw f5, 0(x2) # load 0x46f94461 from memory into f5
fnmsub.s f16, f19, f11, f5 # perform operation

# Testcase cp_fs2 (Test source fs2 = f12)
la x2, scratch
li x3, 0xc240658b # load x3 with value 0xc240658b
sw x3, 0(x2) # store 0xc240658b in memory
flw f20, 0(x2) # load 0xc240658b from memory into f20
la x2, scratch
li x3, 0x77977467 # load x3 with value 0x77977467
sw x3, 0(x2) # store 0x77977467 in memory
flw f12, 0(x2) # load 0x77977467 from memory into f12
la x2, scratch
li x3, 0x26c5c063 # load x3 with value 0x26c5c063
sw x3, 0(x2) # store 0x26c5c063 in memory
flw f23, 0(x2) # load 0x26c5c063 from memory into f23
fnmsub.s f17, f20, f12, f23 # perform operation

# Testcase cp_fs2 (Test source fs2 = f13)
la x2, scratch
li x3, 0x0d61a3aa # load x3 with value 0x0d61a3aa
sw x3, 0(x2) # store 0x0d61a3aa in memory
flw f26, 0(x2) # load 0x0d61a3aa from memory into f26
la x2, scratch
li x3, 0x4574f793 # load x3 with value 0x4574f793
sw x3, 0(x2) # store 0x4574f793 in memory
flw f13, 0(x2) # load 0x4574f793 from memory into f13
la x2, scratch
li x3, 0x72496e81 # load x3 with value 0x72496e81
sw x3, 0(x2) # store 0x72496e81 in memory
flw f11, 0(x2) # load 0x72496e81 from memory into f11
fnmsub.s f13, f26, f13, f11 # perform operation

# Testcase cp_fs2 (Test source fs2 = f14)
la x2, scratch
li x3, 0x4ff163c1 # load x3 with value 0x4ff163c1
sw x3, 0(x2) # store 0x4ff163c1 in memory
flw f2, 0(x2) # load 0x4ff163c1 from memory into f2
la x2, scratch
li x3, 0x28e9b75d # load x3 with value 0x28e9b75d
sw x3, 0(x2) # store 0x28e9b75d in memory
flw f14, 0(x2) # load 0x28e9b75d from memory into f14
la x2, scratch
li x3, 0xed828099 # load x3 with value 0xed828099
sw x3, 0(x2) # store 0xed828099 in memory
flw f3, 0(x2) # load 0xed828099 from memory into f3
fnmsub.s f26, f2, f14, f3 # perform operation

# Testcase cp_fs2 (Test source fs2 = f15)
la x2, scratch
li x3, 0x4b4c6817 # load x3 with value 0x4b4c6817
sw x3, 0(x2) # store 0x4b4c6817 in memory
flw f12, 0(x2) # load 0x4b4c6817 from memory into f12
la x2, scratch
li x3, 0xb360f884 # load x3 with value 0xb360f884
sw x3, 0(x2) # store 0xb360f884 in memory
flw f15, 0(x2) # load 0xb360f884 from memory into f15
la x2, scratch
li x3, 0xe06c356e # load x3 with value 0xe06c356e
sw x3, 0(x2) # store 0xe06c356e in memory
flw f7, 0(x2) # load 0xe06c356e from memory into f7
fnmsub.s f29, f12, f15, f7 # perform operation

# Testcase cp_fs2 (Test source fs2 = f16)
la x2, scratch
li x3, 0x0b29ed09 # load x3 with value 0x0b29ed09
sw x3, 0(x2) # store 0x0b29ed09 in memory
flw f15, 0(x2) # load 0x0b29ed09 from memory into f15
la x2, scratch
li x3, 0x44ee2c39 # load x3 with value 0x44ee2c39
sw x3, 0(x2) # store 0x44ee2c39 in memory
flw f16, 0(x2) # load 0x44ee2c39 from memory into f16
la x2, scratch
li x3, 0x068f7b01 # load x3 with value 0x068f7b01
sw x3, 0(x2) # store 0x068f7b01 in memory
flw f11, 0(x2) # load 0x068f7b01 from memory into f11
fnmsub.s f7, f15, f16, f11 # perform operation

# Testcase cp_fs2 (Test source fs2 = f17)
la x2, scratch
li x3, 0x0fc2dcec # load x3 with value 0x0fc2dcec
sw x3, 0(x2) # store 0x0fc2dcec in memory
flw f11, 0(x2) # load 0x0fc2dcec from memory into f11
la x2, scratch
li x3, 0x493d7bdb # load x3 with value 0x493d7bdb
sw x3, 0(x2) # store 0x493d7bdb in memory
flw f17, 0(x2) # load 0x493d7bdb from memory into f17
la x2, scratch
li x3, 0xc03e3dc6 # load x3 with value 0xc03e3dc6
sw x3, 0(x2) # store 0xc03e3dc6 in memory
flw f24, 0(x2) # load 0xc03e3dc6 from memory into f24
fnmsub.s f27, f11, f17, f24 # perform operation

# Testcase cp_fs2 (Test source fs2 = f18)
la x2, scratch
li x3, 0x28db6570 # load x3 with value 0x28db6570
sw x3, 0(x2) # store 0x28db6570 in memory
flw f21, 0(x2) # load 0x28db6570 from memory into f21
la x2, scratch
li x3, 0x1d6e7dc7 # load x3 with value 0x1d6e7dc7
sw x3, 0(x2) # store 0x1d6e7dc7 in memory
flw f18, 0(x2) # load 0x1d6e7dc7 from memory into f18
la x2, scratch
li x3, 0x74cbaa1f # load x3 with value 0x74cbaa1f
sw x3, 0(x2) # store 0x74cbaa1f in memory
flw f19, 0(x2) # load 0x74cbaa1f from memory into f19
fnmsub.s f7, f21, f18, f19 # perform operation

# Testcase cp_fs2 (Test source fs2 = f19)
la x2, scratch
li x3, 0xe6ce8c63 # load x3 with value 0xe6ce8c63
sw x3, 0(x2) # store 0xe6ce8c63 in memory
flw f31, 0(x2) # load 0xe6ce8c63 from memory into f31
la x2, scratch
li x3, 0xf62515ee # load x3 with value 0xf62515ee
sw x3, 0(x2) # store 0xf62515ee in memory
flw f19, 0(x2) # load 0xf62515ee from memory into f19
la x2, scratch
li x3, 0x16a2ddc2 # load x3 with value 0x16a2ddc2
sw x3, 0(x2) # store 0x16a2ddc2 in memory
flw f10, 0(x2) # load 0x16a2ddc2 from memory into f10
fnmsub.s f5, f31, f19, f10 # perform operation

# Testcase cp_fs2 (Test source fs2 = f20)
la x2, scratch
li x3, 0x71df21b4 # load x3 with value 0x71df21b4
sw x3, 0(x2) # store 0x71df21b4 in memory
flw f2, 0(x2) # load 0x71df21b4 from memory into f2
la x2, scratch
li x3, 0x53a3d72d # load x3 with value 0x53a3d72d
sw x3, 0(x2) # store 0x53a3d72d in memory
flw f20, 0(x2) # load 0x53a3d72d from memory into f20
la x2, scratch
li x3, 0x919e6a63 # load x3 with value 0x919e6a63
sw x3, 0(x2) # store 0x919e6a63 in memory
flw f7, 0(x2) # load 0x919e6a63 from memory into f7
fnmsub.s f18, f2, f20, f7 # perform operation

# Testcase cp_fs2 (Test source fs2 = f21)
la x2, scratch
li x3, 0x08d661f7 # load x3 with value 0x08d661f7
sw x3, 0(x2) # store 0x08d661f7 in memory
flw f13, 0(x2) # load 0x08d661f7 from memory into f13
la x2, scratch
li x3, 0xd583f2d9 # load x3 with value 0xd583f2d9
sw x3, 0(x2) # store 0xd583f2d9 in memory
flw f21, 0(x2) # load 0xd583f2d9 from memory into f21
la x2, scratch
li x3, 0xc1742dd8 # load x3 with value 0xc1742dd8
sw x3, 0(x2) # store 0xc1742dd8 in memory
flw f3, 0(x2) # load 0xc1742dd8 from memory into f3
fnmsub.s f10, f13, f21, f3 # perform operation

# Testcase cp_fs2 (Test source fs2 = f22)
la x2, scratch
li x3, 0xb8d6d09b # load x3 with value 0xb8d6d09b
sw x3, 0(x2) # store 0xb8d6d09b in memory
flw f2, 0(x2) # load 0xb8d6d09b from memory into f2
la x2, scratch
li x3, 0xd26b2b9d # load x3 with value 0xd26b2b9d
sw x3, 0(x2) # store 0xd26b2b9d in memory
flw f22, 0(x2) # load 0xd26b2b9d from memory into f22
la x2, scratch
li x3, 0x764f889e # load x3 with value 0x764f889e
sw x3, 0(x2) # store 0x764f889e in memory
flw f19, 0(x2) # load 0x764f889e from memory into f19
fnmsub.s f22, f2, f22, f19 # perform operation

# Testcase cp_fs2 (Test source fs2 = f23)
la x2, scratch
li x3, 0xb0f36e18 # load x3 with value 0xb0f36e18
sw x3, 0(x2) # store 0xb0f36e18 in memory
flw f1, 0(x2) # load 0xb0f36e18 from memory into f1
la x2, scratch
li x3, 0xb540d245 # load x3 with value 0xb540d245
sw x3, 0(x2) # store 0xb540d245 in memory
flw f23, 0(x2) # load 0xb540d245 from memory into f23
la x2, scratch
li x3, 0xe8d05c48 # load x3 with value 0xe8d05c48
sw x3, 0(x2) # store 0xe8d05c48 in memory
flw f31, 0(x2) # load 0xe8d05c48 from memory into f31
fnmsub.s f25, f1, f23, f31 # perform operation

# Testcase cp_fs2 (Test source fs2 = f24)
la x2, scratch
li x3, 0x310d38f8 # load x3 with value 0x310d38f8
sw x3, 0(x2) # store 0x310d38f8 in memory
flw f27, 0(x2) # load 0x310d38f8 from memory into f27
la x2, scratch
li x3, 0xf4b85680 # load x3 with value 0xf4b85680
sw x3, 0(x2) # store 0xf4b85680 in memory
flw f24, 0(x2) # load 0xf4b85680 from memory into f24
la x2, scratch
li x3, 0x05fd46ed # load x3 with value 0x05fd46ed
sw x3, 0(x2) # store 0x05fd46ed in memory
flw f17, 0(x2) # load 0x05fd46ed from memory into f17
fnmsub.s f12, f27, f24, f17 # perform operation

# Testcase cp_fs2 (Test source fs2 = f25)
la x2, scratch
li x3, 0x94f51fa1 # load x3 with value 0x94f51fa1
sw x3, 0(x2) # store 0x94f51fa1 in memory
flw f30, 0(x2) # load 0x94f51fa1 from memory into f30
la x2, scratch
li x3, 0x2e898c46 # load x3 with value 0x2e898c46
sw x3, 0(x2) # store 0x2e898c46 in memory
flw f25, 0(x2) # load 0x2e898c46 from memory into f25
la x2, scratch
li x3, 0xc0435374 # load x3 with value 0xc0435374
sw x3, 0(x2) # store 0xc0435374 in memory
flw f29, 0(x2) # load 0xc0435374 from memory into f29
fnmsub.s f7, f30, f25, f29 # perform operation

# Testcase cp_fs2 (Test source fs2 = f26)
la x2, scratch
li x3, 0x4c0f1619 # load x3 with value 0x4c0f1619
sw x3, 0(x2) # store 0x4c0f1619 in memory
flw f24, 0(x2) # load 0x4c0f1619 from memory into f24
la x2, scratch
li x3, 0x2a7dd5bb # load x3 with value 0x2a7dd5bb
sw x3, 0(x2) # store 0x2a7dd5bb in memory
flw f26, 0(x2) # load 0x2a7dd5bb from memory into f26
la x2, scratch
li x3, 0xe569aa21 # load x3 with value 0xe569aa21
sw x3, 0(x2) # store 0xe569aa21 in memory
flw f23, 0(x2) # load 0xe569aa21 from memory into f23
fnmsub.s f15, f24, f26, f23 # perform operation

# Testcase cp_fs2 (Test source fs2 = f27)
la x2, scratch
li x3, 0x62721e9d # load x3 with value 0x62721e9d
sw x3, 0(x2) # store 0x62721e9d in memory
flw f23, 0(x2) # load 0x62721e9d from memory into f23
la x2, scratch
li x3, 0x1df94148 # load x3 with value 0x1df94148
sw x3, 0(x2) # store 0x1df94148 in memory
flw f27, 0(x2) # load 0x1df94148 from memory into f27
la x2, scratch
li x3, 0xbd5d3933 # load x3 with value 0xbd5d3933
sw x3, 0(x2) # store 0xbd5d3933 in memory
flw f20, 0(x2) # load 0xbd5d3933 from memory into f20
fnmsub.s f30, f23, f27, f20 # perform operation

# Testcase cp_fs2 (Test source fs2 = f28)
la x2, scratch
li x3, 0x680f8990 # load x3 with value 0x680f8990
sw x3, 0(x2) # store 0x680f8990 in memory
flw f12, 0(x2) # load 0x680f8990 from memory into f12
la x2, scratch
li x3, 0x926cee8f # load x3 with value 0x926cee8f
sw x3, 0(x2) # store 0x926cee8f in memory
flw f28, 0(x2) # load 0x926cee8f from memory into f28
la x2, scratch
li x3, 0x4a3b08ba # load x3 with value 0x4a3b08ba
sw x3, 0(x2) # store 0x4a3b08ba in memory
flw f20, 0(x2) # load 0x4a3b08ba from memory into f20
fnmsub.s f18, f12, f28, f20 # perform operation

# Testcase cp_fs2 (Test source fs2 = f29)
la x2, scratch
li x3, 0x0d217826 # load x3 with value 0x0d217826
sw x3, 0(x2) # store 0x0d217826 in memory
flw f18, 0(x2) # load 0x0d217826 from memory into f18
la x2, scratch
li x3, 0x7a69e7f2 # load x3 with value 0x7a69e7f2
sw x3, 0(x2) # store 0x7a69e7f2 in memory
flw f29, 0(x2) # load 0x7a69e7f2 from memory into f29
la x2, scratch
li x3, 0xb9da3533 # load x3 with value 0xb9da3533
sw x3, 0(x2) # store 0xb9da3533 in memory
flw f15, 0(x2) # load 0xb9da3533 from memory into f15
fnmsub.s f14, f18, f29, f15 # perform operation

# Testcase cp_fs2 (Test source fs2 = f30)
la x2, scratch
li x3, 0xe1865551 # load x3 with value 0xe1865551
sw x3, 0(x2) # store 0xe1865551 in memory
flw f10, 0(x2) # load 0xe1865551 from memory into f10
la x2, scratch
li x3, 0xc66fe67d # load x3 with value 0xc66fe67d
sw x3, 0(x2) # store 0xc66fe67d in memory
flw f30, 0(x2) # load 0xc66fe67d from memory into f30
la x2, scratch
li x3, 0xd886a134 # load x3 with value 0xd886a134
sw x3, 0(x2) # store 0xd886a134 in memory
flw f13, 0(x2) # load 0xd886a134 from memory into f13
fnmsub.s f18, f10, f30, f13 # perform operation

# Testcase cp_fs2 (Test source fs2 = f31)
la x2, scratch
li x3, 0x51a78445 # load x3 with value 0x51a78445
sw x3, 0(x2) # store 0x51a78445 in memory
flw f14, 0(x2) # load 0x51a78445 from memory into f14
la x2, scratch
li x3, 0x69e13cd4 # load x3 with value 0x69e13cd4
sw x3, 0(x2) # store 0x69e13cd4 in memory
flw f31, 0(x2) # load 0x69e13cd4 from memory into f31
la x2, scratch
li x3, 0x593a099a # load x3 with value 0x593a099a
sw x3, 0(x2) # store 0x593a099a in memory
flw f7, 0(x2) # load 0x593a099a from memory into f7
fnmsub.s f20, f14, f31, f7 # perform operation

# Testcase cp_fs3 (Test source fs3 = f0)
la x2, scratch
li x3, 0x6097dfe8 # load x3 with value 0x6097dfe8
sw x3, 0(x2) # store 0x6097dfe8 in memory
flw f29, 0(x2) # load 0x6097dfe8 from memory into f29
la x2, scratch
li x3, 0x8c816e20 # load x3 with value 0x8c816e20
sw x3, 0(x2) # store 0x8c816e20 in memory
flw f5, 0(x2) # load 0x8c816e20 from memory into f5
la x2, scratch
li x3, 0x87beeb3c # load x3 with value 0x87beeb3c
sw x3, 0(x2) # store 0x87beeb3c in memory
flw f0, 0(x2) # load 0x87beeb3c from memory into f0
fnmsub.s f1, f29, f5, f0 # perform operation

# Testcase cp_fs3 (Test source fs3 = f1)
la x2, scratch
li x3, 0xb751a5a1 # load x3 with value 0xb751a5a1
sw x3, 0(x2) # store 0xb751a5a1 in memory
flw f17, 0(x2) # load 0xb751a5a1 from memory into f17
la x2, scratch
li x3, 0x78c23dab # load x3 with value 0x78c23dab
sw x3, 0(x2) # store 0x78c23dab in memory
flw f12, 0(x2) # load 0x78c23dab from memory into f12
la x2, scratch
li x3, 0xdc62c9f4 # load x3 with value 0xdc62c9f4
sw x3, 0(x2) # store 0xdc62c9f4 in memory
flw f1, 0(x2) # load 0xdc62c9f4 from memory into f1
fnmsub.s f15, f17, f12, f1 # perform operation

# Testcase cp_fs3 (Test source fs3 = f2)
la x2, scratch
li x3, 0xe55efd34 # load x3 with value 0xe55efd34
sw x3, 0(x2) # store 0xe55efd34 in memory
flw f5, 0(x2) # load 0xe55efd34 from memory into f5
la x2, scratch
li x3, 0xfbfd5319 # load x3 with value 0xfbfd5319
sw x3, 0(x2) # store 0xfbfd5319 in memory
flw f20, 0(x2) # load 0xfbfd5319 from memory into f20
la x2, scratch
li x3, 0x4f868f1f # load x3 with value 0x4f868f1f
sw x3, 0(x2) # store 0x4f868f1f in memory
flw f2, 0(x2) # load 0x4f868f1f from memory into f2
fnmsub.s f7, f5, f20, f2 # perform operation

# Testcase cp_fs3 (Test source fs3 = f3)
la x2, scratch
li x3, 0x7bbbd52f # load x3 with value 0x7bbbd52f
sw x3, 0(x2) # store 0x7bbbd52f in memory
flw f25, 0(x2) # load 0x7bbbd52f from memory into f25
la x2, scratch
li x3, 0x617b8c6d # load x3 with value 0x617b8c6d
sw x3, 0(x2) # store 0x617b8c6d in memory
flw f23, 0(x2) # load 0x617b8c6d from memory into f23
la x2, scratch
li x3, 0xbea257c0 # load x3 with value 0xbea257c0
sw x3, 0(x2) # store 0xbea257c0 in memory
flw f3, 0(x2) # load 0xbea257c0 from memory into f3
fnmsub.s f10, f25, f23, f3 # perform operation

# Testcase cp_fs3 (Test source fs3 = f4)
la x2, scratch
li x3, 0x65f7e15b # load x3 with value 0x65f7e15b
sw x3, 0(x2) # store 0x65f7e15b in memory
flw f20, 0(x2) # load 0x65f7e15b from memory into f20
la x2, scratch
li x3, 0x536b0128 # load x3 with value 0x536b0128
sw x3, 0(x2) # store 0x536b0128 in memory
flw f16, 0(x2) # load 0x536b0128 from memory into f16
la x2, scratch
li x3, 0x73ebdd23 # load x3 with value 0x73ebdd23
sw x3, 0(x2) # store 0x73ebdd23 in memory
flw f4, 0(x2) # load 0x73ebdd23 from memory into f4
fnmsub.s f9, f20, f16, f4 # perform operation

# Testcase cp_fs3 (Test source fs3 = f5)
la x2, scratch
li x3, 0x169ef3e2 # load x3 with value 0x169ef3e2
sw x3, 0(x2) # store 0x169ef3e2 in memory
flw f15, 0(x2) # load 0x169ef3e2 from memory into f15
la x2, scratch
li x3, 0xefd25702 # load x3 with value 0xefd25702
sw x3, 0(x2) # store 0xefd25702 in memory
flw f20, 0(x2) # load 0xefd25702 from memory into f20
la x2, scratch
li x3, 0xfb594105 # load x3 with value 0xfb594105
sw x3, 0(x2) # store 0xfb594105 in memory
flw f5, 0(x2) # load 0xfb594105 from memory into f5
fnmsub.s f1, f15, f20, f5 # perform operation

# Testcase cp_fs3 (Test source fs3 = f6)
la x2, scratch
li x3, 0xc58b82a2 # load x3 with value 0xc58b82a2
sw x3, 0(x2) # store 0xc58b82a2 in memory
flw f26, 0(x2) # load 0xc58b82a2 from memory into f26
la x2, scratch
li x3, 0x26c2a928 # load x3 with value 0x26c2a928
sw x3, 0(x2) # store 0x26c2a928 in memory
flw f3, 0(x2) # load 0x26c2a928 from memory into f3
la x2, scratch
li x3, 0x7b8e0a33 # load x3 with value 0x7b8e0a33
sw x3, 0(x2) # store 0x7b8e0a33 in memory
flw f6, 0(x2) # load 0x7b8e0a33 from memory into f6
fnmsub.s f20, f26, f3, f6 # perform operation

# Testcase cp_fs3 (Test source fs3 = f7)
la x2, scratch
li x3, 0x6c9c3af7 # load x3 with value 0x6c9c3af7
sw x3, 0(x2) # store 0x6c9c3af7 in memory
flw f9, 0(x2) # load 0x6c9c3af7 from memory into f9
la x2, scratch
li x3, 0xf1b8eedf # load x3 with value 0xf1b8eedf
sw x3, 0(x2) # store 0xf1b8eedf in memory
flw f30, 0(x2) # load 0xf1b8eedf from memory into f30
la x2, scratch
li x3, 0x875b7d6f # load x3 with value 0x875b7d6f
sw x3, 0(x2) # store 0x875b7d6f in memory
flw f7, 0(x2) # load 0x875b7d6f from memory into f7
fnmsub.s f28, f9, f30, f7 # perform operation

# Testcase cp_fs3 (Test source fs3 = f8)
la x2, scratch
li x3, 0xf856c0b5 # load x3 with value 0xf856c0b5
sw x3, 0(x2) # store 0xf856c0b5 in memory
flw f29, 0(x2) # load 0xf856c0b5 from memory into f29
la x2, scratch
li x3, 0x059a4b7f # load x3 with value 0x059a4b7f
sw x3, 0(x2) # store 0x059a4b7f in memory
flw f31, 0(x2) # load 0x059a4b7f from memory into f31
la x2, scratch
li x3, 0xf9c3ca7e # load x3 with value 0xf9c3ca7e
sw x3, 0(x2) # store 0xf9c3ca7e in memory
flw f8, 0(x2) # load 0xf9c3ca7e from memory into f8
fnmsub.s f3, f29, f31, f8 # perform operation

# Testcase cp_fs3 (Test source fs3 = f9)
la x2, scratch
li x3, 0xbdee7c84 # load x3 with value 0xbdee7c84
sw x3, 0(x2) # store 0xbdee7c84 in memory
flw f16, 0(x2) # load 0xbdee7c84 from memory into f16
la x2, scratch
li x3, 0xb72eafae # load x3 with value 0xb72eafae
sw x3, 0(x2) # store 0xb72eafae in memory
flw f30, 0(x2) # load 0xb72eafae from memory into f30
la x2, scratch
li x3, 0xf3debd3e # load x3 with value 0xf3debd3e
sw x3, 0(x2) # store 0xf3debd3e in memory
flw f9, 0(x2) # load 0xf3debd3e from memory into f9
fnmsub.s f19, f16, f30, f9 # perform operation

# Testcase cp_fs3 (Test source fs3 = f10)
la x2, scratch
li x3, 0x3e07adf1 # load x3 with value 0x3e07adf1
sw x3, 0(x2) # store 0x3e07adf1 in memory
flw f19, 0(x2) # load 0x3e07adf1 from memory into f19
la x2, scratch
li x3, 0x4f97908c # load x3 with value 0x4f97908c
sw x3, 0(x2) # store 0x4f97908c in memory
flw f6, 0(x2) # load 0x4f97908c from memory into f6
la x2, scratch
li x3, 0x5ebddd48 # load x3 with value 0x5ebddd48
sw x3, 0(x2) # store 0x5ebddd48 in memory
flw f10, 0(x2) # load 0x5ebddd48 from memory into f10
fnmsub.s f17, f19, f6, f10 # perform operation

# Testcase cp_fs3 (Test source fs3 = f11)
la x2, scratch
li x3, 0xeb9835ea # load x3 with value 0xeb9835ea
sw x3, 0(x2) # store 0xeb9835ea in memory
flw f28, 0(x2) # load 0xeb9835ea from memory into f28
la x2, scratch
li x3, 0x72ad121f # load x3 with value 0x72ad121f
sw x3, 0(x2) # store 0x72ad121f in memory
flw f25, 0(x2) # load 0x72ad121f from memory into f25
la x2, scratch
li x3, 0x481522fc # load x3 with value 0x481522fc
sw x3, 0(x2) # store 0x481522fc in memory
flw f11, 0(x2) # load 0x481522fc from memory into f11
fnmsub.s f19, f28, f25, f11 # perform operation

# Testcase cp_fs3 (Test source fs3 = f12)
la x2, scratch
li x3, 0x926a3a68 # load x3 with value 0x926a3a68
sw x3, 0(x2) # store 0x926a3a68 in memory
flw f10, 0(x2) # load 0x926a3a68 from memory into f10
la x2, scratch
li x3, 0x945e95f1 # load x3 with value 0x945e95f1
sw x3, 0(x2) # store 0x945e95f1 in memory
flw f5, 0(x2) # load 0x945e95f1 from memory into f5
la x2, scratch
li x3, 0x3aeb5a45 # load x3 with value 0x3aeb5a45
sw x3, 0(x2) # store 0x3aeb5a45 in memory
flw f12, 0(x2) # load 0x3aeb5a45 from memory into f12
fnmsub.s f25, f10, f5, f12 # perform operation

# Testcase cp_fs3 (Test source fs3 = f13)
la x2, scratch
li x3, 0x7615b005 # load x3 with value 0x7615b005
sw x3, 0(x2) # store 0x7615b005 in memory
flw f28, 0(x2) # load 0x7615b005 from memory into f28
la x2, scratch
li x3, 0x523ecef9 # load x3 with value 0x523ecef9
sw x3, 0(x2) # store 0x523ecef9 in memory
flw f21, 0(x2) # load 0x523ecef9 from memory into f21
la x2, scratch
li x3, 0x3bf247f7 # load x3 with value 0x3bf247f7
sw x3, 0(x2) # store 0x3bf247f7 in memory
flw f13, 0(x2) # load 0x3bf247f7 from memory into f13
fnmsub.s f25, f28, f21, f13 # perform operation

# Testcase cp_fs3 (Test source fs3 = f14)
la x2, scratch
li x3, 0xbf8f4f29 # load x3 with value 0xbf8f4f29
sw x3, 0(x2) # store 0xbf8f4f29 in memory
flw f31, 0(x2) # load 0xbf8f4f29 from memory into f31
la x2, scratch
li x3, 0xeac64512 # load x3 with value 0xeac64512
sw x3, 0(x2) # store 0xeac64512 in memory
flw f30, 0(x2) # load 0xeac64512 from memory into f30
la x2, scratch
li x3, 0xfb12846f # load x3 with value 0xfb12846f
sw x3, 0(x2) # store 0xfb12846f in memory
flw f14, 0(x2) # load 0xfb12846f from memory into f14
fnmsub.s f20, f31, f30, f14 # perform operation

# Testcase cp_fs3 (Test source fs3 = f15)
la x2, scratch
li x3, 0x4ddbe736 # load x3 with value 0x4ddbe736
sw x3, 0(x2) # store 0x4ddbe736 in memory
flw f3, 0(x2) # load 0x4ddbe736 from memory into f3
la x2, scratch
li x3, 0x88c20cac # load x3 with value 0x88c20cac
sw x3, 0(x2) # store 0x88c20cac in memory
flw f7, 0(x2) # load 0x88c20cac from memory into f7
la x2, scratch
li x3, 0xb1ef9dad # load x3 with value 0xb1ef9dad
sw x3, 0(x2) # store 0xb1ef9dad in memory
flw f15, 0(x2) # load 0xb1ef9dad from memory into f15
fnmsub.s f13, f3, f7, f15 # perform operation

# Testcase cp_fs3 (Test source fs3 = f16)
la x2, scratch
li x3, 0xe4471d46 # load x3 with value 0xe4471d46
sw x3, 0(x2) # store 0xe4471d46 in memory
flw f28, 0(x2) # load 0xe4471d46 from memory into f28
la x2, scratch
li x3, 0xba59cd95 # load x3 with value 0xba59cd95
sw x3, 0(x2) # store 0xba59cd95 in memory
flw f22, 0(x2) # load 0xba59cd95 from memory into f22
la x2, scratch
li x3, 0x29863bd1 # load x3 with value 0x29863bd1
sw x3, 0(x2) # store 0x29863bd1 in memory
flw f16, 0(x2) # load 0x29863bd1 from memory into f16
fnmsub.s f3, f28, f22, f16 # perform operation

# Testcase cp_fs3 (Test source fs3 = f17)
la x2, scratch
li x3, 0x5b9c42ed # load x3 with value 0x5b9c42ed
sw x3, 0(x2) # store 0x5b9c42ed in memory
flw f1, 0(x2) # load 0x5b9c42ed from memory into f1
la x2, scratch
li x3, 0xe13f2d85 # load x3 with value 0xe13f2d85
sw x3, 0(x2) # store 0xe13f2d85 in memory
flw f10, 0(x2) # load 0xe13f2d85 from memory into f10
la x2, scratch
li x3, 0xe17d1dac # load x3 with value 0xe17d1dac
sw x3, 0(x2) # store 0xe17d1dac in memory
flw f17, 0(x2) # load 0xe17d1dac from memory into f17
fnmsub.s f26, f1, f10, f17 # perform operation

# Testcase cp_fs3 (Test source fs3 = f18)
la x2, scratch
li x3, 0x5a6d082d # load x3 with value 0x5a6d082d
sw x3, 0(x2) # store 0x5a6d082d in memory
flw f19, 0(x2) # load 0x5a6d082d from memory into f19
la x2, scratch
li x3, 0x263fed1a # load x3 with value 0x263fed1a
sw x3, 0(x2) # store 0x263fed1a in memory
flw f28, 0(x2) # load 0x263fed1a from memory into f28
la x2, scratch
li x3, 0xc43fee2f # load x3 with value 0xc43fee2f
sw x3, 0(x2) # store 0xc43fee2f in memory
flw f18, 0(x2) # load 0xc43fee2f from memory into f18
fnmsub.s f12, f19, f28, f18 # perform operation

# Testcase cp_fs3 (Test source fs3 = f19)
la x2, scratch
li x3, 0x028444ff # load x3 with value 0x028444ff
sw x3, 0(x2) # store 0x028444ff in memory
flw f10, 0(x2) # load 0x028444ff from memory into f10
la x2, scratch
li x3, 0xb09e3f22 # load x3 with value 0xb09e3f22
sw x3, 0(x2) # store 0xb09e3f22 in memory
flw f20, 0(x2) # load 0xb09e3f22 from memory into f20
la x2, scratch
li x3, 0x605d739c # load x3 with value 0x605d739c
sw x3, 0(x2) # store 0x605d739c in memory
flw f19, 0(x2) # load 0x605d739c from memory into f19
fnmsub.s f29, f10, f20, f19 # perform operation

# Testcase cp_fs3 (Test source fs3 = f20)
la x2, scratch
li x3, 0x6483f567 # load x3 with value 0x6483f567
sw x3, 0(x2) # store 0x6483f567 in memory
flw f8, 0(x2) # load 0x6483f567 from memory into f8
la x2, scratch
li x3, 0xa15c1f78 # load x3 with value 0xa15c1f78
sw x3, 0(x2) # store 0xa15c1f78 in memory
flw f30, 0(x2) # load 0xa15c1f78 from memory into f30
la x2, scratch
li x3, 0x9fdd94d6 # load x3 with value 0x9fdd94d6
sw x3, 0(x2) # store 0x9fdd94d6 in memory
flw f20, 0(x2) # load 0x9fdd94d6 from memory into f20
fnmsub.s f27, f8, f30, f20 # perform operation

# Testcase cp_fs3 (Test source fs3 = f21)
la x2, scratch
li x3, 0x3ea2089c # load x3 with value 0x3ea2089c
sw x3, 0(x2) # store 0x3ea2089c in memory
flw f15, 0(x2) # load 0x3ea2089c from memory into f15
la x2, scratch
li x3, 0x42c27049 # load x3 with value 0x42c27049
sw x3, 0(x2) # store 0x42c27049 in memory
flw f22, 0(x2) # load 0x42c27049 from memory into f22
la x2, scratch
li x3, 0x836dc0ec # load x3 with value 0x836dc0ec
sw x3, 0(x2) # store 0x836dc0ec in memory
flw f21, 0(x2) # load 0x836dc0ec from memory into f21
fnmsub.s f9, f15, f22, f21 # perform operation

# Testcase cp_fs3 (Test source fs3 = f22)
la x2, scratch
li x3, 0x42057ed8 # load x3 with value 0x42057ed8
sw x3, 0(x2) # store 0x42057ed8 in memory
flw f19, 0(x2) # load 0x42057ed8 from memory into f19
la x2, scratch
li x3, 0x98dac91c # load x3 with value 0x98dac91c
sw x3, 0(x2) # store 0x98dac91c in memory
flw f13, 0(x2) # load 0x98dac91c from memory into f13
la x2, scratch
li x3, 0x98118745 # load x3 with value 0x98118745
sw x3, 0(x2) # store 0x98118745 in memory
flw f22, 0(x2) # load 0x98118745 from memory into f22
fnmsub.s f1, f19, f13, f22 # perform operation

# Testcase cp_fs3 (Test source fs3 = f23)
la x2, scratch
li x3, 0x27656e45 # load x3 with value 0x27656e45
sw x3, 0(x2) # store 0x27656e45 in memory
flw f9, 0(x2) # load 0x27656e45 from memory into f9
la x2, scratch
li x3, 0x588626bc # load x3 with value 0x588626bc
sw x3, 0(x2) # store 0x588626bc in memory
flw f14, 0(x2) # load 0x588626bc from memory into f14
la x2, scratch
li x3, 0x67fd52ed # load x3 with value 0x67fd52ed
sw x3, 0(x2) # store 0x67fd52ed in memory
flw f23, 0(x2) # load 0x67fd52ed from memory into f23
fnmsub.s f18, f9, f14, f23 # perform operation

# Testcase cp_fs3 (Test source fs3 = f24)
la x2, scratch
li x3, 0xd98c9f8a # load x3 with value 0xd98c9f8a
sw x3, 0(x2) # store 0xd98c9f8a in memory
flw f17, 0(x2) # load 0xd98c9f8a from memory into f17
la x2, scratch
li x3, 0xdcebf7b8 # load x3 with value 0xdcebf7b8
sw x3, 0(x2) # store 0xdcebf7b8 in memory
flw f15, 0(x2) # load 0xdcebf7b8 from memory into f15
la x2, scratch
li x3, 0x1ef225fe # load x3 with value 0x1ef225fe
sw x3, 0(x2) # store 0x1ef225fe in memory
flw f24, 0(x2) # load 0x1ef225fe from memory into f24
fnmsub.s f10, f17, f15, f24 # perform operation

# Testcase cp_fs3 (Test source fs3 = f25)
la x2, scratch
li x3, 0xc1f0202b # load x3 with value 0xc1f0202b
sw x3, 0(x2) # store 0xc1f0202b in memory
flw f15, 0(x2) # load 0xc1f0202b from memory into f15
la x2, scratch
li x3, 0x215b90e2 # load x3 with value 0x215b90e2
sw x3, 0(x2) # store 0x215b90e2 in memory
flw f30, 0(x2) # load 0x215b90e2 from memory into f30
la x2, scratch
li x3, 0x12b5841c # load x3 with value 0x12b5841c
sw x3, 0(x2) # store 0x12b5841c in memory
flw f25, 0(x2) # load 0x12b5841c from memory into f25
fnmsub.s f31, f15, f30, f25 # perform operation

# Testcase cp_fs3 (Test source fs3 = f26)
la x2, scratch
li x3, 0x4ea8e464 # load x3 with value 0x4ea8e464
sw x3, 0(x2) # store 0x4ea8e464 in memory
flw f10, 0(x2) # load 0x4ea8e464 from memory into f10
la x2, scratch
li x3, 0x745a7356 # load x3 with value 0x745a7356
sw x3, 0(x2) # store 0x745a7356 in memory
flw f29, 0(x2) # load 0x745a7356 from memory into f29
la x2, scratch
li x3, 0x8a0172bd # load x3 with value 0x8a0172bd
sw x3, 0(x2) # store 0x8a0172bd in memory
flw f26, 0(x2) # load 0x8a0172bd from memory into f26
fnmsub.s f9, f10, f29, f26 # perform operation

# Testcase cp_fs3 (Test source fs3 = f27)
la x2, scratch
li x3, 0x76a129d5 # load x3 with value 0x76a129d5
sw x3, 0(x2) # store 0x76a129d5 in memory
flw f20, 0(x2) # load 0x76a129d5 from memory into f20
la x2, scratch
li x3, 0xcacf4d18 # load x3 with value 0xcacf4d18
sw x3, 0(x2) # store 0xcacf4d18 in memory
flw f29, 0(x2) # load 0xcacf4d18 from memory into f29
la x2, scratch
li x3, 0xd1aba32b # load x3 with value 0xd1aba32b
sw x3, 0(x2) # store 0xd1aba32b in memory
flw f27, 0(x2) # load 0xd1aba32b from memory into f27
fnmsub.s f21, f20, f29, f27 # perform operation

# Testcase cp_fs3 (Test source fs3 = f28)
la x2, scratch
li x3, 0x6c7c523a # load x3 with value 0x6c7c523a
sw x3, 0(x2) # store 0x6c7c523a in memory
flw f16, 0(x2) # load 0x6c7c523a from memory into f16
la x2, scratch
li x3, 0x1488dc89 # load x3 with value 0x1488dc89
sw x3, 0(x2) # store 0x1488dc89 in memory
flw f1, 0(x2) # load 0x1488dc89 from memory into f1
la x2, scratch
li x3, 0xc238a0fd # load x3 with value 0xc238a0fd
sw x3, 0(x2) # store 0xc238a0fd in memory
flw f28, 0(x2) # load 0xc238a0fd from memory into f28
fnmsub.s f27, f16, f1, f28 # perform operation

# Testcase cp_fs3 (Test source fs3 = f29)
la x2, scratch
li x3, 0x4b7cf68e # load x3 with value 0x4b7cf68e
sw x3, 0(x2) # store 0x4b7cf68e in memory
flw f6, 0(x2) # load 0x4b7cf68e from memory into f6
la x2, scratch
li x3, 0x3e424dc4 # load x3 with value 0x3e424dc4
sw x3, 0(x2) # store 0x3e424dc4 in memory
flw f26, 0(x2) # load 0x3e424dc4 from memory into f26
la x2, scratch
li x3, 0x1d85688f # load x3 with value 0x1d85688f
sw x3, 0(x2) # store 0x1d85688f in memory
flw f29, 0(x2) # load 0x1d85688f from memory into f29
fnmsub.s f1, f6, f26, f29 # perform operation

# Testcase cp_fs3 (Test source fs3 = f30)
la x2, scratch
li x3, 0x08290bba # load x3 with value 0x08290bba
sw x3, 0(x2) # store 0x08290bba in memory
flw f28, 0(x2) # load 0x08290bba from memory into f28
la x2, scratch
li x3, 0x5944723d # load x3 with value 0x5944723d
sw x3, 0(x2) # store 0x5944723d in memory
flw f12, 0(x2) # load 0x5944723d from memory into f12
la x2, scratch
li x3, 0xd2c63aaf # load x3 with value 0xd2c63aaf
sw x3, 0(x2) # store 0xd2c63aaf in memory
flw f30, 0(x2) # load 0xd2c63aaf from memory into f30
fnmsub.s f1, f28, f12, f30 # perform operation

# Testcase cp_fs3 (Test source fs3 = f31)
la x2, scratch
li x3, 0xfe6d9ead # load x3 with value 0xfe6d9ead
sw x3, 0(x2) # store 0xfe6d9ead in memory
flw f20, 0(x2) # load 0xfe6d9ead from memory into f20
la x2, scratch
li x3, 0xe1e6f6e5 # load x3 with value 0xe1e6f6e5
sw x3, 0(x2) # store 0xe1e6f6e5 in memory
flw f3, 0(x2) # load 0xe1e6f6e5 from memory into f3
la x2, scratch
li x3, 0x6a7ea2e7 # load x3 with value 0x6a7ea2e7
sw x3, 0(x2) # store 0x6a7ea2e7 in memory
flw f31, 0(x2) # load 0x6a7ea2e7 from memory into f31
fnmsub.s f6, f20, f3, f31 # perform operation

# Testcase cp_fd (Test destination fd = x0)
la x2, scratch
li x3, 0x98ecd74a # load x3 with value 0x98ecd74a
sw x3, 0(x2) # store 0x98ecd74a in memory
flw f21, 0(x2) # load 0x98ecd74a from memory into f21
la x2, scratch
li x3, 0x203ae86e # load x3 with value 0x203ae86e
sw x3, 0(x2) # store 0x203ae86e in memory
flw f30, 0(x2) # load 0x203ae86e from memory into f30
la x2, scratch
li x3, 0x28aa09fa # load x3 with value 0x28aa09fa
sw x3, 0(x2) # store 0x28aa09fa in memory
flw f26, 0(x2) # load 0x28aa09fa from memory into f26
fnmsub.s f0, f21, f30, f26 # perform operation

# Testcase cp_fd (Test destination fd = x1)
la x2, scratch
li x3, 0x00904b56 # load x3 with value 0x00904b56
sw x3, 0(x2) # store 0x00904b56 in memory
flw f21, 0(x2) # load 0x00904b56 from memory into f21
la x2, scratch
li x3, 0x250c75a1 # load x3 with value 0x250c75a1
sw x3, 0(x2) # store 0x250c75a1 in memory
flw f6, 0(x2) # load 0x250c75a1 from memory into f6
la x2, scratch
li x3, 0x3c5fd63c # load x3 with value 0x3c5fd63c
sw x3, 0(x2) # store 0x3c5fd63c in memory
flw f11, 0(x2) # load 0x3c5fd63c from memory into f11
fnmsub.s f1, f21, f6, f11 # perform operation

# Testcase cp_fd (Test destination fd = x2)
la x2, scratch
li x3, 0x8888fc16 # load x3 with value 0x8888fc16
sw x3, 0(x2) # store 0x8888fc16 in memory
flw f8, 0(x2) # load 0x8888fc16 from memory into f8
la x2, scratch
li x3, 0x2971a573 # load x3 with value 0x2971a573
sw x3, 0(x2) # store 0x2971a573 in memory
flw f18, 0(x2) # load 0x2971a573 from memory into f18
la x2, scratch
li x3, 0x894436c5 # load x3 with value 0x894436c5
sw x3, 0(x2) # store 0x894436c5 in memory
flw f15, 0(x2) # load 0x894436c5 from memory into f15
fnmsub.s f2, f8, f18, f15 # perform operation

# Testcase cp_fd (Test destination fd = x3)
la x2, scratch
li x3, 0xe9e6e445 # load x3 with value 0xe9e6e445
sw x3, 0(x2) # store 0xe9e6e445 in memory
flw f16, 0(x2) # load 0xe9e6e445 from memory into f16
la x2, scratch
li x3, 0x2581d559 # load x3 with value 0x2581d559
sw x3, 0(x2) # store 0x2581d559 in memory
flw f24, 0(x2) # load 0x2581d559 from memory into f24
la x2, scratch
li x3, 0xf156444e # load x3 with value 0xf156444e
sw x3, 0(x2) # store 0xf156444e in memory
flw f27, 0(x2) # load 0xf156444e from memory into f27
fnmsub.s f3, f16, f24, f27 # perform operation

# Testcase cp_fd (Test destination fd = x4)
mv x5, x4 # switch signature pointer register to avoid conflict with test
la x2, scratch
li x3, 0xfeb74d37 # load x3 with value 0xfeb74d37
sw x3, 0(x2) # store 0xfeb74d37 in memory
flw f22, 0(x2) # load 0xfeb74d37 from memory into f22
la x2, scratch
li x3, 0x5a983cb0 # load x3 with value 0x5a983cb0
sw x3, 0(x2) # store 0x5a983cb0 in memory
flw f12, 0(x2) # load 0x5a983cb0 from memory into f12
la x2, scratch
li x3, 0x5f2ea4f0 # load x3 with value 0x5f2ea4f0
sw x3, 0(x2) # store 0x5f2ea4f0 in memory
flw f9, 0(x2) # load 0x5f2ea4f0 from memory into f9
fnmsub.s f4, f22, f12, f9 # perform operation

# Testcase cp_fd (Test destination fd = x5)
mv x6, x5 # switch signature pointer register to avoid conflict with test
la x2, scratch
li x3, 0x92c8da58 # load x3 with value 0x92c8da58
sw x3, 0(x2) # store 0x92c8da58 in memory
flw f17, 0(x2) # load 0x92c8da58 from memory into f17
la x2, scratch
li x3, 0xe1f48a8d # load x3 with value 0xe1f48a8d
sw x3, 0(x2) # store 0xe1f48a8d in memory
flw f10, 0(x2) # load 0xe1f48a8d from memory into f10
la x2, scratch
li x3, 0x043790d7 # load x3 with value 0x043790d7
sw x3, 0(x2) # store 0x043790d7 in memory
flw f2, 0(x2) # load 0x043790d7 from memory into f2
fnmsub.s f5, f17, f10, f2 # perform operation

# Testcase cp_fd (Test destination fd = x6)
mv x7, x6 # switch signature pointer register to avoid conflict with test
la x2, scratch
li x3, 0x1fd25546 # load x3 with value 0x1fd25546
sw x3, 0(x2) # store 0x1fd25546 in memory
flw f15, 0(x2) # load 0x1fd25546 from memory into f15
la x2, scratch
li x3, 0xff3dd8bc # load x3 with value 0xff3dd8bc
sw x3, 0(x2) # store 0xff3dd8bc in memory
flw f1, 0(x2) # load 0xff3dd8bc from memory into f1
la x2, scratch
li x3, 0x210fa9a7 # load x3 with value 0x210fa9a7
sw x3, 0(x2) # store 0x210fa9a7 in memory
flw f26, 0(x2) # load 0x210fa9a7 from memory into f26
fnmsub.s f6, f15, f1, f26 # perform operation

# Testcase cp_fd (Test destination fd = x7)
mv x5, x7 # switch signature pointer register to avoid conflict with test
la x2, scratch
li x3, 0xfbcc2fb9 # load x3 with value 0xfbcc2fb9
sw x3, 0(x2) # store 0xfbcc2fb9 in memory
flw f4, 0(x2) # load 0xfbcc2fb9 from memory into f4
la x2, scratch
li x3, 0x0cc2f7fc # load x3 with value 0x0cc2f7fc
sw x3, 0(x2) # store 0x0cc2f7fc in memory
flw f20, 0(x2) # load 0x0cc2f7fc from memory into f20
la x2, scratch
li x3, 0x4a62222b # load x3 with value 0x4a62222b
sw x3, 0(x2) # store 0x4a62222b in memory
flw f9, 0(x2) # load 0x4a62222b from memory into f9
fnmsub.s f7, f4, f20, f9 # perform operation

# Testcase cp_fd (Test destination fd = x8)
la x2, scratch
li x3, 0x5e5d56d5 # load x3 with value 0x5e5d56d5
sw x3, 0(x2) # store 0x5e5d56d5 in memory
flw f30, 0(x2) # load 0x5e5d56d5 from memory into f30
la x2, scratch
li x3, 0x76a1555f # load x3 with value 0x76a1555f
sw x3, 0(x2) # store 0x76a1555f in memory
flw f15, 0(x2) # load 0x76a1555f from memory into f15
la x2, scratch
li x3, 0x4f2954e3 # load x3 with value 0x4f2954e3
sw x3, 0(x2) # store 0x4f2954e3 in memory
flw f25, 0(x2) # load 0x4f2954e3 from memory into f25
fnmsub.s f8, f30, f15, f25 # perform operation

# Testcase cp_fd (Test destination fd = x9)
la x2, scratch
li x3, 0x5f81e90e # load x3 with value 0x5f81e90e
sw x3, 0(x2) # store 0x5f81e90e in memory
flw f18, 0(x2) # load 0x5f81e90e from memory into f18
la x2, scratch
li x3, 0xbf20b669 # load x3 with value 0xbf20b669
sw x3, 0(x2) # store 0xbf20b669 in memory
flw f1, 0(x2) # load 0xbf20b669 from memory into f1
la x2, scratch
li x3, 0x316d3596 # load x3 with value 0x316d3596
sw x3, 0(x2) # store 0x316d3596 in memory
flw f22, 0(x2) # load 0x316d3596 from memory into f22
fnmsub.s f9, f18, f1, f22 # perform operation

# Testcase cp_fd (Test destination fd = x10)
la x2, scratch
li x3, 0xb4ad9d8f # load x3 with value 0xb4ad9d8f
sw x3, 0(x2) # store 0xb4ad9d8f in memory
flw f15, 0(x2) # load 0xb4ad9d8f from memory into f15
la x2, scratch
li x3, 0x35da3525 # load x3 with value 0x35da3525
sw x3, 0(x2) # store 0x35da3525 in memory
flw f29, 0(x2) # load 0x35da3525 from memory into f29
la x2, scratch
li x3, 0x3ad5f9ce # load x3 with value 0x3ad5f9ce
sw x3, 0(x2) # store 0x3ad5f9ce in memory
flw f9, 0(x2) # load 0x3ad5f9ce from memory into f9
fnmsub.s f10, f15, f29, f9 # perform operation

# Testcase cp_fd (Test destination fd = x11)
la x2, scratch
li x3, 0x471fd6ed # load x3 with value 0x471fd6ed
sw x3, 0(x2) # store 0x471fd6ed in memory
flw f8, 0(x2) # load 0x471fd6ed from memory into f8
la x2, scratch
li x3, 0x17f58ed0 # load x3 with value 0x17f58ed0
sw x3, 0(x2) # store 0x17f58ed0 in memory
flw f17, 0(x2) # load 0x17f58ed0 from memory into f17
la x2, scratch
li x3, 0x0fdb4317 # load x3 with value 0x0fdb4317
sw x3, 0(x2) # store 0x0fdb4317 in memory
flw f1, 0(x2) # load 0x0fdb4317 from memory into f1
fnmsub.s f11, f8, f17, f1 # perform operation

# Testcase cp_fd (Test destination fd = x12)
la x2, scratch
li x3, 0x52ed8e76 # load x3 with value 0x52ed8e76
sw x3, 0(x2) # store 0x52ed8e76 in memory
flw f6, 0(x2) # load 0x52ed8e76 from memory into f6
la x2, scratch
li x3, 0x5b6c7aa7 # load x3 with value 0x5b6c7aa7
sw x3, 0(x2) # store 0x5b6c7aa7 in memory
flw f23, 0(x2) # load 0x5b6c7aa7 from memory into f23
la x2, scratch
li x3, 0x6df74c92 # load x3 with value 0x6df74c92
sw x3, 0(x2) # store 0x6df74c92 in memory
flw f20, 0(x2) # load 0x6df74c92 from memory into f20
fnmsub.s f12, f6, f23, f20 # perform operation

# Testcase cp_fd (Test destination fd = x13)
la x2, scratch
li x3, 0x8df9a890 # load x3 with value 0x8df9a890
sw x3, 0(x2) # store 0x8df9a890 in memory
flw f15, 0(x2) # load 0x8df9a890 from memory into f15
la x2, scratch
li x3, 0xbd7ac2b6 # load x3 with value 0xbd7ac2b6
sw x3, 0(x2) # store 0xbd7ac2b6 in memory
flw f1, 0(x2) # load 0xbd7ac2b6 from memory into f1
la x2, scratch
li x3, 0xcc05efb3 # load x3 with value 0xcc05efb3
sw x3, 0(x2) # store 0xcc05efb3 in memory
flw f30, 0(x2) # load 0xcc05efb3 from memory into f30
fnmsub.s f13, f15, f1, f30 # perform operation

# Testcase cp_fd (Test destination fd = x14)
la x2, scratch
li x3, 0x9780dbcc # load x3 with value 0x9780dbcc
sw x3, 0(x2) # store 0x9780dbcc in memory
flw f16, 0(x2) # load 0x9780dbcc from memory into f16
la x2, scratch
li x3, 0x03f17d2e # load x3 with value 0x03f17d2e
sw x3, 0(x2) # store 0x03f17d2e in memory
flw f13, 0(x2) # load 0x03f17d2e from memory into f13
la x2, scratch
li x3, 0x958b4bbf # load x3 with value 0x958b4bbf
sw x3, 0(x2) # store 0x958b4bbf in memory
flw f23, 0(x2) # load 0x958b4bbf from memory into f23
fnmsub.s f14, f16, f13, f23 # perform operation

# Testcase cp_fd (Test destination fd = x15)
la x2, scratch
li x3, 0x28cd7d7a # load x3 with value 0x28cd7d7a
sw x3, 0(x2) # store 0x28cd7d7a in memory
flw f22, 0(x2) # load 0x28cd7d7a from memory into f22
la x2, scratch
li x3, 0x4f489559 # load x3 with value 0x4f489559
sw x3, 0(x2) # store 0x4f489559 in memory
flw f12, 0(x2) # load 0x4f489559 from memory into f12
la x2, scratch
li x3, 0x76fc62e1 # load x3 with value 0x76fc62e1
sw x3, 0(x2) # store 0x76fc62e1 in memory
flw f9, 0(x2) # load 0x76fc62e1 from memory into f9
fnmsub.s f15, f22, f12, f9 # perform operation

# Testcase cp_fd (Test destination fd = x16)
la x2, scratch
li x3, 0x1b1bf4e5 # load x3 with value 0x1b1bf4e5
sw x3, 0(x2) # store 0x1b1bf4e5 in memory
flw f4, 0(x2) # load 0x1b1bf4e5 from memory into f4
la x2, scratch
li x3, 0x623c397b # load x3 with value 0x623c397b
sw x3, 0(x2) # store 0x623c397b in memory
flw f27, 0(x2) # load 0x623c397b from memory into f27
la x2, scratch
li x3, 0x842a6f2b # load x3 with value 0x842a6f2b
sw x3, 0(x2) # store 0x842a6f2b in memory
flw f3, 0(x2) # load 0x842a6f2b from memory into f3
fnmsub.s f16, f4, f27, f3 # perform operation

# Testcase cp_fd (Test destination fd = x17)
la x2, scratch
li x3, 0x835d5c8a # load x3 with value 0x835d5c8a
sw x3, 0(x2) # store 0x835d5c8a in memory
flw f3, 0(x2) # load 0x835d5c8a from memory into f3
la x2, scratch
li x3, 0x908eaf97 # load x3 with value 0x908eaf97
sw x3, 0(x2) # store 0x908eaf97 in memory
flw f12, 0(x2) # load 0x908eaf97 from memory into f12
la x2, scratch
li x3, 0xe8c8b34e # load x3 with value 0xe8c8b34e
sw x3, 0(x2) # store 0xe8c8b34e in memory
flw f11, 0(x2) # load 0xe8c8b34e from memory into f11
fnmsub.s f17, f3, f12, f11 # perform operation

# Testcase cp_fd (Test destination fd = x18)
la x2, scratch
li x3, 0x83921190 # load x3 with value 0x83921190
sw x3, 0(x2) # store 0x83921190 in memory
flw f23, 0(x2) # load 0x83921190 from memory into f23
la x2, scratch
li x3, 0xf44ebd6c # load x3 with value 0xf44ebd6c
sw x3, 0(x2) # store 0xf44ebd6c in memory
flw f6, 0(x2) # load 0xf44ebd6c from memory into f6
la x2, scratch
li x3, 0x8667581b # load x3 with value 0x8667581b
sw x3, 0(x2) # store 0x8667581b in memory
flw f10, 0(x2) # load 0x8667581b from memory into f10
fnmsub.s f18, f23, f6, f10 # perform operation

# Testcase cp_fd (Test destination fd = x19)
la x2, scratch
li x3, 0xde3e0452 # load x3 with value 0xde3e0452
sw x3, 0(x2) # store 0xde3e0452 in memory
flw f6, 0(x2) # load 0xde3e0452 from memory into f6
la x2, scratch
li x3, 0xb6799b88 # load x3 with value 0xb6799b88
sw x3, 0(x2) # store 0xb6799b88 in memory
flw f19, 0(x2) # load 0xb6799b88 from memory into f19
la x2, scratch
li x3, 0x90ca983a # load x3 with value 0x90ca983a
sw x3, 0(x2) # store 0x90ca983a in memory
flw f24, 0(x2) # load 0x90ca983a from memory into f24
fnmsub.s f19, f6, f19, f24 # perform operation

# Testcase cp_fd (Test destination fd = x20)
la x2, scratch
li x3, 0x2bdb54e2 # load x3 with value 0x2bdb54e2
sw x3, 0(x2) # store 0x2bdb54e2 in memory
flw f8, 0(x2) # load 0x2bdb54e2 from memory into f8
la x2, scratch
li x3, 0x5ce83f2a # load x3 with value 0x5ce83f2a
sw x3, 0(x2) # store 0x5ce83f2a in memory
flw f15, 0(x2) # load 0x5ce83f2a from memory into f15
la x2, scratch
li x3, 0x53b46856 # load x3 with value 0x53b46856
sw x3, 0(x2) # store 0x53b46856 in memory
flw f7, 0(x2) # load 0x53b46856 from memory into f7
fnmsub.s f20, f8, f15, f7 # perform operation

# Testcase cp_fd (Test destination fd = x21)
la x2, scratch
li x3, 0x6742077a # load x3 with value 0x6742077a
sw x3, 0(x2) # store 0x6742077a in memory
flw f15, 0(x2) # load 0x6742077a from memory into f15
la x2, scratch
li x3, 0xe4295977 # load x3 with value 0xe4295977
sw x3, 0(x2) # store 0xe4295977 in memory
flw f29, 0(x2) # load 0xe4295977 from memory into f29
la x2, scratch
li x3, 0xe4838fff # load x3 with value 0xe4838fff
sw x3, 0(x2) # store 0xe4838fff in memory
flw f19, 0(x2) # load 0xe4838fff from memory into f19
fnmsub.s f21, f15, f29, f19 # perform operation

# Testcase cp_fd (Test destination fd = x22)
la x2, scratch
li x3, 0x70ecabba # load x3 with value 0x70ecabba
sw x3, 0(x2) # store 0x70ecabba in memory
flw f29, 0(x2) # load 0x70ecabba from memory into f29
la x2, scratch
li x3, 0x054d53b8 # load x3 with value 0x054d53b8
sw x3, 0(x2) # store 0x054d53b8 in memory
flw f7, 0(x2) # load 0x054d53b8 from memory into f7
la x2, scratch
li x3, 0xab945df7 # load x3 with value 0xab945df7
sw x3, 0(x2) # store 0xab945df7 in memory
flw f22, 0(x2) # load 0xab945df7 from memory into f22
fnmsub.s f22, f29, f7, f22 # perform operation

# Testcase cp_fd (Test destination fd = x23)
la x2, scratch
li x3, 0xd62959ce # load x3 with value 0xd62959ce
sw x3, 0(x2) # store 0xd62959ce in memory
flw f27, 0(x2) # load 0xd62959ce from memory into f27
la x2, scratch
li x3, 0xd554be5b # load x3 with value 0xd554be5b
sw x3, 0(x2) # store 0xd554be5b in memory
flw f8, 0(x2) # load 0xd554be5b from memory into f8
la x2, scratch
li x3, 0x0ef38163 # load x3 with value 0x0ef38163
sw x3, 0(x2) # store 0x0ef38163 in memory
flw f1, 0(x2) # load 0x0ef38163 from memory into f1
fnmsub.s f23, f27, f8, f1 # perform operation

# Testcase cp_fd (Test destination fd = x24)
la x2, scratch
li x3, 0xe0411a9f # load x3 with value 0xe0411a9f
sw x3, 0(x2) # store 0xe0411a9f in memory
flw f13, 0(x2) # load 0xe0411a9f from memory into f13
la x2, scratch
li x3, 0x711d2e45 # load x3 with value 0x711d2e45
sw x3, 0(x2) # store 0x711d2e45 in memory
flw f10, 0(x2) # load 0x711d2e45 from memory into f10
la x2, scratch
li x3, 0x8cc2e4b6 # load x3 with value 0x8cc2e4b6
sw x3, 0(x2) # store 0x8cc2e4b6 in memory
flw f14, 0(x2) # load 0x8cc2e4b6 from memory into f14
fnmsub.s f24, f13, f10, f14 # perform operation

# Testcase cp_fd (Test destination fd = x25)
la x2, scratch
li x3, 0x397950ba # load x3 with value 0x397950ba
sw x3, 0(x2) # store 0x397950ba in memory
flw f27, 0(x2) # load 0x397950ba from memory into f27
la x2, scratch
li x3, 0x9417442c # load x3 with value 0x9417442c
sw x3, 0(x2) # store 0x9417442c in memory
flw f24, 0(x2) # load 0x9417442c from memory into f24
la x2, scratch
li x3, 0x948e6fbb # load x3 with value 0x948e6fbb
sw x3, 0(x2) # store 0x948e6fbb in memory
flw f13, 0(x2) # load 0x948e6fbb from memory into f13
fnmsub.s f25, f27, f24, f13 # perform operation

# Testcase cp_fd (Test destination fd = x26)
la x2, scratch
li x3, 0xd4130f25 # load x3 with value 0xd4130f25
sw x3, 0(x2) # store 0xd4130f25 in memory
flw f25, 0(x2) # load 0xd4130f25 from memory into f25
la x2, scratch
li x3, 0x7893e551 # load x3 with value 0x7893e551
sw x3, 0(x2) # store 0x7893e551 in memory
flw f31, 0(x2) # load 0x7893e551 from memory into f31
la x2, scratch
li x3, 0x3c885c61 # load x3 with value 0x3c885c61
sw x3, 0(x2) # store 0x3c885c61 in memory
flw f26, 0(x2) # load 0x3c885c61 from memory into f26
fnmsub.s f26, f25, f31, f26 # perform operation

# Testcase cp_fd (Test destination fd = x27)
la x2, scratch
li x3, 0x47fe6db5 # load x3 with value 0x47fe6db5
sw x3, 0(x2) # store 0x47fe6db5 in memory
flw f9, 0(x2) # load 0x47fe6db5 from memory into f9
la x2, scratch
li x3, 0x5ff21dbf # load x3 with value 0x5ff21dbf
sw x3, 0(x2) # store 0x5ff21dbf in memory
flw f6, 0(x2) # load 0x5ff21dbf from memory into f6
la x2, scratch
li x3, 0x2d46ae54 # load x3 with value 0x2d46ae54
sw x3, 0(x2) # store 0x2d46ae54 in memory
flw f10, 0(x2) # load 0x2d46ae54 from memory into f10
fnmsub.s f27, f9, f6, f10 # perform operation

# Testcase cp_fd (Test destination fd = x28)
la x2, scratch
li x3, 0xeec6ad85 # load x3 with value 0xeec6ad85
sw x3, 0(x2) # store 0xeec6ad85 in memory
flw f11, 0(x2) # load 0xeec6ad85 from memory into f11
la x2, scratch
li x3, 0xad7ab314 # load x3 with value 0xad7ab314
sw x3, 0(x2) # store 0xad7ab314 in memory
flw f13, 0(x2) # load 0xad7ab314 from memory into f13
la x2, scratch
li x3, 0x6346c2d5 # load x3 with value 0x6346c2d5
sw x3, 0(x2) # store 0x6346c2d5 in memory
flw f6, 0(x2) # load 0x6346c2d5 from memory into f6
fnmsub.s f28, f11, f13, f6 # perform operation

# Testcase cp_fd (Test destination fd = x29)
la x2, scratch
li x3, 0xdf84f55b # load x3 with value 0xdf84f55b
sw x3, 0(x2) # store 0xdf84f55b in memory
flw f6, 0(x2) # load 0xdf84f55b from memory into f6
la x2, scratch
li x3, 0xa39cce98 # load x3 with value 0xa39cce98
sw x3, 0(x2) # store 0xa39cce98 in memory
flw f26, 0(x2) # load 0xa39cce98 from memory into f26
la x2, scratch
li x3, 0x82f71972 # load x3 with value 0x82f71972
sw x3, 0(x2) # store 0x82f71972 in memory
flw f20, 0(x2) # load 0x82f71972 from memory into f20
fnmsub.s f29, f6, f26, f20 # perform operation

# Testcase cp_fd (Test destination fd = x30)
la x2, scratch
li x3, 0xad67a168 # load x3 with value 0xad67a168
sw x3, 0(x2) # store 0xad67a168 in memory
flw f14, 0(x2) # load 0xad67a168 from memory into f14
la x2, scratch
li x3, 0x83dbe2e3 # load x3 with value 0x83dbe2e3
sw x3, 0(x2) # store 0x83dbe2e3 in memory
flw f2, 0(x2) # load 0x83dbe2e3 from memory into f2
la x2, scratch
li x3, 0xdef2a0e9 # load x3 with value 0xdef2a0e9
sw x3, 0(x2) # store 0xdef2a0e9 in memory
flw f9, 0(x2) # load 0xdef2a0e9 from memory into f9
fnmsub.s f30, f14, f2, f9 # perform operation

# Testcase cp_fd (Test destination fd = x31)
la x2, scratch
li x3, 0xde38584b # load x3 with value 0xde38584b
sw x3, 0(x2) # store 0xde38584b in memory
flw f4, 0(x2) # load 0xde38584b from memory into f4
la x2, scratch
li x3, 0x1c133bae # load x3 with value 0x1c133bae
sw x3, 0(x2) # store 0x1c133bae in memory
flw f22, 0(x2) # load 0x1c133bae from memory into f22
la x2, scratch
li x3, 0xc530e131 # load x3 with value 0xc530e131
sw x3, 0(x2) # store 0xc530e131 in memory
flw f10, 0(x2) # load 0xc530e131 from memory into f10
fnmsub.s f31, f4, f22, f10 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f26, 0(x2) # load 0x00000000 from memory into f26
la x2, scratch
li x3, 0xba8fa706 # load x3 with value 0xba8fa706
sw x3, 0(x2) # store 0xba8fa706 in memory
flw f10, 0(x2) # load 0xba8fa706 from memory into f10
la x2, scratch
li x3, 0xaf3bd565 # load x3 with value 0xaf3bd565
sw x3, 0(x2) # store 0xaf3bd565 in memory
flw f25, 0(x2) # load 0xaf3bd565 from memory into f25
fnmsub.s f24, f26, f10, f25 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x80000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f2, 0(x2) # load 0x80000000 from memory into f2
la x2, scratch
li x3, 0xe50a0745 # load x3 with value 0xe50a0745
sw x3, 0(x2) # store 0xe50a0745 in memory
flw f6, 0(x2) # load 0xe50a0745 from memory into f6
la x2, scratch
li x3, 0xe954d98f # load x3 with value 0xe954d98f
sw x3, 0(x2) # store 0xe954d98f in memory
flw f29, 0(x2) # load 0xe954d98f from memory into f29
fnmsub.s f7, f2, f6, f29 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x3f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f16, 0(x2) # load 0x3f800000 from memory into f16
la x2, scratch
li x3, 0xd1cf4a68 # load x3 with value 0xd1cf4a68
sw x3, 0(x2) # store 0xd1cf4a68 in memory
flw f26, 0(x2) # load 0xd1cf4a68 from memory into f26
la x2, scratch
li x3, 0xe9b2d72e # load x3 with value 0xe9b2d72e
sw x3, 0(x2) # store 0xe9b2d72e in memory
flw f9, 0(x2) # load 0xe9b2d72e from memory into f9
fnmsub.s f31, f16, f26, f9 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0xbf800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f9, 0(x2) # load 0xbf800000 from memory into f9
la x2, scratch
li x3, 0x07d8a356 # load x3 with value 0x07d8a356
sw x3, 0(x2) # store 0x07d8a356 in memory
flw f1, 0(x2) # load 0x07d8a356 from memory into f1
la x2, scratch
li x3, 0xa595dcbc # load x3 with value 0xa595dcbc
sw x3, 0(x2) # store 0xa595dcbc in memory
flw f24, 0(x2) # load 0xa595dcbc from memory into f24
fnmsub.s f16, f9, f1, f24 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x3fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f11, 0(x2) # load 0x3fc00000 from memory into f11
la x2, scratch
li x3, 0x23c42a9d # load x3 with value 0x23c42a9d
sw x3, 0(x2) # store 0x23c42a9d in memory
flw f10, 0(x2) # load 0x23c42a9d from memory into f10
la x2, scratch
li x3, 0x042a9a1b # load x3 with value 0x042a9a1b
sw x3, 0(x2) # store 0x042a9a1b in memory
flw f7, 0(x2) # load 0x042a9a1b from memory into f7
fnmsub.s f20, f11, f10, f7 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0xbfc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f3, 0(x2) # load 0xbfc00000 from memory into f3
la x2, scratch
li x3, 0xdb4a06bb # load x3 with value 0xdb4a06bb
sw x3, 0(x2) # store 0xdb4a06bb in memory
flw f19, 0(x2) # load 0xdb4a06bb from memory into f19
la x2, scratch
li x3, 0xd141f65b # load x3 with value 0xd141f65b
sw x3, 0(x2) # store 0xd141f65b in memory
flw f20, 0(x2) # load 0xd141f65b from memory into f20
fnmsub.s f18, f3, f19, f20 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x40000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f17, 0(x2) # load 0x40000000 from memory into f17
la x2, scratch
li x3, 0xcfdc9c1c # load x3 with value 0xcfdc9c1c
sw x3, 0(x2) # store 0xcfdc9c1c in memory
flw f4, 0(x2) # load 0xcfdc9c1c from memory into f4
la x2, scratch
li x3, 0x04aa5075 # load x3 with value 0x04aa5075
sw x3, 0(x2) # store 0x04aa5075 in memory
flw f7, 0(x2) # load 0x04aa5075 from memory into f7
fnmsub.s f21, f17, f4, f7 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0xc0000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f18, 0(x2) # load 0xc0000000 from memory into f18
la x2, scratch
li x3, 0xd29ebf2e # load x3 with value 0xd29ebf2e
sw x3, 0(x2) # store 0xd29ebf2e in memory
flw f11, 0(x2) # load 0xd29ebf2e from memory into f11
la x2, scratch
li x3, 0xedac45f9 # load x3 with value 0xedac45f9
sw x3, 0(x2) # store 0xedac45f9 in memory
flw f3, 0(x2) # load 0xedac45f9 from memory into f3
fnmsub.s f23, f18, f11, f3 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f19, 0(x2) # load 0x00800000 from memory into f19
la x2, scratch
li x3, 0xb05797a3 # load x3 with value 0xb05797a3
sw x3, 0(x2) # store 0xb05797a3 in memory
flw f25, 0(x2) # load 0xb05797a3 from memory into f25
la x2, scratch
li x3, 0x8e38a250 # load x3 with value 0x8e38a250
sw x3, 0(x2) # store 0x8e38a250 in memory
flw f12, 0(x2) # load 0x8e38a250 from memory into f12
fnmsub.s f31, f19, f25, f12 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x80800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f11, 0(x2) # load 0x80800000 from memory into f11
la x2, scratch
li x3, 0x916b6fe7 # load x3 with value 0x916b6fe7
sw x3, 0(x2) # store 0x916b6fe7 in memory
flw f14, 0(x2) # load 0x916b6fe7 from memory into f14
la x2, scratch
li x3, 0x294c10b4 # load x3 with value 0x294c10b4
sw x3, 0(x2) # store 0x294c10b4 in memory
flw f3, 0(x2) # load 0x294c10b4 from memory into f3
fnmsub.s f1, f11, f14, f3 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x7f7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f14, 0(x2) # load 0x7f7fffff from memory into f14
la x2, scratch
li x3, 0x4523057f # load x3 with value 0x4523057f
sw x3, 0(x2) # store 0x4523057f in memory
flw f23, 0(x2) # load 0x4523057f from memory into f23
la x2, scratch
li x3, 0x6fa3a763 # load x3 with value 0x6fa3a763
sw x3, 0(x2) # store 0x6fa3a763 in memory
flw f22, 0(x2) # load 0x6fa3a763 from memory into f22
fnmsub.s f10, f14, f23, f22 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0xff7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f16, 0(x2) # load 0xff7fffff from memory into f16
la x2, scratch
li x3, 0x065266fc # load x3 with value 0x065266fc
sw x3, 0(x2) # store 0x065266fc in memory
flw f27, 0(x2) # load 0x065266fc from memory into f27
la x2, scratch
li x3, 0xd20c9084 # load x3 with value 0xd20c9084
sw x3, 0(x2) # store 0xd20c9084 in memory
flw f3, 0(x2) # load 0xd20c9084 from memory into f3
fnmsub.s f15, f16, f27, f3 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f10, 0(x2) # load 0x007fffff from memory into f10
la x2, scratch
li x3, 0xd90c995a # load x3 with value 0xd90c995a
sw x3, 0(x2) # store 0xd90c995a in memory
flw f9, 0(x2) # load 0xd90c995a from memory into f9
la x2, scratch
li x3, 0xd546b7b9 # load x3 with value 0xd546b7b9
sw x3, 0(x2) # store 0xd546b7b9 in memory
flw f30, 0(x2) # load 0xd546b7b9 from memory into f30
fnmsub.s f14, f10, f9, f30 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x807fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f7, 0(x2) # load 0x807fffff from memory into f7
la x2, scratch
li x3, 0x180e4d8a # load x3 with value 0x180e4d8a
sw x3, 0(x2) # store 0x180e4d8a in memory
flw f4, 0(x2) # load 0x180e4d8a from memory into f4
la x2, scratch
li x3, 0x3cc63067 # load x3 with value 0x3cc63067
sw x3, 0(x2) # store 0x3cc63067 in memory
flw f14, 0(x2) # load 0x3cc63067 from memory into f14
fnmsub.s f26, f7, f4, f14 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f9, 0(x2) # load 0x00400000 from memory into f9
la x2, scratch
li x3, 0x669bf595 # load x3 with value 0x669bf595
sw x3, 0(x2) # store 0x669bf595 in memory
flw f24, 0(x2) # load 0x669bf595 from memory into f24
la x2, scratch
li x3, 0x5b2f5228 # load x3 with value 0x5b2f5228
sw x3, 0(x2) # store 0x5b2f5228 in memory
flw f29, 0(x2) # load 0x5b2f5228 from memory into f29
fnmsub.s f18, f9, f24, f29 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x80400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f28, 0(x2) # load 0x80400000 from memory into f28
la x2, scratch
li x3, 0xbf8cdfd6 # load x3 with value 0xbf8cdfd6
sw x3, 0(x2) # store 0xbf8cdfd6 in memory
flw f19, 0(x2) # load 0xbf8cdfd6 from memory into f19
la x2, scratch
li x3, 0x283b2a24 # load x3 with value 0x283b2a24
sw x3, 0(x2) # store 0x283b2a24 in memory
flw f22, 0(x2) # load 0x283b2a24 from memory into f22
fnmsub.s f2, f28, f19, f22 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x1)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f21, 0(x2) # load 0x00000001 from memory into f21
la x2, scratch
li x3, 0xf6235969 # load x3 with value 0xf6235969
sw x3, 0(x2) # store 0xf6235969 in memory
flw f19, 0(x2) # load 0xf6235969 from memory into f19
la x2, scratch
li x3, 0x0a695277 # load x3 with value 0x0a695277
sw x3, 0(x2) # store 0x0a695277 in memory
flw f9, 0(x2) # load 0x0a695277 from memory into f9
fnmsub.s f18, f21, f19, f9 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x80000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f8, 0(x2) # load 0x80000001 from memory into f8
la x2, scratch
li x3, 0x8fa3fc86 # load x3 with value 0x8fa3fc86
sw x3, 0(x2) # store 0x8fa3fc86 in memory
flw f27, 0(x2) # load 0x8fa3fc86 from memory into f27
la x2, scratch
li x3, 0x156ff1c9 # load x3 with value 0x156ff1c9
sw x3, 0(x2) # store 0x156ff1c9 in memory
flw f20, 0(x2) # load 0x156ff1c9 from memory into f20
fnmsub.s f28, f8, f27, f20 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x7f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f12, 0(x2) # load 0x7f800000 from memory into f12
la x2, scratch
li x3, 0xf4623a6c # load x3 with value 0xf4623a6c
sw x3, 0(x2) # store 0xf4623a6c in memory
flw f10, 0(x2) # load 0xf4623a6c from memory into f10
la x2, scratch
li x3, 0xb3f6a99b # load x3 with value 0xb3f6a99b
sw x3, 0(x2) # store 0xb3f6a99b in memory
flw f30, 0(x2) # load 0xb3f6a99b from memory into f30
fnmsub.s f18, f12, f10, f30 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0xff800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f25, 0(x2) # load 0xff800000 from memory into f25
la x2, scratch
li x3, 0x91cb0d7b # load x3 with value 0x91cb0d7b
sw x3, 0(x2) # store 0x91cb0d7b in memory
flw f15, 0(x2) # load 0x91cb0d7b from memory into f15
la x2, scratch
li x3, 0x93aad09a # load x3 with value 0x93aad09a
sw x3, 0(x2) # store 0x93aad09a in memory
flw f10, 0(x2) # load 0x93aad09a from memory into f10
fnmsub.s f19, f25, f15, f10 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x7fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f3, 0(x2) # load 0x7fc00000 from memory into f3
la x2, scratch
li x3, 0x4234375e # load x3 with value 0x4234375e
sw x3, 0(x2) # store 0x4234375e in memory
flw f8, 0(x2) # load 0x4234375e from memory into f8
la x2, scratch
li x3, 0x2dcb78f6 # load x3 with value 0x2dcb78f6
sw x3, 0(x2) # store 0x2dcb78f6 in memory
flw f29, 0(x2) # load 0x2dcb78f6 from memory into f29
fnmsub.s f4, f3, f8, f29 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x7fffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f23, 0(x2) # load 0x7fffffff from memory into f23
la x2, scratch
li x3, 0xe8590cee # load x3 with value 0xe8590cee
sw x3, 0(x2) # store 0xe8590cee in memory
flw f17, 0(x2) # load 0xe8590cee from memory into f17
la x2, scratch
li x3, 0x2e754c6b # load x3 with value 0x2e754c6b
sw x3, 0(x2) # store 0x2e754c6b in memory
flw f20, 0(x2) # load 0x2e754c6b from memory into f20
fnmsub.s f28, f23, f17, f20 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0xffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f7, 0(x2) # load 0xffffffff from memory into f7
la x2, scratch
li x3, 0x3ba6a5c7 # load x3 with value 0x3ba6a5c7
sw x3, 0(x2) # store 0x3ba6a5c7 in memory
flw f23, 0(x2) # load 0x3ba6a5c7 from memory into f23
la x2, scratch
li x3, 0x184ce819 # load x3 with value 0x184ce819
sw x3, 0(x2) # store 0x184ce819 in memory
flw f25, 0(x2) # load 0x184ce819 from memory into f25
fnmsub.s f18, f7, f23, f25 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x7f800001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f30, 0(x2) # load 0x7f800001 from memory into f30
la x2, scratch
li x3, 0x0fd5d6a9 # load x3 with value 0x0fd5d6a9
sw x3, 0(x2) # store 0x0fd5d6a9 in memory
flw f15, 0(x2) # load 0x0fd5d6a9 from memory into f15
la x2, scratch
li x3, 0xfd91fcb9 # load x3 with value 0xfd91fcb9
sw x3, 0(x2) # store 0xfd91fcb9 in memory
flw f2, 0(x2) # load 0xfd91fcb9 from memory into f2
fnmsub.s f18, f30, f15, f2 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x7fbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f25, 0(x2) # load 0x7fbfffff from memory into f25
la x2, scratch
li x3, 0xbd596090 # load x3 with value 0xbd596090
sw x3, 0(x2) # store 0xbd596090 in memory
flw f30, 0(x2) # load 0xbd596090 from memory into f30
la x2, scratch
li x3, 0x63ccac7d # load x3 with value 0x63ccac7d
sw x3, 0(x2) # store 0x63ccac7d in memory
flw f24, 0(x2) # load 0x63ccac7d from memory into f24
fnmsub.s f22, f25, f30, f24 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0xffbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f13, 0(x2) # load 0xffbfffff from memory into f13
la x2, scratch
li x3, 0x71c7650e # load x3 with value 0x71c7650e
sw x3, 0(x2) # store 0x71c7650e in memory
flw f31, 0(x2) # load 0x71c7650e from memory into f31
la x2, scratch
li x3, 0xfc2bb039 # load x3 with value 0xfc2bb039
sw x3, 0(x2) # store 0xfc2bb039 in memory
flw f28, 0(x2) # load 0xfc2bb039 from memory into f28
fnmsub.s f26, f13, f31, f28 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x7ef8654f)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f4, 0(x2) # load 0x7ef8654f from memory into f4
la x2, scratch
li x3, 0x9b9cb859 # load x3 with value 0x9b9cb859
sw x3, 0(x2) # store 0x9b9cb859 in memory
flw f31, 0(x2) # load 0x9b9cb859 from memory into f31
la x2, scratch
li x3, 0xded08205 # load x3 with value 0xded08205
sw x3, 0(x2) # store 0xded08205 in memory
flw f13, 0(x2) # load 0xded08205 from memory into f13
fnmsub.s f25, f4, f31, f13 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x813d9ab0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f15, 0(x2) # load 0x813d9ab0 from memory into f15
la x2, scratch
li x3, 0xecaeb133 # load x3 with value 0xecaeb133
sw x3, 0(x2) # store 0xecaeb133 in memory
flw f3, 0(x2) # load 0xecaeb133 from memory into f3
la x2, scratch
li x3, 0x038ba329 # load x3 with value 0x038ba329
sw x3, 0(x2) # store 0x038ba329 in memory
flw f4, 0(x2) # load 0x038ba329 from memory into f4
fnmsub.s f14, f15, f3, f4 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x0)
la x2, scratch
li x3, 0x383a7385 # load x3 with value 0x383a7385
sw x3, 0(x2) # store 0x383a7385 in memory
flw f31, 0(x2) # load 0x383a7385 from memory into f31
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f11, 0(x2) # load 0x00000000 from memory into f11
la x2, scratch
li x3, 0x5cde23ce # load x3 with value 0x5cde23ce
sw x3, 0(x2) # store 0x5cde23ce in memory
flw f29, 0(x2) # load 0x5cde23ce from memory into f29
fnmsub.s f26, f31, f11, f29 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x80000000)
la x2, scratch
li x3, 0x4ea079f2 # load x3 with value 0x4ea079f2
sw x3, 0(x2) # store 0x4ea079f2 in memory
flw f1, 0(x2) # load 0x4ea079f2 from memory into f1
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f17, 0(x2) # load 0x80000000 from memory into f17
la x2, scratch
li x3, 0xe6693255 # load x3 with value 0xe6693255
sw x3, 0(x2) # store 0xe6693255 in memory
flw f28, 0(x2) # load 0xe6693255 from memory into f28
fnmsub.s f25, f1, f17, f28 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x3f800000)
la x2, scratch
li x3, 0x9ab5c509 # load x3 with value 0x9ab5c509
sw x3, 0(x2) # store 0x9ab5c509 in memory
flw f6, 0(x2) # load 0x9ab5c509 from memory into f6
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f2, 0(x2) # load 0x3f800000 from memory into f2
la x2, scratch
li x3, 0x0dc46446 # load x3 with value 0x0dc46446
sw x3, 0(x2) # store 0x0dc46446 in memory
flw f22, 0(x2) # load 0x0dc46446 from memory into f22
fnmsub.s f30, f6, f2, f22 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0xbf800000)
la x2, scratch
li x3, 0xd6260c45 # load x3 with value 0xd6260c45
sw x3, 0(x2) # store 0xd6260c45 in memory
flw f1, 0(x2) # load 0xd6260c45 from memory into f1
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f18, 0(x2) # load 0xbf800000 from memory into f18
la x2, scratch
li x3, 0x6a0eea8b # load x3 with value 0x6a0eea8b
sw x3, 0(x2) # store 0x6a0eea8b in memory
flw f24, 0(x2) # load 0x6a0eea8b from memory into f24
fnmsub.s f14, f1, f18, f24 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x3fc00000)
la x2, scratch
li x3, 0xbbd6f14e # load x3 with value 0xbbd6f14e
sw x3, 0(x2) # store 0xbbd6f14e in memory
flw f6, 0(x2) # load 0xbbd6f14e from memory into f6
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f8, 0(x2) # load 0x3fc00000 from memory into f8
la x2, scratch
li x3, 0x2d389101 # load x3 with value 0x2d389101
sw x3, 0(x2) # store 0x2d389101 in memory
flw f30, 0(x2) # load 0x2d389101 from memory into f30
fnmsub.s f1, f6, f8, f30 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0xbfc00000)
la x2, scratch
li x3, 0x084beb0b # load x3 with value 0x084beb0b
sw x3, 0(x2) # store 0x084beb0b in memory
flw f15, 0(x2) # load 0x084beb0b from memory into f15
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f24, 0(x2) # load 0xbfc00000 from memory into f24
la x2, scratch
li x3, 0x1153dea7 # load x3 with value 0x1153dea7
sw x3, 0(x2) # store 0x1153dea7 in memory
flw f13, 0(x2) # load 0x1153dea7 from memory into f13
fnmsub.s f6, f15, f24, f13 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x40000000)
la x2, scratch
li x3, 0xeb631f8f # load x3 with value 0xeb631f8f
sw x3, 0(x2) # store 0xeb631f8f in memory
flw f31, 0(x2) # load 0xeb631f8f from memory into f31
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f22, 0(x2) # load 0x40000000 from memory into f22
la x2, scratch
li x3, 0x5ec3f2a8 # load x3 with value 0x5ec3f2a8
sw x3, 0(x2) # store 0x5ec3f2a8 in memory
flw f26, 0(x2) # load 0x5ec3f2a8 from memory into f26
fnmsub.s f27, f31, f22, f26 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0xc0000000)
la x2, scratch
li x3, 0xda168e80 # load x3 with value 0xda168e80
sw x3, 0(x2) # store 0xda168e80 in memory
flw f10, 0(x2) # load 0xda168e80 from memory into f10
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f17, 0(x2) # load 0xc0000000 from memory into f17
la x2, scratch
li x3, 0x6abdeaa6 # load x3 with value 0x6abdeaa6
sw x3, 0(x2) # store 0x6abdeaa6 in memory
flw f13, 0(x2) # load 0x6abdeaa6 from memory into f13
fnmsub.s f25, f10, f17, f13 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x800000)
la x2, scratch
li x3, 0xf141b678 # load x3 with value 0xf141b678
sw x3, 0(x2) # store 0xf141b678 in memory
flw f22, 0(x2) # load 0xf141b678 from memory into f22
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f27, 0(x2) # load 0x00800000 from memory into f27
la x2, scratch
li x3, 0xb7328a22 # load x3 with value 0xb7328a22
sw x3, 0(x2) # store 0xb7328a22 in memory
flw f31, 0(x2) # load 0xb7328a22 from memory into f31
fnmsub.s f14, f22, f27, f31 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x80800000)
la x2, scratch
li x3, 0xc446dbf3 # load x3 with value 0xc446dbf3
sw x3, 0(x2) # store 0xc446dbf3 in memory
flw f12, 0(x2) # load 0xc446dbf3 from memory into f12
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f18, 0(x2) # load 0x80800000 from memory into f18
la x2, scratch
li x3, 0x5c90a5ba # load x3 with value 0x5c90a5ba
sw x3, 0(x2) # store 0x5c90a5ba in memory
flw f27, 0(x2) # load 0x5c90a5ba from memory into f27
fnmsub.s f22, f12, f18, f27 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x7f7fffff)
la x2, scratch
li x3, 0x1b9e94cf # load x3 with value 0x1b9e94cf
sw x3, 0(x2) # store 0x1b9e94cf in memory
flw f2, 0(x2) # load 0x1b9e94cf from memory into f2
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f14, 0(x2) # load 0x7f7fffff from memory into f14
la x2, scratch
li x3, 0x6a8f35ab # load x3 with value 0x6a8f35ab
sw x3, 0(x2) # store 0x6a8f35ab in memory
flw f17, 0(x2) # load 0x6a8f35ab from memory into f17
fnmsub.s f26, f2, f14, f17 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0xff7fffff)
la x2, scratch
li x3, 0x68b06c0d # load x3 with value 0x68b06c0d
sw x3, 0(x2) # store 0x68b06c0d in memory
flw f24, 0(x2) # load 0x68b06c0d from memory into f24
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f10, 0(x2) # load 0xff7fffff from memory into f10
la x2, scratch
li x3, 0xcf3155d8 # load x3 with value 0xcf3155d8
sw x3, 0(x2) # store 0xcf3155d8 in memory
flw f14, 0(x2) # load 0xcf3155d8 from memory into f14
fnmsub.s f4, f24, f10, f14 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x7fffff)
la x2, scratch
li x3, 0xf2c02400 # load x3 with value 0xf2c02400
sw x3, 0(x2) # store 0xf2c02400 in memory
flw f24, 0(x2) # load 0xf2c02400 from memory into f24
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f1, 0(x2) # load 0x007fffff from memory into f1
la x2, scratch
li x3, 0xf3adf1ae # load x3 with value 0xf3adf1ae
sw x3, 0(x2) # store 0xf3adf1ae in memory
flw f6, 0(x2) # load 0xf3adf1ae from memory into f6
fnmsub.s f28, f24, f1, f6 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x807fffff)
la x2, scratch
li x3, 0x4e92e4e5 # load x3 with value 0x4e92e4e5
sw x3, 0(x2) # store 0x4e92e4e5 in memory
flw f17, 0(x2) # load 0x4e92e4e5 from memory into f17
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f31, 0(x2) # load 0x807fffff from memory into f31
la x2, scratch
li x3, 0xf12c22ce # load x3 with value 0xf12c22ce
sw x3, 0(x2) # store 0xf12c22ce in memory
flw f24, 0(x2) # load 0xf12c22ce from memory into f24
fnmsub.s f22, f17, f31, f24 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x400000)
la x2, scratch
li x3, 0xf6a7a309 # load x3 with value 0xf6a7a309
sw x3, 0(x2) # store 0xf6a7a309 in memory
flw f30, 0(x2) # load 0xf6a7a309 from memory into f30
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f21, 0(x2) # load 0x00400000 from memory into f21
la x2, scratch
li x3, 0x6a240c85 # load x3 with value 0x6a240c85
sw x3, 0(x2) # store 0x6a240c85 in memory
flw f7, 0(x2) # load 0x6a240c85 from memory into f7
fnmsub.s f25, f30, f21, f7 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x80400000)
la x2, scratch
li x3, 0x55c82b07 # load x3 with value 0x55c82b07
sw x3, 0(x2) # store 0x55c82b07 in memory
flw f9, 0(x2) # load 0x55c82b07 from memory into f9
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f21, 0(x2) # load 0x80400000 from memory into f21
la x2, scratch
li x3, 0xff5fcbd3 # load x3 with value 0xff5fcbd3
sw x3, 0(x2) # store 0xff5fcbd3 in memory
flw f1, 0(x2) # load 0xff5fcbd3 from memory into f1
fnmsub.s f18, f9, f21, f1 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x1)
la x2, scratch
li x3, 0x7ecf29db # load x3 with value 0x7ecf29db
sw x3, 0(x2) # store 0x7ecf29db in memory
flw f3, 0(x2) # load 0x7ecf29db from memory into f3
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f7, 0(x2) # load 0x00000001 from memory into f7
la x2, scratch
li x3, 0x7f61dbd6 # load x3 with value 0x7f61dbd6
sw x3, 0(x2) # store 0x7f61dbd6 in memory
flw f18, 0(x2) # load 0x7f61dbd6 from memory into f18
fnmsub.s f2, f3, f7, f18 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x80000001)
la x2, scratch
li x3, 0x062eee26 # load x3 with value 0x062eee26
sw x3, 0(x2) # store 0x062eee26 in memory
flw f6, 0(x2) # load 0x062eee26 from memory into f6
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f15, 0(x2) # load 0x80000001 from memory into f15
la x2, scratch
li x3, 0x7f8c54c2 # load x3 with value 0x7f8c54c2
sw x3, 0(x2) # store 0x7f8c54c2 in memory
flw f9, 0(x2) # load 0x7f8c54c2 from memory into f9
fnmsub.s f24, f6, f15, f9 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x7f800000)
la x2, scratch
li x3, 0x2e5321cd # load x3 with value 0x2e5321cd
sw x3, 0(x2) # store 0x2e5321cd in memory
flw f12, 0(x2) # load 0x2e5321cd from memory into f12
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f7, 0(x2) # load 0x7f800000 from memory into f7
la x2, scratch
li x3, 0xd59c4afb # load x3 with value 0xd59c4afb
sw x3, 0(x2) # store 0xd59c4afb in memory
flw f24, 0(x2) # load 0xd59c4afb from memory into f24
fnmsub.s f23, f12, f7, f24 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0xff800000)
la x2, scratch
li x3, 0xa8d96def # load x3 with value 0xa8d96def
sw x3, 0(x2) # store 0xa8d96def in memory
flw f28, 0(x2) # load 0xa8d96def from memory into f28
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f9, 0(x2) # load 0xff800000 from memory into f9
la x2, scratch
li x3, 0x388d0931 # load x3 with value 0x388d0931
sw x3, 0(x2) # store 0x388d0931 in memory
flw f18, 0(x2) # load 0x388d0931 from memory into f18
fnmsub.s f16, f28, f9, f18 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x7fc00000)
la x2, scratch
li x3, 0xde7b0c18 # load x3 with value 0xde7b0c18
sw x3, 0(x2) # store 0xde7b0c18 in memory
flw f23, 0(x2) # load 0xde7b0c18 from memory into f23
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f4, 0(x2) # load 0x7fc00000 from memory into f4
la x2, scratch
li x3, 0xfdef1b52 # load x3 with value 0xfdef1b52
sw x3, 0(x2) # store 0xfdef1b52 in memory
flw f6, 0(x2) # load 0xfdef1b52 from memory into f6
fnmsub.s f29, f23, f4, f6 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x7fffffff)
la x2, scratch
li x3, 0xa06d8e70 # load x3 with value 0xa06d8e70
sw x3, 0(x2) # store 0xa06d8e70 in memory
flw f18, 0(x2) # load 0xa06d8e70 from memory into f18
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f10, 0(x2) # load 0x7fffffff from memory into f10
la x2, scratch
li x3, 0xde66b362 # load x3 with value 0xde66b362
sw x3, 0(x2) # store 0xde66b362 in memory
flw f4, 0(x2) # load 0xde66b362 from memory into f4
fnmsub.s f19, f18, f10, f4 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0xffffffff)
la x2, scratch
li x3, 0x92c8379a # load x3 with value 0x92c8379a
sw x3, 0(x2) # store 0x92c8379a in memory
flw f28, 0(x2) # load 0x92c8379a from memory into f28
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f25, 0(x2) # load 0xffffffff from memory into f25
la x2, scratch
li x3, 0x5240778b # load x3 with value 0x5240778b
sw x3, 0(x2) # store 0x5240778b in memory
flw f24, 0(x2) # load 0x5240778b from memory into f24
fnmsub.s f12, f28, f25, f24 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x7f800001)
la x2, scratch
li x3, 0xc83014fd # load x3 with value 0xc83014fd
sw x3, 0(x2) # store 0xc83014fd in memory
flw f3, 0(x2) # load 0xc83014fd from memory into f3
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f10, 0(x2) # load 0x7f800001 from memory into f10
la x2, scratch
li x3, 0x03133ec6 # load x3 with value 0x03133ec6
sw x3, 0(x2) # store 0x03133ec6 in memory
flw f25, 0(x2) # load 0x03133ec6 from memory into f25
fnmsub.s f24, f3, f10, f25 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x7fbfffff)
la x2, scratch
li x3, 0x60f734b8 # load x3 with value 0x60f734b8
sw x3, 0(x2) # store 0x60f734b8 in memory
flw f17, 0(x2) # load 0x60f734b8 from memory into f17
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f1, 0(x2) # load 0x7fbfffff from memory into f1
la x2, scratch
li x3, 0x6d9c60c4 # load x3 with value 0x6d9c60c4
sw x3, 0(x2) # store 0x6d9c60c4 in memory
flw f25, 0(x2) # load 0x6d9c60c4 from memory into f25
fnmsub.s f8, f17, f1, f25 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0xffbfffff)
la x2, scratch
li x3, 0x58237d15 # load x3 with value 0x58237d15
sw x3, 0(x2) # store 0x58237d15 in memory
flw f21, 0(x2) # load 0x58237d15 from memory into f21
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f4, 0(x2) # load 0xffbfffff from memory into f4
la x2, scratch
li x3, 0xe31caa6c # load x3 with value 0xe31caa6c
sw x3, 0(x2) # store 0xe31caa6c in memory
flw f16, 0(x2) # load 0xe31caa6c from memory into f16
fnmsub.s f9, f21, f4, f16 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x7ef8654f)
la x2, scratch
li x3, 0x85e6d38a # load x3 with value 0x85e6d38a
sw x3, 0(x2) # store 0x85e6d38a in memory
flw f2, 0(x2) # load 0x85e6d38a from memory into f2
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f4, 0(x2) # load 0x7ef8654f from memory into f4
la x2, scratch
li x3, 0x99da262f # load x3 with value 0x99da262f
sw x3, 0(x2) # store 0x99da262f in memory
flw f21, 0(x2) # load 0x99da262f from memory into f21
fnmsub.s f27, f2, f4, f21 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x813d9ab0)
la x2, scratch
li x3, 0xbfeba3aa # load x3 with value 0xbfeba3aa
sw x3, 0(x2) # store 0xbfeba3aa in memory
flw f16, 0(x2) # load 0xbfeba3aa from memory into f16
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f9, 0(x2) # load 0x813d9ab0 from memory into f9
la x2, scratch
li x3, 0x5aaee46a # load x3 with value 0x5aaee46a
sw x3, 0(x2) # store 0x5aaee46a in memory
flw f8, 0(x2) # load 0x5aaee46a from memory into f8
fnmsub.s f4, f16, f9, f8 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x0)
la x2, scratch
li x3, 0xa52a7f65 # load x3 with value 0xa52a7f65
sw x3, 0(x2) # store 0xa52a7f65 in memory
flw f13, 0(x2) # load 0xa52a7f65 from memory into f13
la x2, scratch
li x3, 0xf147748c # load x3 with value 0xf147748c
sw x3, 0(x2) # store 0xf147748c in memory
flw f11, 0(x2) # load 0xf147748c from memory into f11
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f9, 0(x2) # load 0x00000000 from memory into f9
fnmsub.s f25, f13, f11, f9 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x80000000)
la x2, scratch
li x3, 0xe70c0b46 # load x3 with value 0xe70c0b46
sw x3, 0(x2) # store 0xe70c0b46 in memory
flw f11, 0(x2) # load 0xe70c0b46 from memory into f11
la x2, scratch
li x3, 0x48cdbf40 # load x3 with value 0x48cdbf40
sw x3, 0(x2) # store 0x48cdbf40 in memory
flw f19, 0(x2) # load 0x48cdbf40 from memory into f19
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f2, 0(x2) # load 0x80000000 from memory into f2
fnmsub.s f24, f11, f19, f2 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x3f800000)
la x2, scratch
li x3, 0x06404e28 # load x3 with value 0x06404e28
sw x3, 0(x2) # store 0x06404e28 in memory
flw f20, 0(x2) # load 0x06404e28 from memory into f20
la x2, scratch
li x3, 0xea2d992b # load x3 with value 0xea2d992b
sw x3, 0(x2) # store 0xea2d992b in memory
flw f11, 0(x2) # load 0xea2d992b from memory into f11
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f26, 0(x2) # load 0x3f800000 from memory into f26
fnmsub.s f17, f20, f11, f26 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0xbf800000)
la x2, scratch
li x3, 0x46285713 # load x3 with value 0x46285713
sw x3, 0(x2) # store 0x46285713 in memory
flw f17, 0(x2) # load 0x46285713 from memory into f17
la x2, scratch
li x3, 0xe8433f6b # load x3 with value 0xe8433f6b
sw x3, 0(x2) # store 0xe8433f6b in memory
flw f30, 0(x2) # load 0xe8433f6b from memory into f30
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f6, 0(x2) # load 0xbf800000 from memory into f6
fnmsub.s f21, f17, f30, f6 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x3fc00000)
la x2, scratch
li x3, 0xff06cd64 # load x3 with value 0xff06cd64
sw x3, 0(x2) # store 0xff06cd64 in memory
flw f16, 0(x2) # load 0xff06cd64 from memory into f16
la x2, scratch
li x3, 0x82df9078 # load x3 with value 0x82df9078
sw x3, 0(x2) # store 0x82df9078 in memory
flw f28, 0(x2) # load 0x82df9078 from memory into f28
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f24, 0(x2) # load 0x3fc00000 from memory into f24
fnmsub.s f20, f16, f28, f24 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0xbfc00000)
la x2, scratch
li x3, 0x41db7d7f # load x3 with value 0x41db7d7f
sw x3, 0(x2) # store 0x41db7d7f in memory
flw f26, 0(x2) # load 0x41db7d7f from memory into f26
la x2, scratch
li x3, 0x2d455e56 # load x3 with value 0x2d455e56
sw x3, 0(x2) # store 0x2d455e56 in memory
flw f16, 0(x2) # load 0x2d455e56 from memory into f16
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f29, 0(x2) # load 0xbfc00000 from memory into f29
fnmsub.s f9, f26, f16, f29 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x40000000)
la x2, scratch
li x3, 0xbfbd7388 # load x3 with value 0xbfbd7388
sw x3, 0(x2) # store 0xbfbd7388 in memory
flw f13, 0(x2) # load 0xbfbd7388 from memory into f13
la x2, scratch
li x3, 0xdb65ac93 # load x3 with value 0xdb65ac93
sw x3, 0(x2) # store 0xdb65ac93 in memory
flw f2, 0(x2) # load 0xdb65ac93 from memory into f2
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f3, 0(x2) # load 0x40000000 from memory into f3
fnmsub.s f14, f13, f2, f3 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0xc0000000)
la x2, scratch
li x3, 0x9a0ef5ca # load x3 with value 0x9a0ef5ca
sw x3, 0(x2) # store 0x9a0ef5ca in memory
flw f31, 0(x2) # load 0x9a0ef5ca from memory into f31
la x2, scratch
li x3, 0xbeb4b023 # load x3 with value 0xbeb4b023
sw x3, 0(x2) # store 0xbeb4b023 in memory
flw f15, 0(x2) # load 0xbeb4b023 from memory into f15
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f30, 0(x2) # load 0xc0000000 from memory into f30
fnmsub.s f4, f31, f15, f30 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x800000)
la x2, scratch
li x3, 0x2e3e659b # load x3 with value 0x2e3e659b
sw x3, 0(x2) # store 0x2e3e659b in memory
flw f31, 0(x2) # load 0x2e3e659b from memory into f31
la x2, scratch
li x3, 0xd3e80191 # load x3 with value 0xd3e80191
sw x3, 0(x2) # store 0xd3e80191 in memory
flw f19, 0(x2) # load 0xd3e80191 from memory into f19
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f27, 0(x2) # load 0x00800000 from memory into f27
fnmsub.s f23, f31, f19, f27 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x80800000)
la x2, scratch
li x3, 0xbbfbc5bb # load x3 with value 0xbbfbc5bb
sw x3, 0(x2) # store 0xbbfbc5bb in memory
flw f30, 0(x2) # load 0xbbfbc5bb from memory into f30
la x2, scratch
li x3, 0xb0e3f5fc # load x3 with value 0xb0e3f5fc
sw x3, 0(x2) # store 0xb0e3f5fc in memory
flw f7, 0(x2) # load 0xb0e3f5fc from memory into f7
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f18, 0(x2) # load 0x80800000 from memory into f18
fnmsub.s f17, f30, f7, f18 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x7f7fffff)
la x2, scratch
li x3, 0xa6bed28e # load x3 with value 0xa6bed28e
sw x3, 0(x2) # store 0xa6bed28e in memory
flw f30, 0(x2) # load 0xa6bed28e from memory into f30
la x2, scratch
li x3, 0x2f284401 # load x3 with value 0x2f284401
sw x3, 0(x2) # store 0x2f284401 in memory
flw f12, 0(x2) # load 0x2f284401 from memory into f12
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f10, 0(x2) # load 0x7f7fffff from memory into f10
fnmsub.s f14, f30, f12, f10 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0xff7fffff)
la x2, scratch
li x3, 0xe5756efe # load x3 with value 0xe5756efe
sw x3, 0(x2) # store 0xe5756efe in memory
flw f20, 0(x2) # load 0xe5756efe from memory into f20
la x2, scratch
li x3, 0x5a854cc1 # load x3 with value 0x5a854cc1
sw x3, 0(x2) # store 0x5a854cc1 in memory
flw f7, 0(x2) # load 0x5a854cc1 from memory into f7
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f14, 0(x2) # load 0xff7fffff from memory into f14
fnmsub.s f23, f20, f7, f14 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x7fffff)
la x2, scratch
li x3, 0xc20db1f7 # load x3 with value 0xc20db1f7
sw x3, 0(x2) # store 0xc20db1f7 in memory
flw f16, 0(x2) # load 0xc20db1f7 from memory into f16
la x2, scratch
li x3, 0x97ae4a46 # load x3 with value 0x97ae4a46
sw x3, 0(x2) # store 0x97ae4a46 in memory
flw f6, 0(x2) # load 0x97ae4a46 from memory into f6
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f28, 0(x2) # load 0x007fffff from memory into f28
fnmsub.s f20, f16, f6, f28 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x807fffff)
la x2, scratch
li x3, 0xb170b53d # load x3 with value 0xb170b53d
sw x3, 0(x2) # store 0xb170b53d in memory
flw f7, 0(x2) # load 0xb170b53d from memory into f7
la x2, scratch
li x3, 0x45bad8be # load x3 with value 0x45bad8be
sw x3, 0(x2) # store 0x45bad8be in memory
flw f2, 0(x2) # load 0x45bad8be from memory into f2
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f22, 0(x2) # load 0x807fffff from memory into f22
fnmsub.s f23, f7, f2, f22 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x400000)
la x2, scratch
li x3, 0x76485da8 # load x3 with value 0x76485da8
sw x3, 0(x2) # store 0x76485da8 in memory
flw f17, 0(x2) # load 0x76485da8 from memory into f17
la x2, scratch
li x3, 0xb2680df6 # load x3 with value 0xb2680df6
sw x3, 0(x2) # store 0xb2680df6 in memory
flw f10, 0(x2) # load 0xb2680df6 from memory into f10
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f3, 0(x2) # load 0x00400000 from memory into f3
fnmsub.s f14, f17, f10, f3 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x80400000)
la x2, scratch
li x3, 0xaf39e9d2 # load x3 with value 0xaf39e9d2
sw x3, 0(x2) # store 0xaf39e9d2 in memory
flw f20, 0(x2) # load 0xaf39e9d2 from memory into f20
la x2, scratch
li x3, 0x9280b09a # load x3 with value 0x9280b09a
sw x3, 0(x2) # store 0x9280b09a in memory
flw f2, 0(x2) # load 0x9280b09a from memory into f2
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f25, 0(x2) # load 0x80400000 from memory into f25
fnmsub.s f18, f20, f2, f25 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x1)
la x2, scratch
li x3, 0x80aa8307 # load x3 with value 0x80aa8307
sw x3, 0(x2) # store 0x80aa8307 in memory
flw f30, 0(x2) # load 0x80aa8307 from memory into f30
la x2, scratch
li x3, 0x2b676a0b # load x3 with value 0x2b676a0b
sw x3, 0(x2) # store 0x2b676a0b in memory
flw f12, 0(x2) # load 0x2b676a0b from memory into f12
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f25, 0(x2) # load 0x00000001 from memory into f25
fnmsub.s f22, f30, f12, f25 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x80000001)
la x2, scratch
li x3, 0x2ba11caa # load x3 with value 0x2ba11caa
sw x3, 0(x2) # store 0x2ba11caa in memory
flw f21, 0(x2) # load 0x2ba11caa from memory into f21
la x2, scratch
li x3, 0x2421468d # load x3 with value 0x2421468d
sw x3, 0(x2) # store 0x2421468d in memory
flw f22, 0(x2) # load 0x2421468d from memory into f22
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f23, 0(x2) # load 0x80000001 from memory into f23
fnmsub.s f26, f21, f22, f23 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x7f800000)
la x2, scratch
li x3, 0xddefe60a # load x3 with value 0xddefe60a
sw x3, 0(x2) # store 0xddefe60a in memory
flw f26, 0(x2) # load 0xddefe60a from memory into f26
la x2, scratch
li x3, 0x729883ae # load x3 with value 0x729883ae
sw x3, 0(x2) # store 0x729883ae in memory
flw f31, 0(x2) # load 0x729883ae from memory into f31
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f24, 0(x2) # load 0x7f800000 from memory into f24
fnmsub.s f27, f26, f31, f24 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0xff800000)
la x2, scratch
li x3, 0xf2773157 # load x3 with value 0xf2773157
sw x3, 0(x2) # store 0xf2773157 in memory
flw f27, 0(x2) # load 0xf2773157 from memory into f27
la x2, scratch
li x3, 0xaf2536eb # load x3 with value 0xaf2536eb
sw x3, 0(x2) # store 0xaf2536eb in memory
flw f22, 0(x2) # load 0xaf2536eb from memory into f22
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f29, 0(x2) # load 0xff800000 from memory into f29
fnmsub.s f3, f27, f22, f29 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x7fc00000)
la x2, scratch
li x3, 0xf04ca1a5 # load x3 with value 0xf04ca1a5
sw x3, 0(x2) # store 0xf04ca1a5 in memory
flw f14, 0(x2) # load 0xf04ca1a5 from memory into f14
la x2, scratch
li x3, 0xbd462ee7 # load x3 with value 0xbd462ee7
sw x3, 0(x2) # store 0xbd462ee7 in memory
flw f6, 0(x2) # load 0xbd462ee7 from memory into f6
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f1, 0(x2) # load 0x7fc00000 from memory into f1
fnmsub.s f29, f14, f6, f1 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x7fffffff)
la x2, scratch
li x3, 0x95ad72e3 # load x3 with value 0x95ad72e3
sw x3, 0(x2) # store 0x95ad72e3 in memory
flw f30, 0(x2) # load 0x95ad72e3 from memory into f30
la x2, scratch
li x3, 0x4f99c3aa # load x3 with value 0x4f99c3aa
sw x3, 0(x2) # store 0x4f99c3aa in memory
flw f31, 0(x2) # load 0x4f99c3aa from memory into f31
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f24, 0(x2) # load 0x7fffffff from memory into f24
fnmsub.s f2, f30, f31, f24 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0xffffffff)
la x2, scratch
li x3, 0x04ab2cbf # load x3 with value 0x04ab2cbf
sw x3, 0(x2) # store 0x04ab2cbf in memory
flw f23, 0(x2) # load 0x04ab2cbf from memory into f23
la x2, scratch
li x3, 0x5284f2e5 # load x3 with value 0x5284f2e5
sw x3, 0(x2) # store 0x5284f2e5 in memory
flw f20, 0(x2) # load 0x5284f2e5 from memory into f20
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f22, 0(x2) # load 0xffffffff from memory into f22
fnmsub.s f4, f23, f20, f22 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x7f800001)
la x2, scratch
li x3, 0xd51097a4 # load x3 with value 0xd51097a4
sw x3, 0(x2) # store 0xd51097a4 in memory
flw f27, 0(x2) # load 0xd51097a4 from memory into f27
la x2, scratch
li x3, 0xb7060a37 # load x3 with value 0xb7060a37
sw x3, 0(x2) # store 0xb7060a37 in memory
flw f11, 0(x2) # load 0xb7060a37 from memory into f11
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f1, 0(x2) # load 0x7f800001 from memory into f1
fnmsub.s f30, f27, f11, f1 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x7fbfffff)
la x2, scratch
li x3, 0xc41ecf6c # load x3 with value 0xc41ecf6c
sw x3, 0(x2) # store 0xc41ecf6c in memory
flw f25, 0(x2) # load 0xc41ecf6c from memory into f25
la x2, scratch
li x3, 0xcd022952 # load x3 with value 0xcd022952
sw x3, 0(x2) # store 0xcd022952 in memory
flw f6, 0(x2) # load 0xcd022952 from memory into f6
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f7, 0(x2) # load 0x7fbfffff from memory into f7
fnmsub.s f18, f25, f6, f7 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0xffbfffff)
la x2, scratch
li x3, 0x8c1ac930 # load x3 with value 0x8c1ac930
sw x3, 0(x2) # store 0x8c1ac930 in memory
flw f18, 0(x2) # load 0x8c1ac930 from memory into f18
la x2, scratch
li x3, 0xb2221ca5 # load x3 with value 0xb2221ca5
sw x3, 0(x2) # store 0xb2221ca5 in memory
flw f1, 0(x2) # load 0xb2221ca5 from memory into f1
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f15, 0(x2) # load 0xffbfffff from memory into f15
fnmsub.s f22, f18, f1, f15 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x7ef8654f)
la x2, scratch
li x3, 0xaaa9064e # load x3 with value 0xaaa9064e
sw x3, 0(x2) # store 0xaaa9064e in memory
flw f29, 0(x2) # load 0xaaa9064e from memory into f29
la x2, scratch
li x3, 0xc0c45a1b # load x3 with value 0xc0c45a1b
sw x3, 0(x2) # store 0xc0c45a1b in memory
flw f30, 0(x2) # load 0xc0c45a1b from memory into f30
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f25, 0(x2) # load 0x7ef8654f from memory into f25
fnmsub.s f24, f29, f30, f25 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x813d9ab0)
la x2, scratch
li x3, 0x0345c12e # load x3 with value 0x0345c12e
sw x3, 0(x2) # store 0x0345c12e in memory
flw f19, 0(x2) # load 0x0345c12e from memory into f19
la x2, scratch
li x3, 0x4a6e4fba # load x3 with value 0x4a6e4fba
sw x3, 0(x2) # store 0x4a6e4fba in memory
flw f15, 0(x2) # load 0x4a6e4fba from memory into f15
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f1, 0(x2) # load 0x813d9ab0 from memory into f1
fnmsub.s f10, f19, f15, f1 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f0)
la x2, scratch
li x3, 0x57335684 # load x3 with value 0x57335684
sw x3, 0(x2) # store 0x57335684 in memory
flw f0, 0(x2) # load 0x57335684 from memory into f0
la x2, scratch
li x3, 0x84d90dfb # load x3 with value 0x84d90dfb
sw x3, 0(x2) # store 0x84d90dfb in memory
flw f16, 0(x2) # load 0x84d90dfb from memory into f16
la x2, scratch
li x3, 0x39d6a189 # load x3 with value 0x39d6a189
sw x3, 0(x2) # store 0x39d6a189 in memory
flw f27, 0(x2) # load 0x39d6a189 from memory into f27
fnmsub.s f0, f0, f16, f27 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f1)
la x2, scratch
li x3, 0xdcc9ca7a # load x3 with value 0xdcc9ca7a
sw x3, 0(x2) # store 0xdcc9ca7a in memory
flw f1, 0(x2) # load 0xdcc9ca7a from memory into f1
la x2, scratch
li x3, 0x95a3911b # load x3 with value 0x95a3911b
sw x3, 0(x2) # store 0x95a3911b in memory
flw f18, 0(x2) # load 0x95a3911b from memory into f18
la x2, scratch
li x3, 0xd3c3c40e # load x3 with value 0xd3c3c40e
sw x3, 0(x2) # store 0xd3c3c40e in memory
flw f16, 0(x2) # load 0xd3c3c40e from memory into f16
fnmsub.s f1, f1, f18, f16 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f2)
la x2, scratch
li x3, 0xe3cbf5cc # load x3 with value 0xe3cbf5cc
sw x3, 0(x2) # store 0xe3cbf5cc in memory
flw f2, 0(x2) # load 0xe3cbf5cc from memory into f2
la x2, scratch
li x3, 0xe128a92b # load x3 with value 0xe128a92b
sw x3, 0(x2) # store 0xe128a92b in memory
flw f6, 0(x2) # load 0xe128a92b from memory into f6
la x2, scratch
li x3, 0x8ab7b3be # load x3 with value 0x8ab7b3be
sw x3, 0(x2) # store 0x8ab7b3be in memory
flw f24, 0(x2) # load 0x8ab7b3be from memory into f24
fnmsub.s f2, f2, f6, f24 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f3)
la x2, scratch
li x3, 0x948c3142 # load x3 with value 0x948c3142
sw x3, 0(x2) # store 0x948c3142 in memory
flw f3, 0(x2) # load 0x948c3142 from memory into f3
la x2, scratch
li x3, 0xd25e24be # load x3 with value 0xd25e24be
sw x3, 0(x2) # store 0xd25e24be in memory
flw f15, 0(x2) # load 0xd25e24be from memory into f15
la x2, scratch
li x3, 0x18394807 # load x3 with value 0x18394807
sw x3, 0(x2) # store 0x18394807 in memory
flw f6, 0(x2) # load 0x18394807 from memory into f6
fnmsub.s f3, f3, f15, f6 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f4)
la x2, scratch
li x3, 0x0956c1c5 # load x3 with value 0x0956c1c5
sw x3, 0(x2) # store 0x0956c1c5 in memory
flw f4, 0(x2) # load 0x0956c1c5 from memory into f4
la x2, scratch
li x3, 0xf8dfcb5d # load x3 with value 0xf8dfcb5d
sw x3, 0(x2) # store 0xf8dfcb5d in memory
flw f20, 0(x2) # load 0xf8dfcb5d from memory into f20
la x2, scratch
li x3, 0x1a25e1dd # load x3 with value 0x1a25e1dd
sw x3, 0(x2) # store 0x1a25e1dd in memory
flw f2, 0(x2) # load 0x1a25e1dd from memory into f2
fnmsub.s f4, f4, f20, f2 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f5)
mv x6, x5 # switch signature pointer register to avoid conflict with test
la x2, scratch
li x3, 0x5e1953a3 # load x3 with value 0x5e1953a3
sw x3, 0(x2) # store 0x5e1953a3 in memory
flw f5, 0(x2) # load 0x5e1953a3 from memory into f5
la x2, scratch
li x3, 0xbb9d88ce # load x3 with value 0xbb9d88ce
sw x3, 0(x2) # store 0xbb9d88ce in memory
flw f31, 0(x2) # load 0xbb9d88ce from memory into f31
la x2, scratch
li x3, 0x2b591279 # load x3 with value 0x2b591279
sw x3, 0(x2) # store 0x2b591279 in memory
flw f29, 0(x2) # load 0x2b591279 from memory into f29
fnmsub.s f5, f5, f31, f29 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f6)
mv x7, x6 # switch signature pointer register to avoid conflict with test
la x2, scratch
li x3, 0xf54bcf06 # load x3 with value 0xf54bcf06
sw x3, 0(x2) # store 0xf54bcf06 in memory
flw f6, 0(x2) # load 0xf54bcf06 from memory into f6
la x2, scratch
li x3, 0x0cdcf890 # load x3 with value 0x0cdcf890
sw x3, 0(x2) # store 0x0cdcf890 in memory
flw f22, 0(x2) # load 0x0cdcf890 from memory into f22
la x2, scratch
li x3, 0xbb3ee550 # load x3 with value 0xbb3ee550
sw x3, 0(x2) # store 0xbb3ee550 in memory
flw f12, 0(x2) # load 0xbb3ee550 from memory into f12
fnmsub.s f6, f6, f22, f12 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f7)
mv x4, x7 # switch signature pointer register to avoid conflict with test
la x2, scratch
li x3, 0xc4843dc5 # load x3 with value 0xc4843dc5
sw x3, 0(x2) # store 0xc4843dc5 in memory
flw f7, 0(x2) # load 0xc4843dc5 from memory into f7
la x2, scratch
li x3, 0x5003b945 # load x3 with value 0x5003b945
sw x3, 0(x2) # store 0x5003b945 in memory
flw f3, 0(x2) # load 0x5003b945 from memory into f3
la x2, scratch
li x3, 0x46435b08 # load x3 with value 0x46435b08
sw x3, 0(x2) # store 0x46435b08 in memory
flw f30, 0(x2) # load 0x46435b08 from memory into f30
fnmsub.s f7, f7, f3, f30 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f8)
la x2, scratch
li x3, 0x8cb71a5c # load x3 with value 0x8cb71a5c
sw x3, 0(x2) # store 0x8cb71a5c in memory
flw f8, 0(x2) # load 0x8cb71a5c from memory into f8
la x2, scratch
li x3, 0x3b557c5f # load x3 with value 0x3b557c5f
sw x3, 0(x2) # store 0x3b557c5f in memory
flw f18, 0(x2) # load 0x3b557c5f from memory into f18
la x2, scratch
li x3, 0xd6080375 # load x3 with value 0xd6080375
sw x3, 0(x2) # store 0xd6080375 in memory
flw f24, 0(x2) # load 0xd6080375 from memory into f24
fnmsub.s f8, f8, f18, f24 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f9)
la x2, scratch
li x3, 0xaf356560 # load x3 with value 0xaf356560
sw x3, 0(x2) # store 0xaf356560 in memory
flw f9, 0(x2) # load 0xaf356560 from memory into f9
la x2, scratch
li x3, 0x89db662c # load x3 with value 0x89db662c
sw x3, 0(x2) # store 0x89db662c in memory
flw f27, 0(x2) # load 0x89db662c from memory into f27
la x2, scratch
li x3, 0x33b57ef1 # load x3 with value 0x33b57ef1
sw x3, 0(x2) # store 0x33b57ef1 in memory
flw f18, 0(x2) # load 0x33b57ef1 from memory into f18
fnmsub.s f9, f9, f27, f18 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f10)
la x2, scratch
li x3, 0xb44312b3 # load x3 with value 0xb44312b3
sw x3, 0(x2) # store 0xb44312b3 in memory
flw f10, 0(x2) # load 0xb44312b3 from memory into f10
la x2, scratch
li x3, 0xcfa6bab2 # load x3 with value 0xcfa6bab2
sw x3, 0(x2) # store 0xcfa6bab2 in memory
flw f17, 0(x2) # load 0xcfa6bab2 from memory into f17
la x2, scratch
li x3, 0x64ce01c5 # load x3 with value 0x64ce01c5
sw x3, 0(x2) # store 0x64ce01c5 in memory
flw f3, 0(x2) # load 0x64ce01c5 from memory into f3
fnmsub.s f10, f10, f17, f3 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f11)
la x2, scratch
li x3, 0x0aba421c # load x3 with value 0x0aba421c
sw x3, 0(x2) # store 0x0aba421c in memory
flw f11, 0(x2) # load 0x0aba421c from memory into f11
la x2, scratch
li x3, 0x287b0d47 # load x3 with value 0x287b0d47
sw x3, 0(x2) # store 0x287b0d47 in memory
flw f17, 0(x2) # load 0x287b0d47 from memory into f17
la x2, scratch
li x3, 0x07d62186 # load x3 with value 0x07d62186
sw x3, 0(x2) # store 0x07d62186 in memory
flw f5, 0(x2) # load 0x07d62186 from memory into f5
fnmsub.s f11, f11, f17, f5 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f12)
la x2, scratch
li x3, 0xf4a00c70 # load x3 with value 0xf4a00c70
sw x3, 0(x2) # store 0xf4a00c70 in memory
flw f12, 0(x2) # load 0xf4a00c70 from memory into f12
la x2, scratch
li x3, 0x44612a57 # load x3 with value 0x44612a57
sw x3, 0(x2) # store 0x44612a57 in memory
flw f6, 0(x2) # load 0x44612a57 from memory into f6
la x2, scratch
li x3, 0x1c4a087c # load x3 with value 0x1c4a087c
sw x3, 0(x2) # store 0x1c4a087c in memory
flw f5, 0(x2) # load 0x1c4a087c from memory into f5
fnmsub.s f12, f12, f6, f5 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f13)
la x2, scratch
li x3, 0xcef8cd2a # load x3 with value 0xcef8cd2a
sw x3, 0(x2) # store 0xcef8cd2a in memory
flw f13, 0(x2) # load 0xcef8cd2a from memory into f13
la x2, scratch
li x3, 0x0895e7ee # load x3 with value 0x0895e7ee
sw x3, 0(x2) # store 0x0895e7ee in memory
flw f20, 0(x2) # load 0x0895e7ee from memory into f20
la x2, scratch
li x3, 0xda9de412 # load x3 with value 0xda9de412
sw x3, 0(x2) # store 0xda9de412 in memory
flw f26, 0(x2) # load 0xda9de412 from memory into f26
fnmsub.s f13, f13, f20, f26 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f14)
la x2, scratch
li x3, 0x1a37d168 # load x3 with value 0x1a37d168
sw x3, 0(x2) # store 0x1a37d168 in memory
flw f14, 0(x2) # load 0x1a37d168 from memory into f14
la x2, scratch
li x3, 0xbcb5a494 # load x3 with value 0xbcb5a494
sw x3, 0(x2) # store 0xbcb5a494 in memory
flw f3, 0(x2) # load 0xbcb5a494 from memory into f3
la x2, scratch
li x3, 0xd35affbb # load x3 with value 0xd35affbb
sw x3, 0(x2) # store 0xd35affbb in memory
flw f25, 0(x2) # load 0xd35affbb from memory into f25
fnmsub.s f14, f14, f3, f25 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f15)
la x2, scratch
li x3, 0x4024afb0 # load x3 with value 0x4024afb0
sw x3, 0(x2) # store 0x4024afb0 in memory
flw f15, 0(x2) # load 0x4024afb0 from memory into f15
la x2, scratch
li x3, 0x3a9dda38 # load x3 with value 0x3a9dda38
sw x3, 0(x2) # store 0x3a9dda38 in memory
flw f18, 0(x2) # load 0x3a9dda38 from memory into f18
la x2, scratch
li x3, 0x9e22e853 # load x3 with value 0x9e22e853
sw x3, 0(x2) # store 0x9e22e853 in memory
flw f25, 0(x2) # load 0x9e22e853 from memory into f25
fnmsub.s f15, f15, f18, f25 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f16)
la x2, scratch
li x3, 0x456a92bc # load x3 with value 0x456a92bc
sw x3, 0(x2) # store 0x456a92bc in memory
flw f16, 0(x2) # load 0x456a92bc from memory into f16
la x2, scratch
li x3, 0xc39f6911 # load x3 with value 0xc39f6911
sw x3, 0(x2) # store 0xc39f6911 in memory
flw f12, 0(x2) # load 0xc39f6911 from memory into f12
la x2, scratch
li x3, 0x6fa306e3 # load x3 with value 0x6fa306e3
sw x3, 0(x2) # store 0x6fa306e3 in memory
flw f22, 0(x2) # load 0x6fa306e3 from memory into f22
fnmsub.s f16, f16, f12, f22 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f17)
la x2, scratch
li x3, 0xb089538d # load x3 with value 0xb089538d
sw x3, 0(x2) # store 0xb089538d in memory
flw f17, 0(x2) # load 0xb089538d from memory into f17
la x2, scratch
li x3, 0x21624bcb # load x3 with value 0x21624bcb
sw x3, 0(x2) # store 0x21624bcb in memory
flw f1, 0(x2) # load 0x21624bcb from memory into f1
la x2, scratch
li x3, 0x21e4511c # load x3 with value 0x21e4511c
sw x3, 0(x2) # store 0x21e4511c in memory
flw f7, 0(x2) # load 0x21e4511c from memory into f7
fnmsub.s f17, f17, f1, f7 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f18)
la x2, scratch
li x3, 0xd21bcdf0 # load x3 with value 0xd21bcdf0
sw x3, 0(x2) # store 0xd21bcdf0 in memory
flw f18, 0(x2) # load 0xd21bcdf0 from memory into f18
la x2, scratch
li x3, 0x59950dac # load x3 with value 0x59950dac
sw x3, 0(x2) # store 0x59950dac in memory
flw f23, 0(x2) # load 0x59950dac from memory into f23
la x2, scratch
li x3, 0x15cfc413 # load x3 with value 0x15cfc413
sw x3, 0(x2) # store 0x15cfc413 in memory
flw f7, 0(x2) # load 0x15cfc413 from memory into f7
fnmsub.s f18, f18, f23, f7 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f19)
la x2, scratch
li x3, 0xf3c48f1c # load x3 with value 0xf3c48f1c
sw x3, 0(x2) # store 0xf3c48f1c in memory
flw f19, 0(x2) # load 0xf3c48f1c from memory into f19
la x2, scratch
li x3, 0x3048d197 # load x3 with value 0x3048d197
sw x3, 0(x2) # store 0x3048d197 in memory
flw f10, 0(x2) # load 0x3048d197 from memory into f10
la x2, scratch
li x3, 0xad58bd0a # load x3 with value 0xad58bd0a
sw x3, 0(x2) # store 0xad58bd0a in memory
flw f21, 0(x2) # load 0xad58bd0a from memory into f21
fnmsub.s f19, f19, f10, f21 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f20)
la x2, scratch
li x3, 0x55836135 # load x3 with value 0x55836135
sw x3, 0(x2) # store 0x55836135 in memory
flw f20, 0(x2) # load 0x55836135 from memory into f20
la x2, scratch
li x3, 0xca5c65af # load x3 with value 0xca5c65af
sw x3, 0(x2) # store 0xca5c65af in memory
flw f16, 0(x2) # load 0xca5c65af from memory into f16
la x2, scratch
li x3, 0x510e8a8f # load x3 with value 0x510e8a8f
sw x3, 0(x2) # store 0x510e8a8f in memory
flw f26, 0(x2) # load 0x510e8a8f from memory into f26
fnmsub.s f20, f20, f16, f26 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f21)
la x2, scratch
li x3, 0x03b006b7 # load x3 with value 0x03b006b7
sw x3, 0(x2) # store 0x03b006b7 in memory
flw f21, 0(x2) # load 0x03b006b7 from memory into f21
la x2, scratch
li x3, 0x0ea2f50c # load x3 with value 0x0ea2f50c
sw x3, 0(x2) # store 0x0ea2f50c in memory
flw f20, 0(x2) # load 0x0ea2f50c from memory into f20
la x2, scratch
li x3, 0x37da4712 # load x3 with value 0x37da4712
sw x3, 0(x2) # store 0x37da4712 in memory
flw f12, 0(x2) # load 0x37da4712 from memory into f12
fnmsub.s f21, f21, f20, f12 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f22)
la x2, scratch
li x3, 0x0da7862b # load x3 with value 0x0da7862b
sw x3, 0(x2) # store 0x0da7862b in memory
flw f22, 0(x2) # load 0x0da7862b from memory into f22
la x2, scratch
li x3, 0x9d4e00ad # load x3 with value 0x9d4e00ad
sw x3, 0(x2) # store 0x9d4e00ad in memory
flw f7, 0(x2) # load 0x9d4e00ad from memory into f7
la x2, scratch
li x3, 0x44437e1b # load x3 with value 0x44437e1b
sw x3, 0(x2) # store 0x44437e1b in memory
flw f18, 0(x2) # load 0x44437e1b from memory into f18
fnmsub.s f22, f22, f7, f18 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f23)
la x2, scratch
li x3, 0x287b5804 # load x3 with value 0x287b5804
sw x3, 0(x2) # store 0x287b5804 in memory
flw f23, 0(x2) # load 0x287b5804 from memory into f23
la x2, scratch
li x3, 0x32eab80c # load x3 with value 0x32eab80c
sw x3, 0(x2) # store 0x32eab80c in memory
flw f9, 0(x2) # load 0x32eab80c from memory into f9
la x2, scratch
li x3, 0x62efc79f # load x3 with value 0x62efc79f
sw x3, 0(x2) # store 0x62efc79f in memory
flw f12, 0(x2) # load 0x62efc79f from memory into f12
fnmsub.s f23, f23, f9, f12 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f24)
la x2, scratch
li x3, 0x043519b2 # load x3 with value 0x043519b2
sw x3, 0(x2) # store 0x043519b2 in memory
flw f24, 0(x2) # load 0x043519b2 from memory into f24
la x2, scratch
li x3, 0x16e1b569 # load x3 with value 0x16e1b569
sw x3, 0(x2) # store 0x16e1b569 in memory
flw f20, 0(x2) # load 0x16e1b569 from memory into f20
la x2, scratch
li x3, 0x06306830 # load x3 with value 0x06306830
sw x3, 0(x2) # store 0x06306830 in memory
flw f3, 0(x2) # load 0x06306830 from memory into f3
fnmsub.s f24, f24, f20, f3 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f25)
la x2, scratch
li x3, 0x1d7d4b20 # load x3 with value 0x1d7d4b20
sw x3, 0(x2) # store 0x1d7d4b20 in memory
flw f25, 0(x2) # load 0x1d7d4b20 from memory into f25
la x2, scratch
li x3, 0x1f0a9c5d # load x3 with value 0x1f0a9c5d
sw x3, 0(x2) # store 0x1f0a9c5d in memory
flw f28, 0(x2) # load 0x1f0a9c5d from memory into f28
la x2, scratch
li x3, 0x1899858b # load x3 with value 0x1899858b
sw x3, 0(x2) # store 0x1899858b in memory
flw f23, 0(x2) # load 0x1899858b from memory into f23
fnmsub.s f25, f25, f28, f23 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f26)
la x2, scratch
li x3, 0xad699ff9 # load x3 with value 0xad699ff9
sw x3, 0(x2) # store 0xad699ff9 in memory
flw f26, 0(x2) # load 0xad699ff9 from memory into f26
la x2, scratch
li x3, 0x62a168ce # load x3 with value 0x62a168ce
sw x3, 0(x2) # store 0x62a168ce in memory
flw f21, 0(x2) # load 0x62a168ce from memory into f21
la x2, scratch
li x3, 0x39f4a316 # load x3 with value 0x39f4a316
sw x3, 0(x2) # store 0x39f4a316 in memory
flw f28, 0(x2) # load 0x39f4a316 from memory into f28
fnmsub.s f26, f26, f21, f28 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f27)
la x2, scratch
li x3, 0x000395cd # load x3 with value 0x000395cd
sw x3, 0(x2) # store 0x000395cd in memory
flw f27, 0(x2) # load 0x000395cd from memory into f27
la x2, scratch
li x3, 0x32968ac8 # load x3 with value 0x32968ac8
sw x3, 0(x2) # store 0x32968ac8 in memory
flw f8, 0(x2) # load 0x32968ac8 from memory into f8
la x2, scratch
li x3, 0xe9b938b2 # load x3 with value 0xe9b938b2
sw x3, 0(x2) # store 0xe9b938b2 in memory
flw f10, 0(x2) # load 0xe9b938b2 from memory into f10
fnmsub.s f27, f27, f8, f10 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f28)
la x2, scratch
li x3, 0x5a8994de # load x3 with value 0x5a8994de
sw x3, 0(x2) # store 0x5a8994de in memory
flw f28, 0(x2) # load 0x5a8994de from memory into f28
la x2, scratch
li x3, 0x4856b31c # load x3 with value 0x4856b31c
sw x3, 0(x2) # store 0x4856b31c in memory
flw f1, 0(x2) # load 0x4856b31c from memory into f1
la x2, scratch
li x3, 0x701e697b # load x3 with value 0x701e697b
sw x3, 0(x2) # store 0x701e697b in memory
flw f6, 0(x2) # load 0x701e697b from memory into f6
fnmsub.s f28, f28, f1, f6 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f29)
la x2, scratch
li x3, 0x09e9aea4 # load x3 with value 0x09e9aea4
sw x3, 0(x2) # store 0x09e9aea4 in memory
flw f29, 0(x2) # load 0x09e9aea4 from memory into f29
la x2, scratch
li x3, 0xae5f4b05 # load x3 with value 0xae5f4b05
sw x3, 0(x2) # store 0xae5f4b05 in memory
flw f27, 0(x2) # load 0xae5f4b05 from memory into f27
la x2, scratch
li x3, 0x6c4fbced # load x3 with value 0x6c4fbced
sw x3, 0(x2) # store 0x6c4fbced in memory
flw f29, 0(x2) # load 0x6c4fbced from memory into f29
fnmsub.s f29, f29, f27, f29 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f30)
la x2, scratch
li x3, 0x36328fa8 # load x3 with value 0x36328fa8
sw x3, 0(x2) # store 0x36328fa8 in memory
flw f30, 0(x2) # load 0x36328fa8 from memory into f30
la x2, scratch
li x3, 0xed944e75 # load x3 with value 0xed944e75
sw x3, 0(x2) # store 0xed944e75 in memory
flw f29, 0(x2) # load 0xed944e75 from memory into f29
la x2, scratch
li x3, 0xa1ac7906 # load x3 with value 0xa1ac7906
sw x3, 0(x2) # store 0xa1ac7906 in memory
flw f24, 0(x2) # load 0xa1ac7906 from memory into f24
fnmsub.s f30, f30, f29, f24 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f31)
la x2, scratch
li x3, 0x43929d92 # load x3 with value 0x43929d92
sw x3, 0(x2) # store 0x43929d92 in memory
flw f31, 0(x2) # load 0x43929d92 from memory into f31
la x2, scratch
li x3, 0x00418701 # load x3 with value 0x00418701
sw x3, 0(x2) # store 0x00418701 in memory
flw f3, 0(x2) # load 0x00418701 from memory into f3
la x2, scratch
li x3, 0xcaf30296 # load x3 with value 0xcaf30296
sw x3, 0(x2) # store 0xcaf30296 in memory
flw f8, 0(x2) # load 0xcaf30296 from memory into f8
fnmsub.s f31, f31, f3, f8 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f0)
la x2, scratch
li x3, 0xaf55014f # load x3 with value 0xaf55014f
sw x3, 0(x2) # store 0xaf55014f in memory
flw f23, 0(x2) # load 0xaf55014f from memory into f23
la x2, scratch
li x3, 0xcc919761 # load x3 with value 0xcc919761
sw x3, 0(x2) # store 0xcc919761 in memory
flw f0, 0(x2) # load 0xcc919761 from memory into f0
la x2, scratch
li x3, 0x1afc6d5d # load x3 with value 0x1afc6d5d
sw x3, 0(x2) # store 0x1afc6d5d in memory
flw f5, 0(x2) # load 0x1afc6d5d from memory into f5
fnmsub.s f0, f23, f0, f5 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f1)
la x2, scratch
li x3, 0x74baf1fd # load x3 with value 0x74baf1fd
sw x3, 0(x2) # store 0x74baf1fd in memory
flw f29, 0(x2) # load 0x74baf1fd from memory into f29
la x2, scratch
li x3, 0x19570413 # load x3 with value 0x19570413
sw x3, 0(x2) # store 0x19570413 in memory
flw f1, 0(x2) # load 0x19570413 from memory into f1
la x2, scratch
li x3, 0xc2dce401 # load x3 with value 0xc2dce401
sw x3, 0(x2) # store 0xc2dce401 in memory
flw f25, 0(x2) # load 0xc2dce401 from memory into f25
fnmsub.s f1, f29, f1, f25 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f2)
la x2, scratch
li x3, 0xfb82607d # load x3 with value 0xfb82607d
sw x3, 0(x2) # store 0xfb82607d in memory
flw f15, 0(x2) # load 0xfb82607d from memory into f15
la x2, scratch
li x3, 0x48930369 # load x3 with value 0x48930369
sw x3, 0(x2) # store 0x48930369 in memory
flw f2, 0(x2) # load 0x48930369 from memory into f2
la x2, scratch
li x3, 0xac4358e5 # load x3 with value 0xac4358e5
sw x3, 0(x2) # store 0xac4358e5 in memory
flw f6, 0(x2) # load 0xac4358e5 from memory into f6
fnmsub.s f2, f15, f2, f6 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f3)
la x2, scratch
li x3, 0x4f7515f7 # load x3 with value 0x4f7515f7
sw x3, 0(x2) # store 0x4f7515f7 in memory
flw f18, 0(x2) # load 0x4f7515f7 from memory into f18
la x2, scratch
li x3, 0x9bf0f44b # load x3 with value 0x9bf0f44b
sw x3, 0(x2) # store 0x9bf0f44b in memory
flw f3, 0(x2) # load 0x9bf0f44b from memory into f3
la x2, scratch
li x3, 0x55edf598 # load x3 with value 0x55edf598
sw x3, 0(x2) # store 0x55edf598 in memory
flw f12, 0(x2) # load 0x55edf598 from memory into f12
fnmsub.s f3, f18, f3, f12 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f4)
mv x5, x4 # switch signature pointer register to avoid conflict with test
la x2, scratch
li x3, 0xbf9977c2 # load x3 with value 0xbf9977c2
sw x3, 0(x2) # store 0xbf9977c2 in memory
flw f3, 0(x2) # load 0xbf9977c2 from memory into f3
la x2, scratch
li x3, 0x320d2fdb # load x3 with value 0x320d2fdb
sw x3, 0(x2) # store 0x320d2fdb in memory
flw f4, 0(x2) # load 0x320d2fdb from memory into f4
la x2, scratch
li x3, 0x5d9fbddd # load x3 with value 0x5d9fbddd
sw x3, 0(x2) # store 0x5d9fbddd in memory
flw f15, 0(x2) # load 0x5d9fbddd from memory into f15
fnmsub.s f4, f3, f4, f15 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f5)
mv x6, x5 # switch signature pointer register to avoid conflict with test
la x2, scratch
li x3, 0x08fe2156 # load x3 with value 0x08fe2156
sw x3, 0(x2) # store 0x08fe2156 in memory
flw f16, 0(x2) # load 0x08fe2156 from memory into f16
la x2, scratch
li x3, 0x7577b63f # load x3 with value 0x7577b63f
sw x3, 0(x2) # store 0x7577b63f in memory
flw f5, 0(x2) # load 0x7577b63f from memory into f5
la x2, scratch
li x3, 0x0d1df0e1 # load x3 with value 0x0d1df0e1
sw x3, 0(x2) # store 0x0d1df0e1 in memory
flw f17, 0(x2) # load 0x0d1df0e1 from memory into f17
fnmsub.s f5, f16, f5, f17 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f6)
mv x7, x6 # switch signature pointer register to avoid conflict with test
la x2, scratch
li x3, 0xda5fa99c # load x3 with value 0xda5fa99c
sw x3, 0(x2) # store 0xda5fa99c in memory
flw f12, 0(x2) # load 0xda5fa99c from memory into f12
la x2, scratch
li x3, 0x698d4ea9 # load x3 with value 0x698d4ea9
sw x3, 0(x2) # store 0x698d4ea9 in memory
flw f6, 0(x2) # load 0x698d4ea9 from memory into f6
la x2, scratch
li x3, 0xfa6f4f21 # load x3 with value 0xfa6f4f21
sw x3, 0(x2) # store 0xfa6f4f21 in memory
flw f8, 0(x2) # load 0xfa6f4f21 from memory into f8
fnmsub.s f6, f12, f6, f8 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f7)
mv x4, x7 # switch signature pointer register to avoid conflict with test
la x2, scratch
li x3, 0x7f08bb46 # load x3 with value 0x7f08bb46
sw x3, 0(x2) # store 0x7f08bb46 in memory
flw f27, 0(x2) # load 0x7f08bb46 from memory into f27
la x2, scratch
li x3, 0xa6158210 # load x3 with value 0xa6158210
sw x3, 0(x2) # store 0xa6158210 in memory
flw f7, 0(x2) # load 0xa6158210 from memory into f7
la x2, scratch
li x3, 0x9bab2b5f # load x3 with value 0x9bab2b5f
sw x3, 0(x2) # store 0x9bab2b5f in memory
flw f15, 0(x2) # load 0x9bab2b5f from memory into f15
fnmsub.s f7, f27, f7, f15 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f8)
la x2, scratch
li x3, 0x193019e7 # load x3 with value 0x193019e7
sw x3, 0(x2) # store 0x193019e7 in memory
flw f25, 0(x2) # load 0x193019e7 from memory into f25
la x2, scratch
li x3, 0x52f472f3 # load x3 with value 0x52f472f3
sw x3, 0(x2) # store 0x52f472f3 in memory
flw f8, 0(x2) # load 0x52f472f3 from memory into f8
la x2, scratch
li x3, 0xfc73da26 # load x3 with value 0xfc73da26
sw x3, 0(x2) # store 0xfc73da26 in memory
flw f10, 0(x2) # load 0xfc73da26 from memory into f10
fnmsub.s f8, f25, f8, f10 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f9)
la x2, scratch
li x3, 0x937be26c # load x3 with value 0x937be26c
sw x3, 0(x2) # store 0x937be26c in memory
flw f16, 0(x2) # load 0x937be26c from memory into f16
la x2, scratch
li x3, 0x19a0fc6a # load x3 with value 0x19a0fc6a
sw x3, 0(x2) # store 0x19a0fc6a in memory
flw f9, 0(x2) # load 0x19a0fc6a from memory into f9
la x2, scratch
li x3, 0x53917b00 # load x3 with value 0x53917b00
sw x3, 0(x2) # store 0x53917b00 in memory
flw f27, 0(x2) # load 0x53917b00 from memory into f27
fnmsub.s f9, f16, f9, f27 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f10)
la x2, scratch
li x3, 0x2bdd8e7e # load x3 with value 0x2bdd8e7e
sw x3, 0(x2) # store 0x2bdd8e7e in memory
flw f21, 0(x2) # load 0x2bdd8e7e from memory into f21
la x2, scratch
li x3, 0x3ff2740b # load x3 with value 0x3ff2740b
sw x3, 0(x2) # store 0x3ff2740b in memory
flw f10, 0(x2) # load 0x3ff2740b from memory into f10
la x2, scratch
li x3, 0xf7b929a6 # load x3 with value 0xf7b929a6
sw x3, 0(x2) # store 0xf7b929a6 in memory
flw f16, 0(x2) # load 0xf7b929a6 from memory into f16
fnmsub.s f10, f21, f10, f16 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f11)
la x2, scratch
li x3, 0xd3985bf1 # load x3 with value 0xd3985bf1
sw x3, 0(x2) # store 0xd3985bf1 in memory
flw f9, 0(x2) # load 0xd3985bf1 from memory into f9
la x2, scratch
li x3, 0xbc053a44 # load x3 with value 0xbc053a44
sw x3, 0(x2) # store 0xbc053a44 in memory
flw f11, 0(x2) # load 0xbc053a44 from memory into f11
la x2, scratch
li x3, 0x825706de # load x3 with value 0x825706de
sw x3, 0(x2) # store 0x825706de in memory
flw f20, 0(x2) # load 0x825706de from memory into f20
fnmsub.s f11, f9, f11, f20 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f12)
la x2, scratch
li x3, 0x15ff452b # load x3 with value 0x15ff452b
sw x3, 0(x2) # store 0x15ff452b in memory
flw f6, 0(x2) # load 0x15ff452b from memory into f6
la x2, scratch
li x3, 0xbdf05863 # load x3 with value 0xbdf05863
sw x3, 0(x2) # store 0xbdf05863 in memory
flw f12, 0(x2) # load 0xbdf05863 from memory into f12
la x2, scratch
li x3, 0xe102d6ff # load x3 with value 0xe102d6ff
sw x3, 0(x2) # store 0xe102d6ff in memory
flw f26, 0(x2) # load 0xe102d6ff from memory into f26
fnmsub.s f12, f6, f12, f26 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f13)
la x2, scratch
li x3, 0x2e104486 # load x3 with value 0x2e104486
sw x3, 0(x2) # store 0x2e104486 in memory
flw f12, 0(x2) # load 0x2e104486 from memory into f12
la x2, scratch
li x3, 0x71837b27 # load x3 with value 0x71837b27
sw x3, 0(x2) # store 0x71837b27 in memory
flw f13, 0(x2) # load 0x71837b27 from memory into f13
la x2, scratch
li x3, 0xef745f40 # load x3 with value 0xef745f40
sw x3, 0(x2) # store 0xef745f40 in memory
flw f8, 0(x2) # load 0xef745f40 from memory into f8
fnmsub.s f13, f12, f13, f8 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f14)
la x2, scratch
li x3, 0xabb40373 # load x3 with value 0xabb40373
sw x3, 0(x2) # store 0xabb40373 in memory
flw f16, 0(x2) # load 0xabb40373 from memory into f16
la x2, scratch
li x3, 0x59d99c5f # load x3 with value 0x59d99c5f
sw x3, 0(x2) # store 0x59d99c5f in memory
flw f14, 0(x2) # load 0x59d99c5f from memory into f14
la x2, scratch
li x3, 0x08ea3b15 # load x3 with value 0x08ea3b15
sw x3, 0(x2) # store 0x08ea3b15 in memory
flw f23, 0(x2) # load 0x08ea3b15 from memory into f23
fnmsub.s f14, f16, f14, f23 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f15)
la x2, scratch
li x3, 0x2a8bcd1a # load x3 with value 0x2a8bcd1a
sw x3, 0(x2) # store 0x2a8bcd1a in memory
flw f1, 0(x2) # load 0x2a8bcd1a from memory into f1
la x2, scratch
li x3, 0xae2d3793 # load x3 with value 0xae2d3793
sw x3, 0(x2) # store 0xae2d3793 in memory
flw f15, 0(x2) # load 0xae2d3793 from memory into f15
la x2, scratch
li x3, 0xb74c16ce # load x3 with value 0xb74c16ce
sw x3, 0(x2) # store 0xb74c16ce in memory
flw f28, 0(x2) # load 0xb74c16ce from memory into f28
fnmsub.s f15, f1, f15, f28 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f16)
la x2, scratch
li x3, 0x50710232 # load x3 with value 0x50710232
sw x3, 0(x2) # store 0x50710232 in memory
flw f11, 0(x2) # load 0x50710232 from memory into f11
la x2, scratch
li x3, 0xe0bc9593 # load x3 with value 0xe0bc9593
sw x3, 0(x2) # store 0xe0bc9593 in memory
flw f16, 0(x2) # load 0xe0bc9593 from memory into f16
la x2, scratch
li x3, 0xf7971c2e # load x3 with value 0xf7971c2e
sw x3, 0(x2) # store 0xf7971c2e in memory
flw f28, 0(x2) # load 0xf7971c2e from memory into f28
fnmsub.s f16, f11, f16, f28 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f17)
la x2, scratch
li x3, 0xe563054c # load x3 with value 0xe563054c
sw x3, 0(x2) # store 0xe563054c in memory
flw f20, 0(x2) # load 0xe563054c from memory into f20
la x2, scratch
li x3, 0x97089a0b # load x3 with value 0x97089a0b
sw x3, 0(x2) # store 0x97089a0b in memory
flw f17, 0(x2) # load 0x97089a0b from memory into f17
la x2, scratch
li x3, 0x658e387b # load x3 with value 0x658e387b
sw x3, 0(x2) # store 0x658e387b in memory
flw f10, 0(x2) # load 0x658e387b from memory into f10
fnmsub.s f17, f20, f17, f10 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f18)
la x2, scratch
li x3, 0xf52962b2 # load x3 with value 0xf52962b2
sw x3, 0(x2) # store 0xf52962b2 in memory
flw f7, 0(x2) # load 0xf52962b2 from memory into f7
la x2, scratch
li x3, 0x2e4a674a # load x3 with value 0x2e4a674a
sw x3, 0(x2) # store 0x2e4a674a in memory
flw f18, 0(x2) # load 0x2e4a674a from memory into f18
la x2, scratch
li x3, 0x92ca05a7 # load x3 with value 0x92ca05a7
sw x3, 0(x2) # store 0x92ca05a7 in memory
flw f20, 0(x2) # load 0x92ca05a7 from memory into f20
fnmsub.s f18, f7, f18, f20 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f19)
la x2, scratch
li x3, 0x08a85419 # load x3 with value 0x08a85419
sw x3, 0(x2) # store 0x08a85419 in memory
flw f17, 0(x2) # load 0x08a85419 from memory into f17
la x2, scratch
li x3, 0x23679d89 # load x3 with value 0x23679d89
sw x3, 0(x2) # store 0x23679d89 in memory
flw f19, 0(x2) # load 0x23679d89 from memory into f19
la x2, scratch
li x3, 0x2ca8e4fa # load x3 with value 0x2ca8e4fa
sw x3, 0(x2) # store 0x2ca8e4fa in memory
flw f16, 0(x2) # load 0x2ca8e4fa from memory into f16
fnmsub.s f19, f17, f19, f16 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f20)
la x2, scratch
li x3, 0x41186fb9 # load x3 with value 0x41186fb9
sw x3, 0(x2) # store 0x41186fb9 in memory
flw f5, 0(x2) # load 0x41186fb9 from memory into f5
la x2, scratch
li x3, 0x95cbef19 # load x3 with value 0x95cbef19
sw x3, 0(x2) # store 0x95cbef19 in memory
flw f20, 0(x2) # load 0x95cbef19 from memory into f20
la x2, scratch
li x3, 0x659a72dd # load x3 with value 0x659a72dd
sw x3, 0(x2) # store 0x659a72dd in memory
flw f25, 0(x2) # load 0x659a72dd from memory into f25
fnmsub.s f20, f5, f20, f25 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f21)
la x2, scratch
li x3, 0x297ce14f # load x3 with value 0x297ce14f
sw x3, 0(x2) # store 0x297ce14f in memory
flw f26, 0(x2) # load 0x297ce14f from memory into f26
la x2, scratch
li x3, 0xf0560ce3 # load x3 with value 0xf0560ce3
sw x3, 0(x2) # store 0xf0560ce3 in memory
flw f21, 0(x2) # load 0xf0560ce3 from memory into f21
la x2, scratch
li x3, 0xa1e61b72 # load x3 with value 0xa1e61b72
sw x3, 0(x2) # store 0xa1e61b72 in memory
flw f11, 0(x2) # load 0xa1e61b72 from memory into f11
fnmsub.s f21, f26, f21, f11 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f22)
la x2, scratch
li x3, 0xb2be3179 # load x3 with value 0xb2be3179
sw x3, 0(x2) # store 0xb2be3179 in memory
flw f28, 0(x2) # load 0xb2be3179 from memory into f28
la x2, scratch
li x3, 0xa2c05d10 # load x3 with value 0xa2c05d10
sw x3, 0(x2) # store 0xa2c05d10 in memory
flw f22, 0(x2) # load 0xa2c05d10 from memory into f22
la x2, scratch
li x3, 0xaa341d05 # load x3 with value 0xaa341d05
sw x3, 0(x2) # store 0xaa341d05 in memory
flw f31, 0(x2) # load 0xaa341d05 from memory into f31
fnmsub.s f22, f28, f22, f31 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f23)
la x2, scratch
li x3, 0x0be496aa # load x3 with value 0x0be496aa
sw x3, 0(x2) # store 0x0be496aa in memory
flw f8, 0(x2) # load 0x0be496aa from memory into f8
la x2, scratch
li x3, 0x62c141fb # load x3 with value 0x62c141fb
sw x3, 0(x2) # store 0x62c141fb in memory
flw f23, 0(x2) # load 0x62c141fb from memory into f23
la x2, scratch
li x3, 0xd6f6ce51 # load x3 with value 0xd6f6ce51
sw x3, 0(x2) # store 0xd6f6ce51 in memory
flw f12, 0(x2) # load 0xd6f6ce51 from memory into f12
fnmsub.s f23, f8, f23, f12 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f24)
la x2, scratch
li x3, 0x165edd56 # load x3 with value 0x165edd56
sw x3, 0(x2) # store 0x165edd56 in memory
flw f5, 0(x2) # load 0x165edd56 from memory into f5
la x2, scratch
li x3, 0xdb19b9fc # load x3 with value 0xdb19b9fc
sw x3, 0(x2) # store 0xdb19b9fc in memory
flw f24, 0(x2) # load 0xdb19b9fc from memory into f24
la x2, scratch
li x3, 0x37ad8853 # load x3 with value 0x37ad8853
sw x3, 0(x2) # store 0x37ad8853 in memory
flw f3, 0(x2) # load 0x37ad8853 from memory into f3
fnmsub.s f24, f5, f24, f3 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f25)
la x2, scratch
li x3, 0xb937160d # load x3 with value 0xb937160d
sw x3, 0(x2) # store 0xb937160d in memory
flw f26, 0(x2) # load 0xb937160d from memory into f26
la x2, scratch
li x3, 0x6b1f9164 # load x3 with value 0x6b1f9164
sw x3, 0(x2) # store 0x6b1f9164 in memory
flw f25, 0(x2) # load 0x6b1f9164 from memory into f25
la x2, scratch
li x3, 0xecc9a6e6 # load x3 with value 0xecc9a6e6
sw x3, 0(x2) # store 0xecc9a6e6 in memory
flw f3, 0(x2) # load 0xecc9a6e6 from memory into f3
fnmsub.s f25, f26, f25, f3 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f26)
la x2, scratch
li x3, 0x4d7673c8 # load x3 with value 0x4d7673c8
sw x3, 0(x2) # store 0x4d7673c8 in memory
flw f16, 0(x2) # load 0x4d7673c8 from memory into f16
la x2, scratch
li x3, 0xbe01f2c9 # load x3 with value 0xbe01f2c9
sw x3, 0(x2) # store 0xbe01f2c9 in memory
flw f26, 0(x2) # load 0xbe01f2c9 from memory into f26
la x2, scratch
li x3, 0xfa60e6d3 # load x3 with value 0xfa60e6d3
sw x3, 0(x2) # store 0xfa60e6d3 in memory
flw f7, 0(x2) # load 0xfa60e6d3 from memory into f7
fnmsub.s f26, f16, f26, f7 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f27)
la x2, scratch
li x3, 0x3557bfde # load x3 with value 0x3557bfde
sw x3, 0(x2) # store 0x3557bfde in memory
flw f19, 0(x2) # load 0x3557bfde from memory into f19
la x2, scratch
li x3, 0x921778a4 # load x3 with value 0x921778a4
sw x3, 0(x2) # store 0x921778a4 in memory
flw f27, 0(x2) # load 0x921778a4 from memory into f27
la x2, scratch
li x3, 0xeaa60c74 # load x3 with value 0xeaa60c74
sw x3, 0(x2) # store 0xeaa60c74 in memory
flw f26, 0(x2) # load 0xeaa60c74 from memory into f26
fnmsub.s f27, f19, f27, f26 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f28)
la x2, scratch
li x3, 0x846f0c60 # load x3 with value 0x846f0c60
sw x3, 0(x2) # store 0x846f0c60 in memory
flw f31, 0(x2) # load 0x846f0c60 from memory into f31
la x2, scratch
li x3, 0x623fa8d7 # load x3 with value 0x623fa8d7
sw x3, 0(x2) # store 0x623fa8d7 in memory
flw f28, 0(x2) # load 0x623fa8d7 from memory into f28
la x2, scratch
li x3, 0x7ba4b65f # load x3 with value 0x7ba4b65f
sw x3, 0(x2) # store 0x7ba4b65f in memory
flw f10, 0(x2) # load 0x7ba4b65f from memory into f10
fnmsub.s f28, f31, f28, f10 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f29)
la x2, scratch
li x3, 0xaa70b9f4 # load x3 with value 0xaa70b9f4
sw x3, 0(x2) # store 0xaa70b9f4 in memory
flw f7, 0(x2) # load 0xaa70b9f4 from memory into f7
la x2, scratch
li x3, 0x6605c991 # load x3 with value 0x6605c991
sw x3, 0(x2) # store 0x6605c991 in memory
flw f29, 0(x2) # load 0x6605c991 from memory into f29
la x2, scratch
li x3, 0xdef7f98c # load x3 with value 0xdef7f98c
sw x3, 0(x2) # store 0xdef7f98c in memory
flw f14, 0(x2) # load 0xdef7f98c from memory into f14
fnmsub.s f29, f7, f29, f14 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f30)
la x2, scratch
li x3, 0xad451f03 # load x3 with value 0xad451f03
sw x3, 0(x2) # store 0xad451f03 in memory
flw f23, 0(x2) # load 0xad451f03 from memory into f23
la x2, scratch
li x3, 0x70746152 # load x3 with value 0x70746152
sw x3, 0(x2) # store 0x70746152 in memory
flw f30, 0(x2) # load 0x70746152 from memory into f30
la x2, scratch
li x3, 0x8686606c # load x3 with value 0x8686606c
sw x3, 0(x2) # store 0x8686606c in memory
flw f22, 0(x2) # load 0x8686606c from memory into f22
fnmsub.s f30, f23, f30, f22 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f31)
la x2, scratch
li x3, 0x177b7e51 # load x3 with value 0x177b7e51
sw x3, 0(x2) # store 0x177b7e51 in memory
flw f6, 0(x2) # load 0x177b7e51 from memory into f6
la x2, scratch
li x3, 0xe09f4b98 # load x3 with value 0xe09f4b98
sw x3, 0(x2) # store 0xe09f4b98 in memory
flw f31, 0(x2) # load 0xe09f4b98 from memory into f31
la x2, scratch
li x3, 0x819bb635 # load x3 with value 0x819bb635
sw x3, 0(x2) # store 0x819bb635 in memory
flw f15, 0(x2) # load 0x819bb635 from memory into f15
fnmsub.s f31, f6, f31, f15 # perform operation

# Testcase cmp_fd_fs3 (Test fd = fs3 = f0)
la x2, scratch
li x3, 0x6df562cf # load x3 with value 0x6df562cf
sw x3, 0(x2) # store 0x6df562cf in memory
flw f27, 0(x2) # load 0x6df562cf from memory into f27
la x2, scratch
li x3, 0x65623010 # load x3 with value 0x65623010
sw x3, 0(x2) # store 0x65623010 in memory
flw f18, 0(x2) # load 0x65623010 from memory into f18
la x2, scratch
li x3, 0x96937cdd # load x3 with value 0x96937cdd
sw x3, 0(x2) # store 0x96937cdd in memory
flw f0, 0(x2) # load 0x96937cdd from memory into f0
fnmsub.s f0, f27, f18, f0 # perform operation

# Testcase cmp_fd_fs3 (Test fd = fs3 = f1)
la x2, scratch
li x3, 0x5a04a25d # load x3 with value 0x5a04a25d
sw x3, 0(x2) # store 0x5a04a25d in memory
flw f8, 0(x2) # load 0x5a04a25d from memory into f8
la x2, scratch
li x3, 0x659df808 # load x3 with value 0x659df808
sw x3, 0(x2) # store 0x659df808 in memory
flw f14, 0(x2) # load 0x659df808 from memory into f14
la x2, scratch
li x3, 0xfddfeef2 # load x3 with value 0xfddfeef2
sw x3, 0(x2) # store 0xfddfeef2 in memory
flw f1, 0(x2) # load 0xfddfeef2 from memory into f1
fnmsub.s f1, f8, f14, f1 # perform operation

# Testcase cmp_fd_fs3 (Test fd = fs3 = f2)
la x2, scratch
li x3, 0x8ac6b3d6 # load x3 with value 0x8ac6b3d6
sw x3, 0(x2) # store 0x8ac6b3d6 in memory
flw f8, 0(x2) # load 0x8ac6b3d6 from memory into f8
la x2, scratch
li x3, 0x5acb3882 # load x3 with value 0x5acb3882
sw x3, 0(x2) # store 0x5acb3882 in memory
flw f10, 0(x2) # load 0x5acb3882 from memory into f10
la x2, scratch
li x3, 0x142f00c8 # load x3 with value 0x142f00c8
sw x3, 0(x2) # store 0x142f00c8 in memory
flw f2, 0(x2) # load 0x142f00c8 from memory into f2
fnmsub.s f2, f8, f10, f2 # perform operation

# Testcase cmp_fd_fs3 (Test fd = fs3 = f3)
la x2, scratch
li x3, 0x3027800f # load x3 with value 0x3027800f
sw x3, 0(x2) # store 0x3027800f in memory
flw f23, 0(x2) # load 0x3027800f from memory into f23
la x2, scratch
li x3, 0x43185b58 # load x3 with value 0x43185b58
sw x3, 0(x2) # store 0x43185b58 in memory
flw f17, 0(x2) # load 0x43185b58 from memory into f17
la x2, scratch
li x3, 0x1b1aaef0 # load x3 with value 0x1b1aaef0
sw x3, 0(x2) # store 0x1b1aaef0 in memory
flw f3, 0(x2) # load 0x1b1aaef0 from memory into f3
fnmsub.s f3, f23, f17, f3 # perform operation

# Testcase cmp_fd_fs3 (Test fd = fs3 = f4)
mv x5, x4 # switch signature pointer register to avoid conflict with test
la x2, scratch
li x3, 0x86911dae # load x3 with value 0x86911dae
sw x3, 0(x2) # store 0x86911dae in memory
flw f27, 0(x2) # load 0x86911dae from memory into f27
la x2, scratch
li x3, 0xf17fc748 # load x3 with value 0xf17fc748
sw x3, 0(x2) # store 0xf17fc748 in memory
flw f19, 0(x2) # load 0xf17fc748 from memory into f19
la x2, scratch
li x3, 0x366c5333 # load x3 with value 0x366c5333
sw x3, 0(x2) # store 0x366c5333 in memory
flw f4, 0(x2) # load 0x366c5333 from memory into f4
fnmsub.s f4, f27, f19, f4 # perform operation

# Testcase cmp_fd_fs3 (Test fd = fs3 = f5)
mv x7, x5 # switch signature pointer register to avoid conflict with test
la x2, scratch
li x3, 0x0c058d8f # load x3 with value 0x0c058d8f
sw x3, 0(x2) # store 0x0c058d8f in memory
flw f12, 0(x2) # load 0x0c058d8f from memory into f12
la x2, scratch
li x3, 0x8e5add55 # load x3 with value 0x8e5add55
sw x3, 0(x2) # store 0x8e5add55 in memory
flw f6, 0(x2) # load 0x8e5add55 from memory into f6
la x2, scratch
li x3, 0xef51613b # load x3 with value 0xef51613b
sw x3, 0(x2) # store 0xef51613b in memory
flw f5, 0(x2) # load 0xef51613b from memory into f5
fnmsub.s f5, f12, f6, f5 # perform operation

# Testcase cmp_fd_fs3 (Test fd = fs3 = f6)
la x2, scratch
li x3, 0xe4f45e09 # load x3 with value 0xe4f45e09
sw x3, 0(x2) # store 0xe4f45e09 in memory
flw f31, 0(x2) # load 0xe4f45e09 from memory into f31
la x2, scratch
li x3, 0x4ae9a7c2 # load x3 with value 0x4ae9a7c2
sw x3, 0(x2) # store 0x4ae9a7c2 in memory
flw f3, 0(x2) # load 0x4ae9a7c2 from memory into f3
la x2, scratch
li x3, 0xee603a77 # load x3 with value 0xee603a77
sw x3, 0(x2) # store 0xee603a77 in memory
flw f6, 0(x2) # load 0xee603a77 from memory into f6
fnmsub.s f6, f31, f3, f6 # perform operation

# Testcase cmp_fd_fs3 (Test fd = fs3 = f7)
mv x4, x7 # switch signature pointer register to avoid conflict with test
la x2, scratch
li x3, 0x32293ca5 # load x3 with value 0x32293ca5
sw x3, 0(x2) # store 0x32293ca5 in memory
flw f6, 0(x2) # load 0x32293ca5 from memory into f6
la x2, scratch
li x3, 0x4f84b174 # load x3 with value 0x4f84b174
sw x3, 0(x2) # store 0x4f84b174 in memory
flw f13, 0(x2) # load 0x4f84b174 from memory into f13
la x2, scratch
li x3, 0x45715db7 # load x3 with value 0x45715db7
sw x3, 0(x2) # store 0x45715db7 in memory
flw f7, 0(x2) # load 0x45715db7 from memory into f7
fnmsub.s f7, f6, f13, f7 # perform operation

# Testcase cmp_fd_fs3 (Test fd = fs3 = f8)
la x2, scratch
li x3, 0xef2fa9df # load x3 with value 0xef2fa9df
sw x3, 0(x2) # store 0xef2fa9df in memory
flw f13, 0(x2) # load 0xef2fa9df from memory into f13
la x2, scratch
li x3, 0x7479203c # load x3 with value 0x7479203c
sw x3, 0(x2) # store 0x7479203c in memory
flw f27, 0(x2) # load 0x7479203c from memory into f27
la x2, scratch
li x3, 0x72dc7c1b # load x3 with value 0x72dc7c1b
sw x3, 0(x2) # store 0x72dc7c1b in memory
flw f8, 0(x2) # load 0x72dc7c1b from memory into f8
fnmsub.s f8, f13, f27, f8 # perform operation

# Testcase cmp_fd_fs3 (Test fd = fs3 = f9)
la x2, scratch
li x3, 0xa7d80b85 # load x3 with value 0xa7d80b85
sw x3, 0(x2) # store 0xa7d80b85 in memory
flw f2, 0(x2) # load 0xa7d80b85 from memory into f2
la x2, scratch
li x3, 0x3a19a933 # load x3 with value 0x3a19a933
sw x3, 0(x2) # store 0x3a19a933 in memory
flw f6, 0(x2) # load 0x3a19a933 from memory into f6
la x2, scratch
li x3, 0x01d33329 # load x3 with value 0x01d33329
sw x3, 0(x2) # store 0x01d33329 in memory
flw f9, 0(x2) # load 0x01d33329 from memory into f9
fnmsub.s f9, f2, f6, f9 # perform operation

# Testcase cmp_fd_fs3 (Test fd = fs3 = f10)
la x2, scratch
li x3, 0x5a769bd1 # load x3 with value 0x5a769bd1
sw x3, 0(x2) # store 0x5a769bd1 in memory
flw f19, 0(x2) # load 0x5a769bd1 from memory into f19
la x2, scratch
li x3, 0x142528b2 # load x3 with value 0x142528b2
sw x3, 0(x2) # store 0x142528b2 in memory
flw f11, 0(x2) # load 0x142528b2 from memory into f11
la x2, scratch
li x3, 0x65000323 # load x3 with value 0x65000323
sw x3, 0(x2) # store 0x65000323 in memory
flw f10, 0(x2) # load 0x65000323 from memory into f10
fnmsub.s f10, f19, f11, f10 # perform operation

# Testcase cmp_fd_fs3 (Test fd = fs3 = f11)
la x2, scratch
li x3, 0xa11a1f1b # load x3 with value 0xa11a1f1b
sw x3, 0(x2) # store 0xa11a1f1b in memory
flw f14, 0(x2) # load 0xa11a1f1b from memory into f14
la x2, scratch
li x3, 0xc62cc1a1 # load x3 with value 0xc62cc1a1
sw x3, 0(x2) # store 0xc62cc1a1 in memory
flw f24, 0(x2) # load 0xc62cc1a1 from memory into f24
la x2, scratch
li x3, 0x4f0a984b # load x3 with value 0x4f0a984b
sw x3, 0(x2) # store 0x4f0a984b in memory
flw f11, 0(x2) # load 0x4f0a984b from memory into f11
fnmsub.s f11, f14, f24, f11 # perform operation

# Testcase cmp_fd_fs3 (Test fd = fs3 = f12)
la x2, scratch
li x3, 0xf34c56b4 # load x3 with value 0xf34c56b4
sw x3, 0(x2) # store 0xf34c56b4 in memory
flw f10, 0(x2) # load 0xf34c56b4 from memory into f10
la x2, scratch
li x3, 0xd79e161c # load x3 with value 0xd79e161c
sw x3, 0(x2) # store 0xd79e161c in memory
flw f27, 0(x2) # load 0xd79e161c from memory into f27
la x2, scratch
li x3, 0x6f5947ec # load x3 with value 0x6f5947ec
sw x3, 0(x2) # store 0x6f5947ec in memory
flw f12, 0(x2) # load 0x6f5947ec from memory into f12
fnmsub.s f12, f10, f27, f12 # perform operation

# Testcase cmp_fd_fs3 (Test fd = fs3 = f13)
la x2, scratch
li x3, 0x57837358 # load x3 with value 0x57837358
sw x3, 0(x2) # store 0x57837358 in memory
flw f9, 0(x2) # load 0x57837358 from memory into f9
la x2, scratch
li x3, 0xafc2a173 # load x3 with value 0xafc2a173
sw x3, 0(x2) # store 0xafc2a173 in memory
flw f8, 0(x2) # load 0xafc2a173 from memory into f8
la x2, scratch
li x3, 0xd8b8e431 # load x3 with value 0xd8b8e431
sw x3, 0(x2) # store 0xd8b8e431 in memory
flw f13, 0(x2) # load 0xd8b8e431 from memory into f13
fnmsub.s f13, f9, f8, f13 # perform operation

# Testcase cmp_fd_fs3 (Test fd = fs3 = f14)
la x2, scratch
li x3, 0xf78797be # load x3 with value 0xf78797be
sw x3, 0(x2) # store 0xf78797be in memory
flw f16, 0(x2) # load 0xf78797be from memory into f16
la x2, scratch
li x3, 0xe07104a0 # load x3 with value 0xe07104a0
sw x3, 0(x2) # store 0xe07104a0 in memory
flw f15, 0(x2) # load 0xe07104a0 from memory into f15
la x2, scratch
li x3, 0xf01efd37 # load x3 with value 0xf01efd37
sw x3, 0(x2) # store 0xf01efd37 in memory
flw f14, 0(x2) # load 0xf01efd37 from memory into f14
fnmsub.s f14, f16, f15, f14 # perform operation

# Testcase cmp_fd_fs3 (Test fd = fs3 = f15)
la x2, scratch
li x3, 0x194929ec # load x3 with value 0x194929ec
sw x3, 0(x2) # store 0x194929ec in memory
flw f1, 0(x2) # load 0x194929ec from memory into f1
la x2, scratch
li x3, 0x96dc5b23 # load x3 with value 0x96dc5b23
sw x3, 0(x2) # store 0x96dc5b23 in memory
flw f16, 0(x2) # load 0x96dc5b23 from memory into f16
la x2, scratch
li x3, 0x92041d24 # load x3 with value 0x92041d24
sw x3, 0(x2) # store 0x92041d24 in memory
flw f15, 0(x2) # load 0x92041d24 from memory into f15
fnmsub.s f15, f1, f16, f15 # perform operation

# Testcase cmp_fd_fs3 (Test fd = fs3 = f16)
la x2, scratch
li x3, 0x47c47c7b # load x3 with value 0x47c47c7b
sw x3, 0(x2) # store 0x47c47c7b in memory
flw f13, 0(x2) # load 0x47c47c7b from memory into f13
la x2, scratch
li x3, 0x9cfbb76d # load x3 with value 0x9cfbb76d
sw x3, 0(x2) # store 0x9cfbb76d in memory
flw f18, 0(x2) # load 0x9cfbb76d from memory into f18
la x2, scratch
li x3, 0x68f5ee3a # load x3 with value 0x68f5ee3a
sw x3, 0(x2) # store 0x68f5ee3a in memory
flw f16, 0(x2) # load 0x68f5ee3a from memory into f16
fnmsub.s f16, f13, f18, f16 # perform operation

# Testcase cmp_fd_fs3 (Test fd = fs3 = f17)
la x2, scratch
li x3, 0x1a93aa5f # load x3 with value 0x1a93aa5f
sw x3, 0(x2) # store 0x1a93aa5f in memory
flw f30, 0(x2) # load 0x1a93aa5f from memory into f30
la x2, scratch
li x3, 0x2a983b63 # load x3 with value 0x2a983b63
sw x3, 0(x2) # store 0x2a983b63 in memory
flw f11, 0(x2) # load 0x2a983b63 from memory into f11
la x2, scratch
li x3, 0x80c5ca7f # load x3 with value 0x80c5ca7f
sw x3, 0(x2) # store 0x80c5ca7f in memory
flw f17, 0(x2) # load 0x80c5ca7f from memory into f17
fnmsub.s f17, f30, f11, f17 # perform operation

# Testcase cmp_fd_fs3 (Test fd = fs3 = f18)
la x2, scratch
li x3, 0x6f60add1 # load x3 with value 0x6f60add1
sw x3, 0(x2) # store 0x6f60add1 in memory
flw f9, 0(x2) # load 0x6f60add1 from memory into f9
la x2, scratch
li x3, 0xd287e7f5 # load x3 with value 0xd287e7f5
sw x3, 0(x2) # store 0xd287e7f5 in memory
flw f2, 0(x2) # load 0xd287e7f5 from memory into f2
la x2, scratch
li x3, 0xf1f20a34 # load x3 with value 0xf1f20a34
sw x3, 0(x2) # store 0xf1f20a34 in memory
flw f18, 0(x2) # load 0xf1f20a34 from memory into f18
fnmsub.s f18, f9, f2, f18 # perform operation

# Testcase cmp_fd_fs3 (Test fd = fs3 = f19)
la x2, scratch
li x3, 0x498486f2 # load x3 with value 0x498486f2
sw x3, 0(x2) # store 0x498486f2 in memory
flw f10, 0(x2) # load 0x498486f2 from memory into f10
la x2, scratch
li x3, 0xd7fea9a1 # load x3 with value 0xd7fea9a1
sw x3, 0(x2) # store 0xd7fea9a1 in memory
flw f23, 0(x2) # load 0xd7fea9a1 from memory into f23
la x2, scratch
li x3, 0x5bac901d # load x3 with value 0x5bac901d
sw x3, 0(x2) # store 0x5bac901d in memory
flw f19, 0(x2) # load 0x5bac901d from memory into f19
fnmsub.s f19, f10, f23, f19 # perform operation

# Testcase cmp_fd_fs3 (Test fd = fs3 = f20)
la x2, scratch
li x3, 0x320fa8ec # load x3 with value 0x320fa8ec
sw x3, 0(x2) # store 0x320fa8ec in memory
flw f12, 0(x2) # load 0x320fa8ec from memory into f12
la x2, scratch
li x3, 0x6e0c1dbe # load x3 with value 0x6e0c1dbe
sw x3, 0(x2) # store 0x6e0c1dbe in memory
flw f9, 0(x2) # load 0x6e0c1dbe from memory into f9
la x2, scratch
li x3, 0xfbebf23d # load x3 with value 0xfbebf23d
sw x3, 0(x2) # store 0xfbebf23d in memory
flw f20, 0(x2) # load 0xfbebf23d from memory into f20
fnmsub.s f20, f12, f9, f20 # perform operation

# Testcase cmp_fd_fs3 (Test fd = fs3 = f21)
la x2, scratch
li x3, 0x07a1308c # load x3 with value 0x07a1308c
sw x3, 0(x2) # store 0x07a1308c in memory
flw f16, 0(x2) # load 0x07a1308c from memory into f16
la x2, scratch
li x3, 0x1ace36a9 # load x3 with value 0x1ace36a9
sw x3, 0(x2) # store 0x1ace36a9 in memory
flw f11, 0(x2) # load 0x1ace36a9 from memory into f11
la x2, scratch
li x3, 0x72cee804 # load x3 with value 0x72cee804
sw x3, 0(x2) # store 0x72cee804 in memory
flw f21, 0(x2) # load 0x72cee804 from memory into f21
fnmsub.s f21, f16, f11, f21 # perform operation

# Testcase cmp_fd_fs3 (Test fd = fs3 = f22)
la x2, scratch
li x3, 0x6cc11f4c # load x3 with value 0x6cc11f4c
sw x3, 0(x2) # store 0x6cc11f4c in memory
flw f17, 0(x2) # load 0x6cc11f4c from memory into f17
la x2, scratch
li x3, 0x040ff50f # load x3 with value 0x040ff50f
sw x3, 0(x2) # store 0x040ff50f in memory
flw f11, 0(x2) # load 0x040ff50f from memory into f11
la x2, scratch
li x3, 0x539d6c19 # load x3 with value 0x539d6c19
sw x3, 0(x2) # store 0x539d6c19 in memory
flw f22, 0(x2) # load 0x539d6c19 from memory into f22
fnmsub.s f22, f17, f11, f22 # perform operation

# Testcase cmp_fd_fs3 (Test fd = fs3 = f23)
la x2, scratch
li x3, 0x5f5193ea # load x3 with value 0x5f5193ea
sw x3, 0(x2) # store 0x5f5193ea in memory
flw f13, 0(x2) # load 0x5f5193ea from memory into f13
la x2, scratch
li x3, 0xe43c2ccc # load x3 with value 0xe43c2ccc
sw x3, 0(x2) # store 0xe43c2ccc in memory
flw f19, 0(x2) # load 0xe43c2ccc from memory into f19
la x2, scratch
li x3, 0x36756be7 # load x3 with value 0x36756be7
sw x3, 0(x2) # store 0x36756be7 in memory
flw f23, 0(x2) # load 0x36756be7 from memory into f23
fnmsub.s f23, f13, f19, f23 # perform operation

# Testcase cmp_fd_fs3 (Test fd = fs3 = f24)
la x2, scratch
li x3, 0x848d4c60 # load x3 with value 0x848d4c60
sw x3, 0(x2) # store 0x848d4c60 in memory
flw f31, 0(x2) # load 0x848d4c60 from memory into f31
la x2, scratch
li x3, 0x6a3ac26f # load x3 with value 0x6a3ac26f
sw x3, 0(x2) # store 0x6a3ac26f in memory
flw f7, 0(x2) # load 0x6a3ac26f from memory into f7
la x2, scratch
li x3, 0x20aac67b # load x3 with value 0x20aac67b
sw x3, 0(x2) # store 0x20aac67b in memory
flw f24, 0(x2) # load 0x20aac67b from memory into f24
fnmsub.s f24, f31, f7, f24 # perform operation

# Testcase cmp_fd_fs3 (Test fd = fs3 = f25)
la x2, scratch
li x3, 0xd728dd4c # load x3 with value 0xd728dd4c
sw x3, 0(x2) # store 0xd728dd4c in memory
flw f2, 0(x2) # load 0xd728dd4c from memory into f2
la x2, scratch
li x3, 0x9b08941c # load x3 with value 0x9b08941c
sw x3, 0(x2) # store 0x9b08941c in memory
flw f23, 0(x2) # load 0x9b08941c from memory into f23
la x2, scratch
li x3, 0x8c795b95 # load x3 with value 0x8c795b95
sw x3, 0(x2) # store 0x8c795b95 in memory
flw f25, 0(x2) # load 0x8c795b95 from memory into f25
fnmsub.s f25, f2, f23, f25 # perform operation

# Testcase cmp_fd_fs3 (Test fd = fs3 = f26)
la x2, scratch
li x3, 0x9523bba7 # load x3 with value 0x9523bba7
sw x3, 0(x2) # store 0x9523bba7 in memory
flw f31, 0(x2) # load 0x9523bba7 from memory into f31
la x2, scratch
li x3, 0xb9c2b02b # load x3 with value 0xb9c2b02b
sw x3, 0(x2) # store 0xb9c2b02b in memory
flw f1, 0(x2) # load 0xb9c2b02b from memory into f1
la x2, scratch
li x3, 0x51d56e29 # load x3 with value 0x51d56e29
sw x3, 0(x2) # store 0x51d56e29 in memory
flw f26, 0(x2) # load 0x51d56e29 from memory into f26
fnmsub.s f26, f31, f1, f26 # perform operation

# Testcase cmp_fd_fs3 (Test fd = fs3 = f27)
la x2, scratch
li x3, 0x9d258c54 # load x3 with value 0x9d258c54
sw x3, 0(x2) # store 0x9d258c54 in memory
flw f17, 0(x2) # load 0x9d258c54 from memory into f17
la x2, scratch
li x3, 0xb9e4b5ed # load x3 with value 0xb9e4b5ed
sw x3, 0(x2) # store 0xb9e4b5ed in memory
flw f23, 0(x2) # load 0xb9e4b5ed from memory into f23
la x2, scratch
li x3, 0xb74a76fb # load x3 with value 0xb74a76fb
sw x3, 0(x2) # store 0xb74a76fb in memory
flw f27, 0(x2) # load 0xb74a76fb from memory into f27
fnmsub.s f27, f17, f23, f27 # perform operation

# Testcase cmp_fd_fs3 (Test fd = fs3 = f28)
la x2, scratch
li x3, 0xba54a275 # load x3 with value 0xba54a275
sw x3, 0(x2) # store 0xba54a275 in memory
flw f14, 0(x2) # load 0xba54a275 from memory into f14
la x2, scratch
li x3, 0xb4644fdf # load x3 with value 0xb4644fdf
sw x3, 0(x2) # store 0xb4644fdf in memory
flw f20, 0(x2) # load 0xb4644fdf from memory into f20
la x2, scratch
li x3, 0xcf7ddea3 # load x3 with value 0xcf7ddea3
sw x3, 0(x2) # store 0xcf7ddea3 in memory
flw f28, 0(x2) # load 0xcf7ddea3 from memory into f28
fnmsub.s f28, f14, f20, f28 # perform operation

# Testcase cmp_fd_fs3 (Test fd = fs3 = f29)
la x2, scratch
li x3, 0x0aebbcb9 # load x3 with value 0x0aebbcb9
sw x3, 0(x2) # store 0x0aebbcb9 in memory
flw f29, 0(x2) # load 0x0aebbcb9 from memory into f29
la x2, scratch
li x3, 0x313f7338 # load x3 with value 0x313f7338
sw x3, 0(x2) # store 0x313f7338 in memory
flw f5, 0(x2) # load 0x313f7338 from memory into f5
la x2, scratch
li x3, 0x741765e3 # load x3 with value 0x741765e3
sw x3, 0(x2) # store 0x741765e3 in memory
flw f29, 0(x2) # load 0x741765e3 from memory into f29
fnmsub.s f29, f29, f5, f29 # perform operation

# Testcase cmp_fd_fs3 (Test fd = fs3 = f30)
la x2, scratch
li x3, 0x51c0ca85 # load x3 with value 0x51c0ca85
sw x3, 0(x2) # store 0x51c0ca85 in memory
flw f3, 0(x2) # load 0x51c0ca85 from memory into f3
la x2, scratch
li x3, 0xfd7712c9 # load x3 with value 0xfd7712c9
sw x3, 0(x2) # store 0xfd7712c9 in memory
flw f24, 0(x2) # load 0xfd7712c9 from memory into f24
la x2, scratch
li x3, 0x40f501fc # load x3 with value 0x40f501fc
sw x3, 0(x2) # store 0x40f501fc in memory
flw f30, 0(x2) # load 0x40f501fc from memory into f30
fnmsub.s f30, f3, f24, f30 # perform operation

# Testcase cmp_fd_fs3 (Test fd = fs3 = f31)
la x2, scratch
li x3, 0x53f11c96 # load x3 with value 0x53f11c96
sw x3, 0(x2) # store 0x53f11c96 in memory
flw f9, 0(x2) # load 0x53f11c96 from memory into f9
la x2, scratch
li x3, 0x92c71e3c # load x3 with value 0x92c71e3c
sw x3, 0(x2) # store 0x92c71e3c in memory
flw f26, 0(x2) # load 0x92c71e3c from memory into f26
la x2, scratch
li x3, 0x48b907b6 # load x3 with value 0x48b907b6
sw x3, 0(x2) # store 0x48b907b6 in memory
flw f31, 0(x2) # load 0x48b907b6 from memory into f31
fnmsub.s f31, f9, f26, f31 # perform operation

# Testcase cp_frm
la x2, scratch
li x3, 0x36dcc9a5 # load x3 with value 0x36dcc9a5
sw x3, 0(x2) # store 0x36dcc9a5 in memory
flw f24, 0(x2) # load 0x36dcc9a5 from memory into f24
la x2, scratch
li x3, 0xa5e315bb # load x3 with value 0xa5e315bb
sw x3, 0(x2) # store 0xa5e315bb in memory
flw f25, 0(x2) # load 0xa5e315bb from memory into f25
la x2, scratch
li x3, 0x0000001f # load x3 with value 0x0000001f
sw x3, 0(x2) # store 0x0000001f in memory
flw f31, 0(x2) # load 0x0000001f from memory into f31
fnmsub.s f19, f24, f25, f31, dyn # perform operation
fnmsub.s f19, f24, f25, f31, rdn # perform operation
fnmsub.s f19, f24, f25, f31, rmm # perform operation
fnmsub.s f19, f24, f25, f31, rne # perform operation
fnmsub.s f19, f24, f25, f31, rtz # perform operation
fnmsub.s f19, f24, f25, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f19, f24, f25, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f19, f24, f25, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f19, f24, f25, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f19, f24, f25, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f19, f24, f25, f31 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f8, 0(x2) # load 0x00000000 from memory into f8
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f5, 0(x2) # load 0x00000000 from memory into f5
la x2, scratch
li x3, 0x68d6a43a # load x3 with value 0x68d6a43a
sw x3, 0(x2) # store 0x68d6a43a in memory
flw f25, 0(x2) # load 0x68d6a43a from memory into f25
fnmsub.s f17, f8, f5, f25, dyn # perform operation
fnmsub.s f17, f8, f5, f25, rdn # perform operation
fnmsub.s f17, f8, f5, f25, rmm # perform operation
fnmsub.s f17, f8, f5, f25, rne # perform operation
fnmsub.s f17, f8, f5, f25, rtz # perform operation
fnmsub.s f17, f8, f5, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f17, f8, f5, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f17, f8, f5, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f17, f8, f5, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f17, f8, f5, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f17, f8, f5, f25 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x80000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f24, 0(x2) # load 0x00000000 from memory into f24
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f13, 0(x2) # load 0x80000000 from memory into f13
la x2, scratch
li x3, 0xedf64ade # load x3 with value 0xedf64ade
sw x3, 0(x2) # store 0xedf64ade in memory
flw f8, 0(x2) # load 0xedf64ade from memory into f8
fnmsub.s f10, f24, f13, f8, dyn # perform operation
fnmsub.s f10, f24, f13, f8, rdn # perform operation
fnmsub.s f10, f24, f13, f8, rmm # perform operation
fnmsub.s f10, f24, f13, f8, rne # perform operation
fnmsub.s f10, f24, f13, f8, rtz # perform operation
fnmsub.s f10, f24, f13, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f10, f24, f13, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f10, f24, f13, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f10, f24, f13, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f10, f24, f13, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f10, f24, f13, f8 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x3f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f12, 0(x2) # load 0x00000000 from memory into f12
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f17, 0(x2) # load 0x3f800000 from memory into f17
la x2, scratch
li x3, 0x617b6b26 # load x3 with value 0x617b6b26
sw x3, 0(x2) # store 0x617b6b26 in memory
flw f2, 0(x2) # load 0x617b6b26 from memory into f2
fnmsub.s f1, f12, f17, f2, dyn # perform operation
fnmsub.s f1, f12, f17, f2, rdn # perform operation
fnmsub.s f1, f12, f17, f2, rmm # perform operation
fnmsub.s f1, f12, f17, f2, rne # perform operation
fnmsub.s f1, f12, f17, f2, rtz # perform operation
fnmsub.s f1, f12, f17, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f1, f12, f17, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f1, f12, f17, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f1, f12, f17, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f1, f12, f17, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f1, f12, f17, f2 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0xbf800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f2, 0(x2) # load 0x00000000 from memory into f2
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f26, 0(x2) # load 0xbf800000 from memory into f26
la x2, scratch
li x3, 0x4e2f8538 # load x3 with value 0x4e2f8538
sw x3, 0(x2) # store 0x4e2f8538 in memory
flw f29, 0(x2) # load 0x4e2f8538 from memory into f29
fnmsub.s f30, f2, f26, f29, dyn # perform operation
fnmsub.s f30, f2, f26, f29, rdn # perform operation
fnmsub.s f30, f2, f26, f29, rmm # perform operation
fnmsub.s f30, f2, f26, f29, rne # perform operation
fnmsub.s f30, f2, f26, f29, rtz # perform operation
fnmsub.s f30, f2, f26, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f30, f2, f26, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f30, f2, f26, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f30, f2, f26, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f30, f2, f26, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f30, f2, f26, f29 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x3fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f17, 0(x2) # load 0x00000000 from memory into f17
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f21, 0(x2) # load 0x3fc00000 from memory into f21
la x2, scratch
li x3, 0xf2b964b2 # load x3 with value 0xf2b964b2
sw x3, 0(x2) # store 0xf2b964b2 in memory
flw f19, 0(x2) # load 0xf2b964b2 from memory into f19
fnmsub.s f20, f17, f21, f19, dyn # perform operation
fnmsub.s f20, f17, f21, f19, rdn # perform operation
fnmsub.s f20, f17, f21, f19, rmm # perform operation
fnmsub.s f20, f17, f21, f19, rne # perform operation
fnmsub.s f20, f17, f21, f19, rtz # perform operation
fnmsub.s f20, f17, f21, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f20, f17, f21, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f20, f17, f21, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f20, f17, f21, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f20, f17, f21, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f20, f17, f21, f19 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0xbfc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f22, 0(x2) # load 0x00000000 from memory into f22
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f27, 0(x2) # load 0xbfc00000 from memory into f27
la x2, scratch
li x3, 0x30094e19 # load x3 with value 0x30094e19
sw x3, 0(x2) # store 0x30094e19 in memory
flw f12, 0(x2) # load 0x30094e19 from memory into f12
fnmsub.s f10, f22, f27, f12, dyn # perform operation
fnmsub.s f10, f22, f27, f12, rdn # perform operation
fnmsub.s f10, f22, f27, f12, rmm # perform operation
fnmsub.s f10, f22, f27, f12, rne # perform operation
fnmsub.s f10, f22, f27, f12, rtz # perform operation
fnmsub.s f10, f22, f27, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f10, f22, f27, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f10, f22, f27, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f10, f22, f27, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f10, f22, f27, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f10, f22, f27, f12 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x40000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f5, 0(x2) # load 0x00000000 from memory into f5
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f23, 0(x2) # load 0x40000000 from memory into f23
la x2, scratch
li x3, 0xba2f47e0 # load x3 with value 0xba2f47e0
sw x3, 0(x2) # store 0xba2f47e0 in memory
flw f14, 0(x2) # load 0xba2f47e0 from memory into f14
fnmsub.s f17, f5, f23, f14, dyn # perform operation
fnmsub.s f17, f5, f23, f14, rdn # perform operation
fnmsub.s f17, f5, f23, f14, rmm # perform operation
fnmsub.s f17, f5, f23, f14, rne # perform operation
fnmsub.s f17, f5, f23, f14, rtz # perform operation
fnmsub.s f17, f5, f23, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f17, f5, f23, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f17, f5, f23, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f17, f5, f23, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f17, f5, f23, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f17, f5, f23, f14 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0xc0000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f22, 0(x2) # load 0x00000000 from memory into f22
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f18, 0(x2) # load 0xc0000000 from memory into f18
la x2, scratch
li x3, 0xe55b60d0 # load x3 with value 0xe55b60d0
sw x3, 0(x2) # store 0xe55b60d0 in memory
flw f15, 0(x2) # load 0xe55b60d0 from memory into f15
fnmsub.s f28, f22, f18, f15, dyn # perform operation
fnmsub.s f28, f22, f18, f15, rdn # perform operation
fnmsub.s f28, f22, f18, f15, rmm # perform operation
fnmsub.s f28, f22, f18, f15, rne # perform operation
fnmsub.s f28, f22, f18, f15, rtz # perform operation
fnmsub.s f28, f22, f18, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f28, f22, f18, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f28, f22, f18, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f28, f22, f18, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f28, f22, f18, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f28, f22, f18, f15 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f20, 0(x2) # load 0x00000000 from memory into f20
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f16, 0(x2) # load 0x00800000 from memory into f16
la x2, scratch
li x3, 0x41c8fae3 # load x3 with value 0x41c8fae3
sw x3, 0(x2) # store 0x41c8fae3 in memory
flw f22, 0(x2) # load 0x41c8fae3 from memory into f22
fnmsub.s f12, f20, f16, f22, dyn # perform operation
fnmsub.s f12, f20, f16, f22, rdn # perform operation
fnmsub.s f12, f20, f16, f22, rmm # perform operation
fnmsub.s f12, f20, f16, f22, rne # perform operation
fnmsub.s f12, f20, f16, f22, rtz # perform operation
fnmsub.s f12, f20, f16, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f12, f20, f16, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f12, f20, f16, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f12, f20, f16, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f12, f20, f16, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f12, f20, f16, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x80800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f30, 0(x2) # load 0x00000000 from memory into f30
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f12, 0(x2) # load 0x80800000 from memory into f12
la x2, scratch
li x3, 0x8e2e8afb # load x3 with value 0x8e2e8afb
sw x3, 0(x2) # store 0x8e2e8afb in memory
flw f16, 0(x2) # load 0x8e2e8afb from memory into f16
fnmsub.s f21, f30, f12, f16, dyn # perform operation
fnmsub.s f21, f30, f12, f16, rdn # perform operation
fnmsub.s f21, f30, f12, f16, rmm # perform operation
fnmsub.s f21, f30, f12, f16, rne # perform operation
fnmsub.s f21, f30, f12, f16, rtz # perform operation
fnmsub.s f21, f30, f12, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f21, f30, f12, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f21, f30, f12, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f21, f30, f12, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f21, f30, f12, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f21, f30, f12, f16 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x7f7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f3, 0(x2) # load 0x00000000 from memory into f3
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f13, 0(x2) # load 0x7f7fffff from memory into f13
la x2, scratch
li x3, 0x8ffeaff0 # load x3 with value 0x8ffeaff0
sw x3, 0(x2) # store 0x8ffeaff0 in memory
flw f7, 0(x2) # load 0x8ffeaff0 from memory into f7
fnmsub.s f15, f3, f13, f7, dyn # perform operation
fnmsub.s f15, f3, f13, f7, rdn # perform operation
fnmsub.s f15, f3, f13, f7, rmm # perform operation
fnmsub.s f15, f3, f13, f7, rne # perform operation
fnmsub.s f15, f3, f13, f7, rtz # perform operation
fnmsub.s f15, f3, f13, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f15, f3, f13, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f15, f3, f13, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f15, f3, f13, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f15, f3, f13, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f15, f3, f13, f7 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0xff7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f25, 0(x2) # load 0x00000000 from memory into f25
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f13, 0(x2) # load 0xff7fffff from memory into f13
la x2, scratch
li x3, 0x70c3fb74 # load x3 with value 0x70c3fb74
sw x3, 0(x2) # store 0x70c3fb74 in memory
flw f15, 0(x2) # load 0x70c3fb74 from memory into f15
fnmsub.s f28, f25, f13, f15, dyn # perform operation
fnmsub.s f28, f25, f13, f15, rdn # perform operation
fnmsub.s f28, f25, f13, f15, rmm # perform operation
fnmsub.s f28, f25, f13, f15, rne # perform operation
fnmsub.s f28, f25, f13, f15, rtz # perform operation
fnmsub.s f28, f25, f13, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f28, f25, f13, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f28, f25, f13, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f28, f25, f13, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f28, f25, f13, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f28, f25, f13, f15 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f31, 0(x2) # load 0x00000000 from memory into f31
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f7, 0(x2) # load 0x007fffff from memory into f7
la x2, scratch
li x3, 0x2319c24b # load x3 with value 0x2319c24b
sw x3, 0(x2) # store 0x2319c24b in memory
flw f25, 0(x2) # load 0x2319c24b from memory into f25
fnmsub.s f22, f31, f7, f25, dyn # perform operation
fnmsub.s f22, f31, f7, f25, rdn # perform operation
fnmsub.s f22, f31, f7, f25, rmm # perform operation
fnmsub.s f22, f31, f7, f25, rne # perform operation
fnmsub.s f22, f31, f7, f25, rtz # perform operation
fnmsub.s f22, f31, f7, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f22, f31, f7, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f22, f31, f7, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f22, f31, f7, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f22, f31, f7, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f22, f31, f7, f25 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x807fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f5, 0(x2) # load 0x00000000 from memory into f5
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f6, 0(x2) # load 0x807fffff from memory into f6
la x2, scratch
li x3, 0x825539a6 # load x3 with value 0x825539a6
sw x3, 0(x2) # store 0x825539a6 in memory
flw f10, 0(x2) # load 0x825539a6 from memory into f10
fnmsub.s f28, f5, f6, f10, dyn # perform operation
fnmsub.s f28, f5, f6, f10, rdn # perform operation
fnmsub.s f28, f5, f6, f10, rmm # perform operation
fnmsub.s f28, f5, f6, f10, rne # perform operation
fnmsub.s f28, f5, f6, f10, rtz # perform operation
fnmsub.s f28, f5, f6, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f28, f5, f6, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f28, f5, f6, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f28, f5, f6, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f28, f5, f6, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f28, f5, f6, f10 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f21, 0(x2) # load 0x00000000 from memory into f21
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f7, 0(x2) # load 0x00400000 from memory into f7
la x2, scratch
li x3, 0xd4180ab2 # load x3 with value 0xd4180ab2
sw x3, 0(x2) # store 0xd4180ab2 in memory
flw f16, 0(x2) # load 0xd4180ab2 from memory into f16
fnmsub.s f22, f21, f7, f16, dyn # perform operation
fnmsub.s f22, f21, f7, f16, rdn # perform operation
fnmsub.s f22, f21, f7, f16, rmm # perform operation
fnmsub.s f22, f21, f7, f16, rne # perform operation
fnmsub.s f22, f21, f7, f16, rtz # perform operation
fnmsub.s f22, f21, f7, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f22, f21, f7, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f22, f21, f7, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f22, f21, f7, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f22, f21, f7, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f22, f21, f7, f16 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x80400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f7, 0(x2) # load 0x00000000 from memory into f7
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f19, 0(x2) # load 0x80400000 from memory into f19
la x2, scratch
li x3, 0xc0c07386 # load x3 with value 0xc0c07386
sw x3, 0(x2) # store 0xc0c07386 in memory
flw f16, 0(x2) # load 0xc0c07386 from memory into f16
fnmsub.s f30, f7, f19, f16, dyn # perform operation
fnmsub.s f30, f7, f19, f16, rdn # perform operation
fnmsub.s f30, f7, f19, f16, rmm # perform operation
fnmsub.s f30, f7, f19, f16, rne # perform operation
fnmsub.s f30, f7, f19, f16, rtz # perform operation
fnmsub.s f30, f7, f19, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f30, f7, f19, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f30, f7, f19, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f30, f7, f19, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f30, f7, f19, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f30, f7, f19, f16 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x1)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f19, 0(x2) # load 0x00000000 from memory into f19
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f11, 0(x2) # load 0x00000001 from memory into f11
la x2, scratch
li x3, 0xe2644e4a # load x3 with value 0xe2644e4a
sw x3, 0(x2) # store 0xe2644e4a in memory
flw f23, 0(x2) # load 0xe2644e4a from memory into f23
fnmsub.s f31, f19, f11, f23, dyn # perform operation
fnmsub.s f31, f19, f11, f23, rdn # perform operation
fnmsub.s f31, f19, f11, f23, rmm # perform operation
fnmsub.s f31, f19, f11, f23, rne # perform operation
fnmsub.s f31, f19, f11, f23, rtz # perform operation
fnmsub.s f31, f19, f11, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f31, f19, f11, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f31, f19, f11, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f31, f19, f11, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f31, f19, f11, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f31, f19, f11, f23 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x80000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f9, 0(x2) # load 0x00000000 from memory into f9
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f16, 0(x2) # load 0x80000001 from memory into f16
la x2, scratch
li x3, 0x01aa1a1e # load x3 with value 0x01aa1a1e
sw x3, 0(x2) # store 0x01aa1a1e in memory
flw f25, 0(x2) # load 0x01aa1a1e from memory into f25
fnmsub.s f28, f9, f16, f25, dyn # perform operation
fnmsub.s f28, f9, f16, f25, rdn # perform operation
fnmsub.s f28, f9, f16, f25, rmm # perform operation
fnmsub.s f28, f9, f16, f25, rne # perform operation
fnmsub.s f28, f9, f16, f25, rtz # perform operation
fnmsub.s f28, f9, f16, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f28, f9, f16, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f28, f9, f16, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f28, f9, f16, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f28, f9, f16, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f28, f9, f16, f25 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x7f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f12, 0(x2) # load 0x00000000 from memory into f12
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f13, 0(x2) # load 0x7f800000 from memory into f13
la x2, scratch
li x3, 0xf179b24f # load x3 with value 0xf179b24f
sw x3, 0(x2) # store 0xf179b24f in memory
flw f15, 0(x2) # load 0xf179b24f from memory into f15
fnmsub.s f14, f12, f13, f15, dyn # perform operation
fnmsub.s f14, f12, f13, f15, rdn # perform operation
fnmsub.s f14, f12, f13, f15, rmm # perform operation
fnmsub.s f14, f12, f13, f15, rne # perform operation
fnmsub.s f14, f12, f13, f15, rtz # perform operation
fnmsub.s f14, f12, f13, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f14, f12, f13, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f14, f12, f13, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f14, f12, f13, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f14, f12, f13, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f14, f12, f13, f15 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0xff800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f27, 0(x2) # load 0x00000000 from memory into f27
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f19, 0(x2) # load 0xff800000 from memory into f19
la x2, scratch
li x3, 0x6ff2c643 # load x3 with value 0x6ff2c643
sw x3, 0(x2) # store 0x6ff2c643 in memory
flw f9, 0(x2) # load 0x6ff2c643 from memory into f9
fnmsub.s f8, f27, f19, f9, dyn # perform operation
fnmsub.s f8, f27, f19, f9, rdn # perform operation
fnmsub.s f8, f27, f19, f9, rmm # perform operation
fnmsub.s f8, f27, f19, f9, rne # perform operation
fnmsub.s f8, f27, f19, f9, rtz # perform operation
fnmsub.s f8, f27, f19, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f8, f27, f19, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f8, f27, f19, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f8, f27, f19, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f8, f27, f19, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f8, f27, f19, f9 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x7fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f16, 0(x2) # load 0x00000000 from memory into f16
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f24, 0(x2) # load 0x7fc00000 from memory into f24
la x2, scratch
li x3, 0x9fca7151 # load x3 with value 0x9fca7151
sw x3, 0(x2) # store 0x9fca7151 in memory
flw f11, 0(x2) # load 0x9fca7151 from memory into f11
fnmsub.s f17, f16, f24, f11, dyn # perform operation
fnmsub.s f17, f16, f24, f11, rdn # perform operation
fnmsub.s f17, f16, f24, f11, rmm # perform operation
fnmsub.s f17, f16, f24, f11, rne # perform operation
fnmsub.s f17, f16, f24, f11, rtz # perform operation
fnmsub.s f17, f16, f24, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f17, f16, f24, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f17, f16, f24, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f17, f16, f24, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f17, f16, f24, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f17, f16, f24, f11 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x7fffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f27, 0(x2) # load 0x00000000 from memory into f27
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f11, 0(x2) # load 0x7fffffff from memory into f11
la x2, scratch
li x3, 0x6b2c2908 # load x3 with value 0x6b2c2908
sw x3, 0(x2) # store 0x6b2c2908 in memory
flw f18, 0(x2) # load 0x6b2c2908 from memory into f18
fnmsub.s f26, f27, f11, f18, dyn # perform operation
fnmsub.s f26, f27, f11, f18, rdn # perform operation
fnmsub.s f26, f27, f11, f18, rmm # perform operation
fnmsub.s f26, f27, f11, f18, rne # perform operation
fnmsub.s f26, f27, f11, f18, rtz # perform operation
fnmsub.s f26, f27, f11, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f26, f27, f11, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f26, f27, f11, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f26, f27, f11, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f26, f27, f11, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f26, f27, f11, f18 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0xffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f7, 0(x2) # load 0x00000000 from memory into f7
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f11, 0(x2) # load 0xffffffff from memory into f11
la x2, scratch
li x3, 0xb74d22b5 # load x3 with value 0xb74d22b5
sw x3, 0(x2) # store 0xb74d22b5 in memory
flw f23, 0(x2) # load 0xb74d22b5 from memory into f23
fnmsub.s f15, f7, f11, f23, dyn # perform operation
fnmsub.s f15, f7, f11, f23, rdn # perform operation
fnmsub.s f15, f7, f11, f23, rmm # perform operation
fnmsub.s f15, f7, f11, f23, rne # perform operation
fnmsub.s f15, f7, f11, f23, rtz # perform operation
fnmsub.s f15, f7, f11, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f15, f7, f11, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f15, f7, f11, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f15, f7, f11, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f15, f7, f11, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f15, f7, f11, f23 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x7f800001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f21, 0(x2) # load 0x00000000 from memory into f21
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f24, 0(x2) # load 0x7f800001 from memory into f24
la x2, scratch
li x3, 0xe6232140 # load x3 with value 0xe6232140
sw x3, 0(x2) # store 0xe6232140 in memory
flw f17, 0(x2) # load 0xe6232140 from memory into f17
fnmsub.s f22, f21, f24, f17, dyn # perform operation
fnmsub.s f22, f21, f24, f17, rdn # perform operation
fnmsub.s f22, f21, f24, f17, rmm # perform operation
fnmsub.s f22, f21, f24, f17, rne # perform operation
fnmsub.s f22, f21, f24, f17, rtz # perform operation
fnmsub.s f22, f21, f24, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f22, f21, f24, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f22, f21, f24, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f22, f21, f24, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f22, f21, f24, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f22, f21, f24, f17 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x7fbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f28, 0(x2) # load 0x00000000 from memory into f28
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f12, 0(x2) # load 0x7fbfffff from memory into f12
la x2, scratch
li x3, 0xb3db93ed # load x3 with value 0xb3db93ed
sw x3, 0(x2) # store 0xb3db93ed in memory
flw f3, 0(x2) # load 0xb3db93ed from memory into f3
fnmsub.s f21, f28, f12, f3, dyn # perform operation
fnmsub.s f21, f28, f12, f3, rdn # perform operation
fnmsub.s f21, f28, f12, f3, rmm # perform operation
fnmsub.s f21, f28, f12, f3, rne # perform operation
fnmsub.s f21, f28, f12, f3, rtz # perform operation
fnmsub.s f21, f28, f12, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f21, f28, f12, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f21, f28, f12, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f21, f28, f12, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f21, f28, f12, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f21, f28, f12, f3 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0xffbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f18, 0(x2) # load 0x00000000 from memory into f18
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f23, 0(x2) # load 0xffbfffff from memory into f23
la x2, scratch
li x3, 0x5c47f308 # load x3 with value 0x5c47f308
sw x3, 0(x2) # store 0x5c47f308 in memory
flw f7, 0(x2) # load 0x5c47f308 from memory into f7
fnmsub.s f26, f18, f23, f7, dyn # perform operation
fnmsub.s f26, f18, f23, f7, rdn # perform operation
fnmsub.s f26, f18, f23, f7, rmm # perform operation
fnmsub.s f26, f18, f23, f7, rne # perform operation
fnmsub.s f26, f18, f23, f7, rtz # perform operation
fnmsub.s f26, f18, f23, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f26, f18, f23, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f26, f18, f23, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f26, f18, f23, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f26, f18, f23, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f26, f18, f23, f7 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x7ef8654f)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f20, 0(x2) # load 0x00000000 from memory into f20
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f17, 0(x2) # load 0x7ef8654f from memory into f17
la x2, scratch
li x3, 0xfc7665bd # load x3 with value 0xfc7665bd
sw x3, 0(x2) # store 0xfc7665bd in memory
flw f5, 0(x2) # load 0xfc7665bd from memory into f5
fnmsub.s f13, f20, f17, f5, dyn # perform operation
fnmsub.s f13, f20, f17, f5, rdn # perform operation
fnmsub.s f13, f20, f17, f5, rmm # perform operation
fnmsub.s f13, f20, f17, f5, rne # perform operation
fnmsub.s f13, f20, f17, f5, rtz # perform operation
fnmsub.s f13, f20, f17, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f13, f20, f17, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f13, f20, f17, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f13, f20, f17, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f13, f20, f17, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f13, f20, f17, f5 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x813d9ab0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f3, 0(x2) # load 0x00000000 from memory into f3
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f22, 0(x2) # load 0x813d9ab0 from memory into f22
la x2, scratch
li x3, 0xfca76da5 # load x3 with value 0xfca76da5
sw x3, 0(x2) # store 0xfca76da5 in memory
flw f24, 0(x2) # load 0xfca76da5 from memory into f24
fnmsub.s f5, f3, f22, f24, dyn # perform operation
fnmsub.s f5, f3, f22, f24, rdn # perform operation
fnmsub.s f5, f3, f22, f24, rmm # perform operation
fnmsub.s f5, f3, f22, f24, rne # perform operation
fnmsub.s f5, f3, f22, f24, rtz # perform operation
fnmsub.s f5, f3, f22, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f5, f3, f22, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f5, f3, f22, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f5, f3, f22, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f5, f3, f22, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f5, f3, f22, f24 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0x0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f2, 0(x2) # load 0x80000000 from memory into f2
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f6, 0(x2) # load 0x00000000 from memory into f6
la x2, scratch
li x3, 0xc4b93f91 # load x3 with value 0xc4b93f91
sw x3, 0(x2) # store 0xc4b93f91 in memory
flw f25, 0(x2) # load 0xc4b93f91 from memory into f25
fnmsub.s f8, f2, f6, f25, dyn # perform operation
fnmsub.s f8, f2, f6, f25, rdn # perform operation
fnmsub.s f8, f2, f6, f25, rmm # perform operation
fnmsub.s f8, f2, f6, f25, rne # perform operation
fnmsub.s f8, f2, f6, f25, rtz # perform operation
fnmsub.s f8, f2, f6, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f8, f2, f6, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f8, f2, f6, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f8, f2, f6, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f8, f2, f6, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f8, f2, f6, f25 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0x80000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f5, 0(x2) # load 0x80000000 from memory into f5
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f15, 0(x2) # load 0x80000000 from memory into f15
la x2, scratch
li x3, 0x0e50a789 # load x3 with value 0x0e50a789
sw x3, 0(x2) # store 0x0e50a789 in memory
flw f29, 0(x2) # load 0x0e50a789 from memory into f29
fnmsub.s f14, f5, f15, f29, dyn # perform operation
fnmsub.s f14, f5, f15, f29, rdn # perform operation
fnmsub.s f14, f5, f15, f29, rmm # perform operation
fnmsub.s f14, f5, f15, f29, rne # perform operation
fnmsub.s f14, f5, f15, f29, rtz # perform operation
fnmsub.s f14, f5, f15, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f14, f5, f15, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f14, f5, f15, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f14, f5, f15, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f14, f5, f15, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f14, f5, f15, f29 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0x3f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f31, 0(x2) # load 0x80000000 from memory into f31
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f30, 0(x2) # load 0x3f800000 from memory into f30
la x2, scratch
li x3, 0xdf6685d2 # load x3 with value 0xdf6685d2
sw x3, 0(x2) # store 0xdf6685d2 in memory
flw f3, 0(x2) # load 0xdf6685d2 from memory into f3
fnmsub.s f2, f31, f30, f3, dyn # perform operation
fnmsub.s f2, f31, f30, f3, rdn # perform operation
fnmsub.s f2, f31, f30, f3, rmm # perform operation
fnmsub.s f2, f31, f30, f3, rne # perform operation
fnmsub.s f2, f31, f30, f3, rtz # perform operation
fnmsub.s f2, f31, f30, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f2, f31, f30, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f2, f31, f30, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f2, f31, f30, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f2, f31, f30, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f2, f31, f30, f3 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0xbf800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f7, 0(x2) # load 0x80000000 from memory into f7
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f21, 0(x2) # load 0xbf800000 from memory into f21
la x2, scratch
li x3, 0x9ed17e03 # load x3 with value 0x9ed17e03
sw x3, 0(x2) # store 0x9ed17e03 in memory
flw f10, 0(x2) # load 0x9ed17e03 from memory into f10
fnmsub.s f18, f7, f21, f10, dyn # perform operation
fnmsub.s f18, f7, f21, f10, rdn # perform operation
fnmsub.s f18, f7, f21, f10, rmm # perform operation
fnmsub.s f18, f7, f21, f10, rne # perform operation
fnmsub.s f18, f7, f21, f10, rtz # perform operation
fnmsub.s f18, f7, f21, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f18, f7, f21, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f18, f7, f21, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f18, f7, f21, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f18, f7, f21, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f18, f7, f21, f10 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0x3fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f2, 0(x2) # load 0x80000000 from memory into f2
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f14, 0(x2) # load 0x3fc00000 from memory into f14
la x2, scratch
li x3, 0xfc9d0d41 # load x3 with value 0xfc9d0d41
sw x3, 0(x2) # store 0xfc9d0d41 in memory
flw f8, 0(x2) # load 0xfc9d0d41 from memory into f8
fnmsub.s f26, f2, f14, f8, dyn # perform operation
fnmsub.s f26, f2, f14, f8, rdn # perform operation
fnmsub.s f26, f2, f14, f8, rmm # perform operation
fnmsub.s f26, f2, f14, f8, rne # perform operation
fnmsub.s f26, f2, f14, f8, rtz # perform operation
fnmsub.s f26, f2, f14, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f26, f2, f14, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f26, f2, f14, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f26, f2, f14, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f26, f2, f14, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f26, f2, f14, f8 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0xbfc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f26, 0(x2) # load 0x80000000 from memory into f26
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f24, 0(x2) # load 0xbfc00000 from memory into f24
la x2, scratch
li x3, 0x9b601954 # load x3 with value 0x9b601954
sw x3, 0(x2) # store 0x9b601954 in memory
flw f13, 0(x2) # load 0x9b601954 from memory into f13
fnmsub.s f28, f26, f24, f13, dyn # perform operation
fnmsub.s f28, f26, f24, f13, rdn # perform operation
fnmsub.s f28, f26, f24, f13, rmm # perform operation
fnmsub.s f28, f26, f24, f13, rne # perform operation
fnmsub.s f28, f26, f24, f13, rtz # perform operation
fnmsub.s f28, f26, f24, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f28, f26, f24, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f28, f26, f24, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f28, f26, f24, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f28, f26, f24, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f28, f26, f24, f13 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0x40000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f16, 0(x2) # load 0x80000000 from memory into f16
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f12, 0(x2) # load 0x40000000 from memory into f12
la x2, scratch
li x3, 0x99093a0d # load x3 with value 0x99093a0d
sw x3, 0(x2) # store 0x99093a0d in memory
flw f21, 0(x2) # load 0x99093a0d from memory into f21
fnmsub.s f17, f16, f12, f21, dyn # perform operation
fnmsub.s f17, f16, f12, f21, rdn # perform operation
fnmsub.s f17, f16, f12, f21, rmm # perform operation
fnmsub.s f17, f16, f12, f21, rne # perform operation
fnmsub.s f17, f16, f12, f21, rtz # perform operation
fnmsub.s f17, f16, f12, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f17, f16, f12, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f17, f16, f12, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f17, f16, f12, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f17, f16, f12, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f17, f16, f12, f21 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0xc0000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f23, 0(x2) # load 0x80000000 from memory into f23
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f13, 0(x2) # load 0xc0000000 from memory into f13
la x2, scratch
li x3, 0x51fb2991 # load x3 with value 0x51fb2991
sw x3, 0(x2) # store 0x51fb2991 in memory
flw f20, 0(x2) # load 0x51fb2991 from memory into f20
fnmsub.s f18, f23, f13, f20, dyn # perform operation
fnmsub.s f18, f23, f13, f20, rdn # perform operation
fnmsub.s f18, f23, f13, f20, rmm # perform operation
fnmsub.s f18, f23, f13, f20, rne # perform operation
fnmsub.s f18, f23, f13, f20, rtz # perform operation
fnmsub.s f18, f23, f13, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f18, f23, f13, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f18, f23, f13, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f18, f23, f13, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f18, f23, f13, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f18, f23, f13, f20 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0x800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f11, 0(x2) # load 0x80000000 from memory into f11
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f19, 0(x2) # load 0x00800000 from memory into f19
la x2, scratch
li x3, 0x78d99430 # load x3 with value 0x78d99430
sw x3, 0(x2) # store 0x78d99430 in memory
flw f14, 0(x2) # load 0x78d99430 from memory into f14
fnmsub.s f15, f11, f19, f14, dyn # perform operation
fnmsub.s f15, f11, f19, f14, rdn # perform operation
fnmsub.s f15, f11, f19, f14, rmm # perform operation
fnmsub.s f15, f11, f19, f14, rne # perform operation
fnmsub.s f15, f11, f19, f14, rtz # perform operation
fnmsub.s f15, f11, f19, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f15, f11, f19, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f15, f11, f19, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f15, f11, f19, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f15, f11, f19, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f15, f11, f19, f14 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0x80800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f20, 0(x2) # load 0x80000000 from memory into f20
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f3, 0(x2) # load 0x80800000 from memory into f3
la x2, scratch
li x3, 0x01ad3646 # load x3 with value 0x01ad3646
sw x3, 0(x2) # store 0x01ad3646 in memory
flw f30, 0(x2) # load 0x01ad3646 from memory into f30
fnmsub.s f27, f20, f3, f30, dyn # perform operation
fnmsub.s f27, f20, f3, f30, rdn # perform operation
fnmsub.s f27, f20, f3, f30, rmm # perform operation
fnmsub.s f27, f20, f3, f30, rne # perform operation
fnmsub.s f27, f20, f3, f30, rtz # perform operation
fnmsub.s f27, f20, f3, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f27, f20, f3, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f27, f20, f3, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f27, f20, f3, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f27, f20, f3, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f27, f20, f3, f30 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0x7f7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f6, 0(x2) # load 0x80000000 from memory into f6
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f10, 0(x2) # load 0x7f7fffff from memory into f10
la x2, scratch
li x3, 0xacd439ee # load x3 with value 0xacd439ee
sw x3, 0(x2) # store 0xacd439ee in memory
flw f26, 0(x2) # load 0xacd439ee from memory into f26
fnmsub.s f12, f6, f10, f26, dyn # perform operation
fnmsub.s f12, f6, f10, f26, rdn # perform operation
fnmsub.s f12, f6, f10, f26, rmm # perform operation
fnmsub.s f12, f6, f10, f26, rne # perform operation
fnmsub.s f12, f6, f10, f26, rtz # perform operation
fnmsub.s f12, f6, f10, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f12, f6, f10, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f12, f6, f10, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f12, f6, f10, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f12, f6, f10, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f12, f6, f10, f26 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0xff7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f14, 0(x2) # load 0x80000000 from memory into f14
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f15, 0(x2) # load 0xff7fffff from memory into f15
la x2, scratch
li x3, 0x69b29e26 # load x3 with value 0x69b29e26
sw x3, 0(x2) # store 0x69b29e26 in memory
flw f2, 0(x2) # load 0x69b29e26 from memory into f2
fnmsub.s f25, f14, f15, f2, dyn # perform operation
fnmsub.s f25, f14, f15, f2, rdn # perform operation
fnmsub.s f25, f14, f15, f2, rmm # perform operation
fnmsub.s f25, f14, f15, f2, rne # perform operation
fnmsub.s f25, f14, f15, f2, rtz # perform operation
fnmsub.s f25, f14, f15, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f25, f14, f15, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f25, f14, f15, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f25, f14, f15, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f25, f14, f15, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f25, f14, f15, f2 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0x7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f11, 0(x2) # load 0x80000000 from memory into f11
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f29, 0(x2) # load 0x007fffff from memory into f29
la x2, scratch
li x3, 0x033c338a # load x3 with value 0x033c338a
sw x3, 0(x2) # store 0x033c338a in memory
flw f28, 0(x2) # load 0x033c338a from memory into f28
fnmsub.s f30, f11, f29, f28, dyn # perform operation
fnmsub.s f30, f11, f29, f28, rdn # perform operation
fnmsub.s f30, f11, f29, f28, rmm # perform operation
fnmsub.s f30, f11, f29, f28, rne # perform operation
fnmsub.s f30, f11, f29, f28, rtz # perform operation
fnmsub.s f30, f11, f29, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f30, f11, f29, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f30, f11, f29, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f30, f11, f29, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f30, f11, f29, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f30, f11, f29, f28 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0x807fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f8, 0(x2) # load 0x80000000 from memory into f8
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f20, 0(x2) # load 0x807fffff from memory into f20
la x2, scratch
li x3, 0x12cd94bb # load x3 with value 0x12cd94bb
sw x3, 0(x2) # store 0x12cd94bb in memory
flw f14, 0(x2) # load 0x12cd94bb from memory into f14
fnmsub.s f19, f8, f20, f14, dyn # perform operation
fnmsub.s f19, f8, f20, f14, rdn # perform operation
fnmsub.s f19, f8, f20, f14, rmm # perform operation
fnmsub.s f19, f8, f20, f14, rne # perform operation
fnmsub.s f19, f8, f20, f14, rtz # perform operation
fnmsub.s f19, f8, f20, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f19, f8, f20, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f19, f8, f20, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f19, f8, f20, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f19, f8, f20, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f19, f8, f20, f14 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0x400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f6, 0(x2) # load 0x80000000 from memory into f6
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f22, 0(x2) # load 0x00400000 from memory into f22
la x2, scratch
li x3, 0x9864c324 # load x3 with value 0x9864c324
sw x3, 0(x2) # store 0x9864c324 in memory
flw f7, 0(x2) # load 0x9864c324 from memory into f7
fnmsub.s f25, f6, f22, f7, dyn # perform operation
fnmsub.s f25, f6, f22, f7, rdn # perform operation
fnmsub.s f25, f6, f22, f7, rmm # perform operation
fnmsub.s f25, f6, f22, f7, rne # perform operation
fnmsub.s f25, f6, f22, f7, rtz # perform operation
fnmsub.s f25, f6, f22, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f25, f6, f22, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f25, f6, f22, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f25, f6, f22, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f25, f6, f22, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f25, f6, f22, f7 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0x80400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f18, 0(x2) # load 0x80000000 from memory into f18
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f24, 0(x2) # load 0x80400000 from memory into f24
la x2, scratch
li x3, 0xe42f5f11 # load x3 with value 0xe42f5f11
sw x3, 0(x2) # store 0xe42f5f11 in memory
flw f5, 0(x2) # load 0xe42f5f11 from memory into f5
fnmsub.s f14, f18, f24, f5, dyn # perform operation
fnmsub.s f14, f18, f24, f5, rdn # perform operation
fnmsub.s f14, f18, f24, f5, rmm # perform operation
fnmsub.s f14, f18, f24, f5, rne # perform operation
fnmsub.s f14, f18, f24, f5, rtz # perform operation
fnmsub.s f14, f18, f24, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f14, f18, f24, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f14, f18, f24, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f14, f18, f24, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f14, f18, f24, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f14, f18, f24, f5 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0x1)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f23, 0(x2) # load 0x80000000 from memory into f23
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f15, 0(x2) # load 0x00000001 from memory into f15
la x2, scratch
li x3, 0xb38bbed8 # load x3 with value 0xb38bbed8
sw x3, 0(x2) # store 0xb38bbed8 in memory
flw f27, 0(x2) # load 0xb38bbed8 from memory into f27
fnmsub.s f11, f23, f15, f27, dyn # perform operation
fnmsub.s f11, f23, f15, f27, rdn # perform operation
fnmsub.s f11, f23, f15, f27, rmm # perform operation
fnmsub.s f11, f23, f15, f27, rne # perform operation
fnmsub.s f11, f23, f15, f27, rtz # perform operation
fnmsub.s f11, f23, f15, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f11, f23, f15, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f11, f23, f15, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f11, f23, f15, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f11, f23, f15, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f11, f23, f15, f27 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0x80000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f23, 0(x2) # load 0x80000000 from memory into f23
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f9, 0(x2) # load 0x80000001 from memory into f9
la x2, scratch
li x3, 0x96e7a2f1 # load x3 with value 0x96e7a2f1
sw x3, 0(x2) # store 0x96e7a2f1 in memory
flw f26, 0(x2) # load 0x96e7a2f1 from memory into f26
fnmsub.s f21, f23, f9, f26, dyn # perform operation
fnmsub.s f21, f23, f9, f26, rdn # perform operation
fnmsub.s f21, f23, f9, f26, rmm # perform operation
fnmsub.s f21, f23, f9, f26, rne # perform operation
fnmsub.s f21, f23, f9, f26, rtz # perform operation
fnmsub.s f21, f23, f9, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f21, f23, f9, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f21, f23, f9, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f21, f23, f9, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f21, f23, f9, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f21, f23, f9, f26 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0x7f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f29, 0(x2) # load 0x80000000 from memory into f29
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f10, 0(x2) # load 0x7f800000 from memory into f10
la x2, scratch
li x3, 0xcfdfd4d7 # load x3 with value 0xcfdfd4d7
sw x3, 0(x2) # store 0xcfdfd4d7 in memory
flw f31, 0(x2) # load 0xcfdfd4d7 from memory into f31
fnmsub.s f17, f29, f10, f31, dyn # perform operation
fnmsub.s f17, f29, f10, f31, rdn # perform operation
fnmsub.s f17, f29, f10, f31, rmm # perform operation
fnmsub.s f17, f29, f10, f31, rne # perform operation
fnmsub.s f17, f29, f10, f31, rtz # perform operation
fnmsub.s f17, f29, f10, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f17, f29, f10, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f17, f29, f10, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f17, f29, f10, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f17, f29, f10, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f17, f29, f10, f31 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0xff800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f26, 0(x2) # load 0x80000000 from memory into f26
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f12, 0(x2) # load 0xff800000 from memory into f12
la x2, scratch
li x3, 0xa75d7b84 # load x3 with value 0xa75d7b84
sw x3, 0(x2) # store 0xa75d7b84 in memory
flw f7, 0(x2) # load 0xa75d7b84 from memory into f7
fnmsub.s f19, f26, f12, f7, dyn # perform operation
fnmsub.s f19, f26, f12, f7, rdn # perform operation
fnmsub.s f19, f26, f12, f7, rmm # perform operation
fnmsub.s f19, f26, f12, f7, rne # perform operation
fnmsub.s f19, f26, f12, f7, rtz # perform operation
fnmsub.s f19, f26, f12, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f19, f26, f12, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f19, f26, f12, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f19, f26, f12, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f19, f26, f12, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f19, f26, f12, f7 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0x7fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f15, 0(x2) # load 0x80000000 from memory into f15
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f14, 0(x2) # load 0x7fc00000 from memory into f14
la x2, scratch
li x3, 0xee4f6b45 # load x3 with value 0xee4f6b45
sw x3, 0(x2) # store 0xee4f6b45 in memory
flw f10, 0(x2) # load 0xee4f6b45 from memory into f10
fnmsub.s f26, f15, f14, f10, dyn # perform operation
fnmsub.s f26, f15, f14, f10, rdn # perform operation
fnmsub.s f26, f15, f14, f10, rmm # perform operation
fnmsub.s f26, f15, f14, f10, rne # perform operation
fnmsub.s f26, f15, f14, f10, rtz # perform operation
fnmsub.s f26, f15, f14, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f26, f15, f14, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f26, f15, f14, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f26, f15, f14, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f26, f15, f14, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f26, f15, f14, f10 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0x7fffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f7, 0(x2) # load 0x80000000 from memory into f7
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f15, 0(x2) # load 0x7fffffff from memory into f15
la x2, scratch
li x3, 0x1b0f8a8c # load x3 with value 0x1b0f8a8c
sw x3, 0(x2) # store 0x1b0f8a8c in memory
flw f31, 0(x2) # load 0x1b0f8a8c from memory into f31
fnmsub.s f24, f7, f15, f31, dyn # perform operation
fnmsub.s f24, f7, f15, f31, rdn # perform operation
fnmsub.s f24, f7, f15, f31, rmm # perform operation
fnmsub.s f24, f7, f15, f31, rne # perform operation
fnmsub.s f24, f7, f15, f31, rtz # perform operation
fnmsub.s f24, f7, f15, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f24, f7, f15, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f24, f7, f15, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f24, f7, f15, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f24, f7, f15, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f24, f7, f15, f31 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0xffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f5, 0(x2) # load 0x80000000 from memory into f5
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f9, 0(x2) # load 0xffffffff from memory into f9
la x2, scratch
li x3, 0x26eedee6 # load x3 with value 0x26eedee6
sw x3, 0(x2) # store 0x26eedee6 in memory
flw f2, 0(x2) # load 0x26eedee6 from memory into f2
fnmsub.s f19, f5, f9, f2, dyn # perform operation
fnmsub.s f19, f5, f9, f2, rdn # perform operation
fnmsub.s f19, f5, f9, f2, rmm # perform operation
fnmsub.s f19, f5, f9, f2, rne # perform operation
fnmsub.s f19, f5, f9, f2, rtz # perform operation
fnmsub.s f19, f5, f9, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f19, f5, f9, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f19, f5, f9, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f19, f5, f9, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f19, f5, f9, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f19, f5, f9, f2 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0x7f800001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f17, 0(x2) # load 0x80000000 from memory into f17
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f7, 0(x2) # load 0x7f800001 from memory into f7
la x2, scratch
li x3, 0x0fbca099 # load x3 with value 0x0fbca099
sw x3, 0(x2) # store 0x0fbca099 in memory
flw f8, 0(x2) # load 0x0fbca099 from memory into f8
fnmsub.s f2, f17, f7, f8, dyn # perform operation
fnmsub.s f2, f17, f7, f8, rdn # perform operation
fnmsub.s f2, f17, f7, f8, rmm # perform operation
fnmsub.s f2, f17, f7, f8, rne # perform operation
fnmsub.s f2, f17, f7, f8, rtz # perform operation
fnmsub.s f2, f17, f7, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f2, f17, f7, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f2, f17, f7, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f2, f17, f7, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f2, f17, f7, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f2, f17, f7, f8 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0x7fbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f16, 0(x2) # load 0x80000000 from memory into f16
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f12, 0(x2) # load 0x7fbfffff from memory into f12
la x2, scratch
li x3, 0x9ddca2a8 # load x3 with value 0x9ddca2a8
sw x3, 0(x2) # store 0x9ddca2a8 in memory
flw f18, 0(x2) # load 0x9ddca2a8 from memory into f18
fnmsub.s f11, f16, f12, f18, dyn # perform operation
fnmsub.s f11, f16, f12, f18, rdn # perform operation
fnmsub.s f11, f16, f12, f18, rmm # perform operation
fnmsub.s f11, f16, f12, f18, rne # perform operation
fnmsub.s f11, f16, f12, f18, rtz # perform operation
fnmsub.s f11, f16, f12, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f11, f16, f12, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f11, f16, f12, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f11, f16, f12, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f11, f16, f12, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f11, f16, f12, f18 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0xffbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f18, 0(x2) # load 0x80000000 from memory into f18
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f8, 0(x2) # load 0xffbfffff from memory into f8
la x2, scratch
li x3, 0x2338d715 # load x3 with value 0x2338d715
sw x3, 0(x2) # store 0x2338d715 in memory
flw f11, 0(x2) # load 0x2338d715 from memory into f11
fnmsub.s f1, f18, f8, f11, dyn # perform operation
fnmsub.s f1, f18, f8, f11, rdn # perform operation
fnmsub.s f1, f18, f8, f11, rmm # perform operation
fnmsub.s f1, f18, f8, f11, rne # perform operation
fnmsub.s f1, f18, f8, f11, rtz # perform operation
fnmsub.s f1, f18, f8, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f1, f18, f8, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f1, f18, f8, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f1, f18, f8, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f1, f18, f8, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f1, f18, f8, f11 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0x7ef8654f)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f25, 0(x2) # load 0x80000000 from memory into f25
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f24, 0(x2) # load 0x7ef8654f from memory into f24
la x2, scratch
li x3, 0x9582883f # load x3 with value 0x9582883f
sw x3, 0(x2) # store 0x9582883f in memory
flw f21, 0(x2) # load 0x9582883f from memory into f21
fnmsub.s f19, f25, f24, f21, dyn # perform operation
fnmsub.s f19, f25, f24, f21, rdn # perform operation
fnmsub.s f19, f25, f24, f21, rmm # perform operation
fnmsub.s f19, f25, f24, f21, rne # perform operation
fnmsub.s f19, f25, f24, f21, rtz # perform operation
fnmsub.s f19, f25, f24, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f19, f25, f24, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f19, f25, f24, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f19, f25, f24, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f19, f25, f24, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f19, f25, f24, f21 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0x813d9ab0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f31, 0(x2) # load 0x80000000 from memory into f31
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f9, 0(x2) # load 0x813d9ab0 from memory into f9
la x2, scratch
li x3, 0x7d8a46b5 # load x3 with value 0x7d8a46b5
sw x3, 0(x2) # store 0x7d8a46b5 in memory
flw f25, 0(x2) # load 0x7d8a46b5 from memory into f25
fnmsub.s f12, f31, f9, f25, dyn # perform operation
fnmsub.s f12, f31, f9, f25, rdn # perform operation
fnmsub.s f12, f31, f9, f25, rmm # perform operation
fnmsub.s f12, f31, f9, f25, rne # perform operation
fnmsub.s f12, f31, f9, f25, rtz # perform operation
fnmsub.s f12, f31, f9, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f12, f31, f9, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f12, f31, f9, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f12, f31, f9, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f12, f31, f9, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f12, f31, f9, f25 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0x0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f7, 0(x2) # load 0x3f800000 from memory into f7
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f26, 0(x2) # load 0x00000000 from memory into f26
la x2, scratch
li x3, 0xaf65a90b # load x3 with value 0xaf65a90b
sw x3, 0(x2) # store 0xaf65a90b in memory
flw f31, 0(x2) # load 0xaf65a90b from memory into f31
fnmsub.s f22, f7, f26, f31, dyn # perform operation
fnmsub.s f22, f7, f26, f31, rdn # perform operation
fnmsub.s f22, f7, f26, f31, rmm # perform operation
fnmsub.s f22, f7, f26, f31, rne # perform operation
fnmsub.s f22, f7, f26, f31, rtz # perform operation
fnmsub.s f22, f7, f26, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f22, f7, f26, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f22, f7, f26, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f22, f7, f26, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f22, f7, f26, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f22, f7, f26, f31 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0x80000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f29, 0(x2) # load 0x3f800000 from memory into f29
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f2, 0(x2) # load 0x80000000 from memory into f2
la x2, scratch
li x3, 0xcef0e40f # load x3 with value 0xcef0e40f
sw x3, 0(x2) # store 0xcef0e40f in memory
flw f28, 0(x2) # load 0xcef0e40f from memory into f28
fnmsub.s f23, f29, f2, f28, dyn # perform operation
fnmsub.s f23, f29, f2, f28, rdn # perform operation
fnmsub.s f23, f29, f2, f28, rmm # perform operation
fnmsub.s f23, f29, f2, f28, rne # perform operation
fnmsub.s f23, f29, f2, f28, rtz # perform operation
fnmsub.s f23, f29, f2, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f23, f29, f2, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f23, f29, f2, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f23, f29, f2, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f23, f29, f2, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f23, f29, f2, f28 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0x3f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f6, 0(x2) # load 0x3f800000 from memory into f6
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f2, 0(x2) # load 0x3f800000 from memory into f2
la x2, scratch
li x3, 0x21f01231 # load x3 with value 0x21f01231
sw x3, 0(x2) # store 0x21f01231 in memory
flw f19, 0(x2) # load 0x21f01231 from memory into f19
fnmsub.s f29, f6, f2, f19, dyn # perform operation
fnmsub.s f29, f6, f2, f19, rdn # perform operation
fnmsub.s f29, f6, f2, f19, rmm # perform operation
fnmsub.s f29, f6, f2, f19, rne # perform operation
fnmsub.s f29, f6, f2, f19, rtz # perform operation
fnmsub.s f29, f6, f2, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f29, f6, f2, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f29, f6, f2, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f29, f6, f2, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f29, f6, f2, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f29, f6, f2, f19 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0xbf800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f5, 0(x2) # load 0x3f800000 from memory into f5
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f25, 0(x2) # load 0xbf800000 from memory into f25
la x2, scratch
li x3, 0x1f401e84 # load x3 with value 0x1f401e84
sw x3, 0(x2) # store 0x1f401e84 in memory
flw f18, 0(x2) # load 0x1f401e84 from memory into f18
fnmsub.s f31, f5, f25, f18, dyn # perform operation
fnmsub.s f31, f5, f25, f18, rdn # perform operation
fnmsub.s f31, f5, f25, f18, rmm # perform operation
fnmsub.s f31, f5, f25, f18, rne # perform operation
fnmsub.s f31, f5, f25, f18, rtz # perform operation
fnmsub.s f31, f5, f25, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f31, f5, f25, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f31, f5, f25, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f31, f5, f25, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f31, f5, f25, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f31, f5, f25, f18 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0x3fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f27, 0(x2) # load 0x3f800000 from memory into f27
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f22, 0(x2) # load 0x3fc00000 from memory into f22
la x2, scratch
li x3, 0xec7e5e3f # load x3 with value 0xec7e5e3f
sw x3, 0(x2) # store 0xec7e5e3f in memory
flw f13, 0(x2) # load 0xec7e5e3f from memory into f13
fnmsub.s f19, f27, f22, f13, dyn # perform operation
fnmsub.s f19, f27, f22, f13, rdn # perform operation
fnmsub.s f19, f27, f22, f13, rmm # perform operation
fnmsub.s f19, f27, f22, f13, rne # perform operation
fnmsub.s f19, f27, f22, f13, rtz # perform operation
fnmsub.s f19, f27, f22, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f19, f27, f22, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f19, f27, f22, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f19, f27, f22, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f19, f27, f22, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f19, f27, f22, f13 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0xbfc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f24, 0(x2) # load 0x3f800000 from memory into f24
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f3, 0(x2) # load 0xbfc00000 from memory into f3
la x2, scratch
li x3, 0xa3e55b62 # load x3 with value 0xa3e55b62
sw x3, 0(x2) # store 0xa3e55b62 in memory
flw f29, 0(x2) # load 0xa3e55b62 from memory into f29
fnmsub.s f2, f24, f3, f29, dyn # perform operation
fnmsub.s f2, f24, f3, f29, rdn # perform operation
fnmsub.s f2, f24, f3, f29, rmm # perform operation
fnmsub.s f2, f24, f3, f29, rne # perform operation
fnmsub.s f2, f24, f3, f29, rtz # perform operation
fnmsub.s f2, f24, f3, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f2, f24, f3, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f2, f24, f3, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f2, f24, f3, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f2, f24, f3, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f2, f24, f3, f29 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0x40000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f5, 0(x2) # load 0x3f800000 from memory into f5
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f23, 0(x2) # load 0x40000000 from memory into f23
la x2, scratch
li x3, 0x97ae7e10 # load x3 with value 0x97ae7e10
sw x3, 0(x2) # store 0x97ae7e10 in memory
flw f12, 0(x2) # load 0x97ae7e10 from memory into f12
fnmsub.s f2, f5, f23, f12, dyn # perform operation
fnmsub.s f2, f5, f23, f12, rdn # perform operation
fnmsub.s f2, f5, f23, f12, rmm # perform operation
fnmsub.s f2, f5, f23, f12, rne # perform operation
fnmsub.s f2, f5, f23, f12, rtz # perform operation
fnmsub.s f2, f5, f23, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f2, f5, f23, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f2, f5, f23, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f2, f5, f23, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f2, f5, f23, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f2, f5, f23, f12 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0xc0000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f5, 0(x2) # load 0x3f800000 from memory into f5
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f10, 0(x2) # load 0xc0000000 from memory into f10
la x2, scratch
li x3, 0x8b76f171 # load x3 with value 0x8b76f171
sw x3, 0(x2) # store 0x8b76f171 in memory
flw f12, 0(x2) # load 0x8b76f171 from memory into f12
fnmsub.s f17, f5, f10, f12, dyn # perform operation
fnmsub.s f17, f5, f10, f12, rdn # perform operation
fnmsub.s f17, f5, f10, f12, rmm # perform operation
fnmsub.s f17, f5, f10, f12, rne # perform operation
fnmsub.s f17, f5, f10, f12, rtz # perform operation
fnmsub.s f17, f5, f10, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f17, f5, f10, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f17, f5, f10, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f17, f5, f10, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f17, f5, f10, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f17, f5, f10, f12 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0x800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f30, 0(x2) # load 0x3f800000 from memory into f30
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f31, 0(x2) # load 0x00800000 from memory into f31
la x2, scratch
li x3, 0xb1db3e22 # load x3 with value 0xb1db3e22
sw x3, 0(x2) # store 0xb1db3e22 in memory
flw f27, 0(x2) # load 0xb1db3e22 from memory into f27
fnmsub.s f2, f30, f31, f27, dyn # perform operation
fnmsub.s f2, f30, f31, f27, rdn # perform operation
fnmsub.s f2, f30, f31, f27, rmm # perform operation
fnmsub.s f2, f30, f31, f27, rne # perform operation
fnmsub.s f2, f30, f31, f27, rtz # perform operation
fnmsub.s f2, f30, f31, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f2, f30, f31, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f2, f30, f31, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f2, f30, f31, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f2, f30, f31, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f2, f30, f31, f27 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0x80800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f15, 0(x2) # load 0x3f800000 from memory into f15
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f21, 0(x2) # load 0x80800000 from memory into f21
la x2, scratch
li x3, 0x6ecd6531 # load x3 with value 0x6ecd6531
sw x3, 0(x2) # store 0x6ecd6531 in memory
flw f10, 0(x2) # load 0x6ecd6531 from memory into f10
fnmsub.s f2, f15, f21, f10, dyn # perform operation
fnmsub.s f2, f15, f21, f10, rdn # perform operation
fnmsub.s f2, f15, f21, f10, rmm # perform operation
fnmsub.s f2, f15, f21, f10, rne # perform operation
fnmsub.s f2, f15, f21, f10, rtz # perform operation
fnmsub.s f2, f15, f21, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f2, f15, f21, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f2, f15, f21, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f2, f15, f21, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f2, f15, f21, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f2, f15, f21, f10 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0x7f7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f18, 0(x2) # load 0x3f800000 from memory into f18
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f1, 0(x2) # load 0x7f7fffff from memory into f1
la x2, scratch
li x3, 0x074989ff # load x3 with value 0x074989ff
sw x3, 0(x2) # store 0x074989ff in memory
flw f21, 0(x2) # load 0x074989ff from memory into f21
fnmsub.s f5, f18, f1, f21, dyn # perform operation
fnmsub.s f5, f18, f1, f21, rdn # perform operation
fnmsub.s f5, f18, f1, f21, rmm # perform operation
fnmsub.s f5, f18, f1, f21, rne # perform operation
fnmsub.s f5, f18, f1, f21, rtz # perform operation
fnmsub.s f5, f18, f1, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f5, f18, f1, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f5, f18, f1, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f5, f18, f1, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f5, f18, f1, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f5, f18, f1, f21 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0xff7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f22, 0(x2) # load 0x3f800000 from memory into f22
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f28, 0(x2) # load 0xff7fffff from memory into f28
la x2, scratch
li x3, 0x83768723 # load x3 with value 0x83768723
sw x3, 0(x2) # store 0x83768723 in memory
flw f1, 0(x2) # load 0x83768723 from memory into f1
fnmsub.s f5, f22, f28, f1, dyn # perform operation
fnmsub.s f5, f22, f28, f1, rdn # perform operation
fnmsub.s f5, f22, f28, f1, rmm # perform operation
fnmsub.s f5, f22, f28, f1, rne # perform operation
fnmsub.s f5, f22, f28, f1, rtz # perform operation
fnmsub.s f5, f22, f28, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f5, f22, f28, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f5, f22, f28, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f5, f22, f28, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f5, f22, f28, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f5, f22, f28, f1 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0x7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f17, 0(x2) # load 0x3f800000 from memory into f17
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f9, 0(x2) # load 0x007fffff from memory into f9
la x2, scratch
li x3, 0x97f5bea4 # load x3 with value 0x97f5bea4
sw x3, 0(x2) # store 0x97f5bea4 in memory
flw f19, 0(x2) # load 0x97f5bea4 from memory into f19
fnmsub.s f10, f17, f9, f19, dyn # perform operation
fnmsub.s f10, f17, f9, f19, rdn # perform operation
fnmsub.s f10, f17, f9, f19, rmm # perform operation
fnmsub.s f10, f17, f9, f19, rne # perform operation
fnmsub.s f10, f17, f9, f19, rtz # perform operation
fnmsub.s f10, f17, f9, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f10, f17, f9, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f10, f17, f9, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f10, f17, f9, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f10, f17, f9, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f10, f17, f9, f19 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0x807fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f13, 0(x2) # load 0x3f800000 from memory into f13
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f21, 0(x2) # load 0x807fffff from memory into f21
la x2, scratch
li x3, 0xd08d424e # load x3 with value 0xd08d424e
sw x3, 0(x2) # store 0xd08d424e in memory
flw f20, 0(x2) # load 0xd08d424e from memory into f20
fnmsub.s f25, f13, f21, f20, dyn # perform operation
fnmsub.s f25, f13, f21, f20, rdn # perform operation
fnmsub.s f25, f13, f21, f20, rmm # perform operation
fnmsub.s f25, f13, f21, f20, rne # perform operation
fnmsub.s f25, f13, f21, f20, rtz # perform operation
fnmsub.s f25, f13, f21, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f25, f13, f21, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f25, f13, f21, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f25, f13, f21, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f25, f13, f21, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f25, f13, f21, f20 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0x400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f10, 0(x2) # load 0x3f800000 from memory into f10
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f7, 0(x2) # load 0x00400000 from memory into f7
la x2, scratch
li x3, 0x623058c8 # load x3 with value 0x623058c8
sw x3, 0(x2) # store 0x623058c8 in memory
flw f16, 0(x2) # load 0x623058c8 from memory into f16
fnmsub.s f22, f10, f7, f16, dyn # perform operation
fnmsub.s f22, f10, f7, f16, rdn # perform operation
fnmsub.s f22, f10, f7, f16, rmm # perform operation
fnmsub.s f22, f10, f7, f16, rne # perform operation
fnmsub.s f22, f10, f7, f16, rtz # perform operation
fnmsub.s f22, f10, f7, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f22, f10, f7, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f22, f10, f7, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f22, f10, f7, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f22, f10, f7, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f22, f10, f7, f16 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0x80400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f27, 0(x2) # load 0x3f800000 from memory into f27
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f19, 0(x2) # load 0x80400000 from memory into f19
la x2, scratch
li x3, 0x65139e0a # load x3 with value 0x65139e0a
sw x3, 0(x2) # store 0x65139e0a in memory
flw f24, 0(x2) # load 0x65139e0a from memory into f24
fnmsub.s f18, f27, f19, f24, dyn # perform operation
fnmsub.s f18, f27, f19, f24, rdn # perform operation
fnmsub.s f18, f27, f19, f24, rmm # perform operation
fnmsub.s f18, f27, f19, f24, rne # perform operation
fnmsub.s f18, f27, f19, f24, rtz # perform operation
fnmsub.s f18, f27, f19, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f18, f27, f19, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f18, f27, f19, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f18, f27, f19, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f18, f27, f19, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f18, f27, f19, f24 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0x1)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f16, 0(x2) # load 0x3f800000 from memory into f16
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f19, 0(x2) # load 0x00000001 from memory into f19
la x2, scratch
li x3, 0x028188d6 # load x3 with value 0x028188d6
sw x3, 0(x2) # store 0x028188d6 in memory
flw f31, 0(x2) # load 0x028188d6 from memory into f31
fnmsub.s f23, f16, f19, f31, dyn # perform operation
fnmsub.s f23, f16, f19, f31, rdn # perform operation
fnmsub.s f23, f16, f19, f31, rmm # perform operation
fnmsub.s f23, f16, f19, f31, rne # perform operation
fnmsub.s f23, f16, f19, f31, rtz # perform operation
fnmsub.s f23, f16, f19, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f23, f16, f19, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f23, f16, f19, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f23, f16, f19, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f23, f16, f19, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f23, f16, f19, f31 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0x80000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f24, 0(x2) # load 0x3f800000 from memory into f24
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f23, 0(x2) # load 0x80000001 from memory into f23
la x2, scratch
li x3, 0xb4de61b8 # load x3 with value 0xb4de61b8
sw x3, 0(x2) # store 0xb4de61b8 in memory
flw f29, 0(x2) # load 0xb4de61b8 from memory into f29
fnmsub.s f5, f24, f23, f29, dyn # perform operation
fnmsub.s f5, f24, f23, f29, rdn # perform operation
fnmsub.s f5, f24, f23, f29, rmm # perform operation
fnmsub.s f5, f24, f23, f29, rne # perform operation
fnmsub.s f5, f24, f23, f29, rtz # perform operation
fnmsub.s f5, f24, f23, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f5, f24, f23, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f5, f24, f23, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f5, f24, f23, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f5, f24, f23, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f5, f24, f23, f29 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0x7f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f19, 0(x2) # load 0x3f800000 from memory into f19
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f16, 0(x2) # load 0x7f800000 from memory into f16
la x2, scratch
li x3, 0x092feef7 # load x3 with value 0x092feef7
sw x3, 0(x2) # store 0x092feef7 in memory
flw f17, 0(x2) # load 0x092feef7 from memory into f17
fnmsub.s f2, f19, f16, f17, dyn # perform operation
fnmsub.s f2, f19, f16, f17, rdn # perform operation
fnmsub.s f2, f19, f16, f17, rmm # perform operation
fnmsub.s f2, f19, f16, f17, rne # perform operation
fnmsub.s f2, f19, f16, f17, rtz # perform operation
fnmsub.s f2, f19, f16, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f2, f19, f16, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f2, f19, f16, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f2, f19, f16, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f2, f19, f16, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f2, f19, f16, f17 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0xff800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f3, 0(x2) # load 0x3f800000 from memory into f3
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f2, 0(x2) # load 0xff800000 from memory into f2
la x2, scratch
li x3, 0x780ae180 # load x3 with value 0x780ae180
sw x3, 0(x2) # store 0x780ae180 in memory
flw f15, 0(x2) # load 0x780ae180 from memory into f15
fnmsub.s f21, f3, f2, f15, dyn # perform operation
fnmsub.s f21, f3, f2, f15, rdn # perform operation
fnmsub.s f21, f3, f2, f15, rmm # perform operation
fnmsub.s f21, f3, f2, f15, rne # perform operation
fnmsub.s f21, f3, f2, f15, rtz # perform operation
fnmsub.s f21, f3, f2, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f21, f3, f2, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f21, f3, f2, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f21, f3, f2, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f21, f3, f2, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f21, f3, f2, f15 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0x7fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f26, 0(x2) # load 0x3f800000 from memory into f26
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f27, 0(x2) # load 0x7fc00000 from memory into f27
la x2, scratch
li x3, 0xec731aa4 # load x3 with value 0xec731aa4
sw x3, 0(x2) # store 0xec731aa4 in memory
flw f10, 0(x2) # load 0xec731aa4 from memory into f10
fnmsub.s f2, f26, f27, f10, dyn # perform operation
fnmsub.s f2, f26, f27, f10, rdn # perform operation
fnmsub.s f2, f26, f27, f10, rmm # perform operation
fnmsub.s f2, f26, f27, f10, rne # perform operation
fnmsub.s f2, f26, f27, f10, rtz # perform operation
fnmsub.s f2, f26, f27, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f2, f26, f27, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f2, f26, f27, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f2, f26, f27, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f2, f26, f27, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f2, f26, f27, f10 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0x7fffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f27, 0(x2) # load 0x3f800000 from memory into f27
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f1, 0(x2) # load 0x7fffffff from memory into f1
la x2, scratch
li x3, 0x1aaf1490 # load x3 with value 0x1aaf1490
sw x3, 0(x2) # store 0x1aaf1490 in memory
flw f25, 0(x2) # load 0x1aaf1490 from memory into f25
fnmsub.s f19, f27, f1, f25, dyn # perform operation
fnmsub.s f19, f27, f1, f25, rdn # perform operation
fnmsub.s f19, f27, f1, f25, rmm # perform operation
fnmsub.s f19, f27, f1, f25, rne # perform operation
fnmsub.s f19, f27, f1, f25, rtz # perform operation
fnmsub.s f19, f27, f1, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f19, f27, f1, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f19, f27, f1, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f19, f27, f1, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f19, f27, f1, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f19, f27, f1, f25 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0xffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f21, 0(x2) # load 0x3f800000 from memory into f21
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f3, 0(x2) # load 0xffffffff from memory into f3
la x2, scratch
li x3, 0x4f815ba6 # load x3 with value 0x4f815ba6
sw x3, 0(x2) # store 0x4f815ba6 in memory
flw f27, 0(x2) # load 0x4f815ba6 from memory into f27
fnmsub.s f26, f21, f3, f27, dyn # perform operation
fnmsub.s f26, f21, f3, f27, rdn # perform operation
fnmsub.s f26, f21, f3, f27, rmm # perform operation
fnmsub.s f26, f21, f3, f27, rne # perform operation
fnmsub.s f26, f21, f3, f27, rtz # perform operation
fnmsub.s f26, f21, f3, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f26, f21, f3, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f26, f21, f3, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f26, f21, f3, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f26, f21, f3, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f26, f21, f3, f27 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0x7f800001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f15, 0(x2) # load 0x3f800000 from memory into f15
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f2, 0(x2) # load 0x7f800001 from memory into f2
la x2, scratch
li x3, 0x67c39a21 # load x3 with value 0x67c39a21
sw x3, 0(x2) # store 0x67c39a21 in memory
flw f19, 0(x2) # load 0x67c39a21 from memory into f19
fnmsub.s f20, f15, f2, f19, dyn # perform operation
fnmsub.s f20, f15, f2, f19, rdn # perform operation
fnmsub.s f20, f15, f2, f19, rmm # perform operation
fnmsub.s f20, f15, f2, f19, rne # perform operation
fnmsub.s f20, f15, f2, f19, rtz # perform operation
fnmsub.s f20, f15, f2, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f20, f15, f2, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f20, f15, f2, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f20, f15, f2, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f20, f15, f2, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f20, f15, f2, f19 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0x7fbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f12, 0(x2) # load 0x3f800000 from memory into f12
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f18, 0(x2) # load 0x7fbfffff from memory into f18
la x2, scratch
li x3, 0x5a045b9d # load x3 with value 0x5a045b9d
sw x3, 0(x2) # store 0x5a045b9d in memory
flw f31, 0(x2) # load 0x5a045b9d from memory into f31
fnmsub.s f30, f12, f18, f31, dyn # perform operation
fnmsub.s f30, f12, f18, f31, rdn # perform operation
fnmsub.s f30, f12, f18, f31, rmm # perform operation
fnmsub.s f30, f12, f18, f31, rne # perform operation
fnmsub.s f30, f12, f18, f31, rtz # perform operation
fnmsub.s f30, f12, f18, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f30, f12, f18, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f30, f12, f18, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f30, f12, f18, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f30, f12, f18, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f30, f12, f18, f31 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0xffbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f31, 0(x2) # load 0x3f800000 from memory into f31
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f25, 0(x2) # load 0xffbfffff from memory into f25
la x2, scratch
li x3, 0xdcc1ee08 # load x3 with value 0xdcc1ee08
sw x3, 0(x2) # store 0xdcc1ee08 in memory
flw f14, 0(x2) # load 0xdcc1ee08 from memory into f14
fnmsub.s f16, f31, f25, f14, dyn # perform operation
fnmsub.s f16, f31, f25, f14, rdn # perform operation
fnmsub.s f16, f31, f25, f14, rmm # perform operation
fnmsub.s f16, f31, f25, f14, rne # perform operation
fnmsub.s f16, f31, f25, f14, rtz # perform operation
fnmsub.s f16, f31, f25, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f16, f31, f25, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f16, f31, f25, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f16, f31, f25, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f16, f31, f25, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f16, f31, f25, f14 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0x7ef8654f)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f3, 0(x2) # load 0x3f800000 from memory into f3
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f30, 0(x2) # load 0x7ef8654f from memory into f30
la x2, scratch
li x3, 0xc551387f # load x3 with value 0xc551387f
sw x3, 0(x2) # store 0xc551387f in memory
flw f28, 0(x2) # load 0xc551387f from memory into f28
fnmsub.s f14, f3, f30, f28, dyn # perform operation
fnmsub.s f14, f3, f30, f28, rdn # perform operation
fnmsub.s f14, f3, f30, f28, rmm # perform operation
fnmsub.s f14, f3, f30, f28, rne # perform operation
fnmsub.s f14, f3, f30, f28, rtz # perform operation
fnmsub.s f14, f3, f30, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f14, f3, f30, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f14, f3, f30, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f14, f3, f30, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f14, f3, f30, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f14, f3, f30, f28 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0x813d9ab0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f15, 0(x2) # load 0x3f800000 from memory into f15
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f25, 0(x2) # load 0x813d9ab0 from memory into f25
la x2, scratch
li x3, 0xb067fccc # load x3 with value 0xb067fccc
sw x3, 0(x2) # store 0xb067fccc in memory
flw f1, 0(x2) # load 0xb067fccc from memory into f1
fnmsub.s f16, f15, f25, f1, dyn # perform operation
fnmsub.s f16, f15, f25, f1, rdn # perform operation
fnmsub.s f16, f15, f25, f1, rmm # perform operation
fnmsub.s f16, f15, f25, f1, rne # perform operation
fnmsub.s f16, f15, f25, f1, rtz # perform operation
fnmsub.s f16, f15, f25, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f16, f15, f25, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f16, f15, f25, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f16, f15, f25, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f16, f15, f25, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f16, f15, f25, f1 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0x0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f15, 0(x2) # load 0xbf800000 from memory into f15
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f8, 0(x2) # load 0x00000000 from memory into f8
la x2, scratch
li x3, 0xf5208d15 # load x3 with value 0xf5208d15
sw x3, 0(x2) # store 0xf5208d15 in memory
flw f10, 0(x2) # load 0xf5208d15 from memory into f10
fnmsub.s f25, f15, f8, f10, dyn # perform operation
fnmsub.s f25, f15, f8, f10, rdn # perform operation
fnmsub.s f25, f15, f8, f10, rmm # perform operation
fnmsub.s f25, f15, f8, f10, rne # perform operation
fnmsub.s f25, f15, f8, f10, rtz # perform operation
fnmsub.s f25, f15, f8, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f25, f15, f8, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f25, f15, f8, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f25, f15, f8, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f25, f15, f8, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f25, f15, f8, f10 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0x80000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f2, 0(x2) # load 0xbf800000 from memory into f2
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f19, 0(x2) # load 0x80000000 from memory into f19
la x2, scratch
li x3, 0x46c986ae # load x3 with value 0x46c986ae
sw x3, 0(x2) # store 0x46c986ae in memory
flw f31, 0(x2) # load 0x46c986ae from memory into f31
fnmsub.s f15, f2, f19, f31, dyn # perform operation
fnmsub.s f15, f2, f19, f31, rdn # perform operation
fnmsub.s f15, f2, f19, f31, rmm # perform operation
fnmsub.s f15, f2, f19, f31, rne # perform operation
fnmsub.s f15, f2, f19, f31, rtz # perform operation
fnmsub.s f15, f2, f19, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f15, f2, f19, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f15, f2, f19, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f15, f2, f19, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f15, f2, f19, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f15, f2, f19, f31 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0x3f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f2, 0(x2) # load 0xbf800000 from memory into f2
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f14, 0(x2) # load 0x3f800000 from memory into f14
la x2, scratch
li x3, 0x5d059260 # load x3 with value 0x5d059260
sw x3, 0(x2) # store 0x5d059260 in memory
flw f1, 0(x2) # load 0x5d059260 from memory into f1
fnmsub.s f15, f2, f14, f1, dyn # perform operation
fnmsub.s f15, f2, f14, f1, rdn # perform operation
fnmsub.s f15, f2, f14, f1, rmm # perform operation
fnmsub.s f15, f2, f14, f1, rne # perform operation
fnmsub.s f15, f2, f14, f1, rtz # perform operation
fnmsub.s f15, f2, f14, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f15, f2, f14, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f15, f2, f14, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f15, f2, f14, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f15, f2, f14, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f15, f2, f14, f1 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0xbf800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f16, 0(x2) # load 0xbf800000 from memory into f16
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f22, 0(x2) # load 0xbf800000 from memory into f22
la x2, scratch
li x3, 0x72d22ae9 # load x3 with value 0x72d22ae9
sw x3, 0(x2) # store 0x72d22ae9 in memory
flw f7, 0(x2) # load 0x72d22ae9 from memory into f7
fnmsub.s f6, f16, f22, f7, dyn # perform operation
fnmsub.s f6, f16, f22, f7, rdn # perform operation
fnmsub.s f6, f16, f22, f7, rmm # perform operation
fnmsub.s f6, f16, f22, f7, rne # perform operation
fnmsub.s f6, f16, f22, f7, rtz # perform operation
fnmsub.s f6, f16, f22, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f6, f16, f22, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f6, f16, f22, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f6, f16, f22, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f6, f16, f22, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f6, f16, f22, f7 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0x3fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f25, 0(x2) # load 0xbf800000 from memory into f25
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f14, 0(x2) # load 0x3fc00000 from memory into f14
la x2, scratch
li x3, 0x4077817a # load x3 with value 0x4077817a
sw x3, 0(x2) # store 0x4077817a in memory
flw f9, 0(x2) # load 0x4077817a from memory into f9
fnmsub.s f2, f25, f14, f9, dyn # perform operation
fnmsub.s f2, f25, f14, f9, rdn # perform operation
fnmsub.s f2, f25, f14, f9, rmm # perform operation
fnmsub.s f2, f25, f14, f9, rne # perform operation
fnmsub.s f2, f25, f14, f9, rtz # perform operation
fnmsub.s f2, f25, f14, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f2, f25, f14, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f2, f25, f14, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f2, f25, f14, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f2, f25, f14, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f2, f25, f14, f9 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0xbfc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f30, 0(x2) # load 0xbf800000 from memory into f30
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f20, 0(x2) # load 0xbfc00000 from memory into f20
la x2, scratch
li x3, 0x660a8750 # load x3 with value 0x660a8750
sw x3, 0(x2) # store 0x660a8750 in memory
flw f22, 0(x2) # load 0x660a8750 from memory into f22
fnmsub.s f3, f30, f20, f22, dyn # perform operation
fnmsub.s f3, f30, f20, f22, rdn # perform operation
fnmsub.s f3, f30, f20, f22, rmm # perform operation
fnmsub.s f3, f30, f20, f22, rne # perform operation
fnmsub.s f3, f30, f20, f22, rtz # perform operation
fnmsub.s f3, f30, f20, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f3, f30, f20, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f3, f30, f20, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f3, f30, f20, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f3, f30, f20, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f3, f30, f20, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0x40000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f13, 0(x2) # load 0xbf800000 from memory into f13
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f15, 0(x2) # load 0x40000000 from memory into f15
la x2, scratch
li x3, 0xc4b01ab4 # load x3 with value 0xc4b01ab4
sw x3, 0(x2) # store 0xc4b01ab4 in memory
flw f21, 0(x2) # load 0xc4b01ab4 from memory into f21
fnmsub.s f18, f13, f15, f21, dyn # perform operation
fnmsub.s f18, f13, f15, f21, rdn # perform operation
fnmsub.s f18, f13, f15, f21, rmm # perform operation
fnmsub.s f18, f13, f15, f21, rne # perform operation
fnmsub.s f18, f13, f15, f21, rtz # perform operation
fnmsub.s f18, f13, f15, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f18, f13, f15, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f18, f13, f15, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f18, f13, f15, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f18, f13, f15, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f18, f13, f15, f21 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0xc0000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f31, 0(x2) # load 0xbf800000 from memory into f31
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f16, 0(x2) # load 0xc0000000 from memory into f16
la x2, scratch
li x3, 0x925fc4d4 # load x3 with value 0x925fc4d4
sw x3, 0(x2) # store 0x925fc4d4 in memory
flw f29, 0(x2) # load 0x925fc4d4 from memory into f29
fnmsub.s f8, f31, f16, f29, dyn # perform operation
fnmsub.s f8, f31, f16, f29, rdn # perform operation
fnmsub.s f8, f31, f16, f29, rmm # perform operation
fnmsub.s f8, f31, f16, f29, rne # perform operation
fnmsub.s f8, f31, f16, f29, rtz # perform operation
fnmsub.s f8, f31, f16, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f8, f31, f16, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f8, f31, f16, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f8, f31, f16, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f8, f31, f16, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f8, f31, f16, f29 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0x800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f20, 0(x2) # load 0xbf800000 from memory into f20
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f7, 0(x2) # load 0x00800000 from memory into f7
la x2, scratch
li x3, 0xef373e92 # load x3 with value 0xef373e92
sw x3, 0(x2) # store 0xef373e92 in memory
flw f16, 0(x2) # load 0xef373e92 from memory into f16
fnmsub.s f27, f20, f7, f16, dyn # perform operation
fnmsub.s f27, f20, f7, f16, rdn # perform operation
fnmsub.s f27, f20, f7, f16, rmm # perform operation
fnmsub.s f27, f20, f7, f16, rne # perform operation
fnmsub.s f27, f20, f7, f16, rtz # perform operation
fnmsub.s f27, f20, f7, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f27, f20, f7, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f27, f20, f7, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f27, f20, f7, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f27, f20, f7, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f27, f20, f7, f16 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0x80800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f26, 0(x2) # load 0xbf800000 from memory into f26
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f6, 0(x2) # load 0x80800000 from memory into f6
la x2, scratch
li x3, 0x222226ad # load x3 with value 0x222226ad
sw x3, 0(x2) # store 0x222226ad in memory
flw f12, 0(x2) # load 0x222226ad from memory into f12
fnmsub.s f2, f26, f6, f12, dyn # perform operation
fnmsub.s f2, f26, f6, f12, rdn # perform operation
fnmsub.s f2, f26, f6, f12, rmm # perform operation
fnmsub.s f2, f26, f6, f12, rne # perform operation
fnmsub.s f2, f26, f6, f12, rtz # perform operation
fnmsub.s f2, f26, f6, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f2, f26, f6, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f2, f26, f6, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f2, f26, f6, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f2, f26, f6, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f2, f26, f6, f12 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0x7f7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f11, 0(x2) # load 0xbf800000 from memory into f11
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f17, 0(x2) # load 0x7f7fffff from memory into f17
la x2, scratch
li x3, 0x102fcca3 # load x3 with value 0x102fcca3
sw x3, 0(x2) # store 0x102fcca3 in memory
flw f19, 0(x2) # load 0x102fcca3 from memory into f19
fnmsub.s f20, f11, f17, f19, dyn # perform operation
fnmsub.s f20, f11, f17, f19, rdn # perform operation
fnmsub.s f20, f11, f17, f19, rmm # perform operation
fnmsub.s f20, f11, f17, f19, rne # perform operation
fnmsub.s f20, f11, f17, f19, rtz # perform operation
fnmsub.s f20, f11, f17, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f20, f11, f17, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f20, f11, f17, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f20, f11, f17, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f20, f11, f17, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f20, f11, f17, f19 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0xff7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f22, 0(x2) # load 0xbf800000 from memory into f22
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f20, 0(x2) # load 0xff7fffff from memory into f20
la x2, scratch
li x3, 0xd3da5649 # load x3 with value 0xd3da5649
sw x3, 0(x2) # store 0xd3da5649 in memory
flw f14, 0(x2) # load 0xd3da5649 from memory into f14
fnmsub.s f19, f22, f20, f14, dyn # perform operation
fnmsub.s f19, f22, f20, f14, rdn # perform operation
fnmsub.s f19, f22, f20, f14, rmm # perform operation
fnmsub.s f19, f22, f20, f14, rne # perform operation
fnmsub.s f19, f22, f20, f14, rtz # perform operation
fnmsub.s f19, f22, f20, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f19, f22, f20, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f19, f22, f20, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f19, f22, f20, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f19, f22, f20, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f19, f22, f20, f14 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0x7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f18, 0(x2) # load 0xbf800000 from memory into f18
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f24, 0(x2) # load 0x007fffff from memory into f24
la x2, scratch
li x3, 0xa7dc1366 # load x3 with value 0xa7dc1366
sw x3, 0(x2) # store 0xa7dc1366 in memory
flw f17, 0(x2) # load 0xa7dc1366 from memory into f17
fnmsub.s f30, f18, f24, f17, dyn # perform operation
fnmsub.s f30, f18, f24, f17, rdn # perform operation
fnmsub.s f30, f18, f24, f17, rmm # perform operation
fnmsub.s f30, f18, f24, f17, rne # perform operation
fnmsub.s f30, f18, f24, f17, rtz # perform operation
fnmsub.s f30, f18, f24, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f30, f18, f24, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f30, f18, f24, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f30, f18, f24, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f30, f18, f24, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f30, f18, f24, f17 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0x807fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f1, 0(x2) # load 0xbf800000 from memory into f1
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f31, 0(x2) # load 0x807fffff from memory into f31
la x2, scratch
li x3, 0x49e01931 # load x3 with value 0x49e01931
sw x3, 0(x2) # store 0x49e01931 in memory
flw f25, 0(x2) # load 0x49e01931 from memory into f25
fnmsub.s f18, f1, f31, f25, dyn # perform operation
fnmsub.s f18, f1, f31, f25, rdn # perform operation
fnmsub.s f18, f1, f31, f25, rmm # perform operation
fnmsub.s f18, f1, f31, f25, rne # perform operation
fnmsub.s f18, f1, f31, f25, rtz # perform operation
fnmsub.s f18, f1, f31, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f18, f1, f31, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f18, f1, f31, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f18, f1, f31, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f18, f1, f31, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f18, f1, f31, f25 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0x400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f5, 0(x2) # load 0xbf800000 from memory into f5
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f21, 0(x2) # load 0x00400000 from memory into f21
la x2, scratch
li x3, 0x23826670 # load x3 with value 0x23826670
sw x3, 0(x2) # store 0x23826670 in memory
flw f13, 0(x2) # load 0x23826670 from memory into f13
fnmsub.s f14, f5, f21, f13, dyn # perform operation
fnmsub.s f14, f5, f21, f13, rdn # perform operation
fnmsub.s f14, f5, f21, f13, rmm # perform operation
fnmsub.s f14, f5, f21, f13, rne # perform operation
fnmsub.s f14, f5, f21, f13, rtz # perform operation
fnmsub.s f14, f5, f21, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f14, f5, f21, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f14, f5, f21, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f14, f5, f21, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f14, f5, f21, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f14, f5, f21, f13 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0x80400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f21, 0(x2) # load 0xbf800000 from memory into f21
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f31, 0(x2) # load 0x80400000 from memory into f31
la x2, scratch
li x3, 0xfac063d8 # load x3 with value 0xfac063d8
sw x3, 0(x2) # store 0xfac063d8 in memory
flw f14, 0(x2) # load 0xfac063d8 from memory into f14
fnmsub.s f18, f21, f31, f14, dyn # perform operation
fnmsub.s f18, f21, f31, f14, rdn # perform operation
fnmsub.s f18, f21, f31, f14, rmm # perform operation
fnmsub.s f18, f21, f31, f14, rne # perform operation
fnmsub.s f18, f21, f31, f14, rtz # perform operation
fnmsub.s f18, f21, f31, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f18, f21, f31, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f18, f21, f31, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f18, f21, f31, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f18, f21, f31, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f18, f21, f31, f14 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0x1)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f9, 0(x2) # load 0xbf800000 from memory into f9
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f10, 0(x2) # load 0x00000001 from memory into f10
la x2, scratch
li x3, 0xe5f9cb72 # load x3 with value 0xe5f9cb72
sw x3, 0(x2) # store 0xe5f9cb72 in memory
flw f1, 0(x2) # load 0xe5f9cb72 from memory into f1
fnmsub.s f30, f9, f10, f1, dyn # perform operation
fnmsub.s f30, f9, f10, f1, rdn # perform operation
fnmsub.s f30, f9, f10, f1, rmm # perform operation
fnmsub.s f30, f9, f10, f1, rne # perform operation
fnmsub.s f30, f9, f10, f1, rtz # perform operation
fnmsub.s f30, f9, f10, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f30, f9, f10, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f30, f9, f10, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f30, f9, f10, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f30, f9, f10, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f30, f9, f10, f1 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0x80000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f10, 0(x2) # load 0xbf800000 from memory into f10
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f1, 0(x2) # load 0x80000001 from memory into f1
la x2, scratch
li x3, 0xd1eb25e6 # load x3 with value 0xd1eb25e6
sw x3, 0(x2) # store 0xd1eb25e6 in memory
flw f20, 0(x2) # load 0xd1eb25e6 from memory into f20
fnmsub.s f28, f10, f1, f20, dyn # perform operation
fnmsub.s f28, f10, f1, f20, rdn # perform operation
fnmsub.s f28, f10, f1, f20, rmm # perform operation
fnmsub.s f28, f10, f1, f20, rne # perform operation
fnmsub.s f28, f10, f1, f20, rtz # perform operation
fnmsub.s f28, f10, f1, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f28, f10, f1, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f28, f10, f1, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f28, f10, f1, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f28, f10, f1, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f28, f10, f1, f20 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0x7f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f11, 0(x2) # load 0xbf800000 from memory into f11
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f7, 0(x2) # load 0x7f800000 from memory into f7
la x2, scratch
li x3, 0x06cd306e # load x3 with value 0x06cd306e
sw x3, 0(x2) # store 0x06cd306e in memory
flw f6, 0(x2) # load 0x06cd306e from memory into f6
fnmsub.s f8, f11, f7, f6, dyn # perform operation
fnmsub.s f8, f11, f7, f6, rdn # perform operation
fnmsub.s f8, f11, f7, f6, rmm # perform operation
fnmsub.s f8, f11, f7, f6, rne # perform operation
fnmsub.s f8, f11, f7, f6, rtz # perform operation
fnmsub.s f8, f11, f7, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f8, f11, f7, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f8, f11, f7, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f8, f11, f7, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f8, f11, f7, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f8, f11, f7, f6 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0xff800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f31, 0(x2) # load 0xbf800000 from memory into f31
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f6, 0(x2) # load 0xff800000 from memory into f6
la x2, scratch
li x3, 0xec9fea89 # load x3 with value 0xec9fea89
sw x3, 0(x2) # store 0xec9fea89 in memory
flw f10, 0(x2) # load 0xec9fea89 from memory into f10
fnmsub.s f19, f31, f6, f10, dyn # perform operation
fnmsub.s f19, f31, f6, f10, rdn # perform operation
fnmsub.s f19, f31, f6, f10, rmm # perform operation
fnmsub.s f19, f31, f6, f10, rne # perform operation
fnmsub.s f19, f31, f6, f10, rtz # perform operation
fnmsub.s f19, f31, f6, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f19, f31, f6, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f19, f31, f6, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f19, f31, f6, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f19, f31, f6, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f19, f31, f6, f10 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0x7fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f10, 0(x2) # load 0xbf800000 from memory into f10
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f29, 0(x2) # load 0x7fc00000 from memory into f29
la x2, scratch
li x3, 0xd2f7b818 # load x3 with value 0xd2f7b818
sw x3, 0(x2) # store 0xd2f7b818 in memory
flw f1, 0(x2) # load 0xd2f7b818 from memory into f1
fnmsub.s f25, f10, f29, f1, dyn # perform operation
fnmsub.s f25, f10, f29, f1, rdn # perform operation
fnmsub.s f25, f10, f29, f1, rmm # perform operation
fnmsub.s f25, f10, f29, f1, rne # perform operation
fnmsub.s f25, f10, f29, f1, rtz # perform operation
fnmsub.s f25, f10, f29, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f25, f10, f29, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f25, f10, f29, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f25, f10, f29, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f25, f10, f29, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f25, f10, f29, f1 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0x7fffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f15, 0(x2) # load 0xbf800000 from memory into f15
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f30, 0(x2) # load 0x7fffffff from memory into f30
la x2, scratch
li x3, 0x17f65eeb # load x3 with value 0x17f65eeb
sw x3, 0(x2) # store 0x17f65eeb in memory
flw f1, 0(x2) # load 0x17f65eeb from memory into f1
fnmsub.s f24, f15, f30, f1, dyn # perform operation
fnmsub.s f24, f15, f30, f1, rdn # perform operation
fnmsub.s f24, f15, f30, f1, rmm # perform operation
fnmsub.s f24, f15, f30, f1, rne # perform operation
fnmsub.s f24, f15, f30, f1, rtz # perform operation
fnmsub.s f24, f15, f30, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f24, f15, f30, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f24, f15, f30, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f24, f15, f30, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f24, f15, f30, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f24, f15, f30, f1 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0xffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f16, 0(x2) # load 0xbf800000 from memory into f16
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f10, 0(x2) # load 0xffffffff from memory into f10
la x2, scratch
li x3, 0x686020df # load x3 with value 0x686020df
sw x3, 0(x2) # store 0x686020df in memory
flw f29, 0(x2) # load 0x686020df from memory into f29
fnmsub.s f20, f16, f10, f29, dyn # perform operation
fnmsub.s f20, f16, f10, f29, rdn # perform operation
fnmsub.s f20, f16, f10, f29, rmm # perform operation
fnmsub.s f20, f16, f10, f29, rne # perform operation
fnmsub.s f20, f16, f10, f29, rtz # perform operation
fnmsub.s f20, f16, f10, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f20, f16, f10, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f20, f16, f10, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f20, f16, f10, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f20, f16, f10, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f20, f16, f10, f29 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0x7f800001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f27, 0(x2) # load 0xbf800000 from memory into f27
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f14, 0(x2) # load 0x7f800001 from memory into f14
la x2, scratch
li x3, 0x42ac0e46 # load x3 with value 0x42ac0e46
sw x3, 0(x2) # store 0x42ac0e46 in memory
flw f31, 0(x2) # load 0x42ac0e46 from memory into f31
fnmsub.s f19, f27, f14, f31, dyn # perform operation
fnmsub.s f19, f27, f14, f31, rdn # perform operation
fnmsub.s f19, f27, f14, f31, rmm # perform operation
fnmsub.s f19, f27, f14, f31, rne # perform operation
fnmsub.s f19, f27, f14, f31, rtz # perform operation
fnmsub.s f19, f27, f14, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f19, f27, f14, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f19, f27, f14, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f19, f27, f14, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f19, f27, f14, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f19, f27, f14, f31 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0x7fbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f10, 0(x2) # load 0xbf800000 from memory into f10
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f22, 0(x2) # load 0x7fbfffff from memory into f22
la x2, scratch
li x3, 0xc72d2f2f # load x3 with value 0xc72d2f2f
sw x3, 0(x2) # store 0xc72d2f2f in memory
flw f31, 0(x2) # load 0xc72d2f2f from memory into f31
fnmsub.s f12, f10, f22, f31, dyn # perform operation
fnmsub.s f12, f10, f22, f31, rdn # perform operation
fnmsub.s f12, f10, f22, f31, rmm # perform operation
fnmsub.s f12, f10, f22, f31, rne # perform operation
fnmsub.s f12, f10, f22, f31, rtz # perform operation
fnmsub.s f12, f10, f22, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f12, f10, f22, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f12, f10, f22, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f12, f10, f22, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f12, f10, f22, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f12, f10, f22, f31 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0xffbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f26, 0(x2) # load 0xbf800000 from memory into f26
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f13, 0(x2) # load 0xffbfffff from memory into f13
la x2, scratch
li x3, 0xb5284a0a # load x3 with value 0xb5284a0a
sw x3, 0(x2) # store 0xb5284a0a in memory
flw f21, 0(x2) # load 0xb5284a0a from memory into f21
fnmsub.s f1, f26, f13, f21, dyn # perform operation
fnmsub.s f1, f26, f13, f21, rdn # perform operation
fnmsub.s f1, f26, f13, f21, rmm # perform operation
fnmsub.s f1, f26, f13, f21, rne # perform operation
fnmsub.s f1, f26, f13, f21, rtz # perform operation
fnmsub.s f1, f26, f13, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f1, f26, f13, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f1, f26, f13, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f1, f26, f13, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f1, f26, f13, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f1, f26, f13, f21 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0x7ef8654f)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f7, 0(x2) # load 0xbf800000 from memory into f7
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f17, 0(x2) # load 0x7ef8654f from memory into f17
la x2, scratch
li x3, 0x7524ef4d # load x3 with value 0x7524ef4d
sw x3, 0(x2) # store 0x7524ef4d in memory
flw f10, 0(x2) # load 0x7524ef4d from memory into f10
fnmsub.s f1, f7, f17, f10, dyn # perform operation
fnmsub.s f1, f7, f17, f10, rdn # perform operation
fnmsub.s f1, f7, f17, f10, rmm # perform operation
fnmsub.s f1, f7, f17, f10, rne # perform operation
fnmsub.s f1, f7, f17, f10, rtz # perform operation
fnmsub.s f1, f7, f17, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f1, f7, f17, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f1, f7, f17, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f1, f7, f17, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f1, f7, f17, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f1, f7, f17, f10 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0x813d9ab0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f3, 0(x2) # load 0xbf800000 from memory into f3
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f5, 0(x2) # load 0x813d9ab0 from memory into f5
la x2, scratch
li x3, 0x031b8f28 # load x3 with value 0x031b8f28
sw x3, 0(x2) # store 0x031b8f28 in memory
flw f30, 0(x2) # load 0x031b8f28 from memory into f30
fnmsub.s f10, f3, f5, f30, dyn # perform operation
fnmsub.s f10, f3, f5, f30, rdn # perform operation
fnmsub.s f10, f3, f5, f30, rmm # perform operation
fnmsub.s f10, f3, f5, f30, rne # perform operation
fnmsub.s f10, f3, f5, f30, rtz # perform operation
fnmsub.s f10, f3, f5, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f10, f3, f5, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f10, f3, f5, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f10, f3, f5, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f10, f3, f5, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f10, f3, f5, f30 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0x0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f28, 0(x2) # load 0x3fc00000 from memory into f28
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f3, 0(x2) # load 0x00000000 from memory into f3
la x2, scratch
li x3, 0x7657f434 # load x3 with value 0x7657f434
sw x3, 0(x2) # store 0x7657f434 in memory
flw f9, 0(x2) # load 0x7657f434 from memory into f9
fnmsub.s f14, f28, f3, f9, dyn # perform operation
fnmsub.s f14, f28, f3, f9, rdn # perform operation
fnmsub.s f14, f28, f3, f9, rmm # perform operation
fnmsub.s f14, f28, f3, f9, rne # perform operation
fnmsub.s f14, f28, f3, f9, rtz # perform operation
fnmsub.s f14, f28, f3, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f14, f28, f3, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f14, f28, f3, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f14, f28, f3, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f14, f28, f3, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f14, f28, f3, f9 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0x80000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f26, 0(x2) # load 0x3fc00000 from memory into f26
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f18, 0(x2) # load 0x80000000 from memory into f18
la x2, scratch
li x3, 0x1ad82cb5 # load x3 with value 0x1ad82cb5
sw x3, 0(x2) # store 0x1ad82cb5 in memory
flw f28, 0(x2) # load 0x1ad82cb5 from memory into f28
fnmsub.s f13, f26, f18, f28, dyn # perform operation
fnmsub.s f13, f26, f18, f28, rdn # perform operation
fnmsub.s f13, f26, f18, f28, rmm # perform operation
fnmsub.s f13, f26, f18, f28, rne # perform operation
fnmsub.s f13, f26, f18, f28, rtz # perform operation
fnmsub.s f13, f26, f18, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f13, f26, f18, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f13, f26, f18, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f13, f26, f18, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f13, f26, f18, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f13, f26, f18, f28 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0x3f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f7, 0(x2) # load 0x3fc00000 from memory into f7
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f15, 0(x2) # load 0x3f800000 from memory into f15
la x2, scratch
li x3, 0x8fa9a51f # load x3 with value 0x8fa9a51f
sw x3, 0(x2) # store 0x8fa9a51f in memory
flw f25, 0(x2) # load 0x8fa9a51f from memory into f25
fnmsub.s f1, f7, f15, f25, dyn # perform operation
fnmsub.s f1, f7, f15, f25, rdn # perform operation
fnmsub.s f1, f7, f15, f25, rmm # perform operation
fnmsub.s f1, f7, f15, f25, rne # perform operation
fnmsub.s f1, f7, f15, f25, rtz # perform operation
fnmsub.s f1, f7, f15, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f1, f7, f15, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f1, f7, f15, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f1, f7, f15, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f1, f7, f15, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f1, f7, f15, f25 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0xbf800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f19, 0(x2) # load 0x3fc00000 from memory into f19
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f30, 0(x2) # load 0xbf800000 from memory into f30
la x2, scratch
li x3, 0x32775ccb # load x3 with value 0x32775ccb
sw x3, 0(x2) # store 0x32775ccb in memory
flw f29, 0(x2) # load 0x32775ccb from memory into f29
fnmsub.s f20, f19, f30, f29, dyn # perform operation
fnmsub.s f20, f19, f30, f29, rdn # perform operation
fnmsub.s f20, f19, f30, f29, rmm # perform operation
fnmsub.s f20, f19, f30, f29, rne # perform operation
fnmsub.s f20, f19, f30, f29, rtz # perform operation
fnmsub.s f20, f19, f30, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f20, f19, f30, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f20, f19, f30, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f20, f19, f30, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f20, f19, f30, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f20, f19, f30, f29 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0x3fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f30, 0(x2) # load 0x3fc00000 from memory into f30
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f21, 0(x2) # load 0x3fc00000 from memory into f21
la x2, scratch
li x3, 0xe632ce2d # load x3 with value 0xe632ce2d
sw x3, 0(x2) # store 0xe632ce2d in memory
flw f2, 0(x2) # load 0xe632ce2d from memory into f2
fnmsub.s f31, f30, f21, f2, dyn # perform operation
fnmsub.s f31, f30, f21, f2, rdn # perform operation
fnmsub.s f31, f30, f21, f2, rmm # perform operation
fnmsub.s f31, f30, f21, f2, rne # perform operation
fnmsub.s f31, f30, f21, f2, rtz # perform operation
fnmsub.s f31, f30, f21, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f31, f30, f21, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f31, f30, f21, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f31, f30, f21, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f31, f30, f21, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f31, f30, f21, f2 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0xbfc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f2, 0(x2) # load 0x3fc00000 from memory into f2
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f9, 0(x2) # load 0xbfc00000 from memory into f9
la x2, scratch
li x3, 0x482a6322 # load x3 with value 0x482a6322
sw x3, 0(x2) # store 0x482a6322 in memory
flw f25, 0(x2) # load 0x482a6322 from memory into f25
fnmsub.s f21, f2, f9, f25, dyn # perform operation
fnmsub.s f21, f2, f9, f25, rdn # perform operation
fnmsub.s f21, f2, f9, f25, rmm # perform operation
fnmsub.s f21, f2, f9, f25, rne # perform operation
fnmsub.s f21, f2, f9, f25, rtz # perform operation
fnmsub.s f21, f2, f9, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f21, f2, f9, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f21, f2, f9, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f21, f2, f9, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f21, f2, f9, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f21, f2, f9, f25 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0x40000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f3, 0(x2) # load 0x3fc00000 from memory into f3
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f16, 0(x2) # load 0x40000000 from memory into f16
la x2, scratch
li x3, 0x716ff052 # load x3 with value 0x716ff052
sw x3, 0(x2) # store 0x716ff052 in memory
flw f8, 0(x2) # load 0x716ff052 from memory into f8
fnmsub.s f18, f3, f16, f8, dyn # perform operation
fnmsub.s f18, f3, f16, f8, rdn # perform operation
fnmsub.s f18, f3, f16, f8, rmm # perform operation
fnmsub.s f18, f3, f16, f8, rne # perform operation
fnmsub.s f18, f3, f16, f8, rtz # perform operation
fnmsub.s f18, f3, f16, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f18, f3, f16, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f18, f3, f16, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f18, f3, f16, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f18, f3, f16, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f18, f3, f16, f8 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0xc0000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f31, 0(x2) # load 0x3fc00000 from memory into f31
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f30, 0(x2) # load 0xc0000000 from memory into f30
la x2, scratch
li x3, 0x9d0a8df2 # load x3 with value 0x9d0a8df2
sw x3, 0(x2) # store 0x9d0a8df2 in memory
flw f11, 0(x2) # load 0x9d0a8df2 from memory into f11
fnmsub.s f24, f31, f30, f11, dyn # perform operation
fnmsub.s f24, f31, f30, f11, rdn # perform operation
fnmsub.s f24, f31, f30, f11, rmm # perform operation
fnmsub.s f24, f31, f30, f11, rne # perform operation
fnmsub.s f24, f31, f30, f11, rtz # perform operation
fnmsub.s f24, f31, f30, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f24, f31, f30, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f24, f31, f30, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f24, f31, f30, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f24, f31, f30, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f24, f31, f30, f11 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0x800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f24, 0(x2) # load 0x3fc00000 from memory into f24
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f27, 0(x2) # load 0x00800000 from memory into f27
la x2, scratch
li x3, 0xa0c66181 # load x3 with value 0xa0c66181
sw x3, 0(x2) # store 0xa0c66181 in memory
flw f6, 0(x2) # load 0xa0c66181 from memory into f6
fnmsub.s f28, f24, f27, f6, dyn # perform operation
fnmsub.s f28, f24, f27, f6, rdn # perform operation
fnmsub.s f28, f24, f27, f6, rmm # perform operation
fnmsub.s f28, f24, f27, f6, rne # perform operation
fnmsub.s f28, f24, f27, f6, rtz # perform operation
fnmsub.s f28, f24, f27, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f28, f24, f27, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f28, f24, f27, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f28, f24, f27, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f28, f24, f27, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f28, f24, f27, f6 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0x80800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f26, 0(x2) # load 0x3fc00000 from memory into f26
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f31, 0(x2) # load 0x80800000 from memory into f31
la x2, scratch
li x3, 0xdb0245c1 # load x3 with value 0xdb0245c1
sw x3, 0(x2) # store 0xdb0245c1 in memory
flw f23, 0(x2) # load 0xdb0245c1 from memory into f23
fnmsub.s f5, f26, f31, f23, dyn # perform operation
fnmsub.s f5, f26, f31, f23, rdn # perform operation
fnmsub.s f5, f26, f31, f23, rmm # perform operation
fnmsub.s f5, f26, f31, f23, rne # perform operation
fnmsub.s f5, f26, f31, f23, rtz # perform operation
fnmsub.s f5, f26, f31, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f5, f26, f31, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f5, f26, f31, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f5, f26, f31, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f5, f26, f31, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f5, f26, f31, f23 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0x7f7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f16, 0(x2) # load 0x3fc00000 from memory into f16
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f2, 0(x2) # load 0x7f7fffff from memory into f2
la x2, scratch
li x3, 0xc5642803 # load x3 with value 0xc5642803
sw x3, 0(x2) # store 0xc5642803 in memory
flw f21, 0(x2) # load 0xc5642803 from memory into f21
fnmsub.s f3, f16, f2, f21, dyn # perform operation
fnmsub.s f3, f16, f2, f21, rdn # perform operation
fnmsub.s f3, f16, f2, f21, rmm # perform operation
fnmsub.s f3, f16, f2, f21, rne # perform operation
fnmsub.s f3, f16, f2, f21, rtz # perform operation
fnmsub.s f3, f16, f2, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f3, f16, f2, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f3, f16, f2, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f3, f16, f2, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f3, f16, f2, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f3, f16, f2, f21 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0xff7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f14, 0(x2) # load 0x3fc00000 from memory into f14
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f17, 0(x2) # load 0xff7fffff from memory into f17
la x2, scratch
li x3, 0xd5e3608c # load x3 with value 0xd5e3608c
sw x3, 0(x2) # store 0xd5e3608c in memory
flw f11, 0(x2) # load 0xd5e3608c from memory into f11
fnmsub.s f10, f14, f17, f11, dyn # perform operation
fnmsub.s f10, f14, f17, f11, rdn # perform operation
fnmsub.s f10, f14, f17, f11, rmm # perform operation
fnmsub.s f10, f14, f17, f11, rne # perform operation
fnmsub.s f10, f14, f17, f11, rtz # perform operation
fnmsub.s f10, f14, f17, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f10, f14, f17, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f10, f14, f17, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f10, f14, f17, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f10, f14, f17, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f10, f14, f17, f11 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0x7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f11, 0(x2) # load 0x3fc00000 from memory into f11
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f15, 0(x2) # load 0x007fffff from memory into f15
la x2, scratch
li x3, 0x1d3c86ac # load x3 with value 0x1d3c86ac
sw x3, 0(x2) # store 0x1d3c86ac in memory
flw f29, 0(x2) # load 0x1d3c86ac from memory into f29
fnmsub.s f22, f11, f15, f29, dyn # perform operation
fnmsub.s f22, f11, f15, f29, rdn # perform operation
fnmsub.s f22, f11, f15, f29, rmm # perform operation
fnmsub.s f22, f11, f15, f29, rne # perform operation
fnmsub.s f22, f11, f15, f29, rtz # perform operation
fnmsub.s f22, f11, f15, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f22, f11, f15, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f22, f11, f15, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f22, f11, f15, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f22, f11, f15, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f22, f11, f15, f29 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0x807fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f30, 0(x2) # load 0x3fc00000 from memory into f30
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f9, 0(x2) # load 0x807fffff from memory into f9
la x2, scratch
li x3, 0xbf6c4e01 # load x3 with value 0xbf6c4e01
sw x3, 0(x2) # store 0xbf6c4e01 in memory
flw f15, 0(x2) # load 0xbf6c4e01 from memory into f15
fnmsub.s f2, f30, f9, f15, dyn # perform operation
fnmsub.s f2, f30, f9, f15, rdn # perform operation
fnmsub.s f2, f30, f9, f15, rmm # perform operation
fnmsub.s f2, f30, f9, f15, rne # perform operation
fnmsub.s f2, f30, f9, f15, rtz # perform operation
fnmsub.s f2, f30, f9, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f2, f30, f9, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f2, f30, f9, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f2, f30, f9, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f2, f30, f9, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f2, f30, f9, f15 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0x400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f13, 0(x2) # load 0x3fc00000 from memory into f13
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f5, 0(x2) # load 0x00400000 from memory into f5
la x2, scratch
li x3, 0xb3929665 # load x3 with value 0xb3929665
sw x3, 0(x2) # store 0xb3929665 in memory
flw f15, 0(x2) # load 0xb3929665 from memory into f15
fnmsub.s f17, f13, f5, f15, dyn # perform operation
fnmsub.s f17, f13, f5, f15, rdn # perform operation
fnmsub.s f17, f13, f5, f15, rmm # perform operation
fnmsub.s f17, f13, f5, f15, rne # perform operation
fnmsub.s f17, f13, f5, f15, rtz # perform operation
fnmsub.s f17, f13, f5, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f17, f13, f5, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f17, f13, f5, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f17, f13, f5, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f17, f13, f5, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f17, f13, f5, f15 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0x80400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f25, 0(x2) # load 0x3fc00000 from memory into f25
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f7, 0(x2) # load 0x80400000 from memory into f7
la x2, scratch
li x3, 0xdc6ff52d # load x3 with value 0xdc6ff52d
sw x3, 0(x2) # store 0xdc6ff52d in memory
flw f20, 0(x2) # load 0xdc6ff52d from memory into f20
fnmsub.s f2, f25, f7, f20, dyn # perform operation
fnmsub.s f2, f25, f7, f20, rdn # perform operation
fnmsub.s f2, f25, f7, f20, rmm # perform operation
fnmsub.s f2, f25, f7, f20, rne # perform operation
fnmsub.s f2, f25, f7, f20, rtz # perform operation
fnmsub.s f2, f25, f7, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f2, f25, f7, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f2, f25, f7, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f2, f25, f7, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f2, f25, f7, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f2, f25, f7, f20 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0x1)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f16, 0(x2) # load 0x3fc00000 from memory into f16
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f20, 0(x2) # load 0x00000001 from memory into f20
la x2, scratch
li x3, 0x661cbc44 # load x3 with value 0x661cbc44
sw x3, 0(x2) # store 0x661cbc44 in memory
flw f7, 0(x2) # load 0x661cbc44 from memory into f7
fnmsub.s f5, f16, f20, f7, dyn # perform operation
fnmsub.s f5, f16, f20, f7, rdn # perform operation
fnmsub.s f5, f16, f20, f7, rmm # perform operation
fnmsub.s f5, f16, f20, f7, rne # perform operation
fnmsub.s f5, f16, f20, f7, rtz # perform operation
fnmsub.s f5, f16, f20, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f5, f16, f20, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f5, f16, f20, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f5, f16, f20, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f5, f16, f20, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f5, f16, f20, f7 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0x80000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f29, 0(x2) # load 0x3fc00000 from memory into f29
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f6, 0(x2) # load 0x80000001 from memory into f6
la x2, scratch
li x3, 0x61e95453 # load x3 with value 0x61e95453
sw x3, 0(x2) # store 0x61e95453 in memory
flw f18, 0(x2) # load 0x61e95453 from memory into f18
fnmsub.s f26, f29, f6, f18, dyn # perform operation
fnmsub.s f26, f29, f6, f18, rdn # perform operation
fnmsub.s f26, f29, f6, f18, rmm # perform operation
fnmsub.s f26, f29, f6, f18, rne # perform operation
fnmsub.s f26, f29, f6, f18, rtz # perform operation
fnmsub.s f26, f29, f6, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f26, f29, f6, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f26, f29, f6, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f26, f29, f6, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f26, f29, f6, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f26, f29, f6, f18 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0x7f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f22, 0(x2) # load 0x3fc00000 from memory into f22
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f8, 0(x2) # load 0x7f800000 from memory into f8
la x2, scratch
li x3, 0x8cab1494 # load x3 with value 0x8cab1494
sw x3, 0(x2) # store 0x8cab1494 in memory
flw f26, 0(x2) # load 0x8cab1494 from memory into f26
fnmsub.s f21, f22, f8, f26, dyn # perform operation
fnmsub.s f21, f22, f8, f26, rdn # perform operation
fnmsub.s f21, f22, f8, f26, rmm # perform operation
fnmsub.s f21, f22, f8, f26, rne # perform operation
fnmsub.s f21, f22, f8, f26, rtz # perform operation
fnmsub.s f21, f22, f8, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f21, f22, f8, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f21, f22, f8, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f21, f22, f8, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f21, f22, f8, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f21, f22, f8, f26 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0xff800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f29, 0(x2) # load 0x3fc00000 from memory into f29
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f31, 0(x2) # load 0xff800000 from memory into f31
la x2, scratch
li x3, 0xbbafba30 # load x3 with value 0xbbafba30
sw x3, 0(x2) # store 0xbbafba30 in memory
flw f28, 0(x2) # load 0xbbafba30 from memory into f28
fnmsub.s f7, f29, f31, f28, dyn # perform operation
fnmsub.s f7, f29, f31, f28, rdn # perform operation
fnmsub.s f7, f29, f31, f28, rmm # perform operation
fnmsub.s f7, f29, f31, f28, rne # perform operation
fnmsub.s f7, f29, f31, f28, rtz # perform operation
fnmsub.s f7, f29, f31, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f7, f29, f31, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f7, f29, f31, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f7, f29, f31, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f7, f29, f31, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f7, f29, f31, f28 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0x7fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f16, 0(x2) # load 0x3fc00000 from memory into f16
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f26, 0(x2) # load 0x7fc00000 from memory into f26
la x2, scratch
li x3, 0x9992c92e # load x3 with value 0x9992c92e
sw x3, 0(x2) # store 0x9992c92e in memory
flw f19, 0(x2) # load 0x9992c92e from memory into f19
fnmsub.s f3, f16, f26, f19, dyn # perform operation
fnmsub.s f3, f16, f26, f19, rdn # perform operation
fnmsub.s f3, f16, f26, f19, rmm # perform operation
fnmsub.s f3, f16, f26, f19, rne # perform operation
fnmsub.s f3, f16, f26, f19, rtz # perform operation
fnmsub.s f3, f16, f26, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f3, f16, f26, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f3, f16, f26, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f3, f16, f26, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f3, f16, f26, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f3, f16, f26, f19 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0x7fffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f30, 0(x2) # load 0x3fc00000 from memory into f30
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f13, 0(x2) # load 0x7fffffff from memory into f13
la x2, scratch
li x3, 0xd02d1c53 # load x3 with value 0xd02d1c53
sw x3, 0(x2) # store 0xd02d1c53 in memory
flw f5, 0(x2) # load 0xd02d1c53 from memory into f5
fnmsub.s f7, f30, f13, f5, dyn # perform operation
fnmsub.s f7, f30, f13, f5, rdn # perform operation
fnmsub.s f7, f30, f13, f5, rmm # perform operation
fnmsub.s f7, f30, f13, f5, rne # perform operation
fnmsub.s f7, f30, f13, f5, rtz # perform operation
fnmsub.s f7, f30, f13, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f7, f30, f13, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f7, f30, f13, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f7, f30, f13, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f7, f30, f13, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f7, f30, f13, f5 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0xffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f1, 0(x2) # load 0x3fc00000 from memory into f1
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f9, 0(x2) # load 0xffffffff from memory into f9
la x2, scratch
li x3, 0xe3962f68 # load x3 with value 0xe3962f68
sw x3, 0(x2) # store 0xe3962f68 in memory
flw f17, 0(x2) # load 0xe3962f68 from memory into f17
fnmsub.s f14, f1, f9, f17, dyn # perform operation
fnmsub.s f14, f1, f9, f17, rdn # perform operation
fnmsub.s f14, f1, f9, f17, rmm # perform operation
fnmsub.s f14, f1, f9, f17, rne # perform operation
fnmsub.s f14, f1, f9, f17, rtz # perform operation
fnmsub.s f14, f1, f9, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f14, f1, f9, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f14, f1, f9, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f14, f1, f9, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f14, f1, f9, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f14, f1, f9, f17 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0x7f800001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f6, 0(x2) # load 0x3fc00000 from memory into f6
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f7, 0(x2) # load 0x7f800001 from memory into f7
la x2, scratch
li x3, 0x1e26d9b8 # load x3 with value 0x1e26d9b8
sw x3, 0(x2) # store 0x1e26d9b8 in memory
flw f11, 0(x2) # load 0x1e26d9b8 from memory into f11
fnmsub.s f3, f6, f7, f11, dyn # perform operation
fnmsub.s f3, f6, f7, f11, rdn # perform operation
fnmsub.s f3, f6, f7, f11, rmm # perform operation
fnmsub.s f3, f6, f7, f11, rne # perform operation
fnmsub.s f3, f6, f7, f11, rtz # perform operation
fnmsub.s f3, f6, f7, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f3, f6, f7, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f3, f6, f7, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f3, f6, f7, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f3, f6, f7, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f3, f6, f7, f11 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0x7fbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f17, 0(x2) # load 0x3fc00000 from memory into f17
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f3, 0(x2) # load 0x7fbfffff from memory into f3
la x2, scratch
li x3, 0x09bafe4a # load x3 with value 0x09bafe4a
sw x3, 0(x2) # store 0x09bafe4a in memory
flw f28, 0(x2) # load 0x09bafe4a from memory into f28
fnmsub.s f30, f17, f3, f28, dyn # perform operation
fnmsub.s f30, f17, f3, f28, rdn # perform operation
fnmsub.s f30, f17, f3, f28, rmm # perform operation
fnmsub.s f30, f17, f3, f28, rne # perform operation
fnmsub.s f30, f17, f3, f28, rtz # perform operation
fnmsub.s f30, f17, f3, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f30, f17, f3, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f30, f17, f3, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f30, f17, f3, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f30, f17, f3, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f30, f17, f3, f28 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0xffbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f28, 0(x2) # load 0x3fc00000 from memory into f28
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f16, 0(x2) # load 0xffbfffff from memory into f16
la x2, scratch
li x3, 0x4764094b # load x3 with value 0x4764094b
sw x3, 0(x2) # store 0x4764094b in memory
flw f20, 0(x2) # load 0x4764094b from memory into f20
fnmsub.s f8, f28, f16, f20, dyn # perform operation
fnmsub.s f8, f28, f16, f20, rdn # perform operation
fnmsub.s f8, f28, f16, f20, rmm # perform operation
fnmsub.s f8, f28, f16, f20, rne # perform operation
fnmsub.s f8, f28, f16, f20, rtz # perform operation
fnmsub.s f8, f28, f16, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f8, f28, f16, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f8, f28, f16, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f8, f28, f16, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f8, f28, f16, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f8, f28, f16, f20 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0x7ef8654f)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f22, 0(x2) # load 0x3fc00000 from memory into f22
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f18, 0(x2) # load 0x7ef8654f from memory into f18
la x2, scratch
li x3, 0x404ffcdf # load x3 with value 0x404ffcdf
sw x3, 0(x2) # store 0x404ffcdf in memory
flw f26, 0(x2) # load 0x404ffcdf from memory into f26
fnmsub.s f23, f22, f18, f26, dyn # perform operation
fnmsub.s f23, f22, f18, f26, rdn # perform operation
fnmsub.s f23, f22, f18, f26, rmm # perform operation
fnmsub.s f23, f22, f18, f26, rne # perform operation
fnmsub.s f23, f22, f18, f26, rtz # perform operation
fnmsub.s f23, f22, f18, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f23, f22, f18, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f23, f22, f18, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f23, f22, f18, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f23, f22, f18, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f23, f22, f18, f26 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0x813d9ab0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f14, 0(x2) # load 0x3fc00000 from memory into f14
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f1, 0(x2) # load 0x813d9ab0 from memory into f1
la x2, scratch
li x3, 0x16075db9 # load x3 with value 0x16075db9
sw x3, 0(x2) # store 0x16075db9 in memory
flw f21, 0(x2) # load 0x16075db9 from memory into f21
fnmsub.s f15, f14, f1, f21, dyn # perform operation
fnmsub.s f15, f14, f1, f21, rdn # perform operation
fnmsub.s f15, f14, f1, f21, rmm # perform operation
fnmsub.s f15, f14, f1, f21, rne # perform operation
fnmsub.s f15, f14, f1, f21, rtz # perform operation
fnmsub.s f15, f14, f1, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f15, f14, f1, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f15, f14, f1, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f15, f14, f1, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f15, f14, f1, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f15, f14, f1, f21 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0x0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f27, 0(x2) # load 0xbfc00000 from memory into f27
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f26, 0(x2) # load 0x00000000 from memory into f26
la x2, scratch
li x3, 0x0040ecb0 # load x3 with value 0x0040ecb0
sw x3, 0(x2) # store 0x0040ecb0 in memory
flw f15, 0(x2) # load 0x0040ecb0 from memory into f15
fnmsub.s f13, f27, f26, f15, dyn # perform operation
fnmsub.s f13, f27, f26, f15, rdn # perform operation
fnmsub.s f13, f27, f26, f15, rmm # perform operation
fnmsub.s f13, f27, f26, f15, rne # perform operation
fnmsub.s f13, f27, f26, f15, rtz # perform operation
fnmsub.s f13, f27, f26, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f13, f27, f26, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f13, f27, f26, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f13, f27, f26, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f13, f27, f26, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f13, f27, f26, f15 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0x80000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f12, 0(x2) # load 0xbfc00000 from memory into f12
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f14, 0(x2) # load 0x80000000 from memory into f14
la x2, scratch
li x3, 0xb077b256 # load x3 with value 0xb077b256
sw x3, 0(x2) # store 0xb077b256 in memory
flw f24, 0(x2) # load 0xb077b256 from memory into f24
fnmsub.s f29, f12, f14, f24, dyn # perform operation
fnmsub.s f29, f12, f14, f24, rdn # perform operation
fnmsub.s f29, f12, f14, f24, rmm # perform operation
fnmsub.s f29, f12, f14, f24, rne # perform operation
fnmsub.s f29, f12, f14, f24, rtz # perform operation
fnmsub.s f29, f12, f14, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f29, f12, f14, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f29, f12, f14, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f29, f12, f14, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f29, f12, f14, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f29, f12, f14, f24 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0x3f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f15, 0(x2) # load 0xbfc00000 from memory into f15
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f10, 0(x2) # load 0x3f800000 from memory into f10
la x2, scratch
li x3, 0x15ce3601 # load x3 with value 0x15ce3601
sw x3, 0(x2) # store 0x15ce3601 in memory
flw f14, 0(x2) # load 0x15ce3601 from memory into f14
fnmsub.s f7, f15, f10, f14, dyn # perform operation
fnmsub.s f7, f15, f10, f14, rdn # perform operation
fnmsub.s f7, f15, f10, f14, rmm # perform operation
fnmsub.s f7, f15, f10, f14, rne # perform operation
fnmsub.s f7, f15, f10, f14, rtz # perform operation
fnmsub.s f7, f15, f10, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f7, f15, f10, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f7, f15, f10, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f7, f15, f10, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f7, f15, f10, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f7, f15, f10, f14 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0xbf800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f12, 0(x2) # load 0xbfc00000 from memory into f12
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f18, 0(x2) # load 0xbf800000 from memory into f18
la x2, scratch
li x3, 0x07df5c44 # load x3 with value 0x07df5c44
sw x3, 0(x2) # store 0x07df5c44 in memory
flw f20, 0(x2) # load 0x07df5c44 from memory into f20
fnmsub.s f28, f12, f18, f20, dyn # perform operation
fnmsub.s f28, f12, f18, f20, rdn # perform operation
fnmsub.s f28, f12, f18, f20, rmm # perform operation
fnmsub.s f28, f12, f18, f20, rne # perform operation
fnmsub.s f28, f12, f18, f20, rtz # perform operation
fnmsub.s f28, f12, f18, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f28, f12, f18, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f28, f12, f18, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f28, f12, f18, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f28, f12, f18, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f28, f12, f18, f20 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0x3fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f19, 0(x2) # load 0xbfc00000 from memory into f19
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f6, 0(x2) # load 0x3fc00000 from memory into f6
la x2, scratch
li x3, 0x0d958a1d # load x3 with value 0x0d958a1d
sw x3, 0(x2) # store 0x0d958a1d in memory
flw f27, 0(x2) # load 0x0d958a1d from memory into f27
fnmsub.s f5, f19, f6, f27, dyn # perform operation
fnmsub.s f5, f19, f6, f27, rdn # perform operation
fnmsub.s f5, f19, f6, f27, rmm # perform operation
fnmsub.s f5, f19, f6, f27, rne # perform operation
fnmsub.s f5, f19, f6, f27, rtz # perform operation
fnmsub.s f5, f19, f6, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f5, f19, f6, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f5, f19, f6, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f5, f19, f6, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f5, f19, f6, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f5, f19, f6, f27 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0xbfc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f9, 0(x2) # load 0xbfc00000 from memory into f9
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f13, 0(x2) # load 0xbfc00000 from memory into f13
la x2, scratch
li x3, 0x13e6102b # load x3 with value 0x13e6102b
sw x3, 0(x2) # store 0x13e6102b in memory
flw f15, 0(x2) # load 0x13e6102b from memory into f15
fnmsub.s f27, f9, f13, f15, dyn # perform operation
fnmsub.s f27, f9, f13, f15, rdn # perform operation
fnmsub.s f27, f9, f13, f15, rmm # perform operation
fnmsub.s f27, f9, f13, f15, rne # perform operation
fnmsub.s f27, f9, f13, f15, rtz # perform operation
fnmsub.s f27, f9, f13, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f27, f9, f13, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f27, f9, f13, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f27, f9, f13, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f27, f9, f13, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f27, f9, f13, f15 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0x40000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f7, 0(x2) # load 0xbfc00000 from memory into f7
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f24, 0(x2) # load 0x40000000 from memory into f24
la x2, scratch
li x3, 0xc7649d36 # load x3 with value 0xc7649d36
sw x3, 0(x2) # store 0xc7649d36 in memory
flw f25, 0(x2) # load 0xc7649d36 from memory into f25
fnmsub.s f21, f7, f24, f25, dyn # perform operation
fnmsub.s f21, f7, f24, f25, rdn # perform operation
fnmsub.s f21, f7, f24, f25, rmm # perform operation
fnmsub.s f21, f7, f24, f25, rne # perform operation
fnmsub.s f21, f7, f24, f25, rtz # perform operation
fnmsub.s f21, f7, f24, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f21, f7, f24, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f21, f7, f24, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f21, f7, f24, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f21, f7, f24, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f21, f7, f24, f25 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0xc0000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f10, 0(x2) # load 0xbfc00000 from memory into f10
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f20, 0(x2) # load 0xc0000000 from memory into f20
la x2, scratch
li x3, 0x56574fa5 # load x3 with value 0x56574fa5
sw x3, 0(x2) # store 0x56574fa5 in memory
flw f2, 0(x2) # load 0x56574fa5 from memory into f2
fnmsub.s f8, f10, f20, f2, dyn # perform operation
fnmsub.s f8, f10, f20, f2, rdn # perform operation
fnmsub.s f8, f10, f20, f2, rmm # perform operation
fnmsub.s f8, f10, f20, f2, rne # perform operation
fnmsub.s f8, f10, f20, f2, rtz # perform operation
fnmsub.s f8, f10, f20, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f8, f10, f20, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f8, f10, f20, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f8, f10, f20, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f8, f10, f20, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f8, f10, f20, f2 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0x800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f27, 0(x2) # load 0xbfc00000 from memory into f27
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f8, 0(x2) # load 0x00800000 from memory into f8
la x2, scratch
li x3, 0x9e97dd14 # load x3 with value 0x9e97dd14
sw x3, 0(x2) # store 0x9e97dd14 in memory
flw f12, 0(x2) # load 0x9e97dd14 from memory into f12
fnmsub.s f5, f27, f8, f12, dyn # perform operation
fnmsub.s f5, f27, f8, f12, rdn # perform operation
fnmsub.s f5, f27, f8, f12, rmm # perform operation
fnmsub.s f5, f27, f8, f12, rne # perform operation
fnmsub.s f5, f27, f8, f12, rtz # perform operation
fnmsub.s f5, f27, f8, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f5, f27, f8, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f5, f27, f8, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f5, f27, f8, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f5, f27, f8, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f5, f27, f8, f12 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0x80800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f8, 0(x2) # load 0xbfc00000 from memory into f8
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f24, 0(x2) # load 0x80800000 from memory into f24
la x2, scratch
li x3, 0xfb714595 # load x3 with value 0xfb714595
sw x3, 0(x2) # store 0xfb714595 in memory
flw f3, 0(x2) # load 0xfb714595 from memory into f3
fnmsub.s f15, f8, f24, f3, dyn # perform operation
fnmsub.s f15, f8, f24, f3, rdn # perform operation
fnmsub.s f15, f8, f24, f3, rmm # perform operation
fnmsub.s f15, f8, f24, f3, rne # perform operation
fnmsub.s f15, f8, f24, f3, rtz # perform operation
fnmsub.s f15, f8, f24, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f15, f8, f24, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f15, f8, f24, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f15, f8, f24, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f15, f8, f24, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f15, f8, f24, f3 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0x7f7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f7, 0(x2) # load 0xbfc00000 from memory into f7
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f20, 0(x2) # load 0x7f7fffff from memory into f20
la x2, scratch
li x3, 0x823a6c72 # load x3 with value 0x823a6c72
sw x3, 0(x2) # store 0x823a6c72 in memory
flw f22, 0(x2) # load 0x823a6c72 from memory into f22
fnmsub.s f9, f7, f20, f22, dyn # perform operation
fnmsub.s f9, f7, f20, f22, rdn # perform operation
fnmsub.s f9, f7, f20, f22, rmm # perform operation
fnmsub.s f9, f7, f20, f22, rne # perform operation
fnmsub.s f9, f7, f20, f22, rtz # perform operation
fnmsub.s f9, f7, f20, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f9, f7, f20, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f9, f7, f20, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f9, f7, f20, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f9, f7, f20, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f9, f7, f20, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0xff7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f24, 0(x2) # load 0xbfc00000 from memory into f24
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f7, 0(x2) # load 0xff7fffff from memory into f7
la x2, scratch
li x3, 0x1a502d5c # load x3 with value 0x1a502d5c
sw x3, 0(x2) # store 0x1a502d5c in memory
flw f30, 0(x2) # load 0x1a502d5c from memory into f30
fnmsub.s f12, f24, f7, f30, dyn # perform operation
fnmsub.s f12, f24, f7, f30, rdn # perform operation
fnmsub.s f12, f24, f7, f30, rmm # perform operation
fnmsub.s f12, f24, f7, f30, rne # perform operation
fnmsub.s f12, f24, f7, f30, rtz # perform operation
fnmsub.s f12, f24, f7, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f12, f24, f7, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f12, f24, f7, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f12, f24, f7, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f12, f24, f7, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f12, f24, f7, f30 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0x7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f5, 0(x2) # load 0xbfc00000 from memory into f5
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f17, 0(x2) # load 0x007fffff from memory into f17
la x2, scratch
li x3, 0x291a6074 # load x3 with value 0x291a6074
sw x3, 0(x2) # store 0x291a6074 in memory
flw f27, 0(x2) # load 0x291a6074 from memory into f27
fnmsub.s f9, f5, f17, f27, dyn # perform operation
fnmsub.s f9, f5, f17, f27, rdn # perform operation
fnmsub.s f9, f5, f17, f27, rmm # perform operation
fnmsub.s f9, f5, f17, f27, rne # perform operation
fnmsub.s f9, f5, f17, f27, rtz # perform operation
fnmsub.s f9, f5, f17, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f9, f5, f17, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f9, f5, f17, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f9, f5, f17, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f9, f5, f17, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f9, f5, f17, f27 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0x807fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f29, 0(x2) # load 0xbfc00000 from memory into f29
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f18, 0(x2) # load 0x807fffff from memory into f18
la x2, scratch
li x3, 0xa2c79f51 # load x3 with value 0xa2c79f51
sw x3, 0(x2) # store 0xa2c79f51 in memory
flw f11, 0(x2) # load 0xa2c79f51 from memory into f11
fnmsub.s f25, f29, f18, f11, dyn # perform operation
fnmsub.s f25, f29, f18, f11, rdn # perform operation
fnmsub.s f25, f29, f18, f11, rmm # perform operation
fnmsub.s f25, f29, f18, f11, rne # perform operation
fnmsub.s f25, f29, f18, f11, rtz # perform operation
fnmsub.s f25, f29, f18, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f25, f29, f18, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f25, f29, f18, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f25, f29, f18, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f25, f29, f18, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f25, f29, f18, f11 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0x400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f27, 0(x2) # load 0xbfc00000 from memory into f27
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f18, 0(x2) # load 0x00400000 from memory into f18
la x2, scratch
li x3, 0xf410bfa2 # load x3 with value 0xf410bfa2
sw x3, 0(x2) # store 0xf410bfa2 in memory
flw f12, 0(x2) # load 0xf410bfa2 from memory into f12
fnmsub.s f16, f27, f18, f12, dyn # perform operation
fnmsub.s f16, f27, f18, f12, rdn # perform operation
fnmsub.s f16, f27, f18, f12, rmm # perform operation
fnmsub.s f16, f27, f18, f12, rne # perform operation
fnmsub.s f16, f27, f18, f12, rtz # perform operation
fnmsub.s f16, f27, f18, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f16, f27, f18, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f16, f27, f18, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f16, f27, f18, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f16, f27, f18, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f16, f27, f18, f12 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0x80400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f6, 0(x2) # load 0xbfc00000 from memory into f6
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f7, 0(x2) # load 0x80400000 from memory into f7
la x2, scratch
li x3, 0xd243a390 # load x3 with value 0xd243a390
sw x3, 0(x2) # store 0xd243a390 in memory
flw f17, 0(x2) # load 0xd243a390 from memory into f17
fnmsub.s f22, f6, f7, f17, dyn # perform operation
fnmsub.s f22, f6, f7, f17, rdn # perform operation
fnmsub.s f22, f6, f7, f17, rmm # perform operation
fnmsub.s f22, f6, f7, f17, rne # perform operation
fnmsub.s f22, f6, f7, f17, rtz # perform operation
fnmsub.s f22, f6, f7, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f22, f6, f7, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f22, f6, f7, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f22, f6, f7, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f22, f6, f7, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f22, f6, f7, f17 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0x1)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f17, 0(x2) # load 0xbfc00000 from memory into f17
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f30, 0(x2) # load 0x00000001 from memory into f30
la x2, scratch
li x3, 0xba4c6c4f # load x3 with value 0xba4c6c4f
sw x3, 0(x2) # store 0xba4c6c4f in memory
flw f9, 0(x2) # load 0xba4c6c4f from memory into f9
fnmsub.s f1, f17, f30, f9, dyn # perform operation
fnmsub.s f1, f17, f30, f9, rdn # perform operation
fnmsub.s f1, f17, f30, f9, rmm # perform operation
fnmsub.s f1, f17, f30, f9, rne # perform operation
fnmsub.s f1, f17, f30, f9, rtz # perform operation
fnmsub.s f1, f17, f30, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f1, f17, f30, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f1, f17, f30, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f1, f17, f30, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f1, f17, f30, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f1, f17, f30, f9 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0x80000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f12, 0(x2) # load 0xbfc00000 from memory into f12
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f27, 0(x2) # load 0x80000001 from memory into f27
la x2, scratch
li x3, 0x7d7bbedf # load x3 with value 0x7d7bbedf
sw x3, 0(x2) # store 0x7d7bbedf in memory
flw f19, 0(x2) # load 0x7d7bbedf from memory into f19
fnmsub.s f21, f12, f27, f19, dyn # perform operation
fnmsub.s f21, f12, f27, f19, rdn # perform operation
fnmsub.s f21, f12, f27, f19, rmm # perform operation
fnmsub.s f21, f12, f27, f19, rne # perform operation
fnmsub.s f21, f12, f27, f19, rtz # perform operation
fnmsub.s f21, f12, f27, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f21, f12, f27, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f21, f12, f27, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f21, f12, f27, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f21, f12, f27, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f21, f12, f27, f19 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0x7f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f5, 0(x2) # load 0xbfc00000 from memory into f5
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f24, 0(x2) # load 0x7f800000 from memory into f24
la x2, scratch
li x3, 0x733e5ecb # load x3 with value 0x733e5ecb
sw x3, 0(x2) # store 0x733e5ecb in memory
flw f23, 0(x2) # load 0x733e5ecb from memory into f23
fnmsub.s f7, f5, f24, f23, dyn # perform operation
fnmsub.s f7, f5, f24, f23, rdn # perform operation
fnmsub.s f7, f5, f24, f23, rmm # perform operation
fnmsub.s f7, f5, f24, f23, rne # perform operation
fnmsub.s f7, f5, f24, f23, rtz # perform operation
fnmsub.s f7, f5, f24, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f7, f5, f24, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f7, f5, f24, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f7, f5, f24, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f7, f5, f24, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f7, f5, f24, f23 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0xff800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f14, 0(x2) # load 0xbfc00000 from memory into f14
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f1, 0(x2) # load 0xff800000 from memory into f1
la x2, scratch
li x3, 0xe09da6ae # load x3 with value 0xe09da6ae
sw x3, 0(x2) # store 0xe09da6ae in memory
flw f24, 0(x2) # load 0xe09da6ae from memory into f24
fnmsub.s f16, f14, f1, f24, dyn # perform operation
fnmsub.s f16, f14, f1, f24, rdn # perform operation
fnmsub.s f16, f14, f1, f24, rmm # perform operation
fnmsub.s f16, f14, f1, f24, rne # perform operation
fnmsub.s f16, f14, f1, f24, rtz # perform operation
fnmsub.s f16, f14, f1, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f16, f14, f1, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f16, f14, f1, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f16, f14, f1, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f16, f14, f1, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f16, f14, f1, f24 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0x7fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f3, 0(x2) # load 0xbfc00000 from memory into f3
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f17, 0(x2) # load 0x7fc00000 from memory into f17
la x2, scratch
li x3, 0xe5ace10d # load x3 with value 0xe5ace10d
sw x3, 0(x2) # store 0xe5ace10d in memory
flw f5, 0(x2) # load 0xe5ace10d from memory into f5
fnmsub.s f16, f3, f17, f5, dyn # perform operation
fnmsub.s f16, f3, f17, f5, rdn # perform operation
fnmsub.s f16, f3, f17, f5, rmm # perform operation
fnmsub.s f16, f3, f17, f5, rne # perform operation
fnmsub.s f16, f3, f17, f5, rtz # perform operation
fnmsub.s f16, f3, f17, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f16, f3, f17, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f16, f3, f17, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f16, f3, f17, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f16, f3, f17, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f16, f3, f17, f5 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0x7fffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f19, 0(x2) # load 0xbfc00000 from memory into f19
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f16, 0(x2) # load 0x7fffffff from memory into f16
la x2, scratch
li x3, 0x24e785c8 # load x3 with value 0x24e785c8
sw x3, 0(x2) # store 0x24e785c8 in memory
flw f24, 0(x2) # load 0x24e785c8 from memory into f24
fnmsub.s f12, f19, f16, f24, dyn # perform operation
fnmsub.s f12, f19, f16, f24, rdn # perform operation
fnmsub.s f12, f19, f16, f24, rmm # perform operation
fnmsub.s f12, f19, f16, f24, rne # perform operation
fnmsub.s f12, f19, f16, f24, rtz # perform operation
fnmsub.s f12, f19, f16, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f12, f19, f16, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f12, f19, f16, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f12, f19, f16, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f12, f19, f16, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f12, f19, f16, f24 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0xffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f24, 0(x2) # load 0xbfc00000 from memory into f24
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f27, 0(x2) # load 0xffffffff from memory into f27
la x2, scratch
li x3, 0x8b0223e1 # load x3 with value 0x8b0223e1
sw x3, 0(x2) # store 0x8b0223e1 in memory
flw f3, 0(x2) # load 0x8b0223e1 from memory into f3
fnmsub.s f10, f24, f27, f3, dyn # perform operation
fnmsub.s f10, f24, f27, f3, rdn # perform operation
fnmsub.s f10, f24, f27, f3, rmm # perform operation
fnmsub.s f10, f24, f27, f3, rne # perform operation
fnmsub.s f10, f24, f27, f3, rtz # perform operation
fnmsub.s f10, f24, f27, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f10, f24, f27, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f10, f24, f27, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f10, f24, f27, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f10, f24, f27, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f10, f24, f27, f3 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0x7f800001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f31, 0(x2) # load 0xbfc00000 from memory into f31
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f9, 0(x2) # load 0x7f800001 from memory into f9
la x2, scratch
li x3, 0xfda78b10 # load x3 with value 0xfda78b10
sw x3, 0(x2) # store 0xfda78b10 in memory
flw f10, 0(x2) # load 0xfda78b10 from memory into f10
fnmsub.s f13, f31, f9, f10, dyn # perform operation
fnmsub.s f13, f31, f9, f10, rdn # perform operation
fnmsub.s f13, f31, f9, f10, rmm # perform operation
fnmsub.s f13, f31, f9, f10, rne # perform operation
fnmsub.s f13, f31, f9, f10, rtz # perform operation
fnmsub.s f13, f31, f9, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f13, f31, f9, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f13, f31, f9, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f13, f31, f9, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f13, f31, f9, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f13, f31, f9, f10 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0x7fbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f28, 0(x2) # load 0xbfc00000 from memory into f28
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f25, 0(x2) # load 0x7fbfffff from memory into f25
la x2, scratch
li x3, 0x6fc3eeaf # load x3 with value 0x6fc3eeaf
sw x3, 0(x2) # store 0x6fc3eeaf in memory
flw f3, 0(x2) # load 0x6fc3eeaf from memory into f3
fnmsub.s f17, f28, f25, f3, dyn # perform operation
fnmsub.s f17, f28, f25, f3, rdn # perform operation
fnmsub.s f17, f28, f25, f3, rmm # perform operation
fnmsub.s f17, f28, f25, f3, rne # perform operation
fnmsub.s f17, f28, f25, f3, rtz # perform operation
fnmsub.s f17, f28, f25, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f17, f28, f25, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f17, f28, f25, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f17, f28, f25, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f17, f28, f25, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f17, f28, f25, f3 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0xffbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f17, 0(x2) # load 0xbfc00000 from memory into f17
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f18, 0(x2) # load 0xffbfffff from memory into f18
la x2, scratch
li x3, 0x31248dc0 # load x3 with value 0x31248dc0
sw x3, 0(x2) # store 0x31248dc0 in memory
flw f16, 0(x2) # load 0x31248dc0 from memory into f16
fnmsub.s f9, f17, f18, f16, dyn # perform operation
fnmsub.s f9, f17, f18, f16, rdn # perform operation
fnmsub.s f9, f17, f18, f16, rmm # perform operation
fnmsub.s f9, f17, f18, f16, rne # perform operation
fnmsub.s f9, f17, f18, f16, rtz # perform operation
fnmsub.s f9, f17, f18, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f9, f17, f18, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f9, f17, f18, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f9, f17, f18, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f9, f17, f18, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f9, f17, f18, f16 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0x7ef8654f)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f1, 0(x2) # load 0xbfc00000 from memory into f1
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f22, 0(x2) # load 0x7ef8654f from memory into f22
la x2, scratch
li x3, 0x3987c6d5 # load x3 with value 0x3987c6d5
sw x3, 0(x2) # store 0x3987c6d5 in memory
flw f9, 0(x2) # load 0x3987c6d5 from memory into f9
fnmsub.s f10, f1, f22, f9, dyn # perform operation
fnmsub.s f10, f1, f22, f9, rdn # perform operation
fnmsub.s f10, f1, f22, f9, rmm # perform operation
fnmsub.s f10, f1, f22, f9, rne # perform operation
fnmsub.s f10, f1, f22, f9, rtz # perform operation
fnmsub.s f10, f1, f22, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f10, f1, f22, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f10, f1, f22, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f10, f1, f22, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f10, f1, f22, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f10, f1, f22, f9 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0x813d9ab0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f6, 0(x2) # load 0xbfc00000 from memory into f6
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f23, 0(x2) # load 0x813d9ab0 from memory into f23
la x2, scratch
li x3, 0xc61bc8bd # load x3 with value 0xc61bc8bd
sw x3, 0(x2) # store 0xc61bc8bd in memory
flw f30, 0(x2) # load 0xc61bc8bd from memory into f30
fnmsub.s f16, f6, f23, f30, dyn # perform operation
fnmsub.s f16, f6, f23, f30, rdn # perform operation
fnmsub.s f16, f6, f23, f30, rmm # perform operation
fnmsub.s f16, f6, f23, f30, rne # perform operation
fnmsub.s f16, f6, f23, f30, rtz # perform operation
fnmsub.s f16, f6, f23, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f16, f6, f23, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f16, f6, f23, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f16, f6, f23, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f16, f6, f23, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f16, f6, f23, f30 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0x0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f11, 0(x2) # load 0x40000000 from memory into f11
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f19, 0(x2) # load 0x00000000 from memory into f19
la x2, scratch
li x3, 0xebf8465f # load x3 with value 0xebf8465f
sw x3, 0(x2) # store 0xebf8465f in memory
flw f28, 0(x2) # load 0xebf8465f from memory into f28
fnmsub.s f22, f11, f19, f28, dyn # perform operation
fnmsub.s f22, f11, f19, f28, rdn # perform operation
fnmsub.s f22, f11, f19, f28, rmm # perform operation
fnmsub.s f22, f11, f19, f28, rne # perform operation
fnmsub.s f22, f11, f19, f28, rtz # perform operation
fnmsub.s f22, f11, f19, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f22, f11, f19, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f22, f11, f19, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f22, f11, f19, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f22, f11, f19, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f22, f11, f19, f28 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0x80000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f1, 0(x2) # load 0x40000000 from memory into f1
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f2, 0(x2) # load 0x80000000 from memory into f2
la x2, scratch
li x3, 0xd8896fda # load x3 with value 0xd8896fda
sw x3, 0(x2) # store 0xd8896fda in memory
flw f8, 0(x2) # load 0xd8896fda from memory into f8
fnmsub.s f6, f1, f2, f8, dyn # perform operation
fnmsub.s f6, f1, f2, f8, rdn # perform operation
fnmsub.s f6, f1, f2, f8, rmm # perform operation
fnmsub.s f6, f1, f2, f8, rne # perform operation
fnmsub.s f6, f1, f2, f8, rtz # perform operation
fnmsub.s f6, f1, f2, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f6, f1, f2, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f6, f1, f2, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f6, f1, f2, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f6, f1, f2, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f6, f1, f2, f8 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0x3f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f27, 0(x2) # load 0x40000000 from memory into f27
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f2, 0(x2) # load 0x3f800000 from memory into f2
la x2, scratch
li x3, 0xb14dc007 # load x3 with value 0xb14dc007
sw x3, 0(x2) # store 0xb14dc007 in memory
flw f23, 0(x2) # load 0xb14dc007 from memory into f23
fnmsub.s f5, f27, f2, f23, dyn # perform operation
fnmsub.s f5, f27, f2, f23, rdn # perform operation
fnmsub.s f5, f27, f2, f23, rmm # perform operation
fnmsub.s f5, f27, f2, f23, rne # perform operation
fnmsub.s f5, f27, f2, f23, rtz # perform operation
fnmsub.s f5, f27, f2, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f5, f27, f2, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f5, f27, f2, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f5, f27, f2, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f5, f27, f2, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f5, f27, f2, f23 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0xbf800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f12, 0(x2) # load 0x40000000 from memory into f12
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f26, 0(x2) # load 0xbf800000 from memory into f26
la x2, scratch
li x3, 0x8c8db600 # load x3 with value 0x8c8db600
sw x3, 0(x2) # store 0x8c8db600 in memory
flw f27, 0(x2) # load 0x8c8db600 from memory into f27
fnmsub.s f5, f12, f26, f27, dyn # perform operation
fnmsub.s f5, f12, f26, f27, rdn # perform operation
fnmsub.s f5, f12, f26, f27, rmm # perform operation
fnmsub.s f5, f12, f26, f27, rne # perform operation
fnmsub.s f5, f12, f26, f27, rtz # perform operation
fnmsub.s f5, f12, f26, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f5, f12, f26, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f5, f12, f26, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f5, f12, f26, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f5, f12, f26, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f5, f12, f26, f27 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0x3fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f8, 0(x2) # load 0x40000000 from memory into f8
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f7, 0(x2) # load 0x3fc00000 from memory into f7
la x2, scratch
li x3, 0x76bf06fa # load x3 with value 0x76bf06fa
sw x3, 0(x2) # store 0x76bf06fa in memory
flw f12, 0(x2) # load 0x76bf06fa from memory into f12
fnmsub.s f26, f8, f7, f12, dyn # perform operation
fnmsub.s f26, f8, f7, f12, rdn # perform operation
fnmsub.s f26, f8, f7, f12, rmm # perform operation
fnmsub.s f26, f8, f7, f12, rne # perform operation
fnmsub.s f26, f8, f7, f12, rtz # perform operation
fnmsub.s f26, f8, f7, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f26, f8, f7, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f26, f8, f7, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f26, f8, f7, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f26, f8, f7, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f26, f8, f7, f12 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0xbfc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f14, 0(x2) # load 0x40000000 from memory into f14
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f29, 0(x2) # load 0xbfc00000 from memory into f29
la x2, scratch
li x3, 0x6b803652 # load x3 with value 0x6b803652
sw x3, 0(x2) # store 0x6b803652 in memory
flw f11, 0(x2) # load 0x6b803652 from memory into f11
fnmsub.s f15, f14, f29, f11, dyn # perform operation
fnmsub.s f15, f14, f29, f11, rdn # perform operation
fnmsub.s f15, f14, f29, f11, rmm # perform operation
fnmsub.s f15, f14, f29, f11, rne # perform operation
fnmsub.s f15, f14, f29, f11, rtz # perform operation
fnmsub.s f15, f14, f29, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f15, f14, f29, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f15, f14, f29, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f15, f14, f29, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f15, f14, f29, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f15, f14, f29, f11 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0x40000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f23, 0(x2) # load 0x40000000 from memory into f23
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f20, 0(x2) # load 0x40000000 from memory into f20
la x2, scratch
li x3, 0xdec7d781 # load x3 with value 0xdec7d781
sw x3, 0(x2) # store 0xdec7d781 in memory
flw f11, 0(x2) # load 0xdec7d781 from memory into f11
fnmsub.s f2, f23, f20, f11, dyn # perform operation
fnmsub.s f2, f23, f20, f11, rdn # perform operation
fnmsub.s f2, f23, f20, f11, rmm # perform operation
fnmsub.s f2, f23, f20, f11, rne # perform operation
fnmsub.s f2, f23, f20, f11, rtz # perform operation
fnmsub.s f2, f23, f20, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f2, f23, f20, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f2, f23, f20, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f2, f23, f20, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f2, f23, f20, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f2, f23, f20, f11 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0xc0000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f23, 0(x2) # load 0x40000000 from memory into f23
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f5, 0(x2) # load 0xc0000000 from memory into f5
la x2, scratch
li x3, 0x83911ec2 # load x3 with value 0x83911ec2
sw x3, 0(x2) # store 0x83911ec2 in memory
flw f11, 0(x2) # load 0x83911ec2 from memory into f11
fnmsub.s f7, f23, f5, f11, dyn # perform operation
fnmsub.s f7, f23, f5, f11, rdn # perform operation
fnmsub.s f7, f23, f5, f11, rmm # perform operation
fnmsub.s f7, f23, f5, f11, rne # perform operation
fnmsub.s f7, f23, f5, f11, rtz # perform operation
fnmsub.s f7, f23, f5, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f7, f23, f5, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f7, f23, f5, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f7, f23, f5, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f7, f23, f5, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f7, f23, f5, f11 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0x800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f11, 0(x2) # load 0x40000000 from memory into f11
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f14, 0(x2) # load 0x00800000 from memory into f14
la x2, scratch
li x3, 0xf2d4ebe2 # load x3 with value 0xf2d4ebe2
sw x3, 0(x2) # store 0xf2d4ebe2 in memory
flw f15, 0(x2) # load 0xf2d4ebe2 from memory into f15
fnmsub.s f23, f11, f14, f15, dyn # perform operation
fnmsub.s f23, f11, f14, f15, rdn # perform operation
fnmsub.s f23, f11, f14, f15, rmm # perform operation
fnmsub.s f23, f11, f14, f15, rne # perform operation
fnmsub.s f23, f11, f14, f15, rtz # perform operation
fnmsub.s f23, f11, f14, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f23, f11, f14, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f23, f11, f14, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f23, f11, f14, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f23, f11, f14, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f23, f11, f14, f15 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0x80800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f15, 0(x2) # load 0x40000000 from memory into f15
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f5, 0(x2) # load 0x80800000 from memory into f5
la x2, scratch
li x3, 0xae2ca8d7 # load x3 with value 0xae2ca8d7
sw x3, 0(x2) # store 0xae2ca8d7 in memory
flw f26, 0(x2) # load 0xae2ca8d7 from memory into f26
fnmsub.s f14, f15, f5, f26, dyn # perform operation
fnmsub.s f14, f15, f5, f26, rdn # perform operation
fnmsub.s f14, f15, f5, f26, rmm # perform operation
fnmsub.s f14, f15, f5, f26, rne # perform operation
fnmsub.s f14, f15, f5, f26, rtz # perform operation
fnmsub.s f14, f15, f5, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f14, f15, f5, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f14, f15, f5, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f14, f15, f5, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f14, f15, f5, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f14, f15, f5, f26 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0x7f7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f3, 0(x2) # load 0x40000000 from memory into f3
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f29, 0(x2) # load 0x7f7fffff from memory into f29
la x2, scratch
li x3, 0xda496949 # load x3 with value 0xda496949
sw x3, 0(x2) # store 0xda496949 in memory
flw f15, 0(x2) # load 0xda496949 from memory into f15
fnmsub.s f22, f3, f29, f15, dyn # perform operation
fnmsub.s f22, f3, f29, f15, rdn # perform operation
fnmsub.s f22, f3, f29, f15, rmm # perform operation
fnmsub.s f22, f3, f29, f15, rne # perform operation
fnmsub.s f22, f3, f29, f15, rtz # perform operation
fnmsub.s f22, f3, f29, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f22, f3, f29, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f22, f3, f29, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f22, f3, f29, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f22, f3, f29, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f22, f3, f29, f15 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0xff7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f23, 0(x2) # load 0x40000000 from memory into f23
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f31, 0(x2) # load 0xff7fffff from memory into f31
la x2, scratch
li x3, 0xe4d88e23 # load x3 with value 0xe4d88e23
sw x3, 0(x2) # store 0xe4d88e23 in memory
flw f13, 0(x2) # load 0xe4d88e23 from memory into f13
fnmsub.s f28, f23, f31, f13, dyn # perform operation
fnmsub.s f28, f23, f31, f13, rdn # perform operation
fnmsub.s f28, f23, f31, f13, rmm # perform operation
fnmsub.s f28, f23, f31, f13, rne # perform operation
fnmsub.s f28, f23, f31, f13, rtz # perform operation
fnmsub.s f28, f23, f31, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f28, f23, f31, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f28, f23, f31, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f28, f23, f31, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f28, f23, f31, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f28, f23, f31, f13 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0x7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f5, 0(x2) # load 0x40000000 from memory into f5
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f18, 0(x2) # load 0x007fffff from memory into f18
la x2, scratch
li x3, 0x92c3e994 # load x3 with value 0x92c3e994
sw x3, 0(x2) # store 0x92c3e994 in memory
flw f15, 0(x2) # load 0x92c3e994 from memory into f15
fnmsub.s f6, f5, f18, f15, dyn # perform operation
fnmsub.s f6, f5, f18, f15, rdn # perform operation
fnmsub.s f6, f5, f18, f15, rmm # perform operation
fnmsub.s f6, f5, f18, f15, rne # perform operation
fnmsub.s f6, f5, f18, f15, rtz # perform operation
fnmsub.s f6, f5, f18, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f6, f5, f18, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f6, f5, f18, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f6, f5, f18, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f6, f5, f18, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f6, f5, f18, f15 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0x807fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f9, 0(x2) # load 0x40000000 from memory into f9
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f21, 0(x2) # load 0x807fffff from memory into f21
la x2, scratch
li x3, 0x5f371925 # load x3 with value 0x5f371925
sw x3, 0(x2) # store 0x5f371925 in memory
flw f31, 0(x2) # load 0x5f371925 from memory into f31
fnmsub.s f24, f9, f21, f31, dyn # perform operation
fnmsub.s f24, f9, f21, f31, rdn # perform operation
fnmsub.s f24, f9, f21, f31, rmm # perform operation
fnmsub.s f24, f9, f21, f31, rne # perform operation
fnmsub.s f24, f9, f21, f31, rtz # perform operation
fnmsub.s f24, f9, f21, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f24, f9, f21, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f24, f9, f21, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f24, f9, f21, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f24, f9, f21, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f24, f9, f21, f31 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0x400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f1, 0(x2) # load 0x40000000 from memory into f1
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f5, 0(x2) # load 0x00400000 from memory into f5
la x2, scratch
li x3, 0xdb6ca433 # load x3 with value 0xdb6ca433
sw x3, 0(x2) # store 0xdb6ca433 in memory
flw f23, 0(x2) # load 0xdb6ca433 from memory into f23
fnmsub.s f3, f1, f5, f23, dyn # perform operation
fnmsub.s f3, f1, f5, f23, rdn # perform operation
fnmsub.s f3, f1, f5, f23, rmm # perform operation
fnmsub.s f3, f1, f5, f23, rne # perform operation
fnmsub.s f3, f1, f5, f23, rtz # perform operation
fnmsub.s f3, f1, f5, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f3, f1, f5, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f3, f1, f5, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f3, f1, f5, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f3, f1, f5, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f3, f1, f5, f23 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0x80400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f19, 0(x2) # load 0x40000000 from memory into f19
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f29, 0(x2) # load 0x80400000 from memory into f29
la x2, scratch
li x3, 0xb6006765 # load x3 with value 0xb6006765
sw x3, 0(x2) # store 0xb6006765 in memory
flw f13, 0(x2) # load 0xb6006765 from memory into f13
fnmsub.s f2, f19, f29, f13, dyn # perform operation
fnmsub.s f2, f19, f29, f13, rdn # perform operation
fnmsub.s f2, f19, f29, f13, rmm # perform operation
fnmsub.s f2, f19, f29, f13, rne # perform operation
fnmsub.s f2, f19, f29, f13, rtz # perform operation
fnmsub.s f2, f19, f29, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f2, f19, f29, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f2, f19, f29, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f2, f19, f29, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f2, f19, f29, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f2, f19, f29, f13 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0x1)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f25, 0(x2) # load 0x40000000 from memory into f25
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f31, 0(x2) # load 0x00000001 from memory into f31
la x2, scratch
li x3, 0x8e06ae84 # load x3 with value 0x8e06ae84
sw x3, 0(x2) # store 0x8e06ae84 in memory
flw f26, 0(x2) # load 0x8e06ae84 from memory into f26
fnmsub.s f7, f25, f31, f26, dyn # perform operation
fnmsub.s f7, f25, f31, f26, rdn # perform operation
fnmsub.s f7, f25, f31, f26, rmm # perform operation
fnmsub.s f7, f25, f31, f26, rne # perform operation
fnmsub.s f7, f25, f31, f26, rtz # perform operation
fnmsub.s f7, f25, f31, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f7, f25, f31, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f7, f25, f31, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f7, f25, f31, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f7, f25, f31, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f7, f25, f31, f26 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0x80000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f22, 0(x2) # load 0x40000000 from memory into f22
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f20, 0(x2) # load 0x80000001 from memory into f20
la x2, scratch
li x3, 0xe052643f # load x3 with value 0xe052643f
sw x3, 0(x2) # store 0xe052643f in memory
flw f29, 0(x2) # load 0xe052643f from memory into f29
fnmsub.s f27, f22, f20, f29, dyn # perform operation
fnmsub.s f27, f22, f20, f29, rdn # perform operation
fnmsub.s f27, f22, f20, f29, rmm # perform operation
fnmsub.s f27, f22, f20, f29, rne # perform operation
fnmsub.s f27, f22, f20, f29, rtz # perform operation
fnmsub.s f27, f22, f20, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f27, f22, f20, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f27, f22, f20, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f27, f22, f20, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f27, f22, f20, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f27, f22, f20, f29 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0x7f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f19, 0(x2) # load 0x40000000 from memory into f19
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f5, 0(x2) # load 0x7f800000 from memory into f5
la x2, scratch
li x3, 0x7c027ed8 # load x3 with value 0x7c027ed8
sw x3, 0(x2) # store 0x7c027ed8 in memory
flw f27, 0(x2) # load 0x7c027ed8 from memory into f27
fnmsub.s f18, f19, f5, f27, dyn # perform operation
fnmsub.s f18, f19, f5, f27, rdn # perform operation
fnmsub.s f18, f19, f5, f27, rmm # perform operation
fnmsub.s f18, f19, f5, f27, rne # perform operation
fnmsub.s f18, f19, f5, f27, rtz # perform operation
fnmsub.s f18, f19, f5, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f18, f19, f5, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f18, f19, f5, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f18, f19, f5, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f18, f19, f5, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f18, f19, f5, f27 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0xff800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f15, 0(x2) # load 0x40000000 from memory into f15
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f23, 0(x2) # load 0xff800000 from memory into f23
la x2, scratch
li x3, 0xbf8bc441 # load x3 with value 0xbf8bc441
sw x3, 0(x2) # store 0xbf8bc441 in memory
flw f28, 0(x2) # load 0xbf8bc441 from memory into f28
fnmsub.s f12, f15, f23, f28, dyn # perform operation
fnmsub.s f12, f15, f23, f28, rdn # perform operation
fnmsub.s f12, f15, f23, f28, rmm # perform operation
fnmsub.s f12, f15, f23, f28, rne # perform operation
fnmsub.s f12, f15, f23, f28, rtz # perform operation
fnmsub.s f12, f15, f23, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f12, f15, f23, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f12, f15, f23, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f12, f15, f23, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f12, f15, f23, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f12, f15, f23, f28 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0x7fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f22, 0(x2) # load 0x40000000 from memory into f22
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f31, 0(x2) # load 0x7fc00000 from memory into f31
la x2, scratch
li x3, 0xcaa78369 # load x3 with value 0xcaa78369
sw x3, 0(x2) # store 0xcaa78369 in memory
flw f10, 0(x2) # load 0xcaa78369 from memory into f10
fnmsub.s f29, f22, f31, f10, dyn # perform operation
fnmsub.s f29, f22, f31, f10, rdn # perform operation
fnmsub.s f29, f22, f31, f10, rmm # perform operation
fnmsub.s f29, f22, f31, f10, rne # perform operation
fnmsub.s f29, f22, f31, f10, rtz # perform operation
fnmsub.s f29, f22, f31, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f29, f22, f31, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f29, f22, f31, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f29, f22, f31, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f29, f22, f31, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f29, f22, f31, f10 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0x7fffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f16, 0(x2) # load 0x40000000 from memory into f16
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f21, 0(x2) # load 0x7fffffff from memory into f21
la x2, scratch
li x3, 0x9260f665 # load x3 with value 0x9260f665
sw x3, 0(x2) # store 0x9260f665 in memory
flw f7, 0(x2) # load 0x9260f665 from memory into f7
fnmsub.s f20, f16, f21, f7, dyn # perform operation
fnmsub.s f20, f16, f21, f7, rdn # perform operation
fnmsub.s f20, f16, f21, f7, rmm # perform operation
fnmsub.s f20, f16, f21, f7, rne # perform operation
fnmsub.s f20, f16, f21, f7, rtz # perform operation
fnmsub.s f20, f16, f21, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f20, f16, f21, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f20, f16, f21, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f20, f16, f21, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f20, f16, f21, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f20, f16, f21, f7 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0xffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f17, 0(x2) # load 0x40000000 from memory into f17
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f7, 0(x2) # load 0xffffffff from memory into f7
la x2, scratch
li x3, 0xb58ecf7b # load x3 with value 0xb58ecf7b
sw x3, 0(x2) # store 0xb58ecf7b in memory
flw f11, 0(x2) # load 0xb58ecf7b from memory into f11
fnmsub.s f24, f17, f7, f11, dyn # perform operation
fnmsub.s f24, f17, f7, f11, rdn # perform operation
fnmsub.s f24, f17, f7, f11, rmm # perform operation
fnmsub.s f24, f17, f7, f11, rne # perform operation
fnmsub.s f24, f17, f7, f11, rtz # perform operation
fnmsub.s f24, f17, f7, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f24, f17, f7, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f24, f17, f7, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f24, f17, f7, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f24, f17, f7, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f24, f17, f7, f11 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0x7f800001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f13, 0(x2) # load 0x40000000 from memory into f13
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f30, 0(x2) # load 0x7f800001 from memory into f30
la x2, scratch
li x3, 0x0b5ddc47 # load x3 with value 0x0b5ddc47
sw x3, 0(x2) # store 0x0b5ddc47 in memory
flw f26, 0(x2) # load 0x0b5ddc47 from memory into f26
fnmsub.s f3, f13, f30, f26, dyn # perform operation
fnmsub.s f3, f13, f30, f26, rdn # perform operation
fnmsub.s f3, f13, f30, f26, rmm # perform operation
fnmsub.s f3, f13, f30, f26, rne # perform operation
fnmsub.s f3, f13, f30, f26, rtz # perform operation
fnmsub.s f3, f13, f30, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f3, f13, f30, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f3, f13, f30, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f3, f13, f30, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f3, f13, f30, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f3, f13, f30, f26 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0x7fbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f17, 0(x2) # load 0x40000000 from memory into f17
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f23, 0(x2) # load 0x7fbfffff from memory into f23
la x2, scratch
li x3, 0x532da979 # load x3 with value 0x532da979
sw x3, 0(x2) # store 0x532da979 in memory
flw f28, 0(x2) # load 0x532da979 from memory into f28
fnmsub.s f3, f17, f23, f28, dyn # perform operation
fnmsub.s f3, f17, f23, f28, rdn # perform operation
fnmsub.s f3, f17, f23, f28, rmm # perform operation
fnmsub.s f3, f17, f23, f28, rne # perform operation
fnmsub.s f3, f17, f23, f28, rtz # perform operation
fnmsub.s f3, f17, f23, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f3, f17, f23, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f3, f17, f23, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f3, f17, f23, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f3, f17, f23, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f3, f17, f23, f28 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0xffbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f31, 0(x2) # load 0x40000000 from memory into f31
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f23, 0(x2) # load 0xffbfffff from memory into f23
la x2, scratch
li x3, 0xbec051d5 # load x3 with value 0xbec051d5
sw x3, 0(x2) # store 0xbec051d5 in memory
flw f11, 0(x2) # load 0xbec051d5 from memory into f11
fnmsub.s f21, f31, f23, f11, dyn # perform operation
fnmsub.s f21, f31, f23, f11, rdn # perform operation
fnmsub.s f21, f31, f23, f11, rmm # perform operation
fnmsub.s f21, f31, f23, f11, rne # perform operation
fnmsub.s f21, f31, f23, f11, rtz # perform operation
fnmsub.s f21, f31, f23, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f21, f31, f23, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f21, f31, f23, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f21, f31, f23, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f21, f31, f23, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f21, f31, f23, f11 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0x7ef8654f)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f24, 0(x2) # load 0x40000000 from memory into f24
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f20, 0(x2) # load 0x7ef8654f from memory into f20
la x2, scratch
li x3, 0x041023ec # load x3 with value 0x041023ec
sw x3, 0(x2) # store 0x041023ec in memory
flw f28, 0(x2) # load 0x041023ec from memory into f28
fnmsub.s f25, f24, f20, f28, dyn # perform operation
fnmsub.s f25, f24, f20, f28, rdn # perform operation
fnmsub.s f25, f24, f20, f28, rmm # perform operation
fnmsub.s f25, f24, f20, f28, rne # perform operation
fnmsub.s f25, f24, f20, f28, rtz # perform operation
fnmsub.s f25, f24, f20, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f25, f24, f20, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f25, f24, f20, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f25, f24, f20, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f25, f24, f20, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f25, f24, f20, f28 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0x813d9ab0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f21, 0(x2) # load 0x40000000 from memory into f21
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f8, 0(x2) # load 0x813d9ab0 from memory into f8
la x2, scratch
li x3, 0xb88698f0 # load x3 with value 0xb88698f0
sw x3, 0(x2) # store 0xb88698f0 in memory
flw f30, 0(x2) # load 0xb88698f0 from memory into f30
fnmsub.s f31, f21, f8, f30, dyn # perform operation
fnmsub.s f31, f21, f8, f30, rdn # perform operation
fnmsub.s f31, f21, f8, f30, rmm # perform operation
fnmsub.s f31, f21, f8, f30, rne # perform operation
fnmsub.s f31, f21, f8, f30, rtz # perform operation
fnmsub.s f31, f21, f8, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f31, f21, f8, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f31, f21, f8, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f31, f21, f8, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f31, f21, f8, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f31, f21, f8, f30 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0x0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f29, 0(x2) # load 0xc0000000 from memory into f29
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f28, 0(x2) # load 0x00000000 from memory into f28
la x2, scratch
li x3, 0xec50571e # load x3 with value 0xec50571e
sw x3, 0(x2) # store 0xec50571e in memory
flw f14, 0(x2) # load 0xec50571e from memory into f14
fnmsub.s f3, f29, f28, f14, dyn # perform operation
fnmsub.s f3, f29, f28, f14, rdn # perform operation
fnmsub.s f3, f29, f28, f14, rmm # perform operation
fnmsub.s f3, f29, f28, f14, rne # perform operation
fnmsub.s f3, f29, f28, f14, rtz # perform operation
fnmsub.s f3, f29, f28, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f3, f29, f28, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f3, f29, f28, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f3, f29, f28, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f3, f29, f28, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f3, f29, f28, f14 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0x80000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f21, 0(x2) # load 0xc0000000 from memory into f21
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f13, 0(x2) # load 0x80000000 from memory into f13
la x2, scratch
li x3, 0x95382d27 # load x3 with value 0x95382d27
sw x3, 0(x2) # store 0x95382d27 in memory
flw f25, 0(x2) # load 0x95382d27 from memory into f25
fnmsub.s f22, f21, f13, f25, dyn # perform operation
fnmsub.s f22, f21, f13, f25, rdn # perform operation
fnmsub.s f22, f21, f13, f25, rmm # perform operation
fnmsub.s f22, f21, f13, f25, rne # perform operation
fnmsub.s f22, f21, f13, f25, rtz # perform operation
fnmsub.s f22, f21, f13, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f22, f21, f13, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f22, f21, f13, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f22, f21, f13, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f22, f21, f13, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f22, f21, f13, f25 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0x3f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f5, 0(x2) # load 0xc0000000 from memory into f5
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f3, 0(x2) # load 0x3f800000 from memory into f3
la x2, scratch
li x3, 0x57b81cc8 # load x3 with value 0x57b81cc8
sw x3, 0(x2) # store 0x57b81cc8 in memory
flw f11, 0(x2) # load 0x57b81cc8 from memory into f11
fnmsub.s f2, f5, f3, f11, dyn # perform operation
fnmsub.s f2, f5, f3, f11, rdn # perform operation
fnmsub.s f2, f5, f3, f11, rmm # perform operation
fnmsub.s f2, f5, f3, f11, rne # perform operation
fnmsub.s f2, f5, f3, f11, rtz # perform operation
fnmsub.s f2, f5, f3, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f2, f5, f3, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f2, f5, f3, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f2, f5, f3, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f2, f5, f3, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f2, f5, f3, f11 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0xbf800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f18, 0(x2) # load 0xc0000000 from memory into f18
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f25, 0(x2) # load 0xbf800000 from memory into f25
la x2, scratch
li x3, 0x76720096 # load x3 with value 0x76720096
sw x3, 0(x2) # store 0x76720096 in memory
flw f21, 0(x2) # load 0x76720096 from memory into f21
fnmsub.s f14, f18, f25, f21, dyn # perform operation
fnmsub.s f14, f18, f25, f21, rdn # perform operation
fnmsub.s f14, f18, f25, f21, rmm # perform operation
fnmsub.s f14, f18, f25, f21, rne # perform operation
fnmsub.s f14, f18, f25, f21, rtz # perform operation
fnmsub.s f14, f18, f25, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f14, f18, f25, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f14, f18, f25, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f14, f18, f25, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f14, f18, f25, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f14, f18, f25, f21 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0x3fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f15, 0(x2) # load 0xc0000000 from memory into f15
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f6, 0(x2) # load 0x3fc00000 from memory into f6
la x2, scratch
li x3, 0x0b563cc4 # load x3 with value 0x0b563cc4
sw x3, 0(x2) # store 0x0b563cc4 in memory
flw f22, 0(x2) # load 0x0b563cc4 from memory into f22
fnmsub.s f23, f15, f6, f22, dyn # perform operation
fnmsub.s f23, f15, f6, f22, rdn # perform operation
fnmsub.s f23, f15, f6, f22, rmm # perform operation
fnmsub.s f23, f15, f6, f22, rne # perform operation
fnmsub.s f23, f15, f6, f22, rtz # perform operation
fnmsub.s f23, f15, f6, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f23, f15, f6, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f23, f15, f6, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f23, f15, f6, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f23, f15, f6, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f23, f15, f6, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0xbfc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f11, 0(x2) # load 0xc0000000 from memory into f11
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f5, 0(x2) # load 0xbfc00000 from memory into f5
la x2, scratch
li x3, 0x9a47e740 # load x3 with value 0x9a47e740
sw x3, 0(x2) # store 0x9a47e740 in memory
flw f22, 0(x2) # load 0x9a47e740 from memory into f22
fnmsub.s f20, f11, f5, f22, dyn # perform operation
fnmsub.s f20, f11, f5, f22, rdn # perform operation
fnmsub.s f20, f11, f5, f22, rmm # perform operation
fnmsub.s f20, f11, f5, f22, rne # perform operation
fnmsub.s f20, f11, f5, f22, rtz # perform operation
fnmsub.s f20, f11, f5, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f20, f11, f5, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f20, f11, f5, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f20, f11, f5, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f20, f11, f5, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f20, f11, f5, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0x40000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f21, 0(x2) # load 0xc0000000 from memory into f21
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f28, 0(x2) # load 0x40000000 from memory into f28
la x2, scratch
li x3, 0x27b7ad1e # load x3 with value 0x27b7ad1e
sw x3, 0(x2) # store 0x27b7ad1e in memory
flw f3, 0(x2) # load 0x27b7ad1e from memory into f3
fnmsub.s f13, f21, f28, f3, dyn # perform operation
fnmsub.s f13, f21, f28, f3, rdn # perform operation
fnmsub.s f13, f21, f28, f3, rmm # perform operation
fnmsub.s f13, f21, f28, f3, rne # perform operation
fnmsub.s f13, f21, f28, f3, rtz # perform operation
fnmsub.s f13, f21, f28, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f13, f21, f28, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f13, f21, f28, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f13, f21, f28, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f13, f21, f28, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f13, f21, f28, f3 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0xc0000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f11, 0(x2) # load 0xc0000000 from memory into f11
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f23, 0(x2) # load 0xc0000000 from memory into f23
la x2, scratch
li x3, 0x80cd55cf # load x3 with value 0x80cd55cf
sw x3, 0(x2) # store 0x80cd55cf in memory
flw f31, 0(x2) # load 0x80cd55cf from memory into f31
fnmsub.s f17, f11, f23, f31, dyn # perform operation
fnmsub.s f17, f11, f23, f31, rdn # perform operation
fnmsub.s f17, f11, f23, f31, rmm # perform operation
fnmsub.s f17, f11, f23, f31, rne # perform operation
fnmsub.s f17, f11, f23, f31, rtz # perform operation
fnmsub.s f17, f11, f23, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f17, f11, f23, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f17, f11, f23, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f17, f11, f23, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f17, f11, f23, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f17, f11, f23, f31 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0x800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f12, 0(x2) # load 0xc0000000 from memory into f12
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f5, 0(x2) # load 0x00800000 from memory into f5
la x2, scratch
li x3, 0xddf7d504 # load x3 with value 0xddf7d504
sw x3, 0(x2) # store 0xddf7d504 in memory
flw f15, 0(x2) # load 0xddf7d504 from memory into f15
fnmsub.s f27, f12, f5, f15, dyn # perform operation
fnmsub.s f27, f12, f5, f15, rdn # perform operation
fnmsub.s f27, f12, f5, f15, rmm # perform operation
fnmsub.s f27, f12, f5, f15, rne # perform operation
fnmsub.s f27, f12, f5, f15, rtz # perform operation
fnmsub.s f27, f12, f5, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f27, f12, f5, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f27, f12, f5, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f27, f12, f5, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f27, f12, f5, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f27, f12, f5, f15 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0x80800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f16, 0(x2) # load 0xc0000000 from memory into f16
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f1, 0(x2) # load 0x80800000 from memory into f1
la x2, scratch
li x3, 0xc76b3bd3 # load x3 with value 0xc76b3bd3
sw x3, 0(x2) # store 0xc76b3bd3 in memory
flw f24, 0(x2) # load 0xc76b3bd3 from memory into f24
fnmsub.s f13, f16, f1, f24, dyn # perform operation
fnmsub.s f13, f16, f1, f24, rdn # perform operation
fnmsub.s f13, f16, f1, f24, rmm # perform operation
fnmsub.s f13, f16, f1, f24, rne # perform operation
fnmsub.s f13, f16, f1, f24, rtz # perform operation
fnmsub.s f13, f16, f1, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f13, f16, f1, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f13, f16, f1, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f13, f16, f1, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f13, f16, f1, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f13, f16, f1, f24 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0x7f7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f8, 0(x2) # load 0xc0000000 from memory into f8
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f10, 0(x2) # load 0x7f7fffff from memory into f10
la x2, scratch
li x3, 0xaed7d23e # load x3 with value 0xaed7d23e
sw x3, 0(x2) # store 0xaed7d23e in memory
flw f25, 0(x2) # load 0xaed7d23e from memory into f25
fnmsub.s f30, f8, f10, f25, dyn # perform operation
fnmsub.s f30, f8, f10, f25, rdn # perform operation
fnmsub.s f30, f8, f10, f25, rmm # perform operation
fnmsub.s f30, f8, f10, f25, rne # perform operation
fnmsub.s f30, f8, f10, f25, rtz # perform operation
fnmsub.s f30, f8, f10, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f30, f8, f10, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f30, f8, f10, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f30, f8, f10, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f30, f8, f10, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f30, f8, f10, f25 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0xff7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f27, 0(x2) # load 0xc0000000 from memory into f27
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f22, 0(x2) # load 0xff7fffff from memory into f22
la x2, scratch
li x3, 0x25fe1f6d # load x3 with value 0x25fe1f6d
sw x3, 0(x2) # store 0x25fe1f6d in memory
flw f2, 0(x2) # load 0x25fe1f6d from memory into f2
fnmsub.s f21, f27, f22, f2, dyn # perform operation
fnmsub.s f21, f27, f22, f2, rdn # perform operation
fnmsub.s f21, f27, f22, f2, rmm # perform operation
fnmsub.s f21, f27, f22, f2, rne # perform operation
fnmsub.s f21, f27, f22, f2, rtz # perform operation
fnmsub.s f21, f27, f22, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f21, f27, f22, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f21, f27, f22, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f21, f27, f22, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f21, f27, f22, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f21, f27, f22, f2 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0x7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f11, 0(x2) # load 0xc0000000 from memory into f11
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f21, 0(x2) # load 0x007fffff from memory into f21
la x2, scratch
li x3, 0x1f2d53ac # load x3 with value 0x1f2d53ac
sw x3, 0(x2) # store 0x1f2d53ac in memory
flw f3, 0(x2) # load 0x1f2d53ac from memory into f3
fnmsub.s f5, f11, f21, f3, dyn # perform operation
fnmsub.s f5, f11, f21, f3, rdn # perform operation
fnmsub.s f5, f11, f21, f3, rmm # perform operation
fnmsub.s f5, f11, f21, f3, rne # perform operation
fnmsub.s f5, f11, f21, f3, rtz # perform operation
fnmsub.s f5, f11, f21, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f5, f11, f21, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f5, f11, f21, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f5, f11, f21, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f5, f11, f21, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f5, f11, f21, f3 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0x807fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f20, 0(x2) # load 0xc0000000 from memory into f20
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f9, 0(x2) # load 0x807fffff from memory into f9
la x2, scratch
li x3, 0x52f6922f # load x3 with value 0x52f6922f
sw x3, 0(x2) # store 0x52f6922f in memory
flw f15, 0(x2) # load 0x52f6922f from memory into f15
fnmsub.s f21, f20, f9, f15, dyn # perform operation
fnmsub.s f21, f20, f9, f15, rdn # perform operation
fnmsub.s f21, f20, f9, f15, rmm # perform operation
fnmsub.s f21, f20, f9, f15, rne # perform operation
fnmsub.s f21, f20, f9, f15, rtz # perform operation
fnmsub.s f21, f20, f9, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f21, f20, f9, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f21, f20, f9, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f21, f20, f9, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f21, f20, f9, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f21, f20, f9, f15 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0x400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f23, 0(x2) # load 0xc0000000 from memory into f23
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f22, 0(x2) # load 0x00400000 from memory into f22
la x2, scratch
li x3, 0x51c7e9ec # load x3 with value 0x51c7e9ec
sw x3, 0(x2) # store 0x51c7e9ec in memory
flw f20, 0(x2) # load 0x51c7e9ec from memory into f20
fnmsub.s f19, f23, f22, f20, dyn # perform operation
fnmsub.s f19, f23, f22, f20, rdn # perform operation
fnmsub.s f19, f23, f22, f20, rmm # perform operation
fnmsub.s f19, f23, f22, f20, rne # perform operation
fnmsub.s f19, f23, f22, f20, rtz # perform operation
fnmsub.s f19, f23, f22, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f19, f23, f22, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f19, f23, f22, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f19, f23, f22, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f19, f23, f22, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f19, f23, f22, f20 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0x80400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f10, 0(x2) # load 0xc0000000 from memory into f10
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f25, 0(x2) # load 0x80400000 from memory into f25
la x2, scratch
li x3, 0xb6a055b0 # load x3 with value 0xb6a055b0
sw x3, 0(x2) # store 0xb6a055b0 in memory
flw f19, 0(x2) # load 0xb6a055b0 from memory into f19
fnmsub.s f12, f10, f25, f19, dyn # perform operation
fnmsub.s f12, f10, f25, f19, rdn # perform operation
fnmsub.s f12, f10, f25, f19, rmm # perform operation
fnmsub.s f12, f10, f25, f19, rne # perform operation
fnmsub.s f12, f10, f25, f19, rtz # perform operation
fnmsub.s f12, f10, f25, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f12, f10, f25, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f12, f10, f25, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f12, f10, f25, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f12, f10, f25, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f12, f10, f25, f19 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0x1)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f13, 0(x2) # load 0xc0000000 from memory into f13
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f25, 0(x2) # load 0x00000001 from memory into f25
la x2, scratch
li x3, 0xfb0b1b05 # load x3 with value 0xfb0b1b05
sw x3, 0(x2) # store 0xfb0b1b05 in memory
flw f1, 0(x2) # load 0xfb0b1b05 from memory into f1
fnmsub.s f14, f13, f25, f1, dyn # perform operation
fnmsub.s f14, f13, f25, f1, rdn # perform operation
fnmsub.s f14, f13, f25, f1, rmm # perform operation
fnmsub.s f14, f13, f25, f1, rne # perform operation
fnmsub.s f14, f13, f25, f1, rtz # perform operation
fnmsub.s f14, f13, f25, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f14, f13, f25, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f14, f13, f25, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f14, f13, f25, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f14, f13, f25, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f14, f13, f25, f1 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0x80000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f30, 0(x2) # load 0xc0000000 from memory into f30
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f12, 0(x2) # load 0x80000001 from memory into f12
la x2, scratch
li x3, 0x59f9e185 # load x3 with value 0x59f9e185
sw x3, 0(x2) # store 0x59f9e185 in memory
flw f7, 0(x2) # load 0x59f9e185 from memory into f7
fnmsub.s f11, f30, f12, f7, dyn # perform operation
fnmsub.s f11, f30, f12, f7, rdn # perform operation
fnmsub.s f11, f30, f12, f7, rmm # perform operation
fnmsub.s f11, f30, f12, f7, rne # perform operation
fnmsub.s f11, f30, f12, f7, rtz # perform operation
fnmsub.s f11, f30, f12, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f11, f30, f12, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f11, f30, f12, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f11, f30, f12, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f11, f30, f12, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f11, f30, f12, f7 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0x7f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f25, 0(x2) # load 0xc0000000 from memory into f25
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f31, 0(x2) # load 0x7f800000 from memory into f31
la x2, scratch
li x3, 0x7b9563b1 # load x3 with value 0x7b9563b1
sw x3, 0(x2) # store 0x7b9563b1 in memory
flw f12, 0(x2) # load 0x7b9563b1 from memory into f12
fnmsub.s f28, f25, f31, f12, dyn # perform operation
fnmsub.s f28, f25, f31, f12, rdn # perform operation
fnmsub.s f28, f25, f31, f12, rmm # perform operation
fnmsub.s f28, f25, f31, f12, rne # perform operation
fnmsub.s f28, f25, f31, f12, rtz # perform operation
fnmsub.s f28, f25, f31, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f28, f25, f31, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f28, f25, f31, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f28, f25, f31, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f28, f25, f31, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f28, f25, f31, f12 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0xff800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f16, 0(x2) # load 0xc0000000 from memory into f16
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f20, 0(x2) # load 0xff800000 from memory into f20
la x2, scratch
li x3, 0x74f37420 # load x3 with value 0x74f37420
sw x3, 0(x2) # store 0x74f37420 in memory
flw f31, 0(x2) # load 0x74f37420 from memory into f31
fnmsub.s f9, f16, f20, f31, dyn # perform operation
fnmsub.s f9, f16, f20, f31, rdn # perform operation
fnmsub.s f9, f16, f20, f31, rmm # perform operation
fnmsub.s f9, f16, f20, f31, rne # perform operation
fnmsub.s f9, f16, f20, f31, rtz # perform operation
fnmsub.s f9, f16, f20, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f9, f16, f20, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f9, f16, f20, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f9, f16, f20, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f9, f16, f20, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f9, f16, f20, f31 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0x7fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f14, 0(x2) # load 0xc0000000 from memory into f14
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f22, 0(x2) # load 0x7fc00000 from memory into f22
la x2, scratch
li x3, 0xa9aabded # load x3 with value 0xa9aabded
sw x3, 0(x2) # store 0xa9aabded in memory
flw f8, 0(x2) # load 0xa9aabded from memory into f8
fnmsub.s f28, f14, f22, f8, dyn # perform operation
fnmsub.s f28, f14, f22, f8, rdn # perform operation
fnmsub.s f28, f14, f22, f8, rmm # perform operation
fnmsub.s f28, f14, f22, f8, rne # perform operation
fnmsub.s f28, f14, f22, f8, rtz # perform operation
fnmsub.s f28, f14, f22, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f28, f14, f22, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f28, f14, f22, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f28, f14, f22, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f28, f14, f22, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f28, f14, f22, f8 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0x7fffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f13, 0(x2) # load 0xc0000000 from memory into f13
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f25, 0(x2) # load 0x7fffffff from memory into f25
la x2, scratch
li x3, 0xcfb4babf # load x3 with value 0xcfb4babf
sw x3, 0(x2) # store 0xcfb4babf in memory
flw f22, 0(x2) # load 0xcfb4babf from memory into f22
fnmsub.s f16, f13, f25, f22, dyn # perform operation
fnmsub.s f16, f13, f25, f22, rdn # perform operation
fnmsub.s f16, f13, f25, f22, rmm # perform operation
fnmsub.s f16, f13, f25, f22, rne # perform operation
fnmsub.s f16, f13, f25, f22, rtz # perform operation
fnmsub.s f16, f13, f25, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f16, f13, f25, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f16, f13, f25, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f16, f13, f25, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f16, f13, f25, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f16, f13, f25, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0xffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f29, 0(x2) # load 0xc0000000 from memory into f29
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f3, 0(x2) # load 0xffffffff from memory into f3
la x2, scratch
li x3, 0xadcbff76 # load x3 with value 0xadcbff76
sw x3, 0(x2) # store 0xadcbff76 in memory
flw f26, 0(x2) # load 0xadcbff76 from memory into f26
fnmsub.s f20, f29, f3, f26, dyn # perform operation
fnmsub.s f20, f29, f3, f26, rdn # perform operation
fnmsub.s f20, f29, f3, f26, rmm # perform operation
fnmsub.s f20, f29, f3, f26, rne # perform operation
fnmsub.s f20, f29, f3, f26, rtz # perform operation
fnmsub.s f20, f29, f3, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f20, f29, f3, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f20, f29, f3, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f20, f29, f3, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f20, f29, f3, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f20, f29, f3, f26 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0x7f800001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f22, 0(x2) # load 0xc0000000 from memory into f22
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f21, 0(x2) # load 0x7f800001 from memory into f21
la x2, scratch
li x3, 0x500fe4f5 # load x3 with value 0x500fe4f5
sw x3, 0(x2) # store 0x500fe4f5 in memory
flw f29, 0(x2) # load 0x500fe4f5 from memory into f29
fnmsub.s f20, f22, f21, f29, dyn # perform operation
fnmsub.s f20, f22, f21, f29, rdn # perform operation
fnmsub.s f20, f22, f21, f29, rmm # perform operation
fnmsub.s f20, f22, f21, f29, rne # perform operation
fnmsub.s f20, f22, f21, f29, rtz # perform operation
fnmsub.s f20, f22, f21, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f20, f22, f21, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f20, f22, f21, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f20, f22, f21, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f20, f22, f21, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f20, f22, f21, f29 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0x7fbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f22, 0(x2) # load 0xc0000000 from memory into f22
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f19, 0(x2) # load 0x7fbfffff from memory into f19
la x2, scratch
li x3, 0x422f9c79 # load x3 with value 0x422f9c79
sw x3, 0(x2) # store 0x422f9c79 in memory
flw f8, 0(x2) # load 0x422f9c79 from memory into f8
fnmsub.s f17, f22, f19, f8, dyn # perform operation
fnmsub.s f17, f22, f19, f8, rdn # perform operation
fnmsub.s f17, f22, f19, f8, rmm # perform operation
fnmsub.s f17, f22, f19, f8, rne # perform operation
fnmsub.s f17, f22, f19, f8, rtz # perform operation
fnmsub.s f17, f22, f19, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f17, f22, f19, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f17, f22, f19, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f17, f22, f19, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f17, f22, f19, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f17, f22, f19, f8 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0xffbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f6, 0(x2) # load 0xc0000000 from memory into f6
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f1, 0(x2) # load 0xffbfffff from memory into f1
la x2, scratch
li x3, 0x6fe558ac # load x3 with value 0x6fe558ac
sw x3, 0(x2) # store 0x6fe558ac in memory
flw f31, 0(x2) # load 0x6fe558ac from memory into f31
fnmsub.s f7, f6, f1, f31, dyn # perform operation
fnmsub.s f7, f6, f1, f31, rdn # perform operation
fnmsub.s f7, f6, f1, f31, rmm # perform operation
fnmsub.s f7, f6, f1, f31, rne # perform operation
fnmsub.s f7, f6, f1, f31, rtz # perform operation
fnmsub.s f7, f6, f1, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f7, f6, f1, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f7, f6, f1, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f7, f6, f1, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f7, f6, f1, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f7, f6, f1, f31 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0x7ef8654f)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f22, 0(x2) # load 0xc0000000 from memory into f22
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f3, 0(x2) # load 0x7ef8654f from memory into f3
la x2, scratch
li x3, 0xa499bc31 # load x3 with value 0xa499bc31
sw x3, 0(x2) # store 0xa499bc31 in memory
flw f25, 0(x2) # load 0xa499bc31 from memory into f25
fnmsub.s f31, f22, f3, f25, dyn # perform operation
fnmsub.s f31, f22, f3, f25, rdn # perform operation
fnmsub.s f31, f22, f3, f25, rmm # perform operation
fnmsub.s f31, f22, f3, f25, rne # perform operation
fnmsub.s f31, f22, f3, f25, rtz # perform operation
fnmsub.s f31, f22, f3, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f31, f22, f3, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f31, f22, f3, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f31, f22, f3, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f31, f22, f3, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f31, f22, f3, f25 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0x813d9ab0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f21, 0(x2) # load 0xc0000000 from memory into f21
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f9, 0(x2) # load 0x813d9ab0 from memory into f9
la x2, scratch
li x3, 0x08146d00 # load x3 with value 0x08146d00
sw x3, 0(x2) # store 0x08146d00 in memory
flw f10, 0(x2) # load 0x08146d00 from memory into f10
fnmsub.s f27, f21, f9, f10, dyn # perform operation
fnmsub.s f27, f21, f9, f10, rdn # perform operation
fnmsub.s f27, f21, f9, f10, rmm # perform operation
fnmsub.s f27, f21, f9, f10, rne # perform operation
fnmsub.s f27, f21, f9, f10, rtz # perform operation
fnmsub.s f27, f21, f9, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f27, f21, f9, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f27, f21, f9, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f27, f21, f9, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f27, f21, f9, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f27, f21, f9, f10 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0x0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f1, 0(x2) # load 0x00800000 from memory into f1
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f26, 0(x2) # load 0x00000000 from memory into f26
la x2, scratch
li x3, 0xe0720c82 # load x3 with value 0xe0720c82
sw x3, 0(x2) # store 0xe0720c82 in memory
flw f23, 0(x2) # load 0xe0720c82 from memory into f23
fnmsub.s f17, f1, f26, f23, dyn # perform operation
fnmsub.s f17, f1, f26, f23, rdn # perform operation
fnmsub.s f17, f1, f26, f23, rmm # perform operation
fnmsub.s f17, f1, f26, f23, rne # perform operation
fnmsub.s f17, f1, f26, f23, rtz # perform operation
fnmsub.s f17, f1, f26, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f17, f1, f26, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f17, f1, f26, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f17, f1, f26, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f17, f1, f26, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f17, f1, f26, f23 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0x80000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f16, 0(x2) # load 0x00800000 from memory into f16
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f19, 0(x2) # load 0x80000000 from memory into f19
la x2, scratch
li x3, 0x02e2038e # load x3 with value 0x02e2038e
sw x3, 0(x2) # store 0x02e2038e in memory
flw f31, 0(x2) # load 0x02e2038e from memory into f31
fnmsub.s f7, f16, f19, f31, dyn # perform operation
fnmsub.s f7, f16, f19, f31, rdn # perform operation
fnmsub.s f7, f16, f19, f31, rmm # perform operation
fnmsub.s f7, f16, f19, f31, rne # perform operation
fnmsub.s f7, f16, f19, f31, rtz # perform operation
fnmsub.s f7, f16, f19, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f7, f16, f19, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f7, f16, f19, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f7, f16, f19, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f7, f16, f19, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f7, f16, f19, f31 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0x3f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f29, 0(x2) # load 0x00800000 from memory into f29
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f19, 0(x2) # load 0x3f800000 from memory into f19
la x2, scratch
li x3, 0xdc120847 # load x3 with value 0xdc120847
sw x3, 0(x2) # store 0xdc120847 in memory
flw f2, 0(x2) # load 0xdc120847 from memory into f2
fnmsub.s f6, f29, f19, f2, dyn # perform operation
fnmsub.s f6, f29, f19, f2, rdn # perform operation
fnmsub.s f6, f29, f19, f2, rmm # perform operation
fnmsub.s f6, f29, f19, f2, rne # perform operation
fnmsub.s f6, f29, f19, f2, rtz # perform operation
fnmsub.s f6, f29, f19, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f6, f29, f19, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f6, f29, f19, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f6, f29, f19, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f6, f29, f19, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f6, f29, f19, f2 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0xbf800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f8, 0(x2) # load 0x00800000 from memory into f8
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f1, 0(x2) # load 0xbf800000 from memory into f1
la x2, scratch
li x3, 0xe477ed87 # load x3 with value 0xe477ed87
sw x3, 0(x2) # store 0xe477ed87 in memory
flw f26, 0(x2) # load 0xe477ed87 from memory into f26
fnmsub.s f10, f8, f1, f26, dyn # perform operation
fnmsub.s f10, f8, f1, f26, rdn # perform operation
fnmsub.s f10, f8, f1, f26, rmm # perform operation
fnmsub.s f10, f8, f1, f26, rne # perform operation
fnmsub.s f10, f8, f1, f26, rtz # perform operation
fnmsub.s f10, f8, f1, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f10, f8, f1, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f10, f8, f1, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f10, f8, f1, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f10, f8, f1, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f10, f8, f1, f26 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0x3fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f11, 0(x2) # load 0x00800000 from memory into f11
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f2, 0(x2) # load 0x3fc00000 from memory into f2
la x2, scratch
li x3, 0x79310879 # load x3 with value 0x79310879
sw x3, 0(x2) # store 0x79310879 in memory
flw f22, 0(x2) # load 0x79310879 from memory into f22
fnmsub.s f9, f11, f2, f22, dyn # perform operation
fnmsub.s f9, f11, f2, f22, rdn # perform operation
fnmsub.s f9, f11, f2, f22, rmm # perform operation
fnmsub.s f9, f11, f2, f22, rne # perform operation
fnmsub.s f9, f11, f2, f22, rtz # perform operation
fnmsub.s f9, f11, f2, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f9, f11, f2, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f9, f11, f2, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f9, f11, f2, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f9, f11, f2, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f9, f11, f2, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0xbfc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f19, 0(x2) # load 0x00800000 from memory into f19
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f1, 0(x2) # load 0xbfc00000 from memory into f1
la x2, scratch
li x3, 0x52fac63f # load x3 with value 0x52fac63f
sw x3, 0(x2) # store 0x52fac63f in memory
flw f10, 0(x2) # load 0x52fac63f from memory into f10
fnmsub.s f11, f19, f1, f10, dyn # perform operation
fnmsub.s f11, f19, f1, f10, rdn # perform operation
fnmsub.s f11, f19, f1, f10, rmm # perform operation
fnmsub.s f11, f19, f1, f10, rne # perform operation
fnmsub.s f11, f19, f1, f10, rtz # perform operation
fnmsub.s f11, f19, f1, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f11, f19, f1, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f11, f19, f1, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f11, f19, f1, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f11, f19, f1, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f11, f19, f1, f10 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0x40000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f23, 0(x2) # load 0x00800000 from memory into f23
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f26, 0(x2) # load 0x40000000 from memory into f26
la x2, scratch
li x3, 0x082e44e0 # load x3 with value 0x082e44e0
sw x3, 0(x2) # store 0x082e44e0 in memory
flw f6, 0(x2) # load 0x082e44e0 from memory into f6
fnmsub.s f14, f23, f26, f6, dyn # perform operation
fnmsub.s f14, f23, f26, f6, rdn # perform operation
fnmsub.s f14, f23, f26, f6, rmm # perform operation
fnmsub.s f14, f23, f26, f6, rne # perform operation
fnmsub.s f14, f23, f26, f6, rtz # perform operation
fnmsub.s f14, f23, f26, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f14, f23, f26, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f14, f23, f26, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f14, f23, f26, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f14, f23, f26, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f14, f23, f26, f6 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0xc0000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f18, 0(x2) # load 0x00800000 from memory into f18
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f22, 0(x2) # load 0xc0000000 from memory into f22
la x2, scratch
li x3, 0xbbd6f612 # load x3 with value 0xbbd6f612
sw x3, 0(x2) # store 0xbbd6f612 in memory
flw f9, 0(x2) # load 0xbbd6f612 from memory into f9
fnmsub.s f26, f18, f22, f9, dyn # perform operation
fnmsub.s f26, f18, f22, f9, rdn # perform operation
fnmsub.s f26, f18, f22, f9, rmm # perform operation
fnmsub.s f26, f18, f22, f9, rne # perform operation
fnmsub.s f26, f18, f22, f9, rtz # perform operation
fnmsub.s f26, f18, f22, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f26, f18, f22, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f26, f18, f22, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f26, f18, f22, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f26, f18, f22, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f26, f18, f22, f9 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0x800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f24, 0(x2) # load 0x00800000 from memory into f24
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f15, 0(x2) # load 0x00800000 from memory into f15
la x2, scratch
li x3, 0xea8d003e # load x3 with value 0xea8d003e
sw x3, 0(x2) # store 0xea8d003e in memory
flw f27, 0(x2) # load 0xea8d003e from memory into f27
fnmsub.s f11, f24, f15, f27, dyn # perform operation
fnmsub.s f11, f24, f15, f27, rdn # perform operation
fnmsub.s f11, f24, f15, f27, rmm # perform operation
fnmsub.s f11, f24, f15, f27, rne # perform operation
fnmsub.s f11, f24, f15, f27, rtz # perform operation
fnmsub.s f11, f24, f15, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f11, f24, f15, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f11, f24, f15, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f11, f24, f15, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f11, f24, f15, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f11, f24, f15, f27 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0x80800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f26, 0(x2) # load 0x00800000 from memory into f26
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f10, 0(x2) # load 0x80800000 from memory into f10
la x2, scratch
li x3, 0x83e72dc2 # load x3 with value 0x83e72dc2
sw x3, 0(x2) # store 0x83e72dc2 in memory
flw f24, 0(x2) # load 0x83e72dc2 from memory into f24
fnmsub.s f3, f26, f10, f24, dyn # perform operation
fnmsub.s f3, f26, f10, f24, rdn # perform operation
fnmsub.s f3, f26, f10, f24, rmm # perform operation
fnmsub.s f3, f26, f10, f24, rne # perform operation
fnmsub.s f3, f26, f10, f24, rtz # perform operation
fnmsub.s f3, f26, f10, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f3, f26, f10, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f3, f26, f10, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f3, f26, f10, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f3, f26, f10, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f3, f26, f10, f24 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0x7f7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f22, 0(x2) # load 0x00800000 from memory into f22
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f16, 0(x2) # load 0x7f7fffff from memory into f16
la x2, scratch
li x3, 0xfa0d1132 # load x3 with value 0xfa0d1132
sw x3, 0(x2) # store 0xfa0d1132 in memory
flw f26, 0(x2) # load 0xfa0d1132 from memory into f26
fnmsub.s f12, f22, f16, f26, dyn # perform operation
fnmsub.s f12, f22, f16, f26, rdn # perform operation
fnmsub.s f12, f22, f16, f26, rmm # perform operation
fnmsub.s f12, f22, f16, f26, rne # perform operation
fnmsub.s f12, f22, f16, f26, rtz # perform operation
fnmsub.s f12, f22, f16, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f12, f22, f16, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f12, f22, f16, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f12, f22, f16, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f12, f22, f16, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f12, f22, f16, f26 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0xff7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f28, 0(x2) # load 0x00800000 from memory into f28
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f22, 0(x2) # load 0xff7fffff from memory into f22
la x2, scratch
li x3, 0xcb064cb5 # load x3 with value 0xcb064cb5
sw x3, 0(x2) # store 0xcb064cb5 in memory
flw f23, 0(x2) # load 0xcb064cb5 from memory into f23
fnmsub.s f12, f28, f22, f23, dyn # perform operation
fnmsub.s f12, f28, f22, f23, rdn # perform operation
fnmsub.s f12, f28, f22, f23, rmm # perform operation
fnmsub.s f12, f28, f22, f23, rne # perform operation
fnmsub.s f12, f28, f22, f23, rtz # perform operation
fnmsub.s f12, f28, f22, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f12, f28, f22, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f12, f28, f22, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f12, f28, f22, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f12, f28, f22, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f12, f28, f22, f23 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0x7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f21, 0(x2) # load 0x00800000 from memory into f21
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f22, 0(x2) # load 0x007fffff from memory into f22
la x2, scratch
li x3, 0x234394aa # load x3 with value 0x234394aa
sw x3, 0(x2) # store 0x234394aa in memory
flw f24, 0(x2) # load 0x234394aa from memory into f24
fnmsub.s f16, f21, f22, f24, dyn # perform operation
fnmsub.s f16, f21, f22, f24, rdn # perform operation
fnmsub.s f16, f21, f22, f24, rmm # perform operation
fnmsub.s f16, f21, f22, f24, rne # perform operation
fnmsub.s f16, f21, f22, f24, rtz # perform operation
fnmsub.s f16, f21, f22, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f16, f21, f22, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f16, f21, f22, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f16, f21, f22, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f16, f21, f22, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f16, f21, f22, f24 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0x807fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f12, 0(x2) # load 0x00800000 from memory into f12
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f23, 0(x2) # load 0x807fffff from memory into f23
la x2, scratch
li x3, 0x615deb0e # load x3 with value 0x615deb0e
sw x3, 0(x2) # store 0x615deb0e in memory
flw f26, 0(x2) # load 0x615deb0e from memory into f26
fnmsub.s f30, f12, f23, f26, dyn # perform operation
fnmsub.s f30, f12, f23, f26, rdn # perform operation
fnmsub.s f30, f12, f23, f26, rmm # perform operation
fnmsub.s f30, f12, f23, f26, rne # perform operation
fnmsub.s f30, f12, f23, f26, rtz # perform operation
fnmsub.s f30, f12, f23, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f30, f12, f23, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f30, f12, f23, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f30, f12, f23, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f30, f12, f23, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f30, f12, f23, f26 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0x400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f20, 0(x2) # load 0x00800000 from memory into f20
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f15, 0(x2) # load 0x00400000 from memory into f15
la x2, scratch
li x3, 0xa4a21842 # load x3 with value 0xa4a21842
sw x3, 0(x2) # store 0xa4a21842 in memory
flw f5, 0(x2) # load 0xa4a21842 from memory into f5
fnmsub.s f22, f20, f15, f5, dyn # perform operation
fnmsub.s f22, f20, f15, f5, rdn # perform operation
fnmsub.s f22, f20, f15, f5, rmm # perform operation
fnmsub.s f22, f20, f15, f5, rne # perform operation
fnmsub.s f22, f20, f15, f5, rtz # perform operation
fnmsub.s f22, f20, f15, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f22, f20, f15, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f22, f20, f15, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f22, f20, f15, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f22, f20, f15, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f22, f20, f15, f5 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0x80400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f3, 0(x2) # load 0x00800000 from memory into f3
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f17, 0(x2) # load 0x80400000 from memory into f17
la x2, scratch
li x3, 0x5b769e0c # load x3 with value 0x5b769e0c
sw x3, 0(x2) # store 0x5b769e0c in memory
flw f9, 0(x2) # load 0x5b769e0c from memory into f9
fnmsub.s f27, f3, f17, f9, dyn # perform operation
fnmsub.s f27, f3, f17, f9, rdn # perform operation
fnmsub.s f27, f3, f17, f9, rmm # perform operation
fnmsub.s f27, f3, f17, f9, rne # perform operation
fnmsub.s f27, f3, f17, f9, rtz # perform operation
fnmsub.s f27, f3, f17, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f27, f3, f17, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f27, f3, f17, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f27, f3, f17, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f27, f3, f17, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f27, f3, f17, f9 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0x1)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f28, 0(x2) # load 0x00800000 from memory into f28
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f14, 0(x2) # load 0x00000001 from memory into f14
la x2, scratch
li x3, 0x03ba2d4c # load x3 with value 0x03ba2d4c
sw x3, 0(x2) # store 0x03ba2d4c in memory
flw f16, 0(x2) # load 0x03ba2d4c from memory into f16
fnmsub.s f6, f28, f14, f16, dyn # perform operation
fnmsub.s f6, f28, f14, f16, rdn # perform operation
fnmsub.s f6, f28, f14, f16, rmm # perform operation
fnmsub.s f6, f28, f14, f16, rne # perform operation
fnmsub.s f6, f28, f14, f16, rtz # perform operation
fnmsub.s f6, f28, f14, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f6, f28, f14, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f6, f28, f14, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f6, f28, f14, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f6, f28, f14, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f6, f28, f14, f16 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0x80000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f8, 0(x2) # load 0x00800000 from memory into f8
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f26, 0(x2) # load 0x80000001 from memory into f26
la x2, scratch
li x3, 0xf9cdbc03 # load x3 with value 0xf9cdbc03
sw x3, 0(x2) # store 0xf9cdbc03 in memory
flw f27, 0(x2) # load 0xf9cdbc03 from memory into f27
fnmsub.s f2, f8, f26, f27, dyn # perform operation
fnmsub.s f2, f8, f26, f27, rdn # perform operation
fnmsub.s f2, f8, f26, f27, rmm # perform operation
fnmsub.s f2, f8, f26, f27, rne # perform operation
fnmsub.s f2, f8, f26, f27, rtz # perform operation
fnmsub.s f2, f8, f26, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f2, f8, f26, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f2, f8, f26, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f2, f8, f26, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f2, f8, f26, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f2, f8, f26, f27 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0x7f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f25, 0(x2) # load 0x00800000 from memory into f25
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f2, 0(x2) # load 0x7f800000 from memory into f2
la x2, scratch
li x3, 0x4cfece65 # load x3 with value 0x4cfece65
sw x3, 0(x2) # store 0x4cfece65 in memory
flw f18, 0(x2) # load 0x4cfece65 from memory into f18
fnmsub.s f26, f25, f2, f18, dyn # perform operation
fnmsub.s f26, f25, f2, f18, rdn # perform operation
fnmsub.s f26, f25, f2, f18, rmm # perform operation
fnmsub.s f26, f25, f2, f18, rne # perform operation
fnmsub.s f26, f25, f2, f18, rtz # perform operation
fnmsub.s f26, f25, f2, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f26, f25, f2, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f26, f25, f2, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f26, f25, f2, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f26, f25, f2, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f26, f25, f2, f18 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0xff800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f18, 0(x2) # load 0x00800000 from memory into f18
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f20, 0(x2) # load 0xff800000 from memory into f20
la x2, scratch
li x3, 0x4aeeee51 # load x3 with value 0x4aeeee51
sw x3, 0(x2) # store 0x4aeeee51 in memory
flw f24, 0(x2) # load 0x4aeeee51 from memory into f24
fnmsub.s f26, f18, f20, f24, dyn # perform operation
fnmsub.s f26, f18, f20, f24, rdn # perform operation
fnmsub.s f26, f18, f20, f24, rmm # perform operation
fnmsub.s f26, f18, f20, f24, rne # perform operation
fnmsub.s f26, f18, f20, f24, rtz # perform operation
fnmsub.s f26, f18, f20, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f26, f18, f20, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f26, f18, f20, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f26, f18, f20, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f26, f18, f20, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f26, f18, f20, f24 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0x7fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f15, 0(x2) # load 0x00800000 from memory into f15
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f21, 0(x2) # load 0x7fc00000 from memory into f21
la x2, scratch
li x3, 0x87370b54 # load x3 with value 0x87370b54
sw x3, 0(x2) # store 0x87370b54 in memory
flw f16, 0(x2) # load 0x87370b54 from memory into f16
fnmsub.s f2, f15, f21, f16, dyn # perform operation
fnmsub.s f2, f15, f21, f16, rdn # perform operation
fnmsub.s f2, f15, f21, f16, rmm # perform operation
fnmsub.s f2, f15, f21, f16, rne # perform operation
fnmsub.s f2, f15, f21, f16, rtz # perform operation
fnmsub.s f2, f15, f21, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f2, f15, f21, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f2, f15, f21, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f2, f15, f21, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f2, f15, f21, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f2, f15, f21, f16 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0x7fffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f5, 0(x2) # load 0x00800000 from memory into f5
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f27, 0(x2) # load 0x7fffffff from memory into f27
la x2, scratch
li x3, 0xe790572c # load x3 with value 0xe790572c
sw x3, 0(x2) # store 0xe790572c in memory
flw f30, 0(x2) # load 0xe790572c from memory into f30
fnmsub.s f20, f5, f27, f30, dyn # perform operation
fnmsub.s f20, f5, f27, f30, rdn # perform operation
fnmsub.s f20, f5, f27, f30, rmm # perform operation
fnmsub.s f20, f5, f27, f30, rne # perform operation
fnmsub.s f20, f5, f27, f30, rtz # perform operation
fnmsub.s f20, f5, f27, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f20, f5, f27, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f20, f5, f27, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f20, f5, f27, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f20, f5, f27, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f20, f5, f27, f30 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0xffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f20, 0(x2) # load 0x00800000 from memory into f20
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f15, 0(x2) # load 0xffffffff from memory into f15
la x2, scratch
li x3, 0xfc8d1b03 # load x3 with value 0xfc8d1b03
sw x3, 0(x2) # store 0xfc8d1b03 in memory
flw f6, 0(x2) # load 0xfc8d1b03 from memory into f6
fnmsub.s f14, f20, f15, f6, dyn # perform operation
fnmsub.s f14, f20, f15, f6, rdn # perform operation
fnmsub.s f14, f20, f15, f6, rmm # perform operation
fnmsub.s f14, f20, f15, f6, rne # perform operation
fnmsub.s f14, f20, f15, f6, rtz # perform operation
fnmsub.s f14, f20, f15, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f14, f20, f15, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f14, f20, f15, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f14, f20, f15, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f14, f20, f15, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f14, f20, f15, f6 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0x7f800001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f25, 0(x2) # load 0x00800000 from memory into f25
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f31, 0(x2) # load 0x7f800001 from memory into f31
la x2, scratch
li x3, 0x3b2dd502 # load x3 with value 0x3b2dd502
sw x3, 0(x2) # store 0x3b2dd502 in memory
flw f15, 0(x2) # load 0x3b2dd502 from memory into f15
fnmsub.s f18, f25, f31, f15, dyn # perform operation
fnmsub.s f18, f25, f31, f15, rdn # perform operation
fnmsub.s f18, f25, f31, f15, rmm # perform operation
fnmsub.s f18, f25, f31, f15, rne # perform operation
fnmsub.s f18, f25, f31, f15, rtz # perform operation
fnmsub.s f18, f25, f31, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f18, f25, f31, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f18, f25, f31, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f18, f25, f31, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f18, f25, f31, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f18, f25, f31, f15 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0x7fbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f1, 0(x2) # load 0x00800000 from memory into f1
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f2, 0(x2) # load 0x7fbfffff from memory into f2
la x2, scratch
li x3, 0x6d8800c4 # load x3 with value 0x6d8800c4
sw x3, 0(x2) # store 0x6d8800c4 in memory
flw f9, 0(x2) # load 0x6d8800c4 from memory into f9
fnmsub.s f12, f1, f2, f9, dyn # perform operation
fnmsub.s f12, f1, f2, f9, rdn # perform operation
fnmsub.s f12, f1, f2, f9, rmm # perform operation
fnmsub.s f12, f1, f2, f9, rne # perform operation
fnmsub.s f12, f1, f2, f9, rtz # perform operation
fnmsub.s f12, f1, f2, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f12, f1, f2, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f12, f1, f2, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f12, f1, f2, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f12, f1, f2, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f12, f1, f2, f9 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0xffbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f6, 0(x2) # load 0x00800000 from memory into f6
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f15, 0(x2) # load 0xffbfffff from memory into f15
la x2, scratch
li x3, 0x8844fbfd # load x3 with value 0x8844fbfd
sw x3, 0(x2) # store 0x8844fbfd in memory
flw f17, 0(x2) # load 0x8844fbfd from memory into f17
fnmsub.s f31, f6, f15, f17, dyn # perform operation
fnmsub.s f31, f6, f15, f17, rdn # perform operation
fnmsub.s f31, f6, f15, f17, rmm # perform operation
fnmsub.s f31, f6, f15, f17, rne # perform operation
fnmsub.s f31, f6, f15, f17, rtz # perform operation
fnmsub.s f31, f6, f15, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f31, f6, f15, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f31, f6, f15, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f31, f6, f15, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f31, f6, f15, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f31, f6, f15, f17 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0x7ef8654f)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f15, 0(x2) # load 0x00800000 from memory into f15
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f16, 0(x2) # load 0x7ef8654f from memory into f16
la x2, scratch
li x3, 0xaa84d035 # load x3 with value 0xaa84d035
sw x3, 0(x2) # store 0xaa84d035 in memory
flw f22, 0(x2) # load 0xaa84d035 from memory into f22
fnmsub.s f30, f15, f16, f22, dyn # perform operation
fnmsub.s f30, f15, f16, f22, rdn # perform operation
fnmsub.s f30, f15, f16, f22, rmm # perform operation
fnmsub.s f30, f15, f16, f22, rne # perform operation
fnmsub.s f30, f15, f16, f22, rtz # perform operation
fnmsub.s f30, f15, f16, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f30, f15, f16, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f30, f15, f16, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f30, f15, f16, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f30, f15, f16, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f30, f15, f16, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0x813d9ab0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f13, 0(x2) # load 0x00800000 from memory into f13
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f9, 0(x2) # load 0x813d9ab0 from memory into f9
la x2, scratch
li x3, 0x077db338 # load x3 with value 0x077db338
sw x3, 0(x2) # store 0x077db338 in memory
flw f14, 0(x2) # load 0x077db338 from memory into f14
fnmsub.s f21, f13, f9, f14, dyn # perform operation
fnmsub.s f21, f13, f9, f14, rdn # perform operation
fnmsub.s f21, f13, f9, f14, rmm # perform operation
fnmsub.s f21, f13, f9, f14, rne # perform operation
fnmsub.s f21, f13, f9, f14, rtz # perform operation
fnmsub.s f21, f13, f9, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f21, f13, f9, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f21, f13, f9, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f21, f13, f9, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f21, f13, f9, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f21, f13, f9, f14 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0x0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f26, 0(x2) # load 0x80800000 from memory into f26
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f20, 0(x2) # load 0x00000000 from memory into f20
la x2, scratch
li x3, 0x91e7a17f # load x3 with value 0x91e7a17f
sw x3, 0(x2) # store 0x91e7a17f in memory
flw f28, 0(x2) # load 0x91e7a17f from memory into f28
fnmsub.s f25, f26, f20, f28, dyn # perform operation
fnmsub.s f25, f26, f20, f28, rdn # perform operation
fnmsub.s f25, f26, f20, f28, rmm # perform operation
fnmsub.s f25, f26, f20, f28, rne # perform operation
fnmsub.s f25, f26, f20, f28, rtz # perform operation
fnmsub.s f25, f26, f20, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f25, f26, f20, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f25, f26, f20, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f25, f26, f20, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f25, f26, f20, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f25, f26, f20, f28 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0x80000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f3, 0(x2) # load 0x80800000 from memory into f3
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f28, 0(x2) # load 0x80000000 from memory into f28
la x2, scratch
li x3, 0x76024206 # load x3 with value 0x76024206
sw x3, 0(x2) # store 0x76024206 in memory
flw f19, 0(x2) # load 0x76024206 from memory into f19
fnmsub.s f30, f3, f28, f19, dyn # perform operation
fnmsub.s f30, f3, f28, f19, rdn # perform operation
fnmsub.s f30, f3, f28, f19, rmm # perform operation
fnmsub.s f30, f3, f28, f19, rne # perform operation
fnmsub.s f30, f3, f28, f19, rtz # perform operation
fnmsub.s f30, f3, f28, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f30, f3, f28, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f30, f3, f28, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f30, f3, f28, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f30, f3, f28, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f30, f3, f28, f19 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0x3f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f28, 0(x2) # load 0x80800000 from memory into f28
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f3, 0(x2) # load 0x3f800000 from memory into f3
la x2, scratch
li x3, 0x637acd6b # load x3 with value 0x637acd6b
sw x3, 0(x2) # store 0x637acd6b in memory
flw f31, 0(x2) # load 0x637acd6b from memory into f31
fnmsub.s f13, f28, f3, f31, dyn # perform operation
fnmsub.s f13, f28, f3, f31, rdn # perform operation
fnmsub.s f13, f28, f3, f31, rmm # perform operation
fnmsub.s f13, f28, f3, f31, rne # perform operation
fnmsub.s f13, f28, f3, f31, rtz # perform operation
fnmsub.s f13, f28, f3, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f13, f28, f3, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f13, f28, f3, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f13, f28, f3, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f13, f28, f3, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f13, f28, f3, f31 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0xbf800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f31, 0(x2) # load 0x80800000 from memory into f31
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f16, 0(x2) # load 0xbf800000 from memory into f16
la x2, scratch
li x3, 0xe28a8de4 # load x3 with value 0xe28a8de4
sw x3, 0(x2) # store 0xe28a8de4 in memory
flw f1, 0(x2) # load 0xe28a8de4 from memory into f1
fnmsub.s f8, f31, f16, f1, dyn # perform operation
fnmsub.s f8, f31, f16, f1, rdn # perform operation
fnmsub.s f8, f31, f16, f1, rmm # perform operation
fnmsub.s f8, f31, f16, f1, rne # perform operation
fnmsub.s f8, f31, f16, f1, rtz # perform operation
fnmsub.s f8, f31, f16, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f8, f31, f16, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f8, f31, f16, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f8, f31, f16, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f8, f31, f16, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f8, f31, f16, f1 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0x3fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f5, 0(x2) # load 0x80800000 from memory into f5
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f16, 0(x2) # load 0x3fc00000 from memory into f16
la x2, scratch
li x3, 0x1fd84932 # load x3 with value 0x1fd84932
sw x3, 0(x2) # store 0x1fd84932 in memory
flw f8, 0(x2) # load 0x1fd84932 from memory into f8
fnmsub.s f25, f5, f16, f8, dyn # perform operation
fnmsub.s f25, f5, f16, f8, rdn # perform operation
fnmsub.s f25, f5, f16, f8, rmm # perform operation
fnmsub.s f25, f5, f16, f8, rne # perform operation
fnmsub.s f25, f5, f16, f8, rtz # perform operation
fnmsub.s f25, f5, f16, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f25, f5, f16, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f25, f5, f16, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f25, f5, f16, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f25, f5, f16, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f25, f5, f16, f8 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0xbfc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f12, 0(x2) # load 0x80800000 from memory into f12
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f20, 0(x2) # load 0xbfc00000 from memory into f20
la x2, scratch
li x3, 0x69ece290 # load x3 with value 0x69ece290
sw x3, 0(x2) # store 0x69ece290 in memory
flw f2, 0(x2) # load 0x69ece290 from memory into f2
fnmsub.s f28, f12, f20, f2, dyn # perform operation
fnmsub.s f28, f12, f20, f2, rdn # perform operation
fnmsub.s f28, f12, f20, f2, rmm # perform operation
fnmsub.s f28, f12, f20, f2, rne # perform operation
fnmsub.s f28, f12, f20, f2, rtz # perform operation
fnmsub.s f28, f12, f20, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f28, f12, f20, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f28, f12, f20, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f28, f12, f20, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f28, f12, f20, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f28, f12, f20, f2 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0x40000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f28, 0(x2) # load 0x80800000 from memory into f28
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f12, 0(x2) # load 0x40000000 from memory into f12
la x2, scratch
li x3, 0x02d2546c # load x3 with value 0x02d2546c
sw x3, 0(x2) # store 0x02d2546c in memory
flw f24, 0(x2) # load 0x02d2546c from memory into f24
fnmsub.s f6, f28, f12, f24, dyn # perform operation
fnmsub.s f6, f28, f12, f24, rdn # perform operation
fnmsub.s f6, f28, f12, f24, rmm # perform operation
fnmsub.s f6, f28, f12, f24, rne # perform operation
fnmsub.s f6, f28, f12, f24, rtz # perform operation
fnmsub.s f6, f28, f12, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f6, f28, f12, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f6, f28, f12, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f6, f28, f12, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f6, f28, f12, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f6, f28, f12, f24 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0xc0000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f19, 0(x2) # load 0x80800000 from memory into f19
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f12, 0(x2) # load 0xc0000000 from memory into f12
la x2, scratch
li x3, 0x92928d64 # load x3 with value 0x92928d64
sw x3, 0(x2) # store 0x92928d64 in memory
flw f10, 0(x2) # load 0x92928d64 from memory into f10
fnmsub.s f31, f19, f12, f10, dyn # perform operation
fnmsub.s f31, f19, f12, f10, rdn # perform operation
fnmsub.s f31, f19, f12, f10, rmm # perform operation
fnmsub.s f31, f19, f12, f10, rne # perform operation
fnmsub.s f31, f19, f12, f10, rtz # perform operation
fnmsub.s f31, f19, f12, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f31, f19, f12, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f31, f19, f12, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f31, f19, f12, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f31, f19, f12, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f31, f19, f12, f10 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0x800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f13, 0(x2) # load 0x80800000 from memory into f13
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f15, 0(x2) # load 0x00800000 from memory into f15
la x2, scratch
li x3, 0xa6474bdf # load x3 with value 0xa6474bdf
sw x3, 0(x2) # store 0xa6474bdf in memory
flw f6, 0(x2) # load 0xa6474bdf from memory into f6
fnmsub.s f10, f13, f15, f6, dyn # perform operation
fnmsub.s f10, f13, f15, f6, rdn # perform operation
fnmsub.s f10, f13, f15, f6, rmm # perform operation
fnmsub.s f10, f13, f15, f6, rne # perform operation
fnmsub.s f10, f13, f15, f6, rtz # perform operation
fnmsub.s f10, f13, f15, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f10, f13, f15, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f10, f13, f15, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f10, f13, f15, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f10, f13, f15, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f10, f13, f15, f6 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0x80800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f30, 0(x2) # load 0x80800000 from memory into f30
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f13, 0(x2) # load 0x80800000 from memory into f13
la x2, scratch
li x3, 0x78237a44 # load x3 with value 0x78237a44
sw x3, 0(x2) # store 0x78237a44 in memory
flw f17, 0(x2) # load 0x78237a44 from memory into f17
fnmsub.s f21, f30, f13, f17, dyn # perform operation
fnmsub.s f21, f30, f13, f17, rdn # perform operation
fnmsub.s f21, f30, f13, f17, rmm # perform operation
fnmsub.s f21, f30, f13, f17, rne # perform operation
fnmsub.s f21, f30, f13, f17, rtz # perform operation
fnmsub.s f21, f30, f13, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f21, f30, f13, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f21, f30, f13, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f21, f30, f13, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f21, f30, f13, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f21, f30, f13, f17 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0x7f7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f30, 0(x2) # load 0x80800000 from memory into f30
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f16, 0(x2) # load 0x7f7fffff from memory into f16
la x2, scratch
li x3, 0xb7f6769a # load x3 with value 0xb7f6769a
sw x3, 0(x2) # store 0xb7f6769a in memory
flw f1, 0(x2) # load 0xb7f6769a from memory into f1
fnmsub.s f5, f30, f16, f1, dyn # perform operation
fnmsub.s f5, f30, f16, f1, rdn # perform operation
fnmsub.s f5, f30, f16, f1, rmm # perform operation
fnmsub.s f5, f30, f16, f1, rne # perform operation
fnmsub.s f5, f30, f16, f1, rtz # perform operation
fnmsub.s f5, f30, f16, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f5, f30, f16, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f5, f30, f16, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f5, f30, f16, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f5, f30, f16, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f5, f30, f16, f1 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0xff7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f28, 0(x2) # load 0x80800000 from memory into f28
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f5, 0(x2) # load 0xff7fffff from memory into f5
la x2, scratch
li x3, 0x6c846088 # load x3 with value 0x6c846088
sw x3, 0(x2) # store 0x6c846088 in memory
flw f9, 0(x2) # load 0x6c846088 from memory into f9
fnmsub.s f2, f28, f5, f9, dyn # perform operation
fnmsub.s f2, f28, f5, f9, rdn # perform operation
fnmsub.s f2, f28, f5, f9, rmm # perform operation
fnmsub.s f2, f28, f5, f9, rne # perform operation
fnmsub.s f2, f28, f5, f9, rtz # perform operation
fnmsub.s f2, f28, f5, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f2, f28, f5, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f2, f28, f5, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f2, f28, f5, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f2, f28, f5, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f2, f28, f5, f9 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0x7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f29, 0(x2) # load 0x80800000 from memory into f29
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f13, 0(x2) # load 0x007fffff from memory into f13
la x2, scratch
li x3, 0x270aebf9 # load x3 with value 0x270aebf9
sw x3, 0(x2) # store 0x270aebf9 in memory
flw f24, 0(x2) # load 0x270aebf9 from memory into f24
fnmsub.s f5, f29, f13, f24, dyn # perform operation
fnmsub.s f5, f29, f13, f24, rdn # perform operation
fnmsub.s f5, f29, f13, f24, rmm # perform operation
fnmsub.s f5, f29, f13, f24, rne # perform operation
fnmsub.s f5, f29, f13, f24, rtz # perform operation
fnmsub.s f5, f29, f13, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f5, f29, f13, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f5, f29, f13, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f5, f29, f13, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f5, f29, f13, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f5, f29, f13, f24 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0x807fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f15, 0(x2) # load 0x80800000 from memory into f15
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f30, 0(x2) # load 0x807fffff from memory into f30
la x2, scratch
li x3, 0x0b75c2be # load x3 with value 0x0b75c2be
sw x3, 0(x2) # store 0x0b75c2be in memory
flw f26, 0(x2) # load 0x0b75c2be from memory into f26
fnmsub.s f12, f15, f30, f26, dyn # perform operation
fnmsub.s f12, f15, f30, f26, rdn # perform operation
fnmsub.s f12, f15, f30, f26, rmm # perform operation
fnmsub.s f12, f15, f30, f26, rne # perform operation
fnmsub.s f12, f15, f30, f26, rtz # perform operation
fnmsub.s f12, f15, f30, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f12, f15, f30, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f12, f15, f30, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f12, f15, f30, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f12, f15, f30, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f12, f15, f30, f26 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0x400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f25, 0(x2) # load 0x80800000 from memory into f25
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f18, 0(x2) # load 0x00400000 from memory into f18
la x2, scratch
li x3, 0xe2ecf7d6 # load x3 with value 0xe2ecf7d6
sw x3, 0(x2) # store 0xe2ecf7d6 in memory
flw f20, 0(x2) # load 0xe2ecf7d6 from memory into f20
fnmsub.s f11, f25, f18, f20, dyn # perform operation
fnmsub.s f11, f25, f18, f20, rdn # perform operation
fnmsub.s f11, f25, f18, f20, rmm # perform operation
fnmsub.s f11, f25, f18, f20, rne # perform operation
fnmsub.s f11, f25, f18, f20, rtz # perform operation
fnmsub.s f11, f25, f18, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f11, f25, f18, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f11, f25, f18, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f11, f25, f18, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f11, f25, f18, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f11, f25, f18, f20 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0x80400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f18, 0(x2) # load 0x80800000 from memory into f18
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f12, 0(x2) # load 0x80400000 from memory into f12
la x2, scratch
li x3, 0xe5622d49 # load x3 with value 0xe5622d49
sw x3, 0(x2) # store 0xe5622d49 in memory
flw f6, 0(x2) # load 0xe5622d49 from memory into f6
fnmsub.s f21, f18, f12, f6, dyn # perform operation
fnmsub.s f21, f18, f12, f6, rdn # perform operation
fnmsub.s f21, f18, f12, f6, rmm # perform operation
fnmsub.s f21, f18, f12, f6, rne # perform operation
fnmsub.s f21, f18, f12, f6, rtz # perform operation
fnmsub.s f21, f18, f12, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f21, f18, f12, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f21, f18, f12, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f21, f18, f12, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f21, f18, f12, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f21, f18, f12, f6 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0x1)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f15, 0(x2) # load 0x80800000 from memory into f15
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f20, 0(x2) # load 0x00000001 from memory into f20
la x2, scratch
li x3, 0xa3e7cb7f # load x3 with value 0xa3e7cb7f
sw x3, 0(x2) # store 0xa3e7cb7f in memory
flw f18, 0(x2) # load 0xa3e7cb7f from memory into f18
fnmsub.s f25, f15, f20, f18, dyn # perform operation
fnmsub.s f25, f15, f20, f18, rdn # perform operation
fnmsub.s f25, f15, f20, f18, rmm # perform operation
fnmsub.s f25, f15, f20, f18, rne # perform operation
fnmsub.s f25, f15, f20, f18, rtz # perform operation
fnmsub.s f25, f15, f20, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f25, f15, f20, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f25, f15, f20, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f25, f15, f20, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f25, f15, f20, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f25, f15, f20, f18 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0x80000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f27, 0(x2) # load 0x80800000 from memory into f27
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f12, 0(x2) # load 0x80000001 from memory into f12
la x2, scratch
li x3, 0x9587bf05 # load x3 with value 0x9587bf05
sw x3, 0(x2) # store 0x9587bf05 in memory
flw f24, 0(x2) # load 0x9587bf05 from memory into f24
fnmsub.s f19, f27, f12, f24, dyn # perform operation
fnmsub.s f19, f27, f12, f24, rdn # perform operation
fnmsub.s f19, f27, f12, f24, rmm # perform operation
fnmsub.s f19, f27, f12, f24, rne # perform operation
fnmsub.s f19, f27, f12, f24, rtz # perform operation
fnmsub.s f19, f27, f12, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f19, f27, f12, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f19, f27, f12, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f19, f27, f12, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f19, f27, f12, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f19, f27, f12, f24 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0x7f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f21, 0(x2) # load 0x80800000 from memory into f21
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f13, 0(x2) # load 0x7f800000 from memory into f13
la x2, scratch
li x3, 0xd3b2f98f # load x3 with value 0xd3b2f98f
sw x3, 0(x2) # store 0xd3b2f98f in memory
flw f1, 0(x2) # load 0xd3b2f98f from memory into f1
fnmsub.s f5, f21, f13, f1, dyn # perform operation
fnmsub.s f5, f21, f13, f1, rdn # perform operation
fnmsub.s f5, f21, f13, f1, rmm # perform operation
fnmsub.s f5, f21, f13, f1, rne # perform operation
fnmsub.s f5, f21, f13, f1, rtz # perform operation
fnmsub.s f5, f21, f13, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f5, f21, f13, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f5, f21, f13, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f5, f21, f13, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f5, f21, f13, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f5, f21, f13, f1 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0xff800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f24, 0(x2) # load 0x80800000 from memory into f24
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f6, 0(x2) # load 0xff800000 from memory into f6
la x2, scratch
li x3, 0x8d4c4bcb # load x3 with value 0x8d4c4bcb
sw x3, 0(x2) # store 0x8d4c4bcb in memory
flw f19, 0(x2) # load 0x8d4c4bcb from memory into f19
fnmsub.s f5, f24, f6, f19, dyn # perform operation
fnmsub.s f5, f24, f6, f19, rdn # perform operation
fnmsub.s f5, f24, f6, f19, rmm # perform operation
fnmsub.s f5, f24, f6, f19, rne # perform operation
fnmsub.s f5, f24, f6, f19, rtz # perform operation
fnmsub.s f5, f24, f6, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f5, f24, f6, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f5, f24, f6, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f5, f24, f6, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f5, f24, f6, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f5, f24, f6, f19 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0x7fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f30, 0(x2) # load 0x80800000 from memory into f30
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f7, 0(x2) # load 0x7fc00000 from memory into f7
la x2, scratch
li x3, 0x09a975d6 # load x3 with value 0x09a975d6
sw x3, 0(x2) # store 0x09a975d6 in memory
flw f9, 0(x2) # load 0x09a975d6 from memory into f9
fnmsub.s f20, f30, f7, f9, dyn # perform operation
fnmsub.s f20, f30, f7, f9, rdn # perform operation
fnmsub.s f20, f30, f7, f9, rmm # perform operation
fnmsub.s f20, f30, f7, f9, rne # perform operation
fnmsub.s f20, f30, f7, f9, rtz # perform operation
fnmsub.s f20, f30, f7, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f20, f30, f7, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f20, f30, f7, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f20, f30, f7, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f20, f30, f7, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f20, f30, f7, f9 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0x7fffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f6, 0(x2) # load 0x80800000 from memory into f6
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f26, 0(x2) # load 0x7fffffff from memory into f26
la x2, scratch
li x3, 0x4de2cae3 # load x3 with value 0x4de2cae3
sw x3, 0(x2) # store 0x4de2cae3 in memory
flw f24, 0(x2) # load 0x4de2cae3 from memory into f24
fnmsub.s f9, f6, f26, f24, dyn # perform operation
fnmsub.s f9, f6, f26, f24, rdn # perform operation
fnmsub.s f9, f6, f26, f24, rmm # perform operation
fnmsub.s f9, f6, f26, f24, rne # perform operation
fnmsub.s f9, f6, f26, f24, rtz # perform operation
fnmsub.s f9, f6, f26, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f9, f6, f26, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f9, f6, f26, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f9, f6, f26, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f9, f6, f26, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f9, f6, f26, f24 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0xffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f31, 0(x2) # load 0x80800000 from memory into f31
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f7, 0(x2) # load 0xffffffff from memory into f7
la x2, scratch
li x3, 0x0eccf604 # load x3 with value 0x0eccf604
sw x3, 0(x2) # store 0x0eccf604 in memory
flw f1, 0(x2) # load 0x0eccf604 from memory into f1
fnmsub.s f28, f31, f7, f1, dyn # perform operation
fnmsub.s f28, f31, f7, f1, rdn # perform operation
fnmsub.s f28, f31, f7, f1, rmm # perform operation
fnmsub.s f28, f31, f7, f1, rne # perform operation
fnmsub.s f28, f31, f7, f1, rtz # perform operation
fnmsub.s f28, f31, f7, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f28, f31, f7, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f28, f31, f7, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f28, f31, f7, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f28, f31, f7, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f28, f31, f7, f1 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0x7f800001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f9, 0(x2) # load 0x80800000 from memory into f9
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f20, 0(x2) # load 0x7f800001 from memory into f20
la x2, scratch
li x3, 0xcf669223 # load x3 with value 0xcf669223
sw x3, 0(x2) # store 0xcf669223 in memory
flw f13, 0(x2) # load 0xcf669223 from memory into f13
fnmsub.s f23, f9, f20, f13, dyn # perform operation
fnmsub.s f23, f9, f20, f13, rdn # perform operation
fnmsub.s f23, f9, f20, f13, rmm # perform operation
fnmsub.s f23, f9, f20, f13, rne # perform operation
fnmsub.s f23, f9, f20, f13, rtz # perform operation
fnmsub.s f23, f9, f20, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f23, f9, f20, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f23, f9, f20, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f23, f9, f20, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f23, f9, f20, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f23, f9, f20, f13 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0x7fbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f15, 0(x2) # load 0x80800000 from memory into f15
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f25, 0(x2) # load 0x7fbfffff from memory into f25
la x2, scratch
li x3, 0x70cd946b # load x3 with value 0x70cd946b
sw x3, 0(x2) # store 0x70cd946b in memory
flw f22, 0(x2) # load 0x70cd946b from memory into f22
fnmsub.s f24, f15, f25, f22, dyn # perform operation
fnmsub.s f24, f15, f25, f22, rdn # perform operation
fnmsub.s f24, f15, f25, f22, rmm # perform operation
fnmsub.s f24, f15, f25, f22, rne # perform operation
fnmsub.s f24, f15, f25, f22, rtz # perform operation
fnmsub.s f24, f15, f25, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f24, f15, f25, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f24, f15, f25, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f24, f15, f25, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f24, f15, f25, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f24, f15, f25, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0xffbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f12, 0(x2) # load 0x80800000 from memory into f12
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f26, 0(x2) # load 0xffbfffff from memory into f26
la x2, scratch
li x3, 0x7d12f8d8 # load x3 with value 0x7d12f8d8
sw x3, 0(x2) # store 0x7d12f8d8 in memory
flw f27, 0(x2) # load 0x7d12f8d8 from memory into f27
fnmsub.s f23, f12, f26, f27, dyn # perform operation
fnmsub.s f23, f12, f26, f27, rdn # perform operation
fnmsub.s f23, f12, f26, f27, rmm # perform operation
fnmsub.s f23, f12, f26, f27, rne # perform operation
fnmsub.s f23, f12, f26, f27, rtz # perform operation
fnmsub.s f23, f12, f26, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f23, f12, f26, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f23, f12, f26, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f23, f12, f26, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f23, f12, f26, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f23, f12, f26, f27 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0x7ef8654f)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f27, 0(x2) # load 0x80800000 from memory into f27
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f1, 0(x2) # load 0x7ef8654f from memory into f1
la x2, scratch
li x3, 0xfc6b8c3e # load x3 with value 0xfc6b8c3e
sw x3, 0(x2) # store 0xfc6b8c3e in memory
flw f16, 0(x2) # load 0xfc6b8c3e from memory into f16
fnmsub.s f22, f27, f1, f16, dyn # perform operation
fnmsub.s f22, f27, f1, f16, rdn # perform operation
fnmsub.s f22, f27, f1, f16, rmm # perform operation
fnmsub.s f22, f27, f1, f16, rne # perform operation
fnmsub.s f22, f27, f1, f16, rtz # perform operation
fnmsub.s f22, f27, f1, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f22, f27, f1, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f22, f27, f1, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f22, f27, f1, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f22, f27, f1, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f22, f27, f1, f16 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0x813d9ab0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f20, 0(x2) # load 0x80800000 from memory into f20
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f22, 0(x2) # load 0x813d9ab0 from memory into f22
la x2, scratch
li x3, 0x2402ca9e # load x3 with value 0x2402ca9e
sw x3, 0(x2) # store 0x2402ca9e in memory
flw f19, 0(x2) # load 0x2402ca9e from memory into f19
fnmsub.s f2, f20, f22, f19, dyn # perform operation
fnmsub.s f2, f20, f22, f19, rdn # perform operation
fnmsub.s f2, f20, f22, f19, rmm # perform operation
fnmsub.s f2, f20, f22, f19, rne # perform operation
fnmsub.s f2, f20, f22, f19, rtz # perform operation
fnmsub.s f2, f20, f22, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f2, f20, f22, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f2, f20, f22, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f2, f20, f22, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f2, f20, f22, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f2, f20, f22, f19 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0x0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f31, 0(x2) # load 0x7f7fffff from memory into f31
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f26, 0(x2) # load 0x00000000 from memory into f26
la x2, scratch
li x3, 0x65b4f219 # load x3 with value 0x65b4f219
sw x3, 0(x2) # store 0x65b4f219 in memory
flw f11, 0(x2) # load 0x65b4f219 from memory into f11
fnmsub.s f13, f31, f26, f11, dyn # perform operation
fnmsub.s f13, f31, f26, f11, rdn # perform operation
fnmsub.s f13, f31, f26, f11, rmm # perform operation
fnmsub.s f13, f31, f26, f11, rne # perform operation
fnmsub.s f13, f31, f26, f11, rtz # perform operation
fnmsub.s f13, f31, f26, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f13, f31, f26, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f13, f31, f26, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f13, f31, f26, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f13, f31, f26, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f13, f31, f26, f11 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0x80000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f13, 0(x2) # load 0x7f7fffff from memory into f13
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f25, 0(x2) # load 0x80000000 from memory into f25
la x2, scratch
li x3, 0xcf6c1a81 # load x3 with value 0xcf6c1a81
sw x3, 0(x2) # store 0xcf6c1a81 in memory
flw f5, 0(x2) # load 0xcf6c1a81 from memory into f5
fnmsub.s f22, f13, f25, f5, dyn # perform operation
fnmsub.s f22, f13, f25, f5, rdn # perform operation
fnmsub.s f22, f13, f25, f5, rmm # perform operation
fnmsub.s f22, f13, f25, f5, rne # perform operation
fnmsub.s f22, f13, f25, f5, rtz # perform operation
fnmsub.s f22, f13, f25, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f22, f13, f25, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f22, f13, f25, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f22, f13, f25, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f22, f13, f25, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f22, f13, f25, f5 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0x3f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f10, 0(x2) # load 0x7f7fffff from memory into f10
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f26, 0(x2) # load 0x3f800000 from memory into f26
la x2, scratch
li x3, 0x17811be1 # load x3 with value 0x17811be1
sw x3, 0(x2) # store 0x17811be1 in memory
flw f31, 0(x2) # load 0x17811be1 from memory into f31
fnmsub.s f5, f10, f26, f31, dyn # perform operation
fnmsub.s f5, f10, f26, f31, rdn # perform operation
fnmsub.s f5, f10, f26, f31, rmm # perform operation
fnmsub.s f5, f10, f26, f31, rne # perform operation
fnmsub.s f5, f10, f26, f31, rtz # perform operation
fnmsub.s f5, f10, f26, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f5, f10, f26, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f5, f10, f26, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f5, f10, f26, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f5, f10, f26, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f5, f10, f26, f31 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0xbf800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f8, 0(x2) # load 0x7f7fffff from memory into f8
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f30, 0(x2) # load 0xbf800000 from memory into f30
la x2, scratch
li x3, 0x522b374f # load x3 with value 0x522b374f
sw x3, 0(x2) # store 0x522b374f in memory
flw f14, 0(x2) # load 0x522b374f from memory into f14
fnmsub.s f2, f8, f30, f14, dyn # perform operation
fnmsub.s f2, f8, f30, f14, rdn # perform operation
fnmsub.s f2, f8, f30, f14, rmm # perform operation
fnmsub.s f2, f8, f30, f14, rne # perform operation
fnmsub.s f2, f8, f30, f14, rtz # perform operation
fnmsub.s f2, f8, f30, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f2, f8, f30, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f2, f8, f30, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f2, f8, f30, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f2, f8, f30, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f2, f8, f30, f14 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0x3fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f3, 0(x2) # load 0x7f7fffff from memory into f3
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f10, 0(x2) # load 0x3fc00000 from memory into f10
la x2, scratch
li x3, 0xec9f99d5 # load x3 with value 0xec9f99d5
sw x3, 0(x2) # store 0xec9f99d5 in memory
flw f2, 0(x2) # load 0xec9f99d5 from memory into f2
fnmsub.s f14, f3, f10, f2, dyn # perform operation
fnmsub.s f14, f3, f10, f2, rdn # perform operation
fnmsub.s f14, f3, f10, f2, rmm # perform operation
fnmsub.s f14, f3, f10, f2, rne # perform operation
fnmsub.s f14, f3, f10, f2, rtz # perform operation
fnmsub.s f14, f3, f10, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f14, f3, f10, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f14, f3, f10, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f14, f3, f10, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f14, f3, f10, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f14, f3, f10, f2 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0xbfc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f18, 0(x2) # load 0x7f7fffff from memory into f18
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f28, 0(x2) # load 0xbfc00000 from memory into f28
la x2, scratch
li x3, 0xf5d15337 # load x3 with value 0xf5d15337
sw x3, 0(x2) # store 0xf5d15337 in memory
flw f26, 0(x2) # load 0xf5d15337 from memory into f26
fnmsub.s f1, f18, f28, f26, dyn # perform operation
fnmsub.s f1, f18, f28, f26, rdn # perform operation
fnmsub.s f1, f18, f28, f26, rmm # perform operation
fnmsub.s f1, f18, f28, f26, rne # perform operation
fnmsub.s f1, f18, f28, f26, rtz # perform operation
fnmsub.s f1, f18, f28, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f1, f18, f28, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f1, f18, f28, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f1, f18, f28, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f1, f18, f28, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f1, f18, f28, f26 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0x40000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f28, 0(x2) # load 0x7f7fffff from memory into f28
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f17, 0(x2) # load 0x40000000 from memory into f17
la x2, scratch
li x3, 0x008a0757 # load x3 with value 0x008a0757
sw x3, 0(x2) # store 0x008a0757 in memory
flw f1, 0(x2) # load 0x008a0757 from memory into f1
fnmsub.s f26, f28, f17, f1, dyn # perform operation
fnmsub.s f26, f28, f17, f1, rdn # perform operation
fnmsub.s f26, f28, f17, f1, rmm # perform operation
fnmsub.s f26, f28, f17, f1, rne # perform operation
fnmsub.s f26, f28, f17, f1, rtz # perform operation
fnmsub.s f26, f28, f17, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f26, f28, f17, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f26, f28, f17, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f26, f28, f17, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f26, f28, f17, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f26, f28, f17, f1 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0xc0000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f8, 0(x2) # load 0x7f7fffff from memory into f8
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f28, 0(x2) # load 0xc0000000 from memory into f28
la x2, scratch
li x3, 0xd1d4b1f5 # load x3 with value 0xd1d4b1f5
sw x3, 0(x2) # store 0xd1d4b1f5 in memory
flw f12, 0(x2) # load 0xd1d4b1f5 from memory into f12
fnmsub.s f3, f8, f28, f12, dyn # perform operation
fnmsub.s f3, f8, f28, f12, rdn # perform operation
fnmsub.s f3, f8, f28, f12, rmm # perform operation
fnmsub.s f3, f8, f28, f12, rne # perform operation
fnmsub.s f3, f8, f28, f12, rtz # perform operation
fnmsub.s f3, f8, f28, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f3, f8, f28, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f3, f8, f28, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f3, f8, f28, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f3, f8, f28, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f3, f8, f28, f12 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0x800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f21, 0(x2) # load 0x7f7fffff from memory into f21
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f1, 0(x2) # load 0x00800000 from memory into f1
la x2, scratch
li x3, 0xbe27ccc2 # load x3 with value 0xbe27ccc2
sw x3, 0(x2) # store 0xbe27ccc2 in memory
flw f12, 0(x2) # load 0xbe27ccc2 from memory into f12
fnmsub.s f17, f21, f1, f12, dyn # perform operation
fnmsub.s f17, f21, f1, f12, rdn # perform operation
fnmsub.s f17, f21, f1, f12, rmm # perform operation
fnmsub.s f17, f21, f1, f12, rne # perform operation
fnmsub.s f17, f21, f1, f12, rtz # perform operation
fnmsub.s f17, f21, f1, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f17, f21, f1, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f17, f21, f1, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f17, f21, f1, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f17, f21, f1, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f17, f21, f1, f12 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0x80800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f14, 0(x2) # load 0x7f7fffff from memory into f14
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f20, 0(x2) # load 0x80800000 from memory into f20
la x2, scratch
li x3, 0x31620a22 # load x3 with value 0x31620a22
sw x3, 0(x2) # store 0x31620a22 in memory
flw f1, 0(x2) # load 0x31620a22 from memory into f1
fnmsub.s f7, f14, f20, f1, dyn # perform operation
fnmsub.s f7, f14, f20, f1, rdn # perform operation
fnmsub.s f7, f14, f20, f1, rmm # perform operation
fnmsub.s f7, f14, f20, f1, rne # perform operation
fnmsub.s f7, f14, f20, f1, rtz # perform operation
fnmsub.s f7, f14, f20, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f7, f14, f20, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f7, f14, f20, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f7, f14, f20, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f7, f14, f20, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f7, f14, f20, f1 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0x7f7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f1, 0(x2) # load 0x7f7fffff from memory into f1
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f14, 0(x2) # load 0x7f7fffff from memory into f14
la x2, scratch
li x3, 0x4c1a5fe3 # load x3 with value 0x4c1a5fe3
sw x3, 0(x2) # store 0x4c1a5fe3 in memory
flw f22, 0(x2) # load 0x4c1a5fe3 from memory into f22
fnmsub.s f5, f1, f14, f22, dyn # perform operation
fnmsub.s f5, f1, f14, f22, rdn # perform operation
fnmsub.s f5, f1, f14, f22, rmm # perform operation
fnmsub.s f5, f1, f14, f22, rne # perform operation
fnmsub.s f5, f1, f14, f22, rtz # perform operation
fnmsub.s f5, f1, f14, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f5, f1, f14, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f5, f1, f14, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f5, f1, f14, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f5, f1, f14, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f5, f1, f14, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0xff7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f13, 0(x2) # load 0x7f7fffff from memory into f13
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f19, 0(x2) # load 0xff7fffff from memory into f19
la x2, scratch
li x3, 0x581f94b9 # load x3 with value 0x581f94b9
sw x3, 0(x2) # store 0x581f94b9 in memory
flw f1, 0(x2) # load 0x581f94b9 from memory into f1
fnmsub.s f30, f13, f19, f1, dyn # perform operation
fnmsub.s f30, f13, f19, f1, rdn # perform operation
fnmsub.s f30, f13, f19, f1, rmm # perform operation
fnmsub.s f30, f13, f19, f1, rne # perform operation
fnmsub.s f30, f13, f19, f1, rtz # perform operation
fnmsub.s f30, f13, f19, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f30, f13, f19, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f30, f13, f19, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f30, f13, f19, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f30, f13, f19, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f30, f13, f19, f1 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0x7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f25, 0(x2) # load 0x7f7fffff from memory into f25
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f7, 0(x2) # load 0x007fffff from memory into f7
la x2, scratch
li x3, 0x65ddcfc2 # load x3 with value 0x65ddcfc2
sw x3, 0(x2) # store 0x65ddcfc2 in memory
flw f29, 0(x2) # load 0x65ddcfc2 from memory into f29
fnmsub.s f30, f25, f7, f29, dyn # perform operation
fnmsub.s f30, f25, f7, f29, rdn # perform operation
fnmsub.s f30, f25, f7, f29, rmm # perform operation
fnmsub.s f30, f25, f7, f29, rne # perform operation
fnmsub.s f30, f25, f7, f29, rtz # perform operation
fnmsub.s f30, f25, f7, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f30, f25, f7, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f30, f25, f7, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f30, f25, f7, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f30, f25, f7, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f30, f25, f7, f29 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0x807fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f28, 0(x2) # load 0x7f7fffff from memory into f28
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f18, 0(x2) # load 0x807fffff from memory into f18
la x2, scratch
li x3, 0x0e5fb7fd # load x3 with value 0x0e5fb7fd
sw x3, 0(x2) # store 0x0e5fb7fd in memory
flw f12, 0(x2) # load 0x0e5fb7fd from memory into f12
fnmsub.s f8, f28, f18, f12, dyn # perform operation
fnmsub.s f8, f28, f18, f12, rdn # perform operation
fnmsub.s f8, f28, f18, f12, rmm # perform operation
fnmsub.s f8, f28, f18, f12, rne # perform operation
fnmsub.s f8, f28, f18, f12, rtz # perform operation
fnmsub.s f8, f28, f18, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f8, f28, f18, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f8, f28, f18, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f8, f28, f18, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f8, f28, f18, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f8, f28, f18, f12 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0x400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f6, 0(x2) # load 0x7f7fffff from memory into f6
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f24, 0(x2) # load 0x00400000 from memory into f24
la x2, scratch
li x3, 0xc7606946 # load x3 with value 0xc7606946
sw x3, 0(x2) # store 0xc7606946 in memory
flw f23, 0(x2) # load 0xc7606946 from memory into f23
fnmsub.s f14, f6, f24, f23, dyn # perform operation
fnmsub.s f14, f6, f24, f23, rdn # perform operation
fnmsub.s f14, f6, f24, f23, rmm # perform operation
fnmsub.s f14, f6, f24, f23, rne # perform operation
fnmsub.s f14, f6, f24, f23, rtz # perform operation
fnmsub.s f14, f6, f24, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f14, f6, f24, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f14, f6, f24, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f14, f6, f24, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f14, f6, f24, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f14, f6, f24, f23 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0x80400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f12, 0(x2) # load 0x7f7fffff from memory into f12
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f30, 0(x2) # load 0x80400000 from memory into f30
la x2, scratch
li x3, 0xdd04017c # load x3 with value 0xdd04017c
sw x3, 0(x2) # store 0xdd04017c in memory
flw f23, 0(x2) # load 0xdd04017c from memory into f23
fnmsub.s f24, f12, f30, f23, dyn # perform operation
fnmsub.s f24, f12, f30, f23, rdn # perform operation
fnmsub.s f24, f12, f30, f23, rmm # perform operation
fnmsub.s f24, f12, f30, f23, rne # perform operation
fnmsub.s f24, f12, f30, f23, rtz # perform operation
fnmsub.s f24, f12, f30, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f24, f12, f30, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f24, f12, f30, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f24, f12, f30, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f24, f12, f30, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f24, f12, f30, f23 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0x1)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f28, 0(x2) # load 0x7f7fffff from memory into f28
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f24, 0(x2) # load 0x00000001 from memory into f24
la x2, scratch
li x3, 0x0542e179 # load x3 with value 0x0542e179
sw x3, 0(x2) # store 0x0542e179 in memory
flw f15, 0(x2) # load 0x0542e179 from memory into f15
fnmsub.s f16, f28, f24, f15, dyn # perform operation
fnmsub.s f16, f28, f24, f15, rdn # perform operation
fnmsub.s f16, f28, f24, f15, rmm # perform operation
fnmsub.s f16, f28, f24, f15, rne # perform operation
fnmsub.s f16, f28, f24, f15, rtz # perform operation
fnmsub.s f16, f28, f24, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f16, f28, f24, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f16, f28, f24, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f16, f28, f24, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f16, f28, f24, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f16, f28, f24, f15 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0x80000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f16, 0(x2) # load 0x7f7fffff from memory into f16
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f9, 0(x2) # load 0x80000001 from memory into f9
la x2, scratch
li x3, 0x5d82ef9c # load x3 with value 0x5d82ef9c
sw x3, 0(x2) # store 0x5d82ef9c in memory
flw f20, 0(x2) # load 0x5d82ef9c from memory into f20
fnmsub.s f25, f16, f9, f20, dyn # perform operation
fnmsub.s f25, f16, f9, f20, rdn # perform operation
fnmsub.s f25, f16, f9, f20, rmm # perform operation
fnmsub.s f25, f16, f9, f20, rne # perform operation
fnmsub.s f25, f16, f9, f20, rtz # perform operation
fnmsub.s f25, f16, f9, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f25, f16, f9, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f25, f16, f9, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f25, f16, f9, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f25, f16, f9, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f25, f16, f9, f20 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0x7f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f18, 0(x2) # load 0x7f7fffff from memory into f18
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f16, 0(x2) # load 0x7f800000 from memory into f16
la x2, scratch
li x3, 0x9d79710b # load x3 with value 0x9d79710b
sw x3, 0(x2) # store 0x9d79710b in memory
flw f27, 0(x2) # load 0x9d79710b from memory into f27
fnmsub.s f1, f18, f16, f27, dyn # perform operation
fnmsub.s f1, f18, f16, f27, rdn # perform operation
fnmsub.s f1, f18, f16, f27, rmm # perform operation
fnmsub.s f1, f18, f16, f27, rne # perform operation
fnmsub.s f1, f18, f16, f27, rtz # perform operation
fnmsub.s f1, f18, f16, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f1, f18, f16, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f1, f18, f16, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f1, f18, f16, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f1, f18, f16, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f1, f18, f16, f27 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0xff800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f22, 0(x2) # load 0x7f7fffff from memory into f22
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f10, 0(x2) # load 0xff800000 from memory into f10
la x2, scratch
li x3, 0xed12cbdc # load x3 with value 0xed12cbdc
sw x3, 0(x2) # store 0xed12cbdc in memory
flw f30, 0(x2) # load 0xed12cbdc from memory into f30
fnmsub.s f13, f22, f10, f30, dyn # perform operation
fnmsub.s f13, f22, f10, f30, rdn # perform operation
fnmsub.s f13, f22, f10, f30, rmm # perform operation
fnmsub.s f13, f22, f10, f30, rne # perform operation
fnmsub.s f13, f22, f10, f30, rtz # perform operation
fnmsub.s f13, f22, f10, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f13, f22, f10, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f13, f22, f10, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f13, f22, f10, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f13, f22, f10, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f13, f22, f10, f30 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0x7fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f22, 0(x2) # load 0x7f7fffff from memory into f22
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f11, 0(x2) # load 0x7fc00000 from memory into f11
la x2, scratch
li x3, 0xf9e2c1d9 # load x3 with value 0xf9e2c1d9
sw x3, 0(x2) # store 0xf9e2c1d9 in memory
flw f30, 0(x2) # load 0xf9e2c1d9 from memory into f30
fnmsub.s f8, f22, f11, f30, dyn # perform operation
fnmsub.s f8, f22, f11, f30, rdn # perform operation
fnmsub.s f8, f22, f11, f30, rmm # perform operation
fnmsub.s f8, f22, f11, f30, rne # perform operation
fnmsub.s f8, f22, f11, f30, rtz # perform operation
fnmsub.s f8, f22, f11, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f8, f22, f11, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f8, f22, f11, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f8, f22, f11, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f8, f22, f11, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f8, f22, f11, f30 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0x7fffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f13, 0(x2) # load 0x7f7fffff from memory into f13
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f11, 0(x2) # load 0x7fffffff from memory into f11
la x2, scratch
li x3, 0x1cf554b4 # load x3 with value 0x1cf554b4
sw x3, 0(x2) # store 0x1cf554b4 in memory
flw f20, 0(x2) # load 0x1cf554b4 from memory into f20
fnmsub.s f26, f13, f11, f20, dyn # perform operation
fnmsub.s f26, f13, f11, f20, rdn # perform operation
fnmsub.s f26, f13, f11, f20, rmm # perform operation
fnmsub.s f26, f13, f11, f20, rne # perform operation
fnmsub.s f26, f13, f11, f20, rtz # perform operation
fnmsub.s f26, f13, f11, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f26, f13, f11, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f26, f13, f11, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f26, f13, f11, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f26, f13, f11, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f26, f13, f11, f20 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0xffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f28, 0(x2) # load 0x7f7fffff from memory into f28
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f22, 0(x2) # load 0xffffffff from memory into f22
la x2, scratch
li x3, 0x3ee4b703 # load x3 with value 0x3ee4b703
sw x3, 0(x2) # store 0x3ee4b703 in memory
flw f27, 0(x2) # load 0x3ee4b703 from memory into f27
fnmsub.s f12, f28, f22, f27, dyn # perform operation
fnmsub.s f12, f28, f22, f27, rdn # perform operation
fnmsub.s f12, f28, f22, f27, rmm # perform operation
fnmsub.s f12, f28, f22, f27, rne # perform operation
fnmsub.s f12, f28, f22, f27, rtz # perform operation
fnmsub.s f12, f28, f22, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f12, f28, f22, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f12, f28, f22, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f12, f28, f22, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f12, f28, f22, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f12, f28, f22, f27 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0x7f800001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f13, 0(x2) # load 0x7f7fffff from memory into f13
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f21, 0(x2) # load 0x7f800001 from memory into f21
la x2, scratch
li x3, 0xe62e512d # load x3 with value 0xe62e512d
sw x3, 0(x2) # store 0xe62e512d in memory
flw f3, 0(x2) # load 0xe62e512d from memory into f3
fnmsub.s f12, f13, f21, f3, dyn # perform operation
fnmsub.s f12, f13, f21, f3, rdn # perform operation
fnmsub.s f12, f13, f21, f3, rmm # perform operation
fnmsub.s f12, f13, f21, f3, rne # perform operation
fnmsub.s f12, f13, f21, f3, rtz # perform operation
fnmsub.s f12, f13, f21, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f12, f13, f21, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f12, f13, f21, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f12, f13, f21, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f12, f13, f21, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f12, f13, f21, f3 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0x7fbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f24, 0(x2) # load 0x7f7fffff from memory into f24
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f2, 0(x2) # load 0x7fbfffff from memory into f2
la x2, scratch
li x3, 0xee906e91 # load x3 with value 0xee906e91
sw x3, 0(x2) # store 0xee906e91 in memory
flw f15, 0(x2) # load 0xee906e91 from memory into f15
fnmsub.s f29, f24, f2, f15, dyn # perform operation
fnmsub.s f29, f24, f2, f15, rdn # perform operation
fnmsub.s f29, f24, f2, f15, rmm # perform operation
fnmsub.s f29, f24, f2, f15, rne # perform operation
fnmsub.s f29, f24, f2, f15, rtz # perform operation
fnmsub.s f29, f24, f2, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f29, f24, f2, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f29, f24, f2, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f29, f24, f2, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f29, f24, f2, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f29, f24, f2, f15 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0xffbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f6, 0(x2) # load 0x7f7fffff from memory into f6
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f13, 0(x2) # load 0xffbfffff from memory into f13
la x2, scratch
li x3, 0xff0dca57 # load x3 with value 0xff0dca57
sw x3, 0(x2) # store 0xff0dca57 in memory
flw f28, 0(x2) # load 0xff0dca57 from memory into f28
fnmsub.s f11, f6, f13, f28, dyn # perform operation
fnmsub.s f11, f6, f13, f28, rdn # perform operation
fnmsub.s f11, f6, f13, f28, rmm # perform operation
fnmsub.s f11, f6, f13, f28, rne # perform operation
fnmsub.s f11, f6, f13, f28, rtz # perform operation
fnmsub.s f11, f6, f13, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f11, f6, f13, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f11, f6, f13, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f11, f6, f13, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f11, f6, f13, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f11, f6, f13, f28 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0x7ef8654f)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f15, 0(x2) # load 0x7f7fffff from memory into f15
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f19, 0(x2) # load 0x7ef8654f from memory into f19
la x2, scratch
li x3, 0x08945885 # load x3 with value 0x08945885
sw x3, 0(x2) # store 0x08945885 in memory
flw f3, 0(x2) # load 0x08945885 from memory into f3
fnmsub.s f8, f15, f19, f3, dyn # perform operation
fnmsub.s f8, f15, f19, f3, rdn # perform operation
fnmsub.s f8, f15, f19, f3, rmm # perform operation
fnmsub.s f8, f15, f19, f3, rne # perform operation
fnmsub.s f8, f15, f19, f3, rtz # perform operation
fnmsub.s f8, f15, f19, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f8, f15, f19, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f8, f15, f19, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f8, f15, f19, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f8, f15, f19, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f8, f15, f19, f3 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0x813d9ab0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f23, 0(x2) # load 0x7f7fffff from memory into f23
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f20, 0(x2) # load 0x813d9ab0 from memory into f20
la x2, scratch
li x3, 0xdd1aa3e3 # load x3 with value 0xdd1aa3e3
sw x3, 0(x2) # store 0xdd1aa3e3 in memory
flw f6, 0(x2) # load 0xdd1aa3e3 from memory into f6
fnmsub.s f3, f23, f20, f6, dyn # perform operation
fnmsub.s f3, f23, f20, f6, rdn # perform operation
fnmsub.s f3, f23, f20, f6, rmm # perform operation
fnmsub.s f3, f23, f20, f6, rne # perform operation
fnmsub.s f3, f23, f20, f6, rtz # perform operation
fnmsub.s f3, f23, f20, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f3, f23, f20, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f3, f23, f20, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f3, f23, f20, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f3, f23, f20, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f3, f23, f20, f6 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0x0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f16, 0(x2) # load 0xff7fffff from memory into f16
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f31, 0(x2) # load 0x00000000 from memory into f31
la x2, scratch
li x3, 0x92a03a76 # load x3 with value 0x92a03a76
sw x3, 0(x2) # store 0x92a03a76 in memory
flw f27, 0(x2) # load 0x92a03a76 from memory into f27
fnmsub.s f10, f16, f31, f27, dyn # perform operation
fnmsub.s f10, f16, f31, f27, rdn # perform operation
fnmsub.s f10, f16, f31, f27, rmm # perform operation
fnmsub.s f10, f16, f31, f27, rne # perform operation
fnmsub.s f10, f16, f31, f27, rtz # perform operation
fnmsub.s f10, f16, f31, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f10, f16, f31, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f10, f16, f31, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f10, f16, f31, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f10, f16, f31, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f10, f16, f31, f27 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0x80000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f7, 0(x2) # load 0xff7fffff from memory into f7
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f16, 0(x2) # load 0x80000000 from memory into f16
la x2, scratch
li x3, 0x99f9e747 # load x3 with value 0x99f9e747
sw x3, 0(x2) # store 0x99f9e747 in memory
flw f14, 0(x2) # load 0x99f9e747 from memory into f14
fnmsub.s f19, f7, f16, f14, dyn # perform operation
fnmsub.s f19, f7, f16, f14, rdn # perform operation
fnmsub.s f19, f7, f16, f14, rmm # perform operation
fnmsub.s f19, f7, f16, f14, rne # perform operation
fnmsub.s f19, f7, f16, f14, rtz # perform operation
fnmsub.s f19, f7, f16, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f19, f7, f16, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f19, f7, f16, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f19, f7, f16, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f19, f7, f16, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f19, f7, f16, f14 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0x3f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f5, 0(x2) # load 0xff7fffff from memory into f5
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f3, 0(x2) # load 0x3f800000 from memory into f3
la x2, scratch
li x3, 0x1d8252cd # load x3 with value 0x1d8252cd
sw x3, 0(x2) # store 0x1d8252cd in memory
flw f11, 0(x2) # load 0x1d8252cd from memory into f11
fnmsub.s f29, f5, f3, f11, dyn # perform operation
fnmsub.s f29, f5, f3, f11, rdn # perform operation
fnmsub.s f29, f5, f3, f11, rmm # perform operation
fnmsub.s f29, f5, f3, f11, rne # perform operation
fnmsub.s f29, f5, f3, f11, rtz # perform operation
fnmsub.s f29, f5, f3, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f29, f5, f3, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f29, f5, f3, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f29, f5, f3, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f29, f5, f3, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f29, f5, f3, f11 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0xbf800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f31, 0(x2) # load 0xff7fffff from memory into f31
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f15, 0(x2) # load 0xbf800000 from memory into f15
la x2, scratch
li x3, 0xf2025ea7 # load x3 with value 0xf2025ea7
sw x3, 0(x2) # store 0xf2025ea7 in memory
flw f28, 0(x2) # load 0xf2025ea7 from memory into f28
fnmsub.s f14, f31, f15, f28, dyn # perform operation
fnmsub.s f14, f31, f15, f28, rdn # perform operation
fnmsub.s f14, f31, f15, f28, rmm # perform operation
fnmsub.s f14, f31, f15, f28, rne # perform operation
fnmsub.s f14, f31, f15, f28, rtz # perform operation
fnmsub.s f14, f31, f15, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f14, f31, f15, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f14, f31, f15, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f14, f31, f15, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f14, f31, f15, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f14, f31, f15, f28 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0x3fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f20, 0(x2) # load 0xff7fffff from memory into f20
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f22, 0(x2) # load 0x3fc00000 from memory into f22
la x2, scratch
li x3, 0xfcadaa7b # load x3 with value 0xfcadaa7b
sw x3, 0(x2) # store 0xfcadaa7b in memory
flw f6, 0(x2) # load 0xfcadaa7b from memory into f6
fnmsub.s f18, f20, f22, f6, dyn # perform operation
fnmsub.s f18, f20, f22, f6, rdn # perform operation
fnmsub.s f18, f20, f22, f6, rmm # perform operation
fnmsub.s f18, f20, f22, f6, rne # perform operation
fnmsub.s f18, f20, f22, f6, rtz # perform operation
fnmsub.s f18, f20, f22, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f18, f20, f22, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f18, f20, f22, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f18, f20, f22, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f18, f20, f22, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f18, f20, f22, f6 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0xbfc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f26, 0(x2) # load 0xff7fffff from memory into f26
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f27, 0(x2) # load 0xbfc00000 from memory into f27
la x2, scratch
li x3, 0x08fe42d9 # load x3 with value 0x08fe42d9
sw x3, 0(x2) # store 0x08fe42d9 in memory
flw f24, 0(x2) # load 0x08fe42d9 from memory into f24
fnmsub.s f20, f26, f27, f24, dyn # perform operation
fnmsub.s f20, f26, f27, f24, rdn # perform operation
fnmsub.s f20, f26, f27, f24, rmm # perform operation
fnmsub.s f20, f26, f27, f24, rne # perform operation
fnmsub.s f20, f26, f27, f24, rtz # perform operation
fnmsub.s f20, f26, f27, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f20, f26, f27, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f20, f26, f27, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f20, f26, f27, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f20, f26, f27, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f20, f26, f27, f24 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0x40000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f7, 0(x2) # load 0xff7fffff from memory into f7
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f20, 0(x2) # load 0x40000000 from memory into f20
la x2, scratch
li x3, 0x65d1444d # load x3 with value 0x65d1444d
sw x3, 0(x2) # store 0x65d1444d in memory
flw f2, 0(x2) # load 0x65d1444d from memory into f2
fnmsub.s f15, f7, f20, f2, dyn # perform operation
fnmsub.s f15, f7, f20, f2, rdn # perform operation
fnmsub.s f15, f7, f20, f2, rmm # perform operation
fnmsub.s f15, f7, f20, f2, rne # perform operation
fnmsub.s f15, f7, f20, f2, rtz # perform operation
fnmsub.s f15, f7, f20, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f15, f7, f20, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f15, f7, f20, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f15, f7, f20, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f15, f7, f20, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f15, f7, f20, f2 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0xc0000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f12, 0(x2) # load 0xff7fffff from memory into f12
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f15, 0(x2) # load 0xc0000000 from memory into f15
la x2, scratch
li x3, 0xe55652fc # load x3 with value 0xe55652fc
sw x3, 0(x2) # store 0xe55652fc in memory
flw f21, 0(x2) # load 0xe55652fc from memory into f21
fnmsub.s f9, f12, f15, f21, dyn # perform operation
fnmsub.s f9, f12, f15, f21, rdn # perform operation
fnmsub.s f9, f12, f15, f21, rmm # perform operation
fnmsub.s f9, f12, f15, f21, rne # perform operation
fnmsub.s f9, f12, f15, f21, rtz # perform operation
fnmsub.s f9, f12, f15, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f9, f12, f15, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f9, f12, f15, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f9, f12, f15, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f9, f12, f15, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f9, f12, f15, f21 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0x800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f3, 0(x2) # load 0xff7fffff from memory into f3
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f7, 0(x2) # load 0x00800000 from memory into f7
la x2, scratch
li x3, 0xfa729100 # load x3 with value 0xfa729100
sw x3, 0(x2) # store 0xfa729100 in memory
flw f24, 0(x2) # load 0xfa729100 from memory into f24
fnmsub.s f25, f3, f7, f24, dyn # perform operation
fnmsub.s f25, f3, f7, f24, rdn # perform operation
fnmsub.s f25, f3, f7, f24, rmm # perform operation
fnmsub.s f25, f3, f7, f24, rne # perform operation
fnmsub.s f25, f3, f7, f24, rtz # perform operation
fnmsub.s f25, f3, f7, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f25, f3, f7, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f25, f3, f7, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f25, f3, f7, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f25, f3, f7, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f25, f3, f7, f24 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0x80800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f16, 0(x2) # load 0xff7fffff from memory into f16
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f13, 0(x2) # load 0x80800000 from memory into f13
la x2, scratch
li x3, 0x40eb63ef # load x3 with value 0x40eb63ef
sw x3, 0(x2) # store 0x40eb63ef in memory
flw f12, 0(x2) # load 0x40eb63ef from memory into f12
fnmsub.s f21, f16, f13, f12, dyn # perform operation
fnmsub.s f21, f16, f13, f12, rdn # perform operation
fnmsub.s f21, f16, f13, f12, rmm # perform operation
fnmsub.s f21, f16, f13, f12, rne # perform operation
fnmsub.s f21, f16, f13, f12, rtz # perform operation
fnmsub.s f21, f16, f13, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f21, f16, f13, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f21, f16, f13, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f21, f16, f13, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f21, f16, f13, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f21, f16, f13, f12 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0x7f7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f25, 0(x2) # load 0xff7fffff from memory into f25
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f19, 0(x2) # load 0x7f7fffff from memory into f19
la x2, scratch
li x3, 0xd63b045d # load x3 with value 0xd63b045d
sw x3, 0(x2) # store 0xd63b045d in memory
flw f12, 0(x2) # load 0xd63b045d from memory into f12
fnmsub.s f27, f25, f19, f12, dyn # perform operation
fnmsub.s f27, f25, f19, f12, rdn # perform operation
fnmsub.s f27, f25, f19, f12, rmm # perform operation
fnmsub.s f27, f25, f19, f12, rne # perform operation
fnmsub.s f27, f25, f19, f12, rtz # perform operation
fnmsub.s f27, f25, f19, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f27, f25, f19, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f27, f25, f19, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f27, f25, f19, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f27, f25, f19, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f27, f25, f19, f12 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0xff7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f21, 0(x2) # load 0xff7fffff from memory into f21
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f22, 0(x2) # load 0xff7fffff from memory into f22
la x2, scratch
li x3, 0x5825ee0c # load x3 with value 0x5825ee0c
sw x3, 0(x2) # store 0x5825ee0c in memory
flw f11, 0(x2) # load 0x5825ee0c from memory into f11
fnmsub.s f24, f21, f22, f11, dyn # perform operation
fnmsub.s f24, f21, f22, f11, rdn # perform operation
fnmsub.s f24, f21, f22, f11, rmm # perform operation
fnmsub.s f24, f21, f22, f11, rne # perform operation
fnmsub.s f24, f21, f22, f11, rtz # perform operation
fnmsub.s f24, f21, f22, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f24, f21, f22, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f24, f21, f22, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f24, f21, f22, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f24, f21, f22, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f24, f21, f22, f11 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0x7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f25, 0(x2) # load 0xff7fffff from memory into f25
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f19, 0(x2) # load 0x007fffff from memory into f19
la x2, scratch
li x3, 0xabed288c # load x3 with value 0xabed288c
sw x3, 0(x2) # store 0xabed288c in memory
flw f23, 0(x2) # load 0xabed288c from memory into f23
fnmsub.s f6, f25, f19, f23, dyn # perform operation
fnmsub.s f6, f25, f19, f23, rdn # perform operation
fnmsub.s f6, f25, f19, f23, rmm # perform operation
fnmsub.s f6, f25, f19, f23, rne # perform operation
fnmsub.s f6, f25, f19, f23, rtz # perform operation
fnmsub.s f6, f25, f19, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f6, f25, f19, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f6, f25, f19, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f6, f25, f19, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f6, f25, f19, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f6, f25, f19, f23 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0x807fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f6, 0(x2) # load 0xff7fffff from memory into f6
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f18, 0(x2) # load 0x807fffff from memory into f18
la x2, scratch
li x3, 0x23c63792 # load x3 with value 0x23c63792
sw x3, 0(x2) # store 0x23c63792 in memory
flw f17, 0(x2) # load 0x23c63792 from memory into f17
fnmsub.s f10, f6, f18, f17, dyn # perform operation
fnmsub.s f10, f6, f18, f17, rdn # perform operation
fnmsub.s f10, f6, f18, f17, rmm # perform operation
fnmsub.s f10, f6, f18, f17, rne # perform operation
fnmsub.s f10, f6, f18, f17, rtz # perform operation
fnmsub.s f10, f6, f18, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f10, f6, f18, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f10, f6, f18, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f10, f6, f18, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f10, f6, f18, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f10, f6, f18, f17 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0x400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f6, 0(x2) # load 0xff7fffff from memory into f6
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f7, 0(x2) # load 0x00400000 from memory into f7
la x2, scratch
li x3, 0xee09812b # load x3 with value 0xee09812b
sw x3, 0(x2) # store 0xee09812b in memory
flw f1, 0(x2) # load 0xee09812b from memory into f1
fnmsub.s f16, f6, f7, f1, dyn # perform operation
fnmsub.s f16, f6, f7, f1, rdn # perform operation
fnmsub.s f16, f6, f7, f1, rmm # perform operation
fnmsub.s f16, f6, f7, f1, rne # perform operation
fnmsub.s f16, f6, f7, f1, rtz # perform operation
fnmsub.s f16, f6, f7, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f16, f6, f7, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f16, f6, f7, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f16, f6, f7, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f16, f6, f7, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f16, f6, f7, f1 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0x80400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f9, 0(x2) # load 0xff7fffff from memory into f9
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f8, 0(x2) # load 0x80400000 from memory into f8
la x2, scratch
li x3, 0x0ad27ecf # load x3 with value 0x0ad27ecf
sw x3, 0(x2) # store 0x0ad27ecf in memory
flw f14, 0(x2) # load 0x0ad27ecf from memory into f14
fnmsub.s f2, f9, f8, f14, dyn # perform operation
fnmsub.s f2, f9, f8, f14, rdn # perform operation
fnmsub.s f2, f9, f8, f14, rmm # perform operation
fnmsub.s f2, f9, f8, f14, rne # perform operation
fnmsub.s f2, f9, f8, f14, rtz # perform operation
fnmsub.s f2, f9, f8, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f2, f9, f8, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f2, f9, f8, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f2, f9, f8, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f2, f9, f8, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f2, f9, f8, f14 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0x1)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f15, 0(x2) # load 0xff7fffff from memory into f15
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f20, 0(x2) # load 0x00000001 from memory into f20
la x2, scratch
li x3, 0x73f5a99d # load x3 with value 0x73f5a99d
sw x3, 0(x2) # store 0x73f5a99d in memory
flw f25, 0(x2) # load 0x73f5a99d from memory into f25
fnmsub.s f10, f15, f20, f25, dyn # perform operation
fnmsub.s f10, f15, f20, f25, rdn # perform operation
fnmsub.s f10, f15, f20, f25, rmm # perform operation
fnmsub.s f10, f15, f20, f25, rne # perform operation
fnmsub.s f10, f15, f20, f25, rtz # perform operation
fnmsub.s f10, f15, f20, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f10, f15, f20, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f10, f15, f20, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f10, f15, f20, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f10, f15, f20, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f10, f15, f20, f25 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0x80000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f29, 0(x2) # load 0xff7fffff from memory into f29
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f2, 0(x2) # load 0x80000001 from memory into f2
la x2, scratch
li x3, 0x5a37c1e8 # load x3 with value 0x5a37c1e8
sw x3, 0(x2) # store 0x5a37c1e8 in memory
flw f23, 0(x2) # load 0x5a37c1e8 from memory into f23
fnmsub.s f22, f29, f2, f23, dyn # perform operation
fnmsub.s f22, f29, f2, f23, rdn # perform operation
fnmsub.s f22, f29, f2, f23, rmm # perform operation
fnmsub.s f22, f29, f2, f23, rne # perform operation
fnmsub.s f22, f29, f2, f23, rtz # perform operation
fnmsub.s f22, f29, f2, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f22, f29, f2, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f22, f29, f2, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f22, f29, f2, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f22, f29, f2, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f22, f29, f2, f23 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0x7f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f18, 0(x2) # load 0xff7fffff from memory into f18
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f29, 0(x2) # load 0x7f800000 from memory into f29
la x2, scratch
li x3, 0xd0d636c8 # load x3 with value 0xd0d636c8
sw x3, 0(x2) # store 0xd0d636c8 in memory
flw f31, 0(x2) # load 0xd0d636c8 from memory into f31
fnmsub.s f10, f18, f29, f31, dyn # perform operation
fnmsub.s f10, f18, f29, f31, rdn # perform operation
fnmsub.s f10, f18, f29, f31, rmm # perform operation
fnmsub.s f10, f18, f29, f31, rne # perform operation
fnmsub.s f10, f18, f29, f31, rtz # perform operation
fnmsub.s f10, f18, f29, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f10, f18, f29, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f10, f18, f29, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f10, f18, f29, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f10, f18, f29, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f10, f18, f29, f31 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0xff800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f20, 0(x2) # load 0xff7fffff from memory into f20
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f6, 0(x2) # load 0xff800000 from memory into f6
la x2, scratch
li x3, 0x90602315 # load x3 with value 0x90602315
sw x3, 0(x2) # store 0x90602315 in memory
flw f24, 0(x2) # load 0x90602315 from memory into f24
fnmsub.s f30, f20, f6, f24, dyn # perform operation
fnmsub.s f30, f20, f6, f24, rdn # perform operation
fnmsub.s f30, f20, f6, f24, rmm # perform operation
fnmsub.s f30, f20, f6, f24, rne # perform operation
fnmsub.s f30, f20, f6, f24, rtz # perform operation
fnmsub.s f30, f20, f6, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f30, f20, f6, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f30, f20, f6, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f30, f20, f6, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f30, f20, f6, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f30, f20, f6, f24 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0x7fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f24, 0(x2) # load 0xff7fffff from memory into f24
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f30, 0(x2) # load 0x7fc00000 from memory into f30
la x2, scratch
li x3, 0xbe4ef4f7 # load x3 with value 0xbe4ef4f7
sw x3, 0(x2) # store 0xbe4ef4f7 in memory
flw f8, 0(x2) # load 0xbe4ef4f7 from memory into f8
fnmsub.s f10, f24, f30, f8, dyn # perform operation
fnmsub.s f10, f24, f30, f8, rdn # perform operation
fnmsub.s f10, f24, f30, f8, rmm # perform operation
fnmsub.s f10, f24, f30, f8, rne # perform operation
fnmsub.s f10, f24, f30, f8, rtz # perform operation
fnmsub.s f10, f24, f30, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f10, f24, f30, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f10, f24, f30, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f10, f24, f30, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f10, f24, f30, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f10, f24, f30, f8 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0x7fffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f11, 0(x2) # load 0xff7fffff from memory into f11
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f23, 0(x2) # load 0x7fffffff from memory into f23
la x2, scratch
li x3, 0x04b6431b # load x3 with value 0x04b6431b
sw x3, 0(x2) # store 0x04b6431b in memory
flw f28, 0(x2) # load 0x04b6431b from memory into f28
fnmsub.s f21, f11, f23, f28, dyn # perform operation
fnmsub.s f21, f11, f23, f28, rdn # perform operation
fnmsub.s f21, f11, f23, f28, rmm # perform operation
fnmsub.s f21, f11, f23, f28, rne # perform operation
fnmsub.s f21, f11, f23, f28, rtz # perform operation
fnmsub.s f21, f11, f23, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f21, f11, f23, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f21, f11, f23, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f21, f11, f23, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f21, f11, f23, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f21, f11, f23, f28 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0xffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f14, 0(x2) # load 0xff7fffff from memory into f14
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f7, 0(x2) # load 0xffffffff from memory into f7
la x2, scratch
li x3, 0x1757dab9 # load x3 with value 0x1757dab9
sw x3, 0(x2) # store 0x1757dab9 in memory
flw f26, 0(x2) # load 0x1757dab9 from memory into f26
fnmsub.s f3, f14, f7, f26, dyn # perform operation
fnmsub.s f3, f14, f7, f26, rdn # perform operation
fnmsub.s f3, f14, f7, f26, rmm # perform operation
fnmsub.s f3, f14, f7, f26, rne # perform operation
fnmsub.s f3, f14, f7, f26, rtz # perform operation
fnmsub.s f3, f14, f7, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f3, f14, f7, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f3, f14, f7, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f3, f14, f7, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f3, f14, f7, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f3, f14, f7, f26 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0x7f800001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f26, 0(x2) # load 0xff7fffff from memory into f26
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f7, 0(x2) # load 0x7f800001 from memory into f7
la x2, scratch
li x3, 0xe8f6520c # load x3 with value 0xe8f6520c
sw x3, 0(x2) # store 0xe8f6520c in memory
flw f13, 0(x2) # load 0xe8f6520c from memory into f13
fnmsub.s f30, f26, f7, f13, dyn # perform operation
fnmsub.s f30, f26, f7, f13, rdn # perform operation
fnmsub.s f30, f26, f7, f13, rmm # perform operation
fnmsub.s f30, f26, f7, f13, rne # perform operation
fnmsub.s f30, f26, f7, f13, rtz # perform operation
fnmsub.s f30, f26, f7, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f30, f26, f7, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f30, f26, f7, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f30, f26, f7, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f30, f26, f7, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f30, f26, f7, f13 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0x7fbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f9, 0(x2) # load 0xff7fffff from memory into f9
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f10, 0(x2) # load 0x7fbfffff from memory into f10
la x2, scratch
li x3, 0x328ef3cc # load x3 with value 0x328ef3cc
sw x3, 0(x2) # store 0x328ef3cc in memory
flw f14, 0(x2) # load 0x328ef3cc from memory into f14
fnmsub.s f24, f9, f10, f14, dyn # perform operation
fnmsub.s f24, f9, f10, f14, rdn # perform operation
fnmsub.s f24, f9, f10, f14, rmm # perform operation
fnmsub.s f24, f9, f10, f14, rne # perform operation
fnmsub.s f24, f9, f10, f14, rtz # perform operation
fnmsub.s f24, f9, f10, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f24, f9, f10, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f24, f9, f10, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f24, f9, f10, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f24, f9, f10, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f24, f9, f10, f14 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0xffbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f12, 0(x2) # load 0xff7fffff from memory into f12
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f26, 0(x2) # load 0xffbfffff from memory into f26
la x2, scratch
li x3, 0x70d64562 # load x3 with value 0x70d64562
sw x3, 0(x2) # store 0x70d64562 in memory
flw f23, 0(x2) # load 0x70d64562 from memory into f23
fnmsub.s f30, f12, f26, f23, dyn # perform operation
fnmsub.s f30, f12, f26, f23, rdn # perform operation
fnmsub.s f30, f12, f26, f23, rmm # perform operation
fnmsub.s f30, f12, f26, f23, rne # perform operation
fnmsub.s f30, f12, f26, f23, rtz # perform operation
fnmsub.s f30, f12, f26, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f30, f12, f26, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f30, f12, f26, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f30, f12, f26, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f30, f12, f26, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f30, f12, f26, f23 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0x7ef8654f)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f31, 0(x2) # load 0xff7fffff from memory into f31
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f24, 0(x2) # load 0x7ef8654f from memory into f24
la x2, scratch
li x3, 0x00b3b0bd # load x3 with value 0x00b3b0bd
sw x3, 0(x2) # store 0x00b3b0bd in memory
flw f27, 0(x2) # load 0x00b3b0bd from memory into f27
fnmsub.s f9, f31, f24, f27, dyn # perform operation
fnmsub.s f9, f31, f24, f27, rdn # perform operation
fnmsub.s f9, f31, f24, f27, rmm # perform operation
fnmsub.s f9, f31, f24, f27, rne # perform operation
fnmsub.s f9, f31, f24, f27, rtz # perform operation
fnmsub.s f9, f31, f24, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f9, f31, f24, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f9, f31, f24, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f9, f31, f24, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f9, f31, f24, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f9, f31, f24, f27 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0x813d9ab0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f22, 0(x2) # load 0xff7fffff from memory into f22
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f12, 0(x2) # load 0x813d9ab0 from memory into f12
la x2, scratch
li x3, 0x4ab08314 # load x3 with value 0x4ab08314
sw x3, 0(x2) # store 0x4ab08314 in memory
flw f11, 0(x2) # load 0x4ab08314 from memory into f11
fnmsub.s f7, f22, f12, f11, dyn # perform operation
fnmsub.s f7, f22, f12, f11, rdn # perform operation
fnmsub.s f7, f22, f12, f11, rmm # perform operation
fnmsub.s f7, f22, f12, f11, rne # perform operation
fnmsub.s f7, f22, f12, f11, rtz # perform operation
fnmsub.s f7, f22, f12, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f7, f22, f12, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f7, f22, f12, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f7, f22, f12, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f7, f22, f12, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f7, f22, f12, f11 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0x0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f19, 0(x2) # load 0x007fffff from memory into f19
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f12, 0(x2) # load 0x00000000 from memory into f12
la x2, scratch
li x3, 0x04321a1d # load x3 with value 0x04321a1d
sw x3, 0(x2) # store 0x04321a1d in memory
flw f14, 0(x2) # load 0x04321a1d from memory into f14
fnmsub.s f29, f19, f12, f14, dyn # perform operation
fnmsub.s f29, f19, f12, f14, rdn # perform operation
fnmsub.s f29, f19, f12, f14, rmm # perform operation
fnmsub.s f29, f19, f12, f14, rne # perform operation
fnmsub.s f29, f19, f12, f14, rtz # perform operation
fnmsub.s f29, f19, f12, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f29, f19, f12, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f29, f19, f12, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f29, f19, f12, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f29, f19, f12, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f29, f19, f12, f14 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0x80000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f2, 0(x2) # load 0x007fffff from memory into f2
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f6, 0(x2) # load 0x80000000 from memory into f6
la x2, scratch
li x3, 0xd40f68d8 # load x3 with value 0xd40f68d8
sw x3, 0(x2) # store 0xd40f68d8 in memory
flw f20, 0(x2) # load 0xd40f68d8 from memory into f20
fnmsub.s f9, f2, f6, f20, dyn # perform operation
fnmsub.s f9, f2, f6, f20, rdn # perform operation
fnmsub.s f9, f2, f6, f20, rmm # perform operation
fnmsub.s f9, f2, f6, f20, rne # perform operation
fnmsub.s f9, f2, f6, f20, rtz # perform operation
fnmsub.s f9, f2, f6, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f9, f2, f6, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f9, f2, f6, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f9, f2, f6, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f9, f2, f6, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f9, f2, f6, f20 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0x3f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f21, 0(x2) # load 0x007fffff from memory into f21
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f29, 0(x2) # load 0x3f800000 from memory into f29
la x2, scratch
li x3, 0x9cacf7f8 # load x3 with value 0x9cacf7f8
sw x3, 0(x2) # store 0x9cacf7f8 in memory
flw f31, 0(x2) # load 0x9cacf7f8 from memory into f31
fnmsub.s f6, f21, f29, f31, dyn # perform operation
fnmsub.s f6, f21, f29, f31, rdn # perform operation
fnmsub.s f6, f21, f29, f31, rmm # perform operation
fnmsub.s f6, f21, f29, f31, rne # perform operation
fnmsub.s f6, f21, f29, f31, rtz # perform operation
fnmsub.s f6, f21, f29, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f6, f21, f29, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f6, f21, f29, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f6, f21, f29, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f6, f21, f29, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f6, f21, f29, f31 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0xbf800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f29, 0(x2) # load 0x007fffff from memory into f29
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f3, 0(x2) # load 0xbf800000 from memory into f3
la x2, scratch
li x3, 0x8e5d4738 # load x3 with value 0x8e5d4738
sw x3, 0(x2) # store 0x8e5d4738 in memory
flw f15, 0(x2) # load 0x8e5d4738 from memory into f15
fnmsub.s f8, f29, f3, f15, dyn # perform operation
fnmsub.s f8, f29, f3, f15, rdn # perform operation
fnmsub.s f8, f29, f3, f15, rmm # perform operation
fnmsub.s f8, f29, f3, f15, rne # perform operation
fnmsub.s f8, f29, f3, f15, rtz # perform operation
fnmsub.s f8, f29, f3, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f8, f29, f3, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f8, f29, f3, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f8, f29, f3, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f8, f29, f3, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f8, f29, f3, f15 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0x3fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f19, 0(x2) # load 0x007fffff from memory into f19
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f11, 0(x2) # load 0x3fc00000 from memory into f11
la x2, scratch
li x3, 0x43ca3c6e # load x3 with value 0x43ca3c6e
sw x3, 0(x2) # store 0x43ca3c6e in memory
flw f9, 0(x2) # load 0x43ca3c6e from memory into f9
fnmsub.s f1, f19, f11, f9, dyn # perform operation
fnmsub.s f1, f19, f11, f9, rdn # perform operation
fnmsub.s f1, f19, f11, f9, rmm # perform operation
fnmsub.s f1, f19, f11, f9, rne # perform operation
fnmsub.s f1, f19, f11, f9, rtz # perform operation
fnmsub.s f1, f19, f11, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f1, f19, f11, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f1, f19, f11, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f1, f19, f11, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f1, f19, f11, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f1, f19, f11, f9 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0xbfc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f28, 0(x2) # load 0x007fffff from memory into f28
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f25, 0(x2) # load 0xbfc00000 from memory into f25
la x2, scratch
li x3, 0x97b00522 # load x3 with value 0x97b00522
sw x3, 0(x2) # store 0x97b00522 in memory
flw f24, 0(x2) # load 0x97b00522 from memory into f24
fnmsub.s f26, f28, f25, f24, dyn # perform operation
fnmsub.s f26, f28, f25, f24, rdn # perform operation
fnmsub.s f26, f28, f25, f24, rmm # perform operation
fnmsub.s f26, f28, f25, f24, rne # perform operation
fnmsub.s f26, f28, f25, f24, rtz # perform operation
fnmsub.s f26, f28, f25, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f26, f28, f25, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f26, f28, f25, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f26, f28, f25, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f26, f28, f25, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f26, f28, f25, f24 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0x40000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f2, 0(x2) # load 0x007fffff from memory into f2
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f23, 0(x2) # load 0x40000000 from memory into f23
la x2, scratch
li x3, 0x94cbbfc6 # load x3 with value 0x94cbbfc6
sw x3, 0(x2) # store 0x94cbbfc6 in memory
flw f13, 0(x2) # load 0x94cbbfc6 from memory into f13
fnmsub.s f14, f2, f23, f13, dyn # perform operation
fnmsub.s f14, f2, f23, f13, rdn # perform operation
fnmsub.s f14, f2, f23, f13, rmm # perform operation
fnmsub.s f14, f2, f23, f13, rne # perform operation
fnmsub.s f14, f2, f23, f13, rtz # perform operation
fnmsub.s f14, f2, f23, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f14, f2, f23, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f14, f2, f23, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f14, f2, f23, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f14, f2, f23, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f14, f2, f23, f13 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0xc0000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f22, 0(x2) # load 0x007fffff from memory into f22
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f6, 0(x2) # load 0xc0000000 from memory into f6
la x2, scratch
li x3, 0x2f4fb484 # load x3 with value 0x2f4fb484
sw x3, 0(x2) # store 0x2f4fb484 in memory
flw f1, 0(x2) # load 0x2f4fb484 from memory into f1
fnmsub.s f24, f22, f6, f1, dyn # perform operation
fnmsub.s f24, f22, f6, f1, rdn # perform operation
fnmsub.s f24, f22, f6, f1, rmm # perform operation
fnmsub.s f24, f22, f6, f1, rne # perform operation
fnmsub.s f24, f22, f6, f1, rtz # perform operation
fnmsub.s f24, f22, f6, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f24, f22, f6, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f24, f22, f6, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f24, f22, f6, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f24, f22, f6, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f24, f22, f6, f1 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0x800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f27, 0(x2) # load 0x007fffff from memory into f27
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f10, 0(x2) # load 0x00800000 from memory into f10
la x2, scratch
li x3, 0x57cdba69 # load x3 with value 0x57cdba69
sw x3, 0(x2) # store 0x57cdba69 in memory
flw f16, 0(x2) # load 0x57cdba69 from memory into f16
fnmsub.s f28, f27, f10, f16, dyn # perform operation
fnmsub.s f28, f27, f10, f16, rdn # perform operation
fnmsub.s f28, f27, f10, f16, rmm # perform operation
fnmsub.s f28, f27, f10, f16, rne # perform operation
fnmsub.s f28, f27, f10, f16, rtz # perform operation
fnmsub.s f28, f27, f10, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f28, f27, f10, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f28, f27, f10, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f28, f27, f10, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f28, f27, f10, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f28, f27, f10, f16 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0x80800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f14, 0(x2) # load 0x007fffff from memory into f14
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f5, 0(x2) # load 0x80800000 from memory into f5
la x2, scratch
li x3, 0xe4732689 # load x3 with value 0xe4732689
sw x3, 0(x2) # store 0xe4732689 in memory
flw f22, 0(x2) # load 0xe4732689 from memory into f22
fnmsub.s f17, f14, f5, f22, dyn # perform operation
fnmsub.s f17, f14, f5, f22, rdn # perform operation
fnmsub.s f17, f14, f5, f22, rmm # perform operation
fnmsub.s f17, f14, f5, f22, rne # perform operation
fnmsub.s f17, f14, f5, f22, rtz # perform operation
fnmsub.s f17, f14, f5, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f17, f14, f5, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f17, f14, f5, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f17, f14, f5, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f17, f14, f5, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f17, f14, f5, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0x7f7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f9, 0(x2) # load 0x007fffff from memory into f9
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f14, 0(x2) # load 0x7f7fffff from memory into f14
la x2, scratch
li x3, 0xc529670b # load x3 with value 0xc529670b
sw x3, 0(x2) # store 0xc529670b in memory
flw f19, 0(x2) # load 0xc529670b from memory into f19
fnmsub.s f1, f9, f14, f19, dyn # perform operation
fnmsub.s f1, f9, f14, f19, rdn # perform operation
fnmsub.s f1, f9, f14, f19, rmm # perform operation
fnmsub.s f1, f9, f14, f19, rne # perform operation
fnmsub.s f1, f9, f14, f19, rtz # perform operation
fnmsub.s f1, f9, f14, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f1, f9, f14, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f1, f9, f14, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f1, f9, f14, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f1, f9, f14, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f1, f9, f14, f19 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0xff7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f26, 0(x2) # load 0x007fffff from memory into f26
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f11, 0(x2) # load 0xff7fffff from memory into f11
la x2, scratch
li x3, 0xb42f7df3 # load x3 with value 0xb42f7df3
sw x3, 0(x2) # store 0xb42f7df3 in memory
flw f19, 0(x2) # load 0xb42f7df3 from memory into f19
fnmsub.s f9, f26, f11, f19, dyn # perform operation
fnmsub.s f9, f26, f11, f19, rdn # perform operation
fnmsub.s f9, f26, f11, f19, rmm # perform operation
fnmsub.s f9, f26, f11, f19, rne # perform operation
fnmsub.s f9, f26, f11, f19, rtz # perform operation
fnmsub.s f9, f26, f11, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f9, f26, f11, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f9, f26, f11, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f9, f26, f11, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f9, f26, f11, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f9, f26, f11, f19 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0x7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f17, 0(x2) # load 0x007fffff from memory into f17
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f9, 0(x2) # load 0x007fffff from memory into f9
la x2, scratch
li x3, 0x75a7da18 # load x3 with value 0x75a7da18
sw x3, 0(x2) # store 0x75a7da18 in memory
flw f3, 0(x2) # load 0x75a7da18 from memory into f3
fnmsub.s f2, f17, f9, f3, dyn # perform operation
fnmsub.s f2, f17, f9, f3, rdn # perform operation
fnmsub.s f2, f17, f9, f3, rmm # perform operation
fnmsub.s f2, f17, f9, f3, rne # perform operation
fnmsub.s f2, f17, f9, f3, rtz # perform operation
fnmsub.s f2, f17, f9, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f2, f17, f9, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f2, f17, f9, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f2, f17, f9, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f2, f17, f9, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f2, f17, f9, f3 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0x807fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f20, 0(x2) # load 0x007fffff from memory into f20
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f6, 0(x2) # load 0x807fffff from memory into f6
la x2, scratch
li x3, 0xdf98b5b2 # load x3 with value 0xdf98b5b2
sw x3, 0(x2) # store 0xdf98b5b2 in memory
flw f5, 0(x2) # load 0xdf98b5b2 from memory into f5
fnmsub.s f9, f20, f6, f5, dyn # perform operation
fnmsub.s f9, f20, f6, f5, rdn # perform operation
fnmsub.s f9, f20, f6, f5, rmm # perform operation
fnmsub.s f9, f20, f6, f5, rne # perform operation
fnmsub.s f9, f20, f6, f5, rtz # perform operation
fnmsub.s f9, f20, f6, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f9, f20, f6, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f9, f20, f6, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f9, f20, f6, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f9, f20, f6, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f9, f20, f6, f5 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0x400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f17, 0(x2) # load 0x007fffff from memory into f17
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f19, 0(x2) # load 0x00400000 from memory into f19
la x2, scratch
li x3, 0x7309d75b # load x3 with value 0x7309d75b
sw x3, 0(x2) # store 0x7309d75b in memory
flw f11, 0(x2) # load 0x7309d75b from memory into f11
fnmsub.s f9, f17, f19, f11, dyn # perform operation
fnmsub.s f9, f17, f19, f11, rdn # perform operation
fnmsub.s f9, f17, f19, f11, rmm # perform operation
fnmsub.s f9, f17, f19, f11, rne # perform operation
fnmsub.s f9, f17, f19, f11, rtz # perform operation
fnmsub.s f9, f17, f19, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f9, f17, f19, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f9, f17, f19, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f9, f17, f19, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f9, f17, f19, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f9, f17, f19, f11 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0x80400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f24, 0(x2) # load 0x007fffff from memory into f24
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f5, 0(x2) # load 0x80400000 from memory into f5
la x2, scratch
li x3, 0x54705fef # load x3 with value 0x54705fef
sw x3, 0(x2) # store 0x54705fef in memory
flw f11, 0(x2) # load 0x54705fef from memory into f11
fnmsub.s f21, f24, f5, f11, dyn # perform operation
fnmsub.s f21, f24, f5, f11, rdn # perform operation
fnmsub.s f21, f24, f5, f11, rmm # perform operation
fnmsub.s f21, f24, f5, f11, rne # perform operation
fnmsub.s f21, f24, f5, f11, rtz # perform operation
fnmsub.s f21, f24, f5, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f21, f24, f5, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f21, f24, f5, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f21, f24, f5, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f21, f24, f5, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f21, f24, f5, f11 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0x1)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f23, 0(x2) # load 0x007fffff from memory into f23
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f3, 0(x2) # load 0x00000001 from memory into f3
la x2, scratch
li x3, 0x19607c5f # load x3 with value 0x19607c5f
sw x3, 0(x2) # store 0x19607c5f in memory
flw f12, 0(x2) # load 0x19607c5f from memory into f12
fnmsub.s f6, f23, f3, f12, dyn # perform operation
fnmsub.s f6, f23, f3, f12, rdn # perform operation
fnmsub.s f6, f23, f3, f12, rmm # perform operation
fnmsub.s f6, f23, f3, f12, rne # perform operation
fnmsub.s f6, f23, f3, f12, rtz # perform operation
fnmsub.s f6, f23, f3, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f6, f23, f3, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f6, f23, f3, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f6, f23, f3, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f6, f23, f3, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f6, f23, f3, f12 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0x80000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f3, 0(x2) # load 0x007fffff from memory into f3
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f21, 0(x2) # load 0x80000001 from memory into f21
la x2, scratch
li x3, 0xa458a266 # load x3 with value 0xa458a266
sw x3, 0(x2) # store 0xa458a266 in memory
flw f2, 0(x2) # load 0xa458a266 from memory into f2
fnmsub.s f31, f3, f21, f2, dyn # perform operation
fnmsub.s f31, f3, f21, f2, rdn # perform operation
fnmsub.s f31, f3, f21, f2, rmm # perform operation
fnmsub.s f31, f3, f21, f2, rne # perform operation
fnmsub.s f31, f3, f21, f2, rtz # perform operation
fnmsub.s f31, f3, f21, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f31, f3, f21, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f31, f3, f21, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f31, f3, f21, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f31, f3, f21, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f31, f3, f21, f2 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0x7f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f18, 0(x2) # load 0x007fffff from memory into f18
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f21, 0(x2) # load 0x7f800000 from memory into f21
la x2, scratch
li x3, 0xbf879bac # load x3 with value 0xbf879bac
sw x3, 0(x2) # store 0xbf879bac in memory
flw f15, 0(x2) # load 0xbf879bac from memory into f15
fnmsub.s f30, f18, f21, f15, dyn # perform operation
fnmsub.s f30, f18, f21, f15, rdn # perform operation
fnmsub.s f30, f18, f21, f15, rmm # perform operation
fnmsub.s f30, f18, f21, f15, rne # perform operation
fnmsub.s f30, f18, f21, f15, rtz # perform operation
fnmsub.s f30, f18, f21, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f30, f18, f21, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f30, f18, f21, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f30, f18, f21, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f30, f18, f21, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f30, f18, f21, f15 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0xff800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f25, 0(x2) # load 0x007fffff from memory into f25
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f16, 0(x2) # load 0xff800000 from memory into f16
la x2, scratch
li x3, 0x620e72ee # load x3 with value 0x620e72ee
sw x3, 0(x2) # store 0x620e72ee in memory
flw f28, 0(x2) # load 0x620e72ee from memory into f28
fnmsub.s f11, f25, f16, f28, dyn # perform operation
fnmsub.s f11, f25, f16, f28, rdn # perform operation
fnmsub.s f11, f25, f16, f28, rmm # perform operation
fnmsub.s f11, f25, f16, f28, rne # perform operation
fnmsub.s f11, f25, f16, f28, rtz # perform operation
fnmsub.s f11, f25, f16, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f11, f25, f16, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f11, f25, f16, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f11, f25, f16, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f11, f25, f16, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f11, f25, f16, f28 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0x7fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f1, 0(x2) # load 0x007fffff from memory into f1
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f31, 0(x2) # load 0x7fc00000 from memory into f31
la x2, scratch
li x3, 0x72f3cf8e # load x3 with value 0x72f3cf8e
sw x3, 0(x2) # store 0x72f3cf8e in memory
flw f7, 0(x2) # load 0x72f3cf8e from memory into f7
fnmsub.s f24, f1, f31, f7, dyn # perform operation
fnmsub.s f24, f1, f31, f7, rdn # perform operation
fnmsub.s f24, f1, f31, f7, rmm # perform operation
fnmsub.s f24, f1, f31, f7, rne # perform operation
fnmsub.s f24, f1, f31, f7, rtz # perform operation
fnmsub.s f24, f1, f31, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f24, f1, f31, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f24, f1, f31, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f24, f1, f31, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f24, f1, f31, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f24, f1, f31, f7 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0x7fffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f26, 0(x2) # load 0x007fffff from memory into f26
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f3, 0(x2) # load 0x7fffffff from memory into f3
la x2, scratch
li x3, 0x272ad10c # load x3 with value 0x272ad10c
sw x3, 0(x2) # store 0x272ad10c in memory
flw f10, 0(x2) # load 0x272ad10c from memory into f10
fnmsub.s f15, f26, f3, f10, dyn # perform operation
fnmsub.s f15, f26, f3, f10, rdn # perform operation
fnmsub.s f15, f26, f3, f10, rmm # perform operation
fnmsub.s f15, f26, f3, f10, rne # perform operation
fnmsub.s f15, f26, f3, f10, rtz # perform operation
fnmsub.s f15, f26, f3, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f15, f26, f3, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f15, f26, f3, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f15, f26, f3, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f15, f26, f3, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f15, f26, f3, f10 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0xffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f25, 0(x2) # load 0x007fffff from memory into f25
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f7, 0(x2) # load 0xffffffff from memory into f7
la x2, scratch
li x3, 0xf230ecc7 # load x3 with value 0xf230ecc7
sw x3, 0(x2) # store 0xf230ecc7 in memory
flw f21, 0(x2) # load 0xf230ecc7 from memory into f21
fnmsub.s f30, f25, f7, f21, dyn # perform operation
fnmsub.s f30, f25, f7, f21, rdn # perform operation
fnmsub.s f30, f25, f7, f21, rmm # perform operation
fnmsub.s f30, f25, f7, f21, rne # perform operation
fnmsub.s f30, f25, f7, f21, rtz # perform operation
fnmsub.s f30, f25, f7, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f30, f25, f7, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f30, f25, f7, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f30, f25, f7, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f30, f25, f7, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f30, f25, f7, f21 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0x7f800001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f26, 0(x2) # load 0x007fffff from memory into f26
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f29, 0(x2) # load 0x7f800001 from memory into f29
la x2, scratch
li x3, 0x513c420e # load x3 with value 0x513c420e
sw x3, 0(x2) # store 0x513c420e in memory
flw f22, 0(x2) # load 0x513c420e from memory into f22
fnmsub.s f19, f26, f29, f22, dyn # perform operation
fnmsub.s f19, f26, f29, f22, rdn # perform operation
fnmsub.s f19, f26, f29, f22, rmm # perform operation
fnmsub.s f19, f26, f29, f22, rne # perform operation
fnmsub.s f19, f26, f29, f22, rtz # perform operation
fnmsub.s f19, f26, f29, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f19, f26, f29, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f19, f26, f29, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f19, f26, f29, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f19, f26, f29, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f19, f26, f29, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0x7fbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f15, 0(x2) # load 0x007fffff from memory into f15
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f25, 0(x2) # load 0x7fbfffff from memory into f25
la x2, scratch
li x3, 0xca96e36e # load x3 with value 0xca96e36e
sw x3, 0(x2) # store 0xca96e36e in memory
flw f11, 0(x2) # load 0xca96e36e from memory into f11
fnmsub.s f23, f15, f25, f11, dyn # perform operation
fnmsub.s f23, f15, f25, f11, rdn # perform operation
fnmsub.s f23, f15, f25, f11, rmm # perform operation
fnmsub.s f23, f15, f25, f11, rne # perform operation
fnmsub.s f23, f15, f25, f11, rtz # perform operation
fnmsub.s f23, f15, f25, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f23, f15, f25, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f23, f15, f25, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f23, f15, f25, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f23, f15, f25, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f23, f15, f25, f11 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0xffbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f29, 0(x2) # load 0x007fffff from memory into f29
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f31, 0(x2) # load 0xffbfffff from memory into f31
la x2, scratch
li x3, 0x7177bfd5 # load x3 with value 0x7177bfd5
sw x3, 0(x2) # store 0x7177bfd5 in memory
flw f5, 0(x2) # load 0x7177bfd5 from memory into f5
fnmsub.s f18, f29, f31, f5, dyn # perform operation
fnmsub.s f18, f29, f31, f5, rdn # perform operation
fnmsub.s f18, f29, f31, f5, rmm # perform operation
fnmsub.s f18, f29, f31, f5, rne # perform operation
fnmsub.s f18, f29, f31, f5, rtz # perform operation
fnmsub.s f18, f29, f31, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f18, f29, f31, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f18, f29, f31, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f18, f29, f31, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f18, f29, f31, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f18, f29, f31, f5 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0x7ef8654f)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f25, 0(x2) # load 0x007fffff from memory into f25
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f20, 0(x2) # load 0x7ef8654f from memory into f20
la x2, scratch
li x3, 0xf2fe38d8 # load x3 with value 0xf2fe38d8
sw x3, 0(x2) # store 0xf2fe38d8 in memory
flw f12, 0(x2) # load 0xf2fe38d8 from memory into f12
fnmsub.s f26, f25, f20, f12, dyn # perform operation
fnmsub.s f26, f25, f20, f12, rdn # perform operation
fnmsub.s f26, f25, f20, f12, rmm # perform operation
fnmsub.s f26, f25, f20, f12, rne # perform operation
fnmsub.s f26, f25, f20, f12, rtz # perform operation
fnmsub.s f26, f25, f20, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f26, f25, f20, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f26, f25, f20, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f26, f25, f20, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f26, f25, f20, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f26, f25, f20, f12 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0x813d9ab0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f26, 0(x2) # load 0x007fffff from memory into f26
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f22, 0(x2) # load 0x813d9ab0 from memory into f22
la x2, scratch
li x3, 0xe9144f0b # load x3 with value 0xe9144f0b
sw x3, 0(x2) # store 0xe9144f0b in memory
flw f14, 0(x2) # load 0xe9144f0b from memory into f14
fnmsub.s f23, f26, f22, f14, dyn # perform operation
fnmsub.s f23, f26, f22, f14, rdn # perform operation
fnmsub.s f23, f26, f22, f14, rmm # perform operation
fnmsub.s f23, f26, f22, f14, rne # perform operation
fnmsub.s f23, f26, f22, f14, rtz # perform operation
fnmsub.s f23, f26, f22, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f23, f26, f22, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f23, f26, f22, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f23, f26, f22, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f23, f26, f22, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f23, f26, f22, f14 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0x0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f9, 0(x2) # load 0x807fffff from memory into f9
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f24, 0(x2) # load 0x00000000 from memory into f24
la x2, scratch
li x3, 0x43f25452 # load x3 with value 0x43f25452
sw x3, 0(x2) # store 0x43f25452 in memory
flw f2, 0(x2) # load 0x43f25452 from memory into f2
fnmsub.s f11, f9, f24, f2, dyn # perform operation
fnmsub.s f11, f9, f24, f2, rdn # perform operation
fnmsub.s f11, f9, f24, f2, rmm # perform operation
fnmsub.s f11, f9, f24, f2, rne # perform operation
fnmsub.s f11, f9, f24, f2, rtz # perform operation
fnmsub.s f11, f9, f24, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f11, f9, f24, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f11, f9, f24, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f11, f9, f24, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f11, f9, f24, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f11, f9, f24, f2 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0x80000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f28, 0(x2) # load 0x807fffff from memory into f28
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f5, 0(x2) # load 0x80000000 from memory into f5
la x2, scratch
li x3, 0x99184833 # load x3 with value 0x99184833
sw x3, 0(x2) # store 0x99184833 in memory
flw f14, 0(x2) # load 0x99184833 from memory into f14
fnmsub.s f6, f28, f5, f14, dyn # perform operation
fnmsub.s f6, f28, f5, f14, rdn # perform operation
fnmsub.s f6, f28, f5, f14, rmm # perform operation
fnmsub.s f6, f28, f5, f14, rne # perform operation
fnmsub.s f6, f28, f5, f14, rtz # perform operation
fnmsub.s f6, f28, f5, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f6, f28, f5, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f6, f28, f5, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f6, f28, f5, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f6, f28, f5, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f6, f28, f5, f14 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0x3f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f21, 0(x2) # load 0x807fffff from memory into f21
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f17, 0(x2) # load 0x3f800000 from memory into f17
la x2, scratch
li x3, 0xc1f84fcd # load x3 with value 0xc1f84fcd
sw x3, 0(x2) # store 0xc1f84fcd in memory
flw f5, 0(x2) # load 0xc1f84fcd from memory into f5
fnmsub.s f28, f21, f17, f5, dyn # perform operation
fnmsub.s f28, f21, f17, f5, rdn # perform operation
fnmsub.s f28, f21, f17, f5, rmm # perform operation
fnmsub.s f28, f21, f17, f5, rne # perform operation
fnmsub.s f28, f21, f17, f5, rtz # perform operation
fnmsub.s f28, f21, f17, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f28, f21, f17, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f28, f21, f17, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f28, f21, f17, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f28, f21, f17, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f28, f21, f17, f5 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0xbf800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f25, 0(x2) # load 0x807fffff from memory into f25
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f1, 0(x2) # load 0xbf800000 from memory into f1
la x2, scratch
li x3, 0x33f1dc37 # load x3 with value 0x33f1dc37
sw x3, 0(x2) # store 0x33f1dc37 in memory
flw f9, 0(x2) # load 0x33f1dc37 from memory into f9
fnmsub.s f23, f25, f1, f9, dyn # perform operation
fnmsub.s f23, f25, f1, f9, rdn # perform operation
fnmsub.s f23, f25, f1, f9, rmm # perform operation
fnmsub.s f23, f25, f1, f9, rne # perform operation
fnmsub.s f23, f25, f1, f9, rtz # perform operation
fnmsub.s f23, f25, f1, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f23, f25, f1, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f23, f25, f1, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f23, f25, f1, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f23, f25, f1, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f23, f25, f1, f9 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0x3fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f25, 0(x2) # load 0x807fffff from memory into f25
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f17, 0(x2) # load 0x3fc00000 from memory into f17
la x2, scratch
li x3, 0x52d4c3cf # load x3 with value 0x52d4c3cf
sw x3, 0(x2) # store 0x52d4c3cf in memory
flw f8, 0(x2) # load 0x52d4c3cf from memory into f8
fnmsub.s f20, f25, f17, f8, dyn # perform operation
fnmsub.s f20, f25, f17, f8, rdn # perform operation
fnmsub.s f20, f25, f17, f8, rmm # perform operation
fnmsub.s f20, f25, f17, f8, rne # perform operation
fnmsub.s f20, f25, f17, f8, rtz # perform operation
fnmsub.s f20, f25, f17, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f20, f25, f17, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f20, f25, f17, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f20, f25, f17, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f20, f25, f17, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f20, f25, f17, f8 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0xbfc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f17, 0(x2) # load 0x807fffff from memory into f17
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f5, 0(x2) # load 0xbfc00000 from memory into f5
la x2, scratch
li x3, 0x6e46e2ce # load x3 with value 0x6e46e2ce
sw x3, 0(x2) # store 0x6e46e2ce in memory
flw f28, 0(x2) # load 0x6e46e2ce from memory into f28
fnmsub.s f1, f17, f5, f28, dyn # perform operation
fnmsub.s f1, f17, f5, f28, rdn # perform operation
fnmsub.s f1, f17, f5, f28, rmm # perform operation
fnmsub.s f1, f17, f5, f28, rne # perform operation
fnmsub.s f1, f17, f5, f28, rtz # perform operation
fnmsub.s f1, f17, f5, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f1, f17, f5, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f1, f17, f5, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f1, f17, f5, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f1, f17, f5, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f1, f17, f5, f28 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0x40000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f24, 0(x2) # load 0x807fffff from memory into f24
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f7, 0(x2) # load 0x40000000 from memory into f7
la x2, scratch
li x3, 0xf9c5651a # load x3 with value 0xf9c5651a
sw x3, 0(x2) # store 0xf9c5651a in memory
flw f17, 0(x2) # load 0xf9c5651a from memory into f17
fnmsub.s f6, f24, f7, f17, dyn # perform operation
fnmsub.s f6, f24, f7, f17, rdn # perform operation
fnmsub.s f6, f24, f7, f17, rmm # perform operation
fnmsub.s f6, f24, f7, f17, rne # perform operation
fnmsub.s f6, f24, f7, f17, rtz # perform operation
fnmsub.s f6, f24, f7, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f6, f24, f7, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f6, f24, f7, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f6, f24, f7, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f6, f24, f7, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f6, f24, f7, f17 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0xc0000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f7, 0(x2) # load 0x807fffff from memory into f7
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f22, 0(x2) # load 0xc0000000 from memory into f22
la x2, scratch
li x3, 0x978af84d # load x3 with value 0x978af84d
sw x3, 0(x2) # store 0x978af84d in memory
flw f15, 0(x2) # load 0x978af84d from memory into f15
fnmsub.s f30, f7, f22, f15, dyn # perform operation
fnmsub.s f30, f7, f22, f15, rdn # perform operation
fnmsub.s f30, f7, f22, f15, rmm # perform operation
fnmsub.s f30, f7, f22, f15, rne # perform operation
fnmsub.s f30, f7, f22, f15, rtz # perform operation
fnmsub.s f30, f7, f22, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f30, f7, f22, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f30, f7, f22, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f30, f7, f22, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f30, f7, f22, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f30, f7, f22, f15 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0x800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f21, 0(x2) # load 0x807fffff from memory into f21
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f14, 0(x2) # load 0x00800000 from memory into f14
la x2, scratch
li x3, 0xc93bbd2f # load x3 with value 0xc93bbd2f
sw x3, 0(x2) # store 0xc93bbd2f in memory
flw f31, 0(x2) # load 0xc93bbd2f from memory into f31
fnmsub.s f1, f21, f14, f31, dyn # perform operation
fnmsub.s f1, f21, f14, f31, rdn # perform operation
fnmsub.s f1, f21, f14, f31, rmm # perform operation
fnmsub.s f1, f21, f14, f31, rne # perform operation
fnmsub.s f1, f21, f14, f31, rtz # perform operation
fnmsub.s f1, f21, f14, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f1, f21, f14, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f1, f21, f14, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f1, f21, f14, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f1, f21, f14, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f1, f21, f14, f31 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0x80800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f17, 0(x2) # load 0x807fffff from memory into f17
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f30, 0(x2) # load 0x80800000 from memory into f30
la x2, scratch
li x3, 0xa869b1c2 # load x3 with value 0xa869b1c2
sw x3, 0(x2) # store 0xa869b1c2 in memory
flw f19, 0(x2) # load 0xa869b1c2 from memory into f19
fnmsub.s f12, f17, f30, f19, dyn # perform operation
fnmsub.s f12, f17, f30, f19, rdn # perform operation
fnmsub.s f12, f17, f30, f19, rmm # perform operation
fnmsub.s f12, f17, f30, f19, rne # perform operation
fnmsub.s f12, f17, f30, f19, rtz # perform operation
fnmsub.s f12, f17, f30, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f12, f17, f30, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f12, f17, f30, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f12, f17, f30, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f12, f17, f30, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f12, f17, f30, f19 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0x7f7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f23, 0(x2) # load 0x807fffff from memory into f23
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f31, 0(x2) # load 0x7f7fffff from memory into f31
la x2, scratch
li x3, 0x0560641a # load x3 with value 0x0560641a
sw x3, 0(x2) # store 0x0560641a in memory
flw f21, 0(x2) # load 0x0560641a from memory into f21
fnmsub.s f19, f23, f31, f21, dyn # perform operation
fnmsub.s f19, f23, f31, f21, rdn # perform operation
fnmsub.s f19, f23, f31, f21, rmm # perform operation
fnmsub.s f19, f23, f31, f21, rne # perform operation
fnmsub.s f19, f23, f31, f21, rtz # perform operation
fnmsub.s f19, f23, f31, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f19, f23, f31, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f19, f23, f31, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f19, f23, f31, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f19, f23, f31, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f19, f23, f31, f21 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0xff7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f14, 0(x2) # load 0x807fffff from memory into f14
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f18, 0(x2) # load 0xff7fffff from memory into f18
la x2, scratch
li x3, 0x78907d65 # load x3 with value 0x78907d65
sw x3, 0(x2) # store 0x78907d65 in memory
flw f1, 0(x2) # load 0x78907d65 from memory into f1
fnmsub.s f5, f14, f18, f1, dyn # perform operation
fnmsub.s f5, f14, f18, f1, rdn # perform operation
fnmsub.s f5, f14, f18, f1, rmm # perform operation
fnmsub.s f5, f14, f18, f1, rne # perform operation
fnmsub.s f5, f14, f18, f1, rtz # perform operation
fnmsub.s f5, f14, f18, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f5, f14, f18, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f5, f14, f18, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f5, f14, f18, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f5, f14, f18, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f5, f14, f18, f1 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0x7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f24, 0(x2) # load 0x807fffff from memory into f24
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f27, 0(x2) # load 0x007fffff from memory into f27
la x2, scratch
li x3, 0x7ac5bc3a # load x3 with value 0x7ac5bc3a
sw x3, 0(x2) # store 0x7ac5bc3a in memory
flw f23, 0(x2) # load 0x7ac5bc3a from memory into f23
fnmsub.s f6, f24, f27, f23, dyn # perform operation
fnmsub.s f6, f24, f27, f23, rdn # perform operation
fnmsub.s f6, f24, f27, f23, rmm # perform operation
fnmsub.s f6, f24, f27, f23, rne # perform operation
fnmsub.s f6, f24, f27, f23, rtz # perform operation
fnmsub.s f6, f24, f27, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f6, f24, f27, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f6, f24, f27, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f6, f24, f27, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f6, f24, f27, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f6, f24, f27, f23 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0x807fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f11, 0(x2) # load 0x807fffff from memory into f11
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f26, 0(x2) # load 0x807fffff from memory into f26
la x2, scratch
li x3, 0x628a1ed7 # load x3 with value 0x628a1ed7
sw x3, 0(x2) # store 0x628a1ed7 in memory
flw f12, 0(x2) # load 0x628a1ed7 from memory into f12
fnmsub.s f27, f11, f26, f12, dyn # perform operation
fnmsub.s f27, f11, f26, f12, rdn # perform operation
fnmsub.s f27, f11, f26, f12, rmm # perform operation
fnmsub.s f27, f11, f26, f12, rne # perform operation
fnmsub.s f27, f11, f26, f12, rtz # perform operation
fnmsub.s f27, f11, f26, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f27, f11, f26, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f27, f11, f26, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f27, f11, f26, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f27, f11, f26, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f27, f11, f26, f12 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0x400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f25, 0(x2) # load 0x807fffff from memory into f25
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f23, 0(x2) # load 0x00400000 from memory into f23
la x2, scratch
li x3, 0x72a1d6d8 # load x3 with value 0x72a1d6d8
sw x3, 0(x2) # store 0x72a1d6d8 in memory
flw f3, 0(x2) # load 0x72a1d6d8 from memory into f3
fnmsub.s f31, f25, f23, f3, dyn # perform operation
fnmsub.s f31, f25, f23, f3, rdn # perform operation
fnmsub.s f31, f25, f23, f3, rmm # perform operation
fnmsub.s f31, f25, f23, f3, rne # perform operation
fnmsub.s f31, f25, f23, f3, rtz # perform operation
fnmsub.s f31, f25, f23, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f31, f25, f23, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f31, f25, f23, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f31, f25, f23, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f31, f25, f23, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f31, f25, f23, f3 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0x80400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f12, 0(x2) # load 0x807fffff from memory into f12
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f3, 0(x2) # load 0x80400000 from memory into f3
la x2, scratch
li x3, 0xc637fb88 # load x3 with value 0xc637fb88
sw x3, 0(x2) # store 0xc637fb88 in memory
flw f11, 0(x2) # load 0xc637fb88 from memory into f11
fnmsub.s f22, f12, f3, f11, dyn # perform operation
fnmsub.s f22, f12, f3, f11, rdn # perform operation
fnmsub.s f22, f12, f3, f11, rmm # perform operation
fnmsub.s f22, f12, f3, f11, rne # perform operation
fnmsub.s f22, f12, f3, f11, rtz # perform operation
fnmsub.s f22, f12, f3, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f22, f12, f3, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f22, f12, f3, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f22, f12, f3, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f22, f12, f3, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f22, f12, f3, f11 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0x1)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f30, 0(x2) # load 0x807fffff from memory into f30
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f8, 0(x2) # load 0x00000001 from memory into f8
la x2, scratch
li x3, 0xa230081c # load x3 with value 0xa230081c
sw x3, 0(x2) # store 0xa230081c in memory
flw f21, 0(x2) # load 0xa230081c from memory into f21
fnmsub.s f13, f30, f8, f21, dyn # perform operation
fnmsub.s f13, f30, f8, f21, rdn # perform operation
fnmsub.s f13, f30, f8, f21, rmm # perform operation
fnmsub.s f13, f30, f8, f21, rne # perform operation
fnmsub.s f13, f30, f8, f21, rtz # perform operation
fnmsub.s f13, f30, f8, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f13, f30, f8, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f13, f30, f8, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f13, f30, f8, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f13, f30, f8, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f13, f30, f8, f21 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0x80000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f13, 0(x2) # load 0x807fffff from memory into f13
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f11, 0(x2) # load 0x80000001 from memory into f11
la x2, scratch
li x3, 0x13d9d6ab # load x3 with value 0x13d9d6ab
sw x3, 0(x2) # store 0x13d9d6ab in memory
flw f23, 0(x2) # load 0x13d9d6ab from memory into f23
fnmsub.s f30, f13, f11, f23, dyn # perform operation
fnmsub.s f30, f13, f11, f23, rdn # perform operation
fnmsub.s f30, f13, f11, f23, rmm # perform operation
fnmsub.s f30, f13, f11, f23, rne # perform operation
fnmsub.s f30, f13, f11, f23, rtz # perform operation
fnmsub.s f30, f13, f11, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f30, f13, f11, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f30, f13, f11, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f30, f13, f11, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f30, f13, f11, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f30, f13, f11, f23 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0x7f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f31, 0(x2) # load 0x807fffff from memory into f31
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f19, 0(x2) # load 0x7f800000 from memory into f19
la x2, scratch
li x3, 0xe6a46454 # load x3 with value 0xe6a46454
sw x3, 0(x2) # store 0xe6a46454 in memory
flw f25, 0(x2) # load 0xe6a46454 from memory into f25
fnmsub.s f13, f31, f19, f25, dyn # perform operation
fnmsub.s f13, f31, f19, f25, rdn # perform operation
fnmsub.s f13, f31, f19, f25, rmm # perform operation
fnmsub.s f13, f31, f19, f25, rne # perform operation
fnmsub.s f13, f31, f19, f25, rtz # perform operation
fnmsub.s f13, f31, f19, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f13, f31, f19, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f13, f31, f19, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f13, f31, f19, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f13, f31, f19, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f13, f31, f19, f25 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0xff800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f18, 0(x2) # load 0x807fffff from memory into f18
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f1, 0(x2) # load 0xff800000 from memory into f1
la x2, scratch
li x3, 0xaafd1bd3 # load x3 with value 0xaafd1bd3
sw x3, 0(x2) # store 0xaafd1bd3 in memory
flw f6, 0(x2) # load 0xaafd1bd3 from memory into f6
fnmsub.s f17, f18, f1, f6, dyn # perform operation
fnmsub.s f17, f18, f1, f6, rdn # perform operation
fnmsub.s f17, f18, f1, f6, rmm # perform operation
fnmsub.s f17, f18, f1, f6, rne # perform operation
fnmsub.s f17, f18, f1, f6, rtz # perform operation
fnmsub.s f17, f18, f1, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f17, f18, f1, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f17, f18, f1, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f17, f18, f1, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f17, f18, f1, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f17, f18, f1, f6 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0x7fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f29, 0(x2) # load 0x807fffff from memory into f29
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f19, 0(x2) # load 0x7fc00000 from memory into f19
la x2, scratch
li x3, 0xadce5933 # load x3 with value 0xadce5933
sw x3, 0(x2) # store 0xadce5933 in memory
flw f13, 0(x2) # load 0xadce5933 from memory into f13
fnmsub.s f11, f29, f19, f13, dyn # perform operation
fnmsub.s f11, f29, f19, f13, rdn # perform operation
fnmsub.s f11, f29, f19, f13, rmm # perform operation
fnmsub.s f11, f29, f19, f13, rne # perform operation
fnmsub.s f11, f29, f19, f13, rtz # perform operation
fnmsub.s f11, f29, f19, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f11, f29, f19, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f11, f29, f19, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f11, f29, f19, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f11, f29, f19, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f11, f29, f19, f13 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0x7fffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f14, 0(x2) # load 0x807fffff from memory into f14
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f3, 0(x2) # load 0x7fffffff from memory into f3
la x2, scratch
li x3, 0x601e8edc # load x3 with value 0x601e8edc
sw x3, 0(x2) # store 0x601e8edc in memory
flw f11, 0(x2) # load 0x601e8edc from memory into f11
fnmsub.s f25, f14, f3, f11, dyn # perform operation
fnmsub.s f25, f14, f3, f11, rdn # perform operation
fnmsub.s f25, f14, f3, f11, rmm # perform operation
fnmsub.s f25, f14, f3, f11, rne # perform operation
fnmsub.s f25, f14, f3, f11, rtz # perform operation
fnmsub.s f25, f14, f3, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f25, f14, f3, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f25, f14, f3, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f25, f14, f3, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f25, f14, f3, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f25, f14, f3, f11 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0xffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f7, 0(x2) # load 0x807fffff from memory into f7
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f17, 0(x2) # load 0xffffffff from memory into f17
la x2, scratch
li x3, 0x0c41737f # load x3 with value 0x0c41737f
sw x3, 0(x2) # store 0x0c41737f in memory
flw f5, 0(x2) # load 0x0c41737f from memory into f5
fnmsub.s f15, f7, f17, f5, dyn # perform operation
fnmsub.s f15, f7, f17, f5, rdn # perform operation
fnmsub.s f15, f7, f17, f5, rmm # perform operation
fnmsub.s f15, f7, f17, f5, rne # perform operation
fnmsub.s f15, f7, f17, f5, rtz # perform operation
fnmsub.s f15, f7, f17, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f15, f7, f17, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f15, f7, f17, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f15, f7, f17, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f15, f7, f17, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f15, f7, f17, f5 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0x7f800001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f7, 0(x2) # load 0x807fffff from memory into f7
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f18, 0(x2) # load 0x7f800001 from memory into f18
la x2, scratch
li x3, 0xff0a0028 # load x3 with value 0xff0a0028
sw x3, 0(x2) # store 0xff0a0028 in memory
flw f8, 0(x2) # load 0xff0a0028 from memory into f8
fnmsub.s f14, f7, f18, f8, dyn # perform operation
fnmsub.s f14, f7, f18, f8, rdn # perform operation
fnmsub.s f14, f7, f18, f8, rmm # perform operation
fnmsub.s f14, f7, f18, f8, rne # perform operation
fnmsub.s f14, f7, f18, f8, rtz # perform operation
fnmsub.s f14, f7, f18, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f14, f7, f18, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f14, f7, f18, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f14, f7, f18, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f14, f7, f18, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f14, f7, f18, f8 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0x7fbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f30, 0(x2) # load 0x807fffff from memory into f30
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f9, 0(x2) # load 0x7fbfffff from memory into f9
la x2, scratch
li x3, 0xb1d05a31 # load x3 with value 0xb1d05a31
sw x3, 0(x2) # store 0xb1d05a31 in memory
flw f1, 0(x2) # load 0xb1d05a31 from memory into f1
fnmsub.s f19, f30, f9, f1, dyn # perform operation
fnmsub.s f19, f30, f9, f1, rdn # perform operation
fnmsub.s f19, f30, f9, f1, rmm # perform operation
fnmsub.s f19, f30, f9, f1, rne # perform operation
fnmsub.s f19, f30, f9, f1, rtz # perform operation
fnmsub.s f19, f30, f9, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f19, f30, f9, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f19, f30, f9, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f19, f30, f9, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f19, f30, f9, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f19, f30, f9, f1 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0xffbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f24, 0(x2) # load 0x807fffff from memory into f24
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f9, 0(x2) # load 0xffbfffff from memory into f9
la x2, scratch
li x3, 0x01d9266a # load x3 with value 0x01d9266a
sw x3, 0(x2) # store 0x01d9266a in memory
flw f21, 0(x2) # load 0x01d9266a from memory into f21
fnmsub.s f18, f24, f9, f21, dyn # perform operation
fnmsub.s f18, f24, f9, f21, rdn # perform operation
fnmsub.s f18, f24, f9, f21, rmm # perform operation
fnmsub.s f18, f24, f9, f21, rne # perform operation
fnmsub.s f18, f24, f9, f21, rtz # perform operation
fnmsub.s f18, f24, f9, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f18, f24, f9, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f18, f24, f9, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f18, f24, f9, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f18, f24, f9, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f18, f24, f9, f21 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0x7ef8654f)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f30, 0(x2) # load 0x807fffff from memory into f30
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f14, 0(x2) # load 0x7ef8654f from memory into f14
la x2, scratch
li x3, 0x39520463 # load x3 with value 0x39520463
sw x3, 0(x2) # store 0x39520463 in memory
flw f10, 0(x2) # load 0x39520463 from memory into f10
fnmsub.s f8, f30, f14, f10, dyn # perform operation
fnmsub.s f8, f30, f14, f10, rdn # perform operation
fnmsub.s f8, f30, f14, f10, rmm # perform operation
fnmsub.s f8, f30, f14, f10, rne # perform operation
fnmsub.s f8, f30, f14, f10, rtz # perform operation
fnmsub.s f8, f30, f14, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f8, f30, f14, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f8, f30, f14, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f8, f30, f14, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f8, f30, f14, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f8, f30, f14, f10 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0x813d9ab0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f3, 0(x2) # load 0x807fffff from memory into f3
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f10, 0(x2) # load 0x813d9ab0 from memory into f10
la x2, scratch
li x3, 0xcb7e0a5d # load x3 with value 0xcb7e0a5d
sw x3, 0(x2) # store 0xcb7e0a5d in memory
flw f27, 0(x2) # load 0xcb7e0a5d from memory into f27
fnmsub.s f15, f3, f10, f27, dyn # perform operation
fnmsub.s f15, f3, f10, f27, rdn # perform operation
fnmsub.s f15, f3, f10, f27, rmm # perform operation
fnmsub.s f15, f3, f10, f27, rne # perform operation
fnmsub.s f15, f3, f10, f27, rtz # perform operation
fnmsub.s f15, f3, f10, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f15, f3, f10, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f15, f3, f10, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f15, f3, f10, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f15, f3, f10, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f15, f3, f10, f27 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0x0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f6, 0(x2) # load 0x00400000 from memory into f6
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f26, 0(x2) # load 0x00000000 from memory into f26
la x2, scratch
li x3, 0x1aaf7908 # load x3 with value 0x1aaf7908
sw x3, 0(x2) # store 0x1aaf7908 in memory
flw f23, 0(x2) # load 0x1aaf7908 from memory into f23
fnmsub.s f15, f6, f26, f23, dyn # perform operation
fnmsub.s f15, f6, f26, f23, rdn # perform operation
fnmsub.s f15, f6, f26, f23, rmm # perform operation
fnmsub.s f15, f6, f26, f23, rne # perform operation
fnmsub.s f15, f6, f26, f23, rtz # perform operation
fnmsub.s f15, f6, f26, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f15, f6, f26, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f15, f6, f26, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f15, f6, f26, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f15, f6, f26, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f15, f6, f26, f23 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0x80000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f6, 0(x2) # load 0x00400000 from memory into f6
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f23, 0(x2) # load 0x80000000 from memory into f23
la x2, scratch
li x3, 0x9d9d0dfd # load x3 with value 0x9d9d0dfd
sw x3, 0(x2) # store 0x9d9d0dfd in memory
flw f13, 0(x2) # load 0x9d9d0dfd from memory into f13
fnmsub.s f18, f6, f23, f13, dyn # perform operation
fnmsub.s f18, f6, f23, f13, rdn # perform operation
fnmsub.s f18, f6, f23, f13, rmm # perform operation
fnmsub.s f18, f6, f23, f13, rne # perform operation
fnmsub.s f18, f6, f23, f13, rtz # perform operation
fnmsub.s f18, f6, f23, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f18, f6, f23, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f18, f6, f23, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f18, f6, f23, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f18, f6, f23, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f18, f6, f23, f13 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0x3f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f13, 0(x2) # load 0x00400000 from memory into f13
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f25, 0(x2) # load 0x3f800000 from memory into f25
la x2, scratch
li x3, 0x74dfbe2f # load x3 with value 0x74dfbe2f
sw x3, 0(x2) # store 0x74dfbe2f in memory
flw f19, 0(x2) # load 0x74dfbe2f from memory into f19
fnmsub.s f2, f13, f25, f19, dyn # perform operation
fnmsub.s f2, f13, f25, f19, rdn # perform operation
fnmsub.s f2, f13, f25, f19, rmm # perform operation
fnmsub.s f2, f13, f25, f19, rne # perform operation
fnmsub.s f2, f13, f25, f19, rtz # perform operation
fnmsub.s f2, f13, f25, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f2, f13, f25, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f2, f13, f25, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f2, f13, f25, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f2, f13, f25, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f2, f13, f25, f19 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0xbf800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f14, 0(x2) # load 0x00400000 from memory into f14
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f23, 0(x2) # load 0xbf800000 from memory into f23
la x2, scratch
li x3, 0x12618fc0 # load x3 with value 0x12618fc0
sw x3, 0(x2) # store 0x12618fc0 in memory
flw f24, 0(x2) # load 0x12618fc0 from memory into f24
fnmsub.s f22, f14, f23, f24, dyn # perform operation
fnmsub.s f22, f14, f23, f24, rdn # perform operation
fnmsub.s f22, f14, f23, f24, rmm # perform operation
fnmsub.s f22, f14, f23, f24, rne # perform operation
fnmsub.s f22, f14, f23, f24, rtz # perform operation
fnmsub.s f22, f14, f23, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f22, f14, f23, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f22, f14, f23, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f22, f14, f23, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f22, f14, f23, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f22, f14, f23, f24 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0x3fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f16, 0(x2) # load 0x00400000 from memory into f16
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f7, 0(x2) # load 0x3fc00000 from memory into f7
la x2, scratch
li x3, 0xfd5b6565 # load x3 with value 0xfd5b6565
sw x3, 0(x2) # store 0xfd5b6565 in memory
flw f3, 0(x2) # load 0xfd5b6565 from memory into f3
fnmsub.s f31, f16, f7, f3, dyn # perform operation
fnmsub.s f31, f16, f7, f3, rdn # perform operation
fnmsub.s f31, f16, f7, f3, rmm # perform operation
fnmsub.s f31, f16, f7, f3, rne # perform operation
fnmsub.s f31, f16, f7, f3, rtz # perform operation
fnmsub.s f31, f16, f7, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f31, f16, f7, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f31, f16, f7, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f31, f16, f7, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f31, f16, f7, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f31, f16, f7, f3 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0xbfc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f19, 0(x2) # load 0x00400000 from memory into f19
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f12, 0(x2) # load 0xbfc00000 from memory into f12
la x2, scratch
li x3, 0xb6acc24f # load x3 with value 0xb6acc24f
sw x3, 0(x2) # store 0xb6acc24f in memory
flw f26, 0(x2) # load 0xb6acc24f from memory into f26
fnmsub.s f3, f19, f12, f26, dyn # perform operation
fnmsub.s f3, f19, f12, f26, rdn # perform operation
fnmsub.s f3, f19, f12, f26, rmm # perform operation
fnmsub.s f3, f19, f12, f26, rne # perform operation
fnmsub.s f3, f19, f12, f26, rtz # perform operation
fnmsub.s f3, f19, f12, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f3, f19, f12, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f3, f19, f12, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f3, f19, f12, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f3, f19, f12, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f3, f19, f12, f26 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0x40000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f19, 0(x2) # load 0x00400000 from memory into f19
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f2, 0(x2) # load 0x40000000 from memory into f2
la x2, scratch
li x3, 0x26d61b8e # load x3 with value 0x26d61b8e
sw x3, 0(x2) # store 0x26d61b8e in memory
flw f11, 0(x2) # load 0x26d61b8e from memory into f11
fnmsub.s f7, f19, f2, f11, dyn # perform operation
fnmsub.s f7, f19, f2, f11, rdn # perform operation
fnmsub.s f7, f19, f2, f11, rmm # perform operation
fnmsub.s f7, f19, f2, f11, rne # perform operation
fnmsub.s f7, f19, f2, f11, rtz # perform operation
fnmsub.s f7, f19, f2, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f7, f19, f2, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f7, f19, f2, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f7, f19, f2, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f7, f19, f2, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f7, f19, f2, f11 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0xc0000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f25, 0(x2) # load 0x00400000 from memory into f25
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f15, 0(x2) # load 0xc0000000 from memory into f15
la x2, scratch
li x3, 0x51932fce # load x3 with value 0x51932fce
sw x3, 0(x2) # store 0x51932fce in memory
flw f5, 0(x2) # load 0x51932fce from memory into f5
fnmsub.s f11, f25, f15, f5, dyn # perform operation
fnmsub.s f11, f25, f15, f5, rdn # perform operation
fnmsub.s f11, f25, f15, f5, rmm # perform operation
fnmsub.s f11, f25, f15, f5, rne # perform operation
fnmsub.s f11, f25, f15, f5, rtz # perform operation
fnmsub.s f11, f25, f15, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f11, f25, f15, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f11, f25, f15, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f11, f25, f15, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f11, f25, f15, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f11, f25, f15, f5 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0x800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f7, 0(x2) # load 0x00400000 from memory into f7
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f10, 0(x2) # load 0x00800000 from memory into f10
la x2, scratch
li x3, 0xd874d188 # load x3 with value 0xd874d188
sw x3, 0(x2) # store 0xd874d188 in memory
flw f24, 0(x2) # load 0xd874d188 from memory into f24
fnmsub.s f27, f7, f10, f24, dyn # perform operation
fnmsub.s f27, f7, f10, f24, rdn # perform operation
fnmsub.s f27, f7, f10, f24, rmm # perform operation
fnmsub.s f27, f7, f10, f24, rne # perform operation
fnmsub.s f27, f7, f10, f24, rtz # perform operation
fnmsub.s f27, f7, f10, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f27, f7, f10, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f27, f7, f10, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f27, f7, f10, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f27, f7, f10, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f27, f7, f10, f24 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0x80800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f13, 0(x2) # load 0x00400000 from memory into f13
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f23, 0(x2) # load 0x80800000 from memory into f23
la x2, scratch
li x3, 0x63b020fd # load x3 with value 0x63b020fd
sw x3, 0(x2) # store 0x63b020fd in memory
flw f21, 0(x2) # load 0x63b020fd from memory into f21
fnmsub.s f11, f13, f23, f21, dyn # perform operation
fnmsub.s f11, f13, f23, f21, rdn # perform operation
fnmsub.s f11, f13, f23, f21, rmm # perform operation
fnmsub.s f11, f13, f23, f21, rne # perform operation
fnmsub.s f11, f13, f23, f21, rtz # perform operation
fnmsub.s f11, f13, f23, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f11, f13, f23, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f11, f13, f23, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f11, f13, f23, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f11, f13, f23, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f11, f13, f23, f21 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0x7f7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f6, 0(x2) # load 0x00400000 from memory into f6
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f17, 0(x2) # load 0x7f7fffff from memory into f17
la x2, scratch
li x3, 0x8ec55a8a # load x3 with value 0x8ec55a8a
sw x3, 0(x2) # store 0x8ec55a8a in memory
flw f20, 0(x2) # load 0x8ec55a8a from memory into f20
fnmsub.s f16, f6, f17, f20, dyn # perform operation
fnmsub.s f16, f6, f17, f20, rdn # perform operation
fnmsub.s f16, f6, f17, f20, rmm # perform operation
fnmsub.s f16, f6, f17, f20, rne # perform operation
fnmsub.s f16, f6, f17, f20, rtz # perform operation
fnmsub.s f16, f6, f17, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f16, f6, f17, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f16, f6, f17, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f16, f6, f17, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f16, f6, f17, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f16, f6, f17, f20 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0xff7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f22, 0(x2) # load 0x00400000 from memory into f22
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f6, 0(x2) # load 0xff7fffff from memory into f6
la x2, scratch
li x3, 0x64b6bbe0 # load x3 with value 0x64b6bbe0
sw x3, 0(x2) # store 0x64b6bbe0 in memory
flw f5, 0(x2) # load 0x64b6bbe0 from memory into f5
fnmsub.s f9, f22, f6, f5, dyn # perform operation
fnmsub.s f9, f22, f6, f5, rdn # perform operation
fnmsub.s f9, f22, f6, f5, rmm # perform operation
fnmsub.s f9, f22, f6, f5, rne # perform operation
fnmsub.s f9, f22, f6, f5, rtz # perform operation
fnmsub.s f9, f22, f6, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f9, f22, f6, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f9, f22, f6, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f9, f22, f6, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f9, f22, f6, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f9, f22, f6, f5 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0x7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f22, 0(x2) # load 0x00400000 from memory into f22
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f11, 0(x2) # load 0x007fffff from memory into f11
la x2, scratch
li x3, 0x8088d637 # load x3 with value 0x8088d637
sw x3, 0(x2) # store 0x8088d637 in memory
flw f31, 0(x2) # load 0x8088d637 from memory into f31
fnmsub.s f6, f22, f11, f31, dyn # perform operation
fnmsub.s f6, f22, f11, f31, rdn # perform operation
fnmsub.s f6, f22, f11, f31, rmm # perform operation
fnmsub.s f6, f22, f11, f31, rne # perform operation
fnmsub.s f6, f22, f11, f31, rtz # perform operation
fnmsub.s f6, f22, f11, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f6, f22, f11, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f6, f22, f11, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f6, f22, f11, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f6, f22, f11, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f6, f22, f11, f31 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0x807fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f11, 0(x2) # load 0x00400000 from memory into f11
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f21, 0(x2) # load 0x807fffff from memory into f21
la x2, scratch
li x3, 0x2d782270 # load x3 with value 0x2d782270
sw x3, 0(x2) # store 0x2d782270 in memory
flw f22, 0(x2) # load 0x2d782270 from memory into f22
fnmsub.s f28, f11, f21, f22, dyn # perform operation
fnmsub.s f28, f11, f21, f22, rdn # perform operation
fnmsub.s f28, f11, f21, f22, rmm # perform operation
fnmsub.s f28, f11, f21, f22, rne # perform operation
fnmsub.s f28, f11, f21, f22, rtz # perform operation
fnmsub.s f28, f11, f21, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f28, f11, f21, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f28, f11, f21, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f28, f11, f21, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f28, f11, f21, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f28, f11, f21, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0x400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f28, 0(x2) # load 0x00400000 from memory into f28
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f14, 0(x2) # load 0x00400000 from memory into f14
la x2, scratch
li x3, 0x235ead5f # load x3 with value 0x235ead5f
sw x3, 0(x2) # store 0x235ead5f in memory
flw f21, 0(x2) # load 0x235ead5f from memory into f21
fnmsub.s f27, f28, f14, f21, dyn # perform operation
fnmsub.s f27, f28, f14, f21, rdn # perform operation
fnmsub.s f27, f28, f14, f21, rmm # perform operation
fnmsub.s f27, f28, f14, f21, rne # perform operation
fnmsub.s f27, f28, f14, f21, rtz # perform operation
fnmsub.s f27, f28, f14, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f27, f28, f14, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f27, f28, f14, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f27, f28, f14, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f27, f28, f14, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f27, f28, f14, f21 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0x80400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f10, 0(x2) # load 0x00400000 from memory into f10
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f22, 0(x2) # load 0x80400000 from memory into f22
la x2, scratch
li x3, 0x323daf9e # load x3 with value 0x323daf9e
sw x3, 0(x2) # store 0x323daf9e in memory
flw f11, 0(x2) # load 0x323daf9e from memory into f11
fnmsub.s f5, f10, f22, f11, dyn # perform operation
fnmsub.s f5, f10, f22, f11, rdn # perform operation
fnmsub.s f5, f10, f22, f11, rmm # perform operation
fnmsub.s f5, f10, f22, f11, rne # perform operation
fnmsub.s f5, f10, f22, f11, rtz # perform operation
fnmsub.s f5, f10, f22, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f5, f10, f22, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f5, f10, f22, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f5, f10, f22, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f5, f10, f22, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f5, f10, f22, f11 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0x1)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f25, 0(x2) # load 0x00400000 from memory into f25
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f21, 0(x2) # load 0x00000001 from memory into f21
la x2, scratch
li x3, 0x879aeeaf # load x3 with value 0x879aeeaf
sw x3, 0(x2) # store 0x879aeeaf in memory
flw f3, 0(x2) # load 0x879aeeaf from memory into f3
fnmsub.s f17, f25, f21, f3, dyn # perform operation
fnmsub.s f17, f25, f21, f3, rdn # perform operation
fnmsub.s f17, f25, f21, f3, rmm # perform operation
fnmsub.s f17, f25, f21, f3, rne # perform operation
fnmsub.s f17, f25, f21, f3, rtz # perform operation
fnmsub.s f17, f25, f21, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f17, f25, f21, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f17, f25, f21, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f17, f25, f21, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f17, f25, f21, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f17, f25, f21, f3 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0x80000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f8, 0(x2) # load 0x00400000 from memory into f8
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f2, 0(x2) # load 0x80000001 from memory into f2
la x2, scratch
li x3, 0xef0e57ce # load x3 with value 0xef0e57ce
sw x3, 0(x2) # store 0xef0e57ce in memory
flw f15, 0(x2) # load 0xef0e57ce from memory into f15
fnmsub.s f27, f8, f2, f15, dyn # perform operation
fnmsub.s f27, f8, f2, f15, rdn # perform operation
fnmsub.s f27, f8, f2, f15, rmm # perform operation
fnmsub.s f27, f8, f2, f15, rne # perform operation
fnmsub.s f27, f8, f2, f15, rtz # perform operation
fnmsub.s f27, f8, f2, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f27, f8, f2, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f27, f8, f2, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f27, f8, f2, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f27, f8, f2, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f27, f8, f2, f15 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0x7f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f19, 0(x2) # load 0x00400000 from memory into f19
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f22, 0(x2) # load 0x7f800000 from memory into f22
la x2, scratch
li x3, 0x494826ba # load x3 with value 0x494826ba
sw x3, 0(x2) # store 0x494826ba in memory
flw f24, 0(x2) # load 0x494826ba from memory into f24
fnmsub.s f29, f19, f22, f24, dyn # perform operation
fnmsub.s f29, f19, f22, f24, rdn # perform operation
fnmsub.s f29, f19, f22, f24, rmm # perform operation
fnmsub.s f29, f19, f22, f24, rne # perform operation
fnmsub.s f29, f19, f22, f24, rtz # perform operation
fnmsub.s f29, f19, f22, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f29, f19, f22, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f29, f19, f22, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f29, f19, f22, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f29, f19, f22, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f29, f19, f22, f24 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0xff800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f31, 0(x2) # load 0x00400000 from memory into f31
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f22, 0(x2) # load 0xff800000 from memory into f22
la x2, scratch
li x3, 0x85997ead # load x3 with value 0x85997ead
sw x3, 0(x2) # store 0x85997ead in memory
flw f30, 0(x2) # load 0x85997ead from memory into f30
fnmsub.s f17, f31, f22, f30, dyn # perform operation
fnmsub.s f17, f31, f22, f30, rdn # perform operation
fnmsub.s f17, f31, f22, f30, rmm # perform operation
fnmsub.s f17, f31, f22, f30, rne # perform operation
fnmsub.s f17, f31, f22, f30, rtz # perform operation
fnmsub.s f17, f31, f22, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f17, f31, f22, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f17, f31, f22, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f17, f31, f22, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f17, f31, f22, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f17, f31, f22, f30 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0x7fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f10, 0(x2) # load 0x00400000 from memory into f10
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f8, 0(x2) # load 0x7fc00000 from memory into f8
la x2, scratch
li x3, 0x06e37818 # load x3 with value 0x06e37818
sw x3, 0(x2) # store 0x06e37818 in memory
flw f23, 0(x2) # load 0x06e37818 from memory into f23
fnmsub.s f3, f10, f8, f23, dyn # perform operation
fnmsub.s f3, f10, f8, f23, rdn # perform operation
fnmsub.s f3, f10, f8, f23, rmm # perform operation
fnmsub.s f3, f10, f8, f23, rne # perform operation
fnmsub.s f3, f10, f8, f23, rtz # perform operation
fnmsub.s f3, f10, f8, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f3, f10, f8, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f3, f10, f8, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f3, f10, f8, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f3, f10, f8, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f3, f10, f8, f23 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0x7fffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f14, 0(x2) # load 0x00400000 from memory into f14
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f21, 0(x2) # load 0x7fffffff from memory into f21
la x2, scratch
li x3, 0xba1c8b8d # load x3 with value 0xba1c8b8d
sw x3, 0(x2) # store 0xba1c8b8d in memory
flw f9, 0(x2) # load 0xba1c8b8d from memory into f9
fnmsub.s f2, f14, f21, f9, dyn # perform operation
fnmsub.s f2, f14, f21, f9, rdn # perform operation
fnmsub.s f2, f14, f21, f9, rmm # perform operation
fnmsub.s f2, f14, f21, f9, rne # perform operation
fnmsub.s f2, f14, f21, f9, rtz # perform operation
fnmsub.s f2, f14, f21, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f2, f14, f21, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f2, f14, f21, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f2, f14, f21, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f2, f14, f21, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f2, f14, f21, f9 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0xffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f8, 0(x2) # load 0x00400000 from memory into f8
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f10, 0(x2) # load 0xffffffff from memory into f10
la x2, scratch
li x3, 0x92363c9b # load x3 with value 0x92363c9b
sw x3, 0(x2) # store 0x92363c9b in memory
flw f25, 0(x2) # load 0x92363c9b from memory into f25
fnmsub.s f18, f8, f10, f25, dyn # perform operation
fnmsub.s f18, f8, f10, f25, rdn # perform operation
fnmsub.s f18, f8, f10, f25, rmm # perform operation
fnmsub.s f18, f8, f10, f25, rne # perform operation
fnmsub.s f18, f8, f10, f25, rtz # perform operation
fnmsub.s f18, f8, f10, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f18, f8, f10, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f18, f8, f10, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f18, f8, f10, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f18, f8, f10, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f18, f8, f10, f25 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0x7f800001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f29, 0(x2) # load 0x00400000 from memory into f29
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f18, 0(x2) # load 0x7f800001 from memory into f18
la x2, scratch
li x3, 0x636c2e1a # load x3 with value 0x636c2e1a
sw x3, 0(x2) # store 0x636c2e1a in memory
flw f8, 0(x2) # load 0x636c2e1a from memory into f8
fnmsub.s f6, f29, f18, f8, dyn # perform operation
fnmsub.s f6, f29, f18, f8, rdn # perform operation
fnmsub.s f6, f29, f18, f8, rmm # perform operation
fnmsub.s f6, f29, f18, f8, rne # perform operation
fnmsub.s f6, f29, f18, f8, rtz # perform operation
fnmsub.s f6, f29, f18, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f6, f29, f18, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f6, f29, f18, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f6, f29, f18, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f6, f29, f18, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f6, f29, f18, f8 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0x7fbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f6, 0(x2) # load 0x00400000 from memory into f6
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f3, 0(x2) # load 0x7fbfffff from memory into f3
la x2, scratch
li x3, 0xad369e78 # load x3 with value 0xad369e78
sw x3, 0(x2) # store 0xad369e78 in memory
flw f19, 0(x2) # load 0xad369e78 from memory into f19
fnmsub.s f24, f6, f3, f19, dyn # perform operation
fnmsub.s f24, f6, f3, f19, rdn # perform operation
fnmsub.s f24, f6, f3, f19, rmm # perform operation
fnmsub.s f24, f6, f3, f19, rne # perform operation
fnmsub.s f24, f6, f3, f19, rtz # perform operation
fnmsub.s f24, f6, f3, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f24, f6, f3, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f24, f6, f3, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f24, f6, f3, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f24, f6, f3, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f24, f6, f3, f19 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0xffbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f5, 0(x2) # load 0x00400000 from memory into f5
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f17, 0(x2) # load 0xffbfffff from memory into f17
la x2, scratch
li x3, 0x77a570cd # load x3 with value 0x77a570cd
sw x3, 0(x2) # store 0x77a570cd in memory
flw f9, 0(x2) # load 0x77a570cd from memory into f9
fnmsub.s f20, f5, f17, f9, dyn # perform operation
fnmsub.s f20, f5, f17, f9, rdn # perform operation
fnmsub.s f20, f5, f17, f9, rmm # perform operation
fnmsub.s f20, f5, f17, f9, rne # perform operation
fnmsub.s f20, f5, f17, f9, rtz # perform operation
fnmsub.s f20, f5, f17, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f20, f5, f17, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f20, f5, f17, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f20, f5, f17, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f20, f5, f17, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f20, f5, f17, f9 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0x7ef8654f)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f8, 0(x2) # load 0x00400000 from memory into f8
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f29, 0(x2) # load 0x7ef8654f from memory into f29
la x2, scratch
li x3, 0xc3e4288a # load x3 with value 0xc3e4288a
sw x3, 0(x2) # store 0xc3e4288a in memory
flw f15, 0(x2) # load 0xc3e4288a from memory into f15
fnmsub.s f18, f8, f29, f15, dyn # perform operation
fnmsub.s f18, f8, f29, f15, rdn # perform operation
fnmsub.s f18, f8, f29, f15, rmm # perform operation
fnmsub.s f18, f8, f29, f15, rne # perform operation
fnmsub.s f18, f8, f29, f15, rtz # perform operation
fnmsub.s f18, f8, f29, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f18, f8, f29, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f18, f8, f29, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f18, f8, f29, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f18, f8, f29, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f18, f8, f29, f15 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0x813d9ab0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f20, 0(x2) # load 0x00400000 from memory into f20
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f8, 0(x2) # load 0x813d9ab0 from memory into f8
la x2, scratch
li x3, 0x45017ae4 # load x3 with value 0x45017ae4
sw x3, 0(x2) # store 0x45017ae4 in memory
flw f23, 0(x2) # load 0x45017ae4 from memory into f23
fnmsub.s f3, f20, f8, f23, dyn # perform operation
fnmsub.s f3, f20, f8, f23, rdn # perform operation
fnmsub.s f3, f20, f8, f23, rmm # perform operation
fnmsub.s f3, f20, f8, f23, rne # perform operation
fnmsub.s f3, f20, f8, f23, rtz # perform operation
fnmsub.s f3, f20, f8, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f3, f20, f8, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f3, f20, f8, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f3, f20, f8, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f3, f20, f8, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f3, f20, f8, f23 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0x0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f17, 0(x2) # load 0x80400000 from memory into f17
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f7, 0(x2) # load 0x00000000 from memory into f7
la x2, scratch
li x3, 0x3b76c504 # load x3 with value 0x3b76c504
sw x3, 0(x2) # store 0x3b76c504 in memory
flw f31, 0(x2) # load 0x3b76c504 from memory into f31
fnmsub.s f8, f17, f7, f31, dyn # perform operation
fnmsub.s f8, f17, f7, f31, rdn # perform operation
fnmsub.s f8, f17, f7, f31, rmm # perform operation
fnmsub.s f8, f17, f7, f31, rne # perform operation
fnmsub.s f8, f17, f7, f31, rtz # perform operation
fnmsub.s f8, f17, f7, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f8, f17, f7, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f8, f17, f7, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f8, f17, f7, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f8, f17, f7, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f8, f17, f7, f31 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0x80000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f19, 0(x2) # load 0x80400000 from memory into f19
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f22, 0(x2) # load 0x80000000 from memory into f22
la x2, scratch
li x3, 0x1a9537fb # load x3 with value 0x1a9537fb
sw x3, 0(x2) # store 0x1a9537fb in memory
flw f2, 0(x2) # load 0x1a9537fb from memory into f2
fnmsub.s f17, f19, f22, f2, dyn # perform operation
fnmsub.s f17, f19, f22, f2, rdn # perform operation
fnmsub.s f17, f19, f22, f2, rmm # perform operation
fnmsub.s f17, f19, f22, f2, rne # perform operation
fnmsub.s f17, f19, f22, f2, rtz # perform operation
fnmsub.s f17, f19, f22, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f17, f19, f22, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f17, f19, f22, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f17, f19, f22, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f17, f19, f22, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f17, f19, f22, f2 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0x3f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f19, 0(x2) # load 0x80400000 from memory into f19
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f27, 0(x2) # load 0x3f800000 from memory into f27
la x2, scratch
li x3, 0x509f5f01 # load x3 with value 0x509f5f01
sw x3, 0(x2) # store 0x509f5f01 in memory
flw f10, 0(x2) # load 0x509f5f01 from memory into f10
fnmsub.s f21, f19, f27, f10, dyn # perform operation
fnmsub.s f21, f19, f27, f10, rdn # perform operation
fnmsub.s f21, f19, f27, f10, rmm # perform operation
fnmsub.s f21, f19, f27, f10, rne # perform operation
fnmsub.s f21, f19, f27, f10, rtz # perform operation
fnmsub.s f21, f19, f27, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f21, f19, f27, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f21, f19, f27, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f21, f19, f27, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f21, f19, f27, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f21, f19, f27, f10 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0xbf800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f19, 0(x2) # load 0x80400000 from memory into f19
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f21, 0(x2) # load 0xbf800000 from memory into f21
la x2, scratch
li x3, 0xcfceb6c3 # load x3 with value 0xcfceb6c3
sw x3, 0(x2) # store 0xcfceb6c3 in memory
flw f27, 0(x2) # load 0xcfceb6c3 from memory into f27
fnmsub.s f10, f19, f21, f27, dyn # perform operation
fnmsub.s f10, f19, f21, f27, rdn # perform operation
fnmsub.s f10, f19, f21, f27, rmm # perform operation
fnmsub.s f10, f19, f21, f27, rne # perform operation
fnmsub.s f10, f19, f21, f27, rtz # perform operation
fnmsub.s f10, f19, f21, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f10, f19, f21, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f10, f19, f21, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f10, f19, f21, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f10, f19, f21, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f10, f19, f21, f27 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0x3fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f9, 0(x2) # load 0x80400000 from memory into f9
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f24, 0(x2) # load 0x3fc00000 from memory into f24
la x2, scratch
li x3, 0xe054f66b # load x3 with value 0xe054f66b
sw x3, 0(x2) # store 0xe054f66b in memory
flw f22, 0(x2) # load 0xe054f66b from memory into f22
fnmsub.s f26, f9, f24, f22, dyn # perform operation
fnmsub.s f26, f9, f24, f22, rdn # perform operation
fnmsub.s f26, f9, f24, f22, rmm # perform operation
fnmsub.s f26, f9, f24, f22, rne # perform operation
fnmsub.s f26, f9, f24, f22, rtz # perform operation
fnmsub.s f26, f9, f24, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f26, f9, f24, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f26, f9, f24, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f26, f9, f24, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f26, f9, f24, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f26, f9, f24, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0xbfc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f1, 0(x2) # load 0x80400000 from memory into f1
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f9, 0(x2) # load 0xbfc00000 from memory into f9
la x2, scratch
li x3, 0x7a606adc # load x3 with value 0x7a606adc
sw x3, 0(x2) # store 0x7a606adc in memory
flw f6, 0(x2) # load 0x7a606adc from memory into f6
fnmsub.s f8, f1, f9, f6, dyn # perform operation
fnmsub.s f8, f1, f9, f6, rdn # perform operation
fnmsub.s f8, f1, f9, f6, rmm # perform operation
fnmsub.s f8, f1, f9, f6, rne # perform operation
fnmsub.s f8, f1, f9, f6, rtz # perform operation
fnmsub.s f8, f1, f9, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f8, f1, f9, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f8, f1, f9, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f8, f1, f9, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f8, f1, f9, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f8, f1, f9, f6 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0x40000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f6, 0(x2) # load 0x80400000 from memory into f6
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f13, 0(x2) # load 0x40000000 from memory into f13
la x2, scratch
li x3, 0x521e638c # load x3 with value 0x521e638c
sw x3, 0(x2) # store 0x521e638c in memory
flw f11, 0(x2) # load 0x521e638c from memory into f11
fnmsub.s f22, f6, f13, f11, dyn # perform operation
fnmsub.s f22, f6, f13, f11, rdn # perform operation
fnmsub.s f22, f6, f13, f11, rmm # perform operation
fnmsub.s f22, f6, f13, f11, rne # perform operation
fnmsub.s f22, f6, f13, f11, rtz # perform operation
fnmsub.s f22, f6, f13, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f22, f6, f13, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f22, f6, f13, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f22, f6, f13, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f22, f6, f13, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f22, f6, f13, f11 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0xc0000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f15, 0(x2) # load 0x80400000 from memory into f15
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f19, 0(x2) # load 0xc0000000 from memory into f19
la x2, scratch
li x3, 0xc262d39c # load x3 with value 0xc262d39c
sw x3, 0(x2) # store 0xc262d39c in memory
flw f13, 0(x2) # load 0xc262d39c from memory into f13
fnmsub.s f21, f15, f19, f13, dyn # perform operation
fnmsub.s f21, f15, f19, f13, rdn # perform operation
fnmsub.s f21, f15, f19, f13, rmm # perform operation
fnmsub.s f21, f15, f19, f13, rne # perform operation
fnmsub.s f21, f15, f19, f13, rtz # perform operation
fnmsub.s f21, f15, f19, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f21, f15, f19, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f21, f15, f19, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f21, f15, f19, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f21, f15, f19, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f21, f15, f19, f13 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0x800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f13, 0(x2) # load 0x80400000 from memory into f13
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f25, 0(x2) # load 0x00800000 from memory into f25
la x2, scratch
li x3, 0xf6e1fabd # load x3 with value 0xf6e1fabd
sw x3, 0(x2) # store 0xf6e1fabd in memory
flw f28, 0(x2) # load 0xf6e1fabd from memory into f28
fnmsub.s f30, f13, f25, f28, dyn # perform operation
fnmsub.s f30, f13, f25, f28, rdn # perform operation
fnmsub.s f30, f13, f25, f28, rmm # perform operation
fnmsub.s f30, f13, f25, f28, rne # perform operation
fnmsub.s f30, f13, f25, f28, rtz # perform operation
fnmsub.s f30, f13, f25, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f30, f13, f25, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f30, f13, f25, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f30, f13, f25, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f30, f13, f25, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f30, f13, f25, f28 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0x80800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f28, 0(x2) # load 0x80400000 from memory into f28
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f27, 0(x2) # load 0x80800000 from memory into f27
la x2, scratch
li x3, 0x098508c8 # load x3 with value 0x098508c8
sw x3, 0(x2) # store 0x098508c8 in memory
flw f8, 0(x2) # load 0x098508c8 from memory into f8
fnmsub.s f22, f28, f27, f8, dyn # perform operation
fnmsub.s f22, f28, f27, f8, rdn # perform operation
fnmsub.s f22, f28, f27, f8, rmm # perform operation
fnmsub.s f22, f28, f27, f8, rne # perform operation
fnmsub.s f22, f28, f27, f8, rtz # perform operation
fnmsub.s f22, f28, f27, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f22, f28, f27, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f22, f28, f27, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f22, f28, f27, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f22, f28, f27, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f22, f28, f27, f8 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0x7f7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f30, 0(x2) # load 0x80400000 from memory into f30
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f15, 0(x2) # load 0x7f7fffff from memory into f15
la x2, scratch
li x3, 0x272bec0a # load x3 with value 0x272bec0a
sw x3, 0(x2) # store 0x272bec0a in memory
flw f25, 0(x2) # load 0x272bec0a from memory into f25
fnmsub.s f19, f30, f15, f25, dyn # perform operation
fnmsub.s f19, f30, f15, f25, rdn # perform operation
fnmsub.s f19, f30, f15, f25, rmm # perform operation
fnmsub.s f19, f30, f15, f25, rne # perform operation
fnmsub.s f19, f30, f15, f25, rtz # perform operation
fnmsub.s f19, f30, f15, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f19, f30, f15, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f19, f30, f15, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f19, f30, f15, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f19, f30, f15, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f19, f30, f15, f25 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0xff7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f28, 0(x2) # load 0x80400000 from memory into f28
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f27, 0(x2) # load 0xff7fffff from memory into f27
la x2, scratch
li x3, 0xed1d5851 # load x3 with value 0xed1d5851
sw x3, 0(x2) # store 0xed1d5851 in memory
flw f9, 0(x2) # load 0xed1d5851 from memory into f9
fnmsub.s f19, f28, f27, f9, dyn # perform operation
fnmsub.s f19, f28, f27, f9, rdn # perform operation
fnmsub.s f19, f28, f27, f9, rmm # perform operation
fnmsub.s f19, f28, f27, f9, rne # perform operation
fnmsub.s f19, f28, f27, f9, rtz # perform operation
fnmsub.s f19, f28, f27, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f19, f28, f27, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f19, f28, f27, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f19, f28, f27, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f19, f28, f27, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f19, f28, f27, f9 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0x7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f26, 0(x2) # load 0x80400000 from memory into f26
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f18, 0(x2) # load 0x007fffff from memory into f18
la x2, scratch
li x3, 0xed710b34 # load x3 with value 0xed710b34
sw x3, 0(x2) # store 0xed710b34 in memory
flw f12, 0(x2) # load 0xed710b34 from memory into f12
fnmsub.s f28, f26, f18, f12, dyn # perform operation
fnmsub.s f28, f26, f18, f12, rdn # perform operation
fnmsub.s f28, f26, f18, f12, rmm # perform operation
fnmsub.s f28, f26, f18, f12, rne # perform operation
fnmsub.s f28, f26, f18, f12, rtz # perform operation
fnmsub.s f28, f26, f18, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f28, f26, f18, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f28, f26, f18, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f28, f26, f18, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f28, f26, f18, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f28, f26, f18, f12 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0x807fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f9, 0(x2) # load 0x80400000 from memory into f9
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f15, 0(x2) # load 0x807fffff from memory into f15
la x2, scratch
li x3, 0xab742cc1 # load x3 with value 0xab742cc1
sw x3, 0(x2) # store 0xab742cc1 in memory
flw f14, 0(x2) # load 0xab742cc1 from memory into f14
fnmsub.s f26, f9, f15, f14, dyn # perform operation
fnmsub.s f26, f9, f15, f14, rdn # perform operation
fnmsub.s f26, f9, f15, f14, rmm # perform operation
fnmsub.s f26, f9, f15, f14, rne # perform operation
fnmsub.s f26, f9, f15, f14, rtz # perform operation
fnmsub.s f26, f9, f15, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f26, f9, f15, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f26, f9, f15, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f26, f9, f15, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f26, f9, f15, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f26, f9, f15, f14 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0x400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f27, 0(x2) # load 0x80400000 from memory into f27
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f24, 0(x2) # load 0x00400000 from memory into f24
la x2, scratch
li x3, 0x7fa91111 # load x3 with value 0x7fa91111
sw x3, 0(x2) # store 0x7fa91111 in memory
flw f30, 0(x2) # load 0x7fa91111 from memory into f30
fnmsub.s f21, f27, f24, f30, dyn # perform operation
fnmsub.s f21, f27, f24, f30, rdn # perform operation
fnmsub.s f21, f27, f24, f30, rmm # perform operation
fnmsub.s f21, f27, f24, f30, rne # perform operation
fnmsub.s f21, f27, f24, f30, rtz # perform operation
fnmsub.s f21, f27, f24, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f21, f27, f24, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f21, f27, f24, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f21, f27, f24, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f21, f27, f24, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f21, f27, f24, f30 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0x80400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f11, 0(x2) # load 0x80400000 from memory into f11
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f2, 0(x2) # load 0x80400000 from memory into f2
la x2, scratch
li x3, 0xd7aa54d5 # load x3 with value 0xd7aa54d5
sw x3, 0(x2) # store 0xd7aa54d5 in memory
flw f17, 0(x2) # load 0xd7aa54d5 from memory into f17
fnmsub.s f3, f11, f2, f17, dyn # perform operation
fnmsub.s f3, f11, f2, f17, rdn # perform operation
fnmsub.s f3, f11, f2, f17, rmm # perform operation
fnmsub.s f3, f11, f2, f17, rne # perform operation
fnmsub.s f3, f11, f2, f17, rtz # perform operation
fnmsub.s f3, f11, f2, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f3, f11, f2, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f3, f11, f2, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f3, f11, f2, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f3, f11, f2, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f3, f11, f2, f17 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0x1)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f23, 0(x2) # load 0x80400000 from memory into f23
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f19, 0(x2) # load 0x00000001 from memory into f19
la x2, scratch
li x3, 0xa13e1836 # load x3 with value 0xa13e1836
sw x3, 0(x2) # store 0xa13e1836 in memory
flw f22, 0(x2) # load 0xa13e1836 from memory into f22
fnmsub.s f13, f23, f19, f22, dyn # perform operation
fnmsub.s f13, f23, f19, f22, rdn # perform operation
fnmsub.s f13, f23, f19, f22, rmm # perform operation
fnmsub.s f13, f23, f19, f22, rne # perform operation
fnmsub.s f13, f23, f19, f22, rtz # perform operation
fnmsub.s f13, f23, f19, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f13, f23, f19, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f13, f23, f19, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f13, f23, f19, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f13, f23, f19, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f13, f23, f19, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0x80000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f29, 0(x2) # load 0x80400000 from memory into f29
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f30, 0(x2) # load 0x80000001 from memory into f30
la x2, scratch
li x3, 0xdadb4b35 # load x3 with value 0xdadb4b35
sw x3, 0(x2) # store 0xdadb4b35 in memory
flw f6, 0(x2) # load 0xdadb4b35 from memory into f6
fnmsub.s f18, f29, f30, f6, dyn # perform operation
fnmsub.s f18, f29, f30, f6, rdn # perform operation
fnmsub.s f18, f29, f30, f6, rmm # perform operation
fnmsub.s f18, f29, f30, f6, rne # perform operation
fnmsub.s f18, f29, f30, f6, rtz # perform operation
fnmsub.s f18, f29, f30, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f18, f29, f30, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f18, f29, f30, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f18, f29, f30, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f18, f29, f30, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f18, f29, f30, f6 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0x7f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f14, 0(x2) # load 0x80400000 from memory into f14
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f28, 0(x2) # load 0x7f800000 from memory into f28
la x2, scratch
li x3, 0xdec59d05 # load x3 with value 0xdec59d05
sw x3, 0(x2) # store 0xdec59d05 in memory
flw f31, 0(x2) # load 0xdec59d05 from memory into f31
fnmsub.s f23, f14, f28, f31, dyn # perform operation
fnmsub.s f23, f14, f28, f31, rdn # perform operation
fnmsub.s f23, f14, f28, f31, rmm # perform operation
fnmsub.s f23, f14, f28, f31, rne # perform operation
fnmsub.s f23, f14, f28, f31, rtz # perform operation
fnmsub.s f23, f14, f28, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f23, f14, f28, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f23, f14, f28, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f23, f14, f28, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f23, f14, f28, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f23, f14, f28, f31 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0xff800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f26, 0(x2) # load 0x80400000 from memory into f26
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f12, 0(x2) # load 0xff800000 from memory into f12
la x2, scratch
li x3, 0xd353ad67 # load x3 with value 0xd353ad67
sw x3, 0(x2) # store 0xd353ad67 in memory
flw f19, 0(x2) # load 0xd353ad67 from memory into f19
fnmsub.s f25, f26, f12, f19, dyn # perform operation
fnmsub.s f25, f26, f12, f19, rdn # perform operation
fnmsub.s f25, f26, f12, f19, rmm # perform operation
fnmsub.s f25, f26, f12, f19, rne # perform operation
fnmsub.s f25, f26, f12, f19, rtz # perform operation
fnmsub.s f25, f26, f12, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f25, f26, f12, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f25, f26, f12, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f25, f26, f12, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f25, f26, f12, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f25, f26, f12, f19 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0x7fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f10, 0(x2) # load 0x80400000 from memory into f10
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f28, 0(x2) # load 0x7fc00000 from memory into f28
la x2, scratch
li x3, 0xc437ef52 # load x3 with value 0xc437ef52
sw x3, 0(x2) # store 0xc437ef52 in memory
flw f27, 0(x2) # load 0xc437ef52 from memory into f27
fnmsub.s f16, f10, f28, f27, dyn # perform operation
fnmsub.s f16, f10, f28, f27, rdn # perform operation
fnmsub.s f16, f10, f28, f27, rmm # perform operation
fnmsub.s f16, f10, f28, f27, rne # perform operation
fnmsub.s f16, f10, f28, f27, rtz # perform operation
fnmsub.s f16, f10, f28, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f16, f10, f28, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f16, f10, f28, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f16, f10, f28, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f16, f10, f28, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f16, f10, f28, f27 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0x7fffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f20, 0(x2) # load 0x80400000 from memory into f20
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f3, 0(x2) # load 0x7fffffff from memory into f3
la x2, scratch
li x3, 0x197ba670 # load x3 with value 0x197ba670
sw x3, 0(x2) # store 0x197ba670 in memory
flw f28, 0(x2) # load 0x197ba670 from memory into f28
fnmsub.s f5, f20, f3, f28, dyn # perform operation
fnmsub.s f5, f20, f3, f28, rdn # perform operation
fnmsub.s f5, f20, f3, f28, rmm # perform operation
fnmsub.s f5, f20, f3, f28, rne # perform operation
fnmsub.s f5, f20, f3, f28, rtz # perform operation
fnmsub.s f5, f20, f3, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f5, f20, f3, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f5, f20, f3, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f5, f20, f3, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f5, f20, f3, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f5, f20, f3, f28 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0xffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f26, 0(x2) # load 0x80400000 from memory into f26
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f15, 0(x2) # load 0xffffffff from memory into f15
la x2, scratch
li x3, 0x8a95b6a0 # load x3 with value 0x8a95b6a0
sw x3, 0(x2) # store 0x8a95b6a0 in memory
flw f20, 0(x2) # load 0x8a95b6a0 from memory into f20
fnmsub.s f29, f26, f15, f20, dyn # perform operation
fnmsub.s f29, f26, f15, f20, rdn # perform operation
fnmsub.s f29, f26, f15, f20, rmm # perform operation
fnmsub.s f29, f26, f15, f20, rne # perform operation
fnmsub.s f29, f26, f15, f20, rtz # perform operation
fnmsub.s f29, f26, f15, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f29, f26, f15, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f29, f26, f15, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f29, f26, f15, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f29, f26, f15, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f29, f26, f15, f20 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0x7f800001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f20, 0(x2) # load 0x80400000 from memory into f20
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f17, 0(x2) # load 0x7f800001 from memory into f17
la x2, scratch
li x3, 0xa21e3c4d # load x3 with value 0xa21e3c4d
sw x3, 0(x2) # store 0xa21e3c4d in memory
flw f6, 0(x2) # load 0xa21e3c4d from memory into f6
fnmsub.s f29, f20, f17, f6, dyn # perform operation
fnmsub.s f29, f20, f17, f6, rdn # perform operation
fnmsub.s f29, f20, f17, f6, rmm # perform operation
fnmsub.s f29, f20, f17, f6, rne # perform operation
fnmsub.s f29, f20, f17, f6, rtz # perform operation
fnmsub.s f29, f20, f17, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f29, f20, f17, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f29, f20, f17, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f29, f20, f17, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f29, f20, f17, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f29, f20, f17, f6 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0x7fbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f2, 0(x2) # load 0x80400000 from memory into f2
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f26, 0(x2) # load 0x7fbfffff from memory into f26
la x2, scratch
li x3, 0x40a1b677 # load x3 with value 0x40a1b677
sw x3, 0(x2) # store 0x40a1b677 in memory
flw f27, 0(x2) # load 0x40a1b677 from memory into f27
fnmsub.s f9, f2, f26, f27, dyn # perform operation
fnmsub.s f9, f2, f26, f27, rdn # perform operation
fnmsub.s f9, f2, f26, f27, rmm # perform operation
fnmsub.s f9, f2, f26, f27, rne # perform operation
fnmsub.s f9, f2, f26, f27, rtz # perform operation
fnmsub.s f9, f2, f26, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f9, f2, f26, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f9, f2, f26, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f9, f2, f26, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f9, f2, f26, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f9, f2, f26, f27 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0xffbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f18, 0(x2) # load 0x80400000 from memory into f18
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f3, 0(x2) # load 0xffbfffff from memory into f3
la x2, scratch
li x3, 0xa01ff9ef # load x3 with value 0xa01ff9ef
sw x3, 0(x2) # store 0xa01ff9ef in memory
flw f30, 0(x2) # load 0xa01ff9ef from memory into f30
fnmsub.s f28, f18, f3, f30, dyn # perform operation
fnmsub.s f28, f18, f3, f30, rdn # perform operation
fnmsub.s f28, f18, f3, f30, rmm # perform operation
fnmsub.s f28, f18, f3, f30, rne # perform operation
fnmsub.s f28, f18, f3, f30, rtz # perform operation
fnmsub.s f28, f18, f3, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f28, f18, f3, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f28, f18, f3, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f28, f18, f3, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f28, f18, f3, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f28, f18, f3, f30 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0x7ef8654f)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f14, 0(x2) # load 0x80400000 from memory into f14
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f3, 0(x2) # load 0x7ef8654f from memory into f3
la x2, scratch
li x3, 0x48846492 # load x3 with value 0x48846492
sw x3, 0(x2) # store 0x48846492 in memory
flw f27, 0(x2) # load 0x48846492 from memory into f27
fnmsub.s f8, f14, f3, f27, dyn # perform operation
fnmsub.s f8, f14, f3, f27, rdn # perform operation
fnmsub.s f8, f14, f3, f27, rmm # perform operation
fnmsub.s f8, f14, f3, f27, rne # perform operation
fnmsub.s f8, f14, f3, f27, rtz # perform operation
fnmsub.s f8, f14, f3, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f8, f14, f3, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f8, f14, f3, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f8, f14, f3, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f8, f14, f3, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f8, f14, f3, f27 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0x813d9ab0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f18, 0(x2) # load 0x80400000 from memory into f18
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f2, 0(x2) # load 0x813d9ab0 from memory into f2
la x2, scratch
li x3, 0x151189fe # load x3 with value 0x151189fe
sw x3, 0(x2) # store 0x151189fe in memory
flw f30, 0(x2) # load 0x151189fe from memory into f30
fnmsub.s f16, f18, f2, f30, dyn # perform operation
fnmsub.s f16, f18, f2, f30, rdn # perform operation
fnmsub.s f16, f18, f2, f30, rmm # perform operation
fnmsub.s f16, f18, f2, f30, rne # perform operation
fnmsub.s f16, f18, f2, f30, rtz # perform operation
fnmsub.s f16, f18, f2, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f16, f18, f2, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f16, f18, f2, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f16, f18, f2, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f16, f18, f2, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f16, f18, f2, f30 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f27, 0(x2) # load 0x00000001 from memory into f27
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f7, 0(x2) # load 0x00000000 from memory into f7
la x2, scratch
li x3, 0x23c47f9b # load x3 with value 0x23c47f9b
sw x3, 0(x2) # store 0x23c47f9b in memory
flw f1, 0(x2) # load 0x23c47f9b from memory into f1
fnmsub.s f23, f27, f7, f1, dyn # perform operation
fnmsub.s f23, f27, f7, f1, rdn # perform operation
fnmsub.s f23, f27, f7, f1, rmm # perform operation
fnmsub.s f23, f27, f7, f1, rne # perform operation
fnmsub.s f23, f27, f7, f1, rtz # perform operation
fnmsub.s f23, f27, f7, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f23, f27, f7, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f23, f27, f7, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f23, f27, f7, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f23, f27, f7, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f23, f27, f7, f1 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x80000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f11, 0(x2) # load 0x00000001 from memory into f11
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f3, 0(x2) # load 0x80000000 from memory into f3
la x2, scratch
li x3, 0x6f763a78 # load x3 with value 0x6f763a78
sw x3, 0(x2) # store 0x6f763a78 in memory
flw f8, 0(x2) # load 0x6f763a78 from memory into f8
fnmsub.s f18, f11, f3, f8, dyn # perform operation
fnmsub.s f18, f11, f3, f8, rdn # perform operation
fnmsub.s f18, f11, f3, f8, rmm # perform operation
fnmsub.s f18, f11, f3, f8, rne # perform operation
fnmsub.s f18, f11, f3, f8, rtz # perform operation
fnmsub.s f18, f11, f3, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f18, f11, f3, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f18, f11, f3, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f18, f11, f3, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f18, f11, f3, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f18, f11, f3, f8 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x3f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f5, 0(x2) # load 0x00000001 from memory into f5
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f16, 0(x2) # load 0x3f800000 from memory into f16
la x2, scratch
li x3, 0x2284940c # load x3 with value 0x2284940c
sw x3, 0(x2) # store 0x2284940c in memory
flw f21, 0(x2) # load 0x2284940c from memory into f21
fnmsub.s f30, f5, f16, f21, dyn # perform operation
fnmsub.s f30, f5, f16, f21, rdn # perform operation
fnmsub.s f30, f5, f16, f21, rmm # perform operation
fnmsub.s f30, f5, f16, f21, rne # perform operation
fnmsub.s f30, f5, f16, f21, rtz # perform operation
fnmsub.s f30, f5, f16, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f30, f5, f16, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f30, f5, f16, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f30, f5, f16, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f30, f5, f16, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f30, f5, f16, f21 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0xbf800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f16, 0(x2) # load 0x00000001 from memory into f16
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f21, 0(x2) # load 0xbf800000 from memory into f21
la x2, scratch
li x3, 0xee80248f # load x3 with value 0xee80248f
sw x3, 0(x2) # store 0xee80248f in memory
flw f18, 0(x2) # load 0xee80248f from memory into f18
fnmsub.s f13, f16, f21, f18, dyn # perform operation
fnmsub.s f13, f16, f21, f18, rdn # perform operation
fnmsub.s f13, f16, f21, f18, rmm # perform operation
fnmsub.s f13, f16, f21, f18, rne # perform operation
fnmsub.s f13, f16, f21, f18, rtz # perform operation
fnmsub.s f13, f16, f21, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f13, f16, f21, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f13, f16, f21, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f13, f16, f21, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f13, f16, f21, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f13, f16, f21, f18 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x3fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f27, 0(x2) # load 0x00000001 from memory into f27
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f8, 0(x2) # load 0x3fc00000 from memory into f8
la x2, scratch
li x3, 0x44c627fa # load x3 with value 0x44c627fa
sw x3, 0(x2) # store 0x44c627fa in memory
flw f2, 0(x2) # load 0x44c627fa from memory into f2
fnmsub.s f13, f27, f8, f2, dyn # perform operation
fnmsub.s f13, f27, f8, f2, rdn # perform operation
fnmsub.s f13, f27, f8, f2, rmm # perform operation
fnmsub.s f13, f27, f8, f2, rne # perform operation
fnmsub.s f13, f27, f8, f2, rtz # perform operation
fnmsub.s f13, f27, f8, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f13, f27, f8, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f13, f27, f8, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f13, f27, f8, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f13, f27, f8, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f13, f27, f8, f2 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0xbfc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f30, 0(x2) # load 0x00000001 from memory into f30
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f16, 0(x2) # load 0xbfc00000 from memory into f16
la x2, scratch
li x3, 0x3ceb0a88 # load x3 with value 0x3ceb0a88
sw x3, 0(x2) # store 0x3ceb0a88 in memory
flw f15, 0(x2) # load 0x3ceb0a88 from memory into f15
fnmsub.s f31, f30, f16, f15, dyn # perform operation
fnmsub.s f31, f30, f16, f15, rdn # perform operation
fnmsub.s f31, f30, f16, f15, rmm # perform operation
fnmsub.s f31, f30, f16, f15, rne # perform operation
fnmsub.s f31, f30, f16, f15, rtz # perform operation
fnmsub.s f31, f30, f16, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f31, f30, f16, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f31, f30, f16, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f31, f30, f16, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f31, f30, f16, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f31, f30, f16, f15 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x40000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f6, 0(x2) # load 0x00000001 from memory into f6
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f13, 0(x2) # load 0x40000000 from memory into f13
la x2, scratch
li x3, 0xf753aa8e # load x3 with value 0xf753aa8e
sw x3, 0(x2) # store 0xf753aa8e in memory
flw f26, 0(x2) # load 0xf753aa8e from memory into f26
fnmsub.s f30, f6, f13, f26, dyn # perform operation
fnmsub.s f30, f6, f13, f26, rdn # perform operation
fnmsub.s f30, f6, f13, f26, rmm # perform operation
fnmsub.s f30, f6, f13, f26, rne # perform operation
fnmsub.s f30, f6, f13, f26, rtz # perform operation
fnmsub.s f30, f6, f13, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f30, f6, f13, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f30, f6, f13, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f30, f6, f13, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f30, f6, f13, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f30, f6, f13, f26 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0xc0000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f9, 0(x2) # load 0x00000001 from memory into f9
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f7, 0(x2) # load 0xc0000000 from memory into f7
la x2, scratch
li x3, 0x7dd69d2d # load x3 with value 0x7dd69d2d
sw x3, 0(x2) # store 0x7dd69d2d in memory
flw f25, 0(x2) # load 0x7dd69d2d from memory into f25
fnmsub.s f31, f9, f7, f25, dyn # perform operation
fnmsub.s f31, f9, f7, f25, rdn # perform operation
fnmsub.s f31, f9, f7, f25, rmm # perform operation
fnmsub.s f31, f9, f7, f25, rne # perform operation
fnmsub.s f31, f9, f7, f25, rtz # perform operation
fnmsub.s f31, f9, f7, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f31, f9, f7, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f31, f9, f7, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f31, f9, f7, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f31, f9, f7, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f31, f9, f7, f25 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f30, 0(x2) # load 0x00000001 from memory into f30
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f12, 0(x2) # load 0x00800000 from memory into f12
la x2, scratch
li x3, 0x43341e9b # load x3 with value 0x43341e9b
sw x3, 0(x2) # store 0x43341e9b in memory
flw f14, 0(x2) # load 0x43341e9b from memory into f14
fnmsub.s f7, f30, f12, f14, dyn # perform operation
fnmsub.s f7, f30, f12, f14, rdn # perform operation
fnmsub.s f7, f30, f12, f14, rmm # perform operation
fnmsub.s f7, f30, f12, f14, rne # perform operation
fnmsub.s f7, f30, f12, f14, rtz # perform operation
fnmsub.s f7, f30, f12, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f7, f30, f12, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f7, f30, f12, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f7, f30, f12, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f7, f30, f12, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f7, f30, f12, f14 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x80800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f17, 0(x2) # load 0x00000001 from memory into f17
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f11, 0(x2) # load 0x80800000 from memory into f11
la x2, scratch
li x3, 0xbc5c39a7 # load x3 with value 0xbc5c39a7
sw x3, 0(x2) # store 0xbc5c39a7 in memory
flw f8, 0(x2) # load 0xbc5c39a7 from memory into f8
fnmsub.s f19, f17, f11, f8, dyn # perform operation
fnmsub.s f19, f17, f11, f8, rdn # perform operation
fnmsub.s f19, f17, f11, f8, rmm # perform operation
fnmsub.s f19, f17, f11, f8, rne # perform operation
fnmsub.s f19, f17, f11, f8, rtz # perform operation
fnmsub.s f19, f17, f11, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f19, f17, f11, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f19, f17, f11, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f19, f17, f11, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f19, f17, f11, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f19, f17, f11, f8 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x7f7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f11, 0(x2) # load 0x00000001 from memory into f11
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f6, 0(x2) # load 0x7f7fffff from memory into f6
la x2, scratch
li x3, 0x0885ad2a # load x3 with value 0x0885ad2a
sw x3, 0(x2) # store 0x0885ad2a in memory
flw f28, 0(x2) # load 0x0885ad2a from memory into f28
fnmsub.s f14, f11, f6, f28, dyn # perform operation
fnmsub.s f14, f11, f6, f28, rdn # perform operation
fnmsub.s f14, f11, f6, f28, rmm # perform operation
fnmsub.s f14, f11, f6, f28, rne # perform operation
fnmsub.s f14, f11, f6, f28, rtz # perform operation
fnmsub.s f14, f11, f6, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f14, f11, f6, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f14, f11, f6, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f14, f11, f6, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f14, f11, f6, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f14, f11, f6, f28 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0xff7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f11, 0(x2) # load 0x00000001 from memory into f11
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f26, 0(x2) # load 0xff7fffff from memory into f26
la x2, scratch
li x3, 0x9b33a50a # load x3 with value 0x9b33a50a
sw x3, 0(x2) # store 0x9b33a50a in memory
flw f18, 0(x2) # load 0x9b33a50a from memory into f18
fnmsub.s f2, f11, f26, f18, dyn # perform operation
fnmsub.s f2, f11, f26, f18, rdn # perform operation
fnmsub.s f2, f11, f26, f18, rmm # perform operation
fnmsub.s f2, f11, f26, f18, rne # perform operation
fnmsub.s f2, f11, f26, f18, rtz # perform operation
fnmsub.s f2, f11, f26, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f2, f11, f26, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f2, f11, f26, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f2, f11, f26, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f2, f11, f26, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f2, f11, f26, f18 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f12, 0(x2) # load 0x00000001 from memory into f12
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f19, 0(x2) # load 0x007fffff from memory into f19
la x2, scratch
li x3, 0xcf39f4f3 # load x3 with value 0xcf39f4f3
sw x3, 0(x2) # store 0xcf39f4f3 in memory
flw f25, 0(x2) # load 0xcf39f4f3 from memory into f25
fnmsub.s f26, f12, f19, f25, dyn # perform operation
fnmsub.s f26, f12, f19, f25, rdn # perform operation
fnmsub.s f26, f12, f19, f25, rmm # perform operation
fnmsub.s f26, f12, f19, f25, rne # perform operation
fnmsub.s f26, f12, f19, f25, rtz # perform operation
fnmsub.s f26, f12, f19, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f26, f12, f19, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f26, f12, f19, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f26, f12, f19, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f26, f12, f19, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f26, f12, f19, f25 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x807fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f7, 0(x2) # load 0x00000001 from memory into f7
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f18, 0(x2) # load 0x807fffff from memory into f18
la x2, scratch
li x3, 0x762465c2 # load x3 with value 0x762465c2
sw x3, 0(x2) # store 0x762465c2 in memory
flw f1, 0(x2) # load 0x762465c2 from memory into f1
fnmsub.s f6, f7, f18, f1, dyn # perform operation
fnmsub.s f6, f7, f18, f1, rdn # perform operation
fnmsub.s f6, f7, f18, f1, rmm # perform operation
fnmsub.s f6, f7, f18, f1, rne # perform operation
fnmsub.s f6, f7, f18, f1, rtz # perform operation
fnmsub.s f6, f7, f18, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f6, f7, f18, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f6, f7, f18, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f6, f7, f18, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f6, f7, f18, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f6, f7, f18, f1 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f1, 0(x2) # load 0x00000001 from memory into f1
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f28, 0(x2) # load 0x00400000 from memory into f28
la x2, scratch
li x3, 0x3ece5e25 # load x3 with value 0x3ece5e25
sw x3, 0(x2) # store 0x3ece5e25 in memory
flw f27, 0(x2) # load 0x3ece5e25 from memory into f27
fnmsub.s f7, f1, f28, f27, dyn # perform operation
fnmsub.s f7, f1, f28, f27, rdn # perform operation
fnmsub.s f7, f1, f28, f27, rmm # perform operation
fnmsub.s f7, f1, f28, f27, rne # perform operation
fnmsub.s f7, f1, f28, f27, rtz # perform operation
fnmsub.s f7, f1, f28, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f7, f1, f28, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f7, f1, f28, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f7, f1, f28, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f7, f1, f28, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f7, f1, f28, f27 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x80400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f9, 0(x2) # load 0x00000001 from memory into f9
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f20, 0(x2) # load 0x80400000 from memory into f20
la x2, scratch
li x3, 0x46523ced # load x3 with value 0x46523ced
sw x3, 0(x2) # store 0x46523ced in memory
flw f22, 0(x2) # load 0x46523ced from memory into f22
fnmsub.s f18, f9, f20, f22, dyn # perform operation
fnmsub.s f18, f9, f20, f22, rdn # perform operation
fnmsub.s f18, f9, f20, f22, rmm # perform operation
fnmsub.s f18, f9, f20, f22, rne # perform operation
fnmsub.s f18, f9, f20, f22, rtz # perform operation
fnmsub.s f18, f9, f20, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f18, f9, f20, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f18, f9, f20, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f18, f9, f20, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f18, f9, f20, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f18, f9, f20, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x1)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f10, 0(x2) # load 0x00000001 from memory into f10
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f7, 0(x2) # load 0x00000001 from memory into f7
la x2, scratch
li x3, 0x6b0a96a6 # load x3 with value 0x6b0a96a6
sw x3, 0(x2) # store 0x6b0a96a6 in memory
flw f30, 0(x2) # load 0x6b0a96a6 from memory into f30
fnmsub.s f5, f10, f7, f30, dyn # perform operation
fnmsub.s f5, f10, f7, f30, rdn # perform operation
fnmsub.s f5, f10, f7, f30, rmm # perform operation
fnmsub.s f5, f10, f7, f30, rne # perform operation
fnmsub.s f5, f10, f7, f30, rtz # perform operation
fnmsub.s f5, f10, f7, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f5, f10, f7, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f5, f10, f7, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f5, f10, f7, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f5, f10, f7, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f5, f10, f7, f30 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x80000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f21, 0(x2) # load 0x00000001 from memory into f21
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f19, 0(x2) # load 0x80000001 from memory into f19
la x2, scratch
li x3, 0xf5a573a5 # load x3 with value 0xf5a573a5
sw x3, 0(x2) # store 0xf5a573a5 in memory
flw f20, 0(x2) # load 0xf5a573a5 from memory into f20
fnmsub.s f15, f21, f19, f20, dyn # perform operation
fnmsub.s f15, f21, f19, f20, rdn # perform operation
fnmsub.s f15, f21, f19, f20, rmm # perform operation
fnmsub.s f15, f21, f19, f20, rne # perform operation
fnmsub.s f15, f21, f19, f20, rtz # perform operation
fnmsub.s f15, f21, f19, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f15, f21, f19, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f15, f21, f19, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f15, f21, f19, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f15, f21, f19, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f15, f21, f19, f20 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x7f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f30, 0(x2) # load 0x00000001 from memory into f30
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f3, 0(x2) # load 0x7f800000 from memory into f3
la x2, scratch
li x3, 0x686b6d08 # load x3 with value 0x686b6d08
sw x3, 0(x2) # store 0x686b6d08 in memory
flw f19, 0(x2) # load 0x686b6d08 from memory into f19
fnmsub.s f16, f30, f3, f19, dyn # perform operation
fnmsub.s f16, f30, f3, f19, rdn # perform operation
fnmsub.s f16, f30, f3, f19, rmm # perform operation
fnmsub.s f16, f30, f3, f19, rne # perform operation
fnmsub.s f16, f30, f3, f19, rtz # perform operation
fnmsub.s f16, f30, f3, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f16, f30, f3, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f16, f30, f3, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f16, f30, f3, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f16, f30, f3, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f16, f30, f3, f19 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0xff800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f13, 0(x2) # load 0x00000001 from memory into f13
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f11, 0(x2) # load 0xff800000 from memory into f11
la x2, scratch
li x3, 0x51793466 # load x3 with value 0x51793466
sw x3, 0(x2) # store 0x51793466 in memory
flw f22, 0(x2) # load 0x51793466 from memory into f22
fnmsub.s f16, f13, f11, f22, dyn # perform operation
fnmsub.s f16, f13, f11, f22, rdn # perform operation
fnmsub.s f16, f13, f11, f22, rmm # perform operation
fnmsub.s f16, f13, f11, f22, rne # perform operation
fnmsub.s f16, f13, f11, f22, rtz # perform operation
fnmsub.s f16, f13, f11, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f16, f13, f11, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f16, f13, f11, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f16, f13, f11, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f16, f13, f11, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f16, f13, f11, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x7fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f6, 0(x2) # load 0x00000001 from memory into f6
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f17, 0(x2) # load 0x7fc00000 from memory into f17
la x2, scratch
li x3, 0x5e22ea07 # load x3 with value 0x5e22ea07
sw x3, 0(x2) # store 0x5e22ea07 in memory
flw f28, 0(x2) # load 0x5e22ea07 from memory into f28
fnmsub.s f7, f6, f17, f28, dyn # perform operation
fnmsub.s f7, f6, f17, f28, rdn # perform operation
fnmsub.s f7, f6, f17, f28, rmm # perform operation
fnmsub.s f7, f6, f17, f28, rne # perform operation
fnmsub.s f7, f6, f17, f28, rtz # perform operation
fnmsub.s f7, f6, f17, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f7, f6, f17, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f7, f6, f17, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f7, f6, f17, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f7, f6, f17, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f7, f6, f17, f28 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x7fffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f14, 0(x2) # load 0x00000001 from memory into f14
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f1, 0(x2) # load 0x7fffffff from memory into f1
la x2, scratch
li x3, 0x4eebf216 # load x3 with value 0x4eebf216
sw x3, 0(x2) # store 0x4eebf216 in memory
flw f27, 0(x2) # load 0x4eebf216 from memory into f27
fnmsub.s f7, f14, f1, f27, dyn # perform operation
fnmsub.s f7, f14, f1, f27, rdn # perform operation
fnmsub.s f7, f14, f1, f27, rmm # perform operation
fnmsub.s f7, f14, f1, f27, rne # perform operation
fnmsub.s f7, f14, f1, f27, rtz # perform operation
fnmsub.s f7, f14, f1, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f7, f14, f1, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f7, f14, f1, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f7, f14, f1, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f7, f14, f1, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f7, f14, f1, f27 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0xffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f8, 0(x2) # load 0x00000001 from memory into f8
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f11, 0(x2) # load 0xffffffff from memory into f11
la x2, scratch
li x3, 0x76f383f9 # load x3 with value 0x76f383f9
sw x3, 0(x2) # store 0x76f383f9 in memory
flw f28, 0(x2) # load 0x76f383f9 from memory into f28
fnmsub.s f7, f8, f11, f28, dyn # perform operation
fnmsub.s f7, f8, f11, f28, rdn # perform operation
fnmsub.s f7, f8, f11, f28, rmm # perform operation
fnmsub.s f7, f8, f11, f28, rne # perform operation
fnmsub.s f7, f8, f11, f28, rtz # perform operation
fnmsub.s f7, f8, f11, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f7, f8, f11, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f7, f8, f11, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f7, f8, f11, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f7, f8, f11, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f7, f8, f11, f28 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x7f800001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f16, 0(x2) # load 0x00000001 from memory into f16
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f29, 0(x2) # load 0x7f800001 from memory into f29
la x2, scratch
li x3, 0x5f0302a0 # load x3 with value 0x5f0302a0
sw x3, 0(x2) # store 0x5f0302a0 in memory
flw f18, 0(x2) # load 0x5f0302a0 from memory into f18
fnmsub.s f2, f16, f29, f18, dyn # perform operation
fnmsub.s f2, f16, f29, f18, rdn # perform operation
fnmsub.s f2, f16, f29, f18, rmm # perform operation
fnmsub.s f2, f16, f29, f18, rne # perform operation
fnmsub.s f2, f16, f29, f18, rtz # perform operation
fnmsub.s f2, f16, f29, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f2, f16, f29, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f2, f16, f29, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f2, f16, f29, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f2, f16, f29, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f2, f16, f29, f18 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x7fbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f17, 0(x2) # load 0x00000001 from memory into f17
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f31, 0(x2) # load 0x7fbfffff from memory into f31
la x2, scratch
li x3, 0x005ff34e # load x3 with value 0x005ff34e
sw x3, 0(x2) # store 0x005ff34e in memory
flw f19, 0(x2) # load 0x005ff34e from memory into f19
fnmsub.s f11, f17, f31, f19, dyn # perform operation
fnmsub.s f11, f17, f31, f19, rdn # perform operation
fnmsub.s f11, f17, f31, f19, rmm # perform operation
fnmsub.s f11, f17, f31, f19, rne # perform operation
fnmsub.s f11, f17, f31, f19, rtz # perform operation
fnmsub.s f11, f17, f31, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f11, f17, f31, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f11, f17, f31, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f11, f17, f31, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f11, f17, f31, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f11, f17, f31, f19 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0xffbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f6, 0(x2) # load 0x00000001 from memory into f6
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f27, 0(x2) # load 0xffbfffff from memory into f27
la x2, scratch
li x3, 0x275770f8 # load x3 with value 0x275770f8
sw x3, 0(x2) # store 0x275770f8 in memory
flw f3, 0(x2) # load 0x275770f8 from memory into f3
fnmsub.s f9, f6, f27, f3, dyn # perform operation
fnmsub.s f9, f6, f27, f3, rdn # perform operation
fnmsub.s f9, f6, f27, f3, rmm # perform operation
fnmsub.s f9, f6, f27, f3, rne # perform operation
fnmsub.s f9, f6, f27, f3, rtz # perform operation
fnmsub.s f9, f6, f27, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f9, f6, f27, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f9, f6, f27, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f9, f6, f27, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f9, f6, f27, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f9, f6, f27, f3 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x7ef8654f)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f28, 0(x2) # load 0x00000001 from memory into f28
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f5, 0(x2) # load 0x7ef8654f from memory into f5
la x2, scratch
li x3, 0xcf73ef4f # load x3 with value 0xcf73ef4f
sw x3, 0(x2) # store 0xcf73ef4f in memory
flw f29, 0(x2) # load 0xcf73ef4f from memory into f29
fnmsub.s f30, f28, f5, f29, dyn # perform operation
fnmsub.s f30, f28, f5, f29, rdn # perform operation
fnmsub.s f30, f28, f5, f29, rmm # perform operation
fnmsub.s f30, f28, f5, f29, rne # perform operation
fnmsub.s f30, f28, f5, f29, rtz # perform operation
fnmsub.s f30, f28, f5, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f30, f28, f5, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f30, f28, f5, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f30, f28, f5, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f30, f28, f5, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f30, f28, f5, f29 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x813d9ab0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f21, 0(x2) # load 0x00000001 from memory into f21
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f3, 0(x2) # load 0x813d9ab0 from memory into f3
la x2, scratch
li x3, 0x04372db1 # load x3 with value 0x04372db1
sw x3, 0(x2) # store 0x04372db1 in memory
flw f16, 0(x2) # load 0x04372db1 from memory into f16
fnmsub.s f12, f21, f3, f16, dyn # perform operation
fnmsub.s f12, f21, f3, f16, rdn # perform operation
fnmsub.s f12, f21, f3, f16, rmm # perform operation
fnmsub.s f12, f21, f3, f16, rne # perform operation
fnmsub.s f12, f21, f3, f16, rtz # perform operation
fnmsub.s f12, f21, f3, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f12, f21, f3, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f12, f21, f3, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f12, f21, f3, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f12, f21, f3, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f12, f21, f3, f16 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0x0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f10, 0(x2) # load 0x80000001 from memory into f10
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f27, 0(x2) # load 0x00000000 from memory into f27
la x2, scratch
li x3, 0xef9a5e56 # load x3 with value 0xef9a5e56
sw x3, 0(x2) # store 0xef9a5e56 in memory
flw f25, 0(x2) # load 0xef9a5e56 from memory into f25
fnmsub.s f31, f10, f27, f25, dyn # perform operation
fnmsub.s f31, f10, f27, f25, rdn # perform operation
fnmsub.s f31, f10, f27, f25, rmm # perform operation
fnmsub.s f31, f10, f27, f25, rne # perform operation
fnmsub.s f31, f10, f27, f25, rtz # perform operation
fnmsub.s f31, f10, f27, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f31, f10, f27, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f31, f10, f27, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f31, f10, f27, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f31, f10, f27, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f31, f10, f27, f25 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0x80000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f6, 0(x2) # load 0x80000001 from memory into f6
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f25, 0(x2) # load 0x80000000 from memory into f25
la x2, scratch
li x3, 0x867f2a7c # load x3 with value 0x867f2a7c
sw x3, 0(x2) # store 0x867f2a7c in memory
flw f29, 0(x2) # load 0x867f2a7c from memory into f29
fnmsub.s f1, f6, f25, f29, dyn # perform operation
fnmsub.s f1, f6, f25, f29, rdn # perform operation
fnmsub.s f1, f6, f25, f29, rmm # perform operation
fnmsub.s f1, f6, f25, f29, rne # perform operation
fnmsub.s f1, f6, f25, f29, rtz # perform operation
fnmsub.s f1, f6, f25, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f1, f6, f25, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f1, f6, f25, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f1, f6, f25, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f1, f6, f25, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f1, f6, f25, f29 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0x3f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f7, 0(x2) # load 0x80000001 from memory into f7
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f2, 0(x2) # load 0x3f800000 from memory into f2
la x2, scratch
li x3, 0x1bcd9e92 # load x3 with value 0x1bcd9e92
sw x3, 0(x2) # store 0x1bcd9e92 in memory
flw f25, 0(x2) # load 0x1bcd9e92 from memory into f25
fnmsub.s f29, f7, f2, f25, dyn # perform operation
fnmsub.s f29, f7, f2, f25, rdn # perform operation
fnmsub.s f29, f7, f2, f25, rmm # perform operation
fnmsub.s f29, f7, f2, f25, rne # perform operation
fnmsub.s f29, f7, f2, f25, rtz # perform operation
fnmsub.s f29, f7, f2, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f29, f7, f2, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f29, f7, f2, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f29, f7, f2, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f29, f7, f2, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f29, f7, f2, f25 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0xbf800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f30, 0(x2) # load 0x80000001 from memory into f30
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f25, 0(x2) # load 0xbf800000 from memory into f25
la x2, scratch
li x3, 0x98f80d39 # load x3 with value 0x98f80d39
sw x3, 0(x2) # store 0x98f80d39 in memory
flw f5, 0(x2) # load 0x98f80d39 from memory into f5
fnmsub.s f24, f30, f25, f5, dyn # perform operation
fnmsub.s f24, f30, f25, f5, rdn # perform operation
fnmsub.s f24, f30, f25, f5, rmm # perform operation
fnmsub.s f24, f30, f25, f5, rne # perform operation
fnmsub.s f24, f30, f25, f5, rtz # perform operation
fnmsub.s f24, f30, f25, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f24, f30, f25, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f24, f30, f25, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f24, f30, f25, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f24, f30, f25, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f24, f30, f25, f5 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0x3fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f26, 0(x2) # load 0x80000001 from memory into f26
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f27, 0(x2) # load 0x3fc00000 from memory into f27
la x2, scratch
li x3, 0x4959906d # load x3 with value 0x4959906d
sw x3, 0(x2) # store 0x4959906d in memory
flw f20, 0(x2) # load 0x4959906d from memory into f20
fnmsub.s f13, f26, f27, f20, dyn # perform operation
fnmsub.s f13, f26, f27, f20, rdn # perform operation
fnmsub.s f13, f26, f27, f20, rmm # perform operation
fnmsub.s f13, f26, f27, f20, rne # perform operation
fnmsub.s f13, f26, f27, f20, rtz # perform operation
fnmsub.s f13, f26, f27, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f13, f26, f27, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f13, f26, f27, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f13, f26, f27, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f13, f26, f27, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f13, f26, f27, f20 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0xbfc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f6, 0(x2) # load 0x80000001 from memory into f6
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f28, 0(x2) # load 0xbfc00000 from memory into f28
la x2, scratch
li x3, 0x7a49672a # load x3 with value 0x7a49672a
sw x3, 0(x2) # store 0x7a49672a in memory
flw f22, 0(x2) # load 0x7a49672a from memory into f22
fnmsub.s f14, f6, f28, f22, dyn # perform operation
fnmsub.s f14, f6, f28, f22, rdn # perform operation
fnmsub.s f14, f6, f28, f22, rmm # perform operation
fnmsub.s f14, f6, f28, f22, rne # perform operation
fnmsub.s f14, f6, f28, f22, rtz # perform operation
fnmsub.s f14, f6, f28, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f14, f6, f28, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f14, f6, f28, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f14, f6, f28, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f14, f6, f28, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f14, f6, f28, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0x40000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f14, 0(x2) # load 0x80000001 from memory into f14
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f31, 0(x2) # load 0x40000000 from memory into f31
la x2, scratch
li x3, 0xdf20892e # load x3 with value 0xdf20892e
sw x3, 0(x2) # store 0xdf20892e in memory
flw f3, 0(x2) # load 0xdf20892e from memory into f3
fnmsub.s f20, f14, f31, f3, dyn # perform operation
fnmsub.s f20, f14, f31, f3, rdn # perform operation
fnmsub.s f20, f14, f31, f3, rmm # perform operation
fnmsub.s f20, f14, f31, f3, rne # perform operation
fnmsub.s f20, f14, f31, f3, rtz # perform operation
fnmsub.s f20, f14, f31, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f20, f14, f31, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f20, f14, f31, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f20, f14, f31, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f20, f14, f31, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f20, f14, f31, f3 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0xc0000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f20, 0(x2) # load 0x80000001 from memory into f20
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f3, 0(x2) # load 0xc0000000 from memory into f3
la x2, scratch
li x3, 0x54869d86 # load x3 with value 0x54869d86
sw x3, 0(x2) # store 0x54869d86 in memory
flw f17, 0(x2) # load 0x54869d86 from memory into f17
fnmsub.s f8, f20, f3, f17, dyn # perform operation
fnmsub.s f8, f20, f3, f17, rdn # perform operation
fnmsub.s f8, f20, f3, f17, rmm # perform operation
fnmsub.s f8, f20, f3, f17, rne # perform operation
fnmsub.s f8, f20, f3, f17, rtz # perform operation
fnmsub.s f8, f20, f3, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f8, f20, f3, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f8, f20, f3, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f8, f20, f3, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f8, f20, f3, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f8, f20, f3, f17 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0x800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f27, 0(x2) # load 0x80000001 from memory into f27
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f10, 0(x2) # load 0x00800000 from memory into f10
la x2, scratch
li x3, 0x71518526 # load x3 with value 0x71518526
sw x3, 0(x2) # store 0x71518526 in memory
flw f12, 0(x2) # load 0x71518526 from memory into f12
fnmsub.s f7, f27, f10, f12, dyn # perform operation
fnmsub.s f7, f27, f10, f12, rdn # perform operation
fnmsub.s f7, f27, f10, f12, rmm # perform operation
fnmsub.s f7, f27, f10, f12, rne # perform operation
fnmsub.s f7, f27, f10, f12, rtz # perform operation
fnmsub.s f7, f27, f10, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f7, f27, f10, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f7, f27, f10, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f7, f27, f10, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f7, f27, f10, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f7, f27, f10, f12 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0x80800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f28, 0(x2) # load 0x80000001 from memory into f28
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f14, 0(x2) # load 0x80800000 from memory into f14
la x2, scratch
li x3, 0xb5f56d14 # load x3 with value 0xb5f56d14
sw x3, 0(x2) # store 0xb5f56d14 in memory
flw f16, 0(x2) # load 0xb5f56d14 from memory into f16
fnmsub.s f27, f28, f14, f16, dyn # perform operation
fnmsub.s f27, f28, f14, f16, rdn # perform operation
fnmsub.s f27, f28, f14, f16, rmm # perform operation
fnmsub.s f27, f28, f14, f16, rne # perform operation
fnmsub.s f27, f28, f14, f16, rtz # perform operation
fnmsub.s f27, f28, f14, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f27, f28, f14, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f27, f28, f14, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f27, f28, f14, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f27, f28, f14, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f27, f28, f14, f16 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0x7f7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f20, 0(x2) # load 0x80000001 from memory into f20
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f18, 0(x2) # load 0x7f7fffff from memory into f18
la x2, scratch
li x3, 0x65d0a048 # load x3 with value 0x65d0a048
sw x3, 0(x2) # store 0x65d0a048 in memory
flw f25, 0(x2) # load 0x65d0a048 from memory into f25
fnmsub.s f9, f20, f18, f25, dyn # perform operation
fnmsub.s f9, f20, f18, f25, rdn # perform operation
fnmsub.s f9, f20, f18, f25, rmm # perform operation
fnmsub.s f9, f20, f18, f25, rne # perform operation
fnmsub.s f9, f20, f18, f25, rtz # perform operation
fnmsub.s f9, f20, f18, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f9, f20, f18, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f9, f20, f18, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f9, f20, f18, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f9, f20, f18, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f9, f20, f18, f25 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0xff7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f14, 0(x2) # load 0x80000001 from memory into f14
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f15, 0(x2) # load 0xff7fffff from memory into f15
la x2, scratch
li x3, 0x8c648cc0 # load x3 with value 0x8c648cc0
sw x3, 0(x2) # store 0x8c648cc0 in memory
flw f19, 0(x2) # load 0x8c648cc0 from memory into f19
fnmsub.s f3, f14, f15, f19, dyn # perform operation
fnmsub.s f3, f14, f15, f19, rdn # perform operation
fnmsub.s f3, f14, f15, f19, rmm # perform operation
fnmsub.s f3, f14, f15, f19, rne # perform operation
fnmsub.s f3, f14, f15, f19, rtz # perform operation
fnmsub.s f3, f14, f15, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f3, f14, f15, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f3, f14, f15, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f3, f14, f15, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f3, f14, f15, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f3, f14, f15, f19 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0x7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f6, 0(x2) # load 0x80000001 from memory into f6
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f14, 0(x2) # load 0x007fffff from memory into f14
la x2, scratch
li x3, 0x5fa4b2ca # load x3 with value 0x5fa4b2ca
sw x3, 0(x2) # store 0x5fa4b2ca in memory
flw f16, 0(x2) # load 0x5fa4b2ca from memory into f16
fnmsub.s f11, f6, f14, f16, dyn # perform operation
fnmsub.s f11, f6, f14, f16, rdn # perform operation
fnmsub.s f11, f6, f14, f16, rmm # perform operation
fnmsub.s f11, f6, f14, f16, rne # perform operation
fnmsub.s f11, f6, f14, f16, rtz # perform operation
fnmsub.s f11, f6, f14, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f11, f6, f14, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f11, f6, f14, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f11, f6, f14, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f11, f6, f14, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f11, f6, f14, f16 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0x807fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f11, 0(x2) # load 0x80000001 from memory into f11
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f29, 0(x2) # load 0x807fffff from memory into f29
la x2, scratch
li x3, 0xac35675c # load x3 with value 0xac35675c
sw x3, 0(x2) # store 0xac35675c in memory
flw f16, 0(x2) # load 0xac35675c from memory into f16
fnmsub.s f2, f11, f29, f16, dyn # perform operation
fnmsub.s f2, f11, f29, f16, rdn # perform operation
fnmsub.s f2, f11, f29, f16, rmm # perform operation
fnmsub.s f2, f11, f29, f16, rne # perform operation
fnmsub.s f2, f11, f29, f16, rtz # perform operation
fnmsub.s f2, f11, f29, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f2, f11, f29, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f2, f11, f29, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f2, f11, f29, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f2, f11, f29, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f2, f11, f29, f16 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0x400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f1, 0(x2) # load 0x80000001 from memory into f1
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f25, 0(x2) # load 0x00400000 from memory into f25
la x2, scratch
li x3, 0x3c41cbc8 # load x3 with value 0x3c41cbc8
sw x3, 0(x2) # store 0x3c41cbc8 in memory
flw f9, 0(x2) # load 0x3c41cbc8 from memory into f9
fnmsub.s f27, f1, f25, f9, dyn # perform operation
fnmsub.s f27, f1, f25, f9, rdn # perform operation
fnmsub.s f27, f1, f25, f9, rmm # perform operation
fnmsub.s f27, f1, f25, f9, rne # perform operation
fnmsub.s f27, f1, f25, f9, rtz # perform operation
fnmsub.s f27, f1, f25, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f27, f1, f25, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f27, f1, f25, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f27, f1, f25, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f27, f1, f25, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f27, f1, f25, f9 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0x80400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f30, 0(x2) # load 0x80000001 from memory into f30
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f25, 0(x2) # load 0x80400000 from memory into f25
la x2, scratch
li x3, 0x0559269a # load x3 with value 0x0559269a
sw x3, 0(x2) # store 0x0559269a in memory
flw f10, 0(x2) # load 0x0559269a from memory into f10
fnmsub.s f7, f30, f25, f10, dyn # perform operation
fnmsub.s f7, f30, f25, f10, rdn # perform operation
fnmsub.s f7, f30, f25, f10, rmm # perform operation
fnmsub.s f7, f30, f25, f10, rne # perform operation
fnmsub.s f7, f30, f25, f10, rtz # perform operation
fnmsub.s f7, f30, f25, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f7, f30, f25, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f7, f30, f25, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f7, f30, f25, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f7, f30, f25, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f7, f30, f25, f10 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0x1)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f24, 0(x2) # load 0x80000001 from memory into f24
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f7, 0(x2) # load 0x00000001 from memory into f7
la x2, scratch
li x3, 0x401f5fec # load x3 with value 0x401f5fec
sw x3, 0(x2) # store 0x401f5fec in memory
flw f13, 0(x2) # load 0x401f5fec from memory into f13
fnmsub.s f20, f24, f7, f13, dyn # perform operation
fnmsub.s f20, f24, f7, f13, rdn # perform operation
fnmsub.s f20, f24, f7, f13, rmm # perform operation
fnmsub.s f20, f24, f7, f13, rne # perform operation
fnmsub.s f20, f24, f7, f13, rtz # perform operation
fnmsub.s f20, f24, f7, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f20, f24, f7, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f20, f24, f7, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f20, f24, f7, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f20, f24, f7, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f20, f24, f7, f13 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0x80000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f7, 0(x2) # load 0x80000001 from memory into f7
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f21, 0(x2) # load 0x80000001 from memory into f21
la x2, scratch
li x3, 0x93cfc7c5 # load x3 with value 0x93cfc7c5
sw x3, 0(x2) # store 0x93cfc7c5 in memory
flw f11, 0(x2) # load 0x93cfc7c5 from memory into f11
fnmsub.s f25, f7, f21, f11, dyn # perform operation
fnmsub.s f25, f7, f21, f11, rdn # perform operation
fnmsub.s f25, f7, f21, f11, rmm # perform operation
fnmsub.s f25, f7, f21, f11, rne # perform operation
fnmsub.s f25, f7, f21, f11, rtz # perform operation
fnmsub.s f25, f7, f21, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f25, f7, f21, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f25, f7, f21, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f25, f7, f21, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f25, f7, f21, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f25, f7, f21, f11 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0x7f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f26, 0(x2) # load 0x80000001 from memory into f26
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f10, 0(x2) # load 0x7f800000 from memory into f10
la x2, scratch
li x3, 0xbe4bcdfa # load x3 with value 0xbe4bcdfa
sw x3, 0(x2) # store 0xbe4bcdfa in memory
flw f21, 0(x2) # load 0xbe4bcdfa from memory into f21
fnmsub.s f12, f26, f10, f21, dyn # perform operation
fnmsub.s f12, f26, f10, f21, rdn # perform operation
fnmsub.s f12, f26, f10, f21, rmm # perform operation
fnmsub.s f12, f26, f10, f21, rne # perform operation
fnmsub.s f12, f26, f10, f21, rtz # perform operation
fnmsub.s f12, f26, f10, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f12, f26, f10, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f12, f26, f10, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f12, f26, f10, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f12, f26, f10, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f12, f26, f10, f21 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0xff800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f7, 0(x2) # load 0x80000001 from memory into f7
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f31, 0(x2) # load 0xff800000 from memory into f31
la x2, scratch
li x3, 0x10611b30 # load x3 with value 0x10611b30
sw x3, 0(x2) # store 0x10611b30 in memory
flw f10, 0(x2) # load 0x10611b30 from memory into f10
fnmsub.s f14, f7, f31, f10, dyn # perform operation
fnmsub.s f14, f7, f31, f10, rdn # perform operation
fnmsub.s f14, f7, f31, f10, rmm # perform operation
fnmsub.s f14, f7, f31, f10, rne # perform operation
fnmsub.s f14, f7, f31, f10, rtz # perform operation
fnmsub.s f14, f7, f31, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f14, f7, f31, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f14, f7, f31, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f14, f7, f31, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f14, f7, f31, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f14, f7, f31, f10 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0x7fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f2, 0(x2) # load 0x80000001 from memory into f2
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f1, 0(x2) # load 0x7fc00000 from memory into f1
la x2, scratch
li x3, 0x7e8db9f8 # load x3 with value 0x7e8db9f8
sw x3, 0(x2) # store 0x7e8db9f8 in memory
flw f21, 0(x2) # load 0x7e8db9f8 from memory into f21
fnmsub.s f10, f2, f1, f21, dyn # perform operation
fnmsub.s f10, f2, f1, f21, rdn # perform operation
fnmsub.s f10, f2, f1, f21, rmm # perform operation
fnmsub.s f10, f2, f1, f21, rne # perform operation
fnmsub.s f10, f2, f1, f21, rtz # perform operation
fnmsub.s f10, f2, f1, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f10, f2, f1, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f10, f2, f1, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f10, f2, f1, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f10, f2, f1, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f10, f2, f1, f21 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0x7fffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f7, 0(x2) # load 0x80000001 from memory into f7
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f20, 0(x2) # load 0x7fffffff from memory into f20
la x2, scratch
li x3, 0x35235d83 # load x3 with value 0x35235d83
sw x3, 0(x2) # store 0x35235d83 in memory
flw f3, 0(x2) # load 0x35235d83 from memory into f3
fnmsub.s f22, f7, f20, f3, dyn # perform operation
fnmsub.s f22, f7, f20, f3, rdn # perform operation
fnmsub.s f22, f7, f20, f3, rmm # perform operation
fnmsub.s f22, f7, f20, f3, rne # perform operation
fnmsub.s f22, f7, f20, f3, rtz # perform operation
fnmsub.s f22, f7, f20, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f22, f7, f20, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f22, f7, f20, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f22, f7, f20, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f22, f7, f20, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f22, f7, f20, f3 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0xffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f25, 0(x2) # load 0x80000001 from memory into f25
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f16, 0(x2) # load 0xffffffff from memory into f16
la x2, scratch
li x3, 0x41e76bc4 # load x3 with value 0x41e76bc4
sw x3, 0(x2) # store 0x41e76bc4 in memory
flw f6, 0(x2) # load 0x41e76bc4 from memory into f6
fnmsub.s f2, f25, f16, f6, dyn # perform operation
fnmsub.s f2, f25, f16, f6, rdn # perform operation
fnmsub.s f2, f25, f16, f6, rmm # perform operation
fnmsub.s f2, f25, f16, f6, rne # perform operation
fnmsub.s f2, f25, f16, f6, rtz # perform operation
fnmsub.s f2, f25, f16, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f2, f25, f16, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f2, f25, f16, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f2, f25, f16, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f2, f25, f16, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f2, f25, f16, f6 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0x7f800001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f28, 0(x2) # load 0x80000001 from memory into f28
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f5, 0(x2) # load 0x7f800001 from memory into f5
la x2, scratch
li x3, 0x8d842120 # load x3 with value 0x8d842120
sw x3, 0(x2) # store 0x8d842120 in memory
flw f15, 0(x2) # load 0x8d842120 from memory into f15
fnmsub.s f12, f28, f5, f15, dyn # perform operation
fnmsub.s f12, f28, f5, f15, rdn # perform operation
fnmsub.s f12, f28, f5, f15, rmm # perform operation
fnmsub.s f12, f28, f5, f15, rne # perform operation
fnmsub.s f12, f28, f5, f15, rtz # perform operation
fnmsub.s f12, f28, f5, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f12, f28, f5, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f12, f28, f5, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f12, f28, f5, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f12, f28, f5, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f12, f28, f5, f15 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0x7fbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f20, 0(x2) # load 0x80000001 from memory into f20
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f23, 0(x2) # load 0x7fbfffff from memory into f23
la x2, scratch
li x3, 0x506746c0 # load x3 with value 0x506746c0
sw x3, 0(x2) # store 0x506746c0 in memory
flw f13, 0(x2) # load 0x506746c0 from memory into f13
fnmsub.s f14, f20, f23, f13, dyn # perform operation
fnmsub.s f14, f20, f23, f13, rdn # perform operation
fnmsub.s f14, f20, f23, f13, rmm # perform operation
fnmsub.s f14, f20, f23, f13, rne # perform operation
fnmsub.s f14, f20, f23, f13, rtz # perform operation
fnmsub.s f14, f20, f23, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f14, f20, f23, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f14, f20, f23, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f14, f20, f23, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f14, f20, f23, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f14, f20, f23, f13 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0xffbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f17, 0(x2) # load 0x80000001 from memory into f17
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f23, 0(x2) # load 0xffbfffff from memory into f23
la x2, scratch
li x3, 0xac0f9909 # load x3 with value 0xac0f9909
sw x3, 0(x2) # store 0xac0f9909 in memory
flw f9, 0(x2) # load 0xac0f9909 from memory into f9
fnmsub.s f8, f17, f23, f9, dyn # perform operation
fnmsub.s f8, f17, f23, f9, rdn # perform operation
fnmsub.s f8, f17, f23, f9, rmm # perform operation
fnmsub.s f8, f17, f23, f9, rne # perform operation
fnmsub.s f8, f17, f23, f9, rtz # perform operation
fnmsub.s f8, f17, f23, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f8, f17, f23, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f8, f17, f23, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f8, f17, f23, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f8, f17, f23, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f8, f17, f23, f9 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0x7ef8654f)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f16, 0(x2) # load 0x80000001 from memory into f16
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f26, 0(x2) # load 0x7ef8654f from memory into f26
la x2, scratch
li x3, 0xc650aecf # load x3 with value 0xc650aecf
sw x3, 0(x2) # store 0xc650aecf in memory
flw f31, 0(x2) # load 0xc650aecf from memory into f31
fnmsub.s f30, f16, f26, f31, dyn # perform operation
fnmsub.s f30, f16, f26, f31, rdn # perform operation
fnmsub.s f30, f16, f26, f31, rmm # perform operation
fnmsub.s f30, f16, f26, f31, rne # perform operation
fnmsub.s f30, f16, f26, f31, rtz # perform operation
fnmsub.s f30, f16, f26, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f30, f16, f26, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f30, f16, f26, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f30, f16, f26, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f30, f16, f26, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f30, f16, f26, f31 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0x813d9ab0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f12, 0(x2) # load 0x80000001 from memory into f12
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f5, 0(x2) # load 0x813d9ab0 from memory into f5
la x2, scratch
li x3, 0xf784c2d6 # load x3 with value 0xf784c2d6
sw x3, 0(x2) # store 0xf784c2d6 in memory
flw f6, 0(x2) # load 0xf784c2d6 from memory into f6
fnmsub.s f1, f12, f5, f6, dyn # perform operation
fnmsub.s f1, f12, f5, f6, rdn # perform operation
fnmsub.s f1, f12, f5, f6, rmm # perform operation
fnmsub.s f1, f12, f5, f6, rne # perform operation
fnmsub.s f1, f12, f5, f6, rtz # perform operation
fnmsub.s f1, f12, f5, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f1, f12, f5, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f1, f12, f5, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f1, f12, f5, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f1, f12, f5, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f1, f12, f5, f6 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0x0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f12, 0(x2) # load 0x7f800000 from memory into f12
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f5, 0(x2) # load 0x00000000 from memory into f5
la x2, scratch
li x3, 0x153e5032 # load x3 with value 0x153e5032
sw x3, 0(x2) # store 0x153e5032 in memory
flw f19, 0(x2) # load 0x153e5032 from memory into f19
fnmsub.s f20, f12, f5, f19, dyn # perform operation
fnmsub.s f20, f12, f5, f19, rdn # perform operation
fnmsub.s f20, f12, f5, f19, rmm # perform operation
fnmsub.s f20, f12, f5, f19, rne # perform operation
fnmsub.s f20, f12, f5, f19, rtz # perform operation
fnmsub.s f20, f12, f5, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f20, f12, f5, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f20, f12, f5, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f20, f12, f5, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f20, f12, f5, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f20, f12, f5, f19 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0x80000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f7, 0(x2) # load 0x7f800000 from memory into f7
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f15, 0(x2) # load 0x80000000 from memory into f15
la x2, scratch
li x3, 0x248f9d30 # load x3 with value 0x248f9d30
sw x3, 0(x2) # store 0x248f9d30 in memory
flw f16, 0(x2) # load 0x248f9d30 from memory into f16
fnmsub.s f13, f7, f15, f16, dyn # perform operation
fnmsub.s f13, f7, f15, f16, rdn # perform operation
fnmsub.s f13, f7, f15, f16, rmm # perform operation
fnmsub.s f13, f7, f15, f16, rne # perform operation
fnmsub.s f13, f7, f15, f16, rtz # perform operation
fnmsub.s f13, f7, f15, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f13, f7, f15, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f13, f7, f15, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f13, f7, f15, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f13, f7, f15, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f13, f7, f15, f16 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0x3f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f24, 0(x2) # load 0x7f800000 from memory into f24
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f11, 0(x2) # load 0x3f800000 from memory into f11
la x2, scratch
li x3, 0x32873a88 # load x3 with value 0x32873a88
sw x3, 0(x2) # store 0x32873a88 in memory
flw f8, 0(x2) # load 0x32873a88 from memory into f8
fnmsub.s f29, f24, f11, f8, dyn # perform operation
fnmsub.s f29, f24, f11, f8, rdn # perform operation
fnmsub.s f29, f24, f11, f8, rmm # perform operation
fnmsub.s f29, f24, f11, f8, rne # perform operation
fnmsub.s f29, f24, f11, f8, rtz # perform operation
fnmsub.s f29, f24, f11, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f29, f24, f11, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f29, f24, f11, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f29, f24, f11, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f29, f24, f11, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f29, f24, f11, f8 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0xbf800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f8, 0(x2) # load 0x7f800000 from memory into f8
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f24, 0(x2) # load 0xbf800000 from memory into f24
la x2, scratch
li x3, 0xcb78f598 # load x3 with value 0xcb78f598
sw x3, 0(x2) # store 0xcb78f598 in memory
flw f7, 0(x2) # load 0xcb78f598 from memory into f7
fnmsub.s f12, f8, f24, f7, dyn # perform operation
fnmsub.s f12, f8, f24, f7, rdn # perform operation
fnmsub.s f12, f8, f24, f7, rmm # perform operation
fnmsub.s f12, f8, f24, f7, rne # perform operation
fnmsub.s f12, f8, f24, f7, rtz # perform operation
fnmsub.s f12, f8, f24, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f12, f8, f24, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f12, f8, f24, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f12, f8, f24, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f12, f8, f24, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f12, f8, f24, f7 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0x3fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f14, 0(x2) # load 0x7f800000 from memory into f14
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f23, 0(x2) # load 0x3fc00000 from memory into f23
la x2, scratch
li x3, 0xc5f4e6e3 # load x3 with value 0xc5f4e6e3
sw x3, 0(x2) # store 0xc5f4e6e3 in memory
flw f15, 0(x2) # load 0xc5f4e6e3 from memory into f15
fnmsub.s f26, f14, f23, f15, dyn # perform operation
fnmsub.s f26, f14, f23, f15, rdn # perform operation
fnmsub.s f26, f14, f23, f15, rmm # perform operation
fnmsub.s f26, f14, f23, f15, rne # perform operation
fnmsub.s f26, f14, f23, f15, rtz # perform operation
fnmsub.s f26, f14, f23, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f26, f14, f23, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f26, f14, f23, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f26, f14, f23, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f26, f14, f23, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f26, f14, f23, f15 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0xbfc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f6, 0(x2) # load 0x7f800000 from memory into f6
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f16, 0(x2) # load 0xbfc00000 from memory into f16
la x2, scratch
li x3, 0x76ca0a29 # load x3 with value 0x76ca0a29
sw x3, 0(x2) # store 0x76ca0a29 in memory
flw f15, 0(x2) # load 0x76ca0a29 from memory into f15
fnmsub.s f19, f6, f16, f15, dyn # perform operation
fnmsub.s f19, f6, f16, f15, rdn # perform operation
fnmsub.s f19, f6, f16, f15, rmm # perform operation
fnmsub.s f19, f6, f16, f15, rne # perform operation
fnmsub.s f19, f6, f16, f15, rtz # perform operation
fnmsub.s f19, f6, f16, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f19, f6, f16, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f19, f6, f16, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f19, f6, f16, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f19, f6, f16, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f19, f6, f16, f15 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0x40000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f15, 0(x2) # load 0x7f800000 from memory into f15
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f27, 0(x2) # load 0x40000000 from memory into f27
la x2, scratch
li x3, 0x871eee5a # load x3 with value 0x871eee5a
sw x3, 0(x2) # store 0x871eee5a in memory
flw f13, 0(x2) # load 0x871eee5a from memory into f13
fnmsub.s f21, f15, f27, f13, dyn # perform operation
fnmsub.s f21, f15, f27, f13, rdn # perform operation
fnmsub.s f21, f15, f27, f13, rmm # perform operation
fnmsub.s f21, f15, f27, f13, rne # perform operation
fnmsub.s f21, f15, f27, f13, rtz # perform operation
fnmsub.s f21, f15, f27, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f21, f15, f27, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f21, f15, f27, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f21, f15, f27, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f21, f15, f27, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f21, f15, f27, f13 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0xc0000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f26, 0(x2) # load 0x7f800000 from memory into f26
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f7, 0(x2) # load 0xc0000000 from memory into f7
la x2, scratch
li x3, 0x2dc583dc # load x3 with value 0x2dc583dc
sw x3, 0(x2) # store 0x2dc583dc in memory
flw f15, 0(x2) # load 0x2dc583dc from memory into f15
fnmsub.s f16, f26, f7, f15, dyn # perform operation
fnmsub.s f16, f26, f7, f15, rdn # perform operation
fnmsub.s f16, f26, f7, f15, rmm # perform operation
fnmsub.s f16, f26, f7, f15, rne # perform operation
fnmsub.s f16, f26, f7, f15, rtz # perform operation
fnmsub.s f16, f26, f7, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f16, f26, f7, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f16, f26, f7, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f16, f26, f7, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f16, f26, f7, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f16, f26, f7, f15 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0x800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f11, 0(x2) # load 0x7f800000 from memory into f11
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f15, 0(x2) # load 0x00800000 from memory into f15
la x2, scratch
li x3, 0x114f4239 # load x3 with value 0x114f4239
sw x3, 0(x2) # store 0x114f4239 in memory
flw f10, 0(x2) # load 0x114f4239 from memory into f10
fnmsub.s f8, f11, f15, f10, dyn # perform operation
fnmsub.s f8, f11, f15, f10, rdn # perform operation
fnmsub.s f8, f11, f15, f10, rmm # perform operation
fnmsub.s f8, f11, f15, f10, rne # perform operation
fnmsub.s f8, f11, f15, f10, rtz # perform operation
fnmsub.s f8, f11, f15, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f8, f11, f15, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f8, f11, f15, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f8, f11, f15, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f8, f11, f15, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f8, f11, f15, f10 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0x80800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f17, 0(x2) # load 0x7f800000 from memory into f17
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f24, 0(x2) # load 0x80800000 from memory into f24
la x2, scratch
li x3, 0x60ef2a4e # load x3 with value 0x60ef2a4e
sw x3, 0(x2) # store 0x60ef2a4e in memory
flw f14, 0(x2) # load 0x60ef2a4e from memory into f14
fnmsub.s f29, f17, f24, f14, dyn # perform operation
fnmsub.s f29, f17, f24, f14, rdn # perform operation
fnmsub.s f29, f17, f24, f14, rmm # perform operation
fnmsub.s f29, f17, f24, f14, rne # perform operation
fnmsub.s f29, f17, f24, f14, rtz # perform operation
fnmsub.s f29, f17, f24, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f29, f17, f24, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f29, f17, f24, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f29, f17, f24, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f29, f17, f24, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f29, f17, f24, f14 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0x7f7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f9, 0(x2) # load 0x7f800000 from memory into f9
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f18, 0(x2) # load 0x7f7fffff from memory into f18
la x2, scratch
li x3, 0x5caef6fc # load x3 with value 0x5caef6fc
sw x3, 0(x2) # store 0x5caef6fc in memory
flw f11, 0(x2) # load 0x5caef6fc from memory into f11
fnmsub.s f19, f9, f18, f11, dyn # perform operation
fnmsub.s f19, f9, f18, f11, rdn # perform operation
fnmsub.s f19, f9, f18, f11, rmm # perform operation
fnmsub.s f19, f9, f18, f11, rne # perform operation
fnmsub.s f19, f9, f18, f11, rtz # perform operation
fnmsub.s f19, f9, f18, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f19, f9, f18, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f19, f9, f18, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f19, f9, f18, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f19, f9, f18, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f19, f9, f18, f11 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0xff7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f22, 0(x2) # load 0x7f800000 from memory into f22
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f8, 0(x2) # load 0xff7fffff from memory into f8
la x2, scratch
li x3, 0xe8c27155 # load x3 with value 0xe8c27155
sw x3, 0(x2) # store 0xe8c27155 in memory
flw f11, 0(x2) # load 0xe8c27155 from memory into f11
fnmsub.s f5, f22, f8, f11, dyn # perform operation
fnmsub.s f5, f22, f8, f11, rdn # perform operation
fnmsub.s f5, f22, f8, f11, rmm # perform operation
fnmsub.s f5, f22, f8, f11, rne # perform operation
fnmsub.s f5, f22, f8, f11, rtz # perform operation
fnmsub.s f5, f22, f8, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f5, f22, f8, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f5, f22, f8, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f5, f22, f8, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f5, f22, f8, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f5, f22, f8, f11 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0x7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f16, 0(x2) # load 0x7f800000 from memory into f16
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f10, 0(x2) # load 0x007fffff from memory into f10
la x2, scratch
li x3, 0x3e2c4227 # load x3 with value 0x3e2c4227
sw x3, 0(x2) # store 0x3e2c4227 in memory
flw f5, 0(x2) # load 0x3e2c4227 from memory into f5
fnmsub.s f21, f16, f10, f5, dyn # perform operation
fnmsub.s f21, f16, f10, f5, rdn # perform operation
fnmsub.s f21, f16, f10, f5, rmm # perform operation
fnmsub.s f21, f16, f10, f5, rne # perform operation
fnmsub.s f21, f16, f10, f5, rtz # perform operation
fnmsub.s f21, f16, f10, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f21, f16, f10, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f21, f16, f10, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f21, f16, f10, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f21, f16, f10, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f21, f16, f10, f5 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0x807fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f5, 0(x2) # load 0x7f800000 from memory into f5
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f22, 0(x2) # load 0x807fffff from memory into f22
la x2, scratch
li x3, 0xe860ed22 # load x3 with value 0xe860ed22
sw x3, 0(x2) # store 0xe860ed22 in memory
flw f2, 0(x2) # load 0xe860ed22 from memory into f2
fnmsub.s f1, f5, f22, f2, dyn # perform operation
fnmsub.s f1, f5, f22, f2, rdn # perform operation
fnmsub.s f1, f5, f22, f2, rmm # perform operation
fnmsub.s f1, f5, f22, f2, rne # perform operation
fnmsub.s f1, f5, f22, f2, rtz # perform operation
fnmsub.s f1, f5, f22, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f1, f5, f22, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f1, f5, f22, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f1, f5, f22, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f1, f5, f22, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f1, f5, f22, f2 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0x400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f29, 0(x2) # load 0x7f800000 from memory into f29
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f26, 0(x2) # load 0x00400000 from memory into f26
la x2, scratch
li x3, 0xde8c221b # load x3 with value 0xde8c221b
sw x3, 0(x2) # store 0xde8c221b in memory
flw f24, 0(x2) # load 0xde8c221b from memory into f24
fnmsub.s f20, f29, f26, f24, dyn # perform operation
fnmsub.s f20, f29, f26, f24, rdn # perform operation
fnmsub.s f20, f29, f26, f24, rmm # perform operation
fnmsub.s f20, f29, f26, f24, rne # perform operation
fnmsub.s f20, f29, f26, f24, rtz # perform operation
fnmsub.s f20, f29, f26, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f20, f29, f26, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f20, f29, f26, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f20, f29, f26, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f20, f29, f26, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f20, f29, f26, f24 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0x80400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f8, 0(x2) # load 0x7f800000 from memory into f8
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f2, 0(x2) # load 0x80400000 from memory into f2
la x2, scratch
li x3, 0x6d5588db # load x3 with value 0x6d5588db
sw x3, 0(x2) # store 0x6d5588db in memory
flw f1, 0(x2) # load 0x6d5588db from memory into f1
fnmsub.s f25, f8, f2, f1, dyn # perform operation
fnmsub.s f25, f8, f2, f1, rdn # perform operation
fnmsub.s f25, f8, f2, f1, rmm # perform operation
fnmsub.s f25, f8, f2, f1, rne # perform operation
fnmsub.s f25, f8, f2, f1, rtz # perform operation
fnmsub.s f25, f8, f2, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f25, f8, f2, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f25, f8, f2, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f25, f8, f2, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f25, f8, f2, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f25, f8, f2, f1 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0x1)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f25, 0(x2) # load 0x7f800000 from memory into f25
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f22, 0(x2) # load 0x00000001 from memory into f22
la x2, scratch
li x3, 0xb6da3ba4 # load x3 with value 0xb6da3ba4
sw x3, 0(x2) # store 0xb6da3ba4 in memory
flw f6, 0(x2) # load 0xb6da3ba4 from memory into f6
fnmsub.s f20, f25, f22, f6, dyn # perform operation
fnmsub.s f20, f25, f22, f6, rdn # perform operation
fnmsub.s f20, f25, f22, f6, rmm # perform operation
fnmsub.s f20, f25, f22, f6, rne # perform operation
fnmsub.s f20, f25, f22, f6, rtz # perform operation
fnmsub.s f20, f25, f22, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f20, f25, f22, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f20, f25, f22, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f20, f25, f22, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f20, f25, f22, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f20, f25, f22, f6 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0x80000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f29, 0(x2) # load 0x7f800000 from memory into f29
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f5, 0(x2) # load 0x80000001 from memory into f5
la x2, scratch
li x3, 0x334ce2a7 # load x3 with value 0x334ce2a7
sw x3, 0(x2) # store 0x334ce2a7 in memory
flw f22, 0(x2) # load 0x334ce2a7 from memory into f22
fnmsub.s f27, f29, f5, f22, dyn # perform operation
fnmsub.s f27, f29, f5, f22, rdn # perform operation
fnmsub.s f27, f29, f5, f22, rmm # perform operation
fnmsub.s f27, f29, f5, f22, rne # perform operation
fnmsub.s f27, f29, f5, f22, rtz # perform operation
fnmsub.s f27, f29, f5, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f27, f29, f5, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f27, f29, f5, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f27, f29, f5, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f27, f29, f5, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f27, f29, f5, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0x7f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f9, 0(x2) # load 0x7f800000 from memory into f9
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f10, 0(x2) # load 0x7f800000 from memory into f10
la x2, scratch
li x3, 0xa9182608 # load x3 with value 0xa9182608
sw x3, 0(x2) # store 0xa9182608 in memory
flw f16, 0(x2) # load 0xa9182608 from memory into f16
fnmsub.s f26, f9, f10, f16, dyn # perform operation
fnmsub.s f26, f9, f10, f16, rdn # perform operation
fnmsub.s f26, f9, f10, f16, rmm # perform operation
fnmsub.s f26, f9, f10, f16, rne # perform operation
fnmsub.s f26, f9, f10, f16, rtz # perform operation
fnmsub.s f26, f9, f10, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f26, f9, f10, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f26, f9, f10, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f26, f9, f10, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f26, f9, f10, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f26, f9, f10, f16 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0xff800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f20, 0(x2) # load 0x7f800000 from memory into f20
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f23, 0(x2) # load 0xff800000 from memory into f23
la x2, scratch
li x3, 0x98d95a1e # load x3 with value 0x98d95a1e
sw x3, 0(x2) # store 0x98d95a1e in memory
flw f8, 0(x2) # load 0x98d95a1e from memory into f8
fnmsub.s f18, f20, f23, f8, dyn # perform operation
fnmsub.s f18, f20, f23, f8, rdn # perform operation
fnmsub.s f18, f20, f23, f8, rmm # perform operation
fnmsub.s f18, f20, f23, f8, rne # perform operation
fnmsub.s f18, f20, f23, f8, rtz # perform operation
fnmsub.s f18, f20, f23, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f18, f20, f23, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f18, f20, f23, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f18, f20, f23, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f18, f20, f23, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f18, f20, f23, f8 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0x7fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f7, 0(x2) # load 0x7f800000 from memory into f7
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f21, 0(x2) # load 0x7fc00000 from memory into f21
la x2, scratch
li x3, 0xa216d7f2 # load x3 with value 0xa216d7f2
sw x3, 0(x2) # store 0xa216d7f2 in memory
flw f14, 0(x2) # load 0xa216d7f2 from memory into f14
fnmsub.s f17, f7, f21, f14, dyn # perform operation
fnmsub.s f17, f7, f21, f14, rdn # perform operation
fnmsub.s f17, f7, f21, f14, rmm # perform operation
fnmsub.s f17, f7, f21, f14, rne # perform operation
fnmsub.s f17, f7, f21, f14, rtz # perform operation
fnmsub.s f17, f7, f21, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f17, f7, f21, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f17, f7, f21, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f17, f7, f21, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f17, f7, f21, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f17, f7, f21, f14 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0x7fffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f12, 0(x2) # load 0x7f800000 from memory into f12
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f6, 0(x2) # load 0x7fffffff from memory into f6
la x2, scratch
li x3, 0x125a34e2 # load x3 with value 0x125a34e2
sw x3, 0(x2) # store 0x125a34e2 in memory
flw f30, 0(x2) # load 0x125a34e2 from memory into f30
fnmsub.s f5, f12, f6, f30, dyn # perform operation
fnmsub.s f5, f12, f6, f30, rdn # perform operation
fnmsub.s f5, f12, f6, f30, rmm # perform operation
fnmsub.s f5, f12, f6, f30, rne # perform operation
fnmsub.s f5, f12, f6, f30, rtz # perform operation
fnmsub.s f5, f12, f6, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f5, f12, f6, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f5, f12, f6, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f5, f12, f6, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f5, f12, f6, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f5, f12, f6, f30 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0xffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f11, 0(x2) # load 0x7f800000 from memory into f11
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f29, 0(x2) # load 0xffffffff from memory into f29
la x2, scratch
li x3, 0xc43c258f # load x3 with value 0xc43c258f
sw x3, 0(x2) # store 0xc43c258f in memory
flw f22, 0(x2) # load 0xc43c258f from memory into f22
fnmsub.s f18, f11, f29, f22, dyn # perform operation
fnmsub.s f18, f11, f29, f22, rdn # perform operation
fnmsub.s f18, f11, f29, f22, rmm # perform operation
fnmsub.s f18, f11, f29, f22, rne # perform operation
fnmsub.s f18, f11, f29, f22, rtz # perform operation
fnmsub.s f18, f11, f29, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f18, f11, f29, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f18, f11, f29, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f18, f11, f29, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f18, f11, f29, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f18, f11, f29, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0x7f800001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f23, 0(x2) # load 0x7f800000 from memory into f23
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f15, 0(x2) # load 0x7f800001 from memory into f15
la x2, scratch
li x3, 0xd8bd53ea # load x3 with value 0xd8bd53ea
sw x3, 0(x2) # store 0xd8bd53ea in memory
flw f20, 0(x2) # load 0xd8bd53ea from memory into f20
fnmsub.s f13, f23, f15, f20, dyn # perform operation
fnmsub.s f13, f23, f15, f20, rdn # perform operation
fnmsub.s f13, f23, f15, f20, rmm # perform operation
fnmsub.s f13, f23, f15, f20, rne # perform operation
fnmsub.s f13, f23, f15, f20, rtz # perform operation
fnmsub.s f13, f23, f15, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f13, f23, f15, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f13, f23, f15, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f13, f23, f15, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f13, f23, f15, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f13, f23, f15, f20 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0x7fbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f18, 0(x2) # load 0x7f800000 from memory into f18
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f23, 0(x2) # load 0x7fbfffff from memory into f23
la x2, scratch
li x3, 0x3d040486 # load x3 with value 0x3d040486
sw x3, 0(x2) # store 0x3d040486 in memory
flw f3, 0(x2) # load 0x3d040486 from memory into f3
fnmsub.s f21, f18, f23, f3, dyn # perform operation
fnmsub.s f21, f18, f23, f3, rdn # perform operation
fnmsub.s f21, f18, f23, f3, rmm # perform operation
fnmsub.s f21, f18, f23, f3, rne # perform operation
fnmsub.s f21, f18, f23, f3, rtz # perform operation
fnmsub.s f21, f18, f23, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f21, f18, f23, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f21, f18, f23, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f21, f18, f23, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f21, f18, f23, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f21, f18, f23, f3 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0xffbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f2, 0(x2) # load 0x7f800000 from memory into f2
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f15, 0(x2) # load 0xffbfffff from memory into f15
la x2, scratch
li x3, 0x18608da6 # load x3 with value 0x18608da6
sw x3, 0(x2) # store 0x18608da6 in memory
flw f6, 0(x2) # load 0x18608da6 from memory into f6
fnmsub.s f24, f2, f15, f6, dyn # perform operation
fnmsub.s f24, f2, f15, f6, rdn # perform operation
fnmsub.s f24, f2, f15, f6, rmm # perform operation
fnmsub.s f24, f2, f15, f6, rne # perform operation
fnmsub.s f24, f2, f15, f6, rtz # perform operation
fnmsub.s f24, f2, f15, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f24, f2, f15, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f24, f2, f15, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f24, f2, f15, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f24, f2, f15, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f24, f2, f15, f6 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0x7ef8654f)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f12, 0(x2) # load 0x7f800000 from memory into f12
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f18, 0(x2) # load 0x7ef8654f from memory into f18
la x2, scratch
li x3, 0xea76fa95 # load x3 with value 0xea76fa95
sw x3, 0(x2) # store 0xea76fa95 in memory
flw f23, 0(x2) # load 0xea76fa95 from memory into f23
fnmsub.s f3, f12, f18, f23, dyn # perform operation
fnmsub.s f3, f12, f18, f23, rdn # perform operation
fnmsub.s f3, f12, f18, f23, rmm # perform operation
fnmsub.s f3, f12, f18, f23, rne # perform operation
fnmsub.s f3, f12, f18, f23, rtz # perform operation
fnmsub.s f3, f12, f18, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f3, f12, f18, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f3, f12, f18, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f3, f12, f18, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f3, f12, f18, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f3, f12, f18, f23 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0x813d9ab0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f7, 0(x2) # load 0x7f800000 from memory into f7
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f30, 0(x2) # load 0x813d9ab0 from memory into f30
la x2, scratch
li x3, 0x9400509a # load x3 with value 0x9400509a
sw x3, 0(x2) # store 0x9400509a in memory
flw f3, 0(x2) # load 0x9400509a from memory into f3
fnmsub.s f23, f7, f30, f3, dyn # perform operation
fnmsub.s f23, f7, f30, f3, rdn # perform operation
fnmsub.s f23, f7, f30, f3, rmm # perform operation
fnmsub.s f23, f7, f30, f3, rne # perform operation
fnmsub.s f23, f7, f30, f3, rtz # perform operation
fnmsub.s f23, f7, f30, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f23, f7, f30, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f23, f7, f30, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f23, f7, f30, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f23, f7, f30, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f23, f7, f30, f3 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0x0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f13, 0(x2) # load 0xff800000 from memory into f13
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f2, 0(x2) # load 0x00000000 from memory into f2
la x2, scratch
li x3, 0x9b09a7a7 # load x3 with value 0x9b09a7a7
sw x3, 0(x2) # store 0x9b09a7a7 in memory
flw f25, 0(x2) # load 0x9b09a7a7 from memory into f25
fnmsub.s f21, f13, f2, f25, dyn # perform operation
fnmsub.s f21, f13, f2, f25, rdn # perform operation
fnmsub.s f21, f13, f2, f25, rmm # perform operation
fnmsub.s f21, f13, f2, f25, rne # perform operation
fnmsub.s f21, f13, f2, f25, rtz # perform operation
fnmsub.s f21, f13, f2, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f21, f13, f2, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f21, f13, f2, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f21, f13, f2, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f21, f13, f2, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f21, f13, f2, f25 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0x80000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f19, 0(x2) # load 0xff800000 from memory into f19
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f10, 0(x2) # load 0x80000000 from memory into f10
la x2, scratch
li x3, 0x8a5b1446 # load x3 with value 0x8a5b1446
sw x3, 0(x2) # store 0x8a5b1446 in memory
flw f25, 0(x2) # load 0x8a5b1446 from memory into f25
fnmsub.s f20, f19, f10, f25, dyn # perform operation
fnmsub.s f20, f19, f10, f25, rdn # perform operation
fnmsub.s f20, f19, f10, f25, rmm # perform operation
fnmsub.s f20, f19, f10, f25, rne # perform operation
fnmsub.s f20, f19, f10, f25, rtz # perform operation
fnmsub.s f20, f19, f10, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f20, f19, f10, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f20, f19, f10, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f20, f19, f10, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f20, f19, f10, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f20, f19, f10, f25 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0x3f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f16, 0(x2) # load 0xff800000 from memory into f16
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f10, 0(x2) # load 0x3f800000 from memory into f10
la x2, scratch
li x3, 0xe6c63a14 # load x3 with value 0xe6c63a14
sw x3, 0(x2) # store 0xe6c63a14 in memory
flw f21, 0(x2) # load 0xe6c63a14 from memory into f21
fnmsub.s f17, f16, f10, f21, dyn # perform operation
fnmsub.s f17, f16, f10, f21, rdn # perform operation
fnmsub.s f17, f16, f10, f21, rmm # perform operation
fnmsub.s f17, f16, f10, f21, rne # perform operation
fnmsub.s f17, f16, f10, f21, rtz # perform operation
fnmsub.s f17, f16, f10, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f17, f16, f10, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f17, f16, f10, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f17, f16, f10, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f17, f16, f10, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f17, f16, f10, f21 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0xbf800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f17, 0(x2) # load 0xff800000 from memory into f17
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f22, 0(x2) # load 0xbf800000 from memory into f22
la x2, scratch
li x3, 0x8e4fcc9e # load x3 with value 0x8e4fcc9e
sw x3, 0(x2) # store 0x8e4fcc9e in memory
flw f7, 0(x2) # load 0x8e4fcc9e from memory into f7
fnmsub.s f23, f17, f22, f7, dyn # perform operation
fnmsub.s f23, f17, f22, f7, rdn # perform operation
fnmsub.s f23, f17, f22, f7, rmm # perform operation
fnmsub.s f23, f17, f22, f7, rne # perform operation
fnmsub.s f23, f17, f22, f7, rtz # perform operation
fnmsub.s f23, f17, f22, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f23, f17, f22, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f23, f17, f22, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f23, f17, f22, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f23, f17, f22, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f23, f17, f22, f7 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0x3fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f11, 0(x2) # load 0xff800000 from memory into f11
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f10, 0(x2) # load 0x3fc00000 from memory into f10
la x2, scratch
li x3, 0x771a0ad0 # load x3 with value 0x771a0ad0
sw x3, 0(x2) # store 0x771a0ad0 in memory
flw f8, 0(x2) # load 0x771a0ad0 from memory into f8
fnmsub.s f25, f11, f10, f8, dyn # perform operation
fnmsub.s f25, f11, f10, f8, rdn # perform operation
fnmsub.s f25, f11, f10, f8, rmm # perform operation
fnmsub.s f25, f11, f10, f8, rne # perform operation
fnmsub.s f25, f11, f10, f8, rtz # perform operation
fnmsub.s f25, f11, f10, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f25, f11, f10, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f25, f11, f10, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f25, f11, f10, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f25, f11, f10, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f25, f11, f10, f8 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0xbfc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f10, 0(x2) # load 0xff800000 from memory into f10
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f16, 0(x2) # load 0xbfc00000 from memory into f16
la x2, scratch
li x3, 0x309a93e2 # load x3 with value 0x309a93e2
sw x3, 0(x2) # store 0x309a93e2 in memory
flw f22, 0(x2) # load 0x309a93e2 from memory into f22
fnmsub.s f23, f10, f16, f22, dyn # perform operation
fnmsub.s f23, f10, f16, f22, rdn # perform operation
fnmsub.s f23, f10, f16, f22, rmm # perform operation
fnmsub.s f23, f10, f16, f22, rne # perform operation
fnmsub.s f23, f10, f16, f22, rtz # perform operation
fnmsub.s f23, f10, f16, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f23, f10, f16, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f23, f10, f16, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f23, f10, f16, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f23, f10, f16, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f23, f10, f16, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0x40000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f2, 0(x2) # load 0xff800000 from memory into f2
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f23, 0(x2) # load 0x40000000 from memory into f23
la x2, scratch
li x3, 0xfce9c26d # load x3 with value 0xfce9c26d
sw x3, 0(x2) # store 0xfce9c26d in memory
flw f9, 0(x2) # load 0xfce9c26d from memory into f9
fnmsub.s f21, f2, f23, f9, dyn # perform operation
fnmsub.s f21, f2, f23, f9, rdn # perform operation
fnmsub.s f21, f2, f23, f9, rmm # perform operation
fnmsub.s f21, f2, f23, f9, rne # perform operation
fnmsub.s f21, f2, f23, f9, rtz # perform operation
fnmsub.s f21, f2, f23, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f21, f2, f23, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f21, f2, f23, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f21, f2, f23, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f21, f2, f23, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f21, f2, f23, f9 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0xc0000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f31, 0(x2) # load 0xff800000 from memory into f31
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f7, 0(x2) # load 0xc0000000 from memory into f7
la x2, scratch
li x3, 0x982ecd85 # load x3 with value 0x982ecd85
sw x3, 0(x2) # store 0x982ecd85 in memory
flw f28, 0(x2) # load 0x982ecd85 from memory into f28
fnmsub.s f29, f31, f7, f28, dyn # perform operation
fnmsub.s f29, f31, f7, f28, rdn # perform operation
fnmsub.s f29, f31, f7, f28, rmm # perform operation
fnmsub.s f29, f31, f7, f28, rne # perform operation
fnmsub.s f29, f31, f7, f28, rtz # perform operation
fnmsub.s f29, f31, f7, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f29, f31, f7, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f29, f31, f7, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f29, f31, f7, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f29, f31, f7, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f29, f31, f7, f28 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0x800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f27, 0(x2) # load 0xff800000 from memory into f27
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f23, 0(x2) # load 0x00800000 from memory into f23
la x2, scratch
li x3, 0x04bc1fbf # load x3 with value 0x04bc1fbf
sw x3, 0(x2) # store 0x04bc1fbf in memory
flw f25, 0(x2) # load 0x04bc1fbf from memory into f25
fnmsub.s f8, f27, f23, f25, dyn # perform operation
fnmsub.s f8, f27, f23, f25, rdn # perform operation
fnmsub.s f8, f27, f23, f25, rmm # perform operation
fnmsub.s f8, f27, f23, f25, rne # perform operation
fnmsub.s f8, f27, f23, f25, rtz # perform operation
fnmsub.s f8, f27, f23, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f8, f27, f23, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f8, f27, f23, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f8, f27, f23, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f8, f27, f23, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f8, f27, f23, f25 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0x80800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f12, 0(x2) # load 0xff800000 from memory into f12
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f25, 0(x2) # load 0x80800000 from memory into f25
la x2, scratch
li x3, 0x78b1b260 # load x3 with value 0x78b1b260
sw x3, 0(x2) # store 0x78b1b260 in memory
flw f18, 0(x2) # load 0x78b1b260 from memory into f18
fnmsub.s f19, f12, f25, f18, dyn # perform operation
fnmsub.s f19, f12, f25, f18, rdn # perform operation
fnmsub.s f19, f12, f25, f18, rmm # perform operation
fnmsub.s f19, f12, f25, f18, rne # perform operation
fnmsub.s f19, f12, f25, f18, rtz # perform operation
fnmsub.s f19, f12, f25, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f19, f12, f25, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f19, f12, f25, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f19, f12, f25, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f19, f12, f25, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f19, f12, f25, f18 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0x7f7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f18, 0(x2) # load 0xff800000 from memory into f18
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f25, 0(x2) # load 0x7f7fffff from memory into f25
la x2, scratch
li x3, 0xe4b12ef8 # load x3 with value 0xe4b12ef8
sw x3, 0(x2) # store 0xe4b12ef8 in memory
flw f11, 0(x2) # load 0xe4b12ef8 from memory into f11
fnmsub.s f30, f18, f25, f11, dyn # perform operation
fnmsub.s f30, f18, f25, f11, rdn # perform operation
fnmsub.s f30, f18, f25, f11, rmm # perform operation
fnmsub.s f30, f18, f25, f11, rne # perform operation
fnmsub.s f30, f18, f25, f11, rtz # perform operation
fnmsub.s f30, f18, f25, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f30, f18, f25, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f30, f18, f25, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f30, f18, f25, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f30, f18, f25, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f30, f18, f25, f11 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0xff7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f27, 0(x2) # load 0xff800000 from memory into f27
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f1, 0(x2) # load 0xff7fffff from memory into f1
la x2, scratch
li x3, 0xfb4e0f2a # load x3 with value 0xfb4e0f2a
sw x3, 0(x2) # store 0xfb4e0f2a in memory
flw f10, 0(x2) # load 0xfb4e0f2a from memory into f10
fnmsub.s f11, f27, f1, f10, dyn # perform operation
fnmsub.s f11, f27, f1, f10, rdn # perform operation
fnmsub.s f11, f27, f1, f10, rmm # perform operation
fnmsub.s f11, f27, f1, f10, rne # perform operation
fnmsub.s f11, f27, f1, f10, rtz # perform operation
fnmsub.s f11, f27, f1, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f11, f27, f1, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f11, f27, f1, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f11, f27, f1, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f11, f27, f1, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f11, f27, f1, f10 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0x7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f31, 0(x2) # load 0xff800000 from memory into f31
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f18, 0(x2) # load 0x007fffff from memory into f18
la x2, scratch
li x3, 0x5475519e # load x3 with value 0x5475519e
sw x3, 0(x2) # store 0x5475519e in memory
flw f26, 0(x2) # load 0x5475519e from memory into f26
fnmsub.s f17, f31, f18, f26, dyn # perform operation
fnmsub.s f17, f31, f18, f26, rdn # perform operation
fnmsub.s f17, f31, f18, f26, rmm # perform operation
fnmsub.s f17, f31, f18, f26, rne # perform operation
fnmsub.s f17, f31, f18, f26, rtz # perform operation
fnmsub.s f17, f31, f18, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f17, f31, f18, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f17, f31, f18, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f17, f31, f18, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f17, f31, f18, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f17, f31, f18, f26 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0x807fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f19, 0(x2) # load 0xff800000 from memory into f19
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f20, 0(x2) # load 0x807fffff from memory into f20
la x2, scratch
li x3, 0x7463b737 # load x3 with value 0x7463b737
sw x3, 0(x2) # store 0x7463b737 in memory
flw f25, 0(x2) # load 0x7463b737 from memory into f25
fnmsub.s f3, f19, f20, f25, dyn # perform operation
fnmsub.s f3, f19, f20, f25, rdn # perform operation
fnmsub.s f3, f19, f20, f25, rmm # perform operation
fnmsub.s f3, f19, f20, f25, rne # perform operation
fnmsub.s f3, f19, f20, f25, rtz # perform operation
fnmsub.s f3, f19, f20, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f3, f19, f20, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f3, f19, f20, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f3, f19, f20, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f3, f19, f20, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f3, f19, f20, f25 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0x400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f5, 0(x2) # load 0xff800000 from memory into f5
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f13, 0(x2) # load 0x00400000 from memory into f13
la x2, scratch
li x3, 0x06842d1f # load x3 with value 0x06842d1f
sw x3, 0(x2) # store 0x06842d1f in memory
flw f10, 0(x2) # load 0x06842d1f from memory into f10
fnmsub.s f19, f5, f13, f10, dyn # perform operation
fnmsub.s f19, f5, f13, f10, rdn # perform operation
fnmsub.s f19, f5, f13, f10, rmm # perform operation
fnmsub.s f19, f5, f13, f10, rne # perform operation
fnmsub.s f19, f5, f13, f10, rtz # perform operation
fnmsub.s f19, f5, f13, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f19, f5, f13, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f19, f5, f13, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f19, f5, f13, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f19, f5, f13, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f19, f5, f13, f10 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0x80400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f9, 0(x2) # load 0xff800000 from memory into f9
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f24, 0(x2) # load 0x80400000 from memory into f24
la x2, scratch
li x3, 0xf23312cd # load x3 with value 0xf23312cd
sw x3, 0(x2) # store 0xf23312cd in memory
flw f27, 0(x2) # load 0xf23312cd from memory into f27
fnmsub.s f2, f9, f24, f27, dyn # perform operation
fnmsub.s f2, f9, f24, f27, rdn # perform operation
fnmsub.s f2, f9, f24, f27, rmm # perform operation
fnmsub.s f2, f9, f24, f27, rne # perform operation
fnmsub.s f2, f9, f24, f27, rtz # perform operation
fnmsub.s f2, f9, f24, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f2, f9, f24, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f2, f9, f24, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f2, f9, f24, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f2, f9, f24, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f2, f9, f24, f27 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0x1)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f9, 0(x2) # load 0xff800000 from memory into f9
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f26, 0(x2) # load 0x00000001 from memory into f26
la x2, scratch
li x3, 0x208a9975 # load x3 with value 0x208a9975
sw x3, 0(x2) # store 0x208a9975 in memory
flw f14, 0(x2) # load 0x208a9975 from memory into f14
fnmsub.s f2, f9, f26, f14, dyn # perform operation
fnmsub.s f2, f9, f26, f14, rdn # perform operation
fnmsub.s f2, f9, f26, f14, rmm # perform operation
fnmsub.s f2, f9, f26, f14, rne # perform operation
fnmsub.s f2, f9, f26, f14, rtz # perform operation
fnmsub.s f2, f9, f26, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f2, f9, f26, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f2, f9, f26, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f2, f9, f26, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f2, f9, f26, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f2, f9, f26, f14 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0x80000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f1, 0(x2) # load 0xff800000 from memory into f1
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f26, 0(x2) # load 0x80000001 from memory into f26
la x2, scratch
li x3, 0x4ed61adf # load x3 with value 0x4ed61adf
sw x3, 0(x2) # store 0x4ed61adf in memory
flw f8, 0(x2) # load 0x4ed61adf from memory into f8
fnmsub.s f24, f1, f26, f8, dyn # perform operation
fnmsub.s f24, f1, f26, f8, rdn # perform operation
fnmsub.s f24, f1, f26, f8, rmm # perform operation
fnmsub.s f24, f1, f26, f8, rne # perform operation
fnmsub.s f24, f1, f26, f8, rtz # perform operation
fnmsub.s f24, f1, f26, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f24, f1, f26, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f24, f1, f26, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f24, f1, f26, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f24, f1, f26, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f24, f1, f26, f8 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0x7f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f2, 0(x2) # load 0xff800000 from memory into f2
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f28, 0(x2) # load 0x7f800000 from memory into f28
la x2, scratch
li x3, 0x7d5ff0e9 # load x3 with value 0x7d5ff0e9
sw x3, 0(x2) # store 0x7d5ff0e9 in memory
flw f6, 0(x2) # load 0x7d5ff0e9 from memory into f6
fnmsub.s f14, f2, f28, f6, dyn # perform operation
fnmsub.s f14, f2, f28, f6, rdn # perform operation
fnmsub.s f14, f2, f28, f6, rmm # perform operation
fnmsub.s f14, f2, f28, f6, rne # perform operation
fnmsub.s f14, f2, f28, f6, rtz # perform operation
fnmsub.s f14, f2, f28, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f14, f2, f28, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f14, f2, f28, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f14, f2, f28, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f14, f2, f28, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f14, f2, f28, f6 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0xff800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f17, 0(x2) # load 0xff800000 from memory into f17
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f14, 0(x2) # load 0xff800000 from memory into f14
la x2, scratch
li x3, 0x36b4d1fd # load x3 with value 0x36b4d1fd
sw x3, 0(x2) # store 0x36b4d1fd in memory
flw f8, 0(x2) # load 0x36b4d1fd from memory into f8
fnmsub.s f15, f17, f14, f8, dyn # perform operation
fnmsub.s f15, f17, f14, f8, rdn # perform operation
fnmsub.s f15, f17, f14, f8, rmm # perform operation
fnmsub.s f15, f17, f14, f8, rne # perform operation
fnmsub.s f15, f17, f14, f8, rtz # perform operation
fnmsub.s f15, f17, f14, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f15, f17, f14, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f15, f17, f14, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f15, f17, f14, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f15, f17, f14, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f15, f17, f14, f8 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0x7fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f19, 0(x2) # load 0xff800000 from memory into f19
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f15, 0(x2) # load 0x7fc00000 from memory into f15
la x2, scratch
li x3, 0x473bc0de # load x3 with value 0x473bc0de
sw x3, 0(x2) # store 0x473bc0de in memory
flw f16, 0(x2) # load 0x473bc0de from memory into f16
fnmsub.s f1, f19, f15, f16, dyn # perform operation
fnmsub.s f1, f19, f15, f16, rdn # perform operation
fnmsub.s f1, f19, f15, f16, rmm # perform operation
fnmsub.s f1, f19, f15, f16, rne # perform operation
fnmsub.s f1, f19, f15, f16, rtz # perform operation
fnmsub.s f1, f19, f15, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f1, f19, f15, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f1, f19, f15, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f1, f19, f15, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f1, f19, f15, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f1, f19, f15, f16 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0x7fffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f23, 0(x2) # load 0xff800000 from memory into f23
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f17, 0(x2) # load 0x7fffffff from memory into f17
la x2, scratch
li x3, 0x5ff19b00 # load x3 with value 0x5ff19b00
sw x3, 0(x2) # store 0x5ff19b00 in memory
flw f18, 0(x2) # load 0x5ff19b00 from memory into f18
fnmsub.s f11, f23, f17, f18, dyn # perform operation
fnmsub.s f11, f23, f17, f18, rdn # perform operation
fnmsub.s f11, f23, f17, f18, rmm # perform operation
fnmsub.s f11, f23, f17, f18, rne # perform operation
fnmsub.s f11, f23, f17, f18, rtz # perform operation
fnmsub.s f11, f23, f17, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f11, f23, f17, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f11, f23, f17, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f11, f23, f17, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f11, f23, f17, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f11, f23, f17, f18 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0xffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f25, 0(x2) # load 0xff800000 from memory into f25
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f21, 0(x2) # load 0xffffffff from memory into f21
la x2, scratch
li x3, 0x1149c84d # load x3 with value 0x1149c84d
sw x3, 0(x2) # store 0x1149c84d in memory
flw f13, 0(x2) # load 0x1149c84d from memory into f13
fnmsub.s f9, f25, f21, f13, dyn # perform operation
fnmsub.s f9, f25, f21, f13, rdn # perform operation
fnmsub.s f9, f25, f21, f13, rmm # perform operation
fnmsub.s f9, f25, f21, f13, rne # perform operation
fnmsub.s f9, f25, f21, f13, rtz # perform operation
fnmsub.s f9, f25, f21, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f9, f25, f21, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f9, f25, f21, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f9, f25, f21, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f9, f25, f21, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f9, f25, f21, f13 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0x7f800001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f27, 0(x2) # load 0xff800000 from memory into f27
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f9, 0(x2) # load 0x7f800001 from memory into f9
la x2, scratch
li x3, 0x6bbf004d # load x3 with value 0x6bbf004d
sw x3, 0(x2) # store 0x6bbf004d in memory
flw f2, 0(x2) # load 0x6bbf004d from memory into f2
fnmsub.s f8, f27, f9, f2, dyn # perform operation
fnmsub.s f8, f27, f9, f2, rdn # perform operation
fnmsub.s f8, f27, f9, f2, rmm # perform operation
fnmsub.s f8, f27, f9, f2, rne # perform operation
fnmsub.s f8, f27, f9, f2, rtz # perform operation
fnmsub.s f8, f27, f9, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f8, f27, f9, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f8, f27, f9, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f8, f27, f9, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f8, f27, f9, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f8, f27, f9, f2 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0x7fbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f8, 0(x2) # load 0xff800000 from memory into f8
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f26, 0(x2) # load 0x7fbfffff from memory into f26
la x2, scratch
li x3, 0xbabdcdf5 # load x3 with value 0xbabdcdf5
sw x3, 0(x2) # store 0xbabdcdf5 in memory
flw f13, 0(x2) # load 0xbabdcdf5 from memory into f13
fnmsub.s f17, f8, f26, f13, dyn # perform operation
fnmsub.s f17, f8, f26, f13, rdn # perform operation
fnmsub.s f17, f8, f26, f13, rmm # perform operation
fnmsub.s f17, f8, f26, f13, rne # perform operation
fnmsub.s f17, f8, f26, f13, rtz # perform operation
fnmsub.s f17, f8, f26, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f17, f8, f26, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f17, f8, f26, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f17, f8, f26, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f17, f8, f26, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f17, f8, f26, f13 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0xffbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f5, 0(x2) # load 0xff800000 from memory into f5
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f14, 0(x2) # load 0xffbfffff from memory into f14
la x2, scratch
li x3, 0xd739b9fe # load x3 with value 0xd739b9fe
sw x3, 0(x2) # store 0xd739b9fe in memory
flw f9, 0(x2) # load 0xd739b9fe from memory into f9
fnmsub.s f27, f5, f14, f9, dyn # perform operation
fnmsub.s f27, f5, f14, f9, rdn # perform operation
fnmsub.s f27, f5, f14, f9, rmm # perform operation
fnmsub.s f27, f5, f14, f9, rne # perform operation
fnmsub.s f27, f5, f14, f9, rtz # perform operation
fnmsub.s f27, f5, f14, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f27, f5, f14, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f27, f5, f14, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f27, f5, f14, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f27, f5, f14, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f27, f5, f14, f9 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0x7ef8654f)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f29, 0(x2) # load 0xff800000 from memory into f29
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f28, 0(x2) # load 0x7ef8654f from memory into f28
la x2, scratch
li x3, 0x8e6f4a36 # load x3 with value 0x8e6f4a36
sw x3, 0(x2) # store 0x8e6f4a36 in memory
flw f10, 0(x2) # load 0x8e6f4a36 from memory into f10
fnmsub.s f17, f29, f28, f10, dyn # perform operation
fnmsub.s f17, f29, f28, f10, rdn # perform operation
fnmsub.s f17, f29, f28, f10, rmm # perform operation
fnmsub.s f17, f29, f28, f10, rne # perform operation
fnmsub.s f17, f29, f28, f10, rtz # perform operation
fnmsub.s f17, f29, f28, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f17, f29, f28, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f17, f29, f28, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f17, f29, f28, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f17, f29, f28, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f17, f29, f28, f10 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0x813d9ab0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f20, 0(x2) # load 0xff800000 from memory into f20
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f26, 0(x2) # load 0x813d9ab0 from memory into f26
la x2, scratch
li x3, 0x88b3d4c1 # load x3 with value 0x88b3d4c1
sw x3, 0(x2) # store 0x88b3d4c1 in memory
flw f6, 0(x2) # load 0x88b3d4c1 from memory into f6
fnmsub.s f22, f20, f26, f6, dyn # perform operation
fnmsub.s f22, f20, f26, f6, rdn # perform operation
fnmsub.s f22, f20, f26, f6, rmm # perform operation
fnmsub.s f22, f20, f26, f6, rne # perform operation
fnmsub.s f22, f20, f26, f6, rtz # perform operation
fnmsub.s f22, f20, f26, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f22, f20, f26, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f22, f20, f26, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f22, f20, f26, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f22, f20, f26, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f22, f20, f26, f6 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0x0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f10, 0(x2) # load 0x7fc00000 from memory into f10
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f15, 0(x2) # load 0x00000000 from memory into f15
la x2, scratch
li x3, 0xd641ae20 # load x3 with value 0xd641ae20
sw x3, 0(x2) # store 0xd641ae20 in memory
flw f31, 0(x2) # load 0xd641ae20 from memory into f31
fnmsub.s f14, f10, f15, f31, dyn # perform operation
fnmsub.s f14, f10, f15, f31, rdn # perform operation
fnmsub.s f14, f10, f15, f31, rmm # perform operation
fnmsub.s f14, f10, f15, f31, rne # perform operation
fnmsub.s f14, f10, f15, f31, rtz # perform operation
fnmsub.s f14, f10, f15, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f14, f10, f15, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f14, f10, f15, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f14, f10, f15, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f14, f10, f15, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f14, f10, f15, f31 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0x80000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f17, 0(x2) # load 0x7fc00000 from memory into f17
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f2, 0(x2) # load 0x80000000 from memory into f2
la x2, scratch
li x3, 0x8907ffb7 # load x3 with value 0x8907ffb7
sw x3, 0(x2) # store 0x8907ffb7 in memory
flw f13, 0(x2) # load 0x8907ffb7 from memory into f13
fnmsub.s f26, f17, f2, f13, dyn # perform operation
fnmsub.s f26, f17, f2, f13, rdn # perform operation
fnmsub.s f26, f17, f2, f13, rmm # perform operation
fnmsub.s f26, f17, f2, f13, rne # perform operation
fnmsub.s f26, f17, f2, f13, rtz # perform operation
fnmsub.s f26, f17, f2, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f26, f17, f2, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f26, f17, f2, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f26, f17, f2, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f26, f17, f2, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f26, f17, f2, f13 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0x3f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f28, 0(x2) # load 0x7fc00000 from memory into f28
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f30, 0(x2) # load 0x3f800000 from memory into f30
la x2, scratch
li x3, 0x1c5c375f # load x3 with value 0x1c5c375f
sw x3, 0(x2) # store 0x1c5c375f in memory
flw f27, 0(x2) # load 0x1c5c375f from memory into f27
fnmsub.s f23, f28, f30, f27, dyn # perform operation
fnmsub.s f23, f28, f30, f27, rdn # perform operation
fnmsub.s f23, f28, f30, f27, rmm # perform operation
fnmsub.s f23, f28, f30, f27, rne # perform operation
fnmsub.s f23, f28, f30, f27, rtz # perform operation
fnmsub.s f23, f28, f30, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f23, f28, f30, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f23, f28, f30, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f23, f28, f30, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f23, f28, f30, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f23, f28, f30, f27 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0xbf800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f31, 0(x2) # load 0x7fc00000 from memory into f31
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f12, 0(x2) # load 0xbf800000 from memory into f12
la x2, scratch
li x3, 0x90c7cd46 # load x3 with value 0x90c7cd46
sw x3, 0(x2) # store 0x90c7cd46 in memory
flw f2, 0(x2) # load 0x90c7cd46 from memory into f2
fnmsub.s f6, f31, f12, f2, dyn # perform operation
fnmsub.s f6, f31, f12, f2, rdn # perform operation
fnmsub.s f6, f31, f12, f2, rmm # perform operation
fnmsub.s f6, f31, f12, f2, rne # perform operation
fnmsub.s f6, f31, f12, f2, rtz # perform operation
fnmsub.s f6, f31, f12, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f6, f31, f12, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f6, f31, f12, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f6, f31, f12, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f6, f31, f12, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f6, f31, f12, f2 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0x3fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f15, 0(x2) # load 0x7fc00000 from memory into f15
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f18, 0(x2) # load 0x3fc00000 from memory into f18
la x2, scratch
li x3, 0x3e6c8e90 # load x3 with value 0x3e6c8e90
sw x3, 0(x2) # store 0x3e6c8e90 in memory
flw f28, 0(x2) # load 0x3e6c8e90 from memory into f28
fnmsub.s f29, f15, f18, f28, dyn # perform operation
fnmsub.s f29, f15, f18, f28, rdn # perform operation
fnmsub.s f29, f15, f18, f28, rmm # perform operation
fnmsub.s f29, f15, f18, f28, rne # perform operation
fnmsub.s f29, f15, f18, f28, rtz # perform operation
fnmsub.s f29, f15, f18, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f29, f15, f18, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f29, f15, f18, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f29, f15, f18, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f29, f15, f18, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f29, f15, f18, f28 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0xbfc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f18, 0(x2) # load 0x7fc00000 from memory into f18
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f13, 0(x2) # load 0xbfc00000 from memory into f13
la x2, scratch
li x3, 0x62675344 # load x3 with value 0x62675344
sw x3, 0(x2) # store 0x62675344 in memory
flw f8, 0(x2) # load 0x62675344 from memory into f8
fnmsub.s f20, f18, f13, f8, dyn # perform operation
fnmsub.s f20, f18, f13, f8, rdn # perform operation
fnmsub.s f20, f18, f13, f8, rmm # perform operation
fnmsub.s f20, f18, f13, f8, rne # perform operation
fnmsub.s f20, f18, f13, f8, rtz # perform operation
fnmsub.s f20, f18, f13, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f20, f18, f13, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f20, f18, f13, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f20, f18, f13, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f20, f18, f13, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f20, f18, f13, f8 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0x40000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f21, 0(x2) # load 0x7fc00000 from memory into f21
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f26, 0(x2) # load 0x40000000 from memory into f26
la x2, scratch
li x3, 0xd0d5d955 # load x3 with value 0xd0d5d955
sw x3, 0(x2) # store 0xd0d5d955 in memory
flw f15, 0(x2) # load 0xd0d5d955 from memory into f15
fnmsub.s f25, f21, f26, f15, dyn # perform operation
fnmsub.s f25, f21, f26, f15, rdn # perform operation
fnmsub.s f25, f21, f26, f15, rmm # perform operation
fnmsub.s f25, f21, f26, f15, rne # perform operation
fnmsub.s f25, f21, f26, f15, rtz # perform operation
fnmsub.s f25, f21, f26, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f25, f21, f26, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f25, f21, f26, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f25, f21, f26, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f25, f21, f26, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f25, f21, f26, f15 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0xc0000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f19, 0(x2) # load 0x7fc00000 from memory into f19
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f8, 0(x2) # load 0xc0000000 from memory into f8
la x2, scratch
li x3, 0x1f8a0b17 # load x3 with value 0x1f8a0b17
sw x3, 0(x2) # store 0x1f8a0b17 in memory
flw f20, 0(x2) # load 0x1f8a0b17 from memory into f20
fnmsub.s f28, f19, f8, f20, dyn # perform operation
fnmsub.s f28, f19, f8, f20, rdn # perform operation
fnmsub.s f28, f19, f8, f20, rmm # perform operation
fnmsub.s f28, f19, f8, f20, rne # perform operation
fnmsub.s f28, f19, f8, f20, rtz # perform operation
fnmsub.s f28, f19, f8, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f28, f19, f8, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f28, f19, f8, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f28, f19, f8, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f28, f19, f8, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f28, f19, f8, f20 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0x800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f18, 0(x2) # load 0x7fc00000 from memory into f18
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f19, 0(x2) # load 0x00800000 from memory into f19
la x2, scratch
li x3, 0xc4e08698 # load x3 with value 0xc4e08698
sw x3, 0(x2) # store 0xc4e08698 in memory
flw f29, 0(x2) # load 0xc4e08698 from memory into f29
fnmsub.s f2, f18, f19, f29, dyn # perform operation
fnmsub.s f2, f18, f19, f29, rdn # perform operation
fnmsub.s f2, f18, f19, f29, rmm # perform operation
fnmsub.s f2, f18, f19, f29, rne # perform operation
fnmsub.s f2, f18, f19, f29, rtz # perform operation
fnmsub.s f2, f18, f19, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f2, f18, f19, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f2, f18, f19, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f2, f18, f19, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f2, f18, f19, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f2, f18, f19, f29 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0x80800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f31, 0(x2) # load 0x7fc00000 from memory into f31
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f17, 0(x2) # load 0x80800000 from memory into f17
la x2, scratch
li x3, 0x1f27fe28 # load x3 with value 0x1f27fe28
sw x3, 0(x2) # store 0x1f27fe28 in memory
flw f14, 0(x2) # load 0x1f27fe28 from memory into f14
fnmsub.s f29, f31, f17, f14, dyn # perform operation
fnmsub.s f29, f31, f17, f14, rdn # perform operation
fnmsub.s f29, f31, f17, f14, rmm # perform operation
fnmsub.s f29, f31, f17, f14, rne # perform operation
fnmsub.s f29, f31, f17, f14, rtz # perform operation
fnmsub.s f29, f31, f17, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f29, f31, f17, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f29, f31, f17, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f29, f31, f17, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f29, f31, f17, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f29, f31, f17, f14 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0x7f7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f16, 0(x2) # load 0x7fc00000 from memory into f16
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f27, 0(x2) # load 0x7f7fffff from memory into f27
la x2, scratch
li x3, 0xed560b6f # load x3 with value 0xed560b6f
sw x3, 0(x2) # store 0xed560b6f in memory
flw f23, 0(x2) # load 0xed560b6f from memory into f23
fnmsub.s f12, f16, f27, f23, dyn # perform operation
fnmsub.s f12, f16, f27, f23, rdn # perform operation
fnmsub.s f12, f16, f27, f23, rmm # perform operation
fnmsub.s f12, f16, f27, f23, rne # perform operation
fnmsub.s f12, f16, f27, f23, rtz # perform operation
fnmsub.s f12, f16, f27, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f12, f16, f27, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f12, f16, f27, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f12, f16, f27, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f12, f16, f27, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f12, f16, f27, f23 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0xff7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f21, 0(x2) # load 0x7fc00000 from memory into f21
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f9, 0(x2) # load 0xff7fffff from memory into f9
la x2, scratch
li x3, 0x0567fdaa # load x3 with value 0x0567fdaa
sw x3, 0(x2) # store 0x0567fdaa in memory
flw f19, 0(x2) # load 0x0567fdaa from memory into f19
fnmsub.s f20, f21, f9, f19, dyn # perform operation
fnmsub.s f20, f21, f9, f19, rdn # perform operation
fnmsub.s f20, f21, f9, f19, rmm # perform operation
fnmsub.s f20, f21, f9, f19, rne # perform operation
fnmsub.s f20, f21, f9, f19, rtz # perform operation
fnmsub.s f20, f21, f9, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f20, f21, f9, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f20, f21, f9, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f20, f21, f9, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f20, f21, f9, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f20, f21, f9, f19 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0x7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f29, 0(x2) # load 0x7fc00000 from memory into f29
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f28, 0(x2) # load 0x007fffff from memory into f28
la x2, scratch
li x3, 0xeb19944c # load x3 with value 0xeb19944c
sw x3, 0(x2) # store 0xeb19944c in memory
flw f24, 0(x2) # load 0xeb19944c from memory into f24
fnmsub.s f9, f29, f28, f24, dyn # perform operation
fnmsub.s f9, f29, f28, f24, rdn # perform operation
fnmsub.s f9, f29, f28, f24, rmm # perform operation
fnmsub.s f9, f29, f28, f24, rne # perform operation
fnmsub.s f9, f29, f28, f24, rtz # perform operation
fnmsub.s f9, f29, f28, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f9, f29, f28, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f9, f29, f28, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f9, f29, f28, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f9, f29, f28, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f9, f29, f28, f24 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0x807fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f8, 0(x2) # load 0x7fc00000 from memory into f8
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f5, 0(x2) # load 0x807fffff from memory into f5
la x2, scratch
li x3, 0xc5580e9c # load x3 with value 0xc5580e9c
sw x3, 0(x2) # store 0xc5580e9c in memory
flw f23, 0(x2) # load 0xc5580e9c from memory into f23
fnmsub.s f11, f8, f5, f23, dyn # perform operation
fnmsub.s f11, f8, f5, f23, rdn # perform operation
fnmsub.s f11, f8, f5, f23, rmm # perform operation
fnmsub.s f11, f8, f5, f23, rne # perform operation
fnmsub.s f11, f8, f5, f23, rtz # perform operation
fnmsub.s f11, f8, f5, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f11, f8, f5, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f11, f8, f5, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f11, f8, f5, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f11, f8, f5, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f11, f8, f5, f23 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0x400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f30, 0(x2) # load 0x7fc00000 from memory into f30
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f16, 0(x2) # load 0x00400000 from memory into f16
la x2, scratch
li x3, 0x517dea55 # load x3 with value 0x517dea55
sw x3, 0(x2) # store 0x517dea55 in memory
flw f23, 0(x2) # load 0x517dea55 from memory into f23
fnmsub.s f31, f30, f16, f23, dyn # perform operation
fnmsub.s f31, f30, f16, f23, rdn # perform operation
fnmsub.s f31, f30, f16, f23, rmm # perform operation
fnmsub.s f31, f30, f16, f23, rne # perform operation
fnmsub.s f31, f30, f16, f23, rtz # perform operation
fnmsub.s f31, f30, f16, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f31, f30, f16, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f31, f30, f16, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f31, f30, f16, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f31, f30, f16, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f31, f30, f16, f23 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0x80400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f21, 0(x2) # load 0x7fc00000 from memory into f21
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f29, 0(x2) # load 0x80400000 from memory into f29
la x2, scratch
li x3, 0x75335695 # load x3 with value 0x75335695
sw x3, 0(x2) # store 0x75335695 in memory
flw f28, 0(x2) # load 0x75335695 from memory into f28
fnmsub.s f31, f21, f29, f28, dyn # perform operation
fnmsub.s f31, f21, f29, f28, rdn # perform operation
fnmsub.s f31, f21, f29, f28, rmm # perform operation
fnmsub.s f31, f21, f29, f28, rne # perform operation
fnmsub.s f31, f21, f29, f28, rtz # perform operation
fnmsub.s f31, f21, f29, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f31, f21, f29, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f31, f21, f29, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f31, f21, f29, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f31, f21, f29, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f31, f21, f29, f28 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0x1)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f27, 0(x2) # load 0x7fc00000 from memory into f27
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f12, 0(x2) # load 0x00000001 from memory into f12
la x2, scratch
li x3, 0xf99b9a85 # load x3 with value 0xf99b9a85
sw x3, 0(x2) # store 0xf99b9a85 in memory
flw f5, 0(x2) # load 0xf99b9a85 from memory into f5
fnmsub.s f16, f27, f12, f5, dyn # perform operation
fnmsub.s f16, f27, f12, f5, rdn # perform operation
fnmsub.s f16, f27, f12, f5, rmm # perform operation
fnmsub.s f16, f27, f12, f5, rne # perform operation
fnmsub.s f16, f27, f12, f5, rtz # perform operation
fnmsub.s f16, f27, f12, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f16, f27, f12, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f16, f27, f12, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f16, f27, f12, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f16, f27, f12, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f16, f27, f12, f5 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0x80000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f2, 0(x2) # load 0x7fc00000 from memory into f2
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f27, 0(x2) # load 0x80000001 from memory into f27
la x2, scratch
li x3, 0x1cd5819e # load x3 with value 0x1cd5819e
sw x3, 0(x2) # store 0x1cd5819e in memory
flw f13, 0(x2) # load 0x1cd5819e from memory into f13
fnmsub.s f5, f2, f27, f13, dyn # perform operation
fnmsub.s f5, f2, f27, f13, rdn # perform operation
fnmsub.s f5, f2, f27, f13, rmm # perform operation
fnmsub.s f5, f2, f27, f13, rne # perform operation
fnmsub.s f5, f2, f27, f13, rtz # perform operation
fnmsub.s f5, f2, f27, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f5, f2, f27, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f5, f2, f27, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f5, f2, f27, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f5, f2, f27, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f5, f2, f27, f13 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0x7f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f27, 0(x2) # load 0x7fc00000 from memory into f27
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f29, 0(x2) # load 0x7f800000 from memory into f29
la x2, scratch
li x3, 0xfd852b40 # load x3 with value 0xfd852b40
sw x3, 0(x2) # store 0xfd852b40 in memory
flw f19, 0(x2) # load 0xfd852b40 from memory into f19
fnmsub.s f8, f27, f29, f19, dyn # perform operation
fnmsub.s f8, f27, f29, f19, rdn # perform operation
fnmsub.s f8, f27, f29, f19, rmm # perform operation
fnmsub.s f8, f27, f29, f19, rne # perform operation
fnmsub.s f8, f27, f29, f19, rtz # perform operation
fnmsub.s f8, f27, f29, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f8, f27, f29, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f8, f27, f29, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f8, f27, f29, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f8, f27, f29, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f8, f27, f29, f19 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0xff800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f23, 0(x2) # load 0x7fc00000 from memory into f23
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f14, 0(x2) # load 0xff800000 from memory into f14
la x2, scratch
li x3, 0x4300c621 # load x3 with value 0x4300c621
sw x3, 0(x2) # store 0x4300c621 in memory
flw f15, 0(x2) # load 0x4300c621 from memory into f15
fnmsub.s f29, f23, f14, f15, dyn # perform operation
fnmsub.s f29, f23, f14, f15, rdn # perform operation
fnmsub.s f29, f23, f14, f15, rmm # perform operation
fnmsub.s f29, f23, f14, f15, rne # perform operation
fnmsub.s f29, f23, f14, f15, rtz # perform operation
fnmsub.s f29, f23, f14, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f29, f23, f14, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f29, f23, f14, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f29, f23, f14, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f29, f23, f14, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f29, f23, f14, f15 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0x7fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f11, 0(x2) # load 0x7fc00000 from memory into f11
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f7, 0(x2) # load 0x7fc00000 from memory into f7
la x2, scratch
li x3, 0xcaf80a96 # load x3 with value 0xcaf80a96
sw x3, 0(x2) # store 0xcaf80a96 in memory
flw f17, 0(x2) # load 0xcaf80a96 from memory into f17
fnmsub.s f1, f11, f7, f17, dyn # perform operation
fnmsub.s f1, f11, f7, f17, rdn # perform operation
fnmsub.s f1, f11, f7, f17, rmm # perform operation
fnmsub.s f1, f11, f7, f17, rne # perform operation
fnmsub.s f1, f11, f7, f17, rtz # perform operation
fnmsub.s f1, f11, f7, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f1, f11, f7, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f1, f11, f7, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f1, f11, f7, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f1, f11, f7, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f1, f11, f7, f17 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0x7fffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f24, 0(x2) # load 0x7fc00000 from memory into f24
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f31, 0(x2) # load 0x7fffffff from memory into f31
la x2, scratch
li x3, 0x864d3051 # load x3 with value 0x864d3051
sw x3, 0(x2) # store 0x864d3051 in memory
flw f20, 0(x2) # load 0x864d3051 from memory into f20
fnmsub.s f5, f24, f31, f20, dyn # perform operation
fnmsub.s f5, f24, f31, f20, rdn # perform operation
fnmsub.s f5, f24, f31, f20, rmm # perform operation
fnmsub.s f5, f24, f31, f20, rne # perform operation
fnmsub.s f5, f24, f31, f20, rtz # perform operation
fnmsub.s f5, f24, f31, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f5, f24, f31, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f5, f24, f31, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f5, f24, f31, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f5, f24, f31, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f5, f24, f31, f20 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0xffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f29, 0(x2) # load 0x7fc00000 from memory into f29
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f9, 0(x2) # load 0xffffffff from memory into f9
la x2, scratch
li x3, 0xbee33f53 # load x3 with value 0xbee33f53
sw x3, 0(x2) # store 0xbee33f53 in memory
flw f26, 0(x2) # load 0xbee33f53 from memory into f26
fnmsub.s f3, f29, f9, f26, dyn # perform operation
fnmsub.s f3, f29, f9, f26, rdn # perform operation
fnmsub.s f3, f29, f9, f26, rmm # perform operation
fnmsub.s f3, f29, f9, f26, rne # perform operation
fnmsub.s f3, f29, f9, f26, rtz # perform operation
fnmsub.s f3, f29, f9, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f3, f29, f9, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f3, f29, f9, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f3, f29, f9, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f3, f29, f9, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f3, f29, f9, f26 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0x7f800001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f16, 0(x2) # load 0x7fc00000 from memory into f16
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f3, 0(x2) # load 0x7f800001 from memory into f3
la x2, scratch
li x3, 0x6adcfa75 # load x3 with value 0x6adcfa75
sw x3, 0(x2) # store 0x6adcfa75 in memory
flw f7, 0(x2) # load 0x6adcfa75 from memory into f7
fnmsub.s f24, f16, f3, f7, dyn # perform operation
fnmsub.s f24, f16, f3, f7, rdn # perform operation
fnmsub.s f24, f16, f3, f7, rmm # perform operation
fnmsub.s f24, f16, f3, f7, rne # perform operation
fnmsub.s f24, f16, f3, f7, rtz # perform operation
fnmsub.s f24, f16, f3, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f24, f16, f3, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f24, f16, f3, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f24, f16, f3, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f24, f16, f3, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f24, f16, f3, f7 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0x7fbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f8, 0(x2) # load 0x7fc00000 from memory into f8
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f26, 0(x2) # load 0x7fbfffff from memory into f26
la x2, scratch
li x3, 0x16b57b7e # load x3 with value 0x16b57b7e
sw x3, 0(x2) # store 0x16b57b7e in memory
flw f11, 0(x2) # load 0x16b57b7e from memory into f11
fnmsub.s f12, f8, f26, f11, dyn # perform operation
fnmsub.s f12, f8, f26, f11, rdn # perform operation
fnmsub.s f12, f8, f26, f11, rmm # perform operation
fnmsub.s f12, f8, f26, f11, rne # perform operation
fnmsub.s f12, f8, f26, f11, rtz # perform operation
fnmsub.s f12, f8, f26, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f12, f8, f26, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f12, f8, f26, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f12, f8, f26, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f12, f8, f26, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f12, f8, f26, f11 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0xffbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f9, 0(x2) # load 0x7fc00000 from memory into f9
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f10, 0(x2) # load 0xffbfffff from memory into f10
la x2, scratch
li x3, 0x0e722ce4 # load x3 with value 0x0e722ce4
sw x3, 0(x2) # store 0x0e722ce4 in memory
flw f22, 0(x2) # load 0x0e722ce4 from memory into f22
fnmsub.s f2, f9, f10, f22, dyn # perform operation
fnmsub.s f2, f9, f10, f22, rdn # perform operation
fnmsub.s f2, f9, f10, f22, rmm # perform operation
fnmsub.s f2, f9, f10, f22, rne # perform operation
fnmsub.s f2, f9, f10, f22, rtz # perform operation
fnmsub.s f2, f9, f10, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f2, f9, f10, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f2, f9, f10, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f2, f9, f10, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f2, f9, f10, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f2, f9, f10, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0x7ef8654f)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f2, 0(x2) # load 0x7fc00000 from memory into f2
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f23, 0(x2) # load 0x7ef8654f from memory into f23
la x2, scratch
li x3, 0xcb015b33 # load x3 with value 0xcb015b33
sw x3, 0(x2) # store 0xcb015b33 in memory
flw f24, 0(x2) # load 0xcb015b33 from memory into f24
fnmsub.s f6, f2, f23, f24, dyn # perform operation
fnmsub.s f6, f2, f23, f24, rdn # perform operation
fnmsub.s f6, f2, f23, f24, rmm # perform operation
fnmsub.s f6, f2, f23, f24, rne # perform operation
fnmsub.s f6, f2, f23, f24, rtz # perform operation
fnmsub.s f6, f2, f23, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f6, f2, f23, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f6, f2, f23, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f6, f2, f23, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f6, f2, f23, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f6, f2, f23, f24 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0x813d9ab0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f22, 0(x2) # load 0x7fc00000 from memory into f22
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f18, 0(x2) # load 0x813d9ab0 from memory into f18
la x2, scratch
li x3, 0x87bac5f0 # load x3 with value 0x87bac5f0
sw x3, 0(x2) # store 0x87bac5f0 in memory
flw f25, 0(x2) # load 0x87bac5f0 from memory into f25
fnmsub.s f9, f22, f18, f25, dyn # perform operation
fnmsub.s f9, f22, f18, f25, rdn # perform operation
fnmsub.s f9, f22, f18, f25, rmm # perform operation
fnmsub.s f9, f22, f18, f25, rne # perform operation
fnmsub.s f9, f22, f18, f25, rtz # perform operation
fnmsub.s f9, f22, f18, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f9, f22, f18, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f9, f22, f18, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f9, f22, f18, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f9, f22, f18, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f9, f22, f18, f25 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0x0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f22, 0(x2) # load 0x7fffffff from memory into f22
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f7, 0(x2) # load 0x00000000 from memory into f7
la x2, scratch
li x3, 0x2104d859 # load x3 with value 0x2104d859
sw x3, 0(x2) # store 0x2104d859 in memory
flw f17, 0(x2) # load 0x2104d859 from memory into f17
fnmsub.s f12, f22, f7, f17, dyn # perform operation
fnmsub.s f12, f22, f7, f17, rdn # perform operation
fnmsub.s f12, f22, f7, f17, rmm # perform operation
fnmsub.s f12, f22, f7, f17, rne # perform operation
fnmsub.s f12, f22, f7, f17, rtz # perform operation
fnmsub.s f12, f22, f7, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f12, f22, f7, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f12, f22, f7, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f12, f22, f7, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f12, f22, f7, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f12, f22, f7, f17 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0x80000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f2, 0(x2) # load 0x7fffffff from memory into f2
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f21, 0(x2) # load 0x80000000 from memory into f21
la x2, scratch
li x3, 0xb1f22c32 # load x3 with value 0xb1f22c32
sw x3, 0(x2) # store 0xb1f22c32 in memory
flw f25, 0(x2) # load 0xb1f22c32 from memory into f25
fnmsub.s f10, f2, f21, f25, dyn # perform operation
fnmsub.s f10, f2, f21, f25, rdn # perform operation
fnmsub.s f10, f2, f21, f25, rmm # perform operation
fnmsub.s f10, f2, f21, f25, rne # perform operation
fnmsub.s f10, f2, f21, f25, rtz # perform operation
fnmsub.s f10, f2, f21, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f10, f2, f21, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f10, f2, f21, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f10, f2, f21, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f10, f2, f21, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f10, f2, f21, f25 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0x3f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f16, 0(x2) # load 0x7fffffff from memory into f16
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f22, 0(x2) # load 0x3f800000 from memory into f22
la x2, scratch
li x3, 0xb485407a # load x3 with value 0xb485407a
sw x3, 0(x2) # store 0xb485407a in memory
flw f13, 0(x2) # load 0xb485407a from memory into f13
fnmsub.s f27, f16, f22, f13, dyn # perform operation
fnmsub.s f27, f16, f22, f13, rdn # perform operation
fnmsub.s f27, f16, f22, f13, rmm # perform operation
fnmsub.s f27, f16, f22, f13, rne # perform operation
fnmsub.s f27, f16, f22, f13, rtz # perform operation
fnmsub.s f27, f16, f22, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f27, f16, f22, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f27, f16, f22, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f27, f16, f22, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f27, f16, f22, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f27, f16, f22, f13 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0xbf800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f1, 0(x2) # load 0x7fffffff from memory into f1
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f18, 0(x2) # load 0xbf800000 from memory into f18
la x2, scratch
li x3, 0xbfbd49ab # load x3 with value 0xbfbd49ab
sw x3, 0(x2) # store 0xbfbd49ab in memory
flw f9, 0(x2) # load 0xbfbd49ab from memory into f9
fnmsub.s f30, f1, f18, f9, dyn # perform operation
fnmsub.s f30, f1, f18, f9, rdn # perform operation
fnmsub.s f30, f1, f18, f9, rmm # perform operation
fnmsub.s f30, f1, f18, f9, rne # perform operation
fnmsub.s f30, f1, f18, f9, rtz # perform operation
fnmsub.s f30, f1, f18, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f30, f1, f18, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f30, f1, f18, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f30, f1, f18, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f30, f1, f18, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f30, f1, f18, f9 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0x3fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f15, 0(x2) # load 0x7fffffff from memory into f15
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f17, 0(x2) # load 0x3fc00000 from memory into f17
la x2, scratch
li x3, 0xadce5d91 # load x3 with value 0xadce5d91
sw x3, 0(x2) # store 0xadce5d91 in memory
flw f30, 0(x2) # load 0xadce5d91 from memory into f30
fnmsub.s f7, f15, f17, f30, dyn # perform operation
fnmsub.s f7, f15, f17, f30, rdn # perform operation
fnmsub.s f7, f15, f17, f30, rmm # perform operation
fnmsub.s f7, f15, f17, f30, rne # perform operation
fnmsub.s f7, f15, f17, f30, rtz # perform operation
fnmsub.s f7, f15, f17, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f7, f15, f17, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f7, f15, f17, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f7, f15, f17, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f7, f15, f17, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f7, f15, f17, f30 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0xbfc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f25, 0(x2) # load 0x7fffffff from memory into f25
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f11, 0(x2) # load 0xbfc00000 from memory into f11
la x2, scratch
li x3, 0xae866407 # load x3 with value 0xae866407
sw x3, 0(x2) # store 0xae866407 in memory
flw f5, 0(x2) # load 0xae866407 from memory into f5
fnmsub.s f20, f25, f11, f5, dyn # perform operation
fnmsub.s f20, f25, f11, f5, rdn # perform operation
fnmsub.s f20, f25, f11, f5, rmm # perform operation
fnmsub.s f20, f25, f11, f5, rne # perform operation
fnmsub.s f20, f25, f11, f5, rtz # perform operation
fnmsub.s f20, f25, f11, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f20, f25, f11, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f20, f25, f11, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f20, f25, f11, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f20, f25, f11, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f20, f25, f11, f5 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0x40000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f21, 0(x2) # load 0x7fffffff from memory into f21
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f13, 0(x2) # load 0x40000000 from memory into f13
la x2, scratch
li x3, 0x2dec2007 # load x3 with value 0x2dec2007
sw x3, 0(x2) # store 0x2dec2007 in memory
flw f22, 0(x2) # load 0x2dec2007 from memory into f22
fnmsub.s f20, f21, f13, f22, dyn # perform operation
fnmsub.s f20, f21, f13, f22, rdn # perform operation
fnmsub.s f20, f21, f13, f22, rmm # perform operation
fnmsub.s f20, f21, f13, f22, rne # perform operation
fnmsub.s f20, f21, f13, f22, rtz # perform operation
fnmsub.s f20, f21, f13, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f20, f21, f13, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f20, f21, f13, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f20, f21, f13, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f20, f21, f13, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f20, f21, f13, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0xc0000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f21, 0(x2) # load 0x7fffffff from memory into f21
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f8, 0(x2) # load 0xc0000000 from memory into f8
la x2, scratch
li x3, 0xc136f495 # load x3 with value 0xc136f495
sw x3, 0(x2) # store 0xc136f495 in memory
flw f22, 0(x2) # load 0xc136f495 from memory into f22
fnmsub.s f20, f21, f8, f22, dyn # perform operation
fnmsub.s f20, f21, f8, f22, rdn # perform operation
fnmsub.s f20, f21, f8, f22, rmm # perform operation
fnmsub.s f20, f21, f8, f22, rne # perform operation
fnmsub.s f20, f21, f8, f22, rtz # perform operation
fnmsub.s f20, f21, f8, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f20, f21, f8, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f20, f21, f8, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f20, f21, f8, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f20, f21, f8, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f20, f21, f8, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0x800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f11, 0(x2) # load 0x7fffffff from memory into f11
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f27, 0(x2) # load 0x00800000 from memory into f27
la x2, scratch
li x3, 0x1be315f0 # load x3 with value 0x1be315f0
sw x3, 0(x2) # store 0x1be315f0 in memory
flw f30, 0(x2) # load 0x1be315f0 from memory into f30
fnmsub.s f25, f11, f27, f30, dyn # perform operation
fnmsub.s f25, f11, f27, f30, rdn # perform operation
fnmsub.s f25, f11, f27, f30, rmm # perform operation
fnmsub.s f25, f11, f27, f30, rne # perform operation
fnmsub.s f25, f11, f27, f30, rtz # perform operation
fnmsub.s f25, f11, f27, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f25, f11, f27, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f25, f11, f27, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f25, f11, f27, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f25, f11, f27, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f25, f11, f27, f30 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0x80800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f30, 0(x2) # load 0x7fffffff from memory into f30
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f9, 0(x2) # load 0x80800000 from memory into f9
la x2, scratch
li x3, 0x905973c1 # load x3 with value 0x905973c1
sw x3, 0(x2) # store 0x905973c1 in memory
flw f24, 0(x2) # load 0x905973c1 from memory into f24
fnmsub.s f14, f30, f9, f24, dyn # perform operation
fnmsub.s f14, f30, f9, f24, rdn # perform operation
fnmsub.s f14, f30, f9, f24, rmm # perform operation
fnmsub.s f14, f30, f9, f24, rne # perform operation
fnmsub.s f14, f30, f9, f24, rtz # perform operation
fnmsub.s f14, f30, f9, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f14, f30, f9, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f14, f30, f9, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f14, f30, f9, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f14, f30, f9, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f14, f30, f9, f24 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0x7f7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f19, 0(x2) # load 0x7fffffff from memory into f19
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f28, 0(x2) # load 0x7f7fffff from memory into f28
la x2, scratch
li x3, 0xd3bb470c # load x3 with value 0xd3bb470c
sw x3, 0(x2) # store 0xd3bb470c in memory
flw f13, 0(x2) # load 0xd3bb470c from memory into f13
fnmsub.s f17, f19, f28, f13, dyn # perform operation
fnmsub.s f17, f19, f28, f13, rdn # perform operation
fnmsub.s f17, f19, f28, f13, rmm # perform operation
fnmsub.s f17, f19, f28, f13, rne # perform operation
fnmsub.s f17, f19, f28, f13, rtz # perform operation
fnmsub.s f17, f19, f28, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f17, f19, f28, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f17, f19, f28, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f17, f19, f28, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f17, f19, f28, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f17, f19, f28, f13 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0xff7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f2, 0(x2) # load 0x7fffffff from memory into f2
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f12, 0(x2) # load 0xff7fffff from memory into f12
la x2, scratch
li x3, 0xd351c290 # load x3 with value 0xd351c290
sw x3, 0(x2) # store 0xd351c290 in memory
flw f6, 0(x2) # load 0xd351c290 from memory into f6
fnmsub.s f19, f2, f12, f6, dyn # perform operation
fnmsub.s f19, f2, f12, f6, rdn # perform operation
fnmsub.s f19, f2, f12, f6, rmm # perform operation
fnmsub.s f19, f2, f12, f6, rne # perform operation
fnmsub.s f19, f2, f12, f6, rtz # perform operation
fnmsub.s f19, f2, f12, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f19, f2, f12, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f19, f2, f12, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f19, f2, f12, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f19, f2, f12, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f19, f2, f12, f6 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0x7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f19, 0(x2) # load 0x7fffffff from memory into f19
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f9, 0(x2) # load 0x007fffff from memory into f9
la x2, scratch
li x3, 0xa8c01dfc # load x3 with value 0xa8c01dfc
sw x3, 0(x2) # store 0xa8c01dfc in memory
flw f12, 0(x2) # load 0xa8c01dfc from memory into f12
fnmsub.s f31, f19, f9, f12, dyn # perform operation
fnmsub.s f31, f19, f9, f12, rdn # perform operation
fnmsub.s f31, f19, f9, f12, rmm # perform operation
fnmsub.s f31, f19, f9, f12, rne # perform operation
fnmsub.s f31, f19, f9, f12, rtz # perform operation
fnmsub.s f31, f19, f9, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f31, f19, f9, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f31, f19, f9, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f31, f19, f9, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f31, f19, f9, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f31, f19, f9, f12 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0x807fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f6, 0(x2) # load 0x7fffffff from memory into f6
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f22, 0(x2) # load 0x807fffff from memory into f22
la x2, scratch
li x3, 0xa8ef85ba # load x3 with value 0xa8ef85ba
sw x3, 0(x2) # store 0xa8ef85ba in memory
flw f27, 0(x2) # load 0xa8ef85ba from memory into f27
fnmsub.s f13, f6, f22, f27, dyn # perform operation
fnmsub.s f13, f6, f22, f27, rdn # perform operation
fnmsub.s f13, f6, f22, f27, rmm # perform operation
fnmsub.s f13, f6, f22, f27, rne # perform operation
fnmsub.s f13, f6, f22, f27, rtz # perform operation
fnmsub.s f13, f6, f22, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f13, f6, f22, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f13, f6, f22, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f13, f6, f22, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f13, f6, f22, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f13, f6, f22, f27 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0x400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f28, 0(x2) # load 0x7fffffff from memory into f28
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f20, 0(x2) # load 0x00400000 from memory into f20
la x2, scratch
li x3, 0xbb6e7eb7 # load x3 with value 0xbb6e7eb7
sw x3, 0(x2) # store 0xbb6e7eb7 in memory
flw f2, 0(x2) # load 0xbb6e7eb7 from memory into f2
fnmsub.s f14, f28, f20, f2, dyn # perform operation
fnmsub.s f14, f28, f20, f2, rdn # perform operation
fnmsub.s f14, f28, f20, f2, rmm # perform operation
fnmsub.s f14, f28, f20, f2, rne # perform operation
fnmsub.s f14, f28, f20, f2, rtz # perform operation
fnmsub.s f14, f28, f20, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f14, f28, f20, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f14, f28, f20, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f14, f28, f20, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f14, f28, f20, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f14, f28, f20, f2 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0x80400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f22, 0(x2) # load 0x7fffffff from memory into f22
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f23, 0(x2) # load 0x80400000 from memory into f23
la x2, scratch
li x3, 0x324aa543 # load x3 with value 0x324aa543
sw x3, 0(x2) # store 0x324aa543 in memory
flw f28, 0(x2) # load 0x324aa543 from memory into f28
fnmsub.s f14, f22, f23, f28, dyn # perform operation
fnmsub.s f14, f22, f23, f28, rdn # perform operation
fnmsub.s f14, f22, f23, f28, rmm # perform operation
fnmsub.s f14, f22, f23, f28, rne # perform operation
fnmsub.s f14, f22, f23, f28, rtz # perform operation
fnmsub.s f14, f22, f23, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f14, f22, f23, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f14, f22, f23, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f14, f22, f23, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f14, f22, f23, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f14, f22, f23, f28 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0x1)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f9, 0(x2) # load 0x7fffffff from memory into f9
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f15, 0(x2) # load 0x00000001 from memory into f15
la x2, scratch
li x3, 0x533a683c # load x3 with value 0x533a683c
sw x3, 0(x2) # store 0x533a683c in memory
flw f21, 0(x2) # load 0x533a683c from memory into f21
fnmsub.s f26, f9, f15, f21, dyn # perform operation
fnmsub.s f26, f9, f15, f21, rdn # perform operation
fnmsub.s f26, f9, f15, f21, rmm # perform operation
fnmsub.s f26, f9, f15, f21, rne # perform operation
fnmsub.s f26, f9, f15, f21, rtz # perform operation
fnmsub.s f26, f9, f15, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f26, f9, f15, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f26, f9, f15, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f26, f9, f15, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f26, f9, f15, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f26, f9, f15, f21 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0x80000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f5, 0(x2) # load 0x7fffffff from memory into f5
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f17, 0(x2) # load 0x80000001 from memory into f17
la x2, scratch
li x3, 0xf0f17762 # load x3 with value 0xf0f17762
sw x3, 0(x2) # store 0xf0f17762 in memory
flw f18, 0(x2) # load 0xf0f17762 from memory into f18
fnmsub.s f23, f5, f17, f18, dyn # perform operation
fnmsub.s f23, f5, f17, f18, rdn # perform operation
fnmsub.s f23, f5, f17, f18, rmm # perform operation
fnmsub.s f23, f5, f17, f18, rne # perform operation
fnmsub.s f23, f5, f17, f18, rtz # perform operation
fnmsub.s f23, f5, f17, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f23, f5, f17, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f23, f5, f17, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f23, f5, f17, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f23, f5, f17, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f23, f5, f17, f18 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0x7f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f18, 0(x2) # load 0x7fffffff from memory into f18
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f16, 0(x2) # load 0x7f800000 from memory into f16
la x2, scratch
li x3, 0xa12bc0e6 # load x3 with value 0xa12bc0e6
sw x3, 0(x2) # store 0xa12bc0e6 in memory
flw f13, 0(x2) # load 0xa12bc0e6 from memory into f13
fnmsub.s f28, f18, f16, f13, dyn # perform operation
fnmsub.s f28, f18, f16, f13, rdn # perform operation
fnmsub.s f28, f18, f16, f13, rmm # perform operation
fnmsub.s f28, f18, f16, f13, rne # perform operation
fnmsub.s f28, f18, f16, f13, rtz # perform operation
fnmsub.s f28, f18, f16, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f28, f18, f16, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f28, f18, f16, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f28, f18, f16, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f28, f18, f16, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f28, f18, f16, f13 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0xff800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f29, 0(x2) # load 0x7fffffff from memory into f29
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f12, 0(x2) # load 0xff800000 from memory into f12
la x2, scratch
li x3, 0x2e25bb4c # load x3 with value 0x2e25bb4c
sw x3, 0(x2) # store 0x2e25bb4c in memory
flw f22, 0(x2) # load 0x2e25bb4c from memory into f22
fnmsub.s f20, f29, f12, f22, dyn # perform operation
fnmsub.s f20, f29, f12, f22, rdn # perform operation
fnmsub.s f20, f29, f12, f22, rmm # perform operation
fnmsub.s f20, f29, f12, f22, rne # perform operation
fnmsub.s f20, f29, f12, f22, rtz # perform operation
fnmsub.s f20, f29, f12, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f20, f29, f12, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f20, f29, f12, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f20, f29, f12, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f20, f29, f12, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f20, f29, f12, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0x7fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f12, 0(x2) # load 0x7fffffff from memory into f12
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f20, 0(x2) # load 0x7fc00000 from memory into f20
la x2, scratch
li x3, 0x399be06a # load x3 with value 0x399be06a
sw x3, 0(x2) # store 0x399be06a in memory
flw f31, 0(x2) # load 0x399be06a from memory into f31
fnmsub.s f25, f12, f20, f31, dyn # perform operation
fnmsub.s f25, f12, f20, f31, rdn # perform operation
fnmsub.s f25, f12, f20, f31, rmm # perform operation
fnmsub.s f25, f12, f20, f31, rne # perform operation
fnmsub.s f25, f12, f20, f31, rtz # perform operation
fnmsub.s f25, f12, f20, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f25, f12, f20, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f25, f12, f20, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f25, f12, f20, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f25, f12, f20, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f25, f12, f20, f31 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0x7fffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f23, 0(x2) # load 0x7fffffff from memory into f23
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f19, 0(x2) # load 0x7fffffff from memory into f19
la x2, scratch
li x3, 0xabb29817 # load x3 with value 0xabb29817
sw x3, 0(x2) # store 0xabb29817 in memory
flw f2, 0(x2) # load 0xabb29817 from memory into f2
fnmsub.s f13, f23, f19, f2, dyn # perform operation
fnmsub.s f13, f23, f19, f2, rdn # perform operation
fnmsub.s f13, f23, f19, f2, rmm # perform operation
fnmsub.s f13, f23, f19, f2, rne # perform operation
fnmsub.s f13, f23, f19, f2, rtz # perform operation
fnmsub.s f13, f23, f19, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f13, f23, f19, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f13, f23, f19, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f13, f23, f19, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f13, f23, f19, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f13, f23, f19, f2 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0xffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f25, 0(x2) # load 0x7fffffff from memory into f25
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f30, 0(x2) # load 0xffffffff from memory into f30
la x2, scratch
li x3, 0xf0774e1b # load x3 with value 0xf0774e1b
sw x3, 0(x2) # store 0xf0774e1b in memory
flw f18, 0(x2) # load 0xf0774e1b from memory into f18
fnmsub.s f31, f25, f30, f18, dyn # perform operation
fnmsub.s f31, f25, f30, f18, rdn # perform operation
fnmsub.s f31, f25, f30, f18, rmm # perform operation
fnmsub.s f31, f25, f30, f18, rne # perform operation
fnmsub.s f31, f25, f30, f18, rtz # perform operation
fnmsub.s f31, f25, f30, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f31, f25, f30, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f31, f25, f30, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f31, f25, f30, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f31, f25, f30, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f31, f25, f30, f18 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0x7f800001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f27, 0(x2) # load 0x7fffffff from memory into f27
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f2, 0(x2) # load 0x7f800001 from memory into f2
la x2, scratch
li x3, 0x52893fb9 # load x3 with value 0x52893fb9
sw x3, 0(x2) # store 0x52893fb9 in memory
flw f18, 0(x2) # load 0x52893fb9 from memory into f18
fnmsub.s f25, f27, f2, f18, dyn # perform operation
fnmsub.s f25, f27, f2, f18, rdn # perform operation
fnmsub.s f25, f27, f2, f18, rmm # perform operation
fnmsub.s f25, f27, f2, f18, rne # perform operation
fnmsub.s f25, f27, f2, f18, rtz # perform operation
fnmsub.s f25, f27, f2, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f25, f27, f2, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f25, f27, f2, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f25, f27, f2, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f25, f27, f2, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f25, f27, f2, f18 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0x7fbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f26, 0(x2) # load 0x7fffffff from memory into f26
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f15, 0(x2) # load 0x7fbfffff from memory into f15
la x2, scratch
li x3, 0xec73f9a1 # load x3 with value 0xec73f9a1
sw x3, 0(x2) # store 0xec73f9a1 in memory
flw f31, 0(x2) # load 0xec73f9a1 from memory into f31
fnmsub.s f12, f26, f15, f31, dyn # perform operation
fnmsub.s f12, f26, f15, f31, rdn # perform operation
fnmsub.s f12, f26, f15, f31, rmm # perform operation
fnmsub.s f12, f26, f15, f31, rne # perform operation
fnmsub.s f12, f26, f15, f31, rtz # perform operation
fnmsub.s f12, f26, f15, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f12, f26, f15, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f12, f26, f15, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f12, f26, f15, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f12, f26, f15, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f12, f26, f15, f31 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0xffbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f11, 0(x2) # load 0x7fffffff from memory into f11
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f1, 0(x2) # load 0xffbfffff from memory into f1
la x2, scratch
li x3, 0x4e649de3 # load x3 with value 0x4e649de3
sw x3, 0(x2) # store 0x4e649de3 in memory
flw f31, 0(x2) # load 0x4e649de3 from memory into f31
fnmsub.s f26, f11, f1, f31, dyn # perform operation
fnmsub.s f26, f11, f1, f31, rdn # perform operation
fnmsub.s f26, f11, f1, f31, rmm # perform operation
fnmsub.s f26, f11, f1, f31, rne # perform operation
fnmsub.s f26, f11, f1, f31, rtz # perform operation
fnmsub.s f26, f11, f1, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f26, f11, f1, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f26, f11, f1, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f26, f11, f1, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f26, f11, f1, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f26, f11, f1, f31 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0x7ef8654f)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f27, 0(x2) # load 0x7fffffff from memory into f27
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f30, 0(x2) # load 0x7ef8654f from memory into f30
la x2, scratch
li x3, 0x354e5a0e # load x3 with value 0x354e5a0e
sw x3, 0(x2) # store 0x354e5a0e in memory
flw f26, 0(x2) # load 0x354e5a0e from memory into f26
fnmsub.s f21, f27, f30, f26, dyn # perform operation
fnmsub.s f21, f27, f30, f26, rdn # perform operation
fnmsub.s f21, f27, f30, f26, rmm # perform operation
fnmsub.s f21, f27, f30, f26, rne # perform operation
fnmsub.s f21, f27, f30, f26, rtz # perform operation
fnmsub.s f21, f27, f30, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f21, f27, f30, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f21, f27, f30, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f21, f27, f30, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f21, f27, f30, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f21, f27, f30, f26 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0x813d9ab0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f12, 0(x2) # load 0x7fffffff from memory into f12
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f7, 0(x2) # load 0x813d9ab0 from memory into f7
la x2, scratch
li x3, 0xdb5481db # load x3 with value 0xdb5481db
sw x3, 0(x2) # store 0xdb5481db in memory
flw f11, 0(x2) # load 0xdb5481db from memory into f11
fnmsub.s f22, f12, f7, f11, dyn # perform operation
fnmsub.s f22, f12, f7, f11, rdn # perform operation
fnmsub.s f22, f12, f7, f11, rmm # perform operation
fnmsub.s f22, f12, f7, f11, rne # perform operation
fnmsub.s f22, f12, f7, f11, rtz # perform operation
fnmsub.s f22, f12, f7, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f22, f12, f7, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f22, f12, f7, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f22, f12, f7, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f22, f12, f7, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f22, f12, f7, f11 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffffffff fs2 = 0x0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f13, 0(x2) # load 0xffffffff from memory into f13
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f26, 0(x2) # load 0x00000000 from memory into f26
la x2, scratch
li x3, 0x4553e2c5 # load x3 with value 0x4553e2c5
sw x3, 0(x2) # store 0x4553e2c5 in memory
flw f31, 0(x2) # load 0x4553e2c5 from memory into f31
fnmsub.s f29, f13, f26, f31, dyn # perform operation
fnmsub.s f29, f13, f26, f31, rdn # perform operation
fnmsub.s f29, f13, f26, f31, rmm # perform operation
fnmsub.s f29, f13, f26, f31, rne # perform operation
fnmsub.s f29, f13, f26, f31, rtz # perform operation
fnmsub.s f29, f13, f26, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f29, f13, f26, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f29, f13, f26, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f29, f13, f26, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f29, f13, f26, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f29, f13, f26, f31 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffffffff fs2 = 0x80000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f21, 0(x2) # load 0xffffffff from memory into f21
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f28, 0(x2) # load 0x80000000 from memory into f28
la x2, scratch
li x3, 0xbbd8cb80 # load x3 with value 0xbbd8cb80
sw x3, 0(x2) # store 0xbbd8cb80 in memory
flw f24, 0(x2) # load 0xbbd8cb80 from memory into f24
fnmsub.s f25, f21, f28, f24, dyn # perform operation
fnmsub.s f25, f21, f28, f24, rdn # perform operation
fnmsub.s f25, f21, f28, f24, rmm # perform operation
fnmsub.s f25, f21, f28, f24, rne # perform operation
fnmsub.s f25, f21, f28, f24, rtz # perform operation
fnmsub.s f25, f21, f28, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f25, f21, f28, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f25, f21, f28, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f25, f21, f28, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f25, f21, f28, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f25, f21, f28, f24 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffffffff fs2 = 0x3f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f9, 0(x2) # load 0xffffffff from memory into f9
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f6, 0(x2) # load 0x3f800000 from memory into f6
la x2, scratch
li x3, 0x695f31d0 # load x3 with value 0x695f31d0
sw x3, 0(x2) # store 0x695f31d0 in memory
flw f29, 0(x2) # load 0x695f31d0 from memory into f29
fnmsub.s f12, f9, f6, f29, dyn # perform operation
fnmsub.s f12, f9, f6, f29, rdn # perform operation
fnmsub.s f12, f9, f6, f29, rmm # perform operation
fnmsub.s f12, f9, f6, f29, rne # perform operation
fnmsub.s f12, f9, f6, f29, rtz # perform operation
fnmsub.s f12, f9, f6, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f12, f9, f6, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f12, f9, f6, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f12, f9, f6, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f12, f9, f6, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f12, f9, f6, f29 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffffffff fs2 = 0xbf800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f3, 0(x2) # load 0xffffffff from memory into f3
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f9, 0(x2) # load 0xbf800000 from memory into f9
la x2, scratch
li x3, 0xa5fd5a0b # load x3 with value 0xa5fd5a0b
sw x3, 0(x2) # store 0xa5fd5a0b in memory
flw f19, 0(x2) # load 0xa5fd5a0b from memory into f19
fnmsub.s f2, f3, f9, f19, dyn # perform operation
fnmsub.s f2, f3, f9, f19, rdn # perform operation
fnmsub.s f2, f3, f9, f19, rmm # perform operation
fnmsub.s f2, f3, f9, f19, rne # perform operation
fnmsub.s f2, f3, f9, f19, rtz # perform operation
fnmsub.s f2, f3, f9, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f2, f3, f9, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f2, f3, f9, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f2, f3, f9, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f2, f3, f9, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f2, f3, f9, f19 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffffffff fs2 = 0x3fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f18, 0(x2) # load 0xffffffff from memory into f18
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f31, 0(x2) # load 0x3fc00000 from memory into f31
la x2, scratch
li x3, 0x923728c9 # load x3 with value 0x923728c9
sw x3, 0(x2) # store 0x923728c9 in memory
flw f22, 0(x2) # load 0x923728c9 from memory into f22
fnmsub.s f13, f18, f31, f22, dyn # perform operation
fnmsub.s f13, f18, f31, f22, rdn # perform operation
fnmsub.s f13, f18, f31, f22, rmm # perform operation
fnmsub.s f13, f18, f31, f22, rne # perform operation
fnmsub.s f13, f18, f31, f22, rtz # perform operation
fnmsub.s f13, f18, f31, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f13, f18, f31, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f13, f18, f31, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f13, f18, f31, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f13, f18, f31, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f13, f18, f31, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffffffff fs2 = 0xbfc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f17, 0(x2) # load 0xffffffff from memory into f17
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f29, 0(x2) # load 0xbfc00000 from memory into f29
la x2, scratch
li x3, 0xebc7b0f4 # load x3 with value 0xebc7b0f4
sw x3, 0(x2) # store 0xebc7b0f4 in memory
flw f31, 0(x2) # load 0xebc7b0f4 from memory into f31
fnmsub.s f16, f17, f29, f31, dyn # perform operation
fnmsub.s f16, f17, f29, f31, rdn # perform operation
fnmsub.s f16, f17, f29, f31, rmm # perform operation
fnmsub.s f16, f17, f29, f31, rne # perform operation
fnmsub.s f16, f17, f29, f31, rtz # perform operation
fnmsub.s f16, f17, f29, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f16, f17, f29, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f16, f17, f29, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f16, f17, f29, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f16, f17, f29, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f16, f17, f29, f31 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffffffff fs2 = 0x40000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f22, 0(x2) # load 0xffffffff from memory into f22
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f6, 0(x2) # load 0x40000000 from memory into f6
la x2, scratch
li x3, 0x03d4137f # load x3 with value 0x03d4137f
sw x3, 0(x2) # store 0x03d4137f in memory
flw f29, 0(x2) # load 0x03d4137f from memory into f29
fnmsub.s f12, f22, f6, f29, dyn # perform operation
fnmsub.s f12, f22, f6, f29, rdn # perform operation
fnmsub.s f12, f22, f6, f29, rmm # perform operation
fnmsub.s f12, f22, f6, f29, rne # perform operation
fnmsub.s f12, f22, f6, f29, rtz # perform operation
fnmsub.s f12, f22, f6, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f12, f22, f6, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f12, f22, f6, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f12, f22, f6, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f12, f22, f6, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f12, f22, f6, f29 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffffffff fs2 = 0xc0000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f21, 0(x2) # load 0xffffffff from memory into f21
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f20, 0(x2) # load 0xc0000000 from memory into f20
la x2, scratch
li x3, 0xb898ca1e # load x3 with value 0xb898ca1e
sw x3, 0(x2) # store 0xb898ca1e in memory
flw f2, 0(x2) # load 0xb898ca1e from memory into f2
fnmsub.s f3, f21, f20, f2, dyn # perform operation
fnmsub.s f3, f21, f20, f2, rdn # perform operation
fnmsub.s f3, f21, f20, f2, rmm # perform operation
fnmsub.s f3, f21, f20, f2, rne # perform operation
fnmsub.s f3, f21, f20, f2, rtz # perform operation
fnmsub.s f3, f21, f20, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f3, f21, f20, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f3, f21, f20, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f3, f21, f20, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f3, f21, f20, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f3, f21, f20, f2 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffffffff fs2 = 0x800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f26, 0(x2) # load 0xffffffff from memory into f26
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f28, 0(x2) # load 0x00800000 from memory into f28
la x2, scratch
li x3, 0x502d2a8b # load x3 with value 0x502d2a8b
sw x3, 0(x2) # store 0x502d2a8b in memory
flw f12, 0(x2) # load 0x502d2a8b from memory into f12
fnmsub.s f3, f26, f28, f12, dyn # perform operation
fnmsub.s f3, f26, f28, f12, rdn # perform operation
fnmsub.s f3, f26, f28, f12, rmm # perform operation
fnmsub.s f3, f26, f28, f12, rne # perform operation
fnmsub.s f3, f26, f28, f12, rtz # perform operation
fnmsub.s f3, f26, f28, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f3, f26, f28, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f3, f26, f28, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f3, f26, f28, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f3, f26, f28, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f3, f26, f28, f12 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffffffff fs2 = 0x80800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f26, 0(x2) # load 0xffffffff from memory into f26
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f8, 0(x2) # load 0x80800000 from memory into f8
la x2, scratch
li x3, 0x40487463 # load x3 with value 0x40487463
sw x3, 0(x2) # store 0x40487463 in memory
flw f6, 0(x2) # load 0x40487463 from memory into f6
fnmsub.s f9, f26, f8, f6, dyn # perform operation
fnmsub.s f9, f26, f8, f6, rdn # perform operation
fnmsub.s f9, f26, f8, f6, rmm # perform operation
fnmsub.s f9, f26, f8, f6, rne # perform operation
fnmsub.s f9, f26, f8, f6, rtz # perform operation
fnmsub.s f9, f26, f8, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f9, f26, f8, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f9, f26, f8, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f9, f26, f8, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f9, f26, f8, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f9, f26, f8, f6 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffffffff fs2 = 0x7f7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f1, 0(x2) # load 0xffffffff from memory into f1
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f14, 0(x2) # load 0x7f7fffff from memory into f14
la x2, scratch
li x3, 0x4aa12e90 # load x3 with value 0x4aa12e90
sw x3, 0(x2) # store 0x4aa12e90 in memory
flw f31, 0(x2) # load 0x4aa12e90 from memory into f31
fnmsub.s f30, f1, f14, f31, dyn # perform operation
fnmsub.s f30, f1, f14, f31, rdn # perform operation
fnmsub.s f30, f1, f14, f31, rmm # perform operation
fnmsub.s f30, f1, f14, f31, rne # perform operation
fnmsub.s f30, f1, f14, f31, rtz # perform operation
fnmsub.s f30, f1, f14, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f30, f1, f14, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f30, f1, f14, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f30, f1, f14, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f30, f1, f14, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f30, f1, f14, f31 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffffffff fs2 = 0xff7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f5, 0(x2) # load 0xffffffff from memory into f5
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f28, 0(x2) # load 0xff7fffff from memory into f28
la x2, scratch
li x3, 0x1ebd1c4f # load x3 with value 0x1ebd1c4f
sw x3, 0(x2) # store 0x1ebd1c4f in memory
flw f20, 0(x2) # load 0x1ebd1c4f from memory into f20
fnmsub.s f23, f5, f28, f20, dyn # perform operation
fnmsub.s f23, f5, f28, f20, rdn # perform operation
fnmsub.s f23, f5, f28, f20, rmm # perform operation
fnmsub.s f23, f5, f28, f20, rne # perform operation
fnmsub.s f23, f5, f28, f20, rtz # perform operation
fnmsub.s f23, f5, f28, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f23, f5, f28, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f23, f5, f28, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f23, f5, f28, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f23, f5, f28, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f23, f5, f28, f20 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffffffff fs2 = 0x7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f18, 0(x2) # load 0xffffffff from memory into f18
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f3, 0(x2) # load 0x007fffff from memory into f3
la x2, scratch
li x3, 0x31d36a28 # load x3 with value 0x31d36a28
sw x3, 0(x2) # store 0x31d36a28 in memory
flw f19, 0(x2) # load 0x31d36a28 from memory into f19
fnmsub.s f23, f18, f3, f19, dyn # perform operation
fnmsub.s f23, f18, f3, f19, rdn # perform operation
fnmsub.s f23, f18, f3, f19, rmm # perform operation
fnmsub.s f23, f18, f3, f19, rne # perform operation
fnmsub.s f23, f18, f3, f19, rtz # perform operation
fnmsub.s f23, f18, f3, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f23, f18, f3, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f23, f18, f3, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f23, f18, f3, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f23, f18, f3, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f23, f18, f3, f19 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffffffff fs2 = 0x807fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f18, 0(x2) # load 0xffffffff from memory into f18
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f2, 0(x2) # load 0x807fffff from memory into f2
la x2, scratch
li x3, 0x22c50023 # load x3 with value 0x22c50023
sw x3, 0(x2) # store 0x22c50023 in memory
flw f5, 0(x2) # load 0x22c50023 from memory into f5
fnmsub.s f25, f18, f2, f5, dyn # perform operation
fnmsub.s f25, f18, f2, f5, rdn # perform operation
fnmsub.s f25, f18, f2, f5, rmm # perform operation
fnmsub.s f25, f18, f2, f5, rne # perform operation
fnmsub.s f25, f18, f2, f5, rtz # perform operation
fnmsub.s f25, f18, f2, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f25, f18, f2, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f25, f18, f2, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f25, f18, f2, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f25, f18, f2, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f25, f18, f2, f5 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffffffff fs2 = 0x400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f24, 0(x2) # load 0xffffffff from memory into f24
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f23, 0(x2) # load 0x00400000 from memory into f23
la x2, scratch
li x3, 0x0022f879 # load x3 with value 0x0022f879
sw x3, 0(x2) # store 0x0022f879 in memory
flw f28, 0(x2) # load 0x0022f879 from memory into f28
fnmsub.s f30, f24, f23, f28, dyn # perform operation
fnmsub.s f30, f24, f23, f28, rdn # perform operation
fnmsub.s f30, f24, f23, f28, rmm # perform operation
fnmsub.s f30, f24, f23, f28, rne # perform operation
fnmsub.s f30, f24, f23, f28, rtz # perform operation
fnmsub.s f30, f24, f23, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f30, f24, f23, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f30, f24, f23, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f30, f24, f23, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f30, f24, f23, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f30, f24, f23, f28 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffffffff fs2 = 0x80400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f24, 0(x2) # load 0xffffffff from memory into f24
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f27, 0(x2) # load 0x80400000 from memory into f27
la x2, scratch
li x3, 0x372e2d01 # load x3 with value 0x372e2d01
sw x3, 0(x2) # store 0x372e2d01 in memory
flw f17, 0(x2) # load 0x372e2d01 from memory into f17
fnmsub.s f28, f24, f27, f17, dyn # perform operation
fnmsub.s f28, f24, f27, f17, rdn # perform operation
fnmsub.s f28, f24, f27, f17, rmm # perform operation
fnmsub.s f28, f24, f27, f17, rne # perform operation
fnmsub.s f28, f24, f27, f17, rtz # perform operation
fnmsub.s f28, f24, f27, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f28, f24, f27, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f28, f24, f27, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f28, f24, f27, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f28, f24, f27, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f28, f24, f27, f17 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffffffff fs2 = 0x1)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f18, 0(x2) # load 0xffffffff from memory into f18
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f11, 0(x2) # load 0x00000001 from memory into f11
la x2, scratch
li x3, 0xf9780d2f # load x3 with value 0xf9780d2f
sw x3, 0(x2) # store 0xf9780d2f in memory
flw f10, 0(x2) # load 0xf9780d2f from memory into f10
fnmsub.s f21, f18, f11, f10, dyn # perform operation
fnmsub.s f21, f18, f11, f10, rdn # perform operation
fnmsub.s f21, f18, f11, f10, rmm # perform operation
fnmsub.s f21, f18, f11, f10, rne # perform operation
fnmsub.s f21, f18, f11, f10, rtz # perform operation
fnmsub.s f21, f18, f11, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f21, f18, f11, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f21, f18, f11, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f21, f18, f11, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f21, f18, f11, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f21, f18, f11, f10 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffffffff fs2 = 0x80000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f14, 0(x2) # load 0xffffffff from memory into f14
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f20, 0(x2) # load 0x80000001 from memory into f20
la x2, scratch
li x3, 0xa48a5f48 # load x3 with value 0xa48a5f48
sw x3, 0(x2) # store 0xa48a5f48 in memory
flw f16, 0(x2) # load 0xa48a5f48 from memory into f16
fnmsub.s f21, f14, f20, f16, dyn # perform operation
fnmsub.s f21, f14, f20, f16, rdn # perform operation
fnmsub.s f21, f14, f20, f16, rmm # perform operation
fnmsub.s f21, f14, f20, f16, rne # perform operation
fnmsub.s f21, f14, f20, f16, rtz # perform operation
fnmsub.s f21, f14, f20, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f21, f14, f20, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f21, f14, f20, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f21, f14, f20, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f21, f14, f20, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f21, f14, f20, f16 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffffffff fs2 = 0x7f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f26, 0(x2) # load 0xffffffff from memory into f26
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f23, 0(x2) # load 0x7f800000 from memory into f23
la x2, scratch
li x3, 0x9408e9db # load x3 with value 0x9408e9db
sw x3, 0(x2) # store 0x9408e9db in memory
flw f19, 0(x2) # load 0x9408e9db from memory into f19
fnmsub.s f6, f26, f23, f19, dyn # perform operation
fnmsub.s f6, f26, f23, f19, rdn # perform operation
fnmsub.s f6, f26, f23, f19, rmm # perform operation
fnmsub.s f6, f26, f23, f19, rne # perform operation
fnmsub.s f6, f26, f23, f19, rtz # perform operation
fnmsub.s f6, f26, f23, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f6, f26, f23, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f6, f26, f23, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f6, f26, f23, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f6, f26, f23, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f6, f26, f23, f19 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffffffff fs2 = 0xff800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f15, 0(x2) # load 0xffffffff from memory into f15
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f28, 0(x2) # load 0xff800000 from memory into f28
la x2, scratch
li x3, 0xf39a5e98 # load x3 with value 0xf39a5e98
sw x3, 0(x2) # store 0xf39a5e98 in memory
flw f5, 0(x2) # load 0xf39a5e98 from memory into f5
fnmsub.s f9, f15, f28, f5, dyn # perform operation
fnmsub.s f9, f15, f28, f5, rdn # perform operation
fnmsub.s f9, f15, f28, f5, rmm # perform operation
fnmsub.s f9, f15, f28, f5, rne # perform operation
fnmsub.s f9, f15, f28, f5, rtz # perform operation
fnmsub.s f9, f15, f28, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f9, f15, f28, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f9, f15, f28, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f9, f15, f28, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f9, f15, f28, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f9, f15, f28, f5 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffffffff fs2 = 0x7fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f6, 0(x2) # load 0xffffffff from memory into f6
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f2, 0(x2) # load 0x7fc00000 from memory into f2
la x2, scratch
li x3, 0x513077ac # load x3 with value 0x513077ac
sw x3, 0(x2) # store 0x513077ac in memory
flw f18, 0(x2) # load 0x513077ac from memory into f18
fnmsub.s f12, f6, f2, f18, dyn # perform operation
fnmsub.s f12, f6, f2, f18, rdn # perform operation
fnmsub.s f12, f6, f2, f18, rmm # perform operation
fnmsub.s f12, f6, f2, f18, rne # perform operation
fnmsub.s f12, f6, f2, f18, rtz # perform operation
fnmsub.s f12, f6, f2, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f12, f6, f2, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f12, f6, f2, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f12, f6, f2, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f12, f6, f2, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f12, f6, f2, f18 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffffffff fs2 = 0x7fffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f5, 0(x2) # load 0xffffffff from memory into f5
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f25, 0(x2) # load 0x7fffffff from memory into f25
la x2, scratch
li x3, 0x2abcf2a8 # load x3 with value 0x2abcf2a8
sw x3, 0(x2) # store 0x2abcf2a8 in memory
flw f17, 0(x2) # load 0x2abcf2a8 from memory into f17
fnmsub.s f18, f5, f25, f17, dyn # perform operation
fnmsub.s f18, f5, f25, f17, rdn # perform operation
fnmsub.s f18, f5, f25, f17, rmm # perform operation
fnmsub.s f18, f5, f25, f17, rne # perform operation
fnmsub.s f18, f5, f25, f17, rtz # perform operation
fnmsub.s f18, f5, f25, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f18, f5, f25, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f18, f5, f25, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f18, f5, f25, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f18, f5, f25, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f18, f5, f25, f17 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffffffff fs2 = 0xffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f3, 0(x2) # load 0xffffffff from memory into f3
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f10, 0(x2) # load 0xffffffff from memory into f10
la x2, scratch
li x3, 0x32400396 # load x3 with value 0x32400396
sw x3, 0(x2) # store 0x32400396 in memory
flw f28, 0(x2) # load 0x32400396 from memory into f28
fnmsub.s f5, f3, f10, f28, dyn # perform operation
fnmsub.s f5, f3, f10, f28, rdn # perform operation
fnmsub.s f5, f3, f10, f28, rmm # perform operation
fnmsub.s f5, f3, f10, f28, rne # perform operation
fnmsub.s f5, f3, f10, f28, rtz # perform operation
fnmsub.s f5, f3, f10, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f5, f3, f10, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f5, f3, f10, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f5, f3, f10, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f5, f3, f10, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f5, f3, f10, f28 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffffffff fs2 = 0x7f800001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f3, 0(x2) # load 0xffffffff from memory into f3
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f8, 0(x2) # load 0x7f800001 from memory into f8
la x2, scratch
li x3, 0xb459b914 # load x3 with value 0xb459b914
sw x3, 0(x2) # store 0xb459b914 in memory
flw f10, 0(x2) # load 0xb459b914 from memory into f10
fnmsub.s f21, f3, f8, f10, dyn # perform operation
fnmsub.s f21, f3, f8, f10, rdn # perform operation
fnmsub.s f21, f3, f8, f10, rmm # perform operation
fnmsub.s f21, f3, f8, f10, rne # perform operation
fnmsub.s f21, f3, f8, f10, rtz # perform operation
fnmsub.s f21, f3, f8, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f21, f3, f8, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f21, f3, f8, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f21, f3, f8, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f21, f3, f8, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f21, f3, f8, f10 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffffffff fs2 = 0x7fbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f20, 0(x2) # load 0xffffffff from memory into f20
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f18, 0(x2) # load 0x7fbfffff from memory into f18
la x2, scratch
li x3, 0xcc6405eb # load x3 with value 0xcc6405eb
sw x3, 0(x2) # store 0xcc6405eb in memory
flw f29, 0(x2) # load 0xcc6405eb from memory into f29
fnmsub.s f9, f20, f18, f29, dyn # perform operation
fnmsub.s f9, f20, f18, f29, rdn # perform operation
fnmsub.s f9, f20, f18, f29, rmm # perform operation
fnmsub.s f9, f20, f18, f29, rne # perform operation
fnmsub.s f9, f20, f18, f29, rtz # perform operation
fnmsub.s f9, f20, f18, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f9, f20, f18, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f9, f20, f18, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f9, f20, f18, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f9, f20, f18, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f9, f20, f18, f29 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffffffff fs2 = 0xffbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f19, 0(x2) # load 0xffffffff from memory into f19
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f6, 0(x2) # load 0xffbfffff from memory into f6
la x2, scratch
li x3, 0x5dc4b63c # load x3 with value 0x5dc4b63c
sw x3, 0(x2) # store 0x5dc4b63c in memory
flw f10, 0(x2) # load 0x5dc4b63c from memory into f10
fnmsub.s f25, f19, f6, f10, dyn # perform operation
fnmsub.s f25, f19, f6, f10, rdn # perform operation
fnmsub.s f25, f19, f6, f10, rmm # perform operation
fnmsub.s f25, f19, f6, f10, rne # perform operation
fnmsub.s f25, f19, f6, f10, rtz # perform operation
fnmsub.s f25, f19, f6, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f25, f19, f6, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f25, f19, f6, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f25, f19, f6, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f25, f19, f6, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f25, f19, f6, f10 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffffffff fs2 = 0x7ef8654f)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f31, 0(x2) # load 0xffffffff from memory into f31
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f5, 0(x2) # load 0x7ef8654f from memory into f5
la x2, scratch
li x3, 0x35dffe88 # load x3 with value 0x35dffe88
sw x3, 0(x2) # store 0x35dffe88 in memory
flw f30, 0(x2) # load 0x35dffe88 from memory into f30
fnmsub.s f8, f31, f5, f30, dyn # perform operation
fnmsub.s f8, f31, f5, f30, rdn # perform operation
fnmsub.s f8, f31, f5, f30, rmm # perform operation
fnmsub.s f8, f31, f5, f30, rne # perform operation
fnmsub.s f8, f31, f5, f30, rtz # perform operation
fnmsub.s f8, f31, f5, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f8, f31, f5, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f8, f31, f5, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f8, f31, f5, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f8, f31, f5, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f8, f31, f5, f30 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffffffff fs2 = 0x813d9ab0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f31, 0(x2) # load 0xffffffff from memory into f31
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f22, 0(x2) # load 0x813d9ab0 from memory into f22
la x2, scratch
li x3, 0xb6cb008e # load x3 with value 0xb6cb008e
sw x3, 0(x2) # store 0xb6cb008e in memory
flw f10, 0(x2) # load 0xb6cb008e from memory into f10
fnmsub.s f28, f31, f22, f10, dyn # perform operation
fnmsub.s f28, f31, f22, f10, rdn # perform operation
fnmsub.s f28, f31, f22, f10, rmm # perform operation
fnmsub.s f28, f31, f22, f10, rne # perform operation
fnmsub.s f28, f31, f22, f10, rtz # perform operation
fnmsub.s f28, f31, f22, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f28, f31, f22, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f28, f31, f22, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f28, f31, f22, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f28, f31, f22, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f28, f31, f22, f10 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0x0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f15, 0(x2) # load 0x7f800001 from memory into f15
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f13, 0(x2) # load 0x00000000 from memory into f13
la x2, scratch
li x3, 0x70b70180 # load x3 with value 0x70b70180
sw x3, 0(x2) # store 0x70b70180 in memory
flw f10, 0(x2) # load 0x70b70180 from memory into f10
fnmsub.s f31, f15, f13, f10, dyn # perform operation
fnmsub.s f31, f15, f13, f10, rdn # perform operation
fnmsub.s f31, f15, f13, f10, rmm # perform operation
fnmsub.s f31, f15, f13, f10, rne # perform operation
fnmsub.s f31, f15, f13, f10, rtz # perform operation
fnmsub.s f31, f15, f13, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f31, f15, f13, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f31, f15, f13, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f31, f15, f13, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f31, f15, f13, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f31, f15, f13, f10 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0x80000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f24, 0(x2) # load 0x7f800001 from memory into f24
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f14, 0(x2) # load 0x80000000 from memory into f14
la x2, scratch
li x3, 0x711dec28 # load x3 with value 0x711dec28
sw x3, 0(x2) # store 0x711dec28 in memory
flw f9, 0(x2) # load 0x711dec28 from memory into f9
fnmsub.s f18, f24, f14, f9, dyn # perform operation
fnmsub.s f18, f24, f14, f9, rdn # perform operation
fnmsub.s f18, f24, f14, f9, rmm # perform operation
fnmsub.s f18, f24, f14, f9, rne # perform operation
fnmsub.s f18, f24, f14, f9, rtz # perform operation
fnmsub.s f18, f24, f14, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f18, f24, f14, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f18, f24, f14, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f18, f24, f14, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f18, f24, f14, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f18, f24, f14, f9 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0x3f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f27, 0(x2) # load 0x7f800001 from memory into f27
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f13, 0(x2) # load 0x3f800000 from memory into f13
la x2, scratch
li x3, 0x23c68dd2 # load x3 with value 0x23c68dd2
sw x3, 0(x2) # store 0x23c68dd2 in memory
flw f29, 0(x2) # load 0x23c68dd2 from memory into f29
fnmsub.s f5, f27, f13, f29, dyn # perform operation
fnmsub.s f5, f27, f13, f29, rdn # perform operation
fnmsub.s f5, f27, f13, f29, rmm # perform operation
fnmsub.s f5, f27, f13, f29, rne # perform operation
fnmsub.s f5, f27, f13, f29, rtz # perform operation
fnmsub.s f5, f27, f13, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f5, f27, f13, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f5, f27, f13, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f5, f27, f13, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f5, f27, f13, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f5, f27, f13, f29 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0xbf800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f8, 0(x2) # load 0x7f800001 from memory into f8
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f2, 0(x2) # load 0xbf800000 from memory into f2
la x2, scratch
li x3, 0x9b5cf23c # load x3 with value 0x9b5cf23c
sw x3, 0(x2) # store 0x9b5cf23c in memory
flw f22, 0(x2) # load 0x9b5cf23c from memory into f22
fnmsub.s f1, f8, f2, f22, dyn # perform operation
fnmsub.s f1, f8, f2, f22, rdn # perform operation
fnmsub.s f1, f8, f2, f22, rmm # perform operation
fnmsub.s f1, f8, f2, f22, rne # perform operation
fnmsub.s f1, f8, f2, f22, rtz # perform operation
fnmsub.s f1, f8, f2, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f1, f8, f2, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f1, f8, f2, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f1, f8, f2, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f1, f8, f2, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f1, f8, f2, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0x3fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f8, 0(x2) # load 0x7f800001 from memory into f8
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f10, 0(x2) # load 0x3fc00000 from memory into f10
la x2, scratch
li x3, 0x2fe92296 # load x3 with value 0x2fe92296
sw x3, 0(x2) # store 0x2fe92296 in memory
flw f31, 0(x2) # load 0x2fe92296 from memory into f31
fnmsub.s f29, f8, f10, f31, dyn # perform operation
fnmsub.s f29, f8, f10, f31, rdn # perform operation
fnmsub.s f29, f8, f10, f31, rmm # perform operation
fnmsub.s f29, f8, f10, f31, rne # perform operation
fnmsub.s f29, f8, f10, f31, rtz # perform operation
fnmsub.s f29, f8, f10, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f29, f8, f10, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f29, f8, f10, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f29, f8, f10, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f29, f8, f10, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f29, f8, f10, f31 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0xbfc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f13, 0(x2) # load 0x7f800001 from memory into f13
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f5, 0(x2) # load 0xbfc00000 from memory into f5
la x2, scratch
li x3, 0x07862603 # load x3 with value 0x07862603
sw x3, 0(x2) # store 0x07862603 in memory
flw f19, 0(x2) # load 0x07862603 from memory into f19
fnmsub.s f20, f13, f5, f19, dyn # perform operation
fnmsub.s f20, f13, f5, f19, rdn # perform operation
fnmsub.s f20, f13, f5, f19, rmm # perform operation
fnmsub.s f20, f13, f5, f19, rne # perform operation
fnmsub.s f20, f13, f5, f19, rtz # perform operation
fnmsub.s f20, f13, f5, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f20, f13, f5, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f20, f13, f5, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f20, f13, f5, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f20, f13, f5, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f20, f13, f5, f19 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0x40000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f14, 0(x2) # load 0x7f800001 from memory into f14
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f19, 0(x2) # load 0x40000000 from memory into f19
la x2, scratch
li x3, 0xc2f30365 # load x3 with value 0xc2f30365
sw x3, 0(x2) # store 0xc2f30365 in memory
flw f25, 0(x2) # load 0xc2f30365 from memory into f25
fnmsub.s f8, f14, f19, f25, dyn # perform operation
fnmsub.s f8, f14, f19, f25, rdn # perform operation
fnmsub.s f8, f14, f19, f25, rmm # perform operation
fnmsub.s f8, f14, f19, f25, rne # perform operation
fnmsub.s f8, f14, f19, f25, rtz # perform operation
fnmsub.s f8, f14, f19, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f8, f14, f19, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f8, f14, f19, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f8, f14, f19, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f8, f14, f19, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f8, f14, f19, f25 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0xc0000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f30, 0(x2) # load 0x7f800001 from memory into f30
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f24, 0(x2) # load 0xc0000000 from memory into f24
la x2, scratch
li x3, 0x89e445ee # load x3 with value 0x89e445ee
sw x3, 0(x2) # store 0x89e445ee in memory
flw f31, 0(x2) # load 0x89e445ee from memory into f31
fnmsub.s f26, f30, f24, f31, dyn # perform operation
fnmsub.s f26, f30, f24, f31, rdn # perform operation
fnmsub.s f26, f30, f24, f31, rmm # perform operation
fnmsub.s f26, f30, f24, f31, rne # perform operation
fnmsub.s f26, f30, f24, f31, rtz # perform operation
fnmsub.s f26, f30, f24, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f26, f30, f24, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f26, f30, f24, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f26, f30, f24, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f26, f30, f24, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f26, f30, f24, f31 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0x800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f12, 0(x2) # load 0x7f800001 from memory into f12
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f6, 0(x2) # load 0x00800000 from memory into f6
la x2, scratch
li x3, 0xb249668b # load x3 with value 0xb249668b
sw x3, 0(x2) # store 0xb249668b in memory
flw f18, 0(x2) # load 0xb249668b from memory into f18
fnmsub.s f27, f12, f6, f18, dyn # perform operation
fnmsub.s f27, f12, f6, f18, rdn # perform operation
fnmsub.s f27, f12, f6, f18, rmm # perform operation
fnmsub.s f27, f12, f6, f18, rne # perform operation
fnmsub.s f27, f12, f6, f18, rtz # perform operation
fnmsub.s f27, f12, f6, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f27, f12, f6, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f27, f12, f6, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f27, f12, f6, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f27, f12, f6, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f27, f12, f6, f18 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0x80800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f26, 0(x2) # load 0x7f800001 from memory into f26
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f25, 0(x2) # load 0x80800000 from memory into f25
la x2, scratch
li x3, 0x0224ab76 # load x3 with value 0x0224ab76
sw x3, 0(x2) # store 0x0224ab76 in memory
flw f28, 0(x2) # load 0x0224ab76 from memory into f28
fnmsub.s f16, f26, f25, f28, dyn # perform operation
fnmsub.s f16, f26, f25, f28, rdn # perform operation
fnmsub.s f16, f26, f25, f28, rmm # perform operation
fnmsub.s f16, f26, f25, f28, rne # perform operation
fnmsub.s f16, f26, f25, f28, rtz # perform operation
fnmsub.s f16, f26, f25, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f16, f26, f25, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f16, f26, f25, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f16, f26, f25, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f16, f26, f25, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f16, f26, f25, f28 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0x7f7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f12, 0(x2) # load 0x7f800001 from memory into f12
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f30, 0(x2) # load 0x7f7fffff from memory into f30
la x2, scratch
li x3, 0x82ce8810 # load x3 with value 0x82ce8810
sw x3, 0(x2) # store 0x82ce8810 in memory
flw f3, 0(x2) # load 0x82ce8810 from memory into f3
fnmsub.s f28, f12, f30, f3, dyn # perform operation
fnmsub.s f28, f12, f30, f3, rdn # perform operation
fnmsub.s f28, f12, f30, f3, rmm # perform operation
fnmsub.s f28, f12, f30, f3, rne # perform operation
fnmsub.s f28, f12, f30, f3, rtz # perform operation
fnmsub.s f28, f12, f30, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f28, f12, f30, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f28, f12, f30, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f28, f12, f30, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f28, f12, f30, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f28, f12, f30, f3 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0xff7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f13, 0(x2) # load 0x7f800001 from memory into f13
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f3, 0(x2) # load 0xff7fffff from memory into f3
la x2, scratch
li x3, 0xd90f452f # load x3 with value 0xd90f452f
sw x3, 0(x2) # store 0xd90f452f in memory
flw f15, 0(x2) # load 0xd90f452f from memory into f15
fnmsub.s f26, f13, f3, f15, dyn # perform operation
fnmsub.s f26, f13, f3, f15, rdn # perform operation
fnmsub.s f26, f13, f3, f15, rmm # perform operation
fnmsub.s f26, f13, f3, f15, rne # perform operation
fnmsub.s f26, f13, f3, f15, rtz # perform operation
fnmsub.s f26, f13, f3, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f26, f13, f3, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f26, f13, f3, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f26, f13, f3, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f26, f13, f3, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f26, f13, f3, f15 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0x7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f6, 0(x2) # load 0x7f800001 from memory into f6
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f25, 0(x2) # load 0x007fffff from memory into f25
la x2, scratch
li x3, 0xab68192c # load x3 with value 0xab68192c
sw x3, 0(x2) # store 0xab68192c in memory
flw f22, 0(x2) # load 0xab68192c from memory into f22
fnmsub.s f20, f6, f25, f22, dyn # perform operation
fnmsub.s f20, f6, f25, f22, rdn # perform operation
fnmsub.s f20, f6, f25, f22, rmm # perform operation
fnmsub.s f20, f6, f25, f22, rne # perform operation
fnmsub.s f20, f6, f25, f22, rtz # perform operation
fnmsub.s f20, f6, f25, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f20, f6, f25, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f20, f6, f25, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f20, f6, f25, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f20, f6, f25, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f20, f6, f25, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0x807fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f19, 0(x2) # load 0x7f800001 from memory into f19
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f24, 0(x2) # load 0x807fffff from memory into f24
la x2, scratch
li x3, 0xafc4847b # load x3 with value 0xafc4847b
sw x3, 0(x2) # store 0xafc4847b in memory
flw f10, 0(x2) # load 0xafc4847b from memory into f10
fnmsub.s f27, f19, f24, f10, dyn # perform operation
fnmsub.s f27, f19, f24, f10, rdn # perform operation
fnmsub.s f27, f19, f24, f10, rmm # perform operation
fnmsub.s f27, f19, f24, f10, rne # perform operation
fnmsub.s f27, f19, f24, f10, rtz # perform operation
fnmsub.s f27, f19, f24, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f27, f19, f24, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f27, f19, f24, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f27, f19, f24, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f27, f19, f24, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f27, f19, f24, f10 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0x400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f18, 0(x2) # load 0x7f800001 from memory into f18
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f1, 0(x2) # load 0x00400000 from memory into f1
la x2, scratch
li x3, 0x375c1cf7 # load x3 with value 0x375c1cf7
sw x3, 0(x2) # store 0x375c1cf7 in memory
flw f19, 0(x2) # load 0x375c1cf7 from memory into f19
fnmsub.s f12, f18, f1, f19, dyn # perform operation
fnmsub.s f12, f18, f1, f19, rdn # perform operation
fnmsub.s f12, f18, f1, f19, rmm # perform operation
fnmsub.s f12, f18, f1, f19, rne # perform operation
fnmsub.s f12, f18, f1, f19, rtz # perform operation
fnmsub.s f12, f18, f1, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f12, f18, f1, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f12, f18, f1, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f12, f18, f1, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f12, f18, f1, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f12, f18, f1, f19 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0x80400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f1, 0(x2) # load 0x7f800001 from memory into f1
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f19, 0(x2) # load 0x80400000 from memory into f19
la x2, scratch
li x3, 0x96c83581 # load x3 with value 0x96c83581
sw x3, 0(x2) # store 0x96c83581 in memory
flw f15, 0(x2) # load 0x96c83581 from memory into f15
fnmsub.s f3, f1, f19, f15, dyn # perform operation
fnmsub.s f3, f1, f19, f15, rdn # perform operation
fnmsub.s f3, f1, f19, f15, rmm # perform operation
fnmsub.s f3, f1, f19, f15, rne # perform operation
fnmsub.s f3, f1, f19, f15, rtz # perform operation
fnmsub.s f3, f1, f19, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f3, f1, f19, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f3, f1, f19, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f3, f1, f19, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f3, f1, f19, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f3, f1, f19, f15 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0x1)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f30, 0(x2) # load 0x7f800001 from memory into f30
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f2, 0(x2) # load 0x00000001 from memory into f2
la x2, scratch
li x3, 0x2bad9564 # load x3 with value 0x2bad9564
sw x3, 0(x2) # store 0x2bad9564 in memory
flw f15, 0(x2) # load 0x2bad9564 from memory into f15
fnmsub.s f23, f30, f2, f15, dyn # perform operation
fnmsub.s f23, f30, f2, f15, rdn # perform operation
fnmsub.s f23, f30, f2, f15, rmm # perform operation
fnmsub.s f23, f30, f2, f15, rne # perform operation
fnmsub.s f23, f30, f2, f15, rtz # perform operation
fnmsub.s f23, f30, f2, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f23, f30, f2, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f23, f30, f2, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f23, f30, f2, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f23, f30, f2, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f23, f30, f2, f15 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0x80000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f27, 0(x2) # load 0x7f800001 from memory into f27
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f8, 0(x2) # load 0x80000001 from memory into f8
la x2, scratch
li x3, 0xb9ac1067 # load x3 with value 0xb9ac1067
sw x3, 0(x2) # store 0xb9ac1067 in memory
flw f30, 0(x2) # load 0xb9ac1067 from memory into f30
fnmsub.s f12, f27, f8, f30, dyn # perform operation
fnmsub.s f12, f27, f8, f30, rdn # perform operation
fnmsub.s f12, f27, f8, f30, rmm # perform operation
fnmsub.s f12, f27, f8, f30, rne # perform operation
fnmsub.s f12, f27, f8, f30, rtz # perform operation
fnmsub.s f12, f27, f8, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f12, f27, f8, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f12, f27, f8, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f12, f27, f8, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f12, f27, f8, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f12, f27, f8, f30 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0x7f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f10, 0(x2) # load 0x7f800001 from memory into f10
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f14, 0(x2) # load 0x7f800000 from memory into f14
la x2, scratch
li x3, 0xf6583cee # load x3 with value 0xf6583cee
sw x3, 0(x2) # store 0xf6583cee in memory
flw f7, 0(x2) # load 0xf6583cee from memory into f7
fnmsub.s f11, f10, f14, f7, dyn # perform operation
fnmsub.s f11, f10, f14, f7, rdn # perform operation
fnmsub.s f11, f10, f14, f7, rmm # perform operation
fnmsub.s f11, f10, f14, f7, rne # perform operation
fnmsub.s f11, f10, f14, f7, rtz # perform operation
fnmsub.s f11, f10, f14, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f11, f10, f14, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f11, f10, f14, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f11, f10, f14, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f11, f10, f14, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f11, f10, f14, f7 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0xff800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f3, 0(x2) # load 0x7f800001 from memory into f3
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f9, 0(x2) # load 0xff800000 from memory into f9
la x2, scratch
li x3, 0x586f5a57 # load x3 with value 0x586f5a57
sw x3, 0(x2) # store 0x586f5a57 in memory
flw f10, 0(x2) # load 0x586f5a57 from memory into f10
fnmsub.s f22, f3, f9, f10, dyn # perform operation
fnmsub.s f22, f3, f9, f10, rdn # perform operation
fnmsub.s f22, f3, f9, f10, rmm # perform operation
fnmsub.s f22, f3, f9, f10, rne # perform operation
fnmsub.s f22, f3, f9, f10, rtz # perform operation
fnmsub.s f22, f3, f9, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f22, f3, f9, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f22, f3, f9, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f22, f3, f9, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f22, f3, f9, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f22, f3, f9, f10 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0x7fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f14, 0(x2) # load 0x7f800001 from memory into f14
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f13, 0(x2) # load 0x7fc00000 from memory into f13
la x2, scratch
li x3, 0x60095532 # load x3 with value 0x60095532
sw x3, 0(x2) # store 0x60095532 in memory
flw f27, 0(x2) # load 0x60095532 from memory into f27
fnmsub.s f12, f14, f13, f27, dyn # perform operation
fnmsub.s f12, f14, f13, f27, rdn # perform operation
fnmsub.s f12, f14, f13, f27, rmm # perform operation
fnmsub.s f12, f14, f13, f27, rne # perform operation
fnmsub.s f12, f14, f13, f27, rtz # perform operation
fnmsub.s f12, f14, f13, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f12, f14, f13, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f12, f14, f13, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f12, f14, f13, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f12, f14, f13, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f12, f14, f13, f27 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0x7fffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f17, 0(x2) # load 0x7f800001 from memory into f17
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f13, 0(x2) # load 0x7fffffff from memory into f13
la x2, scratch
li x3, 0xb5e31285 # load x3 with value 0xb5e31285
sw x3, 0(x2) # store 0xb5e31285 in memory
flw f24, 0(x2) # load 0xb5e31285 from memory into f24
fnmsub.s f10, f17, f13, f24, dyn # perform operation
fnmsub.s f10, f17, f13, f24, rdn # perform operation
fnmsub.s f10, f17, f13, f24, rmm # perform operation
fnmsub.s f10, f17, f13, f24, rne # perform operation
fnmsub.s f10, f17, f13, f24, rtz # perform operation
fnmsub.s f10, f17, f13, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f10, f17, f13, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f10, f17, f13, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f10, f17, f13, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f10, f17, f13, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f10, f17, f13, f24 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0xffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f16, 0(x2) # load 0x7f800001 from memory into f16
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f20, 0(x2) # load 0xffffffff from memory into f20
la x2, scratch
li x3, 0x0915a1f7 # load x3 with value 0x0915a1f7
sw x3, 0(x2) # store 0x0915a1f7 in memory
flw f17, 0(x2) # load 0x0915a1f7 from memory into f17
fnmsub.s f9, f16, f20, f17, dyn # perform operation
fnmsub.s f9, f16, f20, f17, rdn # perform operation
fnmsub.s f9, f16, f20, f17, rmm # perform operation
fnmsub.s f9, f16, f20, f17, rne # perform operation
fnmsub.s f9, f16, f20, f17, rtz # perform operation
fnmsub.s f9, f16, f20, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f9, f16, f20, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f9, f16, f20, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f9, f16, f20, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f9, f16, f20, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f9, f16, f20, f17 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0x7f800001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f22, 0(x2) # load 0x7f800001 from memory into f22
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f23, 0(x2) # load 0x7f800001 from memory into f23
la x2, scratch
li x3, 0xc8c62332 # load x3 with value 0xc8c62332
sw x3, 0(x2) # store 0xc8c62332 in memory
flw f6, 0(x2) # load 0xc8c62332 from memory into f6
fnmsub.s f7, f22, f23, f6, dyn # perform operation
fnmsub.s f7, f22, f23, f6, rdn # perform operation
fnmsub.s f7, f22, f23, f6, rmm # perform operation
fnmsub.s f7, f22, f23, f6, rne # perform operation
fnmsub.s f7, f22, f23, f6, rtz # perform operation
fnmsub.s f7, f22, f23, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f7, f22, f23, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f7, f22, f23, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f7, f22, f23, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f7, f22, f23, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f7, f22, f23, f6 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0x7fbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f13, 0(x2) # load 0x7f800001 from memory into f13
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f3, 0(x2) # load 0x7fbfffff from memory into f3
la x2, scratch
li x3, 0x46e8c9a0 # load x3 with value 0x46e8c9a0
sw x3, 0(x2) # store 0x46e8c9a0 in memory
flw f28, 0(x2) # load 0x46e8c9a0 from memory into f28
fnmsub.s f15, f13, f3, f28, dyn # perform operation
fnmsub.s f15, f13, f3, f28, rdn # perform operation
fnmsub.s f15, f13, f3, f28, rmm # perform operation
fnmsub.s f15, f13, f3, f28, rne # perform operation
fnmsub.s f15, f13, f3, f28, rtz # perform operation
fnmsub.s f15, f13, f3, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f15, f13, f3, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f15, f13, f3, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f15, f13, f3, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f15, f13, f3, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f15, f13, f3, f28 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0xffbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f3, 0(x2) # load 0x7f800001 from memory into f3
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f6, 0(x2) # load 0xffbfffff from memory into f6
la x2, scratch
li x3, 0x921b308c # load x3 with value 0x921b308c
sw x3, 0(x2) # store 0x921b308c in memory
flw f14, 0(x2) # load 0x921b308c from memory into f14
fnmsub.s f26, f3, f6, f14, dyn # perform operation
fnmsub.s f26, f3, f6, f14, rdn # perform operation
fnmsub.s f26, f3, f6, f14, rmm # perform operation
fnmsub.s f26, f3, f6, f14, rne # perform operation
fnmsub.s f26, f3, f6, f14, rtz # perform operation
fnmsub.s f26, f3, f6, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f26, f3, f6, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f26, f3, f6, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f26, f3, f6, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f26, f3, f6, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f26, f3, f6, f14 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0x7ef8654f)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f7, 0(x2) # load 0x7f800001 from memory into f7
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f19, 0(x2) # load 0x7ef8654f from memory into f19
la x2, scratch
li x3, 0xe16aeef2 # load x3 with value 0xe16aeef2
sw x3, 0(x2) # store 0xe16aeef2 in memory
flw f5, 0(x2) # load 0xe16aeef2 from memory into f5
fnmsub.s f3, f7, f19, f5, dyn # perform operation
fnmsub.s f3, f7, f19, f5, rdn # perform operation
fnmsub.s f3, f7, f19, f5, rmm # perform operation
fnmsub.s f3, f7, f19, f5, rne # perform operation
fnmsub.s f3, f7, f19, f5, rtz # perform operation
fnmsub.s f3, f7, f19, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f3, f7, f19, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f3, f7, f19, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f3, f7, f19, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f3, f7, f19, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f3, f7, f19, f5 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0x813d9ab0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f23, 0(x2) # load 0x7f800001 from memory into f23
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f1, 0(x2) # load 0x813d9ab0 from memory into f1
la x2, scratch
li x3, 0xd823910f # load x3 with value 0xd823910f
sw x3, 0(x2) # store 0xd823910f in memory
flw f22, 0(x2) # load 0xd823910f from memory into f22
fnmsub.s f20, f23, f1, f22, dyn # perform operation
fnmsub.s f20, f23, f1, f22, rdn # perform operation
fnmsub.s f20, f23, f1, f22, rmm # perform operation
fnmsub.s f20, f23, f1, f22, rne # perform operation
fnmsub.s f20, f23, f1, f22, rtz # perform operation
fnmsub.s f20, f23, f1, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f20, f23, f1, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f20, f23, f1, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f20, f23, f1, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f20, f23, f1, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f20, f23, f1, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0x0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f26, 0(x2) # load 0x7fbfffff from memory into f26
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f3, 0(x2) # load 0x00000000 from memory into f3
la x2, scratch
li x3, 0xe2b67a15 # load x3 with value 0xe2b67a15
sw x3, 0(x2) # store 0xe2b67a15 in memory
flw f29, 0(x2) # load 0xe2b67a15 from memory into f29
fnmsub.s f13, f26, f3, f29, dyn # perform operation
fnmsub.s f13, f26, f3, f29, rdn # perform operation
fnmsub.s f13, f26, f3, f29, rmm # perform operation
fnmsub.s f13, f26, f3, f29, rne # perform operation
fnmsub.s f13, f26, f3, f29, rtz # perform operation
fnmsub.s f13, f26, f3, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f13, f26, f3, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f13, f26, f3, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f13, f26, f3, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f13, f26, f3, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f13, f26, f3, f29 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0x80000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f22, 0(x2) # load 0x7fbfffff from memory into f22
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f27, 0(x2) # load 0x80000000 from memory into f27
la x2, scratch
li x3, 0xa2788c5a # load x3 with value 0xa2788c5a
sw x3, 0(x2) # store 0xa2788c5a in memory
flw f1, 0(x2) # load 0xa2788c5a from memory into f1
fnmsub.s f24, f22, f27, f1, dyn # perform operation
fnmsub.s f24, f22, f27, f1, rdn # perform operation
fnmsub.s f24, f22, f27, f1, rmm # perform operation
fnmsub.s f24, f22, f27, f1, rne # perform operation
fnmsub.s f24, f22, f27, f1, rtz # perform operation
fnmsub.s f24, f22, f27, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f24, f22, f27, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f24, f22, f27, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f24, f22, f27, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f24, f22, f27, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f24, f22, f27, f1 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0x3f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f12, 0(x2) # load 0x7fbfffff from memory into f12
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f30, 0(x2) # load 0x3f800000 from memory into f30
la x2, scratch
li x3, 0xdafffe3f # load x3 with value 0xdafffe3f
sw x3, 0(x2) # store 0xdafffe3f in memory
flw f1, 0(x2) # load 0xdafffe3f from memory into f1
fnmsub.s f13, f12, f30, f1, dyn # perform operation
fnmsub.s f13, f12, f30, f1, rdn # perform operation
fnmsub.s f13, f12, f30, f1, rmm # perform operation
fnmsub.s f13, f12, f30, f1, rne # perform operation
fnmsub.s f13, f12, f30, f1, rtz # perform operation
fnmsub.s f13, f12, f30, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f13, f12, f30, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f13, f12, f30, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f13, f12, f30, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f13, f12, f30, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f13, f12, f30, f1 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0xbf800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f13, 0(x2) # load 0x7fbfffff from memory into f13
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f6, 0(x2) # load 0xbf800000 from memory into f6
la x2, scratch
li x3, 0x6d6baaab # load x3 with value 0x6d6baaab
sw x3, 0(x2) # store 0x6d6baaab in memory
flw f31, 0(x2) # load 0x6d6baaab from memory into f31
fnmsub.s f27, f13, f6, f31, dyn # perform operation
fnmsub.s f27, f13, f6, f31, rdn # perform operation
fnmsub.s f27, f13, f6, f31, rmm # perform operation
fnmsub.s f27, f13, f6, f31, rne # perform operation
fnmsub.s f27, f13, f6, f31, rtz # perform operation
fnmsub.s f27, f13, f6, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f27, f13, f6, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f27, f13, f6, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f27, f13, f6, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f27, f13, f6, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f27, f13, f6, f31 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0x3fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f15, 0(x2) # load 0x7fbfffff from memory into f15
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f7, 0(x2) # load 0x3fc00000 from memory into f7
la x2, scratch
li x3, 0xdcbacb77 # load x3 with value 0xdcbacb77
sw x3, 0(x2) # store 0xdcbacb77 in memory
flw f12, 0(x2) # load 0xdcbacb77 from memory into f12
fnmsub.s f19, f15, f7, f12, dyn # perform operation
fnmsub.s f19, f15, f7, f12, rdn # perform operation
fnmsub.s f19, f15, f7, f12, rmm # perform operation
fnmsub.s f19, f15, f7, f12, rne # perform operation
fnmsub.s f19, f15, f7, f12, rtz # perform operation
fnmsub.s f19, f15, f7, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f19, f15, f7, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f19, f15, f7, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f19, f15, f7, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f19, f15, f7, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f19, f15, f7, f12 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0xbfc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f31, 0(x2) # load 0x7fbfffff from memory into f31
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f11, 0(x2) # load 0xbfc00000 from memory into f11
la x2, scratch
li x3, 0x202b5a01 # load x3 with value 0x202b5a01
sw x3, 0(x2) # store 0x202b5a01 in memory
flw f21, 0(x2) # load 0x202b5a01 from memory into f21
fnmsub.s f26, f31, f11, f21, dyn # perform operation
fnmsub.s f26, f31, f11, f21, rdn # perform operation
fnmsub.s f26, f31, f11, f21, rmm # perform operation
fnmsub.s f26, f31, f11, f21, rne # perform operation
fnmsub.s f26, f31, f11, f21, rtz # perform operation
fnmsub.s f26, f31, f11, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f26, f31, f11, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f26, f31, f11, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f26, f31, f11, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f26, f31, f11, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f26, f31, f11, f21 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0x40000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f7, 0(x2) # load 0x7fbfffff from memory into f7
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f29, 0(x2) # load 0x40000000 from memory into f29
la x2, scratch
li x3, 0x4870eb93 # load x3 with value 0x4870eb93
sw x3, 0(x2) # store 0x4870eb93 in memory
flw f2, 0(x2) # load 0x4870eb93 from memory into f2
fnmsub.s f5, f7, f29, f2, dyn # perform operation
fnmsub.s f5, f7, f29, f2, rdn # perform operation
fnmsub.s f5, f7, f29, f2, rmm # perform operation
fnmsub.s f5, f7, f29, f2, rne # perform operation
fnmsub.s f5, f7, f29, f2, rtz # perform operation
fnmsub.s f5, f7, f29, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f5, f7, f29, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f5, f7, f29, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f5, f7, f29, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f5, f7, f29, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f5, f7, f29, f2 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0xc0000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f19, 0(x2) # load 0x7fbfffff from memory into f19
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f17, 0(x2) # load 0xc0000000 from memory into f17
la x2, scratch
li x3, 0xeb7f2c56 # load x3 with value 0xeb7f2c56
sw x3, 0(x2) # store 0xeb7f2c56 in memory
flw f14, 0(x2) # load 0xeb7f2c56 from memory into f14
fnmsub.s f18, f19, f17, f14, dyn # perform operation
fnmsub.s f18, f19, f17, f14, rdn # perform operation
fnmsub.s f18, f19, f17, f14, rmm # perform operation
fnmsub.s f18, f19, f17, f14, rne # perform operation
fnmsub.s f18, f19, f17, f14, rtz # perform operation
fnmsub.s f18, f19, f17, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f18, f19, f17, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f18, f19, f17, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f18, f19, f17, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f18, f19, f17, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f18, f19, f17, f14 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0x800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f13, 0(x2) # load 0x7fbfffff from memory into f13
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f26, 0(x2) # load 0x00800000 from memory into f26
la x2, scratch
li x3, 0x4bdc45cd # load x3 with value 0x4bdc45cd
sw x3, 0(x2) # store 0x4bdc45cd in memory
flw f28, 0(x2) # load 0x4bdc45cd from memory into f28
fnmsub.s f17, f13, f26, f28, dyn # perform operation
fnmsub.s f17, f13, f26, f28, rdn # perform operation
fnmsub.s f17, f13, f26, f28, rmm # perform operation
fnmsub.s f17, f13, f26, f28, rne # perform operation
fnmsub.s f17, f13, f26, f28, rtz # perform operation
fnmsub.s f17, f13, f26, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f17, f13, f26, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f17, f13, f26, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f17, f13, f26, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f17, f13, f26, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f17, f13, f26, f28 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0x80800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f18, 0(x2) # load 0x7fbfffff from memory into f18
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f6, 0(x2) # load 0x80800000 from memory into f6
la x2, scratch
li x3, 0x5d89c41f # load x3 with value 0x5d89c41f
sw x3, 0(x2) # store 0x5d89c41f in memory
flw f11, 0(x2) # load 0x5d89c41f from memory into f11
fnmsub.s f10, f18, f6, f11, dyn # perform operation
fnmsub.s f10, f18, f6, f11, rdn # perform operation
fnmsub.s f10, f18, f6, f11, rmm # perform operation
fnmsub.s f10, f18, f6, f11, rne # perform operation
fnmsub.s f10, f18, f6, f11, rtz # perform operation
fnmsub.s f10, f18, f6, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f10, f18, f6, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f10, f18, f6, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f10, f18, f6, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f10, f18, f6, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f10, f18, f6, f11 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0x7f7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f26, 0(x2) # load 0x7fbfffff from memory into f26
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f3, 0(x2) # load 0x7f7fffff from memory into f3
la x2, scratch
li x3, 0x7734dc8d # load x3 with value 0x7734dc8d
sw x3, 0(x2) # store 0x7734dc8d in memory
flw f13, 0(x2) # load 0x7734dc8d from memory into f13
fnmsub.s f18, f26, f3, f13, dyn # perform operation
fnmsub.s f18, f26, f3, f13, rdn # perform operation
fnmsub.s f18, f26, f3, f13, rmm # perform operation
fnmsub.s f18, f26, f3, f13, rne # perform operation
fnmsub.s f18, f26, f3, f13, rtz # perform operation
fnmsub.s f18, f26, f3, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f18, f26, f3, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f18, f26, f3, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f18, f26, f3, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f18, f26, f3, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f18, f26, f3, f13 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0xff7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f15, 0(x2) # load 0x7fbfffff from memory into f15
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f5, 0(x2) # load 0xff7fffff from memory into f5
la x2, scratch
li x3, 0x04e18d80 # load x3 with value 0x04e18d80
sw x3, 0(x2) # store 0x04e18d80 in memory
flw f26, 0(x2) # load 0x04e18d80 from memory into f26
fnmsub.s f22, f15, f5, f26, dyn # perform operation
fnmsub.s f22, f15, f5, f26, rdn # perform operation
fnmsub.s f22, f15, f5, f26, rmm # perform operation
fnmsub.s f22, f15, f5, f26, rne # perform operation
fnmsub.s f22, f15, f5, f26, rtz # perform operation
fnmsub.s f22, f15, f5, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f22, f15, f5, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f22, f15, f5, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f22, f15, f5, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f22, f15, f5, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f22, f15, f5, f26 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0x7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f22, 0(x2) # load 0x7fbfffff from memory into f22
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f23, 0(x2) # load 0x007fffff from memory into f23
la x2, scratch
li x3, 0xcf536383 # load x3 with value 0xcf536383
sw x3, 0(x2) # store 0xcf536383 in memory
flw f9, 0(x2) # load 0xcf536383 from memory into f9
fnmsub.s f24, f22, f23, f9, dyn # perform operation
fnmsub.s f24, f22, f23, f9, rdn # perform operation
fnmsub.s f24, f22, f23, f9, rmm # perform operation
fnmsub.s f24, f22, f23, f9, rne # perform operation
fnmsub.s f24, f22, f23, f9, rtz # perform operation
fnmsub.s f24, f22, f23, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f24, f22, f23, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f24, f22, f23, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f24, f22, f23, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f24, f22, f23, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f24, f22, f23, f9 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0x807fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f30, 0(x2) # load 0x7fbfffff from memory into f30
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f25, 0(x2) # load 0x807fffff from memory into f25
la x2, scratch
li x3, 0x51165b54 # load x3 with value 0x51165b54
sw x3, 0(x2) # store 0x51165b54 in memory
flw f3, 0(x2) # load 0x51165b54 from memory into f3
fnmsub.s f15, f30, f25, f3, dyn # perform operation
fnmsub.s f15, f30, f25, f3, rdn # perform operation
fnmsub.s f15, f30, f25, f3, rmm # perform operation
fnmsub.s f15, f30, f25, f3, rne # perform operation
fnmsub.s f15, f30, f25, f3, rtz # perform operation
fnmsub.s f15, f30, f25, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f15, f30, f25, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f15, f30, f25, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f15, f30, f25, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f15, f30, f25, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f15, f30, f25, f3 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0x400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f14, 0(x2) # load 0x7fbfffff from memory into f14
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f12, 0(x2) # load 0x00400000 from memory into f12
la x2, scratch
li x3, 0xcd23585e # load x3 with value 0xcd23585e
sw x3, 0(x2) # store 0xcd23585e in memory
flw f9, 0(x2) # load 0xcd23585e from memory into f9
fnmsub.s f3, f14, f12, f9, dyn # perform operation
fnmsub.s f3, f14, f12, f9, rdn # perform operation
fnmsub.s f3, f14, f12, f9, rmm # perform operation
fnmsub.s f3, f14, f12, f9, rne # perform operation
fnmsub.s f3, f14, f12, f9, rtz # perform operation
fnmsub.s f3, f14, f12, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f3, f14, f12, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f3, f14, f12, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f3, f14, f12, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f3, f14, f12, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f3, f14, f12, f9 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0x80400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f9, 0(x2) # load 0x7fbfffff from memory into f9
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f12, 0(x2) # load 0x80400000 from memory into f12
la x2, scratch
li x3, 0x279c2b01 # load x3 with value 0x279c2b01
sw x3, 0(x2) # store 0x279c2b01 in memory
flw f28, 0(x2) # load 0x279c2b01 from memory into f28
fnmsub.s f8, f9, f12, f28, dyn # perform operation
fnmsub.s f8, f9, f12, f28, rdn # perform operation
fnmsub.s f8, f9, f12, f28, rmm # perform operation
fnmsub.s f8, f9, f12, f28, rne # perform operation
fnmsub.s f8, f9, f12, f28, rtz # perform operation
fnmsub.s f8, f9, f12, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f8, f9, f12, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f8, f9, f12, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f8, f9, f12, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f8, f9, f12, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f8, f9, f12, f28 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0x1)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f22, 0(x2) # load 0x7fbfffff from memory into f22
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f10, 0(x2) # load 0x00000001 from memory into f10
la x2, scratch
li x3, 0x0f2bb99a # load x3 with value 0x0f2bb99a
sw x3, 0(x2) # store 0x0f2bb99a in memory
flw f6, 0(x2) # load 0x0f2bb99a from memory into f6
fnmsub.s f29, f22, f10, f6, dyn # perform operation
fnmsub.s f29, f22, f10, f6, rdn # perform operation
fnmsub.s f29, f22, f10, f6, rmm # perform operation
fnmsub.s f29, f22, f10, f6, rne # perform operation
fnmsub.s f29, f22, f10, f6, rtz # perform operation
fnmsub.s f29, f22, f10, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f29, f22, f10, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f29, f22, f10, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f29, f22, f10, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f29, f22, f10, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f29, f22, f10, f6 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0x80000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f13, 0(x2) # load 0x7fbfffff from memory into f13
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f24, 0(x2) # load 0x80000001 from memory into f24
la x2, scratch
li x3, 0xdd7cf233 # load x3 with value 0xdd7cf233
sw x3, 0(x2) # store 0xdd7cf233 in memory
flw f25, 0(x2) # load 0xdd7cf233 from memory into f25
fnmsub.s f19, f13, f24, f25, dyn # perform operation
fnmsub.s f19, f13, f24, f25, rdn # perform operation
fnmsub.s f19, f13, f24, f25, rmm # perform operation
fnmsub.s f19, f13, f24, f25, rne # perform operation
fnmsub.s f19, f13, f24, f25, rtz # perform operation
fnmsub.s f19, f13, f24, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f19, f13, f24, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f19, f13, f24, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f19, f13, f24, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f19, f13, f24, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f19, f13, f24, f25 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0x7f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f25, 0(x2) # load 0x7fbfffff from memory into f25
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f9, 0(x2) # load 0x7f800000 from memory into f9
la x2, scratch
li x3, 0x7469cbcd # load x3 with value 0x7469cbcd
sw x3, 0(x2) # store 0x7469cbcd in memory
flw f11, 0(x2) # load 0x7469cbcd from memory into f11
fnmsub.s f19, f25, f9, f11, dyn # perform operation
fnmsub.s f19, f25, f9, f11, rdn # perform operation
fnmsub.s f19, f25, f9, f11, rmm # perform operation
fnmsub.s f19, f25, f9, f11, rne # perform operation
fnmsub.s f19, f25, f9, f11, rtz # perform operation
fnmsub.s f19, f25, f9, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f19, f25, f9, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f19, f25, f9, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f19, f25, f9, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f19, f25, f9, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f19, f25, f9, f11 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0xff800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f7, 0(x2) # load 0x7fbfffff from memory into f7
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f9, 0(x2) # load 0xff800000 from memory into f9
la x2, scratch
li x3, 0x872b848a # load x3 with value 0x872b848a
sw x3, 0(x2) # store 0x872b848a in memory
flw f31, 0(x2) # load 0x872b848a from memory into f31
fnmsub.s f25, f7, f9, f31, dyn # perform operation
fnmsub.s f25, f7, f9, f31, rdn # perform operation
fnmsub.s f25, f7, f9, f31, rmm # perform operation
fnmsub.s f25, f7, f9, f31, rne # perform operation
fnmsub.s f25, f7, f9, f31, rtz # perform operation
fnmsub.s f25, f7, f9, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f25, f7, f9, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f25, f7, f9, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f25, f7, f9, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f25, f7, f9, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f25, f7, f9, f31 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0x7fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f30, 0(x2) # load 0x7fbfffff from memory into f30
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f3, 0(x2) # load 0x7fc00000 from memory into f3
la x2, scratch
li x3, 0x2e53e1df # load x3 with value 0x2e53e1df
sw x3, 0(x2) # store 0x2e53e1df in memory
flw f21, 0(x2) # load 0x2e53e1df from memory into f21
fnmsub.s f17, f30, f3, f21, dyn # perform operation
fnmsub.s f17, f30, f3, f21, rdn # perform operation
fnmsub.s f17, f30, f3, f21, rmm # perform operation
fnmsub.s f17, f30, f3, f21, rne # perform operation
fnmsub.s f17, f30, f3, f21, rtz # perform operation
fnmsub.s f17, f30, f3, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f17, f30, f3, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f17, f30, f3, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f17, f30, f3, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f17, f30, f3, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f17, f30, f3, f21 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0x7fffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f26, 0(x2) # load 0x7fbfffff from memory into f26
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f7, 0(x2) # load 0x7fffffff from memory into f7
la x2, scratch
li x3, 0xe158cab2 # load x3 with value 0xe158cab2
sw x3, 0(x2) # store 0xe158cab2 in memory
flw f3, 0(x2) # load 0xe158cab2 from memory into f3
fnmsub.s f29, f26, f7, f3, dyn # perform operation
fnmsub.s f29, f26, f7, f3, rdn # perform operation
fnmsub.s f29, f26, f7, f3, rmm # perform operation
fnmsub.s f29, f26, f7, f3, rne # perform operation
fnmsub.s f29, f26, f7, f3, rtz # perform operation
fnmsub.s f29, f26, f7, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f29, f26, f7, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f29, f26, f7, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f29, f26, f7, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f29, f26, f7, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f29, f26, f7, f3 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0xffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f19, 0(x2) # load 0x7fbfffff from memory into f19
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f25, 0(x2) # load 0xffffffff from memory into f25
la x2, scratch
li x3, 0xfb979ede # load x3 with value 0xfb979ede
sw x3, 0(x2) # store 0xfb979ede in memory
flw f28, 0(x2) # load 0xfb979ede from memory into f28
fnmsub.s f29, f19, f25, f28, dyn # perform operation
fnmsub.s f29, f19, f25, f28, rdn # perform operation
fnmsub.s f29, f19, f25, f28, rmm # perform operation
fnmsub.s f29, f19, f25, f28, rne # perform operation
fnmsub.s f29, f19, f25, f28, rtz # perform operation
fnmsub.s f29, f19, f25, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f29, f19, f25, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f29, f19, f25, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f29, f19, f25, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f29, f19, f25, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f29, f19, f25, f28 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0x7f800001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f24, 0(x2) # load 0x7fbfffff from memory into f24
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f30, 0(x2) # load 0x7f800001 from memory into f30
la x2, scratch
li x3, 0xe129982f # load x3 with value 0xe129982f
sw x3, 0(x2) # store 0xe129982f in memory
flw f16, 0(x2) # load 0xe129982f from memory into f16
fnmsub.s f23, f24, f30, f16, dyn # perform operation
fnmsub.s f23, f24, f30, f16, rdn # perform operation
fnmsub.s f23, f24, f30, f16, rmm # perform operation
fnmsub.s f23, f24, f30, f16, rne # perform operation
fnmsub.s f23, f24, f30, f16, rtz # perform operation
fnmsub.s f23, f24, f30, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f23, f24, f30, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f23, f24, f30, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f23, f24, f30, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f23, f24, f30, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f23, f24, f30, f16 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0x7fbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f25, 0(x2) # load 0x7fbfffff from memory into f25
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f28, 0(x2) # load 0x7fbfffff from memory into f28
la x2, scratch
li x3, 0xbfbbfbdf # load x3 with value 0xbfbbfbdf
sw x3, 0(x2) # store 0xbfbbfbdf in memory
flw f18, 0(x2) # load 0xbfbbfbdf from memory into f18
fnmsub.s f16, f25, f28, f18, dyn # perform operation
fnmsub.s f16, f25, f28, f18, rdn # perform operation
fnmsub.s f16, f25, f28, f18, rmm # perform operation
fnmsub.s f16, f25, f28, f18, rne # perform operation
fnmsub.s f16, f25, f28, f18, rtz # perform operation
fnmsub.s f16, f25, f28, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f16, f25, f28, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f16, f25, f28, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f16, f25, f28, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f16, f25, f28, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f16, f25, f28, f18 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0xffbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f1, 0(x2) # load 0x7fbfffff from memory into f1
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f27, 0(x2) # load 0xffbfffff from memory into f27
la x2, scratch
li x3, 0x622b10a1 # load x3 with value 0x622b10a1
sw x3, 0(x2) # store 0x622b10a1 in memory
flw f2, 0(x2) # load 0x622b10a1 from memory into f2
fnmsub.s f31, f1, f27, f2, dyn # perform operation
fnmsub.s f31, f1, f27, f2, rdn # perform operation
fnmsub.s f31, f1, f27, f2, rmm # perform operation
fnmsub.s f31, f1, f27, f2, rne # perform operation
fnmsub.s f31, f1, f27, f2, rtz # perform operation
fnmsub.s f31, f1, f27, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f31, f1, f27, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f31, f1, f27, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f31, f1, f27, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f31, f1, f27, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f31, f1, f27, f2 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0x7ef8654f)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f22, 0(x2) # load 0x7fbfffff from memory into f22
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f2, 0(x2) # load 0x7ef8654f from memory into f2
la x2, scratch
li x3, 0xf03b23a2 # load x3 with value 0xf03b23a2
sw x3, 0(x2) # store 0xf03b23a2 in memory
flw f28, 0(x2) # load 0xf03b23a2 from memory into f28
fnmsub.s f10, f22, f2, f28, dyn # perform operation
fnmsub.s f10, f22, f2, f28, rdn # perform operation
fnmsub.s f10, f22, f2, f28, rmm # perform operation
fnmsub.s f10, f22, f2, f28, rne # perform operation
fnmsub.s f10, f22, f2, f28, rtz # perform operation
fnmsub.s f10, f22, f2, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f10, f22, f2, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f10, f22, f2, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f10, f22, f2, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f10, f22, f2, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f10, f22, f2, f28 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0x813d9ab0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f31, 0(x2) # load 0x7fbfffff from memory into f31
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f15, 0(x2) # load 0x813d9ab0 from memory into f15
la x2, scratch
li x3, 0x3c648dcb # load x3 with value 0x3c648dcb
sw x3, 0(x2) # store 0x3c648dcb in memory
flw f13, 0(x2) # load 0x3c648dcb from memory into f13
fnmsub.s f24, f31, f15, f13, dyn # perform operation
fnmsub.s f24, f31, f15, f13, rdn # perform operation
fnmsub.s f24, f31, f15, f13, rmm # perform operation
fnmsub.s f24, f31, f15, f13, rne # perform operation
fnmsub.s f24, f31, f15, f13, rtz # perform operation
fnmsub.s f24, f31, f15, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f24, f31, f15, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f24, f31, f15, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f24, f31, f15, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f24, f31, f15, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f24, f31, f15, f13 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffbfffff fs2 = 0x0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f2, 0(x2) # load 0xffbfffff from memory into f2
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f26, 0(x2) # load 0x00000000 from memory into f26
la x2, scratch
li x3, 0x6ebd53fa # load x3 with value 0x6ebd53fa
sw x3, 0(x2) # store 0x6ebd53fa in memory
flw f31, 0(x2) # load 0x6ebd53fa from memory into f31
fnmsub.s f3, f2, f26, f31, dyn # perform operation
fnmsub.s f3, f2, f26, f31, rdn # perform operation
fnmsub.s f3, f2, f26, f31, rmm # perform operation
fnmsub.s f3, f2, f26, f31, rne # perform operation
fnmsub.s f3, f2, f26, f31, rtz # perform operation
fnmsub.s f3, f2, f26, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f3, f2, f26, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f3, f2, f26, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f3, f2, f26, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f3, f2, f26, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f3, f2, f26, f31 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffbfffff fs2 = 0x80000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f25, 0(x2) # load 0xffbfffff from memory into f25
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f27, 0(x2) # load 0x80000000 from memory into f27
la x2, scratch
li x3, 0x6b787507 # load x3 with value 0x6b787507
sw x3, 0(x2) # store 0x6b787507 in memory
flw f5, 0(x2) # load 0x6b787507 from memory into f5
fnmsub.s f12, f25, f27, f5, dyn # perform operation
fnmsub.s f12, f25, f27, f5, rdn # perform operation
fnmsub.s f12, f25, f27, f5, rmm # perform operation
fnmsub.s f12, f25, f27, f5, rne # perform operation
fnmsub.s f12, f25, f27, f5, rtz # perform operation
fnmsub.s f12, f25, f27, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f12, f25, f27, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f12, f25, f27, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f12, f25, f27, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f12, f25, f27, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f12, f25, f27, f5 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffbfffff fs2 = 0x3f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f7, 0(x2) # load 0xffbfffff from memory into f7
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f13, 0(x2) # load 0x3f800000 from memory into f13
la x2, scratch
li x3, 0xcae70fac # load x3 with value 0xcae70fac
sw x3, 0(x2) # store 0xcae70fac in memory
flw f12, 0(x2) # load 0xcae70fac from memory into f12
fnmsub.s f17, f7, f13, f12, dyn # perform operation
fnmsub.s f17, f7, f13, f12, rdn # perform operation
fnmsub.s f17, f7, f13, f12, rmm # perform operation
fnmsub.s f17, f7, f13, f12, rne # perform operation
fnmsub.s f17, f7, f13, f12, rtz # perform operation
fnmsub.s f17, f7, f13, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f17, f7, f13, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f17, f7, f13, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f17, f7, f13, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f17, f7, f13, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f17, f7, f13, f12 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffbfffff fs2 = 0xbf800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f17, 0(x2) # load 0xffbfffff from memory into f17
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f10, 0(x2) # load 0xbf800000 from memory into f10
la x2, scratch
li x3, 0x207c4755 # load x3 with value 0x207c4755
sw x3, 0(x2) # store 0x207c4755 in memory
flw f19, 0(x2) # load 0x207c4755 from memory into f19
fnmsub.s f7, f17, f10, f19, dyn # perform operation
fnmsub.s f7, f17, f10, f19, rdn # perform operation
fnmsub.s f7, f17, f10, f19, rmm # perform operation
fnmsub.s f7, f17, f10, f19, rne # perform operation
fnmsub.s f7, f17, f10, f19, rtz # perform operation
fnmsub.s f7, f17, f10, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f7, f17, f10, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f7, f17, f10, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f7, f17, f10, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f7, f17, f10, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f7, f17, f10, f19 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffbfffff fs2 = 0x3fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f10, 0(x2) # load 0xffbfffff from memory into f10
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f16, 0(x2) # load 0x3fc00000 from memory into f16
la x2, scratch
li x3, 0x5cab67c4 # load x3 with value 0x5cab67c4
sw x3, 0(x2) # store 0x5cab67c4 in memory
flw f1, 0(x2) # load 0x5cab67c4 from memory into f1
fnmsub.s f15, f10, f16, f1, dyn # perform operation
fnmsub.s f15, f10, f16, f1, rdn # perform operation
fnmsub.s f15, f10, f16, f1, rmm # perform operation
fnmsub.s f15, f10, f16, f1, rne # perform operation
fnmsub.s f15, f10, f16, f1, rtz # perform operation
fnmsub.s f15, f10, f16, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f15, f10, f16, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f15, f10, f16, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f15, f10, f16, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f15, f10, f16, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f15, f10, f16, f1 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffbfffff fs2 = 0xbfc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f16, 0(x2) # load 0xffbfffff from memory into f16
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f19, 0(x2) # load 0xbfc00000 from memory into f19
la x2, scratch
li x3, 0x94e05621 # load x3 with value 0x94e05621
sw x3, 0(x2) # store 0x94e05621 in memory
flw f3, 0(x2) # load 0x94e05621 from memory into f3
fnmsub.s f10, f16, f19, f3, dyn # perform operation
fnmsub.s f10, f16, f19, f3, rdn # perform operation
fnmsub.s f10, f16, f19, f3, rmm # perform operation
fnmsub.s f10, f16, f19, f3, rne # perform operation
fnmsub.s f10, f16, f19, f3, rtz # perform operation
fnmsub.s f10, f16, f19, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f10, f16, f19, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f10, f16, f19, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f10, f16, f19, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f10, f16, f19, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f10, f16, f19, f3 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffbfffff fs2 = 0x40000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f22, 0(x2) # load 0xffbfffff from memory into f22
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f5, 0(x2) # load 0x40000000 from memory into f5
la x2, scratch
li x3, 0x85d56ad6 # load x3 with value 0x85d56ad6
sw x3, 0(x2) # store 0x85d56ad6 in memory
flw f28, 0(x2) # load 0x85d56ad6 from memory into f28
fnmsub.s f7, f22, f5, f28, dyn # perform operation
fnmsub.s f7, f22, f5, f28, rdn # perform operation
fnmsub.s f7, f22, f5, f28, rmm # perform operation
fnmsub.s f7, f22, f5, f28, rne # perform operation
fnmsub.s f7, f22, f5, f28, rtz # perform operation
fnmsub.s f7, f22, f5, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f7, f22, f5, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f7, f22, f5, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f7, f22, f5, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f7, f22, f5, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f7, f22, f5, f28 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffbfffff fs2 = 0xc0000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f23, 0(x2) # load 0xffbfffff from memory into f23
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f14, 0(x2) # load 0xc0000000 from memory into f14
la x2, scratch
li x3, 0x01d7724c # load x3 with value 0x01d7724c
sw x3, 0(x2) # store 0x01d7724c in memory
flw f20, 0(x2) # load 0x01d7724c from memory into f20
fnmsub.s f7, f23, f14, f20, dyn # perform operation
fnmsub.s f7, f23, f14, f20, rdn # perform operation
fnmsub.s f7, f23, f14, f20, rmm # perform operation
fnmsub.s f7, f23, f14, f20, rne # perform operation
fnmsub.s f7, f23, f14, f20, rtz # perform operation
fnmsub.s f7, f23, f14, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f7, f23, f14, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f7, f23, f14, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f7, f23, f14, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f7, f23, f14, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f7, f23, f14, f20 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffbfffff fs2 = 0x800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f13, 0(x2) # load 0xffbfffff from memory into f13
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f11, 0(x2) # load 0x00800000 from memory into f11
la x2, scratch
li x3, 0x78d01f11 # load x3 with value 0x78d01f11
sw x3, 0(x2) # store 0x78d01f11 in memory
flw f3, 0(x2) # load 0x78d01f11 from memory into f3
fnmsub.s f14, f13, f11, f3, dyn # perform operation
fnmsub.s f14, f13, f11, f3, rdn # perform operation
fnmsub.s f14, f13, f11, f3, rmm # perform operation
fnmsub.s f14, f13, f11, f3, rne # perform operation
fnmsub.s f14, f13, f11, f3, rtz # perform operation
fnmsub.s f14, f13, f11, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f14, f13, f11, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f14, f13, f11, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f14, f13, f11, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f14, f13, f11, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f14, f13, f11, f3 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffbfffff fs2 = 0x80800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f10, 0(x2) # load 0xffbfffff from memory into f10
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f11, 0(x2) # load 0x80800000 from memory into f11
la x2, scratch
li x3, 0xb0f99c0f # load x3 with value 0xb0f99c0f
sw x3, 0(x2) # store 0xb0f99c0f in memory
flw f15, 0(x2) # load 0xb0f99c0f from memory into f15
fnmsub.s f18, f10, f11, f15, dyn # perform operation
fnmsub.s f18, f10, f11, f15, rdn # perform operation
fnmsub.s f18, f10, f11, f15, rmm # perform operation
fnmsub.s f18, f10, f11, f15, rne # perform operation
fnmsub.s f18, f10, f11, f15, rtz # perform operation
fnmsub.s f18, f10, f11, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f18, f10, f11, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f18, f10, f11, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f18, f10, f11, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f18, f10, f11, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f18, f10, f11, f15 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffbfffff fs2 = 0x7f7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f29, 0(x2) # load 0xffbfffff from memory into f29
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f12, 0(x2) # load 0x7f7fffff from memory into f12
la x2, scratch
li x3, 0xd8a981a2 # load x3 with value 0xd8a981a2
sw x3, 0(x2) # store 0xd8a981a2 in memory
flw f1, 0(x2) # load 0xd8a981a2 from memory into f1
fnmsub.s f19, f29, f12, f1, dyn # perform operation
fnmsub.s f19, f29, f12, f1, rdn # perform operation
fnmsub.s f19, f29, f12, f1, rmm # perform operation
fnmsub.s f19, f29, f12, f1, rne # perform operation
fnmsub.s f19, f29, f12, f1, rtz # perform operation
fnmsub.s f19, f29, f12, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f19, f29, f12, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f19, f29, f12, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f19, f29, f12, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f19, f29, f12, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f19, f29, f12, f1 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffbfffff fs2 = 0xff7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f2, 0(x2) # load 0xffbfffff from memory into f2
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f13, 0(x2) # load 0xff7fffff from memory into f13
la x2, scratch
li x3, 0x548c192d # load x3 with value 0x548c192d
sw x3, 0(x2) # store 0x548c192d in memory
flw f23, 0(x2) # load 0x548c192d from memory into f23
fnmsub.s f14, f2, f13, f23, dyn # perform operation
fnmsub.s f14, f2, f13, f23, rdn # perform operation
fnmsub.s f14, f2, f13, f23, rmm # perform operation
fnmsub.s f14, f2, f13, f23, rne # perform operation
fnmsub.s f14, f2, f13, f23, rtz # perform operation
fnmsub.s f14, f2, f13, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f14, f2, f13, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f14, f2, f13, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f14, f2, f13, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f14, f2, f13, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f14, f2, f13, f23 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffbfffff fs2 = 0x7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f21, 0(x2) # load 0xffbfffff from memory into f21
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f5, 0(x2) # load 0x007fffff from memory into f5
la x2, scratch
li x3, 0xa04513b2 # load x3 with value 0xa04513b2
sw x3, 0(x2) # store 0xa04513b2 in memory
flw f14, 0(x2) # load 0xa04513b2 from memory into f14
fnmsub.s f20, f21, f5, f14, dyn # perform operation
fnmsub.s f20, f21, f5, f14, rdn # perform operation
fnmsub.s f20, f21, f5, f14, rmm # perform operation
fnmsub.s f20, f21, f5, f14, rne # perform operation
fnmsub.s f20, f21, f5, f14, rtz # perform operation
fnmsub.s f20, f21, f5, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f20, f21, f5, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f20, f21, f5, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f20, f21, f5, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f20, f21, f5, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f20, f21, f5, f14 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffbfffff fs2 = 0x807fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f12, 0(x2) # load 0xffbfffff from memory into f12
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f16, 0(x2) # load 0x807fffff from memory into f16
la x2, scratch
li x3, 0x5680685a # load x3 with value 0x5680685a
sw x3, 0(x2) # store 0x5680685a in memory
flw f2, 0(x2) # load 0x5680685a from memory into f2
fnmsub.s f11, f12, f16, f2, dyn # perform operation
fnmsub.s f11, f12, f16, f2, rdn # perform operation
fnmsub.s f11, f12, f16, f2, rmm # perform operation
fnmsub.s f11, f12, f16, f2, rne # perform operation
fnmsub.s f11, f12, f16, f2, rtz # perform operation
fnmsub.s f11, f12, f16, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f11, f12, f16, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f11, f12, f16, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f11, f12, f16, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f11, f12, f16, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f11, f12, f16, f2 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffbfffff fs2 = 0x400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f16, 0(x2) # load 0xffbfffff from memory into f16
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f27, 0(x2) # load 0x00400000 from memory into f27
la x2, scratch
li x3, 0xee32b7cb # load x3 with value 0xee32b7cb
sw x3, 0(x2) # store 0xee32b7cb in memory
flw f30, 0(x2) # load 0xee32b7cb from memory into f30
fnmsub.s f14, f16, f27, f30, dyn # perform operation
fnmsub.s f14, f16, f27, f30, rdn # perform operation
fnmsub.s f14, f16, f27, f30, rmm # perform operation
fnmsub.s f14, f16, f27, f30, rne # perform operation
fnmsub.s f14, f16, f27, f30, rtz # perform operation
fnmsub.s f14, f16, f27, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f14, f16, f27, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f14, f16, f27, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f14, f16, f27, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f14, f16, f27, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f14, f16, f27, f30 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffbfffff fs2 = 0x80400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f14, 0(x2) # load 0xffbfffff from memory into f14
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f9, 0(x2) # load 0x80400000 from memory into f9
la x2, scratch
li x3, 0x4125b7f2 # load x3 with value 0x4125b7f2
sw x3, 0(x2) # store 0x4125b7f2 in memory
flw f11, 0(x2) # load 0x4125b7f2 from memory into f11
fnmsub.s f12, f14, f9, f11, dyn # perform operation
fnmsub.s f12, f14, f9, f11, rdn # perform operation
fnmsub.s f12, f14, f9, f11, rmm # perform operation
fnmsub.s f12, f14, f9, f11, rne # perform operation
fnmsub.s f12, f14, f9, f11, rtz # perform operation
fnmsub.s f12, f14, f9, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f12, f14, f9, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f12, f14, f9, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f12, f14, f9, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f12, f14, f9, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f12, f14, f9, f11 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffbfffff fs2 = 0x1)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f9, 0(x2) # load 0xffbfffff from memory into f9
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f20, 0(x2) # load 0x00000001 from memory into f20
la x2, scratch
li x3, 0x46ca6cf6 # load x3 with value 0x46ca6cf6
sw x3, 0(x2) # store 0x46ca6cf6 in memory
flw f23, 0(x2) # load 0x46ca6cf6 from memory into f23
fnmsub.s f5, f9, f20, f23, dyn # perform operation
fnmsub.s f5, f9, f20, f23, rdn # perform operation
fnmsub.s f5, f9, f20, f23, rmm # perform operation
fnmsub.s f5, f9, f20, f23, rne # perform operation
fnmsub.s f5, f9, f20, f23, rtz # perform operation
fnmsub.s f5, f9, f20, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f5, f9, f20, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f5, f9, f20, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f5, f9, f20, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f5, f9, f20, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f5, f9, f20, f23 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffbfffff fs2 = 0x80000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f5, 0(x2) # load 0xffbfffff from memory into f5
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f14, 0(x2) # load 0x80000001 from memory into f14
la x2, scratch
li x3, 0x71ebf428 # load x3 with value 0x71ebf428
sw x3, 0(x2) # store 0x71ebf428 in memory
flw f15, 0(x2) # load 0x71ebf428 from memory into f15
fnmsub.s f22, f5, f14, f15, dyn # perform operation
fnmsub.s f22, f5, f14, f15, rdn # perform operation
fnmsub.s f22, f5, f14, f15, rmm # perform operation
fnmsub.s f22, f5, f14, f15, rne # perform operation
fnmsub.s f22, f5, f14, f15, rtz # perform operation
fnmsub.s f22, f5, f14, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f22, f5, f14, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f22, f5, f14, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f22, f5, f14, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f22, f5, f14, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f22, f5, f14, f15 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffbfffff fs2 = 0x7f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f16, 0(x2) # load 0xffbfffff from memory into f16
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f21, 0(x2) # load 0x7f800000 from memory into f21
la x2, scratch
li x3, 0x6aa6a2c4 # load x3 with value 0x6aa6a2c4
sw x3, 0(x2) # store 0x6aa6a2c4 in memory
flw f27, 0(x2) # load 0x6aa6a2c4 from memory into f27
fnmsub.s f5, f16, f21, f27, dyn # perform operation
fnmsub.s f5, f16, f21, f27, rdn # perform operation
fnmsub.s f5, f16, f21, f27, rmm # perform operation
fnmsub.s f5, f16, f21, f27, rne # perform operation
fnmsub.s f5, f16, f21, f27, rtz # perform operation
fnmsub.s f5, f16, f21, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f5, f16, f21, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f5, f16, f21, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f5, f16, f21, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f5, f16, f21, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f5, f16, f21, f27 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffbfffff fs2 = 0xff800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f12, 0(x2) # load 0xffbfffff from memory into f12
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f20, 0(x2) # load 0xff800000 from memory into f20
la x2, scratch
li x3, 0xb16fb643 # load x3 with value 0xb16fb643
sw x3, 0(x2) # store 0xb16fb643 in memory
flw f1, 0(x2) # load 0xb16fb643 from memory into f1
fnmsub.s f17, f12, f20, f1, dyn # perform operation
fnmsub.s f17, f12, f20, f1, rdn # perform operation
fnmsub.s f17, f12, f20, f1, rmm # perform operation
fnmsub.s f17, f12, f20, f1, rne # perform operation
fnmsub.s f17, f12, f20, f1, rtz # perform operation
fnmsub.s f17, f12, f20, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f17, f12, f20, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f17, f12, f20, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f17, f12, f20, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f17, f12, f20, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f17, f12, f20, f1 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffbfffff fs2 = 0x7fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f6, 0(x2) # load 0xffbfffff from memory into f6
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f30, 0(x2) # load 0x7fc00000 from memory into f30
la x2, scratch
li x3, 0x74dc1656 # load x3 with value 0x74dc1656
sw x3, 0(x2) # store 0x74dc1656 in memory
flw f26, 0(x2) # load 0x74dc1656 from memory into f26
fnmsub.s f25, f6, f30, f26, dyn # perform operation
fnmsub.s f25, f6, f30, f26, rdn # perform operation
fnmsub.s f25, f6, f30, f26, rmm # perform operation
fnmsub.s f25, f6, f30, f26, rne # perform operation
fnmsub.s f25, f6, f30, f26, rtz # perform operation
fnmsub.s f25, f6, f30, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f25, f6, f30, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f25, f6, f30, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f25, f6, f30, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f25, f6, f30, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f25, f6, f30, f26 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffbfffff fs2 = 0x7fffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f18, 0(x2) # load 0xffbfffff from memory into f18
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f29, 0(x2) # load 0x7fffffff from memory into f29
la x2, scratch
li x3, 0x20c19540 # load x3 with value 0x20c19540
sw x3, 0(x2) # store 0x20c19540 in memory
flw f28, 0(x2) # load 0x20c19540 from memory into f28
fnmsub.s f23, f18, f29, f28, dyn # perform operation
fnmsub.s f23, f18, f29, f28, rdn # perform operation
fnmsub.s f23, f18, f29, f28, rmm # perform operation
fnmsub.s f23, f18, f29, f28, rne # perform operation
fnmsub.s f23, f18, f29, f28, rtz # perform operation
fnmsub.s f23, f18, f29, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f23, f18, f29, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f23, f18, f29, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f23, f18, f29, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f23, f18, f29, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f23, f18, f29, f28 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffbfffff fs2 = 0xffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f5, 0(x2) # load 0xffbfffff from memory into f5
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f27, 0(x2) # load 0xffffffff from memory into f27
la x2, scratch
li x3, 0x39cbd977 # load x3 with value 0x39cbd977
sw x3, 0(x2) # store 0x39cbd977 in memory
flw f21, 0(x2) # load 0x39cbd977 from memory into f21
fnmsub.s f12, f5, f27, f21, dyn # perform operation
fnmsub.s f12, f5, f27, f21, rdn # perform operation
fnmsub.s f12, f5, f27, f21, rmm # perform operation
fnmsub.s f12, f5, f27, f21, rne # perform operation
fnmsub.s f12, f5, f27, f21, rtz # perform operation
fnmsub.s f12, f5, f27, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f12, f5, f27, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f12, f5, f27, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f12, f5, f27, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f12, f5, f27, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f12, f5, f27, f21 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffbfffff fs2 = 0x7f800001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f23, 0(x2) # load 0xffbfffff from memory into f23
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f11, 0(x2) # load 0x7f800001 from memory into f11
la x2, scratch
li x3, 0xf5502381 # load x3 with value 0xf5502381
sw x3, 0(x2) # store 0xf5502381 in memory
flw f20, 0(x2) # load 0xf5502381 from memory into f20
fnmsub.s f15, f23, f11, f20, dyn # perform operation
fnmsub.s f15, f23, f11, f20, rdn # perform operation
fnmsub.s f15, f23, f11, f20, rmm # perform operation
fnmsub.s f15, f23, f11, f20, rne # perform operation
fnmsub.s f15, f23, f11, f20, rtz # perform operation
fnmsub.s f15, f23, f11, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f15, f23, f11, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f15, f23, f11, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f15, f23, f11, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f15, f23, f11, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f15, f23, f11, f20 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffbfffff fs2 = 0x7fbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f21, 0(x2) # load 0xffbfffff from memory into f21
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f17, 0(x2) # load 0x7fbfffff from memory into f17
la x2, scratch
li x3, 0x276368e0 # load x3 with value 0x276368e0
sw x3, 0(x2) # store 0x276368e0 in memory
flw f1, 0(x2) # load 0x276368e0 from memory into f1
fnmsub.s f22, f21, f17, f1, dyn # perform operation
fnmsub.s f22, f21, f17, f1, rdn # perform operation
fnmsub.s f22, f21, f17, f1, rmm # perform operation
fnmsub.s f22, f21, f17, f1, rne # perform operation
fnmsub.s f22, f21, f17, f1, rtz # perform operation
fnmsub.s f22, f21, f17, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f22, f21, f17, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f22, f21, f17, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f22, f21, f17, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f22, f21, f17, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f22, f21, f17, f1 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffbfffff fs2 = 0xffbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f5, 0(x2) # load 0xffbfffff from memory into f5
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f30, 0(x2) # load 0xffbfffff from memory into f30
la x2, scratch
li x3, 0x07401f38 # load x3 with value 0x07401f38
sw x3, 0(x2) # store 0x07401f38 in memory
flw f7, 0(x2) # load 0x07401f38 from memory into f7
fnmsub.s f29, f5, f30, f7, dyn # perform operation
fnmsub.s f29, f5, f30, f7, rdn # perform operation
fnmsub.s f29, f5, f30, f7, rmm # perform operation
fnmsub.s f29, f5, f30, f7, rne # perform operation
fnmsub.s f29, f5, f30, f7, rtz # perform operation
fnmsub.s f29, f5, f30, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f29, f5, f30, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f29, f5, f30, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f29, f5, f30, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f29, f5, f30, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f29, f5, f30, f7 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffbfffff fs2 = 0x7ef8654f)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f18, 0(x2) # load 0xffbfffff from memory into f18
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f20, 0(x2) # load 0x7ef8654f from memory into f20
la x2, scratch
li x3, 0xba52255a # load x3 with value 0xba52255a
sw x3, 0(x2) # store 0xba52255a in memory
flw f15, 0(x2) # load 0xba52255a from memory into f15
fnmsub.s f29, f18, f20, f15, dyn # perform operation
fnmsub.s f29, f18, f20, f15, rdn # perform operation
fnmsub.s f29, f18, f20, f15, rmm # perform operation
fnmsub.s f29, f18, f20, f15, rne # perform operation
fnmsub.s f29, f18, f20, f15, rtz # perform operation
fnmsub.s f29, f18, f20, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f29, f18, f20, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f29, f18, f20, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f29, f18, f20, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f29, f18, f20, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f29, f18, f20, f15 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffbfffff fs2 = 0x813d9ab0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f9, 0(x2) # load 0xffbfffff from memory into f9
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f28, 0(x2) # load 0x813d9ab0 from memory into f28
la x2, scratch
li x3, 0xd8216b77 # load x3 with value 0xd8216b77
sw x3, 0(x2) # store 0xd8216b77 in memory
flw f26, 0(x2) # load 0xd8216b77 from memory into f26
fnmsub.s f15, f9, f28, f26, dyn # perform operation
fnmsub.s f15, f9, f28, f26, rdn # perform operation
fnmsub.s f15, f9, f28, f26, rmm # perform operation
fnmsub.s f15, f9, f28, f26, rne # perform operation
fnmsub.s f15, f9, f28, f26, rtz # perform operation
fnmsub.s f15, f9, f28, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f15, f9, f28, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f15, f9, f28, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f15, f9, f28, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f15, f9, f28, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f15, f9, f28, f26 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0x0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f25, 0(x2) # load 0x7ef8654f from memory into f25
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f14, 0(x2) # load 0x00000000 from memory into f14
la x2, scratch
li x3, 0x93bb1f3b # load x3 with value 0x93bb1f3b
sw x3, 0(x2) # store 0x93bb1f3b in memory
flw f30, 0(x2) # load 0x93bb1f3b from memory into f30
fnmsub.s f8, f25, f14, f30, dyn # perform operation
fnmsub.s f8, f25, f14, f30, rdn # perform operation
fnmsub.s f8, f25, f14, f30, rmm # perform operation
fnmsub.s f8, f25, f14, f30, rne # perform operation
fnmsub.s f8, f25, f14, f30, rtz # perform operation
fnmsub.s f8, f25, f14, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f8, f25, f14, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f8, f25, f14, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f8, f25, f14, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f8, f25, f14, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f8, f25, f14, f30 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0x80000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f3, 0(x2) # load 0x7ef8654f from memory into f3
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f30, 0(x2) # load 0x80000000 from memory into f30
la x2, scratch
li x3, 0xa2cd52d5 # load x3 with value 0xa2cd52d5
sw x3, 0(x2) # store 0xa2cd52d5 in memory
flw f2, 0(x2) # load 0xa2cd52d5 from memory into f2
fnmsub.s f31, f3, f30, f2, dyn # perform operation
fnmsub.s f31, f3, f30, f2, rdn # perform operation
fnmsub.s f31, f3, f30, f2, rmm # perform operation
fnmsub.s f31, f3, f30, f2, rne # perform operation
fnmsub.s f31, f3, f30, f2, rtz # perform operation
fnmsub.s f31, f3, f30, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f31, f3, f30, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f31, f3, f30, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f31, f3, f30, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f31, f3, f30, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f31, f3, f30, f2 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0x3f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f10, 0(x2) # load 0x7ef8654f from memory into f10
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f24, 0(x2) # load 0x3f800000 from memory into f24
la x2, scratch
li x3, 0xbb6391b2 # load x3 with value 0xbb6391b2
sw x3, 0(x2) # store 0xbb6391b2 in memory
flw f8, 0(x2) # load 0xbb6391b2 from memory into f8
fnmsub.s f29, f10, f24, f8, dyn # perform operation
fnmsub.s f29, f10, f24, f8, rdn # perform operation
fnmsub.s f29, f10, f24, f8, rmm # perform operation
fnmsub.s f29, f10, f24, f8, rne # perform operation
fnmsub.s f29, f10, f24, f8, rtz # perform operation
fnmsub.s f29, f10, f24, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f29, f10, f24, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f29, f10, f24, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f29, f10, f24, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f29, f10, f24, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f29, f10, f24, f8 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0xbf800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f8, 0(x2) # load 0x7ef8654f from memory into f8
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f12, 0(x2) # load 0xbf800000 from memory into f12
la x2, scratch
li x3, 0x64ba93c8 # load x3 with value 0x64ba93c8
sw x3, 0(x2) # store 0x64ba93c8 in memory
flw f3, 0(x2) # load 0x64ba93c8 from memory into f3
fnmsub.s f13, f8, f12, f3, dyn # perform operation
fnmsub.s f13, f8, f12, f3, rdn # perform operation
fnmsub.s f13, f8, f12, f3, rmm # perform operation
fnmsub.s f13, f8, f12, f3, rne # perform operation
fnmsub.s f13, f8, f12, f3, rtz # perform operation
fnmsub.s f13, f8, f12, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f13, f8, f12, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f13, f8, f12, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f13, f8, f12, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f13, f8, f12, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f13, f8, f12, f3 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0x3fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f28, 0(x2) # load 0x7ef8654f from memory into f28
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f27, 0(x2) # load 0x3fc00000 from memory into f27
la x2, scratch
li x3, 0x66b7bd16 # load x3 with value 0x66b7bd16
sw x3, 0(x2) # store 0x66b7bd16 in memory
flw f12, 0(x2) # load 0x66b7bd16 from memory into f12
fnmsub.s f29, f28, f27, f12, dyn # perform operation
fnmsub.s f29, f28, f27, f12, rdn # perform operation
fnmsub.s f29, f28, f27, f12, rmm # perform operation
fnmsub.s f29, f28, f27, f12, rne # perform operation
fnmsub.s f29, f28, f27, f12, rtz # perform operation
fnmsub.s f29, f28, f27, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f29, f28, f27, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f29, f28, f27, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f29, f28, f27, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f29, f28, f27, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f29, f28, f27, f12 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0xbfc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f22, 0(x2) # load 0x7ef8654f from memory into f22
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f29, 0(x2) # load 0xbfc00000 from memory into f29
la x2, scratch
li x3, 0x64f1a75b # load x3 with value 0x64f1a75b
sw x3, 0(x2) # store 0x64f1a75b in memory
flw f11, 0(x2) # load 0x64f1a75b from memory into f11
fnmsub.s f30, f22, f29, f11, dyn # perform operation
fnmsub.s f30, f22, f29, f11, rdn # perform operation
fnmsub.s f30, f22, f29, f11, rmm # perform operation
fnmsub.s f30, f22, f29, f11, rne # perform operation
fnmsub.s f30, f22, f29, f11, rtz # perform operation
fnmsub.s f30, f22, f29, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f30, f22, f29, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f30, f22, f29, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f30, f22, f29, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f30, f22, f29, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f30, f22, f29, f11 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0x40000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f1, 0(x2) # load 0x7ef8654f from memory into f1
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f24, 0(x2) # load 0x40000000 from memory into f24
la x2, scratch
li x3, 0xcecd1c47 # load x3 with value 0xcecd1c47
sw x3, 0(x2) # store 0xcecd1c47 in memory
flw f14, 0(x2) # load 0xcecd1c47 from memory into f14
fnmsub.s f28, f1, f24, f14, dyn # perform operation
fnmsub.s f28, f1, f24, f14, rdn # perform operation
fnmsub.s f28, f1, f24, f14, rmm # perform operation
fnmsub.s f28, f1, f24, f14, rne # perform operation
fnmsub.s f28, f1, f24, f14, rtz # perform operation
fnmsub.s f28, f1, f24, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f28, f1, f24, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f28, f1, f24, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f28, f1, f24, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f28, f1, f24, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f28, f1, f24, f14 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0xc0000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f2, 0(x2) # load 0x7ef8654f from memory into f2
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f14, 0(x2) # load 0xc0000000 from memory into f14
la x2, scratch
li x3, 0x58725986 # load x3 with value 0x58725986
sw x3, 0(x2) # store 0x58725986 in memory
flw f8, 0(x2) # load 0x58725986 from memory into f8
fnmsub.s f18, f2, f14, f8, dyn # perform operation
fnmsub.s f18, f2, f14, f8, rdn # perform operation
fnmsub.s f18, f2, f14, f8, rmm # perform operation
fnmsub.s f18, f2, f14, f8, rne # perform operation
fnmsub.s f18, f2, f14, f8, rtz # perform operation
fnmsub.s f18, f2, f14, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f18, f2, f14, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f18, f2, f14, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f18, f2, f14, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f18, f2, f14, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f18, f2, f14, f8 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0x800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f27, 0(x2) # load 0x7ef8654f from memory into f27
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f25, 0(x2) # load 0x00800000 from memory into f25
la x2, scratch
li x3, 0x4a301fa2 # load x3 with value 0x4a301fa2
sw x3, 0(x2) # store 0x4a301fa2 in memory
flw f19, 0(x2) # load 0x4a301fa2 from memory into f19
fnmsub.s f24, f27, f25, f19, dyn # perform operation
fnmsub.s f24, f27, f25, f19, rdn # perform operation
fnmsub.s f24, f27, f25, f19, rmm # perform operation
fnmsub.s f24, f27, f25, f19, rne # perform operation
fnmsub.s f24, f27, f25, f19, rtz # perform operation
fnmsub.s f24, f27, f25, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f24, f27, f25, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f24, f27, f25, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f24, f27, f25, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f24, f27, f25, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f24, f27, f25, f19 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0x80800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f25, 0(x2) # load 0x7ef8654f from memory into f25
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f16, 0(x2) # load 0x80800000 from memory into f16
la x2, scratch
li x3, 0x5a07cd12 # load x3 with value 0x5a07cd12
sw x3, 0(x2) # store 0x5a07cd12 in memory
flw f20, 0(x2) # load 0x5a07cd12 from memory into f20
fnmsub.s f10, f25, f16, f20, dyn # perform operation
fnmsub.s f10, f25, f16, f20, rdn # perform operation
fnmsub.s f10, f25, f16, f20, rmm # perform operation
fnmsub.s f10, f25, f16, f20, rne # perform operation
fnmsub.s f10, f25, f16, f20, rtz # perform operation
fnmsub.s f10, f25, f16, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f10, f25, f16, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f10, f25, f16, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f10, f25, f16, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f10, f25, f16, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f10, f25, f16, f20 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0x7f7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f18, 0(x2) # load 0x7ef8654f from memory into f18
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f20, 0(x2) # load 0x7f7fffff from memory into f20
la x2, scratch
li x3, 0x8b3f2df0 # load x3 with value 0x8b3f2df0
sw x3, 0(x2) # store 0x8b3f2df0 in memory
flw f27, 0(x2) # load 0x8b3f2df0 from memory into f27
fnmsub.s f17, f18, f20, f27, dyn # perform operation
fnmsub.s f17, f18, f20, f27, rdn # perform operation
fnmsub.s f17, f18, f20, f27, rmm # perform operation
fnmsub.s f17, f18, f20, f27, rne # perform operation
fnmsub.s f17, f18, f20, f27, rtz # perform operation
fnmsub.s f17, f18, f20, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f17, f18, f20, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f17, f18, f20, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f17, f18, f20, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f17, f18, f20, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f17, f18, f20, f27 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0xff7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f22, 0(x2) # load 0x7ef8654f from memory into f22
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f6, 0(x2) # load 0xff7fffff from memory into f6
la x2, scratch
li x3, 0xd3eb09db # load x3 with value 0xd3eb09db
sw x3, 0(x2) # store 0xd3eb09db in memory
flw f31, 0(x2) # load 0xd3eb09db from memory into f31
fnmsub.s f28, f22, f6, f31, dyn # perform operation
fnmsub.s f28, f22, f6, f31, rdn # perform operation
fnmsub.s f28, f22, f6, f31, rmm # perform operation
fnmsub.s f28, f22, f6, f31, rne # perform operation
fnmsub.s f28, f22, f6, f31, rtz # perform operation
fnmsub.s f28, f22, f6, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f28, f22, f6, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f28, f22, f6, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f28, f22, f6, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f28, f22, f6, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f28, f22, f6, f31 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0x7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f15, 0(x2) # load 0x7ef8654f from memory into f15
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f13, 0(x2) # load 0x007fffff from memory into f13
la x2, scratch
li x3, 0x30f17743 # load x3 with value 0x30f17743
sw x3, 0(x2) # store 0x30f17743 in memory
flw f19, 0(x2) # load 0x30f17743 from memory into f19
fnmsub.s f27, f15, f13, f19, dyn # perform operation
fnmsub.s f27, f15, f13, f19, rdn # perform operation
fnmsub.s f27, f15, f13, f19, rmm # perform operation
fnmsub.s f27, f15, f13, f19, rne # perform operation
fnmsub.s f27, f15, f13, f19, rtz # perform operation
fnmsub.s f27, f15, f13, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f27, f15, f13, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f27, f15, f13, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f27, f15, f13, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f27, f15, f13, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f27, f15, f13, f19 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0x807fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f2, 0(x2) # load 0x7ef8654f from memory into f2
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f29, 0(x2) # load 0x807fffff from memory into f29
la x2, scratch
li x3, 0x17be0e6c # load x3 with value 0x17be0e6c
sw x3, 0(x2) # store 0x17be0e6c in memory
flw f31, 0(x2) # load 0x17be0e6c from memory into f31
fnmsub.s f21, f2, f29, f31, dyn # perform operation
fnmsub.s f21, f2, f29, f31, rdn # perform operation
fnmsub.s f21, f2, f29, f31, rmm # perform operation
fnmsub.s f21, f2, f29, f31, rne # perform operation
fnmsub.s f21, f2, f29, f31, rtz # perform operation
fnmsub.s f21, f2, f29, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f21, f2, f29, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f21, f2, f29, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f21, f2, f29, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f21, f2, f29, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f21, f2, f29, f31 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0x400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f23, 0(x2) # load 0x7ef8654f from memory into f23
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f30, 0(x2) # load 0x00400000 from memory into f30
la x2, scratch
li x3, 0x147aa531 # load x3 with value 0x147aa531
sw x3, 0(x2) # store 0x147aa531 in memory
flw f8, 0(x2) # load 0x147aa531 from memory into f8
fnmsub.s f28, f23, f30, f8, dyn # perform operation
fnmsub.s f28, f23, f30, f8, rdn # perform operation
fnmsub.s f28, f23, f30, f8, rmm # perform operation
fnmsub.s f28, f23, f30, f8, rne # perform operation
fnmsub.s f28, f23, f30, f8, rtz # perform operation
fnmsub.s f28, f23, f30, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f28, f23, f30, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f28, f23, f30, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f28, f23, f30, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f28, f23, f30, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f28, f23, f30, f8 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0x80400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f29, 0(x2) # load 0x7ef8654f from memory into f29
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f23, 0(x2) # load 0x80400000 from memory into f23
la x2, scratch
li x3, 0x780c4bb4 # load x3 with value 0x780c4bb4
sw x3, 0(x2) # store 0x780c4bb4 in memory
flw f18, 0(x2) # load 0x780c4bb4 from memory into f18
fnmsub.s f7, f29, f23, f18, dyn # perform operation
fnmsub.s f7, f29, f23, f18, rdn # perform operation
fnmsub.s f7, f29, f23, f18, rmm # perform operation
fnmsub.s f7, f29, f23, f18, rne # perform operation
fnmsub.s f7, f29, f23, f18, rtz # perform operation
fnmsub.s f7, f29, f23, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f7, f29, f23, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f7, f29, f23, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f7, f29, f23, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f7, f29, f23, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f7, f29, f23, f18 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0x1)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f12, 0(x2) # load 0x7ef8654f from memory into f12
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f23, 0(x2) # load 0x00000001 from memory into f23
la x2, scratch
li x3, 0x834f16fd # load x3 with value 0x834f16fd
sw x3, 0(x2) # store 0x834f16fd in memory
flw f20, 0(x2) # load 0x834f16fd from memory into f20
fnmsub.s f10, f12, f23, f20, dyn # perform operation
fnmsub.s f10, f12, f23, f20, rdn # perform operation
fnmsub.s f10, f12, f23, f20, rmm # perform operation
fnmsub.s f10, f12, f23, f20, rne # perform operation
fnmsub.s f10, f12, f23, f20, rtz # perform operation
fnmsub.s f10, f12, f23, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f10, f12, f23, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f10, f12, f23, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f10, f12, f23, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f10, f12, f23, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f10, f12, f23, f20 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0x80000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f23, 0(x2) # load 0x7ef8654f from memory into f23
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f12, 0(x2) # load 0x80000001 from memory into f12
la x2, scratch
li x3, 0x0bed27c7 # load x3 with value 0x0bed27c7
sw x3, 0(x2) # store 0x0bed27c7 in memory
flw f14, 0(x2) # load 0x0bed27c7 from memory into f14
fnmsub.s f9, f23, f12, f14, dyn # perform operation
fnmsub.s f9, f23, f12, f14, rdn # perform operation
fnmsub.s f9, f23, f12, f14, rmm # perform operation
fnmsub.s f9, f23, f12, f14, rne # perform operation
fnmsub.s f9, f23, f12, f14, rtz # perform operation
fnmsub.s f9, f23, f12, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f9, f23, f12, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f9, f23, f12, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f9, f23, f12, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f9, f23, f12, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f9, f23, f12, f14 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0x7f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f30, 0(x2) # load 0x7ef8654f from memory into f30
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f3, 0(x2) # load 0x7f800000 from memory into f3
la x2, scratch
li x3, 0x70a791c5 # load x3 with value 0x70a791c5
sw x3, 0(x2) # store 0x70a791c5 in memory
flw f31, 0(x2) # load 0x70a791c5 from memory into f31
fnmsub.s f17, f30, f3, f31, dyn # perform operation
fnmsub.s f17, f30, f3, f31, rdn # perform operation
fnmsub.s f17, f30, f3, f31, rmm # perform operation
fnmsub.s f17, f30, f3, f31, rne # perform operation
fnmsub.s f17, f30, f3, f31, rtz # perform operation
fnmsub.s f17, f30, f3, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f17, f30, f3, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f17, f30, f3, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f17, f30, f3, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f17, f30, f3, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f17, f30, f3, f31 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0xff800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f9, 0(x2) # load 0x7ef8654f from memory into f9
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f29, 0(x2) # load 0xff800000 from memory into f29
la x2, scratch
li x3, 0x62ea8072 # load x3 with value 0x62ea8072
sw x3, 0(x2) # store 0x62ea8072 in memory
flw f23, 0(x2) # load 0x62ea8072 from memory into f23
fnmsub.s f22, f9, f29, f23, dyn # perform operation
fnmsub.s f22, f9, f29, f23, rdn # perform operation
fnmsub.s f22, f9, f29, f23, rmm # perform operation
fnmsub.s f22, f9, f29, f23, rne # perform operation
fnmsub.s f22, f9, f29, f23, rtz # perform operation
fnmsub.s f22, f9, f29, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f22, f9, f29, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f22, f9, f29, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f22, f9, f29, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f22, f9, f29, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f22, f9, f29, f23 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0x7fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f12, 0(x2) # load 0x7ef8654f from memory into f12
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f22, 0(x2) # load 0x7fc00000 from memory into f22
la x2, scratch
li x3, 0xe3db2798 # load x3 with value 0xe3db2798
sw x3, 0(x2) # store 0xe3db2798 in memory
flw f6, 0(x2) # load 0xe3db2798 from memory into f6
fnmsub.s f23, f12, f22, f6, dyn # perform operation
fnmsub.s f23, f12, f22, f6, rdn # perform operation
fnmsub.s f23, f12, f22, f6, rmm # perform operation
fnmsub.s f23, f12, f22, f6, rne # perform operation
fnmsub.s f23, f12, f22, f6, rtz # perform operation
fnmsub.s f23, f12, f22, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f23, f12, f22, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f23, f12, f22, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f23, f12, f22, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f23, f12, f22, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f23, f12, f22, f6 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0x7fffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f16, 0(x2) # load 0x7ef8654f from memory into f16
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f30, 0(x2) # load 0x7fffffff from memory into f30
la x2, scratch
li x3, 0x520acf27 # load x3 with value 0x520acf27
sw x3, 0(x2) # store 0x520acf27 in memory
flw f23, 0(x2) # load 0x520acf27 from memory into f23
fnmsub.s f25, f16, f30, f23, dyn # perform operation
fnmsub.s f25, f16, f30, f23, rdn # perform operation
fnmsub.s f25, f16, f30, f23, rmm # perform operation
fnmsub.s f25, f16, f30, f23, rne # perform operation
fnmsub.s f25, f16, f30, f23, rtz # perform operation
fnmsub.s f25, f16, f30, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f25, f16, f30, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f25, f16, f30, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f25, f16, f30, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f25, f16, f30, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f25, f16, f30, f23 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0xffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f9, 0(x2) # load 0x7ef8654f from memory into f9
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f14, 0(x2) # load 0xffffffff from memory into f14
la x2, scratch
li x3, 0x77067702 # load x3 with value 0x77067702
sw x3, 0(x2) # store 0x77067702 in memory
flw f6, 0(x2) # load 0x77067702 from memory into f6
fnmsub.s f29, f9, f14, f6, dyn # perform operation
fnmsub.s f29, f9, f14, f6, rdn # perform operation
fnmsub.s f29, f9, f14, f6, rmm # perform operation
fnmsub.s f29, f9, f14, f6, rne # perform operation
fnmsub.s f29, f9, f14, f6, rtz # perform operation
fnmsub.s f29, f9, f14, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f29, f9, f14, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f29, f9, f14, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f29, f9, f14, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f29, f9, f14, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f29, f9, f14, f6 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0x7f800001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f30, 0(x2) # load 0x7ef8654f from memory into f30
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f11, 0(x2) # load 0x7f800001 from memory into f11
la x2, scratch
li x3, 0xe1c3d79a # load x3 with value 0xe1c3d79a
sw x3, 0(x2) # store 0xe1c3d79a in memory
flw f24, 0(x2) # load 0xe1c3d79a from memory into f24
fnmsub.s f21, f30, f11, f24, dyn # perform operation
fnmsub.s f21, f30, f11, f24, rdn # perform operation
fnmsub.s f21, f30, f11, f24, rmm # perform operation
fnmsub.s f21, f30, f11, f24, rne # perform operation
fnmsub.s f21, f30, f11, f24, rtz # perform operation
fnmsub.s f21, f30, f11, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f21, f30, f11, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f21, f30, f11, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f21, f30, f11, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f21, f30, f11, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f21, f30, f11, f24 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0x7fbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f22, 0(x2) # load 0x7ef8654f from memory into f22
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f1, 0(x2) # load 0x7fbfffff from memory into f1
la x2, scratch
li x3, 0x6af64a39 # load x3 with value 0x6af64a39
sw x3, 0(x2) # store 0x6af64a39 in memory
flw f15, 0(x2) # load 0x6af64a39 from memory into f15
fnmsub.s f2, f22, f1, f15, dyn # perform operation
fnmsub.s f2, f22, f1, f15, rdn # perform operation
fnmsub.s f2, f22, f1, f15, rmm # perform operation
fnmsub.s f2, f22, f1, f15, rne # perform operation
fnmsub.s f2, f22, f1, f15, rtz # perform operation
fnmsub.s f2, f22, f1, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f2, f22, f1, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f2, f22, f1, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f2, f22, f1, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f2, f22, f1, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f2, f22, f1, f15 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0xffbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f12, 0(x2) # load 0x7ef8654f from memory into f12
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f19, 0(x2) # load 0xffbfffff from memory into f19
la x2, scratch
li x3, 0x81db86d0 # load x3 with value 0x81db86d0
sw x3, 0(x2) # store 0x81db86d0 in memory
flw f24, 0(x2) # load 0x81db86d0 from memory into f24
fnmsub.s f1, f12, f19, f24, dyn # perform operation
fnmsub.s f1, f12, f19, f24, rdn # perform operation
fnmsub.s f1, f12, f19, f24, rmm # perform operation
fnmsub.s f1, f12, f19, f24, rne # perform operation
fnmsub.s f1, f12, f19, f24, rtz # perform operation
fnmsub.s f1, f12, f19, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f1, f12, f19, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f1, f12, f19, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f1, f12, f19, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f1, f12, f19, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f1, f12, f19, f24 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0x7ef8654f)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f1, 0(x2) # load 0x7ef8654f from memory into f1
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f18, 0(x2) # load 0x7ef8654f from memory into f18
la x2, scratch
li x3, 0xa6b74ea2 # load x3 with value 0xa6b74ea2
sw x3, 0(x2) # store 0xa6b74ea2 in memory
flw f19, 0(x2) # load 0xa6b74ea2 from memory into f19
fnmsub.s f25, f1, f18, f19, dyn # perform operation
fnmsub.s f25, f1, f18, f19, rdn # perform operation
fnmsub.s f25, f1, f18, f19, rmm # perform operation
fnmsub.s f25, f1, f18, f19, rne # perform operation
fnmsub.s f25, f1, f18, f19, rtz # perform operation
fnmsub.s f25, f1, f18, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f25, f1, f18, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f25, f1, f18, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f25, f1, f18, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f25, f1, f18, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f25, f1, f18, f19 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0x813d9ab0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f17, 0(x2) # load 0x7ef8654f from memory into f17
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f20, 0(x2) # load 0x813d9ab0 from memory into f20
la x2, scratch
li x3, 0xf4ad3992 # load x3 with value 0xf4ad3992
sw x3, 0(x2) # store 0xf4ad3992 in memory
flw f22, 0(x2) # load 0xf4ad3992 from memory into f22
fnmsub.s f23, f17, f20, f22, dyn # perform operation
fnmsub.s f23, f17, f20, f22, rdn # perform operation
fnmsub.s f23, f17, f20, f22, rmm # perform operation
fnmsub.s f23, f17, f20, f22, rne # perform operation
fnmsub.s f23, f17, f20, f22, rtz # perform operation
fnmsub.s f23, f17, f20, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f23, f17, f20, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f23, f17, f20, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f23, f17, f20, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f23, f17, f20, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f23, f17, f20, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0x0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f25, 0(x2) # load 0x813d9ab0 from memory into f25
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f18, 0(x2) # load 0x00000000 from memory into f18
la x2, scratch
li x3, 0xc98a6000 # load x3 with value 0xc98a6000
sw x3, 0(x2) # store 0xc98a6000 in memory
flw f5, 0(x2) # load 0xc98a6000 from memory into f5
fnmsub.s f29, f25, f18, f5, dyn # perform operation
fnmsub.s f29, f25, f18, f5, rdn # perform operation
fnmsub.s f29, f25, f18, f5, rmm # perform operation
fnmsub.s f29, f25, f18, f5, rne # perform operation
fnmsub.s f29, f25, f18, f5, rtz # perform operation
fnmsub.s f29, f25, f18, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f29, f25, f18, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f29, f25, f18, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f29, f25, f18, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f29, f25, f18, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f29, f25, f18, f5 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0x80000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f22, 0(x2) # load 0x813d9ab0 from memory into f22
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f17, 0(x2) # load 0x80000000 from memory into f17
la x2, scratch
li x3, 0x2b3e844b # load x3 with value 0x2b3e844b
sw x3, 0(x2) # store 0x2b3e844b in memory
flw f15, 0(x2) # load 0x2b3e844b from memory into f15
fnmsub.s f1, f22, f17, f15, dyn # perform operation
fnmsub.s f1, f22, f17, f15, rdn # perform operation
fnmsub.s f1, f22, f17, f15, rmm # perform operation
fnmsub.s f1, f22, f17, f15, rne # perform operation
fnmsub.s f1, f22, f17, f15, rtz # perform operation
fnmsub.s f1, f22, f17, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f1, f22, f17, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f1, f22, f17, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f1, f22, f17, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f1, f22, f17, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f1, f22, f17, f15 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0x3f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f22, 0(x2) # load 0x813d9ab0 from memory into f22
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f12, 0(x2) # load 0x3f800000 from memory into f12
la x2, scratch
li x3, 0x85adde82 # load x3 with value 0x85adde82
sw x3, 0(x2) # store 0x85adde82 in memory
flw f5, 0(x2) # load 0x85adde82 from memory into f5
fnmsub.s f25, f22, f12, f5, dyn # perform operation
fnmsub.s f25, f22, f12, f5, rdn # perform operation
fnmsub.s f25, f22, f12, f5, rmm # perform operation
fnmsub.s f25, f22, f12, f5, rne # perform operation
fnmsub.s f25, f22, f12, f5, rtz # perform operation
fnmsub.s f25, f22, f12, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f25, f22, f12, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f25, f22, f12, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f25, f22, f12, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f25, f22, f12, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f25, f22, f12, f5 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0xbf800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f7, 0(x2) # load 0x813d9ab0 from memory into f7
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f8, 0(x2) # load 0xbf800000 from memory into f8
la x2, scratch
li x3, 0x3360c6dc # load x3 with value 0x3360c6dc
sw x3, 0(x2) # store 0x3360c6dc in memory
flw f23, 0(x2) # load 0x3360c6dc from memory into f23
fnmsub.s f18, f7, f8, f23, dyn # perform operation
fnmsub.s f18, f7, f8, f23, rdn # perform operation
fnmsub.s f18, f7, f8, f23, rmm # perform operation
fnmsub.s f18, f7, f8, f23, rne # perform operation
fnmsub.s f18, f7, f8, f23, rtz # perform operation
fnmsub.s f18, f7, f8, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f18, f7, f8, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f18, f7, f8, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f18, f7, f8, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f18, f7, f8, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f18, f7, f8, f23 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0x3fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f24, 0(x2) # load 0x813d9ab0 from memory into f24
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f11, 0(x2) # load 0x3fc00000 from memory into f11
la x2, scratch
li x3, 0xff7b861e # load x3 with value 0xff7b861e
sw x3, 0(x2) # store 0xff7b861e in memory
flw f6, 0(x2) # load 0xff7b861e from memory into f6
fnmsub.s f16, f24, f11, f6, dyn # perform operation
fnmsub.s f16, f24, f11, f6, rdn # perform operation
fnmsub.s f16, f24, f11, f6, rmm # perform operation
fnmsub.s f16, f24, f11, f6, rne # perform operation
fnmsub.s f16, f24, f11, f6, rtz # perform operation
fnmsub.s f16, f24, f11, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f16, f24, f11, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f16, f24, f11, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f16, f24, f11, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f16, f24, f11, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f16, f24, f11, f6 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0xbfc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f21, 0(x2) # load 0x813d9ab0 from memory into f21
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f12, 0(x2) # load 0xbfc00000 from memory into f12
la x2, scratch
li x3, 0x0f1533a5 # load x3 with value 0x0f1533a5
sw x3, 0(x2) # store 0x0f1533a5 in memory
flw f30, 0(x2) # load 0x0f1533a5 from memory into f30
fnmsub.s f8, f21, f12, f30, dyn # perform operation
fnmsub.s f8, f21, f12, f30, rdn # perform operation
fnmsub.s f8, f21, f12, f30, rmm # perform operation
fnmsub.s f8, f21, f12, f30, rne # perform operation
fnmsub.s f8, f21, f12, f30, rtz # perform operation
fnmsub.s f8, f21, f12, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f8, f21, f12, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f8, f21, f12, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f8, f21, f12, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f8, f21, f12, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f8, f21, f12, f30 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0x40000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f29, 0(x2) # load 0x813d9ab0 from memory into f29
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f27, 0(x2) # load 0x40000000 from memory into f27
la x2, scratch
li x3, 0x041de182 # load x3 with value 0x041de182
sw x3, 0(x2) # store 0x041de182 in memory
flw f23, 0(x2) # load 0x041de182 from memory into f23
fnmsub.s f28, f29, f27, f23, dyn # perform operation
fnmsub.s f28, f29, f27, f23, rdn # perform operation
fnmsub.s f28, f29, f27, f23, rmm # perform operation
fnmsub.s f28, f29, f27, f23, rne # perform operation
fnmsub.s f28, f29, f27, f23, rtz # perform operation
fnmsub.s f28, f29, f27, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f28, f29, f27, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f28, f29, f27, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f28, f29, f27, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f28, f29, f27, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f28, f29, f27, f23 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0xc0000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f6, 0(x2) # load 0x813d9ab0 from memory into f6
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f28, 0(x2) # load 0xc0000000 from memory into f28
la x2, scratch
li x3, 0x774ae4e7 # load x3 with value 0x774ae4e7
sw x3, 0(x2) # store 0x774ae4e7 in memory
flw f7, 0(x2) # load 0x774ae4e7 from memory into f7
fnmsub.s f22, f6, f28, f7, dyn # perform operation
fnmsub.s f22, f6, f28, f7, rdn # perform operation
fnmsub.s f22, f6, f28, f7, rmm # perform operation
fnmsub.s f22, f6, f28, f7, rne # perform operation
fnmsub.s f22, f6, f28, f7, rtz # perform operation
fnmsub.s f22, f6, f28, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f22, f6, f28, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f22, f6, f28, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f22, f6, f28, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f22, f6, f28, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f22, f6, f28, f7 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0x800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f29, 0(x2) # load 0x813d9ab0 from memory into f29
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f25, 0(x2) # load 0x00800000 from memory into f25
la x2, scratch
li x3, 0xdceac968 # load x3 with value 0xdceac968
sw x3, 0(x2) # store 0xdceac968 in memory
flw f3, 0(x2) # load 0xdceac968 from memory into f3
fnmsub.s f13, f29, f25, f3, dyn # perform operation
fnmsub.s f13, f29, f25, f3, rdn # perform operation
fnmsub.s f13, f29, f25, f3, rmm # perform operation
fnmsub.s f13, f29, f25, f3, rne # perform operation
fnmsub.s f13, f29, f25, f3, rtz # perform operation
fnmsub.s f13, f29, f25, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f13, f29, f25, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f13, f29, f25, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f13, f29, f25, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f13, f29, f25, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f13, f29, f25, f3 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0x80800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f24, 0(x2) # load 0x813d9ab0 from memory into f24
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f22, 0(x2) # load 0x80800000 from memory into f22
la x2, scratch
li x3, 0xd4987b92 # load x3 with value 0xd4987b92
sw x3, 0(x2) # store 0xd4987b92 in memory
flw f26, 0(x2) # load 0xd4987b92 from memory into f26
fnmsub.s f18, f24, f22, f26, dyn # perform operation
fnmsub.s f18, f24, f22, f26, rdn # perform operation
fnmsub.s f18, f24, f22, f26, rmm # perform operation
fnmsub.s f18, f24, f22, f26, rne # perform operation
fnmsub.s f18, f24, f22, f26, rtz # perform operation
fnmsub.s f18, f24, f22, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f18, f24, f22, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f18, f24, f22, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f18, f24, f22, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f18, f24, f22, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f18, f24, f22, f26 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0x7f7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f26, 0(x2) # load 0x813d9ab0 from memory into f26
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f29, 0(x2) # load 0x7f7fffff from memory into f29
la x2, scratch
li x3, 0x59ab2f69 # load x3 with value 0x59ab2f69
sw x3, 0(x2) # store 0x59ab2f69 in memory
flw f10, 0(x2) # load 0x59ab2f69 from memory into f10
fnmsub.s f19, f26, f29, f10, dyn # perform operation
fnmsub.s f19, f26, f29, f10, rdn # perform operation
fnmsub.s f19, f26, f29, f10, rmm # perform operation
fnmsub.s f19, f26, f29, f10, rne # perform operation
fnmsub.s f19, f26, f29, f10, rtz # perform operation
fnmsub.s f19, f26, f29, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f19, f26, f29, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f19, f26, f29, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f19, f26, f29, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f19, f26, f29, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f19, f26, f29, f10 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0xff7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f5, 0(x2) # load 0x813d9ab0 from memory into f5
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f29, 0(x2) # load 0xff7fffff from memory into f29
la x2, scratch
li x3, 0x9c75e409 # load x3 with value 0x9c75e409
sw x3, 0(x2) # store 0x9c75e409 in memory
flw f20, 0(x2) # load 0x9c75e409 from memory into f20
fnmsub.s f19, f5, f29, f20, dyn # perform operation
fnmsub.s f19, f5, f29, f20, rdn # perform operation
fnmsub.s f19, f5, f29, f20, rmm # perform operation
fnmsub.s f19, f5, f29, f20, rne # perform operation
fnmsub.s f19, f5, f29, f20, rtz # perform operation
fnmsub.s f19, f5, f29, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f19, f5, f29, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f19, f5, f29, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f19, f5, f29, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f19, f5, f29, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f19, f5, f29, f20 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0x7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f8, 0(x2) # load 0x813d9ab0 from memory into f8
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f7, 0(x2) # load 0x007fffff from memory into f7
la x2, scratch
li x3, 0x713a67b2 # load x3 with value 0x713a67b2
sw x3, 0(x2) # store 0x713a67b2 in memory
flw f16, 0(x2) # load 0x713a67b2 from memory into f16
fnmsub.s f26, f8, f7, f16, dyn # perform operation
fnmsub.s f26, f8, f7, f16, rdn # perform operation
fnmsub.s f26, f8, f7, f16, rmm # perform operation
fnmsub.s f26, f8, f7, f16, rne # perform operation
fnmsub.s f26, f8, f7, f16, rtz # perform operation
fnmsub.s f26, f8, f7, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f26, f8, f7, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f26, f8, f7, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f26, f8, f7, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f26, f8, f7, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f26, f8, f7, f16 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0x807fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f20, 0(x2) # load 0x813d9ab0 from memory into f20
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f24, 0(x2) # load 0x807fffff from memory into f24
la x2, scratch
li x3, 0x58e412ba # load x3 with value 0x58e412ba
sw x3, 0(x2) # store 0x58e412ba in memory
flw f28, 0(x2) # load 0x58e412ba from memory into f28
fnmsub.s f11, f20, f24, f28, dyn # perform operation
fnmsub.s f11, f20, f24, f28, rdn # perform operation
fnmsub.s f11, f20, f24, f28, rmm # perform operation
fnmsub.s f11, f20, f24, f28, rne # perform operation
fnmsub.s f11, f20, f24, f28, rtz # perform operation
fnmsub.s f11, f20, f24, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f11, f20, f24, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f11, f20, f24, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f11, f20, f24, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f11, f20, f24, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f11, f20, f24, f28 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0x400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f27, 0(x2) # load 0x813d9ab0 from memory into f27
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f24, 0(x2) # load 0x00400000 from memory into f24
la x2, scratch
li x3, 0x66cd13e1 # load x3 with value 0x66cd13e1
sw x3, 0(x2) # store 0x66cd13e1 in memory
flw f28, 0(x2) # load 0x66cd13e1 from memory into f28
fnmsub.s f6, f27, f24, f28, dyn # perform operation
fnmsub.s f6, f27, f24, f28, rdn # perform operation
fnmsub.s f6, f27, f24, f28, rmm # perform operation
fnmsub.s f6, f27, f24, f28, rne # perform operation
fnmsub.s f6, f27, f24, f28, rtz # perform operation
fnmsub.s f6, f27, f24, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f6, f27, f24, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f6, f27, f24, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f6, f27, f24, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f6, f27, f24, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f6, f27, f24, f28 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0x80400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f3, 0(x2) # load 0x813d9ab0 from memory into f3
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f20, 0(x2) # load 0x80400000 from memory into f20
la x2, scratch
li x3, 0xccc14cdb # load x3 with value 0xccc14cdb
sw x3, 0(x2) # store 0xccc14cdb in memory
flw f16, 0(x2) # load 0xccc14cdb from memory into f16
fnmsub.s f11, f3, f20, f16, dyn # perform operation
fnmsub.s f11, f3, f20, f16, rdn # perform operation
fnmsub.s f11, f3, f20, f16, rmm # perform operation
fnmsub.s f11, f3, f20, f16, rne # perform operation
fnmsub.s f11, f3, f20, f16, rtz # perform operation
fnmsub.s f11, f3, f20, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f11, f3, f20, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f11, f3, f20, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f11, f3, f20, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f11, f3, f20, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f11, f3, f20, f16 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0x1)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f2, 0(x2) # load 0x813d9ab0 from memory into f2
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f27, 0(x2) # load 0x00000001 from memory into f27
la x2, scratch
li x3, 0x9e063050 # load x3 with value 0x9e063050
sw x3, 0(x2) # store 0x9e063050 in memory
flw f28, 0(x2) # load 0x9e063050 from memory into f28
fnmsub.s f6, f2, f27, f28, dyn # perform operation
fnmsub.s f6, f2, f27, f28, rdn # perform operation
fnmsub.s f6, f2, f27, f28, rmm # perform operation
fnmsub.s f6, f2, f27, f28, rne # perform operation
fnmsub.s f6, f2, f27, f28, rtz # perform operation
fnmsub.s f6, f2, f27, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f6, f2, f27, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f6, f2, f27, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f6, f2, f27, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f6, f2, f27, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f6, f2, f27, f28 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0x80000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f2, 0(x2) # load 0x813d9ab0 from memory into f2
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f16, 0(x2) # load 0x80000001 from memory into f16
la x2, scratch
li x3, 0x2e943896 # load x3 with value 0x2e943896
sw x3, 0(x2) # store 0x2e943896 in memory
flw f15, 0(x2) # load 0x2e943896 from memory into f15
fnmsub.s f30, f2, f16, f15, dyn # perform operation
fnmsub.s f30, f2, f16, f15, rdn # perform operation
fnmsub.s f30, f2, f16, f15, rmm # perform operation
fnmsub.s f30, f2, f16, f15, rne # perform operation
fnmsub.s f30, f2, f16, f15, rtz # perform operation
fnmsub.s f30, f2, f16, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f30, f2, f16, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f30, f2, f16, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f30, f2, f16, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f30, f2, f16, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f30, f2, f16, f15 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0x7f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f16, 0(x2) # load 0x813d9ab0 from memory into f16
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f3, 0(x2) # load 0x7f800000 from memory into f3
la x2, scratch
li x3, 0x9fca180d # load x3 with value 0x9fca180d
sw x3, 0(x2) # store 0x9fca180d in memory
flw f11, 0(x2) # load 0x9fca180d from memory into f11
fnmsub.s f26, f16, f3, f11, dyn # perform operation
fnmsub.s f26, f16, f3, f11, rdn # perform operation
fnmsub.s f26, f16, f3, f11, rmm # perform operation
fnmsub.s f26, f16, f3, f11, rne # perform operation
fnmsub.s f26, f16, f3, f11, rtz # perform operation
fnmsub.s f26, f16, f3, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f26, f16, f3, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f26, f16, f3, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f26, f16, f3, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f26, f16, f3, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f26, f16, f3, f11 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0xff800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f14, 0(x2) # load 0x813d9ab0 from memory into f14
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f20, 0(x2) # load 0xff800000 from memory into f20
la x2, scratch
li x3, 0xf94249bd # load x3 with value 0xf94249bd
sw x3, 0(x2) # store 0xf94249bd in memory
flw f19, 0(x2) # load 0xf94249bd from memory into f19
fnmsub.s f5, f14, f20, f19, dyn # perform operation
fnmsub.s f5, f14, f20, f19, rdn # perform operation
fnmsub.s f5, f14, f20, f19, rmm # perform operation
fnmsub.s f5, f14, f20, f19, rne # perform operation
fnmsub.s f5, f14, f20, f19, rtz # perform operation
fnmsub.s f5, f14, f20, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f5, f14, f20, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f5, f14, f20, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f5, f14, f20, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f5, f14, f20, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f5, f14, f20, f19 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0x7fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f26, 0(x2) # load 0x813d9ab0 from memory into f26
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f24, 0(x2) # load 0x7fc00000 from memory into f24
la x2, scratch
li x3, 0xb4decf2d # load x3 with value 0xb4decf2d
sw x3, 0(x2) # store 0xb4decf2d in memory
flw f18, 0(x2) # load 0xb4decf2d from memory into f18
fnmsub.s f14, f26, f24, f18, dyn # perform operation
fnmsub.s f14, f26, f24, f18, rdn # perform operation
fnmsub.s f14, f26, f24, f18, rmm # perform operation
fnmsub.s f14, f26, f24, f18, rne # perform operation
fnmsub.s f14, f26, f24, f18, rtz # perform operation
fnmsub.s f14, f26, f24, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f14, f26, f24, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f14, f26, f24, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f14, f26, f24, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f14, f26, f24, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f14, f26, f24, f18 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0x7fffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f23, 0(x2) # load 0x813d9ab0 from memory into f23
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f14, 0(x2) # load 0x7fffffff from memory into f14
la x2, scratch
li x3, 0xe33c0bf0 # load x3 with value 0xe33c0bf0
sw x3, 0(x2) # store 0xe33c0bf0 in memory
flw f25, 0(x2) # load 0xe33c0bf0 from memory into f25
fnmsub.s f24, f23, f14, f25, dyn # perform operation
fnmsub.s f24, f23, f14, f25, rdn # perform operation
fnmsub.s f24, f23, f14, f25, rmm # perform operation
fnmsub.s f24, f23, f14, f25, rne # perform operation
fnmsub.s f24, f23, f14, f25, rtz # perform operation
fnmsub.s f24, f23, f14, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f24, f23, f14, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f24, f23, f14, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f24, f23, f14, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f24, f23, f14, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f24, f23, f14, f25 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0xffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f25, 0(x2) # load 0x813d9ab0 from memory into f25
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f11, 0(x2) # load 0xffffffff from memory into f11
la x2, scratch
li x3, 0xdd387313 # load x3 with value 0xdd387313
sw x3, 0(x2) # store 0xdd387313 in memory
flw f27, 0(x2) # load 0xdd387313 from memory into f27
fnmsub.s f3, f25, f11, f27, dyn # perform operation
fnmsub.s f3, f25, f11, f27, rdn # perform operation
fnmsub.s f3, f25, f11, f27, rmm # perform operation
fnmsub.s f3, f25, f11, f27, rne # perform operation
fnmsub.s f3, f25, f11, f27, rtz # perform operation
fnmsub.s f3, f25, f11, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f3, f25, f11, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f3, f25, f11, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f3, f25, f11, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f3, f25, f11, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f3, f25, f11, f27 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0x7f800001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f2, 0(x2) # load 0x813d9ab0 from memory into f2
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f13, 0(x2) # load 0x7f800001 from memory into f13
la x2, scratch
li x3, 0xaafcde75 # load x3 with value 0xaafcde75
sw x3, 0(x2) # store 0xaafcde75 in memory
flw f25, 0(x2) # load 0xaafcde75 from memory into f25
fnmsub.s f30, f2, f13, f25, dyn # perform operation
fnmsub.s f30, f2, f13, f25, rdn # perform operation
fnmsub.s f30, f2, f13, f25, rmm # perform operation
fnmsub.s f30, f2, f13, f25, rne # perform operation
fnmsub.s f30, f2, f13, f25, rtz # perform operation
fnmsub.s f30, f2, f13, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f30, f2, f13, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f30, f2, f13, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f30, f2, f13, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f30, f2, f13, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f30, f2, f13, f25 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0x7fbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f19, 0(x2) # load 0x813d9ab0 from memory into f19
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f3, 0(x2) # load 0x7fbfffff from memory into f3
la x2, scratch
li x3, 0xfec66fba # load x3 with value 0xfec66fba
sw x3, 0(x2) # store 0xfec66fba in memory
flw f17, 0(x2) # load 0xfec66fba from memory into f17
fnmsub.s f5, f19, f3, f17, dyn # perform operation
fnmsub.s f5, f19, f3, f17, rdn # perform operation
fnmsub.s f5, f19, f3, f17, rmm # perform operation
fnmsub.s f5, f19, f3, f17, rne # perform operation
fnmsub.s f5, f19, f3, f17, rtz # perform operation
fnmsub.s f5, f19, f3, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f5, f19, f3, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f5, f19, f3, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f5, f19, f3, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f5, f19, f3, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f5, f19, f3, f17 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0xffbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f23, 0(x2) # load 0x813d9ab0 from memory into f23
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f13, 0(x2) # load 0xffbfffff from memory into f13
la x2, scratch
li x3, 0x8dcc4a41 # load x3 with value 0x8dcc4a41
sw x3, 0(x2) # store 0x8dcc4a41 in memory
flw f1, 0(x2) # load 0x8dcc4a41 from memory into f1
fnmsub.s f18, f23, f13, f1, dyn # perform operation
fnmsub.s f18, f23, f13, f1, rdn # perform operation
fnmsub.s f18, f23, f13, f1, rmm # perform operation
fnmsub.s f18, f23, f13, f1, rne # perform operation
fnmsub.s f18, f23, f13, f1, rtz # perform operation
fnmsub.s f18, f23, f13, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f18, f23, f13, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f18, f23, f13, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f18, f23, f13, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f18, f23, f13, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f18, f23, f13, f1 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0x7ef8654f)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f25, 0(x2) # load 0x813d9ab0 from memory into f25
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f7, 0(x2) # load 0x7ef8654f from memory into f7
la x2, scratch
li x3, 0x8dd24047 # load x3 with value 0x8dd24047
sw x3, 0(x2) # store 0x8dd24047 in memory
flw f16, 0(x2) # load 0x8dd24047 from memory into f16
fnmsub.s f24, f25, f7, f16, dyn # perform operation
fnmsub.s f24, f25, f7, f16, rdn # perform operation
fnmsub.s f24, f25, f7, f16, rmm # perform operation
fnmsub.s f24, f25, f7, f16, rne # perform operation
fnmsub.s f24, f25, f7, f16, rtz # perform operation
fnmsub.s f24, f25, f7, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f24, f25, f7, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f24, f25, f7, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f24, f25, f7, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f24, f25, f7, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f24, f25, f7, f16 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0x813d9ab0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f21, 0(x2) # load 0x813d9ab0 from memory into f21
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f25, 0(x2) # load 0x813d9ab0 from memory into f25
la x2, scratch
li x3, 0x9fc0e818 # load x3 with value 0x9fc0e818
sw x3, 0(x2) # store 0x9fc0e818 in memory
flw f27, 0(x2) # load 0x9fc0e818 from memory into f27
fnmsub.s f20, f21, f25, f27, dyn # perform operation
fnmsub.s f20, f21, f25, f27, rdn # perform operation
fnmsub.s f20, f21, f25, f27, rmm # perform operation
fnmsub.s f20, f21, f25, f27, rne # perform operation
fnmsub.s f20, f21, f25, f27, rtz # perform operation
fnmsub.s f20, f21, f25, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f20, f21, f25, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f20, f21, f25, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f20, f21, f25, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f20, f21, f25, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f20, f21, f25, f27 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x0)
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f25, 0(x2) # load 0x00000000 from memory into f25
la x2, scratch
li x3, 0x8f76ade1 # load x3 with value 0x8f76ade1
sw x3, 0(x2) # store 0x8f76ade1 in memory
flw f14, 0(x2) # load 0x8f76ade1 from memory into f14
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f17, 0(x2) # load 0x00000000 from memory into f17
fnmsub.s f21, f25, f14, f17, dyn # perform operation
fnmsub.s f21, f25, f14, f17, rdn # perform operation
fnmsub.s f21, f25, f14, f17, rmm # perform operation
fnmsub.s f21, f25, f14, f17, rne # perform operation
fnmsub.s f21, f25, f14, f17, rtz # perform operation
fnmsub.s f21, f25, f14, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f21, f25, f14, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f21, f25, f14, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f21, f25, f14, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f21, f25, f14, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f21, f25, f14, f17 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x80000000)
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f8, 0(x2) # load 0x00000000 from memory into f8
la x2, scratch
li x3, 0x024f0d3c # load x3 with value 0x024f0d3c
sw x3, 0(x2) # store 0x024f0d3c in memory
flw f25, 0(x2) # load 0x024f0d3c from memory into f25
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f26, 0(x2) # load 0x80000000 from memory into f26
fnmsub.s f31, f8, f25, f26, dyn # perform operation
fnmsub.s f31, f8, f25, f26, rdn # perform operation
fnmsub.s f31, f8, f25, f26, rmm # perform operation
fnmsub.s f31, f8, f25, f26, rne # perform operation
fnmsub.s f31, f8, f25, f26, rtz # perform operation
fnmsub.s f31, f8, f25, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f31, f8, f25, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f31, f8, f25, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f31, f8, f25, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f31, f8, f25, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f31, f8, f25, f26 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x3f800000)
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f10, 0(x2) # load 0x00000000 from memory into f10
la x2, scratch
li x3, 0xcf88e9e4 # load x3 with value 0xcf88e9e4
sw x3, 0(x2) # store 0xcf88e9e4 in memory
flw f25, 0(x2) # load 0xcf88e9e4 from memory into f25
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f18, 0(x2) # load 0x3f800000 from memory into f18
fnmsub.s f20, f10, f25, f18, dyn # perform operation
fnmsub.s f20, f10, f25, f18, rdn # perform operation
fnmsub.s f20, f10, f25, f18, rmm # perform operation
fnmsub.s f20, f10, f25, f18, rne # perform operation
fnmsub.s f20, f10, f25, f18, rtz # perform operation
fnmsub.s f20, f10, f25, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f20, f10, f25, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f20, f10, f25, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f20, f10, f25, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f20, f10, f25, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f20, f10, f25, f18 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0xbf800000)
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f8, 0(x2) # load 0x00000000 from memory into f8
la x2, scratch
li x3, 0x36dad2ba # load x3 with value 0x36dad2ba
sw x3, 0(x2) # store 0x36dad2ba in memory
flw f23, 0(x2) # load 0x36dad2ba from memory into f23
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f10, 0(x2) # load 0xbf800000 from memory into f10
fnmsub.s f17, f8, f23, f10, dyn # perform operation
fnmsub.s f17, f8, f23, f10, rdn # perform operation
fnmsub.s f17, f8, f23, f10, rmm # perform operation
fnmsub.s f17, f8, f23, f10, rne # perform operation
fnmsub.s f17, f8, f23, f10, rtz # perform operation
fnmsub.s f17, f8, f23, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f17, f8, f23, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f17, f8, f23, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f17, f8, f23, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f17, f8, f23, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f17, f8, f23, f10 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x3fc00000)
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f6, 0(x2) # load 0x00000000 from memory into f6
la x2, scratch
li x3, 0x65e978d3 # load x3 with value 0x65e978d3
sw x3, 0(x2) # store 0x65e978d3 in memory
flw f3, 0(x2) # load 0x65e978d3 from memory into f3
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f2, 0(x2) # load 0x3fc00000 from memory into f2
fnmsub.s f26, f6, f3, f2, dyn # perform operation
fnmsub.s f26, f6, f3, f2, rdn # perform operation
fnmsub.s f26, f6, f3, f2, rmm # perform operation
fnmsub.s f26, f6, f3, f2, rne # perform operation
fnmsub.s f26, f6, f3, f2, rtz # perform operation
fnmsub.s f26, f6, f3, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f26, f6, f3, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f26, f6, f3, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f26, f6, f3, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f26, f6, f3, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f26, f6, f3, f2 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0xbfc00000)
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f12, 0(x2) # load 0x00000000 from memory into f12
la x2, scratch
li x3, 0xbca48678 # load x3 with value 0xbca48678
sw x3, 0(x2) # store 0xbca48678 in memory
flw f14, 0(x2) # load 0xbca48678 from memory into f14
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f2, 0(x2) # load 0xbfc00000 from memory into f2
fnmsub.s f23, f12, f14, f2, dyn # perform operation
fnmsub.s f23, f12, f14, f2, rdn # perform operation
fnmsub.s f23, f12, f14, f2, rmm # perform operation
fnmsub.s f23, f12, f14, f2, rne # perform operation
fnmsub.s f23, f12, f14, f2, rtz # perform operation
fnmsub.s f23, f12, f14, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f23, f12, f14, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f23, f12, f14, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f23, f12, f14, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f23, f12, f14, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f23, f12, f14, f2 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x40000000)
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f26, 0(x2) # load 0x00000000 from memory into f26
la x2, scratch
li x3, 0x5cbef8d9 # load x3 with value 0x5cbef8d9
sw x3, 0(x2) # store 0x5cbef8d9 in memory
flw f6, 0(x2) # load 0x5cbef8d9 from memory into f6
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f11, 0(x2) # load 0x40000000 from memory into f11
fnmsub.s f9, f26, f6, f11, dyn # perform operation
fnmsub.s f9, f26, f6, f11, rdn # perform operation
fnmsub.s f9, f26, f6, f11, rmm # perform operation
fnmsub.s f9, f26, f6, f11, rne # perform operation
fnmsub.s f9, f26, f6, f11, rtz # perform operation
fnmsub.s f9, f26, f6, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f9, f26, f6, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f9, f26, f6, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f9, f26, f6, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f9, f26, f6, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f9, f26, f6, f11 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0xc0000000)
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f1, 0(x2) # load 0x00000000 from memory into f1
la x2, scratch
li x3, 0xc04fcf26 # load x3 with value 0xc04fcf26
sw x3, 0(x2) # store 0xc04fcf26 in memory
flw f10, 0(x2) # load 0xc04fcf26 from memory into f10
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f14, 0(x2) # load 0xc0000000 from memory into f14
fnmsub.s f2, f1, f10, f14, dyn # perform operation
fnmsub.s f2, f1, f10, f14, rdn # perform operation
fnmsub.s f2, f1, f10, f14, rmm # perform operation
fnmsub.s f2, f1, f10, f14, rne # perform operation
fnmsub.s f2, f1, f10, f14, rtz # perform operation
fnmsub.s f2, f1, f10, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f2, f1, f10, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f2, f1, f10, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f2, f1, f10, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f2, f1, f10, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f2, f1, f10, f14 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x800000)
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f15, 0(x2) # load 0x00000000 from memory into f15
la x2, scratch
li x3, 0xbf1f66cd # load x3 with value 0xbf1f66cd
sw x3, 0(x2) # store 0xbf1f66cd in memory
flw f6, 0(x2) # load 0xbf1f66cd from memory into f6
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f21, 0(x2) # load 0x00800000 from memory into f21
fnmsub.s f1, f15, f6, f21, dyn # perform operation
fnmsub.s f1, f15, f6, f21, rdn # perform operation
fnmsub.s f1, f15, f6, f21, rmm # perform operation
fnmsub.s f1, f15, f6, f21, rne # perform operation
fnmsub.s f1, f15, f6, f21, rtz # perform operation
fnmsub.s f1, f15, f6, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f1, f15, f6, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f1, f15, f6, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f1, f15, f6, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f1, f15, f6, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f1, f15, f6, f21 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x80800000)
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f28, 0(x2) # load 0x00000000 from memory into f28
la x2, scratch
li x3, 0x314adc4b # load x3 with value 0x314adc4b
sw x3, 0(x2) # store 0x314adc4b in memory
flw f3, 0(x2) # load 0x314adc4b from memory into f3
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f17, 0(x2) # load 0x80800000 from memory into f17
fnmsub.s f13, f28, f3, f17, dyn # perform operation
fnmsub.s f13, f28, f3, f17, rdn # perform operation
fnmsub.s f13, f28, f3, f17, rmm # perform operation
fnmsub.s f13, f28, f3, f17, rne # perform operation
fnmsub.s f13, f28, f3, f17, rtz # perform operation
fnmsub.s f13, f28, f3, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f13, f28, f3, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f13, f28, f3, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f13, f28, f3, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f13, f28, f3, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f13, f28, f3, f17 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x7f7fffff)
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f19, 0(x2) # load 0x00000000 from memory into f19
la x2, scratch
li x3, 0x2d773dbc # load x3 with value 0x2d773dbc
sw x3, 0(x2) # store 0x2d773dbc in memory
flw f10, 0(x2) # load 0x2d773dbc from memory into f10
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f18, 0(x2) # load 0x7f7fffff from memory into f18
fnmsub.s f30, f19, f10, f18, dyn # perform operation
fnmsub.s f30, f19, f10, f18, rdn # perform operation
fnmsub.s f30, f19, f10, f18, rmm # perform operation
fnmsub.s f30, f19, f10, f18, rne # perform operation
fnmsub.s f30, f19, f10, f18, rtz # perform operation
fnmsub.s f30, f19, f10, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f30, f19, f10, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f30, f19, f10, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f30, f19, f10, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f30, f19, f10, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f30, f19, f10, f18 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0xff7fffff)
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f19, 0(x2) # load 0x00000000 from memory into f19
la x2, scratch
li x3, 0x955bf1f6 # load x3 with value 0x955bf1f6
sw x3, 0(x2) # store 0x955bf1f6 in memory
flw f15, 0(x2) # load 0x955bf1f6 from memory into f15
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f14, 0(x2) # load 0xff7fffff from memory into f14
fnmsub.s f21, f19, f15, f14, dyn # perform operation
fnmsub.s f21, f19, f15, f14, rdn # perform operation
fnmsub.s f21, f19, f15, f14, rmm # perform operation
fnmsub.s f21, f19, f15, f14, rne # perform operation
fnmsub.s f21, f19, f15, f14, rtz # perform operation
fnmsub.s f21, f19, f15, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f21, f19, f15, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f21, f19, f15, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f21, f19, f15, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f21, f19, f15, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f21, f19, f15, f14 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x7fffff)
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f9, 0(x2) # load 0x00000000 from memory into f9
la x2, scratch
li x3, 0x608e02b0 # load x3 with value 0x608e02b0
sw x3, 0(x2) # store 0x608e02b0 in memory
flw f21, 0(x2) # load 0x608e02b0 from memory into f21
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f6, 0(x2) # load 0x007fffff from memory into f6
fnmsub.s f29, f9, f21, f6, dyn # perform operation
fnmsub.s f29, f9, f21, f6, rdn # perform operation
fnmsub.s f29, f9, f21, f6, rmm # perform operation
fnmsub.s f29, f9, f21, f6, rne # perform operation
fnmsub.s f29, f9, f21, f6, rtz # perform operation
fnmsub.s f29, f9, f21, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f29, f9, f21, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f29, f9, f21, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f29, f9, f21, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f29, f9, f21, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f29, f9, f21, f6 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x807fffff)
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f5, 0(x2) # load 0x00000000 from memory into f5
la x2, scratch
li x3, 0x5e83b783 # load x3 with value 0x5e83b783
sw x3, 0(x2) # store 0x5e83b783 in memory
flw f16, 0(x2) # load 0x5e83b783 from memory into f16
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f14, 0(x2) # load 0x807fffff from memory into f14
fnmsub.s f6, f5, f16, f14, dyn # perform operation
fnmsub.s f6, f5, f16, f14, rdn # perform operation
fnmsub.s f6, f5, f16, f14, rmm # perform operation
fnmsub.s f6, f5, f16, f14, rne # perform operation
fnmsub.s f6, f5, f16, f14, rtz # perform operation
fnmsub.s f6, f5, f16, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f6, f5, f16, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f6, f5, f16, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f6, f5, f16, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f6, f5, f16, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f6, f5, f16, f14 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x400000)
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f6, 0(x2) # load 0x00000000 from memory into f6
la x2, scratch
li x3, 0x73ada531 # load x3 with value 0x73ada531
sw x3, 0(x2) # store 0x73ada531 in memory
flw f25, 0(x2) # load 0x73ada531 from memory into f25
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f26, 0(x2) # load 0x00400000 from memory into f26
fnmsub.s f2, f6, f25, f26, dyn # perform operation
fnmsub.s f2, f6, f25, f26, rdn # perform operation
fnmsub.s f2, f6, f25, f26, rmm # perform operation
fnmsub.s f2, f6, f25, f26, rne # perform operation
fnmsub.s f2, f6, f25, f26, rtz # perform operation
fnmsub.s f2, f6, f25, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f2, f6, f25, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f2, f6, f25, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f2, f6, f25, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f2, f6, f25, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f2, f6, f25, f26 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x80400000)
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f9, 0(x2) # load 0x00000000 from memory into f9
la x2, scratch
li x3, 0x02702b07 # load x3 with value 0x02702b07
sw x3, 0(x2) # store 0x02702b07 in memory
flw f11, 0(x2) # load 0x02702b07 from memory into f11
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f19, 0(x2) # load 0x80400000 from memory into f19
fnmsub.s f16, f9, f11, f19, dyn # perform operation
fnmsub.s f16, f9, f11, f19, rdn # perform operation
fnmsub.s f16, f9, f11, f19, rmm # perform operation
fnmsub.s f16, f9, f11, f19, rne # perform operation
fnmsub.s f16, f9, f11, f19, rtz # perform operation
fnmsub.s f16, f9, f11, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f16, f9, f11, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f16, f9, f11, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f16, f9, f11, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f16, f9, f11, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f16, f9, f11, f19 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x1)
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f6, 0(x2) # load 0x00000000 from memory into f6
la x2, scratch
li x3, 0x7d5c3f20 # load x3 with value 0x7d5c3f20
sw x3, 0(x2) # store 0x7d5c3f20 in memory
flw f27, 0(x2) # load 0x7d5c3f20 from memory into f27
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f9, 0(x2) # load 0x00000001 from memory into f9
fnmsub.s f20, f6, f27, f9, dyn # perform operation
fnmsub.s f20, f6, f27, f9, rdn # perform operation
fnmsub.s f20, f6, f27, f9, rmm # perform operation
fnmsub.s f20, f6, f27, f9, rne # perform operation
fnmsub.s f20, f6, f27, f9, rtz # perform operation
fnmsub.s f20, f6, f27, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f20, f6, f27, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f20, f6, f27, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f20, f6, f27, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f20, f6, f27, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f20, f6, f27, f9 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x80000001)
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f31, 0(x2) # load 0x00000000 from memory into f31
la x2, scratch
li x3, 0x9fd23fba # load x3 with value 0x9fd23fba
sw x3, 0(x2) # store 0x9fd23fba in memory
flw f16, 0(x2) # load 0x9fd23fba from memory into f16
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f17, 0(x2) # load 0x80000001 from memory into f17
fnmsub.s f15, f31, f16, f17, dyn # perform operation
fnmsub.s f15, f31, f16, f17, rdn # perform operation
fnmsub.s f15, f31, f16, f17, rmm # perform operation
fnmsub.s f15, f31, f16, f17, rne # perform operation
fnmsub.s f15, f31, f16, f17, rtz # perform operation
fnmsub.s f15, f31, f16, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f15, f31, f16, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f15, f31, f16, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f15, f31, f16, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f15, f31, f16, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f15, f31, f16, f17 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x7f800000)
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f2, 0(x2) # load 0x00000000 from memory into f2
la x2, scratch
li x3, 0x61f5a7d1 # load x3 with value 0x61f5a7d1
sw x3, 0(x2) # store 0x61f5a7d1 in memory
flw f27, 0(x2) # load 0x61f5a7d1 from memory into f27
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f19, 0(x2) # load 0x7f800000 from memory into f19
fnmsub.s f5, f2, f27, f19, dyn # perform operation
fnmsub.s f5, f2, f27, f19, rdn # perform operation
fnmsub.s f5, f2, f27, f19, rmm # perform operation
fnmsub.s f5, f2, f27, f19, rne # perform operation
fnmsub.s f5, f2, f27, f19, rtz # perform operation
fnmsub.s f5, f2, f27, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f5, f2, f27, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f5, f2, f27, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f5, f2, f27, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f5, f2, f27, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f5, f2, f27, f19 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0xff800000)
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f17, 0(x2) # load 0x00000000 from memory into f17
la x2, scratch
li x3, 0x1bd8697f # load x3 with value 0x1bd8697f
sw x3, 0(x2) # store 0x1bd8697f in memory
flw f26, 0(x2) # load 0x1bd8697f from memory into f26
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f8, 0(x2) # load 0xff800000 from memory into f8
fnmsub.s f16, f17, f26, f8, dyn # perform operation
fnmsub.s f16, f17, f26, f8, rdn # perform operation
fnmsub.s f16, f17, f26, f8, rmm # perform operation
fnmsub.s f16, f17, f26, f8, rne # perform operation
fnmsub.s f16, f17, f26, f8, rtz # perform operation
fnmsub.s f16, f17, f26, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f16, f17, f26, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f16, f17, f26, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f16, f17, f26, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f16, f17, f26, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f16, f17, f26, f8 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x7fc00000)
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f12, 0(x2) # load 0x00000000 from memory into f12
la x2, scratch
li x3, 0x463ed2a7 # load x3 with value 0x463ed2a7
sw x3, 0(x2) # store 0x463ed2a7 in memory
flw f11, 0(x2) # load 0x463ed2a7 from memory into f11
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f13, 0(x2) # load 0x7fc00000 from memory into f13
fnmsub.s f28, f12, f11, f13, dyn # perform operation
fnmsub.s f28, f12, f11, f13, rdn # perform operation
fnmsub.s f28, f12, f11, f13, rmm # perform operation
fnmsub.s f28, f12, f11, f13, rne # perform operation
fnmsub.s f28, f12, f11, f13, rtz # perform operation
fnmsub.s f28, f12, f11, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f28, f12, f11, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f28, f12, f11, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f28, f12, f11, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f28, f12, f11, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f28, f12, f11, f13 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x7fffffff)
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f2, 0(x2) # load 0x00000000 from memory into f2
la x2, scratch
li x3, 0x4d50815a # load x3 with value 0x4d50815a
sw x3, 0(x2) # store 0x4d50815a in memory
flw f21, 0(x2) # load 0x4d50815a from memory into f21
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f24, 0(x2) # load 0x7fffffff from memory into f24
fnmsub.s f16, f2, f21, f24, dyn # perform operation
fnmsub.s f16, f2, f21, f24, rdn # perform operation
fnmsub.s f16, f2, f21, f24, rmm # perform operation
fnmsub.s f16, f2, f21, f24, rne # perform operation
fnmsub.s f16, f2, f21, f24, rtz # perform operation
fnmsub.s f16, f2, f21, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f16, f2, f21, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f16, f2, f21, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f16, f2, f21, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f16, f2, f21, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f16, f2, f21, f24 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0xffffffff)
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f20, 0(x2) # load 0x00000000 from memory into f20
la x2, scratch
li x3, 0xf7458562 # load x3 with value 0xf7458562
sw x3, 0(x2) # store 0xf7458562 in memory
flw f31, 0(x2) # load 0xf7458562 from memory into f31
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f29, 0(x2) # load 0xffffffff from memory into f29
fnmsub.s f6, f20, f31, f29, dyn # perform operation
fnmsub.s f6, f20, f31, f29, rdn # perform operation
fnmsub.s f6, f20, f31, f29, rmm # perform operation
fnmsub.s f6, f20, f31, f29, rne # perform operation
fnmsub.s f6, f20, f31, f29, rtz # perform operation
fnmsub.s f6, f20, f31, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f6, f20, f31, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f6, f20, f31, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f6, f20, f31, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f6, f20, f31, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f6, f20, f31, f29 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x7f800001)
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f26, 0(x2) # load 0x00000000 from memory into f26
la x2, scratch
li x3, 0xe6172bcf # load x3 with value 0xe6172bcf
sw x3, 0(x2) # store 0xe6172bcf in memory
flw f1, 0(x2) # load 0xe6172bcf from memory into f1
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f31, 0(x2) # load 0x7f800001 from memory into f31
fnmsub.s f25, f26, f1, f31, dyn # perform operation
fnmsub.s f25, f26, f1, f31, rdn # perform operation
fnmsub.s f25, f26, f1, f31, rmm # perform operation
fnmsub.s f25, f26, f1, f31, rne # perform operation
fnmsub.s f25, f26, f1, f31, rtz # perform operation
fnmsub.s f25, f26, f1, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f25, f26, f1, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f25, f26, f1, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f25, f26, f1, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f25, f26, f1, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f25, f26, f1, f31 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x7fbfffff)
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f10, 0(x2) # load 0x00000000 from memory into f10
la x2, scratch
li x3, 0x89477533 # load x3 with value 0x89477533
sw x3, 0(x2) # store 0x89477533 in memory
flw f18, 0(x2) # load 0x89477533 from memory into f18
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f22, 0(x2) # load 0x7fbfffff from memory into f22
fnmsub.s f7, f10, f18, f22, dyn # perform operation
fnmsub.s f7, f10, f18, f22, rdn # perform operation
fnmsub.s f7, f10, f18, f22, rmm # perform operation
fnmsub.s f7, f10, f18, f22, rne # perform operation
fnmsub.s f7, f10, f18, f22, rtz # perform operation
fnmsub.s f7, f10, f18, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f7, f10, f18, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f7, f10, f18, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f7, f10, f18, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f7, f10, f18, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f7, f10, f18, f22 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0xffbfffff)
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f23, 0(x2) # load 0x00000000 from memory into f23
la x2, scratch
li x3, 0xfb052fa8 # load x3 with value 0xfb052fa8
sw x3, 0(x2) # store 0xfb052fa8 in memory
flw f24, 0(x2) # load 0xfb052fa8 from memory into f24
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f22, 0(x2) # load 0xffbfffff from memory into f22
fnmsub.s f27, f23, f24, f22, dyn # perform operation
fnmsub.s f27, f23, f24, f22, rdn # perform operation
fnmsub.s f27, f23, f24, f22, rmm # perform operation
fnmsub.s f27, f23, f24, f22, rne # perform operation
fnmsub.s f27, f23, f24, f22, rtz # perform operation
fnmsub.s f27, f23, f24, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f27, f23, f24, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f27, f23, f24, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f27, f23, f24, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f27, f23, f24, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f27, f23, f24, f22 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x7ef8654f)
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f13, 0(x2) # load 0x00000000 from memory into f13
la x2, scratch
li x3, 0xf77b1530 # load x3 with value 0xf77b1530
sw x3, 0(x2) # store 0xf77b1530 in memory
flw f25, 0(x2) # load 0xf77b1530 from memory into f25
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f7, 0(x2) # load 0x7ef8654f from memory into f7
fnmsub.s f17, f13, f25, f7, dyn # perform operation
fnmsub.s f17, f13, f25, f7, rdn # perform operation
fnmsub.s f17, f13, f25, f7, rmm # perform operation
fnmsub.s f17, f13, f25, f7, rne # perform operation
fnmsub.s f17, f13, f25, f7, rtz # perform operation
fnmsub.s f17, f13, f25, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f17, f13, f25, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f17, f13, f25, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f17, f13, f25, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f17, f13, f25, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f17, f13, f25, f7 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x813d9ab0)
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f31, 0(x2) # load 0x00000000 from memory into f31
la x2, scratch
li x3, 0x4c24bc85 # load x3 with value 0x4c24bc85
sw x3, 0(x2) # store 0x4c24bc85 in memory
flw f7, 0(x2) # load 0x4c24bc85 from memory into f7
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f23, 0(x2) # load 0x813d9ab0 from memory into f23
fnmsub.s f9, f31, f7, f23, dyn # perform operation
fnmsub.s f9, f31, f7, f23, rdn # perform operation
fnmsub.s f9, f31, f7, f23, rmm # perform operation
fnmsub.s f9, f31, f7, f23, rne # perform operation
fnmsub.s f9, f31, f7, f23, rtz # perform operation
fnmsub.s f9, f31, f7, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f9, f31, f7, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f9, f31, f7, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f9, f31, f7, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f9, f31, f7, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f9, f31, f7, f23 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0x0)
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f24, 0(x2) # load 0x80000000 from memory into f24
la x2, scratch
li x3, 0x5d5c7586 # load x3 with value 0x5d5c7586
sw x3, 0(x2) # store 0x5d5c7586 in memory
flw f29, 0(x2) # load 0x5d5c7586 from memory into f29
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f17, 0(x2) # load 0x00000000 from memory into f17
fnmsub.s f12, f24, f29, f17, dyn # perform operation
fnmsub.s f12, f24, f29, f17, rdn # perform operation
fnmsub.s f12, f24, f29, f17, rmm # perform operation
fnmsub.s f12, f24, f29, f17, rne # perform operation
fnmsub.s f12, f24, f29, f17, rtz # perform operation
fnmsub.s f12, f24, f29, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f12, f24, f29, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f12, f24, f29, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f12, f24, f29, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f12, f24, f29, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f12, f24, f29, f17 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0x80000000)
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f2, 0(x2) # load 0x80000000 from memory into f2
la x2, scratch
li x3, 0x23cda7ee # load x3 with value 0x23cda7ee
sw x3, 0(x2) # store 0x23cda7ee in memory
flw f30, 0(x2) # load 0x23cda7ee from memory into f30
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f29, 0(x2) # load 0x80000000 from memory into f29
fnmsub.s f7, f2, f30, f29, dyn # perform operation
fnmsub.s f7, f2, f30, f29, rdn # perform operation
fnmsub.s f7, f2, f30, f29, rmm # perform operation
fnmsub.s f7, f2, f30, f29, rne # perform operation
fnmsub.s f7, f2, f30, f29, rtz # perform operation
fnmsub.s f7, f2, f30, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f7, f2, f30, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f7, f2, f30, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f7, f2, f30, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f7, f2, f30, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f7, f2, f30, f29 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0x3f800000)
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f13, 0(x2) # load 0x80000000 from memory into f13
la x2, scratch
li x3, 0x271ab20e # load x3 with value 0x271ab20e
sw x3, 0(x2) # store 0x271ab20e in memory
flw f21, 0(x2) # load 0x271ab20e from memory into f21
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f14, 0(x2) # load 0x3f800000 from memory into f14
fnmsub.s f25, f13, f21, f14, dyn # perform operation
fnmsub.s f25, f13, f21, f14, rdn # perform operation
fnmsub.s f25, f13, f21, f14, rmm # perform operation
fnmsub.s f25, f13, f21, f14, rne # perform operation
fnmsub.s f25, f13, f21, f14, rtz # perform operation
fnmsub.s f25, f13, f21, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f25, f13, f21, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f25, f13, f21, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f25, f13, f21, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f25, f13, f21, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f25, f13, f21, f14 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0xbf800000)
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f14, 0(x2) # load 0x80000000 from memory into f14
la x2, scratch
li x3, 0xa775f608 # load x3 with value 0xa775f608
sw x3, 0(x2) # store 0xa775f608 in memory
flw f5, 0(x2) # load 0xa775f608 from memory into f5
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f23, 0(x2) # load 0xbf800000 from memory into f23
fnmsub.s f15, f14, f5, f23, dyn # perform operation
fnmsub.s f15, f14, f5, f23, rdn # perform operation
fnmsub.s f15, f14, f5, f23, rmm # perform operation
fnmsub.s f15, f14, f5, f23, rne # perform operation
fnmsub.s f15, f14, f5, f23, rtz # perform operation
fnmsub.s f15, f14, f5, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f15, f14, f5, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f15, f14, f5, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f15, f14, f5, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f15, f14, f5, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f15, f14, f5, f23 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0x3fc00000)
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f6, 0(x2) # load 0x80000000 from memory into f6
la x2, scratch
li x3, 0x6493a7ca # load x3 with value 0x6493a7ca
sw x3, 0(x2) # store 0x6493a7ca in memory
flw f15, 0(x2) # load 0x6493a7ca from memory into f15
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f8, 0(x2) # load 0x3fc00000 from memory into f8
fnmsub.s f17, f6, f15, f8, dyn # perform operation
fnmsub.s f17, f6, f15, f8, rdn # perform operation
fnmsub.s f17, f6, f15, f8, rmm # perform operation
fnmsub.s f17, f6, f15, f8, rne # perform operation
fnmsub.s f17, f6, f15, f8, rtz # perform operation
fnmsub.s f17, f6, f15, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f17, f6, f15, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f17, f6, f15, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f17, f6, f15, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f17, f6, f15, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f17, f6, f15, f8 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0xbfc00000)
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f31, 0(x2) # load 0x80000000 from memory into f31
la x2, scratch
li x3, 0x29c8cab4 # load x3 with value 0x29c8cab4
sw x3, 0(x2) # store 0x29c8cab4 in memory
flw f21, 0(x2) # load 0x29c8cab4 from memory into f21
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f11, 0(x2) # load 0xbfc00000 from memory into f11
fnmsub.s f10, f31, f21, f11, dyn # perform operation
fnmsub.s f10, f31, f21, f11, rdn # perform operation
fnmsub.s f10, f31, f21, f11, rmm # perform operation
fnmsub.s f10, f31, f21, f11, rne # perform operation
fnmsub.s f10, f31, f21, f11, rtz # perform operation
fnmsub.s f10, f31, f21, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f10, f31, f21, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f10, f31, f21, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f10, f31, f21, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f10, f31, f21, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f10, f31, f21, f11 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0x40000000)
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f22, 0(x2) # load 0x80000000 from memory into f22
la x2, scratch
li x3, 0xe8de0826 # load x3 with value 0xe8de0826
sw x3, 0(x2) # store 0xe8de0826 in memory
flw f29, 0(x2) # load 0xe8de0826 from memory into f29
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f14, 0(x2) # load 0x40000000 from memory into f14
fnmsub.s f17, f22, f29, f14, dyn # perform operation
fnmsub.s f17, f22, f29, f14, rdn # perform operation
fnmsub.s f17, f22, f29, f14, rmm # perform operation
fnmsub.s f17, f22, f29, f14, rne # perform operation
fnmsub.s f17, f22, f29, f14, rtz # perform operation
fnmsub.s f17, f22, f29, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f17, f22, f29, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f17, f22, f29, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f17, f22, f29, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f17, f22, f29, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f17, f22, f29, f14 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0xc0000000)
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f25, 0(x2) # load 0x80000000 from memory into f25
la x2, scratch
li x3, 0xed4c9d79 # load x3 with value 0xed4c9d79
sw x3, 0(x2) # store 0xed4c9d79 in memory
flw f23, 0(x2) # load 0xed4c9d79 from memory into f23
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f2, 0(x2) # load 0xc0000000 from memory into f2
fnmsub.s f27, f25, f23, f2, dyn # perform operation
fnmsub.s f27, f25, f23, f2, rdn # perform operation
fnmsub.s f27, f25, f23, f2, rmm # perform operation
fnmsub.s f27, f25, f23, f2, rne # perform operation
fnmsub.s f27, f25, f23, f2, rtz # perform operation
fnmsub.s f27, f25, f23, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f27, f25, f23, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f27, f25, f23, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f27, f25, f23, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f27, f25, f23, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f27, f25, f23, f2 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0x800000)
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f7, 0(x2) # load 0x80000000 from memory into f7
la x2, scratch
li x3, 0xc163db56 # load x3 with value 0xc163db56
sw x3, 0(x2) # store 0xc163db56 in memory
flw f24, 0(x2) # load 0xc163db56 from memory into f24
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f21, 0(x2) # load 0x00800000 from memory into f21
fnmsub.s f11, f7, f24, f21, dyn # perform operation
fnmsub.s f11, f7, f24, f21, rdn # perform operation
fnmsub.s f11, f7, f24, f21, rmm # perform operation
fnmsub.s f11, f7, f24, f21, rne # perform operation
fnmsub.s f11, f7, f24, f21, rtz # perform operation
fnmsub.s f11, f7, f24, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f11, f7, f24, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f11, f7, f24, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f11, f7, f24, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f11, f7, f24, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f11, f7, f24, f21 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0x80800000)
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f10, 0(x2) # load 0x80000000 from memory into f10
la x2, scratch
li x3, 0x5f836fa3 # load x3 with value 0x5f836fa3
sw x3, 0(x2) # store 0x5f836fa3 in memory
flw f22, 0(x2) # load 0x5f836fa3 from memory into f22
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f21, 0(x2) # load 0x80800000 from memory into f21
fnmsub.s f18, f10, f22, f21, dyn # perform operation
fnmsub.s f18, f10, f22, f21, rdn # perform operation
fnmsub.s f18, f10, f22, f21, rmm # perform operation
fnmsub.s f18, f10, f22, f21, rne # perform operation
fnmsub.s f18, f10, f22, f21, rtz # perform operation
fnmsub.s f18, f10, f22, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f18, f10, f22, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f18, f10, f22, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f18, f10, f22, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f18, f10, f22, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f18, f10, f22, f21 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0x7f7fffff)
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f28, 0(x2) # load 0x80000000 from memory into f28
la x2, scratch
li x3, 0x54ef8d0b # load x3 with value 0x54ef8d0b
sw x3, 0(x2) # store 0x54ef8d0b in memory
flw f13, 0(x2) # load 0x54ef8d0b from memory into f13
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f3, 0(x2) # load 0x7f7fffff from memory into f3
fnmsub.s f18, f28, f13, f3, dyn # perform operation
fnmsub.s f18, f28, f13, f3, rdn # perform operation
fnmsub.s f18, f28, f13, f3, rmm # perform operation
fnmsub.s f18, f28, f13, f3, rne # perform operation
fnmsub.s f18, f28, f13, f3, rtz # perform operation
fnmsub.s f18, f28, f13, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f18, f28, f13, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f18, f28, f13, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f18, f28, f13, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f18, f28, f13, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f18, f28, f13, f3 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0xff7fffff)
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f24, 0(x2) # load 0x80000000 from memory into f24
la x2, scratch
li x3, 0x86fe0b57 # load x3 with value 0x86fe0b57
sw x3, 0(x2) # store 0x86fe0b57 in memory
flw f3, 0(x2) # load 0x86fe0b57 from memory into f3
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f2, 0(x2) # load 0xff7fffff from memory into f2
fnmsub.s f30, f24, f3, f2, dyn # perform operation
fnmsub.s f30, f24, f3, f2, rdn # perform operation
fnmsub.s f30, f24, f3, f2, rmm # perform operation
fnmsub.s f30, f24, f3, f2, rne # perform operation
fnmsub.s f30, f24, f3, f2, rtz # perform operation
fnmsub.s f30, f24, f3, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f30, f24, f3, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f30, f24, f3, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f30, f24, f3, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f30, f24, f3, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f30, f24, f3, f2 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0x7fffff)
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f25, 0(x2) # load 0x80000000 from memory into f25
la x2, scratch
li x3, 0x6509efec # load x3 with value 0x6509efec
sw x3, 0(x2) # store 0x6509efec in memory
flw f29, 0(x2) # load 0x6509efec from memory into f29
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f12, 0(x2) # load 0x007fffff from memory into f12
fnmsub.s f22, f25, f29, f12, dyn # perform operation
fnmsub.s f22, f25, f29, f12, rdn # perform operation
fnmsub.s f22, f25, f29, f12, rmm # perform operation
fnmsub.s f22, f25, f29, f12, rne # perform operation
fnmsub.s f22, f25, f29, f12, rtz # perform operation
fnmsub.s f22, f25, f29, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f22, f25, f29, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f22, f25, f29, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f22, f25, f29, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f22, f25, f29, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f22, f25, f29, f12 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0x807fffff)
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f26, 0(x2) # load 0x80000000 from memory into f26
la x2, scratch
li x3, 0x3c073cf6 # load x3 with value 0x3c073cf6
sw x3, 0(x2) # store 0x3c073cf6 in memory
flw f22, 0(x2) # load 0x3c073cf6 from memory into f22
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f19, 0(x2) # load 0x807fffff from memory into f19
fnmsub.s f16, f26, f22, f19, dyn # perform operation
fnmsub.s f16, f26, f22, f19, rdn # perform operation
fnmsub.s f16, f26, f22, f19, rmm # perform operation
fnmsub.s f16, f26, f22, f19, rne # perform operation
fnmsub.s f16, f26, f22, f19, rtz # perform operation
fnmsub.s f16, f26, f22, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f16, f26, f22, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f16, f26, f22, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f16, f26, f22, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f16, f26, f22, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f16, f26, f22, f19 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0x400000)
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f8, 0(x2) # load 0x80000000 from memory into f8
la x2, scratch
li x3, 0xe09fbdf6 # load x3 with value 0xe09fbdf6
sw x3, 0(x2) # store 0xe09fbdf6 in memory
flw f2, 0(x2) # load 0xe09fbdf6 from memory into f2
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f1, 0(x2) # load 0x00400000 from memory into f1
fnmsub.s f19, f8, f2, f1, dyn # perform operation
fnmsub.s f19, f8, f2, f1, rdn # perform operation
fnmsub.s f19, f8, f2, f1, rmm # perform operation
fnmsub.s f19, f8, f2, f1, rne # perform operation
fnmsub.s f19, f8, f2, f1, rtz # perform operation
fnmsub.s f19, f8, f2, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f19, f8, f2, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f19, f8, f2, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f19, f8, f2, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f19, f8, f2, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f19, f8, f2, f1 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0x80400000)
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f17, 0(x2) # load 0x80000000 from memory into f17
la x2, scratch
li x3, 0xd5484c40 # load x3 with value 0xd5484c40
sw x3, 0(x2) # store 0xd5484c40 in memory
flw f28, 0(x2) # load 0xd5484c40 from memory into f28
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f8, 0(x2) # load 0x80400000 from memory into f8
fnmsub.s f15, f17, f28, f8, dyn # perform operation
fnmsub.s f15, f17, f28, f8, rdn # perform operation
fnmsub.s f15, f17, f28, f8, rmm # perform operation
fnmsub.s f15, f17, f28, f8, rne # perform operation
fnmsub.s f15, f17, f28, f8, rtz # perform operation
fnmsub.s f15, f17, f28, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f15, f17, f28, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f15, f17, f28, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f15, f17, f28, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f15, f17, f28, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f15, f17, f28, f8 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0x1)
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f27, 0(x2) # load 0x80000000 from memory into f27
la x2, scratch
li x3, 0x0ec63156 # load x3 with value 0x0ec63156
sw x3, 0(x2) # store 0x0ec63156 in memory
flw f21, 0(x2) # load 0x0ec63156 from memory into f21
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f11, 0(x2) # load 0x00000001 from memory into f11
fnmsub.s f8, f27, f21, f11, dyn # perform operation
fnmsub.s f8, f27, f21, f11, rdn # perform operation
fnmsub.s f8, f27, f21, f11, rmm # perform operation
fnmsub.s f8, f27, f21, f11, rne # perform operation
fnmsub.s f8, f27, f21, f11, rtz # perform operation
fnmsub.s f8, f27, f21, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f8, f27, f21, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f8, f27, f21, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f8, f27, f21, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f8, f27, f21, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f8, f27, f21, f11 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0x80000001)
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f29, 0(x2) # load 0x80000000 from memory into f29
la x2, scratch
li x3, 0x319e1923 # load x3 with value 0x319e1923
sw x3, 0(x2) # store 0x319e1923 in memory
flw f24, 0(x2) # load 0x319e1923 from memory into f24
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f28, 0(x2) # load 0x80000001 from memory into f28
fnmsub.s f10, f29, f24, f28, dyn # perform operation
fnmsub.s f10, f29, f24, f28, rdn # perform operation
fnmsub.s f10, f29, f24, f28, rmm # perform operation
fnmsub.s f10, f29, f24, f28, rne # perform operation
fnmsub.s f10, f29, f24, f28, rtz # perform operation
fnmsub.s f10, f29, f24, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f10, f29, f24, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f10, f29, f24, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f10, f29, f24, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f10, f29, f24, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f10, f29, f24, f28 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0x7f800000)
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f19, 0(x2) # load 0x80000000 from memory into f19
la x2, scratch
li x3, 0x7f70d564 # load x3 with value 0x7f70d564
sw x3, 0(x2) # store 0x7f70d564 in memory
flw f5, 0(x2) # load 0x7f70d564 from memory into f5
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f14, 0(x2) # load 0x7f800000 from memory into f14
fnmsub.s f15, f19, f5, f14, dyn # perform operation
fnmsub.s f15, f19, f5, f14, rdn # perform operation
fnmsub.s f15, f19, f5, f14, rmm # perform operation
fnmsub.s f15, f19, f5, f14, rne # perform operation
fnmsub.s f15, f19, f5, f14, rtz # perform operation
fnmsub.s f15, f19, f5, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f15, f19, f5, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f15, f19, f5, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f15, f19, f5, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f15, f19, f5, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f15, f19, f5, f14 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0xff800000)
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f18, 0(x2) # load 0x80000000 from memory into f18
la x2, scratch
li x3, 0x973fabfa # load x3 with value 0x973fabfa
sw x3, 0(x2) # store 0x973fabfa in memory
flw f24, 0(x2) # load 0x973fabfa from memory into f24
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f12, 0(x2) # load 0xff800000 from memory into f12
fnmsub.s f7, f18, f24, f12, dyn # perform operation
fnmsub.s f7, f18, f24, f12, rdn # perform operation
fnmsub.s f7, f18, f24, f12, rmm # perform operation
fnmsub.s f7, f18, f24, f12, rne # perform operation
fnmsub.s f7, f18, f24, f12, rtz # perform operation
fnmsub.s f7, f18, f24, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f7, f18, f24, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f7, f18, f24, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f7, f18, f24, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f7, f18, f24, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f7, f18, f24, f12 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0x7fc00000)
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f31, 0(x2) # load 0x80000000 from memory into f31
la x2, scratch
li x3, 0xf7b13ecc # load x3 with value 0xf7b13ecc
sw x3, 0(x2) # store 0xf7b13ecc in memory
flw f24, 0(x2) # load 0xf7b13ecc from memory into f24
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f7, 0(x2) # load 0x7fc00000 from memory into f7
fnmsub.s f3, f31, f24, f7, dyn # perform operation
fnmsub.s f3, f31, f24, f7, rdn # perform operation
fnmsub.s f3, f31, f24, f7, rmm # perform operation
fnmsub.s f3, f31, f24, f7, rne # perform operation
fnmsub.s f3, f31, f24, f7, rtz # perform operation
fnmsub.s f3, f31, f24, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f3, f31, f24, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f3, f31, f24, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f3, f31, f24, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f3, f31, f24, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f3, f31, f24, f7 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0x7fffffff)
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f12, 0(x2) # load 0x80000000 from memory into f12
la x2, scratch
li x3, 0x4cf2a1be # load x3 with value 0x4cf2a1be
sw x3, 0(x2) # store 0x4cf2a1be in memory
flw f9, 0(x2) # load 0x4cf2a1be from memory into f9
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f28, 0(x2) # load 0x7fffffff from memory into f28
fnmsub.s f19, f12, f9, f28, dyn # perform operation
fnmsub.s f19, f12, f9, f28, rdn # perform operation
fnmsub.s f19, f12, f9, f28, rmm # perform operation
fnmsub.s f19, f12, f9, f28, rne # perform operation
fnmsub.s f19, f12, f9, f28, rtz # perform operation
fnmsub.s f19, f12, f9, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f19, f12, f9, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f19, f12, f9, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f19, f12, f9, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f19, f12, f9, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f19, f12, f9, f28 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0xffffffff)
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f31, 0(x2) # load 0x80000000 from memory into f31
la x2, scratch
li x3, 0x0296a75c # load x3 with value 0x0296a75c
sw x3, 0(x2) # store 0x0296a75c in memory
flw f28, 0(x2) # load 0x0296a75c from memory into f28
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f14, 0(x2) # load 0xffffffff from memory into f14
fnmsub.s f16, f31, f28, f14, dyn # perform operation
fnmsub.s f16, f31, f28, f14, rdn # perform operation
fnmsub.s f16, f31, f28, f14, rmm # perform operation
fnmsub.s f16, f31, f28, f14, rne # perform operation
fnmsub.s f16, f31, f28, f14, rtz # perform operation
fnmsub.s f16, f31, f28, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f16, f31, f28, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f16, f31, f28, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f16, f31, f28, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f16, f31, f28, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f16, f31, f28, f14 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0x7f800001)
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f31, 0(x2) # load 0x80000000 from memory into f31
la x2, scratch
li x3, 0xfa53b63a # load x3 with value 0xfa53b63a
sw x3, 0(x2) # store 0xfa53b63a in memory
flw f1, 0(x2) # load 0xfa53b63a from memory into f1
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f7, 0(x2) # load 0x7f800001 from memory into f7
fnmsub.s f13, f31, f1, f7, dyn # perform operation
fnmsub.s f13, f31, f1, f7, rdn # perform operation
fnmsub.s f13, f31, f1, f7, rmm # perform operation
fnmsub.s f13, f31, f1, f7, rne # perform operation
fnmsub.s f13, f31, f1, f7, rtz # perform operation
fnmsub.s f13, f31, f1, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f13, f31, f1, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f13, f31, f1, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f13, f31, f1, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f13, f31, f1, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f13, f31, f1, f7 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0x7fbfffff)
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f11, 0(x2) # load 0x80000000 from memory into f11
la x2, scratch
li x3, 0x58f9485d # load x3 with value 0x58f9485d
sw x3, 0(x2) # store 0x58f9485d in memory
flw f31, 0(x2) # load 0x58f9485d from memory into f31
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f20, 0(x2) # load 0x7fbfffff from memory into f20
fnmsub.s f25, f11, f31, f20, dyn # perform operation
fnmsub.s f25, f11, f31, f20, rdn # perform operation
fnmsub.s f25, f11, f31, f20, rmm # perform operation
fnmsub.s f25, f11, f31, f20, rne # perform operation
fnmsub.s f25, f11, f31, f20, rtz # perform operation
fnmsub.s f25, f11, f31, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f25, f11, f31, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f25, f11, f31, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f25, f11, f31, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f25, f11, f31, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f25, f11, f31, f20 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0xffbfffff)
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f28, 0(x2) # load 0x80000000 from memory into f28
la x2, scratch
li x3, 0x9f3691ed # load x3 with value 0x9f3691ed
sw x3, 0(x2) # store 0x9f3691ed in memory
flw f31, 0(x2) # load 0x9f3691ed from memory into f31
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f2, 0(x2) # load 0xffbfffff from memory into f2
fnmsub.s f27, f28, f31, f2, dyn # perform operation
fnmsub.s f27, f28, f31, f2, rdn # perform operation
fnmsub.s f27, f28, f31, f2, rmm # perform operation
fnmsub.s f27, f28, f31, f2, rne # perform operation
fnmsub.s f27, f28, f31, f2, rtz # perform operation
fnmsub.s f27, f28, f31, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f27, f28, f31, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f27, f28, f31, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f27, f28, f31, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f27, f28, f31, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f27, f28, f31, f2 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0x7ef8654f)
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f2, 0(x2) # load 0x80000000 from memory into f2
la x2, scratch
li x3, 0xbeb59871 # load x3 with value 0xbeb59871
sw x3, 0(x2) # store 0xbeb59871 in memory
flw f22, 0(x2) # load 0xbeb59871 from memory into f22
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f31, 0(x2) # load 0x7ef8654f from memory into f31
fnmsub.s f3, f2, f22, f31, dyn # perform operation
fnmsub.s f3, f2, f22, f31, rdn # perform operation
fnmsub.s f3, f2, f22, f31, rmm # perform operation
fnmsub.s f3, f2, f22, f31, rne # perform operation
fnmsub.s f3, f2, f22, f31, rtz # perform operation
fnmsub.s f3, f2, f22, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f3, f2, f22, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f3, f2, f22, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f3, f2, f22, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f3, f2, f22, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f3, f2, f22, f31 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0x813d9ab0)
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f11, 0(x2) # load 0x80000000 from memory into f11
la x2, scratch
li x3, 0xba19c3ef # load x3 with value 0xba19c3ef
sw x3, 0(x2) # store 0xba19c3ef in memory
flw f15, 0(x2) # load 0xba19c3ef from memory into f15
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f3, 0(x2) # load 0x813d9ab0 from memory into f3
fnmsub.s f7, f11, f15, f3, dyn # perform operation
fnmsub.s f7, f11, f15, f3, rdn # perform operation
fnmsub.s f7, f11, f15, f3, rmm # perform operation
fnmsub.s f7, f11, f15, f3, rne # perform operation
fnmsub.s f7, f11, f15, f3, rtz # perform operation
fnmsub.s f7, f11, f15, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f7, f11, f15, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f7, f11, f15, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f7, f11, f15, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f7, f11, f15, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f7, f11, f15, f3 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0x0)
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f5, 0(x2) # load 0x3f800000 from memory into f5
la x2, scratch
li x3, 0x5a5dbff4 # load x3 with value 0x5a5dbff4
sw x3, 0(x2) # store 0x5a5dbff4 in memory
flw f23, 0(x2) # load 0x5a5dbff4 from memory into f23
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f24, 0(x2) # load 0x00000000 from memory into f24
fnmsub.s f26, f5, f23, f24, dyn # perform operation
fnmsub.s f26, f5, f23, f24, rdn # perform operation
fnmsub.s f26, f5, f23, f24, rmm # perform operation
fnmsub.s f26, f5, f23, f24, rne # perform operation
fnmsub.s f26, f5, f23, f24, rtz # perform operation
fnmsub.s f26, f5, f23, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f26, f5, f23, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f26, f5, f23, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f26, f5, f23, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f26, f5, f23, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f26, f5, f23, f24 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0x80000000)
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f27, 0(x2) # load 0x3f800000 from memory into f27
la x2, scratch
li x3, 0xcc95a5ee # load x3 with value 0xcc95a5ee
sw x3, 0(x2) # store 0xcc95a5ee in memory
flw f18, 0(x2) # load 0xcc95a5ee from memory into f18
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f6, 0(x2) # load 0x80000000 from memory into f6
fnmsub.s f11, f27, f18, f6, dyn # perform operation
fnmsub.s f11, f27, f18, f6, rdn # perform operation
fnmsub.s f11, f27, f18, f6, rmm # perform operation
fnmsub.s f11, f27, f18, f6, rne # perform operation
fnmsub.s f11, f27, f18, f6, rtz # perform operation
fnmsub.s f11, f27, f18, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f11, f27, f18, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f11, f27, f18, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f11, f27, f18, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f11, f27, f18, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f11, f27, f18, f6 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0x3f800000)
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f8, 0(x2) # load 0x3f800000 from memory into f8
la x2, scratch
li x3, 0x0984fdbc # load x3 with value 0x0984fdbc
sw x3, 0(x2) # store 0x0984fdbc in memory
flw f21, 0(x2) # load 0x0984fdbc from memory into f21
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f29, 0(x2) # load 0x3f800000 from memory into f29
fnmsub.s f12, f8, f21, f29, dyn # perform operation
fnmsub.s f12, f8, f21, f29, rdn # perform operation
fnmsub.s f12, f8, f21, f29, rmm # perform operation
fnmsub.s f12, f8, f21, f29, rne # perform operation
fnmsub.s f12, f8, f21, f29, rtz # perform operation
fnmsub.s f12, f8, f21, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f12, f8, f21, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f12, f8, f21, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f12, f8, f21, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f12, f8, f21, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f12, f8, f21, f29 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0xbf800000)
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f30, 0(x2) # load 0x3f800000 from memory into f30
la x2, scratch
li x3, 0xcd37418d # load x3 with value 0xcd37418d
sw x3, 0(x2) # store 0xcd37418d in memory
flw f24, 0(x2) # load 0xcd37418d from memory into f24
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f23, 0(x2) # load 0xbf800000 from memory into f23
fnmsub.s f14, f30, f24, f23, dyn # perform operation
fnmsub.s f14, f30, f24, f23, rdn # perform operation
fnmsub.s f14, f30, f24, f23, rmm # perform operation
fnmsub.s f14, f30, f24, f23, rne # perform operation
fnmsub.s f14, f30, f24, f23, rtz # perform operation
fnmsub.s f14, f30, f24, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f14, f30, f24, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f14, f30, f24, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f14, f30, f24, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f14, f30, f24, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f14, f30, f24, f23 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0x3fc00000)
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f24, 0(x2) # load 0x3f800000 from memory into f24
la x2, scratch
li x3, 0xe8c62d2a # load x3 with value 0xe8c62d2a
sw x3, 0(x2) # store 0xe8c62d2a in memory
flw f3, 0(x2) # load 0xe8c62d2a from memory into f3
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f23, 0(x2) # load 0x3fc00000 from memory into f23
fnmsub.s f9, f24, f3, f23, dyn # perform operation
fnmsub.s f9, f24, f3, f23, rdn # perform operation
fnmsub.s f9, f24, f3, f23, rmm # perform operation
fnmsub.s f9, f24, f3, f23, rne # perform operation
fnmsub.s f9, f24, f3, f23, rtz # perform operation
fnmsub.s f9, f24, f3, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f9, f24, f3, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f9, f24, f3, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f9, f24, f3, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f9, f24, f3, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f9, f24, f3, f23 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0xbfc00000)
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f27, 0(x2) # load 0x3f800000 from memory into f27
la x2, scratch
li x3, 0x2c52a119 # load x3 with value 0x2c52a119
sw x3, 0(x2) # store 0x2c52a119 in memory
flw f31, 0(x2) # load 0x2c52a119 from memory into f31
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f3, 0(x2) # load 0xbfc00000 from memory into f3
fnmsub.s f21, f27, f31, f3, dyn # perform operation
fnmsub.s f21, f27, f31, f3, rdn # perform operation
fnmsub.s f21, f27, f31, f3, rmm # perform operation
fnmsub.s f21, f27, f31, f3, rne # perform operation
fnmsub.s f21, f27, f31, f3, rtz # perform operation
fnmsub.s f21, f27, f31, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f21, f27, f31, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f21, f27, f31, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f21, f27, f31, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f21, f27, f31, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f21, f27, f31, f3 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0x40000000)
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f28, 0(x2) # load 0x3f800000 from memory into f28
la x2, scratch
li x3, 0xd356d7f5 # load x3 with value 0xd356d7f5
sw x3, 0(x2) # store 0xd356d7f5 in memory
flw f2, 0(x2) # load 0xd356d7f5 from memory into f2
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f3, 0(x2) # load 0x40000000 from memory into f3
fnmsub.s f27, f28, f2, f3, dyn # perform operation
fnmsub.s f27, f28, f2, f3, rdn # perform operation
fnmsub.s f27, f28, f2, f3, rmm # perform operation
fnmsub.s f27, f28, f2, f3, rne # perform operation
fnmsub.s f27, f28, f2, f3, rtz # perform operation
fnmsub.s f27, f28, f2, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f27, f28, f2, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f27, f28, f2, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f27, f28, f2, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f27, f28, f2, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f27, f28, f2, f3 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0xc0000000)
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f12, 0(x2) # load 0x3f800000 from memory into f12
la x2, scratch
li x3, 0x54e96d08 # load x3 with value 0x54e96d08
sw x3, 0(x2) # store 0x54e96d08 in memory
flw f25, 0(x2) # load 0x54e96d08 from memory into f25
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f1, 0(x2) # load 0xc0000000 from memory into f1
fnmsub.s f23, f12, f25, f1, dyn # perform operation
fnmsub.s f23, f12, f25, f1, rdn # perform operation
fnmsub.s f23, f12, f25, f1, rmm # perform operation
fnmsub.s f23, f12, f25, f1, rne # perform operation
fnmsub.s f23, f12, f25, f1, rtz # perform operation
fnmsub.s f23, f12, f25, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f23, f12, f25, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f23, f12, f25, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f23, f12, f25, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f23, f12, f25, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f23, f12, f25, f1 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0x800000)
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f7, 0(x2) # load 0x3f800000 from memory into f7
la x2, scratch
li x3, 0xb93e5ae2 # load x3 with value 0xb93e5ae2
sw x3, 0(x2) # store 0xb93e5ae2 in memory
flw f14, 0(x2) # load 0xb93e5ae2 from memory into f14
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f16, 0(x2) # load 0x00800000 from memory into f16
fnmsub.s f15, f7, f14, f16, dyn # perform operation
fnmsub.s f15, f7, f14, f16, rdn # perform operation
fnmsub.s f15, f7, f14, f16, rmm # perform operation
fnmsub.s f15, f7, f14, f16, rne # perform operation
fnmsub.s f15, f7, f14, f16, rtz # perform operation
fnmsub.s f15, f7, f14, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f15, f7, f14, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f15, f7, f14, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f15, f7, f14, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f15, f7, f14, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f15, f7, f14, f16 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0x80800000)
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f6, 0(x2) # load 0x3f800000 from memory into f6
la x2, scratch
li x3, 0xca287701 # load x3 with value 0xca287701
sw x3, 0(x2) # store 0xca287701 in memory
flw f19, 0(x2) # load 0xca287701 from memory into f19
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f18, 0(x2) # load 0x80800000 from memory into f18
fnmsub.s f31, f6, f19, f18, dyn # perform operation
fnmsub.s f31, f6, f19, f18, rdn # perform operation
fnmsub.s f31, f6, f19, f18, rmm # perform operation
fnmsub.s f31, f6, f19, f18, rne # perform operation
fnmsub.s f31, f6, f19, f18, rtz # perform operation
fnmsub.s f31, f6, f19, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f31, f6, f19, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f31, f6, f19, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f31, f6, f19, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f31, f6, f19, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f31, f6, f19, f18 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0x7f7fffff)
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f12, 0(x2) # load 0x3f800000 from memory into f12
la x2, scratch
li x3, 0xd3f85a4f # load x3 with value 0xd3f85a4f
sw x3, 0(x2) # store 0xd3f85a4f in memory
flw f19, 0(x2) # load 0xd3f85a4f from memory into f19
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f20, 0(x2) # load 0x7f7fffff from memory into f20
fnmsub.s f9, f12, f19, f20, dyn # perform operation
fnmsub.s f9, f12, f19, f20, rdn # perform operation
fnmsub.s f9, f12, f19, f20, rmm # perform operation
fnmsub.s f9, f12, f19, f20, rne # perform operation
fnmsub.s f9, f12, f19, f20, rtz # perform operation
fnmsub.s f9, f12, f19, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f9, f12, f19, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f9, f12, f19, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f9, f12, f19, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f9, f12, f19, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f9, f12, f19, f20 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0xff7fffff)
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f16, 0(x2) # load 0x3f800000 from memory into f16
la x2, scratch
li x3, 0xa93a8387 # load x3 with value 0xa93a8387
sw x3, 0(x2) # store 0xa93a8387 in memory
flw f8, 0(x2) # load 0xa93a8387 from memory into f8
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f20, 0(x2) # load 0xff7fffff from memory into f20
fnmsub.s f18, f16, f8, f20, dyn # perform operation
fnmsub.s f18, f16, f8, f20, rdn # perform operation
fnmsub.s f18, f16, f8, f20, rmm # perform operation
fnmsub.s f18, f16, f8, f20, rne # perform operation
fnmsub.s f18, f16, f8, f20, rtz # perform operation
fnmsub.s f18, f16, f8, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f18, f16, f8, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f18, f16, f8, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f18, f16, f8, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f18, f16, f8, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f18, f16, f8, f20 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0x7fffff)
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f6, 0(x2) # load 0x3f800000 from memory into f6
la x2, scratch
li x3, 0x630f3eb9 # load x3 with value 0x630f3eb9
sw x3, 0(x2) # store 0x630f3eb9 in memory
flw f10, 0(x2) # load 0x630f3eb9 from memory into f10
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f25, 0(x2) # load 0x007fffff from memory into f25
fnmsub.s f27, f6, f10, f25, dyn # perform operation
fnmsub.s f27, f6, f10, f25, rdn # perform operation
fnmsub.s f27, f6, f10, f25, rmm # perform operation
fnmsub.s f27, f6, f10, f25, rne # perform operation
fnmsub.s f27, f6, f10, f25, rtz # perform operation
fnmsub.s f27, f6, f10, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f27, f6, f10, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f27, f6, f10, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f27, f6, f10, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f27, f6, f10, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f27, f6, f10, f25 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0x807fffff)
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f10, 0(x2) # load 0x3f800000 from memory into f10
la x2, scratch
li x3, 0x691e4a26 # load x3 with value 0x691e4a26
sw x3, 0(x2) # store 0x691e4a26 in memory
flw f18, 0(x2) # load 0x691e4a26 from memory into f18
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f17, 0(x2) # load 0x807fffff from memory into f17
fnmsub.s f27, f10, f18, f17, dyn # perform operation
fnmsub.s f27, f10, f18, f17, rdn # perform operation
fnmsub.s f27, f10, f18, f17, rmm # perform operation
fnmsub.s f27, f10, f18, f17, rne # perform operation
fnmsub.s f27, f10, f18, f17, rtz # perform operation
fnmsub.s f27, f10, f18, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f27, f10, f18, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f27, f10, f18, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f27, f10, f18, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f27, f10, f18, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f27, f10, f18, f17 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0x400000)
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f3, 0(x2) # load 0x3f800000 from memory into f3
la x2, scratch
li x3, 0x4fb95846 # load x3 with value 0x4fb95846
sw x3, 0(x2) # store 0x4fb95846 in memory
flw f7, 0(x2) # load 0x4fb95846 from memory into f7
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f19, 0(x2) # load 0x00400000 from memory into f19
fnmsub.s f15, f3, f7, f19, dyn # perform operation
fnmsub.s f15, f3, f7, f19, rdn # perform operation
fnmsub.s f15, f3, f7, f19, rmm # perform operation
fnmsub.s f15, f3, f7, f19, rne # perform operation
fnmsub.s f15, f3, f7, f19, rtz # perform operation
fnmsub.s f15, f3, f7, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f15, f3, f7, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f15, f3, f7, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f15, f3, f7, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f15, f3, f7, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f15, f3, f7, f19 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0x80400000)
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f25, 0(x2) # load 0x3f800000 from memory into f25
la x2, scratch
li x3, 0x72cd799f # load x3 with value 0x72cd799f
sw x3, 0(x2) # store 0x72cd799f in memory
flw f28, 0(x2) # load 0x72cd799f from memory into f28
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f16, 0(x2) # load 0x80400000 from memory into f16
fnmsub.s f7, f25, f28, f16, dyn # perform operation
fnmsub.s f7, f25, f28, f16, rdn # perform operation
fnmsub.s f7, f25, f28, f16, rmm # perform operation
fnmsub.s f7, f25, f28, f16, rne # perform operation
fnmsub.s f7, f25, f28, f16, rtz # perform operation
fnmsub.s f7, f25, f28, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f7, f25, f28, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f7, f25, f28, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f7, f25, f28, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f7, f25, f28, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f7, f25, f28, f16 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0x1)
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f11, 0(x2) # load 0x3f800000 from memory into f11
la x2, scratch
li x3, 0xee402ca5 # load x3 with value 0xee402ca5
sw x3, 0(x2) # store 0xee402ca5 in memory
flw f15, 0(x2) # load 0xee402ca5 from memory into f15
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f28, 0(x2) # load 0x00000001 from memory into f28
fnmsub.s f5, f11, f15, f28, dyn # perform operation
fnmsub.s f5, f11, f15, f28, rdn # perform operation
fnmsub.s f5, f11, f15, f28, rmm # perform operation
fnmsub.s f5, f11, f15, f28, rne # perform operation
fnmsub.s f5, f11, f15, f28, rtz # perform operation
fnmsub.s f5, f11, f15, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f5, f11, f15, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f5, f11, f15, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f5, f11, f15, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f5, f11, f15, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f5, f11, f15, f28 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0x80000001)
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f26, 0(x2) # load 0x3f800000 from memory into f26
la x2, scratch
li x3, 0xc10c562b # load x3 with value 0xc10c562b
sw x3, 0(x2) # store 0xc10c562b in memory
flw f5, 0(x2) # load 0xc10c562b from memory into f5
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f28, 0(x2) # load 0x80000001 from memory into f28
fnmsub.s f15, f26, f5, f28, dyn # perform operation
fnmsub.s f15, f26, f5, f28, rdn # perform operation
fnmsub.s f15, f26, f5, f28, rmm # perform operation
fnmsub.s f15, f26, f5, f28, rne # perform operation
fnmsub.s f15, f26, f5, f28, rtz # perform operation
fnmsub.s f15, f26, f5, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f15, f26, f5, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f15, f26, f5, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f15, f26, f5, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f15, f26, f5, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f15, f26, f5, f28 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0x7f800000)
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f6, 0(x2) # load 0x3f800000 from memory into f6
la x2, scratch
li x3, 0xb2241c7b # load x3 with value 0xb2241c7b
sw x3, 0(x2) # store 0xb2241c7b in memory
flw f19, 0(x2) # load 0xb2241c7b from memory into f19
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f12, 0(x2) # load 0x7f800000 from memory into f12
fnmsub.s f1, f6, f19, f12, dyn # perform operation
fnmsub.s f1, f6, f19, f12, rdn # perform operation
fnmsub.s f1, f6, f19, f12, rmm # perform operation
fnmsub.s f1, f6, f19, f12, rne # perform operation
fnmsub.s f1, f6, f19, f12, rtz # perform operation
fnmsub.s f1, f6, f19, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f1, f6, f19, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f1, f6, f19, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f1, f6, f19, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f1, f6, f19, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f1, f6, f19, f12 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0xff800000)
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f29, 0(x2) # load 0x3f800000 from memory into f29
la x2, scratch
li x3, 0x37622b6d # load x3 with value 0x37622b6d
sw x3, 0(x2) # store 0x37622b6d in memory
flw f21, 0(x2) # load 0x37622b6d from memory into f21
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f8, 0(x2) # load 0xff800000 from memory into f8
fnmsub.s f13, f29, f21, f8, dyn # perform operation
fnmsub.s f13, f29, f21, f8, rdn # perform operation
fnmsub.s f13, f29, f21, f8, rmm # perform operation
fnmsub.s f13, f29, f21, f8, rne # perform operation
fnmsub.s f13, f29, f21, f8, rtz # perform operation
fnmsub.s f13, f29, f21, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f13, f29, f21, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f13, f29, f21, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f13, f29, f21, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f13, f29, f21, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f13, f29, f21, f8 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0x7fc00000)
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f15, 0(x2) # load 0x3f800000 from memory into f15
la x2, scratch
li x3, 0x87fd3157 # load x3 with value 0x87fd3157
sw x3, 0(x2) # store 0x87fd3157 in memory
flw f31, 0(x2) # load 0x87fd3157 from memory into f31
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f1, 0(x2) # load 0x7fc00000 from memory into f1
fnmsub.s f28, f15, f31, f1, dyn # perform operation
fnmsub.s f28, f15, f31, f1, rdn # perform operation
fnmsub.s f28, f15, f31, f1, rmm # perform operation
fnmsub.s f28, f15, f31, f1, rne # perform operation
fnmsub.s f28, f15, f31, f1, rtz # perform operation
fnmsub.s f28, f15, f31, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f28, f15, f31, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f28, f15, f31, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f28, f15, f31, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f28, f15, f31, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f28, f15, f31, f1 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0x7fffffff)
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f7, 0(x2) # load 0x3f800000 from memory into f7
la x2, scratch
li x3, 0xf429d51a # load x3 with value 0xf429d51a
sw x3, 0(x2) # store 0xf429d51a in memory
flw f28, 0(x2) # load 0xf429d51a from memory into f28
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f10, 0(x2) # load 0x7fffffff from memory into f10
fnmsub.s f19, f7, f28, f10, dyn # perform operation
fnmsub.s f19, f7, f28, f10, rdn # perform operation
fnmsub.s f19, f7, f28, f10, rmm # perform operation
fnmsub.s f19, f7, f28, f10, rne # perform operation
fnmsub.s f19, f7, f28, f10, rtz # perform operation
fnmsub.s f19, f7, f28, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f19, f7, f28, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f19, f7, f28, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f19, f7, f28, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f19, f7, f28, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f19, f7, f28, f10 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0xffffffff)
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f22, 0(x2) # load 0x3f800000 from memory into f22
la x2, scratch
li x3, 0xbc62f85a # load x3 with value 0xbc62f85a
sw x3, 0(x2) # store 0xbc62f85a in memory
flw f21, 0(x2) # load 0xbc62f85a from memory into f21
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f25, 0(x2) # load 0xffffffff from memory into f25
fnmsub.s f26, f22, f21, f25, dyn # perform operation
fnmsub.s f26, f22, f21, f25, rdn # perform operation
fnmsub.s f26, f22, f21, f25, rmm # perform operation
fnmsub.s f26, f22, f21, f25, rne # perform operation
fnmsub.s f26, f22, f21, f25, rtz # perform operation
fnmsub.s f26, f22, f21, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f26, f22, f21, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f26, f22, f21, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f26, f22, f21, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f26, f22, f21, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f26, f22, f21, f25 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0x7f800001)
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f2, 0(x2) # load 0x3f800000 from memory into f2
la x2, scratch
li x3, 0xc93a2f21 # load x3 with value 0xc93a2f21
sw x3, 0(x2) # store 0xc93a2f21 in memory
flw f11, 0(x2) # load 0xc93a2f21 from memory into f11
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f19, 0(x2) # load 0x7f800001 from memory into f19
fnmsub.s f29, f2, f11, f19, dyn # perform operation
fnmsub.s f29, f2, f11, f19, rdn # perform operation
fnmsub.s f29, f2, f11, f19, rmm # perform operation
fnmsub.s f29, f2, f11, f19, rne # perform operation
fnmsub.s f29, f2, f11, f19, rtz # perform operation
fnmsub.s f29, f2, f11, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f29, f2, f11, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f29, f2, f11, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f29, f2, f11, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f29, f2, f11, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f29, f2, f11, f19 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0x7fbfffff)
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f3, 0(x2) # load 0x3f800000 from memory into f3
la x2, scratch
li x3, 0x37b23b0b # load x3 with value 0x37b23b0b
sw x3, 0(x2) # store 0x37b23b0b in memory
flw f9, 0(x2) # load 0x37b23b0b from memory into f9
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f31, 0(x2) # load 0x7fbfffff from memory into f31
fnmsub.s f29, f3, f9, f31, dyn # perform operation
fnmsub.s f29, f3, f9, f31, rdn # perform operation
fnmsub.s f29, f3, f9, f31, rmm # perform operation
fnmsub.s f29, f3, f9, f31, rne # perform operation
fnmsub.s f29, f3, f9, f31, rtz # perform operation
fnmsub.s f29, f3, f9, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f29, f3, f9, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f29, f3, f9, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f29, f3, f9, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f29, f3, f9, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f29, f3, f9, f31 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0xffbfffff)
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f15, 0(x2) # load 0x3f800000 from memory into f15
la x2, scratch
li x3, 0x557dfa60 # load x3 with value 0x557dfa60
sw x3, 0(x2) # store 0x557dfa60 in memory
flw f28, 0(x2) # load 0x557dfa60 from memory into f28
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f10, 0(x2) # load 0xffbfffff from memory into f10
fnmsub.s f3, f15, f28, f10, dyn # perform operation
fnmsub.s f3, f15, f28, f10, rdn # perform operation
fnmsub.s f3, f15, f28, f10, rmm # perform operation
fnmsub.s f3, f15, f28, f10, rne # perform operation
fnmsub.s f3, f15, f28, f10, rtz # perform operation
fnmsub.s f3, f15, f28, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f3, f15, f28, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f3, f15, f28, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f3, f15, f28, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f3, f15, f28, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f3, f15, f28, f10 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0x7ef8654f)
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f31, 0(x2) # load 0x3f800000 from memory into f31
la x2, scratch
li x3, 0x9e39565c # load x3 with value 0x9e39565c
sw x3, 0(x2) # store 0x9e39565c in memory
flw f18, 0(x2) # load 0x9e39565c from memory into f18
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f17, 0(x2) # load 0x7ef8654f from memory into f17
fnmsub.s f19, f31, f18, f17, dyn # perform operation
fnmsub.s f19, f31, f18, f17, rdn # perform operation
fnmsub.s f19, f31, f18, f17, rmm # perform operation
fnmsub.s f19, f31, f18, f17, rne # perform operation
fnmsub.s f19, f31, f18, f17, rtz # perform operation
fnmsub.s f19, f31, f18, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f19, f31, f18, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f19, f31, f18, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f19, f31, f18, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f19, f31, f18, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f19, f31, f18, f17 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0x813d9ab0)
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f13, 0(x2) # load 0x3f800000 from memory into f13
la x2, scratch
li x3, 0x64299758 # load x3 with value 0x64299758
sw x3, 0(x2) # store 0x64299758 in memory
flw f20, 0(x2) # load 0x64299758 from memory into f20
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f10, 0(x2) # load 0x813d9ab0 from memory into f10
fnmsub.s f14, f13, f20, f10, dyn # perform operation
fnmsub.s f14, f13, f20, f10, rdn # perform operation
fnmsub.s f14, f13, f20, f10, rmm # perform operation
fnmsub.s f14, f13, f20, f10, rne # perform operation
fnmsub.s f14, f13, f20, f10, rtz # perform operation
fnmsub.s f14, f13, f20, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f14, f13, f20, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f14, f13, f20, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f14, f13, f20, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f14, f13, f20, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f14, f13, f20, f10 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0x0)
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f3, 0(x2) # load 0xbf800000 from memory into f3
la x2, scratch
li x3, 0xe89bb6b8 # load x3 with value 0xe89bb6b8
sw x3, 0(x2) # store 0xe89bb6b8 in memory
flw f27, 0(x2) # load 0xe89bb6b8 from memory into f27
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f17, 0(x2) # load 0x00000000 from memory into f17
fnmsub.s f22, f3, f27, f17, dyn # perform operation
fnmsub.s f22, f3, f27, f17, rdn # perform operation
fnmsub.s f22, f3, f27, f17, rmm # perform operation
fnmsub.s f22, f3, f27, f17, rne # perform operation
fnmsub.s f22, f3, f27, f17, rtz # perform operation
fnmsub.s f22, f3, f27, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f22, f3, f27, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f22, f3, f27, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f22, f3, f27, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f22, f3, f27, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f22, f3, f27, f17 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0x80000000)
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f11, 0(x2) # load 0xbf800000 from memory into f11
la x2, scratch
li x3, 0xa7b13714 # load x3 with value 0xa7b13714
sw x3, 0(x2) # store 0xa7b13714 in memory
flw f26, 0(x2) # load 0xa7b13714 from memory into f26
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f1, 0(x2) # load 0x80000000 from memory into f1
fnmsub.s f8, f11, f26, f1, dyn # perform operation
fnmsub.s f8, f11, f26, f1, rdn # perform operation
fnmsub.s f8, f11, f26, f1, rmm # perform operation
fnmsub.s f8, f11, f26, f1, rne # perform operation
fnmsub.s f8, f11, f26, f1, rtz # perform operation
fnmsub.s f8, f11, f26, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f8, f11, f26, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f8, f11, f26, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f8, f11, f26, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f8, f11, f26, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f8, f11, f26, f1 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0x3f800000)
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f6, 0(x2) # load 0xbf800000 from memory into f6
la x2, scratch
li x3, 0xe256a55a # load x3 with value 0xe256a55a
sw x3, 0(x2) # store 0xe256a55a in memory
flw f3, 0(x2) # load 0xe256a55a from memory into f3
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f11, 0(x2) # load 0x3f800000 from memory into f11
fnmsub.s f7, f6, f3, f11, dyn # perform operation
fnmsub.s f7, f6, f3, f11, rdn # perform operation
fnmsub.s f7, f6, f3, f11, rmm # perform operation
fnmsub.s f7, f6, f3, f11, rne # perform operation
fnmsub.s f7, f6, f3, f11, rtz # perform operation
fnmsub.s f7, f6, f3, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f7, f6, f3, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f7, f6, f3, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f7, f6, f3, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f7, f6, f3, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f7, f6, f3, f11 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0xbf800000)
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f6, 0(x2) # load 0xbf800000 from memory into f6
la x2, scratch
li x3, 0x457d44fa # load x3 with value 0x457d44fa
sw x3, 0(x2) # store 0x457d44fa in memory
flw f18, 0(x2) # load 0x457d44fa from memory into f18
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f25, 0(x2) # load 0xbf800000 from memory into f25
fnmsub.s f17, f6, f18, f25, dyn # perform operation
fnmsub.s f17, f6, f18, f25, rdn # perform operation
fnmsub.s f17, f6, f18, f25, rmm # perform operation
fnmsub.s f17, f6, f18, f25, rne # perform operation
fnmsub.s f17, f6, f18, f25, rtz # perform operation
fnmsub.s f17, f6, f18, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f17, f6, f18, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f17, f6, f18, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f17, f6, f18, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f17, f6, f18, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f17, f6, f18, f25 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0x3fc00000)
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f30, 0(x2) # load 0xbf800000 from memory into f30
la x2, scratch
li x3, 0xe415bfe9 # load x3 with value 0xe415bfe9
sw x3, 0(x2) # store 0xe415bfe9 in memory
flw f7, 0(x2) # load 0xe415bfe9 from memory into f7
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f22, 0(x2) # load 0x3fc00000 from memory into f22
fnmsub.s f18, f30, f7, f22, dyn # perform operation
fnmsub.s f18, f30, f7, f22, rdn # perform operation
fnmsub.s f18, f30, f7, f22, rmm # perform operation
fnmsub.s f18, f30, f7, f22, rne # perform operation
fnmsub.s f18, f30, f7, f22, rtz # perform operation
fnmsub.s f18, f30, f7, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f18, f30, f7, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f18, f30, f7, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f18, f30, f7, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f18, f30, f7, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f18, f30, f7, f22 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0xbfc00000)
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f16, 0(x2) # load 0xbf800000 from memory into f16
la x2, scratch
li x3, 0x297fe6b2 # load x3 with value 0x297fe6b2
sw x3, 0(x2) # store 0x297fe6b2 in memory
flw f21, 0(x2) # load 0x297fe6b2 from memory into f21
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f13, 0(x2) # load 0xbfc00000 from memory into f13
fnmsub.s f11, f16, f21, f13, dyn # perform operation
fnmsub.s f11, f16, f21, f13, rdn # perform operation
fnmsub.s f11, f16, f21, f13, rmm # perform operation
fnmsub.s f11, f16, f21, f13, rne # perform operation
fnmsub.s f11, f16, f21, f13, rtz # perform operation
fnmsub.s f11, f16, f21, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f11, f16, f21, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f11, f16, f21, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f11, f16, f21, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f11, f16, f21, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f11, f16, f21, f13 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0x40000000)
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f28, 0(x2) # load 0xbf800000 from memory into f28
la x2, scratch
li x3, 0xa16f4ae9 # load x3 with value 0xa16f4ae9
sw x3, 0(x2) # store 0xa16f4ae9 in memory
flw f3, 0(x2) # load 0xa16f4ae9 from memory into f3
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f27, 0(x2) # load 0x40000000 from memory into f27
fnmsub.s f1, f28, f3, f27, dyn # perform operation
fnmsub.s f1, f28, f3, f27, rdn # perform operation
fnmsub.s f1, f28, f3, f27, rmm # perform operation
fnmsub.s f1, f28, f3, f27, rne # perform operation
fnmsub.s f1, f28, f3, f27, rtz # perform operation
fnmsub.s f1, f28, f3, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f1, f28, f3, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f1, f28, f3, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f1, f28, f3, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f1, f28, f3, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f1, f28, f3, f27 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0xc0000000)
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f14, 0(x2) # load 0xbf800000 from memory into f14
la x2, scratch
li x3, 0xb08fc9ed # load x3 with value 0xb08fc9ed
sw x3, 0(x2) # store 0xb08fc9ed in memory
flw f3, 0(x2) # load 0xb08fc9ed from memory into f3
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f2, 0(x2) # load 0xc0000000 from memory into f2
fnmsub.s f23, f14, f3, f2, dyn # perform operation
fnmsub.s f23, f14, f3, f2, rdn # perform operation
fnmsub.s f23, f14, f3, f2, rmm # perform operation
fnmsub.s f23, f14, f3, f2, rne # perform operation
fnmsub.s f23, f14, f3, f2, rtz # perform operation
fnmsub.s f23, f14, f3, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f23, f14, f3, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f23, f14, f3, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f23, f14, f3, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f23, f14, f3, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f23, f14, f3, f2 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0x800000)
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f23, 0(x2) # load 0xbf800000 from memory into f23
la x2, scratch
li x3, 0xaf631391 # load x3 with value 0xaf631391
sw x3, 0(x2) # store 0xaf631391 in memory
flw f17, 0(x2) # load 0xaf631391 from memory into f17
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f19, 0(x2) # load 0x00800000 from memory into f19
fnmsub.s f20, f23, f17, f19, dyn # perform operation
fnmsub.s f20, f23, f17, f19, rdn # perform operation
fnmsub.s f20, f23, f17, f19, rmm # perform operation
fnmsub.s f20, f23, f17, f19, rne # perform operation
fnmsub.s f20, f23, f17, f19, rtz # perform operation
fnmsub.s f20, f23, f17, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f20, f23, f17, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f20, f23, f17, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f20, f23, f17, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f20, f23, f17, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f20, f23, f17, f19 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0x80800000)
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f26, 0(x2) # load 0xbf800000 from memory into f26
la x2, scratch
li x3, 0x68013dc9 # load x3 with value 0x68013dc9
sw x3, 0(x2) # store 0x68013dc9 in memory
flw f22, 0(x2) # load 0x68013dc9 from memory into f22
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f3, 0(x2) # load 0x80800000 from memory into f3
fnmsub.s f11, f26, f22, f3, dyn # perform operation
fnmsub.s f11, f26, f22, f3, rdn # perform operation
fnmsub.s f11, f26, f22, f3, rmm # perform operation
fnmsub.s f11, f26, f22, f3, rne # perform operation
fnmsub.s f11, f26, f22, f3, rtz # perform operation
fnmsub.s f11, f26, f22, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f11, f26, f22, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f11, f26, f22, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f11, f26, f22, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f11, f26, f22, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f11, f26, f22, f3 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0x7f7fffff)
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f1, 0(x2) # load 0xbf800000 from memory into f1
la x2, scratch
li x3, 0x9f045d6f # load x3 with value 0x9f045d6f
sw x3, 0(x2) # store 0x9f045d6f in memory
flw f2, 0(x2) # load 0x9f045d6f from memory into f2
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f7, 0(x2) # load 0x7f7fffff from memory into f7
fnmsub.s f24, f1, f2, f7, dyn # perform operation
fnmsub.s f24, f1, f2, f7, rdn # perform operation
fnmsub.s f24, f1, f2, f7, rmm # perform operation
fnmsub.s f24, f1, f2, f7, rne # perform operation
fnmsub.s f24, f1, f2, f7, rtz # perform operation
fnmsub.s f24, f1, f2, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f24, f1, f2, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f24, f1, f2, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f24, f1, f2, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f24, f1, f2, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f24, f1, f2, f7 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0xff7fffff)
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f17, 0(x2) # load 0xbf800000 from memory into f17
la x2, scratch
li x3, 0xdbf3deee # load x3 with value 0xdbf3deee
sw x3, 0(x2) # store 0xdbf3deee in memory
flw f8, 0(x2) # load 0xdbf3deee from memory into f8
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f1, 0(x2) # load 0xff7fffff from memory into f1
fnmsub.s f28, f17, f8, f1, dyn # perform operation
fnmsub.s f28, f17, f8, f1, rdn # perform operation
fnmsub.s f28, f17, f8, f1, rmm # perform operation
fnmsub.s f28, f17, f8, f1, rne # perform operation
fnmsub.s f28, f17, f8, f1, rtz # perform operation
fnmsub.s f28, f17, f8, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f28, f17, f8, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f28, f17, f8, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f28, f17, f8, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f28, f17, f8, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f28, f17, f8, f1 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0x7fffff)
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f10, 0(x2) # load 0xbf800000 from memory into f10
la x2, scratch
li x3, 0x625c9641 # load x3 with value 0x625c9641
sw x3, 0(x2) # store 0x625c9641 in memory
flw f28, 0(x2) # load 0x625c9641 from memory into f28
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f1, 0(x2) # load 0x007fffff from memory into f1
fnmsub.s f19, f10, f28, f1, dyn # perform operation
fnmsub.s f19, f10, f28, f1, rdn # perform operation
fnmsub.s f19, f10, f28, f1, rmm # perform operation
fnmsub.s f19, f10, f28, f1, rne # perform operation
fnmsub.s f19, f10, f28, f1, rtz # perform operation
fnmsub.s f19, f10, f28, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f19, f10, f28, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f19, f10, f28, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f19, f10, f28, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f19, f10, f28, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f19, f10, f28, f1 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0x807fffff)
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f13, 0(x2) # load 0xbf800000 from memory into f13
la x2, scratch
li x3, 0xc9b5b401 # load x3 with value 0xc9b5b401
sw x3, 0(x2) # store 0xc9b5b401 in memory
flw f10, 0(x2) # load 0xc9b5b401 from memory into f10
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f24, 0(x2) # load 0x807fffff from memory into f24
fnmsub.s f11, f13, f10, f24, dyn # perform operation
fnmsub.s f11, f13, f10, f24, rdn # perform operation
fnmsub.s f11, f13, f10, f24, rmm # perform operation
fnmsub.s f11, f13, f10, f24, rne # perform operation
fnmsub.s f11, f13, f10, f24, rtz # perform operation
fnmsub.s f11, f13, f10, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f11, f13, f10, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f11, f13, f10, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f11, f13, f10, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f11, f13, f10, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f11, f13, f10, f24 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0x400000)
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f23, 0(x2) # load 0xbf800000 from memory into f23
la x2, scratch
li x3, 0xf5814d83 # load x3 with value 0xf5814d83
sw x3, 0(x2) # store 0xf5814d83 in memory
flw f16, 0(x2) # load 0xf5814d83 from memory into f16
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f26, 0(x2) # load 0x00400000 from memory into f26
fnmsub.s f25, f23, f16, f26, dyn # perform operation
fnmsub.s f25, f23, f16, f26, rdn # perform operation
fnmsub.s f25, f23, f16, f26, rmm # perform operation
fnmsub.s f25, f23, f16, f26, rne # perform operation
fnmsub.s f25, f23, f16, f26, rtz # perform operation
fnmsub.s f25, f23, f16, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f25, f23, f16, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f25, f23, f16, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f25, f23, f16, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f25, f23, f16, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f25, f23, f16, f26 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0x80400000)
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f27, 0(x2) # load 0xbf800000 from memory into f27
la x2, scratch
li x3, 0xc666591e # load x3 with value 0xc666591e
sw x3, 0(x2) # store 0xc666591e in memory
flw f13, 0(x2) # load 0xc666591e from memory into f13
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f2, 0(x2) # load 0x80400000 from memory into f2
fnmsub.s f18, f27, f13, f2, dyn # perform operation
fnmsub.s f18, f27, f13, f2, rdn # perform operation
fnmsub.s f18, f27, f13, f2, rmm # perform operation
fnmsub.s f18, f27, f13, f2, rne # perform operation
fnmsub.s f18, f27, f13, f2, rtz # perform operation
fnmsub.s f18, f27, f13, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f18, f27, f13, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f18, f27, f13, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f18, f27, f13, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f18, f27, f13, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f18, f27, f13, f2 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0x1)
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f14, 0(x2) # load 0xbf800000 from memory into f14
la x2, scratch
li x3, 0xf3fb8e98 # load x3 with value 0xf3fb8e98
sw x3, 0(x2) # store 0xf3fb8e98 in memory
flw f9, 0(x2) # load 0xf3fb8e98 from memory into f9
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f27, 0(x2) # load 0x00000001 from memory into f27
fnmsub.s f16, f14, f9, f27, dyn # perform operation
fnmsub.s f16, f14, f9, f27, rdn # perform operation
fnmsub.s f16, f14, f9, f27, rmm # perform operation
fnmsub.s f16, f14, f9, f27, rne # perform operation
fnmsub.s f16, f14, f9, f27, rtz # perform operation
fnmsub.s f16, f14, f9, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f16, f14, f9, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f16, f14, f9, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f16, f14, f9, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f16, f14, f9, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f16, f14, f9, f27 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0x80000001)
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f26, 0(x2) # load 0xbf800000 from memory into f26
la x2, scratch
li x3, 0x84b67f4c # load x3 with value 0x84b67f4c
sw x3, 0(x2) # store 0x84b67f4c in memory
flw f24, 0(x2) # load 0x84b67f4c from memory into f24
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f10, 0(x2) # load 0x80000001 from memory into f10
fnmsub.s f20, f26, f24, f10, dyn # perform operation
fnmsub.s f20, f26, f24, f10, rdn # perform operation
fnmsub.s f20, f26, f24, f10, rmm # perform operation
fnmsub.s f20, f26, f24, f10, rne # perform operation
fnmsub.s f20, f26, f24, f10, rtz # perform operation
fnmsub.s f20, f26, f24, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f20, f26, f24, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f20, f26, f24, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f20, f26, f24, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f20, f26, f24, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f20, f26, f24, f10 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0x7f800000)
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f22, 0(x2) # load 0xbf800000 from memory into f22
la x2, scratch
li x3, 0xe1fd7a6a # load x3 with value 0xe1fd7a6a
sw x3, 0(x2) # store 0xe1fd7a6a in memory
flw f15, 0(x2) # load 0xe1fd7a6a from memory into f15
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f31, 0(x2) # load 0x7f800000 from memory into f31
fnmsub.s f8, f22, f15, f31, dyn # perform operation
fnmsub.s f8, f22, f15, f31, rdn # perform operation
fnmsub.s f8, f22, f15, f31, rmm # perform operation
fnmsub.s f8, f22, f15, f31, rne # perform operation
fnmsub.s f8, f22, f15, f31, rtz # perform operation
fnmsub.s f8, f22, f15, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f8, f22, f15, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f8, f22, f15, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f8, f22, f15, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f8, f22, f15, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f8, f22, f15, f31 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0xff800000)
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f22, 0(x2) # load 0xbf800000 from memory into f22
la x2, scratch
li x3, 0x0e38ed73 # load x3 with value 0x0e38ed73
sw x3, 0(x2) # store 0x0e38ed73 in memory
flw f12, 0(x2) # load 0x0e38ed73 from memory into f12
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f25, 0(x2) # load 0xff800000 from memory into f25
fnmsub.s f9, f22, f12, f25, dyn # perform operation
fnmsub.s f9, f22, f12, f25, rdn # perform operation
fnmsub.s f9, f22, f12, f25, rmm # perform operation
fnmsub.s f9, f22, f12, f25, rne # perform operation
fnmsub.s f9, f22, f12, f25, rtz # perform operation
fnmsub.s f9, f22, f12, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f9, f22, f12, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f9, f22, f12, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f9, f22, f12, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f9, f22, f12, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f9, f22, f12, f25 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0x7fc00000)
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f7, 0(x2) # load 0xbf800000 from memory into f7
la x2, scratch
li x3, 0x211a8814 # load x3 with value 0x211a8814
sw x3, 0(x2) # store 0x211a8814 in memory
flw f17, 0(x2) # load 0x211a8814 from memory into f17
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f22, 0(x2) # load 0x7fc00000 from memory into f22
fnmsub.s f21, f7, f17, f22, dyn # perform operation
fnmsub.s f21, f7, f17, f22, rdn # perform operation
fnmsub.s f21, f7, f17, f22, rmm # perform operation
fnmsub.s f21, f7, f17, f22, rne # perform operation
fnmsub.s f21, f7, f17, f22, rtz # perform operation
fnmsub.s f21, f7, f17, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f21, f7, f17, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f21, f7, f17, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f21, f7, f17, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f21, f7, f17, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f21, f7, f17, f22 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0x7fffffff)
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f17, 0(x2) # load 0xbf800000 from memory into f17
la x2, scratch
li x3, 0xabf3b376 # load x3 with value 0xabf3b376
sw x3, 0(x2) # store 0xabf3b376 in memory
flw f26, 0(x2) # load 0xabf3b376 from memory into f26
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f9, 0(x2) # load 0x7fffffff from memory into f9
fnmsub.s f5, f17, f26, f9, dyn # perform operation
fnmsub.s f5, f17, f26, f9, rdn # perform operation
fnmsub.s f5, f17, f26, f9, rmm # perform operation
fnmsub.s f5, f17, f26, f9, rne # perform operation
fnmsub.s f5, f17, f26, f9, rtz # perform operation
fnmsub.s f5, f17, f26, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f5, f17, f26, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f5, f17, f26, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f5, f17, f26, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f5, f17, f26, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f5, f17, f26, f9 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0xffffffff)
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f19, 0(x2) # load 0xbf800000 from memory into f19
la x2, scratch
li x3, 0xa592f829 # load x3 with value 0xa592f829
sw x3, 0(x2) # store 0xa592f829 in memory
flw f12, 0(x2) # load 0xa592f829 from memory into f12
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f17, 0(x2) # load 0xffffffff from memory into f17
fnmsub.s f30, f19, f12, f17, dyn # perform operation
fnmsub.s f30, f19, f12, f17, rdn # perform operation
fnmsub.s f30, f19, f12, f17, rmm # perform operation
fnmsub.s f30, f19, f12, f17, rne # perform operation
fnmsub.s f30, f19, f12, f17, rtz # perform operation
fnmsub.s f30, f19, f12, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f30, f19, f12, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f30, f19, f12, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f30, f19, f12, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f30, f19, f12, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f30, f19, f12, f17 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0x7f800001)
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f11, 0(x2) # load 0xbf800000 from memory into f11
la x2, scratch
li x3, 0xc589854a # load x3 with value 0xc589854a
sw x3, 0(x2) # store 0xc589854a in memory
flw f16, 0(x2) # load 0xc589854a from memory into f16
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f12, 0(x2) # load 0x7f800001 from memory into f12
fnmsub.s f25, f11, f16, f12, dyn # perform operation
fnmsub.s f25, f11, f16, f12, rdn # perform operation
fnmsub.s f25, f11, f16, f12, rmm # perform operation
fnmsub.s f25, f11, f16, f12, rne # perform operation
fnmsub.s f25, f11, f16, f12, rtz # perform operation
fnmsub.s f25, f11, f16, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f25, f11, f16, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f25, f11, f16, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f25, f11, f16, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f25, f11, f16, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f25, f11, f16, f12 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0x7fbfffff)
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f23, 0(x2) # load 0xbf800000 from memory into f23
la x2, scratch
li x3, 0x04ef89f9 # load x3 with value 0x04ef89f9
sw x3, 0(x2) # store 0x04ef89f9 in memory
flw f7, 0(x2) # load 0x04ef89f9 from memory into f7
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f21, 0(x2) # load 0x7fbfffff from memory into f21
fnmsub.s f9, f23, f7, f21, dyn # perform operation
fnmsub.s f9, f23, f7, f21, rdn # perform operation
fnmsub.s f9, f23, f7, f21, rmm # perform operation
fnmsub.s f9, f23, f7, f21, rne # perform operation
fnmsub.s f9, f23, f7, f21, rtz # perform operation
fnmsub.s f9, f23, f7, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f9, f23, f7, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f9, f23, f7, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f9, f23, f7, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f9, f23, f7, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f9, f23, f7, f21 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0xffbfffff)
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f26, 0(x2) # load 0xbf800000 from memory into f26
la x2, scratch
li x3, 0x38eca9b2 # load x3 with value 0x38eca9b2
sw x3, 0(x2) # store 0x38eca9b2 in memory
flw f8, 0(x2) # load 0x38eca9b2 from memory into f8
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f14, 0(x2) # load 0xffbfffff from memory into f14
fnmsub.s f10, f26, f8, f14, dyn # perform operation
fnmsub.s f10, f26, f8, f14, rdn # perform operation
fnmsub.s f10, f26, f8, f14, rmm # perform operation
fnmsub.s f10, f26, f8, f14, rne # perform operation
fnmsub.s f10, f26, f8, f14, rtz # perform operation
fnmsub.s f10, f26, f8, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f10, f26, f8, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f10, f26, f8, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f10, f26, f8, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f10, f26, f8, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f10, f26, f8, f14 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0x7ef8654f)
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f2, 0(x2) # load 0xbf800000 from memory into f2
la x2, scratch
li x3, 0x2463bba7 # load x3 with value 0x2463bba7
sw x3, 0(x2) # store 0x2463bba7 in memory
flw f12, 0(x2) # load 0x2463bba7 from memory into f12
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f17, 0(x2) # load 0x7ef8654f from memory into f17
fnmsub.s f19, f2, f12, f17, dyn # perform operation
fnmsub.s f19, f2, f12, f17, rdn # perform operation
fnmsub.s f19, f2, f12, f17, rmm # perform operation
fnmsub.s f19, f2, f12, f17, rne # perform operation
fnmsub.s f19, f2, f12, f17, rtz # perform operation
fnmsub.s f19, f2, f12, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f19, f2, f12, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f19, f2, f12, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f19, f2, f12, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f19, f2, f12, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f19, f2, f12, f17 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0x813d9ab0)
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f17, 0(x2) # load 0xbf800000 from memory into f17
la x2, scratch
li x3, 0xc4271774 # load x3 with value 0xc4271774
sw x3, 0(x2) # store 0xc4271774 in memory
flw f22, 0(x2) # load 0xc4271774 from memory into f22
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f11, 0(x2) # load 0x813d9ab0 from memory into f11
fnmsub.s f6, f17, f22, f11, dyn # perform operation
fnmsub.s f6, f17, f22, f11, rdn # perform operation
fnmsub.s f6, f17, f22, f11, rmm # perform operation
fnmsub.s f6, f17, f22, f11, rne # perform operation
fnmsub.s f6, f17, f22, f11, rtz # perform operation
fnmsub.s f6, f17, f22, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f6, f17, f22, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f6, f17, f22, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f6, f17, f22, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f6, f17, f22, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f6, f17, f22, f11 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0x0)
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f17, 0(x2) # load 0x3fc00000 from memory into f17
la x2, scratch
li x3, 0x3227f0fe # load x3 with value 0x3227f0fe
sw x3, 0(x2) # store 0x3227f0fe in memory
flw f13, 0(x2) # load 0x3227f0fe from memory into f13
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f18, 0(x2) # load 0x00000000 from memory into f18
fnmsub.s f16, f17, f13, f18, dyn # perform operation
fnmsub.s f16, f17, f13, f18, rdn # perform operation
fnmsub.s f16, f17, f13, f18, rmm # perform operation
fnmsub.s f16, f17, f13, f18, rne # perform operation
fnmsub.s f16, f17, f13, f18, rtz # perform operation
fnmsub.s f16, f17, f13, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f16, f17, f13, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f16, f17, f13, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f16, f17, f13, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f16, f17, f13, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f16, f17, f13, f18 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0x80000000)
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f16, 0(x2) # load 0x3fc00000 from memory into f16
la x2, scratch
li x3, 0x8bec75a1 # load x3 with value 0x8bec75a1
sw x3, 0(x2) # store 0x8bec75a1 in memory
flw f31, 0(x2) # load 0x8bec75a1 from memory into f31
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f24, 0(x2) # load 0x80000000 from memory into f24
fnmsub.s f28, f16, f31, f24, dyn # perform operation
fnmsub.s f28, f16, f31, f24, rdn # perform operation
fnmsub.s f28, f16, f31, f24, rmm # perform operation
fnmsub.s f28, f16, f31, f24, rne # perform operation
fnmsub.s f28, f16, f31, f24, rtz # perform operation
fnmsub.s f28, f16, f31, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f28, f16, f31, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f28, f16, f31, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f28, f16, f31, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f28, f16, f31, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f28, f16, f31, f24 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0x3f800000)
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f25, 0(x2) # load 0x3fc00000 from memory into f25
la x2, scratch
li x3, 0x8e3f54cf # load x3 with value 0x8e3f54cf
sw x3, 0(x2) # store 0x8e3f54cf in memory
flw f30, 0(x2) # load 0x8e3f54cf from memory into f30
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f22, 0(x2) # load 0x3f800000 from memory into f22
fnmsub.s f18, f25, f30, f22, dyn # perform operation
fnmsub.s f18, f25, f30, f22, rdn # perform operation
fnmsub.s f18, f25, f30, f22, rmm # perform operation
fnmsub.s f18, f25, f30, f22, rne # perform operation
fnmsub.s f18, f25, f30, f22, rtz # perform operation
fnmsub.s f18, f25, f30, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f18, f25, f30, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f18, f25, f30, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f18, f25, f30, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f18, f25, f30, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f18, f25, f30, f22 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0xbf800000)
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f12, 0(x2) # load 0x3fc00000 from memory into f12
la x2, scratch
li x3, 0xbb20c83e # load x3 with value 0xbb20c83e
sw x3, 0(x2) # store 0xbb20c83e in memory
flw f1, 0(x2) # load 0xbb20c83e from memory into f1
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f16, 0(x2) # load 0xbf800000 from memory into f16
fnmsub.s f28, f12, f1, f16, dyn # perform operation
fnmsub.s f28, f12, f1, f16, rdn # perform operation
fnmsub.s f28, f12, f1, f16, rmm # perform operation
fnmsub.s f28, f12, f1, f16, rne # perform operation
fnmsub.s f28, f12, f1, f16, rtz # perform operation
fnmsub.s f28, f12, f1, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f28, f12, f1, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f28, f12, f1, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f28, f12, f1, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f28, f12, f1, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f28, f12, f1, f16 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0x3fc00000)
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f14, 0(x2) # load 0x3fc00000 from memory into f14
la x2, scratch
li x3, 0xe10b2d87 # load x3 with value 0xe10b2d87
sw x3, 0(x2) # store 0xe10b2d87 in memory
flw f24, 0(x2) # load 0xe10b2d87 from memory into f24
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f12, 0(x2) # load 0x3fc00000 from memory into f12
fnmsub.s f16, f14, f24, f12, dyn # perform operation
fnmsub.s f16, f14, f24, f12, rdn # perform operation
fnmsub.s f16, f14, f24, f12, rmm # perform operation
fnmsub.s f16, f14, f24, f12, rne # perform operation
fnmsub.s f16, f14, f24, f12, rtz # perform operation
fnmsub.s f16, f14, f24, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f16, f14, f24, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f16, f14, f24, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f16, f14, f24, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f16, f14, f24, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f16, f14, f24, f12 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0xbfc00000)
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f22, 0(x2) # load 0x3fc00000 from memory into f22
la x2, scratch
li x3, 0x5f504f94 # load x3 with value 0x5f504f94
sw x3, 0(x2) # store 0x5f504f94 in memory
flw f15, 0(x2) # load 0x5f504f94 from memory into f15
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f30, 0(x2) # load 0xbfc00000 from memory into f30
fnmsub.s f21, f22, f15, f30, dyn # perform operation
fnmsub.s f21, f22, f15, f30, rdn # perform operation
fnmsub.s f21, f22, f15, f30, rmm # perform operation
fnmsub.s f21, f22, f15, f30, rne # perform operation
fnmsub.s f21, f22, f15, f30, rtz # perform operation
fnmsub.s f21, f22, f15, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f21, f22, f15, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f21, f22, f15, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f21, f22, f15, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f21, f22, f15, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f21, f22, f15, f30 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0x40000000)
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f26, 0(x2) # load 0x3fc00000 from memory into f26
la x2, scratch
li x3, 0x1a46c9b7 # load x3 with value 0x1a46c9b7
sw x3, 0(x2) # store 0x1a46c9b7 in memory
flw f22, 0(x2) # load 0x1a46c9b7 from memory into f22
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f31, 0(x2) # load 0x40000000 from memory into f31
fnmsub.s f21, f26, f22, f31, dyn # perform operation
fnmsub.s f21, f26, f22, f31, rdn # perform operation
fnmsub.s f21, f26, f22, f31, rmm # perform operation
fnmsub.s f21, f26, f22, f31, rne # perform operation
fnmsub.s f21, f26, f22, f31, rtz # perform operation
fnmsub.s f21, f26, f22, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f21, f26, f22, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f21, f26, f22, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f21, f26, f22, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f21, f26, f22, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f21, f26, f22, f31 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0xc0000000)
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f20, 0(x2) # load 0x3fc00000 from memory into f20
la x2, scratch
li x3, 0x584b2842 # load x3 with value 0x584b2842
sw x3, 0(x2) # store 0x584b2842 in memory
flw f21, 0(x2) # load 0x584b2842 from memory into f21
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f8, 0(x2) # load 0xc0000000 from memory into f8
fnmsub.s f7, f20, f21, f8, dyn # perform operation
fnmsub.s f7, f20, f21, f8, rdn # perform operation
fnmsub.s f7, f20, f21, f8, rmm # perform operation
fnmsub.s f7, f20, f21, f8, rne # perform operation
fnmsub.s f7, f20, f21, f8, rtz # perform operation
fnmsub.s f7, f20, f21, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f7, f20, f21, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f7, f20, f21, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f7, f20, f21, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f7, f20, f21, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f7, f20, f21, f8 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0x800000)
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f20, 0(x2) # load 0x3fc00000 from memory into f20
la x2, scratch
li x3, 0xdbbb04f2 # load x3 with value 0xdbbb04f2
sw x3, 0(x2) # store 0xdbbb04f2 in memory
flw f11, 0(x2) # load 0xdbbb04f2 from memory into f11
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f7, 0(x2) # load 0x00800000 from memory into f7
fnmsub.s f13, f20, f11, f7, dyn # perform operation
fnmsub.s f13, f20, f11, f7, rdn # perform operation
fnmsub.s f13, f20, f11, f7, rmm # perform operation
fnmsub.s f13, f20, f11, f7, rne # perform operation
fnmsub.s f13, f20, f11, f7, rtz # perform operation
fnmsub.s f13, f20, f11, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f13, f20, f11, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f13, f20, f11, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f13, f20, f11, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f13, f20, f11, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f13, f20, f11, f7 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0x80800000)
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f28, 0(x2) # load 0x3fc00000 from memory into f28
la x2, scratch
li x3, 0xe7e38309 # load x3 with value 0xe7e38309
sw x3, 0(x2) # store 0xe7e38309 in memory
flw f31, 0(x2) # load 0xe7e38309 from memory into f31
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f1, 0(x2) # load 0x80800000 from memory into f1
fnmsub.s f13, f28, f31, f1, dyn # perform operation
fnmsub.s f13, f28, f31, f1, rdn # perform operation
fnmsub.s f13, f28, f31, f1, rmm # perform operation
fnmsub.s f13, f28, f31, f1, rne # perform operation
fnmsub.s f13, f28, f31, f1, rtz # perform operation
fnmsub.s f13, f28, f31, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f13, f28, f31, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f13, f28, f31, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f13, f28, f31, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f13, f28, f31, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f13, f28, f31, f1 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0x7f7fffff)
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f30, 0(x2) # load 0x3fc00000 from memory into f30
la x2, scratch
li x3, 0x71e910cb # load x3 with value 0x71e910cb
sw x3, 0(x2) # store 0x71e910cb in memory
flw f23, 0(x2) # load 0x71e910cb from memory into f23
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f12, 0(x2) # load 0x7f7fffff from memory into f12
fnmsub.s f6, f30, f23, f12, dyn # perform operation
fnmsub.s f6, f30, f23, f12, rdn # perform operation
fnmsub.s f6, f30, f23, f12, rmm # perform operation
fnmsub.s f6, f30, f23, f12, rne # perform operation
fnmsub.s f6, f30, f23, f12, rtz # perform operation
fnmsub.s f6, f30, f23, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f6, f30, f23, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f6, f30, f23, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f6, f30, f23, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f6, f30, f23, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f6, f30, f23, f12 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0xff7fffff)
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f15, 0(x2) # load 0x3fc00000 from memory into f15
la x2, scratch
li x3, 0xadc4f093 # load x3 with value 0xadc4f093
sw x3, 0(x2) # store 0xadc4f093 in memory
flw f21, 0(x2) # load 0xadc4f093 from memory into f21
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f13, 0(x2) # load 0xff7fffff from memory into f13
fnmsub.s f29, f15, f21, f13, dyn # perform operation
fnmsub.s f29, f15, f21, f13, rdn # perform operation
fnmsub.s f29, f15, f21, f13, rmm # perform operation
fnmsub.s f29, f15, f21, f13, rne # perform operation
fnmsub.s f29, f15, f21, f13, rtz # perform operation
fnmsub.s f29, f15, f21, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f29, f15, f21, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f29, f15, f21, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f29, f15, f21, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f29, f15, f21, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f29, f15, f21, f13 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0x7fffff)
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f7, 0(x2) # load 0x3fc00000 from memory into f7
la x2, scratch
li x3, 0x75462a0e # load x3 with value 0x75462a0e
sw x3, 0(x2) # store 0x75462a0e in memory
flw f21, 0(x2) # load 0x75462a0e from memory into f21
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f8, 0(x2) # load 0x007fffff from memory into f8
fnmsub.s f2, f7, f21, f8, dyn # perform operation
fnmsub.s f2, f7, f21, f8, rdn # perform operation
fnmsub.s f2, f7, f21, f8, rmm # perform operation
fnmsub.s f2, f7, f21, f8, rne # perform operation
fnmsub.s f2, f7, f21, f8, rtz # perform operation
fnmsub.s f2, f7, f21, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f2, f7, f21, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f2, f7, f21, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f2, f7, f21, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f2, f7, f21, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f2, f7, f21, f8 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0x807fffff)
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f8, 0(x2) # load 0x3fc00000 from memory into f8
la x2, scratch
li x3, 0x97df90b5 # load x3 with value 0x97df90b5
sw x3, 0(x2) # store 0x97df90b5 in memory
flw f12, 0(x2) # load 0x97df90b5 from memory into f12
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f13, 0(x2) # load 0x807fffff from memory into f13
fnmsub.s f7, f8, f12, f13, dyn # perform operation
fnmsub.s f7, f8, f12, f13, rdn # perform operation
fnmsub.s f7, f8, f12, f13, rmm # perform operation
fnmsub.s f7, f8, f12, f13, rne # perform operation
fnmsub.s f7, f8, f12, f13, rtz # perform operation
fnmsub.s f7, f8, f12, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f7, f8, f12, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f7, f8, f12, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f7, f8, f12, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f7, f8, f12, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f7, f8, f12, f13 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0x400000)
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f8, 0(x2) # load 0x3fc00000 from memory into f8
la x2, scratch
li x3, 0xe23ac29b # load x3 with value 0xe23ac29b
sw x3, 0(x2) # store 0xe23ac29b in memory
flw f6, 0(x2) # load 0xe23ac29b from memory into f6
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f23, 0(x2) # load 0x00400000 from memory into f23
fnmsub.s f25, f8, f6, f23, dyn # perform operation
fnmsub.s f25, f8, f6, f23, rdn # perform operation
fnmsub.s f25, f8, f6, f23, rmm # perform operation
fnmsub.s f25, f8, f6, f23, rne # perform operation
fnmsub.s f25, f8, f6, f23, rtz # perform operation
fnmsub.s f25, f8, f6, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f25, f8, f6, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f25, f8, f6, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f25, f8, f6, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f25, f8, f6, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f25, f8, f6, f23 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0x80400000)
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f14, 0(x2) # load 0x3fc00000 from memory into f14
la x2, scratch
li x3, 0xdf63ace5 # load x3 with value 0xdf63ace5
sw x3, 0(x2) # store 0xdf63ace5 in memory
flw f7, 0(x2) # load 0xdf63ace5 from memory into f7
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f17, 0(x2) # load 0x80400000 from memory into f17
fnmsub.s f12, f14, f7, f17, dyn # perform operation
fnmsub.s f12, f14, f7, f17, rdn # perform operation
fnmsub.s f12, f14, f7, f17, rmm # perform operation
fnmsub.s f12, f14, f7, f17, rne # perform operation
fnmsub.s f12, f14, f7, f17, rtz # perform operation
fnmsub.s f12, f14, f7, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f12, f14, f7, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f12, f14, f7, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f12, f14, f7, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f12, f14, f7, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f12, f14, f7, f17 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0x1)
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f29, 0(x2) # load 0x3fc00000 from memory into f29
la x2, scratch
li x3, 0x2222de7d # load x3 with value 0x2222de7d
sw x3, 0(x2) # store 0x2222de7d in memory
flw f14, 0(x2) # load 0x2222de7d from memory into f14
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f6, 0(x2) # load 0x00000001 from memory into f6
fnmsub.s f31, f29, f14, f6, dyn # perform operation
fnmsub.s f31, f29, f14, f6, rdn # perform operation
fnmsub.s f31, f29, f14, f6, rmm # perform operation
fnmsub.s f31, f29, f14, f6, rne # perform operation
fnmsub.s f31, f29, f14, f6, rtz # perform operation
fnmsub.s f31, f29, f14, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f31, f29, f14, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f31, f29, f14, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f31, f29, f14, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f31, f29, f14, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f31, f29, f14, f6 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0x80000001)
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f6, 0(x2) # load 0x3fc00000 from memory into f6
la x2, scratch
li x3, 0x3191ddb2 # load x3 with value 0x3191ddb2
sw x3, 0(x2) # store 0x3191ddb2 in memory
flw f31, 0(x2) # load 0x3191ddb2 from memory into f31
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f30, 0(x2) # load 0x80000001 from memory into f30
fnmsub.s f11, f6, f31, f30, dyn # perform operation
fnmsub.s f11, f6, f31, f30, rdn # perform operation
fnmsub.s f11, f6, f31, f30, rmm # perform operation
fnmsub.s f11, f6, f31, f30, rne # perform operation
fnmsub.s f11, f6, f31, f30, rtz # perform operation
fnmsub.s f11, f6, f31, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f11, f6, f31, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f11, f6, f31, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f11, f6, f31, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f11, f6, f31, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f11, f6, f31, f30 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0x7f800000)
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f2, 0(x2) # load 0x3fc00000 from memory into f2
la x2, scratch
li x3, 0xc63a13ed # load x3 with value 0xc63a13ed
sw x3, 0(x2) # store 0xc63a13ed in memory
flw f15, 0(x2) # load 0xc63a13ed from memory into f15
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f29, 0(x2) # load 0x7f800000 from memory into f29
fnmsub.s f6, f2, f15, f29, dyn # perform operation
fnmsub.s f6, f2, f15, f29, rdn # perform operation
fnmsub.s f6, f2, f15, f29, rmm # perform operation
fnmsub.s f6, f2, f15, f29, rne # perform operation
fnmsub.s f6, f2, f15, f29, rtz # perform operation
fnmsub.s f6, f2, f15, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f6, f2, f15, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f6, f2, f15, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f6, f2, f15, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f6, f2, f15, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f6, f2, f15, f29 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0xff800000)
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f31, 0(x2) # load 0x3fc00000 from memory into f31
la x2, scratch
li x3, 0x39271f5d # load x3 with value 0x39271f5d
sw x3, 0(x2) # store 0x39271f5d in memory
flw f27, 0(x2) # load 0x39271f5d from memory into f27
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f16, 0(x2) # load 0xff800000 from memory into f16
fnmsub.s f25, f31, f27, f16, dyn # perform operation
fnmsub.s f25, f31, f27, f16, rdn # perform operation
fnmsub.s f25, f31, f27, f16, rmm # perform operation
fnmsub.s f25, f31, f27, f16, rne # perform operation
fnmsub.s f25, f31, f27, f16, rtz # perform operation
fnmsub.s f25, f31, f27, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f25, f31, f27, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f25, f31, f27, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f25, f31, f27, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f25, f31, f27, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f25, f31, f27, f16 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0x7fc00000)
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f30, 0(x2) # load 0x3fc00000 from memory into f30
la x2, scratch
li x3, 0x280f7958 # load x3 with value 0x280f7958
sw x3, 0(x2) # store 0x280f7958 in memory
flw f28, 0(x2) # load 0x280f7958 from memory into f28
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f20, 0(x2) # load 0x7fc00000 from memory into f20
fnmsub.s f13, f30, f28, f20, dyn # perform operation
fnmsub.s f13, f30, f28, f20, rdn # perform operation
fnmsub.s f13, f30, f28, f20, rmm # perform operation
fnmsub.s f13, f30, f28, f20, rne # perform operation
fnmsub.s f13, f30, f28, f20, rtz # perform operation
fnmsub.s f13, f30, f28, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f13, f30, f28, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f13, f30, f28, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f13, f30, f28, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f13, f30, f28, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f13, f30, f28, f20 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0x7fffffff)
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f23, 0(x2) # load 0x3fc00000 from memory into f23
la x2, scratch
li x3, 0xfc9bdc36 # load x3 with value 0xfc9bdc36
sw x3, 0(x2) # store 0xfc9bdc36 in memory
flw f7, 0(x2) # load 0xfc9bdc36 from memory into f7
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f20, 0(x2) # load 0x7fffffff from memory into f20
fnmsub.s f2, f23, f7, f20, dyn # perform operation
fnmsub.s f2, f23, f7, f20, rdn # perform operation
fnmsub.s f2, f23, f7, f20, rmm # perform operation
fnmsub.s f2, f23, f7, f20, rne # perform operation
fnmsub.s f2, f23, f7, f20, rtz # perform operation
fnmsub.s f2, f23, f7, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f2, f23, f7, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f2, f23, f7, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f2, f23, f7, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f2, f23, f7, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f2, f23, f7, f20 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0xffffffff)
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f12, 0(x2) # load 0x3fc00000 from memory into f12
la x2, scratch
li x3, 0x87fe4be0 # load x3 with value 0x87fe4be0
sw x3, 0(x2) # store 0x87fe4be0 in memory
flw f13, 0(x2) # load 0x87fe4be0 from memory into f13
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f29, 0(x2) # load 0xffffffff from memory into f29
fnmsub.s f3, f12, f13, f29, dyn # perform operation
fnmsub.s f3, f12, f13, f29, rdn # perform operation
fnmsub.s f3, f12, f13, f29, rmm # perform operation
fnmsub.s f3, f12, f13, f29, rne # perform operation
fnmsub.s f3, f12, f13, f29, rtz # perform operation
fnmsub.s f3, f12, f13, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f3, f12, f13, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f3, f12, f13, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f3, f12, f13, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f3, f12, f13, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f3, f12, f13, f29 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0x7f800001)
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f25, 0(x2) # load 0x3fc00000 from memory into f25
la x2, scratch
li x3, 0x38222009 # load x3 with value 0x38222009
sw x3, 0(x2) # store 0x38222009 in memory
flw f26, 0(x2) # load 0x38222009 from memory into f26
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f13, 0(x2) # load 0x7f800001 from memory into f13
fnmsub.s f28, f25, f26, f13, dyn # perform operation
fnmsub.s f28, f25, f26, f13, rdn # perform operation
fnmsub.s f28, f25, f26, f13, rmm # perform operation
fnmsub.s f28, f25, f26, f13, rne # perform operation
fnmsub.s f28, f25, f26, f13, rtz # perform operation
fnmsub.s f28, f25, f26, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f28, f25, f26, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f28, f25, f26, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f28, f25, f26, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f28, f25, f26, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f28, f25, f26, f13 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0x7fbfffff)
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f5, 0(x2) # load 0x3fc00000 from memory into f5
la x2, scratch
li x3, 0xe7459e14 # load x3 with value 0xe7459e14
sw x3, 0(x2) # store 0xe7459e14 in memory
flw f24, 0(x2) # load 0xe7459e14 from memory into f24
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f9, 0(x2) # load 0x7fbfffff from memory into f9
fnmsub.s f31, f5, f24, f9, dyn # perform operation
fnmsub.s f31, f5, f24, f9, rdn # perform operation
fnmsub.s f31, f5, f24, f9, rmm # perform operation
fnmsub.s f31, f5, f24, f9, rne # perform operation
fnmsub.s f31, f5, f24, f9, rtz # perform operation
fnmsub.s f31, f5, f24, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f31, f5, f24, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f31, f5, f24, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f31, f5, f24, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f31, f5, f24, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f31, f5, f24, f9 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0xffbfffff)
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f3, 0(x2) # load 0x3fc00000 from memory into f3
la x2, scratch
li x3, 0xf0066c14 # load x3 with value 0xf0066c14
sw x3, 0(x2) # store 0xf0066c14 in memory
flw f24, 0(x2) # load 0xf0066c14 from memory into f24
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f22, 0(x2) # load 0xffbfffff from memory into f22
fnmsub.s f10, f3, f24, f22, dyn # perform operation
fnmsub.s f10, f3, f24, f22, rdn # perform operation
fnmsub.s f10, f3, f24, f22, rmm # perform operation
fnmsub.s f10, f3, f24, f22, rne # perform operation
fnmsub.s f10, f3, f24, f22, rtz # perform operation
fnmsub.s f10, f3, f24, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f10, f3, f24, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f10, f3, f24, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f10, f3, f24, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f10, f3, f24, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f10, f3, f24, f22 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0x7ef8654f)
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f9, 0(x2) # load 0x3fc00000 from memory into f9
la x2, scratch
li x3, 0x7ab34ea2 # load x3 with value 0x7ab34ea2
sw x3, 0(x2) # store 0x7ab34ea2 in memory
flw f1, 0(x2) # load 0x7ab34ea2 from memory into f1
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f11, 0(x2) # load 0x7ef8654f from memory into f11
fnmsub.s f31, f9, f1, f11, dyn # perform operation
fnmsub.s f31, f9, f1, f11, rdn # perform operation
fnmsub.s f31, f9, f1, f11, rmm # perform operation
fnmsub.s f31, f9, f1, f11, rne # perform operation
fnmsub.s f31, f9, f1, f11, rtz # perform operation
fnmsub.s f31, f9, f1, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f31, f9, f1, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f31, f9, f1, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f31, f9, f1, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f31, f9, f1, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f31, f9, f1, f11 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0x813d9ab0)
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f29, 0(x2) # load 0x3fc00000 from memory into f29
la x2, scratch
li x3, 0x9c61b95b # load x3 with value 0x9c61b95b
sw x3, 0(x2) # store 0x9c61b95b in memory
flw f30, 0(x2) # load 0x9c61b95b from memory into f30
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f18, 0(x2) # load 0x813d9ab0 from memory into f18
fnmsub.s f28, f29, f30, f18, dyn # perform operation
fnmsub.s f28, f29, f30, f18, rdn # perform operation
fnmsub.s f28, f29, f30, f18, rmm # perform operation
fnmsub.s f28, f29, f30, f18, rne # perform operation
fnmsub.s f28, f29, f30, f18, rtz # perform operation
fnmsub.s f28, f29, f30, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f28, f29, f30, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f28, f29, f30, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f28, f29, f30, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f28, f29, f30, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f28, f29, f30, f18 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0x0)
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f18, 0(x2) # load 0xbfc00000 from memory into f18
la x2, scratch
li x3, 0xaf0567e4 # load x3 with value 0xaf0567e4
sw x3, 0(x2) # store 0xaf0567e4 in memory
flw f30, 0(x2) # load 0xaf0567e4 from memory into f30
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f19, 0(x2) # load 0x00000000 from memory into f19
fnmsub.s f25, f18, f30, f19, dyn # perform operation
fnmsub.s f25, f18, f30, f19, rdn # perform operation
fnmsub.s f25, f18, f30, f19, rmm # perform operation
fnmsub.s f25, f18, f30, f19, rne # perform operation
fnmsub.s f25, f18, f30, f19, rtz # perform operation
fnmsub.s f25, f18, f30, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f25, f18, f30, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f25, f18, f30, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f25, f18, f30, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f25, f18, f30, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f25, f18, f30, f19 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0x80000000)
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f10, 0(x2) # load 0xbfc00000 from memory into f10
la x2, scratch
li x3, 0xf8056c15 # load x3 with value 0xf8056c15
sw x3, 0(x2) # store 0xf8056c15 in memory
flw f2, 0(x2) # load 0xf8056c15 from memory into f2
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f21, 0(x2) # load 0x80000000 from memory into f21
fnmsub.s f17, f10, f2, f21, dyn # perform operation
fnmsub.s f17, f10, f2, f21, rdn # perform operation
fnmsub.s f17, f10, f2, f21, rmm # perform operation
fnmsub.s f17, f10, f2, f21, rne # perform operation
fnmsub.s f17, f10, f2, f21, rtz # perform operation
fnmsub.s f17, f10, f2, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f17, f10, f2, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f17, f10, f2, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f17, f10, f2, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f17, f10, f2, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f17, f10, f2, f21 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0x3f800000)
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f8, 0(x2) # load 0xbfc00000 from memory into f8
la x2, scratch
li x3, 0x41532c98 # load x3 with value 0x41532c98
sw x3, 0(x2) # store 0x41532c98 in memory
flw f2, 0(x2) # load 0x41532c98 from memory into f2
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f18, 0(x2) # load 0x3f800000 from memory into f18
fnmsub.s f29, f8, f2, f18, dyn # perform operation
fnmsub.s f29, f8, f2, f18, rdn # perform operation
fnmsub.s f29, f8, f2, f18, rmm # perform operation
fnmsub.s f29, f8, f2, f18, rne # perform operation
fnmsub.s f29, f8, f2, f18, rtz # perform operation
fnmsub.s f29, f8, f2, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f29, f8, f2, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f29, f8, f2, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f29, f8, f2, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f29, f8, f2, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f29, f8, f2, f18 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0xbf800000)
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f2, 0(x2) # load 0xbfc00000 from memory into f2
la x2, scratch
li x3, 0x81513735 # load x3 with value 0x81513735
sw x3, 0(x2) # store 0x81513735 in memory
flw f15, 0(x2) # load 0x81513735 from memory into f15
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f25, 0(x2) # load 0xbf800000 from memory into f25
fnmsub.s f11, f2, f15, f25, dyn # perform operation
fnmsub.s f11, f2, f15, f25, rdn # perform operation
fnmsub.s f11, f2, f15, f25, rmm # perform operation
fnmsub.s f11, f2, f15, f25, rne # perform operation
fnmsub.s f11, f2, f15, f25, rtz # perform operation
fnmsub.s f11, f2, f15, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f11, f2, f15, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f11, f2, f15, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f11, f2, f15, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f11, f2, f15, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f11, f2, f15, f25 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0x3fc00000)
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f30, 0(x2) # load 0xbfc00000 from memory into f30
la x2, scratch
li x3, 0xee3046d6 # load x3 with value 0xee3046d6
sw x3, 0(x2) # store 0xee3046d6 in memory
flw f28, 0(x2) # load 0xee3046d6 from memory into f28
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f27, 0(x2) # load 0x3fc00000 from memory into f27
fnmsub.s f12, f30, f28, f27, dyn # perform operation
fnmsub.s f12, f30, f28, f27, rdn # perform operation
fnmsub.s f12, f30, f28, f27, rmm # perform operation
fnmsub.s f12, f30, f28, f27, rne # perform operation
fnmsub.s f12, f30, f28, f27, rtz # perform operation
fnmsub.s f12, f30, f28, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f12, f30, f28, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f12, f30, f28, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f12, f30, f28, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f12, f30, f28, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f12, f30, f28, f27 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0xbfc00000)
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f27, 0(x2) # load 0xbfc00000 from memory into f27
la x2, scratch
li x3, 0x034932fb # load x3 with value 0x034932fb
sw x3, 0(x2) # store 0x034932fb in memory
flw f31, 0(x2) # load 0x034932fb from memory into f31
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f6, 0(x2) # load 0xbfc00000 from memory into f6
fnmsub.s f20, f27, f31, f6, dyn # perform operation
fnmsub.s f20, f27, f31, f6, rdn # perform operation
fnmsub.s f20, f27, f31, f6, rmm # perform operation
fnmsub.s f20, f27, f31, f6, rne # perform operation
fnmsub.s f20, f27, f31, f6, rtz # perform operation
fnmsub.s f20, f27, f31, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f20, f27, f31, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f20, f27, f31, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f20, f27, f31, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f20, f27, f31, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f20, f27, f31, f6 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0x40000000)
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f6, 0(x2) # load 0xbfc00000 from memory into f6
la x2, scratch
li x3, 0x122f24fd # load x3 with value 0x122f24fd
sw x3, 0(x2) # store 0x122f24fd in memory
flw f31, 0(x2) # load 0x122f24fd from memory into f31
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f5, 0(x2) # load 0x40000000 from memory into f5
fnmsub.s f25, f6, f31, f5, dyn # perform operation
fnmsub.s f25, f6, f31, f5, rdn # perform operation
fnmsub.s f25, f6, f31, f5, rmm # perform operation
fnmsub.s f25, f6, f31, f5, rne # perform operation
fnmsub.s f25, f6, f31, f5, rtz # perform operation
fnmsub.s f25, f6, f31, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f25, f6, f31, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f25, f6, f31, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f25, f6, f31, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f25, f6, f31, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f25, f6, f31, f5 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0xc0000000)
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f18, 0(x2) # load 0xbfc00000 from memory into f18
la x2, scratch
li x3, 0xd0379bbc # load x3 with value 0xd0379bbc
sw x3, 0(x2) # store 0xd0379bbc in memory
flw f11, 0(x2) # load 0xd0379bbc from memory into f11
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f21, 0(x2) # load 0xc0000000 from memory into f21
fnmsub.s f23, f18, f11, f21, dyn # perform operation
fnmsub.s f23, f18, f11, f21, rdn # perform operation
fnmsub.s f23, f18, f11, f21, rmm # perform operation
fnmsub.s f23, f18, f11, f21, rne # perform operation
fnmsub.s f23, f18, f11, f21, rtz # perform operation
fnmsub.s f23, f18, f11, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f23, f18, f11, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f23, f18, f11, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f23, f18, f11, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f23, f18, f11, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f23, f18, f11, f21 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0x800000)
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f8, 0(x2) # load 0xbfc00000 from memory into f8
la x2, scratch
li x3, 0x89c28f3d # load x3 with value 0x89c28f3d
sw x3, 0(x2) # store 0x89c28f3d in memory
flw f19, 0(x2) # load 0x89c28f3d from memory into f19
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f29, 0(x2) # load 0x00800000 from memory into f29
fnmsub.s f21, f8, f19, f29, dyn # perform operation
fnmsub.s f21, f8, f19, f29, rdn # perform operation
fnmsub.s f21, f8, f19, f29, rmm # perform operation
fnmsub.s f21, f8, f19, f29, rne # perform operation
fnmsub.s f21, f8, f19, f29, rtz # perform operation
fnmsub.s f21, f8, f19, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f21, f8, f19, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f21, f8, f19, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f21, f8, f19, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f21, f8, f19, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f21, f8, f19, f29 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0x80800000)
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f15, 0(x2) # load 0xbfc00000 from memory into f15
la x2, scratch
li x3, 0x38a9fa5e # load x3 with value 0x38a9fa5e
sw x3, 0(x2) # store 0x38a9fa5e in memory
flw f26, 0(x2) # load 0x38a9fa5e from memory into f26
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f24, 0(x2) # load 0x80800000 from memory into f24
fnmsub.s f19, f15, f26, f24, dyn # perform operation
fnmsub.s f19, f15, f26, f24, rdn # perform operation
fnmsub.s f19, f15, f26, f24, rmm # perform operation
fnmsub.s f19, f15, f26, f24, rne # perform operation
fnmsub.s f19, f15, f26, f24, rtz # perform operation
fnmsub.s f19, f15, f26, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f19, f15, f26, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f19, f15, f26, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f19, f15, f26, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f19, f15, f26, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f19, f15, f26, f24 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0x7f7fffff)
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f31, 0(x2) # load 0xbfc00000 from memory into f31
la x2, scratch
li x3, 0x037834ff # load x3 with value 0x037834ff
sw x3, 0(x2) # store 0x037834ff in memory
flw f5, 0(x2) # load 0x037834ff from memory into f5
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f28, 0(x2) # load 0x7f7fffff from memory into f28
fnmsub.s f11, f31, f5, f28, dyn # perform operation
fnmsub.s f11, f31, f5, f28, rdn # perform operation
fnmsub.s f11, f31, f5, f28, rmm # perform operation
fnmsub.s f11, f31, f5, f28, rne # perform operation
fnmsub.s f11, f31, f5, f28, rtz # perform operation
fnmsub.s f11, f31, f5, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f11, f31, f5, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f11, f31, f5, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f11, f31, f5, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f11, f31, f5, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f11, f31, f5, f28 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0xff7fffff)
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f1, 0(x2) # load 0xbfc00000 from memory into f1
la x2, scratch
li x3, 0xab77a90b # load x3 with value 0xab77a90b
sw x3, 0(x2) # store 0xab77a90b in memory
flw f22, 0(x2) # load 0xab77a90b from memory into f22
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f31, 0(x2) # load 0xff7fffff from memory into f31
fnmsub.s f15, f1, f22, f31, dyn # perform operation
fnmsub.s f15, f1, f22, f31, rdn # perform operation
fnmsub.s f15, f1, f22, f31, rmm # perform operation
fnmsub.s f15, f1, f22, f31, rne # perform operation
fnmsub.s f15, f1, f22, f31, rtz # perform operation
fnmsub.s f15, f1, f22, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f15, f1, f22, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f15, f1, f22, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f15, f1, f22, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f15, f1, f22, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f15, f1, f22, f31 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0x7fffff)
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f28, 0(x2) # load 0xbfc00000 from memory into f28
la x2, scratch
li x3, 0x00b39850 # load x3 with value 0x00b39850
sw x3, 0(x2) # store 0x00b39850 in memory
flw f19, 0(x2) # load 0x00b39850 from memory into f19
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f22, 0(x2) # load 0x007fffff from memory into f22
fnmsub.s f3, f28, f19, f22, dyn # perform operation
fnmsub.s f3, f28, f19, f22, rdn # perform operation
fnmsub.s f3, f28, f19, f22, rmm # perform operation
fnmsub.s f3, f28, f19, f22, rne # perform operation
fnmsub.s f3, f28, f19, f22, rtz # perform operation
fnmsub.s f3, f28, f19, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f3, f28, f19, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f3, f28, f19, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f3, f28, f19, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f3, f28, f19, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f3, f28, f19, f22 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0x807fffff)
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f12, 0(x2) # load 0xbfc00000 from memory into f12
la x2, scratch
li x3, 0xccf978d5 # load x3 with value 0xccf978d5
sw x3, 0(x2) # store 0xccf978d5 in memory
flw f5, 0(x2) # load 0xccf978d5 from memory into f5
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f25, 0(x2) # load 0x807fffff from memory into f25
fnmsub.s f16, f12, f5, f25, dyn # perform operation
fnmsub.s f16, f12, f5, f25, rdn # perform operation
fnmsub.s f16, f12, f5, f25, rmm # perform operation
fnmsub.s f16, f12, f5, f25, rne # perform operation
fnmsub.s f16, f12, f5, f25, rtz # perform operation
fnmsub.s f16, f12, f5, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f16, f12, f5, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f16, f12, f5, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f16, f12, f5, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f16, f12, f5, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f16, f12, f5, f25 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0x400000)
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f10, 0(x2) # load 0xbfc00000 from memory into f10
la x2, scratch
li x3, 0xe647fbb1 # load x3 with value 0xe647fbb1
sw x3, 0(x2) # store 0xe647fbb1 in memory
flw f22, 0(x2) # load 0xe647fbb1 from memory into f22
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f12, 0(x2) # load 0x00400000 from memory into f12
fnmsub.s f31, f10, f22, f12, dyn # perform operation
fnmsub.s f31, f10, f22, f12, rdn # perform operation
fnmsub.s f31, f10, f22, f12, rmm # perform operation
fnmsub.s f31, f10, f22, f12, rne # perform operation
fnmsub.s f31, f10, f22, f12, rtz # perform operation
fnmsub.s f31, f10, f22, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f31, f10, f22, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f31, f10, f22, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f31, f10, f22, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f31, f10, f22, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f31, f10, f22, f12 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0x80400000)
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f9, 0(x2) # load 0xbfc00000 from memory into f9
la x2, scratch
li x3, 0xe029d5dc # load x3 with value 0xe029d5dc
sw x3, 0(x2) # store 0xe029d5dc in memory
flw f5, 0(x2) # load 0xe029d5dc from memory into f5
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f19, 0(x2) # load 0x80400000 from memory into f19
fnmsub.s f31, f9, f5, f19, dyn # perform operation
fnmsub.s f31, f9, f5, f19, rdn # perform operation
fnmsub.s f31, f9, f5, f19, rmm # perform operation
fnmsub.s f31, f9, f5, f19, rne # perform operation
fnmsub.s f31, f9, f5, f19, rtz # perform operation
fnmsub.s f31, f9, f5, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f31, f9, f5, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f31, f9, f5, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f31, f9, f5, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f31, f9, f5, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f31, f9, f5, f19 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0x1)
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f24, 0(x2) # load 0xbfc00000 from memory into f24
la x2, scratch
li x3, 0x21badd64 # load x3 with value 0x21badd64
sw x3, 0(x2) # store 0x21badd64 in memory
flw f26, 0(x2) # load 0x21badd64 from memory into f26
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f12, 0(x2) # load 0x00000001 from memory into f12
fnmsub.s f2, f24, f26, f12, dyn # perform operation
fnmsub.s f2, f24, f26, f12, rdn # perform operation
fnmsub.s f2, f24, f26, f12, rmm # perform operation
fnmsub.s f2, f24, f26, f12, rne # perform operation
fnmsub.s f2, f24, f26, f12, rtz # perform operation
fnmsub.s f2, f24, f26, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f2, f24, f26, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f2, f24, f26, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f2, f24, f26, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f2, f24, f26, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f2, f24, f26, f12 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0x80000001)
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f24, 0(x2) # load 0xbfc00000 from memory into f24
la x2, scratch
li x3, 0xb4e9eed1 # load x3 with value 0xb4e9eed1
sw x3, 0(x2) # store 0xb4e9eed1 in memory
flw f30, 0(x2) # load 0xb4e9eed1 from memory into f30
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f21, 0(x2) # load 0x80000001 from memory into f21
fnmsub.s f16, f24, f30, f21, dyn # perform operation
fnmsub.s f16, f24, f30, f21, rdn # perform operation
fnmsub.s f16, f24, f30, f21, rmm # perform operation
fnmsub.s f16, f24, f30, f21, rne # perform operation
fnmsub.s f16, f24, f30, f21, rtz # perform operation
fnmsub.s f16, f24, f30, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f16, f24, f30, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f16, f24, f30, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f16, f24, f30, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f16, f24, f30, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f16, f24, f30, f21 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0x7f800000)
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f27, 0(x2) # load 0xbfc00000 from memory into f27
la x2, scratch
li x3, 0xe596be7c # load x3 with value 0xe596be7c
sw x3, 0(x2) # store 0xe596be7c in memory
flw f14, 0(x2) # load 0xe596be7c from memory into f14
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f13, 0(x2) # load 0x7f800000 from memory into f13
fnmsub.s f7, f27, f14, f13, dyn # perform operation
fnmsub.s f7, f27, f14, f13, rdn # perform operation
fnmsub.s f7, f27, f14, f13, rmm # perform operation
fnmsub.s f7, f27, f14, f13, rne # perform operation
fnmsub.s f7, f27, f14, f13, rtz # perform operation
fnmsub.s f7, f27, f14, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f7, f27, f14, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f7, f27, f14, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f7, f27, f14, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f7, f27, f14, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f7, f27, f14, f13 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0xff800000)
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f6, 0(x2) # load 0xbfc00000 from memory into f6
la x2, scratch
li x3, 0x5a2e5276 # load x3 with value 0x5a2e5276
sw x3, 0(x2) # store 0x5a2e5276 in memory
flw f12, 0(x2) # load 0x5a2e5276 from memory into f12
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f15, 0(x2) # load 0xff800000 from memory into f15
fnmsub.s f23, f6, f12, f15, dyn # perform operation
fnmsub.s f23, f6, f12, f15, rdn # perform operation
fnmsub.s f23, f6, f12, f15, rmm # perform operation
fnmsub.s f23, f6, f12, f15, rne # perform operation
fnmsub.s f23, f6, f12, f15, rtz # perform operation
fnmsub.s f23, f6, f12, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f23, f6, f12, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f23, f6, f12, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f23, f6, f12, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f23, f6, f12, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f23, f6, f12, f15 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0x7fc00000)
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f23, 0(x2) # load 0xbfc00000 from memory into f23
la x2, scratch
li x3, 0xd2037ea0 # load x3 with value 0xd2037ea0
sw x3, 0(x2) # store 0xd2037ea0 in memory
flw f13, 0(x2) # load 0xd2037ea0 from memory into f13
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f25, 0(x2) # load 0x7fc00000 from memory into f25
fnmsub.s f28, f23, f13, f25, dyn # perform operation
fnmsub.s f28, f23, f13, f25, rdn # perform operation
fnmsub.s f28, f23, f13, f25, rmm # perform operation
fnmsub.s f28, f23, f13, f25, rne # perform operation
fnmsub.s f28, f23, f13, f25, rtz # perform operation
fnmsub.s f28, f23, f13, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f28, f23, f13, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f28, f23, f13, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f28, f23, f13, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f28, f23, f13, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f28, f23, f13, f25 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0x7fffffff)
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f30, 0(x2) # load 0xbfc00000 from memory into f30
la x2, scratch
li x3, 0x79446969 # load x3 with value 0x79446969
sw x3, 0(x2) # store 0x79446969 in memory
flw f14, 0(x2) # load 0x79446969 from memory into f14
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f6, 0(x2) # load 0x7fffffff from memory into f6
fnmsub.s f2, f30, f14, f6, dyn # perform operation
fnmsub.s f2, f30, f14, f6, rdn # perform operation
fnmsub.s f2, f30, f14, f6, rmm # perform operation
fnmsub.s f2, f30, f14, f6, rne # perform operation
fnmsub.s f2, f30, f14, f6, rtz # perform operation
fnmsub.s f2, f30, f14, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f2, f30, f14, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f2, f30, f14, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f2, f30, f14, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f2, f30, f14, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f2, f30, f14, f6 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0xffffffff)
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f21, 0(x2) # load 0xbfc00000 from memory into f21
la x2, scratch
li x3, 0xdd824626 # load x3 with value 0xdd824626
sw x3, 0(x2) # store 0xdd824626 in memory
flw f22, 0(x2) # load 0xdd824626 from memory into f22
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f27, 0(x2) # load 0xffffffff from memory into f27
fnmsub.s f14, f21, f22, f27, dyn # perform operation
fnmsub.s f14, f21, f22, f27, rdn # perform operation
fnmsub.s f14, f21, f22, f27, rmm # perform operation
fnmsub.s f14, f21, f22, f27, rne # perform operation
fnmsub.s f14, f21, f22, f27, rtz # perform operation
fnmsub.s f14, f21, f22, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f14, f21, f22, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f14, f21, f22, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f14, f21, f22, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f14, f21, f22, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f14, f21, f22, f27 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0x7f800001)
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f18, 0(x2) # load 0xbfc00000 from memory into f18
la x2, scratch
li x3, 0x83a73fac # load x3 with value 0x83a73fac
sw x3, 0(x2) # store 0x83a73fac in memory
flw f31, 0(x2) # load 0x83a73fac from memory into f31
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f15, 0(x2) # load 0x7f800001 from memory into f15
fnmsub.s f12, f18, f31, f15, dyn # perform operation
fnmsub.s f12, f18, f31, f15, rdn # perform operation
fnmsub.s f12, f18, f31, f15, rmm # perform operation
fnmsub.s f12, f18, f31, f15, rne # perform operation
fnmsub.s f12, f18, f31, f15, rtz # perform operation
fnmsub.s f12, f18, f31, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f12, f18, f31, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f12, f18, f31, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f12, f18, f31, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f12, f18, f31, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f12, f18, f31, f15 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0x7fbfffff)
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f19, 0(x2) # load 0xbfc00000 from memory into f19
la x2, scratch
li x3, 0x5005fb4a # load x3 with value 0x5005fb4a
sw x3, 0(x2) # store 0x5005fb4a in memory
flw f28, 0(x2) # load 0x5005fb4a from memory into f28
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f16, 0(x2) # load 0x7fbfffff from memory into f16
fnmsub.s f12, f19, f28, f16, dyn # perform operation
fnmsub.s f12, f19, f28, f16, rdn # perform operation
fnmsub.s f12, f19, f28, f16, rmm # perform operation
fnmsub.s f12, f19, f28, f16, rne # perform operation
fnmsub.s f12, f19, f28, f16, rtz # perform operation
fnmsub.s f12, f19, f28, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f12, f19, f28, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f12, f19, f28, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f12, f19, f28, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f12, f19, f28, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f12, f19, f28, f16 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0xffbfffff)
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f31, 0(x2) # load 0xbfc00000 from memory into f31
la x2, scratch
li x3, 0xf5151bb4 # load x3 with value 0xf5151bb4
sw x3, 0(x2) # store 0xf5151bb4 in memory
flw f2, 0(x2) # load 0xf5151bb4 from memory into f2
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f11, 0(x2) # load 0xffbfffff from memory into f11
fnmsub.s f28, f31, f2, f11, dyn # perform operation
fnmsub.s f28, f31, f2, f11, rdn # perform operation
fnmsub.s f28, f31, f2, f11, rmm # perform operation
fnmsub.s f28, f31, f2, f11, rne # perform operation
fnmsub.s f28, f31, f2, f11, rtz # perform operation
fnmsub.s f28, f31, f2, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f28, f31, f2, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f28, f31, f2, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f28, f31, f2, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f28, f31, f2, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f28, f31, f2, f11 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0x7ef8654f)
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f5, 0(x2) # load 0xbfc00000 from memory into f5
la x2, scratch
li x3, 0x714236a5 # load x3 with value 0x714236a5
sw x3, 0(x2) # store 0x714236a5 in memory
flw f2, 0(x2) # load 0x714236a5 from memory into f2
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f16, 0(x2) # load 0x7ef8654f from memory into f16
fnmsub.s f23, f5, f2, f16, dyn # perform operation
fnmsub.s f23, f5, f2, f16, rdn # perform operation
fnmsub.s f23, f5, f2, f16, rmm # perform operation
fnmsub.s f23, f5, f2, f16, rne # perform operation
fnmsub.s f23, f5, f2, f16, rtz # perform operation
fnmsub.s f23, f5, f2, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f23, f5, f2, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f23, f5, f2, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f23, f5, f2, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f23, f5, f2, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f23, f5, f2, f16 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0x813d9ab0)
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f9, 0(x2) # load 0xbfc00000 from memory into f9
la x2, scratch
li x3, 0x4a329059 # load x3 with value 0x4a329059
sw x3, 0(x2) # store 0x4a329059 in memory
flw f26, 0(x2) # load 0x4a329059 from memory into f26
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f21, 0(x2) # load 0x813d9ab0 from memory into f21
fnmsub.s f22, f9, f26, f21, dyn # perform operation
fnmsub.s f22, f9, f26, f21, rdn # perform operation
fnmsub.s f22, f9, f26, f21, rmm # perform operation
fnmsub.s f22, f9, f26, f21, rne # perform operation
fnmsub.s f22, f9, f26, f21, rtz # perform operation
fnmsub.s f22, f9, f26, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f22, f9, f26, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f22, f9, f26, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f22, f9, f26, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f22, f9, f26, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f22, f9, f26, f21 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0x0)
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f28, 0(x2) # load 0x40000000 from memory into f28
la x2, scratch
li x3, 0x6e316940 # load x3 with value 0x6e316940
sw x3, 0(x2) # store 0x6e316940 in memory
flw f3, 0(x2) # load 0x6e316940 from memory into f3
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f1, 0(x2) # load 0x00000000 from memory into f1
fnmsub.s f31, f28, f3, f1, dyn # perform operation
fnmsub.s f31, f28, f3, f1, rdn # perform operation
fnmsub.s f31, f28, f3, f1, rmm # perform operation
fnmsub.s f31, f28, f3, f1, rne # perform operation
fnmsub.s f31, f28, f3, f1, rtz # perform operation
fnmsub.s f31, f28, f3, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f31, f28, f3, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f31, f28, f3, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f31, f28, f3, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f31, f28, f3, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f31, f28, f3, f1 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0x80000000)
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f22, 0(x2) # load 0x40000000 from memory into f22
la x2, scratch
li x3, 0xbc0f8eec # load x3 with value 0xbc0f8eec
sw x3, 0(x2) # store 0xbc0f8eec in memory
flw f26, 0(x2) # load 0xbc0f8eec from memory into f26
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f13, 0(x2) # load 0x80000000 from memory into f13
fnmsub.s f19, f22, f26, f13, dyn # perform operation
fnmsub.s f19, f22, f26, f13, rdn # perform operation
fnmsub.s f19, f22, f26, f13, rmm # perform operation
fnmsub.s f19, f22, f26, f13, rne # perform operation
fnmsub.s f19, f22, f26, f13, rtz # perform operation
fnmsub.s f19, f22, f26, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f19, f22, f26, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f19, f22, f26, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f19, f22, f26, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f19, f22, f26, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f19, f22, f26, f13 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0x3f800000)
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f2, 0(x2) # load 0x40000000 from memory into f2
la x2, scratch
li x3, 0x8126bd55 # load x3 with value 0x8126bd55
sw x3, 0(x2) # store 0x8126bd55 in memory
flw f28, 0(x2) # load 0x8126bd55 from memory into f28
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f10, 0(x2) # load 0x3f800000 from memory into f10
fnmsub.s f24, f2, f28, f10, dyn # perform operation
fnmsub.s f24, f2, f28, f10, rdn # perform operation
fnmsub.s f24, f2, f28, f10, rmm # perform operation
fnmsub.s f24, f2, f28, f10, rne # perform operation
fnmsub.s f24, f2, f28, f10, rtz # perform operation
fnmsub.s f24, f2, f28, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f24, f2, f28, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f24, f2, f28, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f24, f2, f28, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f24, f2, f28, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f24, f2, f28, f10 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0xbf800000)
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f28, 0(x2) # load 0x40000000 from memory into f28
la x2, scratch
li x3, 0x1cb241c6 # load x3 with value 0x1cb241c6
sw x3, 0(x2) # store 0x1cb241c6 in memory
flw f1, 0(x2) # load 0x1cb241c6 from memory into f1
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f23, 0(x2) # load 0xbf800000 from memory into f23
fnmsub.s f11, f28, f1, f23, dyn # perform operation
fnmsub.s f11, f28, f1, f23, rdn # perform operation
fnmsub.s f11, f28, f1, f23, rmm # perform operation
fnmsub.s f11, f28, f1, f23, rne # perform operation
fnmsub.s f11, f28, f1, f23, rtz # perform operation
fnmsub.s f11, f28, f1, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f11, f28, f1, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f11, f28, f1, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f11, f28, f1, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f11, f28, f1, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f11, f28, f1, f23 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0x3fc00000)
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f18, 0(x2) # load 0x40000000 from memory into f18
la x2, scratch
li x3, 0x04efd22b # load x3 with value 0x04efd22b
sw x3, 0(x2) # store 0x04efd22b in memory
flw f15, 0(x2) # load 0x04efd22b from memory into f15
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f9, 0(x2) # load 0x3fc00000 from memory into f9
fnmsub.s f21, f18, f15, f9, dyn # perform operation
fnmsub.s f21, f18, f15, f9, rdn # perform operation
fnmsub.s f21, f18, f15, f9, rmm # perform operation
fnmsub.s f21, f18, f15, f9, rne # perform operation
fnmsub.s f21, f18, f15, f9, rtz # perform operation
fnmsub.s f21, f18, f15, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f21, f18, f15, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f21, f18, f15, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f21, f18, f15, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f21, f18, f15, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f21, f18, f15, f9 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0xbfc00000)
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f18, 0(x2) # load 0x40000000 from memory into f18
la x2, scratch
li x3, 0xb6865d03 # load x3 with value 0xb6865d03
sw x3, 0(x2) # store 0xb6865d03 in memory
flw f28, 0(x2) # load 0xb6865d03 from memory into f28
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f6, 0(x2) # load 0xbfc00000 from memory into f6
fnmsub.s f1, f18, f28, f6, dyn # perform operation
fnmsub.s f1, f18, f28, f6, rdn # perform operation
fnmsub.s f1, f18, f28, f6, rmm # perform operation
fnmsub.s f1, f18, f28, f6, rne # perform operation
fnmsub.s f1, f18, f28, f6, rtz # perform operation
fnmsub.s f1, f18, f28, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f1, f18, f28, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f1, f18, f28, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f1, f18, f28, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f1, f18, f28, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f1, f18, f28, f6 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0x40000000)
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f31, 0(x2) # load 0x40000000 from memory into f31
la x2, scratch
li x3, 0x12bc68b7 # load x3 with value 0x12bc68b7
sw x3, 0(x2) # store 0x12bc68b7 in memory
flw f11, 0(x2) # load 0x12bc68b7 from memory into f11
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f15, 0(x2) # load 0x40000000 from memory into f15
fnmsub.s f20, f31, f11, f15, dyn # perform operation
fnmsub.s f20, f31, f11, f15, rdn # perform operation
fnmsub.s f20, f31, f11, f15, rmm # perform operation
fnmsub.s f20, f31, f11, f15, rne # perform operation
fnmsub.s f20, f31, f11, f15, rtz # perform operation
fnmsub.s f20, f31, f11, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f20, f31, f11, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f20, f31, f11, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f20, f31, f11, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f20, f31, f11, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f20, f31, f11, f15 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0xc0000000)
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f11, 0(x2) # load 0x40000000 from memory into f11
la x2, scratch
li x3, 0xd63a6306 # load x3 with value 0xd63a6306
sw x3, 0(x2) # store 0xd63a6306 in memory
flw f16, 0(x2) # load 0xd63a6306 from memory into f16
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f27, 0(x2) # load 0xc0000000 from memory into f27
fnmsub.s f15, f11, f16, f27, dyn # perform operation
fnmsub.s f15, f11, f16, f27, rdn # perform operation
fnmsub.s f15, f11, f16, f27, rmm # perform operation
fnmsub.s f15, f11, f16, f27, rne # perform operation
fnmsub.s f15, f11, f16, f27, rtz # perform operation
fnmsub.s f15, f11, f16, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f15, f11, f16, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f15, f11, f16, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f15, f11, f16, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f15, f11, f16, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f15, f11, f16, f27 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0x800000)
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f24, 0(x2) # load 0x40000000 from memory into f24
la x2, scratch
li x3, 0x3a5a6946 # load x3 with value 0x3a5a6946
sw x3, 0(x2) # store 0x3a5a6946 in memory
flw f14, 0(x2) # load 0x3a5a6946 from memory into f14
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f16, 0(x2) # load 0x00800000 from memory into f16
fnmsub.s f13, f24, f14, f16, dyn # perform operation
fnmsub.s f13, f24, f14, f16, rdn # perform operation
fnmsub.s f13, f24, f14, f16, rmm # perform operation
fnmsub.s f13, f24, f14, f16, rne # perform operation
fnmsub.s f13, f24, f14, f16, rtz # perform operation
fnmsub.s f13, f24, f14, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f13, f24, f14, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f13, f24, f14, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f13, f24, f14, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f13, f24, f14, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f13, f24, f14, f16 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0x80800000)
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f23, 0(x2) # load 0x40000000 from memory into f23
la x2, scratch
li x3, 0x060a9d3d # load x3 with value 0x060a9d3d
sw x3, 0(x2) # store 0x060a9d3d in memory
flw f17, 0(x2) # load 0x060a9d3d from memory into f17
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f31, 0(x2) # load 0x80800000 from memory into f31
fnmsub.s f24, f23, f17, f31, dyn # perform operation
fnmsub.s f24, f23, f17, f31, rdn # perform operation
fnmsub.s f24, f23, f17, f31, rmm # perform operation
fnmsub.s f24, f23, f17, f31, rne # perform operation
fnmsub.s f24, f23, f17, f31, rtz # perform operation
fnmsub.s f24, f23, f17, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f24, f23, f17, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f24, f23, f17, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f24, f23, f17, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f24, f23, f17, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f24, f23, f17, f31 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0x7f7fffff)
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f31, 0(x2) # load 0x40000000 from memory into f31
la x2, scratch
li x3, 0xf25f148a # load x3 with value 0xf25f148a
sw x3, 0(x2) # store 0xf25f148a in memory
flw f19, 0(x2) # load 0xf25f148a from memory into f19
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f28, 0(x2) # load 0x7f7fffff from memory into f28
fnmsub.s f20, f31, f19, f28, dyn # perform operation
fnmsub.s f20, f31, f19, f28, rdn # perform operation
fnmsub.s f20, f31, f19, f28, rmm # perform operation
fnmsub.s f20, f31, f19, f28, rne # perform operation
fnmsub.s f20, f31, f19, f28, rtz # perform operation
fnmsub.s f20, f31, f19, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f20, f31, f19, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f20, f31, f19, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f20, f31, f19, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f20, f31, f19, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f20, f31, f19, f28 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0xff7fffff)
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f25, 0(x2) # load 0x40000000 from memory into f25
la x2, scratch
li x3, 0xb5bbd9ba # load x3 with value 0xb5bbd9ba
sw x3, 0(x2) # store 0xb5bbd9ba in memory
flw f16, 0(x2) # load 0xb5bbd9ba from memory into f16
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f12, 0(x2) # load 0xff7fffff from memory into f12
fnmsub.s f19, f25, f16, f12, dyn # perform operation
fnmsub.s f19, f25, f16, f12, rdn # perform operation
fnmsub.s f19, f25, f16, f12, rmm # perform operation
fnmsub.s f19, f25, f16, f12, rne # perform operation
fnmsub.s f19, f25, f16, f12, rtz # perform operation
fnmsub.s f19, f25, f16, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f19, f25, f16, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f19, f25, f16, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f19, f25, f16, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f19, f25, f16, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f19, f25, f16, f12 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0x7fffff)
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f17, 0(x2) # load 0x40000000 from memory into f17
la x2, scratch
li x3, 0xe2ebc73e # load x3 with value 0xe2ebc73e
sw x3, 0(x2) # store 0xe2ebc73e in memory
flw f27, 0(x2) # load 0xe2ebc73e from memory into f27
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f8, 0(x2) # load 0x007fffff from memory into f8
fnmsub.s f29, f17, f27, f8, dyn # perform operation
fnmsub.s f29, f17, f27, f8, rdn # perform operation
fnmsub.s f29, f17, f27, f8, rmm # perform operation
fnmsub.s f29, f17, f27, f8, rne # perform operation
fnmsub.s f29, f17, f27, f8, rtz # perform operation
fnmsub.s f29, f17, f27, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f29, f17, f27, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f29, f17, f27, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f29, f17, f27, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f29, f17, f27, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f29, f17, f27, f8 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0x807fffff)
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f23, 0(x2) # load 0x40000000 from memory into f23
la x2, scratch
li x3, 0x10d8e0a1 # load x3 with value 0x10d8e0a1
sw x3, 0(x2) # store 0x10d8e0a1 in memory
flw f13, 0(x2) # load 0x10d8e0a1 from memory into f13
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f3, 0(x2) # load 0x807fffff from memory into f3
fnmsub.s f9, f23, f13, f3, dyn # perform operation
fnmsub.s f9, f23, f13, f3, rdn # perform operation
fnmsub.s f9, f23, f13, f3, rmm # perform operation
fnmsub.s f9, f23, f13, f3, rne # perform operation
fnmsub.s f9, f23, f13, f3, rtz # perform operation
fnmsub.s f9, f23, f13, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f9, f23, f13, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f9, f23, f13, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f9, f23, f13, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f9, f23, f13, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f9, f23, f13, f3 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0x400000)
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f24, 0(x2) # load 0x40000000 from memory into f24
la x2, scratch
li x3, 0x7ab8f22e # load x3 with value 0x7ab8f22e
sw x3, 0(x2) # store 0x7ab8f22e in memory
flw f31, 0(x2) # load 0x7ab8f22e from memory into f31
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f3, 0(x2) # load 0x00400000 from memory into f3
fnmsub.s f29, f24, f31, f3, dyn # perform operation
fnmsub.s f29, f24, f31, f3, rdn # perform operation
fnmsub.s f29, f24, f31, f3, rmm # perform operation
fnmsub.s f29, f24, f31, f3, rne # perform operation
fnmsub.s f29, f24, f31, f3, rtz # perform operation
fnmsub.s f29, f24, f31, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f29, f24, f31, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f29, f24, f31, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f29, f24, f31, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f29, f24, f31, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f29, f24, f31, f3 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0x80400000)
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f13, 0(x2) # load 0x40000000 from memory into f13
la x2, scratch
li x3, 0x9541b230 # load x3 with value 0x9541b230
sw x3, 0(x2) # store 0x9541b230 in memory
flw f29, 0(x2) # load 0x9541b230 from memory into f29
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f9, 0(x2) # load 0x80400000 from memory into f9
fnmsub.s f15, f13, f29, f9, dyn # perform operation
fnmsub.s f15, f13, f29, f9, rdn # perform operation
fnmsub.s f15, f13, f29, f9, rmm # perform operation
fnmsub.s f15, f13, f29, f9, rne # perform operation
fnmsub.s f15, f13, f29, f9, rtz # perform operation
fnmsub.s f15, f13, f29, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f15, f13, f29, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f15, f13, f29, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f15, f13, f29, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f15, f13, f29, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f15, f13, f29, f9 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0x1)
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f13, 0(x2) # load 0x40000000 from memory into f13
la x2, scratch
li x3, 0xec89b13b # load x3 with value 0xec89b13b
sw x3, 0(x2) # store 0xec89b13b in memory
flw f1, 0(x2) # load 0xec89b13b from memory into f1
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f15, 0(x2) # load 0x00000001 from memory into f15
fnmsub.s f10, f13, f1, f15, dyn # perform operation
fnmsub.s f10, f13, f1, f15, rdn # perform operation
fnmsub.s f10, f13, f1, f15, rmm # perform operation
fnmsub.s f10, f13, f1, f15, rne # perform operation
fnmsub.s f10, f13, f1, f15, rtz # perform operation
fnmsub.s f10, f13, f1, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f10, f13, f1, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f10, f13, f1, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f10, f13, f1, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f10, f13, f1, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f10, f13, f1, f15 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0x80000001)
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f1, 0(x2) # load 0x40000000 from memory into f1
la x2, scratch
li x3, 0x7d4a6acf # load x3 with value 0x7d4a6acf
sw x3, 0(x2) # store 0x7d4a6acf in memory
flw f8, 0(x2) # load 0x7d4a6acf from memory into f8
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f17, 0(x2) # load 0x80000001 from memory into f17
fnmsub.s f30, f1, f8, f17, dyn # perform operation
fnmsub.s f30, f1, f8, f17, rdn # perform operation
fnmsub.s f30, f1, f8, f17, rmm # perform operation
fnmsub.s f30, f1, f8, f17, rne # perform operation
fnmsub.s f30, f1, f8, f17, rtz # perform operation
fnmsub.s f30, f1, f8, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f30, f1, f8, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f30, f1, f8, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f30, f1, f8, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f30, f1, f8, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f30, f1, f8, f17 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0x7f800000)
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f31, 0(x2) # load 0x40000000 from memory into f31
la x2, scratch
li x3, 0x0ee6ed3e # load x3 with value 0x0ee6ed3e
sw x3, 0(x2) # store 0x0ee6ed3e in memory
flw f3, 0(x2) # load 0x0ee6ed3e from memory into f3
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f28, 0(x2) # load 0x7f800000 from memory into f28
fnmsub.s f12, f31, f3, f28, dyn # perform operation
fnmsub.s f12, f31, f3, f28, rdn # perform operation
fnmsub.s f12, f31, f3, f28, rmm # perform operation
fnmsub.s f12, f31, f3, f28, rne # perform operation
fnmsub.s f12, f31, f3, f28, rtz # perform operation
fnmsub.s f12, f31, f3, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f12, f31, f3, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f12, f31, f3, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f12, f31, f3, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f12, f31, f3, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f12, f31, f3, f28 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0xff800000)
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f1, 0(x2) # load 0x40000000 from memory into f1
la x2, scratch
li x3, 0x96e4845f # load x3 with value 0x96e4845f
sw x3, 0(x2) # store 0x96e4845f in memory
flw f25, 0(x2) # load 0x96e4845f from memory into f25
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f6, 0(x2) # load 0xff800000 from memory into f6
fnmsub.s f12, f1, f25, f6, dyn # perform operation
fnmsub.s f12, f1, f25, f6, rdn # perform operation
fnmsub.s f12, f1, f25, f6, rmm # perform operation
fnmsub.s f12, f1, f25, f6, rne # perform operation
fnmsub.s f12, f1, f25, f6, rtz # perform operation
fnmsub.s f12, f1, f25, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f12, f1, f25, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f12, f1, f25, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f12, f1, f25, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f12, f1, f25, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f12, f1, f25, f6 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0x7fc00000)
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f3, 0(x2) # load 0x40000000 from memory into f3
la x2, scratch
li x3, 0xae42d1bb # load x3 with value 0xae42d1bb
sw x3, 0(x2) # store 0xae42d1bb in memory
flw f5, 0(x2) # load 0xae42d1bb from memory into f5
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f21, 0(x2) # load 0x7fc00000 from memory into f21
fnmsub.s f19, f3, f5, f21, dyn # perform operation
fnmsub.s f19, f3, f5, f21, rdn # perform operation
fnmsub.s f19, f3, f5, f21, rmm # perform operation
fnmsub.s f19, f3, f5, f21, rne # perform operation
fnmsub.s f19, f3, f5, f21, rtz # perform operation
fnmsub.s f19, f3, f5, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f19, f3, f5, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f19, f3, f5, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f19, f3, f5, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f19, f3, f5, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f19, f3, f5, f21 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0x7fffffff)
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f21, 0(x2) # load 0x40000000 from memory into f21
la x2, scratch
li x3, 0x909d708f # load x3 with value 0x909d708f
sw x3, 0(x2) # store 0x909d708f in memory
flw f9, 0(x2) # load 0x909d708f from memory into f9
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f15, 0(x2) # load 0x7fffffff from memory into f15
fnmsub.s f30, f21, f9, f15, dyn # perform operation
fnmsub.s f30, f21, f9, f15, rdn # perform operation
fnmsub.s f30, f21, f9, f15, rmm # perform operation
fnmsub.s f30, f21, f9, f15, rne # perform operation
fnmsub.s f30, f21, f9, f15, rtz # perform operation
fnmsub.s f30, f21, f9, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f30, f21, f9, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f30, f21, f9, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f30, f21, f9, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f30, f21, f9, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f30, f21, f9, f15 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0xffffffff)
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f12, 0(x2) # load 0x40000000 from memory into f12
la x2, scratch
li x3, 0x27b0ba0b # load x3 with value 0x27b0ba0b
sw x3, 0(x2) # store 0x27b0ba0b in memory
flw f6, 0(x2) # load 0x27b0ba0b from memory into f6
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f27, 0(x2) # load 0xffffffff from memory into f27
fnmsub.s f24, f12, f6, f27, dyn # perform operation
fnmsub.s f24, f12, f6, f27, rdn # perform operation
fnmsub.s f24, f12, f6, f27, rmm # perform operation
fnmsub.s f24, f12, f6, f27, rne # perform operation
fnmsub.s f24, f12, f6, f27, rtz # perform operation
fnmsub.s f24, f12, f6, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f24, f12, f6, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f24, f12, f6, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f24, f12, f6, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f24, f12, f6, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f24, f12, f6, f27 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0x7f800001)
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f30, 0(x2) # load 0x40000000 from memory into f30
la x2, scratch
li x3, 0xffa749a8 # load x3 with value 0xffa749a8
sw x3, 0(x2) # store 0xffa749a8 in memory
flw f19, 0(x2) # load 0xffa749a8 from memory into f19
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f15, 0(x2) # load 0x7f800001 from memory into f15
fnmsub.s f22, f30, f19, f15, dyn # perform operation
fnmsub.s f22, f30, f19, f15, rdn # perform operation
fnmsub.s f22, f30, f19, f15, rmm # perform operation
fnmsub.s f22, f30, f19, f15, rne # perform operation
fnmsub.s f22, f30, f19, f15, rtz # perform operation
fnmsub.s f22, f30, f19, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f22, f30, f19, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f22, f30, f19, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f22, f30, f19, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f22, f30, f19, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f22, f30, f19, f15 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0x7fbfffff)
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f29, 0(x2) # load 0x40000000 from memory into f29
la x2, scratch
li x3, 0x917cbf52 # load x3 with value 0x917cbf52
sw x3, 0(x2) # store 0x917cbf52 in memory
flw f11, 0(x2) # load 0x917cbf52 from memory into f11
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f9, 0(x2) # load 0x7fbfffff from memory into f9
fnmsub.s f21, f29, f11, f9, dyn # perform operation
fnmsub.s f21, f29, f11, f9, rdn # perform operation
fnmsub.s f21, f29, f11, f9, rmm # perform operation
fnmsub.s f21, f29, f11, f9, rne # perform operation
fnmsub.s f21, f29, f11, f9, rtz # perform operation
fnmsub.s f21, f29, f11, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f21, f29, f11, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f21, f29, f11, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f21, f29, f11, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f21, f29, f11, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f21, f29, f11, f9 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0xffbfffff)
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f20, 0(x2) # load 0x40000000 from memory into f20
la x2, scratch
li x3, 0xc4a25b92 # load x3 with value 0xc4a25b92
sw x3, 0(x2) # store 0xc4a25b92 in memory
flw f26, 0(x2) # load 0xc4a25b92 from memory into f26
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f7, 0(x2) # load 0xffbfffff from memory into f7
fnmsub.s f31, f20, f26, f7, dyn # perform operation
fnmsub.s f31, f20, f26, f7, rdn # perform operation
fnmsub.s f31, f20, f26, f7, rmm # perform operation
fnmsub.s f31, f20, f26, f7, rne # perform operation
fnmsub.s f31, f20, f26, f7, rtz # perform operation
fnmsub.s f31, f20, f26, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f31, f20, f26, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f31, f20, f26, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f31, f20, f26, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f31, f20, f26, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f31, f20, f26, f7 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0x7ef8654f)
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f13, 0(x2) # load 0x40000000 from memory into f13
la x2, scratch
li x3, 0x4c125974 # load x3 with value 0x4c125974
sw x3, 0(x2) # store 0x4c125974 in memory
flw f16, 0(x2) # load 0x4c125974 from memory into f16
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f18, 0(x2) # load 0x7ef8654f from memory into f18
fnmsub.s f2, f13, f16, f18, dyn # perform operation
fnmsub.s f2, f13, f16, f18, rdn # perform operation
fnmsub.s f2, f13, f16, f18, rmm # perform operation
fnmsub.s f2, f13, f16, f18, rne # perform operation
fnmsub.s f2, f13, f16, f18, rtz # perform operation
fnmsub.s f2, f13, f16, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f2, f13, f16, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f2, f13, f16, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f2, f13, f16, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f2, f13, f16, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f2, f13, f16, f18 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0x813d9ab0)
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f20, 0(x2) # load 0x40000000 from memory into f20
la x2, scratch
li x3, 0xdda8ec2f # load x3 with value 0xdda8ec2f
sw x3, 0(x2) # store 0xdda8ec2f in memory
flw f7, 0(x2) # load 0xdda8ec2f from memory into f7
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f15, 0(x2) # load 0x813d9ab0 from memory into f15
fnmsub.s f5, f20, f7, f15, dyn # perform operation
fnmsub.s f5, f20, f7, f15, rdn # perform operation
fnmsub.s f5, f20, f7, f15, rmm # perform operation
fnmsub.s f5, f20, f7, f15, rne # perform operation
fnmsub.s f5, f20, f7, f15, rtz # perform operation
fnmsub.s f5, f20, f7, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f5, f20, f7, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f5, f20, f7, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f5, f20, f7, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f5, f20, f7, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f5, f20, f7, f15 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0x0)
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f5, 0(x2) # load 0xc0000000 from memory into f5
la x2, scratch
li x3, 0xccea788b # load x3 with value 0xccea788b
sw x3, 0(x2) # store 0xccea788b in memory
flw f2, 0(x2) # load 0xccea788b from memory into f2
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f13, 0(x2) # load 0x00000000 from memory into f13
fnmsub.s f29, f5, f2, f13, dyn # perform operation
fnmsub.s f29, f5, f2, f13, rdn # perform operation
fnmsub.s f29, f5, f2, f13, rmm # perform operation
fnmsub.s f29, f5, f2, f13, rne # perform operation
fnmsub.s f29, f5, f2, f13, rtz # perform operation
fnmsub.s f29, f5, f2, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f29, f5, f2, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f29, f5, f2, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f29, f5, f2, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f29, f5, f2, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f29, f5, f2, f13 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0x80000000)
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f10, 0(x2) # load 0xc0000000 from memory into f10
la x2, scratch
li x3, 0x095b7be8 # load x3 with value 0x095b7be8
sw x3, 0(x2) # store 0x095b7be8 in memory
flw f2, 0(x2) # load 0x095b7be8 from memory into f2
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f19, 0(x2) # load 0x80000000 from memory into f19
fnmsub.s f23, f10, f2, f19, dyn # perform operation
fnmsub.s f23, f10, f2, f19, rdn # perform operation
fnmsub.s f23, f10, f2, f19, rmm # perform operation
fnmsub.s f23, f10, f2, f19, rne # perform operation
fnmsub.s f23, f10, f2, f19, rtz # perform operation
fnmsub.s f23, f10, f2, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f23, f10, f2, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f23, f10, f2, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f23, f10, f2, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f23, f10, f2, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f23, f10, f2, f19 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0x3f800000)
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f6, 0(x2) # load 0xc0000000 from memory into f6
la x2, scratch
li x3, 0xfdbce904 # load x3 with value 0xfdbce904
sw x3, 0(x2) # store 0xfdbce904 in memory
flw f16, 0(x2) # load 0xfdbce904 from memory into f16
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f7, 0(x2) # load 0x3f800000 from memory into f7
fnmsub.s f27, f6, f16, f7, dyn # perform operation
fnmsub.s f27, f6, f16, f7, rdn # perform operation
fnmsub.s f27, f6, f16, f7, rmm # perform operation
fnmsub.s f27, f6, f16, f7, rne # perform operation
fnmsub.s f27, f6, f16, f7, rtz # perform operation
fnmsub.s f27, f6, f16, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f27, f6, f16, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f27, f6, f16, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f27, f6, f16, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f27, f6, f16, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f27, f6, f16, f7 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0xbf800000)
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f6, 0(x2) # load 0xc0000000 from memory into f6
la x2, scratch
li x3, 0x5d3c6de2 # load x3 with value 0x5d3c6de2
sw x3, 0(x2) # store 0x5d3c6de2 in memory
flw f28, 0(x2) # load 0x5d3c6de2 from memory into f28
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f31, 0(x2) # load 0xbf800000 from memory into f31
fnmsub.s f27, f6, f28, f31, dyn # perform operation
fnmsub.s f27, f6, f28, f31, rdn # perform operation
fnmsub.s f27, f6, f28, f31, rmm # perform operation
fnmsub.s f27, f6, f28, f31, rne # perform operation
fnmsub.s f27, f6, f28, f31, rtz # perform operation
fnmsub.s f27, f6, f28, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f27, f6, f28, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f27, f6, f28, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f27, f6, f28, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f27, f6, f28, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f27, f6, f28, f31 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0x3fc00000)
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f21, 0(x2) # load 0xc0000000 from memory into f21
la x2, scratch
li x3, 0x143f8792 # load x3 with value 0x143f8792
sw x3, 0(x2) # store 0x143f8792 in memory
flw f1, 0(x2) # load 0x143f8792 from memory into f1
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f27, 0(x2) # load 0x3fc00000 from memory into f27
fnmsub.s f20, f21, f1, f27, dyn # perform operation
fnmsub.s f20, f21, f1, f27, rdn # perform operation
fnmsub.s f20, f21, f1, f27, rmm # perform operation
fnmsub.s f20, f21, f1, f27, rne # perform operation
fnmsub.s f20, f21, f1, f27, rtz # perform operation
fnmsub.s f20, f21, f1, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f20, f21, f1, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f20, f21, f1, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f20, f21, f1, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f20, f21, f1, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f20, f21, f1, f27 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0xbfc00000)
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f12, 0(x2) # load 0xc0000000 from memory into f12
la x2, scratch
li x3, 0xc86d5b4c # load x3 with value 0xc86d5b4c
sw x3, 0(x2) # store 0xc86d5b4c in memory
flw f10, 0(x2) # load 0xc86d5b4c from memory into f10
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f7, 0(x2) # load 0xbfc00000 from memory into f7
fnmsub.s f13, f12, f10, f7, dyn # perform operation
fnmsub.s f13, f12, f10, f7, rdn # perform operation
fnmsub.s f13, f12, f10, f7, rmm # perform operation
fnmsub.s f13, f12, f10, f7, rne # perform operation
fnmsub.s f13, f12, f10, f7, rtz # perform operation
fnmsub.s f13, f12, f10, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f13, f12, f10, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f13, f12, f10, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f13, f12, f10, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f13, f12, f10, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f13, f12, f10, f7 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0x40000000)
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f11, 0(x2) # load 0xc0000000 from memory into f11
la x2, scratch
li x3, 0xf1ca0542 # load x3 with value 0xf1ca0542
sw x3, 0(x2) # store 0xf1ca0542 in memory
flw f25, 0(x2) # load 0xf1ca0542 from memory into f25
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f19, 0(x2) # load 0x40000000 from memory into f19
fnmsub.s f17, f11, f25, f19, dyn # perform operation
fnmsub.s f17, f11, f25, f19, rdn # perform operation
fnmsub.s f17, f11, f25, f19, rmm # perform operation
fnmsub.s f17, f11, f25, f19, rne # perform operation
fnmsub.s f17, f11, f25, f19, rtz # perform operation
fnmsub.s f17, f11, f25, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f17, f11, f25, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f17, f11, f25, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f17, f11, f25, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f17, f11, f25, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f17, f11, f25, f19 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0xc0000000)
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f17, 0(x2) # load 0xc0000000 from memory into f17
la x2, scratch
li x3, 0xf3ddc3aa # load x3 with value 0xf3ddc3aa
sw x3, 0(x2) # store 0xf3ddc3aa in memory
flw f7, 0(x2) # load 0xf3ddc3aa from memory into f7
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f10, 0(x2) # load 0xc0000000 from memory into f10
fnmsub.s f8, f17, f7, f10, dyn # perform operation
fnmsub.s f8, f17, f7, f10, rdn # perform operation
fnmsub.s f8, f17, f7, f10, rmm # perform operation
fnmsub.s f8, f17, f7, f10, rne # perform operation
fnmsub.s f8, f17, f7, f10, rtz # perform operation
fnmsub.s f8, f17, f7, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f8, f17, f7, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f8, f17, f7, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f8, f17, f7, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f8, f17, f7, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f8, f17, f7, f10 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0x800000)
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f3, 0(x2) # load 0xc0000000 from memory into f3
la x2, scratch
li x3, 0x61ccb615 # load x3 with value 0x61ccb615
sw x3, 0(x2) # store 0x61ccb615 in memory
flw f31, 0(x2) # load 0x61ccb615 from memory into f31
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f28, 0(x2) # load 0x00800000 from memory into f28
fnmsub.s f2, f3, f31, f28, dyn # perform operation
fnmsub.s f2, f3, f31, f28, rdn # perform operation
fnmsub.s f2, f3, f31, f28, rmm # perform operation
fnmsub.s f2, f3, f31, f28, rne # perform operation
fnmsub.s f2, f3, f31, f28, rtz # perform operation
fnmsub.s f2, f3, f31, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f2, f3, f31, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f2, f3, f31, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f2, f3, f31, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f2, f3, f31, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f2, f3, f31, f28 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0x80800000)
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f11, 0(x2) # load 0xc0000000 from memory into f11
la x2, scratch
li x3, 0x7a25e5d9 # load x3 with value 0x7a25e5d9
sw x3, 0(x2) # store 0x7a25e5d9 in memory
flw f28, 0(x2) # load 0x7a25e5d9 from memory into f28
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f7, 0(x2) # load 0x80800000 from memory into f7
fnmsub.s f23, f11, f28, f7, dyn # perform operation
fnmsub.s f23, f11, f28, f7, rdn # perform operation
fnmsub.s f23, f11, f28, f7, rmm # perform operation
fnmsub.s f23, f11, f28, f7, rne # perform operation
fnmsub.s f23, f11, f28, f7, rtz # perform operation
fnmsub.s f23, f11, f28, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f23, f11, f28, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f23, f11, f28, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f23, f11, f28, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f23, f11, f28, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f23, f11, f28, f7 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0x7f7fffff)
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f27, 0(x2) # load 0xc0000000 from memory into f27
la x2, scratch
li x3, 0x95e44496 # load x3 with value 0x95e44496
sw x3, 0(x2) # store 0x95e44496 in memory
flw f11, 0(x2) # load 0x95e44496 from memory into f11
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f12, 0(x2) # load 0x7f7fffff from memory into f12
fnmsub.s f19, f27, f11, f12, dyn # perform operation
fnmsub.s f19, f27, f11, f12, rdn # perform operation
fnmsub.s f19, f27, f11, f12, rmm # perform operation
fnmsub.s f19, f27, f11, f12, rne # perform operation
fnmsub.s f19, f27, f11, f12, rtz # perform operation
fnmsub.s f19, f27, f11, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f19, f27, f11, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f19, f27, f11, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f19, f27, f11, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f19, f27, f11, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f19, f27, f11, f12 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0xff7fffff)
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f3, 0(x2) # load 0xc0000000 from memory into f3
la x2, scratch
li x3, 0x11de3d00 # load x3 with value 0x11de3d00
sw x3, 0(x2) # store 0x11de3d00 in memory
flw f7, 0(x2) # load 0x11de3d00 from memory into f7
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f18, 0(x2) # load 0xff7fffff from memory into f18
fnmsub.s f30, f3, f7, f18, dyn # perform operation
fnmsub.s f30, f3, f7, f18, rdn # perform operation
fnmsub.s f30, f3, f7, f18, rmm # perform operation
fnmsub.s f30, f3, f7, f18, rne # perform operation
fnmsub.s f30, f3, f7, f18, rtz # perform operation
fnmsub.s f30, f3, f7, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f30, f3, f7, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f30, f3, f7, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f30, f3, f7, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f30, f3, f7, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f30, f3, f7, f18 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0x7fffff)
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f31, 0(x2) # load 0xc0000000 from memory into f31
la x2, scratch
li x3, 0x617f5cf5 # load x3 with value 0x617f5cf5
sw x3, 0(x2) # store 0x617f5cf5 in memory
flw f5, 0(x2) # load 0x617f5cf5 from memory into f5
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f9, 0(x2) # load 0x007fffff from memory into f9
fnmsub.s f23, f31, f5, f9, dyn # perform operation
fnmsub.s f23, f31, f5, f9, rdn # perform operation
fnmsub.s f23, f31, f5, f9, rmm # perform operation
fnmsub.s f23, f31, f5, f9, rne # perform operation
fnmsub.s f23, f31, f5, f9, rtz # perform operation
fnmsub.s f23, f31, f5, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f23, f31, f5, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f23, f31, f5, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f23, f31, f5, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f23, f31, f5, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f23, f31, f5, f9 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0x807fffff)
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f9, 0(x2) # load 0xc0000000 from memory into f9
la x2, scratch
li x3, 0x16a2ef42 # load x3 with value 0x16a2ef42
sw x3, 0(x2) # store 0x16a2ef42 in memory
flw f6, 0(x2) # load 0x16a2ef42 from memory into f6
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f31, 0(x2) # load 0x807fffff from memory into f31
fnmsub.s f16, f9, f6, f31, dyn # perform operation
fnmsub.s f16, f9, f6, f31, rdn # perform operation
fnmsub.s f16, f9, f6, f31, rmm # perform operation
fnmsub.s f16, f9, f6, f31, rne # perform operation
fnmsub.s f16, f9, f6, f31, rtz # perform operation
fnmsub.s f16, f9, f6, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f16, f9, f6, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f16, f9, f6, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f16, f9, f6, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f16, f9, f6, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f16, f9, f6, f31 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0x400000)
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f28, 0(x2) # load 0xc0000000 from memory into f28
la x2, scratch
li x3, 0x6b5b926f # load x3 with value 0x6b5b926f
sw x3, 0(x2) # store 0x6b5b926f in memory
flw f19, 0(x2) # load 0x6b5b926f from memory into f19
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f27, 0(x2) # load 0x00400000 from memory into f27
fnmsub.s f20, f28, f19, f27, dyn # perform operation
fnmsub.s f20, f28, f19, f27, rdn # perform operation
fnmsub.s f20, f28, f19, f27, rmm # perform operation
fnmsub.s f20, f28, f19, f27, rne # perform operation
fnmsub.s f20, f28, f19, f27, rtz # perform operation
fnmsub.s f20, f28, f19, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f20, f28, f19, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f20, f28, f19, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f20, f28, f19, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f20, f28, f19, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f20, f28, f19, f27 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0x80400000)
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f20, 0(x2) # load 0xc0000000 from memory into f20
la x2, scratch
li x3, 0x955a10de # load x3 with value 0x955a10de
sw x3, 0(x2) # store 0x955a10de in memory
flw f3, 0(x2) # load 0x955a10de from memory into f3
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f22, 0(x2) # load 0x80400000 from memory into f22
fnmsub.s f6, f20, f3, f22, dyn # perform operation
fnmsub.s f6, f20, f3, f22, rdn # perform operation
fnmsub.s f6, f20, f3, f22, rmm # perform operation
fnmsub.s f6, f20, f3, f22, rne # perform operation
fnmsub.s f6, f20, f3, f22, rtz # perform operation
fnmsub.s f6, f20, f3, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f6, f20, f3, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f6, f20, f3, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f6, f20, f3, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f6, f20, f3, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f6, f20, f3, f22 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0x1)
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f14, 0(x2) # load 0xc0000000 from memory into f14
la x2, scratch
li x3, 0xd6d48b78 # load x3 with value 0xd6d48b78
sw x3, 0(x2) # store 0xd6d48b78 in memory
flw f13, 0(x2) # load 0xd6d48b78 from memory into f13
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f2, 0(x2) # load 0x00000001 from memory into f2
fnmsub.s f22, f14, f13, f2, dyn # perform operation
fnmsub.s f22, f14, f13, f2, rdn # perform operation
fnmsub.s f22, f14, f13, f2, rmm # perform operation
fnmsub.s f22, f14, f13, f2, rne # perform operation
fnmsub.s f22, f14, f13, f2, rtz # perform operation
fnmsub.s f22, f14, f13, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f22, f14, f13, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f22, f14, f13, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f22, f14, f13, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f22, f14, f13, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f22, f14, f13, f2 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0x80000001)
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f5, 0(x2) # load 0xc0000000 from memory into f5
la x2, scratch
li x3, 0x97967fef # load x3 with value 0x97967fef
sw x3, 0(x2) # store 0x97967fef in memory
flw f29, 0(x2) # load 0x97967fef from memory into f29
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f7, 0(x2) # load 0x80000001 from memory into f7
fnmsub.s f21, f5, f29, f7, dyn # perform operation
fnmsub.s f21, f5, f29, f7, rdn # perform operation
fnmsub.s f21, f5, f29, f7, rmm # perform operation
fnmsub.s f21, f5, f29, f7, rne # perform operation
fnmsub.s f21, f5, f29, f7, rtz # perform operation
fnmsub.s f21, f5, f29, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f21, f5, f29, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f21, f5, f29, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f21, f5, f29, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f21, f5, f29, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f21, f5, f29, f7 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0x7f800000)
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f11, 0(x2) # load 0xc0000000 from memory into f11
la x2, scratch
li x3, 0xc2f88aef # load x3 with value 0xc2f88aef
sw x3, 0(x2) # store 0xc2f88aef in memory
flw f27, 0(x2) # load 0xc2f88aef from memory into f27
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f22, 0(x2) # load 0x7f800000 from memory into f22
fnmsub.s f8, f11, f27, f22, dyn # perform operation
fnmsub.s f8, f11, f27, f22, rdn # perform operation
fnmsub.s f8, f11, f27, f22, rmm # perform operation
fnmsub.s f8, f11, f27, f22, rne # perform operation
fnmsub.s f8, f11, f27, f22, rtz # perform operation
fnmsub.s f8, f11, f27, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f8, f11, f27, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f8, f11, f27, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f8, f11, f27, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f8, f11, f27, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f8, f11, f27, f22 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0xff800000)
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f14, 0(x2) # load 0xc0000000 from memory into f14
la x2, scratch
li x3, 0x4eba46a2 # load x3 with value 0x4eba46a2
sw x3, 0(x2) # store 0x4eba46a2 in memory
flw f20, 0(x2) # load 0x4eba46a2 from memory into f20
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f24, 0(x2) # load 0xff800000 from memory into f24
fnmsub.s f17, f14, f20, f24, dyn # perform operation
fnmsub.s f17, f14, f20, f24, rdn # perform operation
fnmsub.s f17, f14, f20, f24, rmm # perform operation
fnmsub.s f17, f14, f20, f24, rne # perform operation
fnmsub.s f17, f14, f20, f24, rtz # perform operation
fnmsub.s f17, f14, f20, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f17, f14, f20, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f17, f14, f20, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f17, f14, f20, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f17, f14, f20, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f17, f14, f20, f24 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0x7fc00000)
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f17, 0(x2) # load 0xc0000000 from memory into f17
la x2, scratch
li x3, 0xcbeb6704 # load x3 with value 0xcbeb6704
sw x3, 0(x2) # store 0xcbeb6704 in memory
flw f12, 0(x2) # load 0xcbeb6704 from memory into f12
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f10, 0(x2) # load 0x7fc00000 from memory into f10
fnmsub.s f23, f17, f12, f10, dyn # perform operation
fnmsub.s f23, f17, f12, f10, rdn # perform operation
fnmsub.s f23, f17, f12, f10, rmm # perform operation
fnmsub.s f23, f17, f12, f10, rne # perform operation
fnmsub.s f23, f17, f12, f10, rtz # perform operation
fnmsub.s f23, f17, f12, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f23, f17, f12, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f23, f17, f12, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f23, f17, f12, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f23, f17, f12, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f23, f17, f12, f10 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0x7fffffff)
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f20, 0(x2) # load 0xc0000000 from memory into f20
la x2, scratch
li x3, 0x6037a4bf # load x3 with value 0x6037a4bf
sw x3, 0(x2) # store 0x6037a4bf in memory
flw f14, 0(x2) # load 0x6037a4bf from memory into f14
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f15, 0(x2) # load 0x7fffffff from memory into f15
fnmsub.s f30, f20, f14, f15, dyn # perform operation
fnmsub.s f30, f20, f14, f15, rdn # perform operation
fnmsub.s f30, f20, f14, f15, rmm # perform operation
fnmsub.s f30, f20, f14, f15, rne # perform operation
fnmsub.s f30, f20, f14, f15, rtz # perform operation
fnmsub.s f30, f20, f14, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f30, f20, f14, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f30, f20, f14, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f30, f20, f14, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f30, f20, f14, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f30, f20, f14, f15 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0xffffffff)
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f29, 0(x2) # load 0xc0000000 from memory into f29
la x2, scratch
li x3, 0xaf687398 # load x3 with value 0xaf687398
sw x3, 0(x2) # store 0xaf687398 in memory
flw f27, 0(x2) # load 0xaf687398 from memory into f27
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f18, 0(x2) # load 0xffffffff from memory into f18
fnmsub.s f23, f29, f27, f18, dyn # perform operation
fnmsub.s f23, f29, f27, f18, rdn # perform operation
fnmsub.s f23, f29, f27, f18, rmm # perform operation
fnmsub.s f23, f29, f27, f18, rne # perform operation
fnmsub.s f23, f29, f27, f18, rtz # perform operation
fnmsub.s f23, f29, f27, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f23, f29, f27, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f23, f29, f27, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f23, f29, f27, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f23, f29, f27, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f23, f29, f27, f18 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0x7f800001)
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f6, 0(x2) # load 0xc0000000 from memory into f6
la x2, scratch
li x3, 0xfe0e19b1 # load x3 with value 0xfe0e19b1
sw x3, 0(x2) # store 0xfe0e19b1 in memory
flw f13, 0(x2) # load 0xfe0e19b1 from memory into f13
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f1, 0(x2) # load 0x7f800001 from memory into f1
fnmsub.s f19, f6, f13, f1, dyn # perform operation
fnmsub.s f19, f6, f13, f1, rdn # perform operation
fnmsub.s f19, f6, f13, f1, rmm # perform operation
fnmsub.s f19, f6, f13, f1, rne # perform operation
fnmsub.s f19, f6, f13, f1, rtz # perform operation
fnmsub.s f19, f6, f13, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f19, f6, f13, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f19, f6, f13, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f19, f6, f13, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f19, f6, f13, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f19, f6, f13, f1 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0x7fbfffff)
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f20, 0(x2) # load 0xc0000000 from memory into f20
la x2, scratch
li x3, 0xc5ec0e8a # load x3 with value 0xc5ec0e8a
sw x3, 0(x2) # store 0xc5ec0e8a in memory
flw f30, 0(x2) # load 0xc5ec0e8a from memory into f30
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f12, 0(x2) # load 0x7fbfffff from memory into f12
fnmsub.s f19, f20, f30, f12, dyn # perform operation
fnmsub.s f19, f20, f30, f12, rdn # perform operation
fnmsub.s f19, f20, f30, f12, rmm # perform operation
fnmsub.s f19, f20, f30, f12, rne # perform operation
fnmsub.s f19, f20, f30, f12, rtz # perform operation
fnmsub.s f19, f20, f30, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f19, f20, f30, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f19, f20, f30, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f19, f20, f30, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f19, f20, f30, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f19, f20, f30, f12 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0xffbfffff)
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f24, 0(x2) # load 0xc0000000 from memory into f24
la x2, scratch
li x3, 0xdd8ebe7f # load x3 with value 0xdd8ebe7f
sw x3, 0(x2) # store 0xdd8ebe7f in memory
flw f9, 0(x2) # load 0xdd8ebe7f from memory into f9
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f2, 0(x2) # load 0xffbfffff from memory into f2
fnmsub.s f13, f24, f9, f2, dyn # perform operation
fnmsub.s f13, f24, f9, f2, rdn # perform operation
fnmsub.s f13, f24, f9, f2, rmm # perform operation
fnmsub.s f13, f24, f9, f2, rne # perform operation
fnmsub.s f13, f24, f9, f2, rtz # perform operation
fnmsub.s f13, f24, f9, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f13, f24, f9, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f13, f24, f9, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f13, f24, f9, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f13, f24, f9, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f13, f24, f9, f2 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0x7ef8654f)
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f6, 0(x2) # load 0xc0000000 from memory into f6
la x2, scratch
li x3, 0xd644b6a4 # load x3 with value 0xd644b6a4
sw x3, 0(x2) # store 0xd644b6a4 in memory
flw f10, 0(x2) # load 0xd644b6a4 from memory into f10
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f24, 0(x2) # load 0x7ef8654f from memory into f24
fnmsub.s f23, f6, f10, f24, dyn # perform operation
fnmsub.s f23, f6, f10, f24, rdn # perform operation
fnmsub.s f23, f6, f10, f24, rmm # perform operation
fnmsub.s f23, f6, f10, f24, rne # perform operation
fnmsub.s f23, f6, f10, f24, rtz # perform operation
fnmsub.s f23, f6, f10, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f23, f6, f10, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f23, f6, f10, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f23, f6, f10, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f23, f6, f10, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f23, f6, f10, f24 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0x813d9ab0)
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f31, 0(x2) # load 0xc0000000 from memory into f31
la x2, scratch
li x3, 0xc0564e38 # load x3 with value 0xc0564e38
sw x3, 0(x2) # store 0xc0564e38 in memory
flw f25, 0(x2) # load 0xc0564e38 from memory into f25
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f26, 0(x2) # load 0x813d9ab0 from memory into f26
fnmsub.s f28, f31, f25, f26, dyn # perform operation
fnmsub.s f28, f31, f25, f26, rdn # perform operation
fnmsub.s f28, f31, f25, f26, rmm # perform operation
fnmsub.s f28, f31, f25, f26, rne # perform operation
fnmsub.s f28, f31, f25, f26, rtz # perform operation
fnmsub.s f28, f31, f25, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f28, f31, f25, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f28, f31, f25, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f28, f31, f25, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f28, f31, f25, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f28, f31, f25, f26 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0x0)
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f28, 0(x2) # load 0x00800000 from memory into f28
la x2, scratch
li x3, 0xe9ebd320 # load x3 with value 0xe9ebd320
sw x3, 0(x2) # store 0xe9ebd320 in memory
flw f22, 0(x2) # load 0xe9ebd320 from memory into f22
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f25, 0(x2) # load 0x00000000 from memory into f25
fnmsub.s f9, f28, f22, f25, dyn # perform operation
fnmsub.s f9, f28, f22, f25, rdn # perform operation
fnmsub.s f9, f28, f22, f25, rmm # perform operation
fnmsub.s f9, f28, f22, f25, rne # perform operation
fnmsub.s f9, f28, f22, f25, rtz # perform operation
fnmsub.s f9, f28, f22, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f9, f28, f22, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f9, f28, f22, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f9, f28, f22, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f9, f28, f22, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f9, f28, f22, f25 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0x80000000)
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f24, 0(x2) # load 0x00800000 from memory into f24
la x2, scratch
li x3, 0x20481b64 # load x3 with value 0x20481b64
sw x3, 0(x2) # store 0x20481b64 in memory
flw f16, 0(x2) # load 0x20481b64 from memory into f16
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f28, 0(x2) # load 0x80000000 from memory into f28
fnmsub.s f18, f24, f16, f28, dyn # perform operation
fnmsub.s f18, f24, f16, f28, rdn # perform operation
fnmsub.s f18, f24, f16, f28, rmm # perform operation
fnmsub.s f18, f24, f16, f28, rne # perform operation
fnmsub.s f18, f24, f16, f28, rtz # perform operation
fnmsub.s f18, f24, f16, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f18, f24, f16, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f18, f24, f16, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f18, f24, f16, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f18, f24, f16, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f18, f24, f16, f28 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0x3f800000)
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f29, 0(x2) # load 0x00800000 from memory into f29
la x2, scratch
li x3, 0x44391164 # load x3 with value 0x44391164
sw x3, 0(x2) # store 0x44391164 in memory
flw f2, 0(x2) # load 0x44391164 from memory into f2
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f13, 0(x2) # load 0x3f800000 from memory into f13
fnmsub.s f8, f29, f2, f13, dyn # perform operation
fnmsub.s f8, f29, f2, f13, rdn # perform operation
fnmsub.s f8, f29, f2, f13, rmm # perform operation
fnmsub.s f8, f29, f2, f13, rne # perform operation
fnmsub.s f8, f29, f2, f13, rtz # perform operation
fnmsub.s f8, f29, f2, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f8, f29, f2, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f8, f29, f2, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f8, f29, f2, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f8, f29, f2, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f8, f29, f2, f13 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0xbf800000)
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f22, 0(x2) # load 0x00800000 from memory into f22
la x2, scratch
li x3, 0x5cd80f30 # load x3 with value 0x5cd80f30
sw x3, 0(x2) # store 0x5cd80f30 in memory
flw f20, 0(x2) # load 0x5cd80f30 from memory into f20
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f18, 0(x2) # load 0xbf800000 from memory into f18
fnmsub.s f16, f22, f20, f18, dyn # perform operation
fnmsub.s f16, f22, f20, f18, rdn # perform operation
fnmsub.s f16, f22, f20, f18, rmm # perform operation
fnmsub.s f16, f22, f20, f18, rne # perform operation
fnmsub.s f16, f22, f20, f18, rtz # perform operation
fnmsub.s f16, f22, f20, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f16, f22, f20, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f16, f22, f20, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f16, f22, f20, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f16, f22, f20, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f16, f22, f20, f18 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0x3fc00000)
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f2, 0(x2) # load 0x00800000 from memory into f2
la x2, scratch
li x3, 0x4f2cee0b # load x3 with value 0x4f2cee0b
sw x3, 0(x2) # store 0x4f2cee0b in memory
flw f20, 0(x2) # load 0x4f2cee0b from memory into f20
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f13, 0(x2) # load 0x3fc00000 from memory into f13
fnmsub.s f31, f2, f20, f13, dyn # perform operation
fnmsub.s f31, f2, f20, f13, rdn # perform operation
fnmsub.s f31, f2, f20, f13, rmm # perform operation
fnmsub.s f31, f2, f20, f13, rne # perform operation
fnmsub.s f31, f2, f20, f13, rtz # perform operation
fnmsub.s f31, f2, f20, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f31, f2, f20, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f31, f2, f20, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f31, f2, f20, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f31, f2, f20, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f31, f2, f20, f13 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0xbfc00000)
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f3, 0(x2) # load 0x00800000 from memory into f3
la x2, scratch
li x3, 0x22db7630 # load x3 with value 0x22db7630
sw x3, 0(x2) # store 0x22db7630 in memory
flw f10, 0(x2) # load 0x22db7630 from memory into f10
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f27, 0(x2) # load 0xbfc00000 from memory into f27
fnmsub.s f1, f3, f10, f27, dyn # perform operation
fnmsub.s f1, f3, f10, f27, rdn # perform operation
fnmsub.s f1, f3, f10, f27, rmm # perform operation
fnmsub.s f1, f3, f10, f27, rne # perform operation
fnmsub.s f1, f3, f10, f27, rtz # perform operation
fnmsub.s f1, f3, f10, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f1, f3, f10, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f1, f3, f10, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f1, f3, f10, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f1, f3, f10, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f1, f3, f10, f27 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0x40000000)
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f19, 0(x2) # load 0x00800000 from memory into f19
la x2, scratch
li x3, 0xc5fbf2ba # load x3 with value 0xc5fbf2ba
sw x3, 0(x2) # store 0xc5fbf2ba in memory
flw f1, 0(x2) # load 0xc5fbf2ba from memory into f1
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f11, 0(x2) # load 0x40000000 from memory into f11
fnmsub.s f24, f19, f1, f11, dyn # perform operation
fnmsub.s f24, f19, f1, f11, rdn # perform operation
fnmsub.s f24, f19, f1, f11, rmm # perform operation
fnmsub.s f24, f19, f1, f11, rne # perform operation
fnmsub.s f24, f19, f1, f11, rtz # perform operation
fnmsub.s f24, f19, f1, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f24, f19, f1, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f24, f19, f1, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f24, f19, f1, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f24, f19, f1, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f24, f19, f1, f11 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0xc0000000)
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f23, 0(x2) # load 0x00800000 from memory into f23
la x2, scratch
li x3, 0x58efe90a # load x3 with value 0x58efe90a
sw x3, 0(x2) # store 0x58efe90a in memory
flw f29, 0(x2) # load 0x58efe90a from memory into f29
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f21, 0(x2) # load 0xc0000000 from memory into f21
fnmsub.s f19, f23, f29, f21, dyn # perform operation
fnmsub.s f19, f23, f29, f21, rdn # perform operation
fnmsub.s f19, f23, f29, f21, rmm # perform operation
fnmsub.s f19, f23, f29, f21, rne # perform operation
fnmsub.s f19, f23, f29, f21, rtz # perform operation
fnmsub.s f19, f23, f29, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f19, f23, f29, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f19, f23, f29, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f19, f23, f29, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f19, f23, f29, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f19, f23, f29, f21 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0x800000)
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f24, 0(x2) # load 0x00800000 from memory into f24
la x2, scratch
li x3, 0xbd666c0f # load x3 with value 0xbd666c0f
sw x3, 0(x2) # store 0xbd666c0f in memory
flw f29, 0(x2) # load 0xbd666c0f from memory into f29
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f23, 0(x2) # load 0x00800000 from memory into f23
fnmsub.s f19, f24, f29, f23, dyn # perform operation
fnmsub.s f19, f24, f29, f23, rdn # perform operation
fnmsub.s f19, f24, f29, f23, rmm # perform operation
fnmsub.s f19, f24, f29, f23, rne # perform operation
fnmsub.s f19, f24, f29, f23, rtz # perform operation
fnmsub.s f19, f24, f29, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f19, f24, f29, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f19, f24, f29, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f19, f24, f29, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f19, f24, f29, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f19, f24, f29, f23 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0x80800000)
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f1, 0(x2) # load 0x00800000 from memory into f1
la x2, scratch
li x3, 0x6439f771 # load x3 with value 0x6439f771
sw x3, 0(x2) # store 0x6439f771 in memory
flw f6, 0(x2) # load 0x6439f771 from memory into f6
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f16, 0(x2) # load 0x80800000 from memory into f16
fnmsub.s f29, f1, f6, f16, dyn # perform operation
fnmsub.s f29, f1, f6, f16, rdn # perform operation
fnmsub.s f29, f1, f6, f16, rmm # perform operation
fnmsub.s f29, f1, f6, f16, rne # perform operation
fnmsub.s f29, f1, f6, f16, rtz # perform operation
fnmsub.s f29, f1, f6, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f29, f1, f6, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f29, f1, f6, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f29, f1, f6, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f29, f1, f6, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f29, f1, f6, f16 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0x7f7fffff)
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f7, 0(x2) # load 0x00800000 from memory into f7
la x2, scratch
li x3, 0x12eb6f04 # load x3 with value 0x12eb6f04
sw x3, 0(x2) # store 0x12eb6f04 in memory
flw f12, 0(x2) # load 0x12eb6f04 from memory into f12
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f10, 0(x2) # load 0x7f7fffff from memory into f10
fnmsub.s f1, f7, f12, f10, dyn # perform operation
fnmsub.s f1, f7, f12, f10, rdn # perform operation
fnmsub.s f1, f7, f12, f10, rmm # perform operation
fnmsub.s f1, f7, f12, f10, rne # perform operation
fnmsub.s f1, f7, f12, f10, rtz # perform operation
fnmsub.s f1, f7, f12, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f1, f7, f12, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f1, f7, f12, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f1, f7, f12, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f1, f7, f12, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f1, f7, f12, f10 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0xff7fffff)
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f28, 0(x2) # load 0x00800000 from memory into f28
la x2, scratch
li x3, 0x72d82528 # load x3 with value 0x72d82528
sw x3, 0(x2) # store 0x72d82528 in memory
flw f12, 0(x2) # load 0x72d82528 from memory into f12
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f11, 0(x2) # load 0xff7fffff from memory into f11
fnmsub.s f22, f28, f12, f11, dyn # perform operation
fnmsub.s f22, f28, f12, f11, rdn # perform operation
fnmsub.s f22, f28, f12, f11, rmm # perform operation
fnmsub.s f22, f28, f12, f11, rne # perform operation
fnmsub.s f22, f28, f12, f11, rtz # perform operation
fnmsub.s f22, f28, f12, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f22, f28, f12, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f22, f28, f12, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f22, f28, f12, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f22, f28, f12, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f22, f28, f12, f11 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0x7fffff)
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f31, 0(x2) # load 0x00800000 from memory into f31
la x2, scratch
li x3, 0x7a859433 # load x3 with value 0x7a859433
sw x3, 0(x2) # store 0x7a859433 in memory
flw f16, 0(x2) # load 0x7a859433 from memory into f16
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f27, 0(x2) # load 0x007fffff from memory into f27
fnmsub.s f7, f31, f16, f27, dyn # perform operation
fnmsub.s f7, f31, f16, f27, rdn # perform operation
fnmsub.s f7, f31, f16, f27, rmm # perform operation
fnmsub.s f7, f31, f16, f27, rne # perform operation
fnmsub.s f7, f31, f16, f27, rtz # perform operation
fnmsub.s f7, f31, f16, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f7, f31, f16, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f7, f31, f16, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f7, f31, f16, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f7, f31, f16, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f7, f31, f16, f27 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0x807fffff)
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f18, 0(x2) # load 0x00800000 from memory into f18
la x2, scratch
li x3, 0xb429b42f # load x3 with value 0xb429b42f
sw x3, 0(x2) # store 0xb429b42f in memory
flw f29, 0(x2) # load 0xb429b42f from memory into f29
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f24, 0(x2) # load 0x807fffff from memory into f24
fnmsub.s f31, f18, f29, f24, dyn # perform operation
fnmsub.s f31, f18, f29, f24, rdn # perform operation
fnmsub.s f31, f18, f29, f24, rmm # perform operation
fnmsub.s f31, f18, f29, f24, rne # perform operation
fnmsub.s f31, f18, f29, f24, rtz # perform operation
fnmsub.s f31, f18, f29, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f31, f18, f29, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f31, f18, f29, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f31, f18, f29, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f31, f18, f29, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f31, f18, f29, f24 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0x400000)
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f11, 0(x2) # load 0x00800000 from memory into f11
la x2, scratch
li x3, 0x137cc29d # load x3 with value 0x137cc29d
sw x3, 0(x2) # store 0x137cc29d in memory
flw f15, 0(x2) # load 0x137cc29d from memory into f15
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f7, 0(x2) # load 0x00400000 from memory into f7
fnmsub.s f1, f11, f15, f7, dyn # perform operation
fnmsub.s f1, f11, f15, f7, rdn # perform operation
fnmsub.s f1, f11, f15, f7, rmm # perform operation
fnmsub.s f1, f11, f15, f7, rne # perform operation
fnmsub.s f1, f11, f15, f7, rtz # perform operation
fnmsub.s f1, f11, f15, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f1, f11, f15, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f1, f11, f15, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f1, f11, f15, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f1, f11, f15, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f1, f11, f15, f7 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0x80400000)
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f11, 0(x2) # load 0x00800000 from memory into f11
la x2, scratch
li x3, 0x39568b1b # load x3 with value 0x39568b1b
sw x3, 0(x2) # store 0x39568b1b in memory
flw f10, 0(x2) # load 0x39568b1b from memory into f10
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f7, 0(x2) # load 0x80400000 from memory into f7
fnmsub.s f15, f11, f10, f7, dyn # perform operation
fnmsub.s f15, f11, f10, f7, rdn # perform operation
fnmsub.s f15, f11, f10, f7, rmm # perform operation
fnmsub.s f15, f11, f10, f7, rne # perform operation
fnmsub.s f15, f11, f10, f7, rtz # perform operation
fnmsub.s f15, f11, f10, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f15, f11, f10, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f15, f11, f10, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f15, f11, f10, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f15, f11, f10, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f15, f11, f10, f7 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0x1)
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f26, 0(x2) # load 0x00800000 from memory into f26
la x2, scratch
li x3, 0xb93816f1 # load x3 with value 0xb93816f1
sw x3, 0(x2) # store 0xb93816f1 in memory
flw f10, 0(x2) # load 0xb93816f1 from memory into f10
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f21, 0(x2) # load 0x00000001 from memory into f21
fnmsub.s f23, f26, f10, f21, dyn # perform operation
fnmsub.s f23, f26, f10, f21, rdn # perform operation
fnmsub.s f23, f26, f10, f21, rmm # perform operation
fnmsub.s f23, f26, f10, f21, rne # perform operation
fnmsub.s f23, f26, f10, f21, rtz # perform operation
fnmsub.s f23, f26, f10, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f23, f26, f10, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f23, f26, f10, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f23, f26, f10, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f23, f26, f10, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f23, f26, f10, f21 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0x80000001)
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f21, 0(x2) # load 0x00800000 from memory into f21
la x2, scratch
li x3, 0x7fae9ab8 # load x3 with value 0x7fae9ab8
sw x3, 0(x2) # store 0x7fae9ab8 in memory
flw f10, 0(x2) # load 0x7fae9ab8 from memory into f10
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f19, 0(x2) # load 0x80000001 from memory into f19
fnmsub.s f11, f21, f10, f19, dyn # perform operation
fnmsub.s f11, f21, f10, f19, rdn # perform operation
fnmsub.s f11, f21, f10, f19, rmm # perform operation
fnmsub.s f11, f21, f10, f19, rne # perform operation
fnmsub.s f11, f21, f10, f19, rtz # perform operation
fnmsub.s f11, f21, f10, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f11, f21, f10, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f11, f21, f10, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f11, f21, f10, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f11, f21, f10, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f11, f21, f10, f19 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0x7f800000)
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f11, 0(x2) # load 0x00800000 from memory into f11
la x2, scratch
li x3, 0x00a8090e # load x3 with value 0x00a8090e
sw x3, 0(x2) # store 0x00a8090e in memory
flw f30, 0(x2) # load 0x00a8090e from memory into f30
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f23, 0(x2) # load 0x7f800000 from memory into f23
fnmsub.s f3, f11, f30, f23, dyn # perform operation
fnmsub.s f3, f11, f30, f23, rdn # perform operation
fnmsub.s f3, f11, f30, f23, rmm # perform operation
fnmsub.s f3, f11, f30, f23, rne # perform operation
fnmsub.s f3, f11, f30, f23, rtz # perform operation
fnmsub.s f3, f11, f30, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f3, f11, f30, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f3, f11, f30, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f3, f11, f30, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f3, f11, f30, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f3, f11, f30, f23 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0xff800000)
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f9, 0(x2) # load 0x00800000 from memory into f9
la x2, scratch
li x3, 0x5b19076c # load x3 with value 0x5b19076c
sw x3, 0(x2) # store 0x5b19076c in memory
flw f27, 0(x2) # load 0x5b19076c from memory into f27
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f17, 0(x2) # load 0xff800000 from memory into f17
fnmsub.s f25, f9, f27, f17, dyn # perform operation
fnmsub.s f25, f9, f27, f17, rdn # perform operation
fnmsub.s f25, f9, f27, f17, rmm # perform operation
fnmsub.s f25, f9, f27, f17, rne # perform operation
fnmsub.s f25, f9, f27, f17, rtz # perform operation
fnmsub.s f25, f9, f27, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f25, f9, f27, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f25, f9, f27, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f25, f9, f27, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f25, f9, f27, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f25, f9, f27, f17 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0x7fc00000)
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f9, 0(x2) # load 0x00800000 from memory into f9
la x2, scratch
li x3, 0xd7abe29c # load x3 with value 0xd7abe29c
sw x3, 0(x2) # store 0xd7abe29c in memory
flw f21, 0(x2) # load 0xd7abe29c from memory into f21
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f29, 0(x2) # load 0x7fc00000 from memory into f29
fnmsub.s f27, f9, f21, f29, dyn # perform operation
fnmsub.s f27, f9, f21, f29, rdn # perform operation
fnmsub.s f27, f9, f21, f29, rmm # perform operation
fnmsub.s f27, f9, f21, f29, rne # perform operation
fnmsub.s f27, f9, f21, f29, rtz # perform operation
fnmsub.s f27, f9, f21, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f27, f9, f21, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f27, f9, f21, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f27, f9, f21, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f27, f9, f21, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f27, f9, f21, f29 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0x7fffffff)
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f28, 0(x2) # load 0x00800000 from memory into f28
la x2, scratch
li x3, 0x285e1021 # load x3 with value 0x285e1021
sw x3, 0(x2) # store 0x285e1021 in memory
flw f1, 0(x2) # load 0x285e1021 from memory into f1
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f11, 0(x2) # load 0x7fffffff from memory into f11
fnmsub.s f26, f28, f1, f11, dyn # perform operation
fnmsub.s f26, f28, f1, f11, rdn # perform operation
fnmsub.s f26, f28, f1, f11, rmm # perform operation
fnmsub.s f26, f28, f1, f11, rne # perform operation
fnmsub.s f26, f28, f1, f11, rtz # perform operation
fnmsub.s f26, f28, f1, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f26, f28, f1, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f26, f28, f1, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f26, f28, f1, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f26, f28, f1, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f26, f28, f1, f11 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0xffffffff)
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f31, 0(x2) # load 0x00800000 from memory into f31
la x2, scratch
li x3, 0xdc6ad43d # load x3 with value 0xdc6ad43d
sw x3, 0(x2) # store 0xdc6ad43d in memory
flw f25, 0(x2) # load 0xdc6ad43d from memory into f25
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f16, 0(x2) # load 0xffffffff from memory into f16
fnmsub.s f20, f31, f25, f16, dyn # perform operation
fnmsub.s f20, f31, f25, f16, rdn # perform operation
fnmsub.s f20, f31, f25, f16, rmm # perform operation
fnmsub.s f20, f31, f25, f16, rne # perform operation
fnmsub.s f20, f31, f25, f16, rtz # perform operation
fnmsub.s f20, f31, f25, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f20, f31, f25, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f20, f31, f25, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f20, f31, f25, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f20, f31, f25, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f20, f31, f25, f16 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0x7f800001)
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f14, 0(x2) # load 0x00800000 from memory into f14
la x2, scratch
li x3, 0x8dfeaf7e # load x3 with value 0x8dfeaf7e
sw x3, 0(x2) # store 0x8dfeaf7e in memory
flw f24, 0(x2) # load 0x8dfeaf7e from memory into f24
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f15, 0(x2) # load 0x7f800001 from memory into f15
fnmsub.s f5, f14, f24, f15, dyn # perform operation
fnmsub.s f5, f14, f24, f15, rdn # perform operation
fnmsub.s f5, f14, f24, f15, rmm # perform operation
fnmsub.s f5, f14, f24, f15, rne # perform operation
fnmsub.s f5, f14, f24, f15, rtz # perform operation
fnmsub.s f5, f14, f24, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f5, f14, f24, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f5, f14, f24, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f5, f14, f24, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f5, f14, f24, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f5, f14, f24, f15 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0x7fbfffff)
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f7, 0(x2) # load 0x00800000 from memory into f7
la x2, scratch
li x3, 0xabc27b92 # load x3 with value 0xabc27b92
sw x3, 0(x2) # store 0xabc27b92 in memory
flw f29, 0(x2) # load 0xabc27b92 from memory into f29
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f10, 0(x2) # load 0x7fbfffff from memory into f10
fnmsub.s f30, f7, f29, f10, dyn # perform operation
fnmsub.s f30, f7, f29, f10, rdn # perform operation
fnmsub.s f30, f7, f29, f10, rmm # perform operation
fnmsub.s f30, f7, f29, f10, rne # perform operation
fnmsub.s f30, f7, f29, f10, rtz # perform operation
fnmsub.s f30, f7, f29, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f30, f7, f29, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f30, f7, f29, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f30, f7, f29, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f30, f7, f29, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f30, f7, f29, f10 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0xffbfffff)
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f21, 0(x2) # load 0x00800000 from memory into f21
la x2, scratch
li x3, 0x970c9417 # load x3 with value 0x970c9417
sw x3, 0(x2) # store 0x970c9417 in memory
flw f27, 0(x2) # load 0x970c9417 from memory into f27
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f10, 0(x2) # load 0xffbfffff from memory into f10
fnmsub.s f20, f21, f27, f10, dyn # perform operation
fnmsub.s f20, f21, f27, f10, rdn # perform operation
fnmsub.s f20, f21, f27, f10, rmm # perform operation
fnmsub.s f20, f21, f27, f10, rne # perform operation
fnmsub.s f20, f21, f27, f10, rtz # perform operation
fnmsub.s f20, f21, f27, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f20, f21, f27, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f20, f21, f27, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f20, f21, f27, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f20, f21, f27, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f20, f21, f27, f10 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0x7ef8654f)
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f12, 0(x2) # load 0x00800000 from memory into f12
la x2, scratch
li x3, 0xff6459b0 # load x3 with value 0xff6459b0
sw x3, 0(x2) # store 0xff6459b0 in memory
flw f18, 0(x2) # load 0xff6459b0 from memory into f18
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f22, 0(x2) # load 0x7ef8654f from memory into f22
fnmsub.s f7, f12, f18, f22, dyn # perform operation
fnmsub.s f7, f12, f18, f22, rdn # perform operation
fnmsub.s f7, f12, f18, f22, rmm # perform operation
fnmsub.s f7, f12, f18, f22, rne # perform operation
fnmsub.s f7, f12, f18, f22, rtz # perform operation
fnmsub.s f7, f12, f18, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f7, f12, f18, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f7, f12, f18, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f7, f12, f18, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f7, f12, f18, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f7, f12, f18, f22 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0x813d9ab0)
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f28, 0(x2) # load 0x00800000 from memory into f28
la x2, scratch
li x3, 0x4d70ba81 # load x3 with value 0x4d70ba81
sw x3, 0(x2) # store 0x4d70ba81 in memory
flw f1, 0(x2) # load 0x4d70ba81 from memory into f1
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f26, 0(x2) # load 0x813d9ab0 from memory into f26
fnmsub.s f15, f28, f1, f26, dyn # perform operation
fnmsub.s f15, f28, f1, f26, rdn # perform operation
fnmsub.s f15, f28, f1, f26, rmm # perform operation
fnmsub.s f15, f28, f1, f26, rne # perform operation
fnmsub.s f15, f28, f1, f26, rtz # perform operation
fnmsub.s f15, f28, f1, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f15, f28, f1, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f15, f28, f1, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f15, f28, f1, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f15, f28, f1, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f15, f28, f1, f26 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0x0)
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f21, 0(x2) # load 0x80800000 from memory into f21
la x2, scratch
li x3, 0x262b13dd # load x3 with value 0x262b13dd
sw x3, 0(x2) # store 0x262b13dd in memory
flw f28, 0(x2) # load 0x262b13dd from memory into f28
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f2, 0(x2) # load 0x00000000 from memory into f2
fnmsub.s f17, f21, f28, f2, dyn # perform operation
fnmsub.s f17, f21, f28, f2, rdn # perform operation
fnmsub.s f17, f21, f28, f2, rmm # perform operation
fnmsub.s f17, f21, f28, f2, rne # perform operation
fnmsub.s f17, f21, f28, f2, rtz # perform operation
fnmsub.s f17, f21, f28, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f17, f21, f28, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f17, f21, f28, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f17, f21, f28, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f17, f21, f28, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f17, f21, f28, f2 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0x80000000)
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f27, 0(x2) # load 0x80800000 from memory into f27
la x2, scratch
li x3, 0x80b3dbc2 # load x3 with value 0x80b3dbc2
sw x3, 0(x2) # store 0x80b3dbc2 in memory
flw f7, 0(x2) # load 0x80b3dbc2 from memory into f7
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f14, 0(x2) # load 0x80000000 from memory into f14
fnmsub.s f22, f27, f7, f14, dyn # perform operation
fnmsub.s f22, f27, f7, f14, rdn # perform operation
fnmsub.s f22, f27, f7, f14, rmm # perform operation
fnmsub.s f22, f27, f7, f14, rne # perform operation
fnmsub.s f22, f27, f7, f14, rtz # perform operation
fnmsub.s f22, f27, f7, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f22, f27, f7, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f22, f27, f7, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f22, f27, f7, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f22, f27, f7, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f22, f27, f7, f14 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0x3f800000)
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f3, 0(x2) # load 0x80800000 from memory into f3
la x2, scratch
li x3, 0x9dc05412 # load x3 with value 0x9dc05412
sw x3, 0(x2) # store 0x9dc05412 in memory
flw f17, 0(x2) # load 0x9dc05412 from memory into f17
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f22, 0(x2) # load 0x3f800000 from memory into f22
fnmsub.s f10, f3, f17, f22, dyn # perform operation
fnmsub.s f10, f3, f17, f22, rdn # perform operation
fnmsub.s f10, f3, f17, f22, rmm # perform operation
fnmsub.s f10, f3, f17, f22, rne # perform operation
fnmsub.s f10, f3, f17, f22, rtz # perform operation
fnmsub.s f10, f3, f17, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f10, f3, f17, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f10, f3, f17, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f10, f3, f17, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f10, f3, f17, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f10, f3, f17, f22 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0xbf800000)
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f5, 0(x2) # load 0x80800000 from memory into f5
la x2, scratch
li x3, 0xf4f6bc18 # load x3 with value 0xf4f6bc18
sw x3, 0(x2) # store 0xf4f6bc18 in memory
flw f2, 0(x2) # load 0xf4f6bc18 from memory into f2
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f7, 0(x2) # load 0xbf800000 from memory into f7
fnmsub.s f15, f5, f2, f7, dyn # perform operation
fnmsub.s f15, f5, f2, f7, rdn # perform operation
fnmsub.s f15, f5, f2, f7, rmm # perform operation
fnmsub.s f15, f5, f2, f7, rne # perform operation
fnmsub.s f15, f5, f2, f7, rtz # perform operation
fnmsub.s f15, f5, f2, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f15, f5, f2, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f15, f5, f2, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f15, f5, f2, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f15, f5, f2, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f15, f5, f2, f7 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0x3fc00000)
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f16, 0(x2) # load 0x80800000 from memory into f16
la x2, scratch
li x3, 0x571ca64d # load x3 with value 0x571ca64d
sw x3, 0(x2) # store 0x571ca64d in memory
flw f28, 0(x2) # load 0x571ca64d from memory into f28
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f11, 0(x2) # load 0x3fc00000 from memory into f11
fnmsub.s f22, f16, f28, f11, dyn # perform operation
fnmsub.s f22, f16, f28, f11, rdn # perform operation
fnmsub.s f22, f16, f28, f11, rmm # perform operation
fnmsub.s f22, f16, f28, f11, rne # perform operation
fnmsub.s f22, f16, f28, f11, rtz # perform operation
fnmsub.s f22, f16, f28, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f22, f16, f28, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f22, f16, f28, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f22, f16, f28, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f22, f16, f28, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f22, f16, f28, f11 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0xbfc00000)
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f18, 0(x2) # load 0x80800000 from memory into f18
la x2, scratch
li x3, 0x6020f60f # load x3 with value 0x6020f60f
sw x3, 0(x2) # store 0x6020f60f in memory
flw f3, 0(x2) # load 0x6020f60f from memory into f3
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f6, 0(x2) # load 0xbfc00000 from memory into f6
fnmsub.s f8, f18, f3, f6, dyn # perform operation
fnmsub.s f8, f18, f3, f6, rdn # perform operation
fnmsub.s f8, f18, f3, f6, rmm # perform operation
fnmsub.s f8, f18, f3, f6, rne # perform operation
fnmsub.s f8, f18, f3, f6, rtz # perform operation
fnmsub.s f8, f18, f3, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f8, f18, f3, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f8, f18, f3, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f8, f18, f3, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f8, f18, f3, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f8, f18, f3, f6 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0x40000000)
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f13, 0(x2) # load 0x80800000 from memory into f13
la x2, scratch
li x3, 0x4499e156 # load x3 with value 0x4499e156
sw x3, 0(x2) # store 0x4499e156 in memory
flw f7, 0(x2) # load 0x4499e156 from memory into f7
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f23, 0(x2) # load 0x40000000 from memory into f23
fnmsub.s f12, f13, f7, f23, dyn # perform operation
fnmsub.s f12, f13, f7, f23, rdn # perform operation
fnmsub.s f12, f13, f7, f23, rmm # perform operation
fnmsub.s f12, f13, f7, f23, rne # perform operation
fnmsub.s f12, f13, f7, f23, rtz # perform operation
fnmsub.s f12, f13, f7, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f12, f13, f7, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f12, f13, f7, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f12, f13, f7, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f12, f13, f7, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f12, f13, f7, f23 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0xc0000000)
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f21, 0(x2) # load 0x80800000 from memory into f21
la x2, scratch
li x3, 0xdb5052d9 # load x3 with value 0xdb5052d9
sw x3, 0(x2) # store 0xdb5052d9 in memory
flw f25, 0(x2) # load 0xdb5052d9 from memory into f25
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f26, 0(x2) # load 0xc0000000 from memory into f26
fnmsub.s f5, f21, f25, f26, dyn # perform operation
fnmsub.s f5, f21, f25, f26, rdn # perform operation
fnmsub.s f5, f21, f25, f26, rmm # perform operation
fnmsub.s f5, f21, f25, f26, rne # perform operation
fnmsub.s f5, f21, f25, f26, rtz # perform operation
fnmsub.s f5, f21, f25, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f5, f21, f25, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f5, f21, f25, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f5, f21, f25, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f5, f21, f25, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f5, f21, f25, f26 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0x800000)
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f28, 0(x2) # load 0x80800000 from memory into f28
la x2, scratch
li x3, 0x064d483b # load x3 with value 0x064d483b
sw x3, 0(x2) # store 0x064d483b in memory
flw f15, 0(x2) # load 0x064d483b from memory into f15
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f17, 0(x2) # load 0x00800000 from memory into f17
fnmsub.s f2, f28, f15, f17, dyn # perform operation
fnmsub.s f2, f28, f15, f17, rdn # perform operation
fnmsub.s f2, f28, f15, f17, rmm # perform operation
fnmsub.s f2, f28, f15, f17, rne # perform operation
fnmsub.s f2, f28, f15, f17, rtz # perform operation
fnmsub.s f2, f28, f15, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f2, f28, f15, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f2, f28, f15, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f2, f28, f15, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f2, f28, f15, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f2, f28, f15, f17 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0x80800000)
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f28, 0(x2) # load 0x80800000 from memory into f28
la x2, scratch
li x3, 0x79303eb0 # load x3 with value 0x79303eb0
sw x3, 0(x2) # store 0x79303eb0 in memory
flw f25, 0(x2) # load 0x79303eb0 from memory into f25
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f6, 0(x2) # load 0x80800000 from memory into f6
fnmsub.s f12, f28, f25, f6, dyn # perform operation
fnmsub.s f12, f28, f25, f6, rdn # perform operation
fnmsub.s f12, f28, f25, f6, rmm # perform operation
fnmsub.s f12, f28, f25, f6, rne # perform operation
fnmsub.s f12, f28, f25, f6, rtz # perform operation
fnmsub.s f12, f28, f25, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f12, f28, f25, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f12, f28, f25, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f12, f28, f25, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f12, f28, f25, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f12, f28, f25, f6 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0x7f7fffff)
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f1, 0(x2) # load 0x80800000 from memory into f1
la x2, scratch
li x3, 0x2cf8fbb7 # load x3 with value 0x2cf8fbb7
sw x3, 0(x2) # store 0x2cf8fbb7 in memory
flw f2, 0(x2) # load 0x2cf8fbb7 from memory into f2
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f19, 0(x2) # load 0x7f7fffff from memory into f19
fnmsub.s f8, f1, f2, f19, dyn # perform operation
fnmsub.s f8, f1, f2, f19, rdn # perform operation
fnmsub.s f8, f1, f2, f19, rmm # perform operation
fnmsub.s f8, f1, f2, f19, rne # perform operation
fnmsub.s f8, f1, f2, f19, rtz # perform operation
fnmsub.s f8, f1, f2, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f8, f1, f2, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f8, f1, f2, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f8, f1, f2, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f8, f1, f2, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f8, f1, f2, f19 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0xff7fffff)
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f9, 0(x2) # load 0x80800000 from memory into f9
la x2, scratch
li x3, 0x84ad2b09 # load x3 with value 0x84ad2b09
sw x3, 0(x2) # store 0x84ad2b09 in memory
flw f16, 0(x2) # load 0x84ad2b09 from memory into f16
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f6, 0(x2) # load 0xff7fffff from memory into f6
fnmsub.s f31, f9, f16, f6, dyn # perform operation
fnmsub.s f31, f9, f16, f6, rdn # perform operation
fnmsub.s f31, f9, f16, f6, rmm # perform operation
fnmsub.s f31, f9, f16, f6, rne # perform operation
fnmsub.s f31, f9, f16, f6, rtz # perform operation
fnmsub.s f31, f9, f16, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f31, f9, f16, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f31, f9, f16, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f31, f9, f16, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f31, f9, f16, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f31, f9, f16, f6 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0x7fffff)
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f23, 0(x2) # load 0x80800000 from memory into f23
la x2, scratch
li x3, 0xbff963d1 # load x3 with value 0xbff963d1
sw x3, 0(x2) # store 0xbff963d1 in memory
flw f15, 0(x2) # load 0xbff963d1 from memory into f15
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f14, 0(x2) # load 0x007fffff from memory into f14
fnmsub.s f5, f23, f15, f14, dyn # perform operation
fnmsub.s f5, f23, f15, f14, rdn # perform operation
fnmsub.s f5, f23, f15, f14, rmm # perform operation
fnmsub.s f5, f23, f15, f14, rne # perform operation
fnmsub.s f5, f23, f15, f14, rtz # perform operation
fnmsub.s f5, f23, f15, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f5, f23, f15, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f5, f23, f15, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f5, f23, f15, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f5, f23, f15, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f5, f23, f15, f14 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0x807fffff)
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f21, 0(x2) # load 0x80800000 from memory into f21
la x2, scratch
li x3, 0xd199d2f2 # load x3 with value 0xd199d2f2
sw x3, 0(x2) # store 0xd199d2f2 in memory
flw f25, 0(x2) # load 0xd199d2f2 from memory into f25
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f29, 0(x2) # load 0x807fffff from memory into f29
fnmsub.s f12, f21, f25, f29, dyn # perform operation
fnmsub.s f12, f21, f25, f29, rdn # perform operation
fnmsub.s f12, f21, f25, f29, rmm # perform operation
fnmsub.s f12, f21, f25, f29, rne # perform operation
fnmsub.s f12, f21, f25, f29, rtz # perform operation
fnmsub.s f12, f21, f25, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f12, f21, f25, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f12, f21, f25, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f12, f21, f25, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f12, f21, f25, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f12, f21, f25, f29 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0x400000)
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f17, 0(x2) # load 0x80800000 from memory into f17
la x2, scratch
li x3, 0x97477c6f # load x3 with value 0x97477c6f
sw x3, 0(x2) # store 0x97477c6f in memory
flw f24, 0(x2) # load 0x97477c6f from memory into f24
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f31, 0(x2) # load 0x00400000 from memory into f31
fnmsub.s f2, f17, f24, f31, dyn # perform operation
fnmsub.s f2, f17, f24, f31, rdn # perform operation
fnmsub.s f2, f17, f24, f31, rmm # perform operation
fnmsub.s f2, f17, f24, f31, rne # perform operation
fnmsub.s f2, f17, f24, f31, rtz # perform operation
fnmsub.s f2, f17, f24, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f2, f17, f24, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f2, f17, f24, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f2, f17, f24, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f2, f17, f24, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f2, f17, f24, f31 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0x80400000)
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f19, 0(x2) # load 0x80800000 from memory into f19
la x2, scratch
li x3, 0x6ad695d7 # load x3 with value 0x6ad695d7
sw x3, 0(x2) # store 0x6ad695d7 in memory
flw f7, 0(x2) # load 0x6ad695d7 from memory into f7
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f25, 0(x2) # load 0x80400000 from memory into f25
fnmsub.s f15, f19, f7, f25, dyn # perform operation
fnmsub.s f15, f19, f7, f25, rdn # perform operation
fnmsub.s f15, f19, f7, f25, rmm # perform operation
fnmsub.s f15, f19, f7, f25, rne # perform operation
fnmsub.s f15, f19, f7, f25, rtz # perform operation
fnmsub.s f15, f19, f7, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f15, f19, f7, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f15, f19, f7, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f15, f19, f7, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f15, f19, f7, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f15, f19, f7, f25 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0x1)
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f27, 0(x2) # load 0x80800000 from memory into f27
la x2, scratch
li x3, 0xf254573a # load x3 with value 0xf254573a
sw x3, 0(x2) # store 0xf254573a in memory
flw f2, 0(x2) # load 0xf254573a from memory into f2
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f24, 0(x2) # load 0x00000001 from memory into f24
fnmsub.s f17, f27, f2, f24, dyn # perform operation
fnmsub.s f17, f27, f2, f24, rdn # perform operation
fnmsub.s f17, f27, f2, f24, rmm # perform operation
fnmsub.s f17, f27, f2, f24, rne # perform operation
fnmsub.s f17, f27, f2, f24, rtz # perform operation
fnmsub.s f17, f27, f2, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f17, f27, f2, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f17, f27, f2, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f17, f27, f2, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f17, f27, f2, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f17, f27, f2, f24 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0x80000001)
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f26, 0(x2) # load 0x80800000 from memory into f26
la x2, scratch
li x3, 0x896bd425 # load x3 with value 0x896bd425
sw x3, 0(x2) # store 0x896bd425 in memory
flw f9, 0(x2) # load 0x896bd425 from memory into f9
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f28, 0(x2) # load 0x80000001 from memory into f28
fnmsub.s f10, f26, f9, f28, dyn # perform operation
fnmsub.s f10, f26, f9, f28, rdn # perform operation
fnmsub.s f10, f26, f9, f28, rmm # perform operation
fnmsub.s f10, f26, f9, f28, rne # perform operation
fnmsub.s f10, f26, f9, f28, rtz # perform operation
fnmsub.s f10, f26, f9, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f10, f26, f9, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f10, f26, f9, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f10, f26, f9, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f10, f26, f9, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f10, f26, f9, f28 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0x7f800000)
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f6, 0(x2) # load 0x80800000 from memory into f6
la x2, scratch
li x3, 0x71a89184 # load x3 with value 0x71a89184
sw x3, 0(x2) # store 0x71a89184 in memory
flw f1, 0(x2) # load 0x71a89184 from memory into f1
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f5, 0(x2) # load 0x7f800000 from memory into f5
fnmsub.s f30, f6, f1, f5, dyn # perform operation
fnmsub.s f30, f6, f1, f5, rdn # perform operation
fnmsub.s f30, f6, f1, f5, rmm # perform operation
fnmsub.s f30, f6, f1, f5, rne # perform operation
fnmsub.s f30, f6, f1, f5, rtz # perform operation
fnmsub.s f30, f6, f1, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f30, f6, f1, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f30, f6, f1, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f30, f6, f1, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f30, f6, f1, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f30, f6, f1, f5 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0xff800000)
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f8, 0(x2) # load 0x80800000 from memory into f8
la x2, scratch
li x3, 0x5d499ae8 # load x3 with value 0x5d499ae8
sw x3, 0(x2) # store 0x5d499ae8 in memory
flw f18, 0(x2) # load 0x5d499ae8 from memory into f18
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f9, 0(x2) # load 0xff800000 from memory into f9
fnmsub.s f19, f8, f18, f9, dyn # perform operation
fnmsub.s f19, f8, f18, f9, rdn # perform operation
fnmsub.s f19, f8, f18, f9, rmm # perform operation
fnmsub.s f19, f8, f18, f9, rne # perform operation
fnmsub.s f19, f8, f18, f9, rtz # perform operation
fnmsub.s f19, f8, f18, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f19, f8, f18, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f19, f8, f18, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f19, f8, f18, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f19, f8, f18, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f19, f8, f18, f9 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0x7fc00000)
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f10, 0(x2) # load 0x80800000 from memory into f10
la x2, scratch
li x3, 0x2684ce21 # load x3 with value 0x2684ce21
sw x3, 0(x2) # store 0x2684ce21 in memory
flw f9, 0(x2) # load 0x2684ce21 from memory into f9
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f8, 0(x2) # load 0x7fc00000 from memory into f8
fnmsub.s f3, f10, f9, f8, dyn # perform operation
fnmsub.s f3, f10, f9, f8, rdn # perform operation
fnmsub.s f3, f10, f9, f8, rmm # perform operation
fnmsub.s f3, f10, f9, f8, rne # perform operation
fnmsub.s f3, f10, f9, f8, rtz # perform operation
fnmsub.s f3, f10, f9, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f3, f10, f9, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f3, f10, f9, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f3, f10, f9, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f3, f10, f9, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f3, f10, f9, f8 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0x7fffffff)
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f27, 0(x2) # load 0x80800000 from memory into f27
la x2, scratch
li x3, 0xfb66f650 # load x3 with value 0xfb66f650
sw x3, 0(x2) # store 0xfb66f650 in memory
flw f13, 0(x2) # load 0xfb66f650 from memory into f13
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f30, 0(x2) # load 0x7fffffff from memory into f30
fnmsub.s f21, f27, f13, f30, dyn # perform operation
fnmsub.s f21, f27, f13, f30, rdn # perform operation
fnmsub.s f21, f27, f13, f30, rmm # perform operation
fnmsub.s f21, f27, f13, f30, rne # perform operation
fnmsub.s f21, f27, f13, f30, rtz # perform operation
fnmsub.s f21, f27, f13, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f21, f27, f13, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f21, f27, f13, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f21, f27, f13, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f21, f27, f13, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f21, f27, f13, f30 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0xffffffff)
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f23, 0(x2) # load 0x80800000 from memory into f23
la x2, scratch
li x3, 0x79fb27ac # load x3 with value 0x79fb27ac
sw x3, 0(x2) # store 0x79fb27ac in memory
flw f28, 0(x2) # load 0x79fb27ac from memory into f28
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f22, 0(x2) # load 0xffffffff from memory into f22
fnmsub.s f14, f23, f28, f22, dyn # perform operation
fnmsub.s f14, f23, f28, f22, rdn # perform operation
fnmsub.s f14, f23, f28, f22, rmm # perform operation
fnmsub.s f14, f23, f28, f22, rne # perform operation
fnmsub.s f14, f23, f28, f22, rtz # perform operation
fnmsub.s f14, f23, f28, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f14, f23, f28, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f14, f23, f28, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f14, f23, f28, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f14, f23, f28, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f14, f23, f28, f22 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0x7f800001)
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f5, 0(x2) # load 0x80800000 from memory into f5
la x2, scratch
li x3, 0xc897e93e # load x3 with value 0xc897e93e
sw x3, 0(x2) # store 0xc897e93e in memory
flw f3, 0(x2) # load 0xc897e93e from memory into f3
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f28, 0(x2) # load 0x7f800001 from memory into f28
fnmsub.s f30, f5, f3, f28, dyn # perform operation
fnmsub.s f30, f5, f3, f28, rdn # perform operation
fnmsub.s f30, f5, f3, f28, rmm # perform operation
fnmsub.s f30, f5, f3, f28, rne # perform operation
fnmsub.s f30, f5, f3, f28, rtz # perform operation
fnmsub.s f30, f5, f3, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f30, f5, f3, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f30, f5, f3, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f30, f5, f3, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f30, f5, f3, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f30, f5, f3, f28 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0x7fbfffff)
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f5, 0(x2) # load 0x80800000 from memory into f5
la x2, scratch
li x3, 0x0d84b7b1 # load x3 with value 0x0d84b7b1
sw x3, 0(x2) # store 0x0d84b7b1 in memory
flw f3, 0(x2) # load 0x0d84b7b1 from memory into f3
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f14, 0(x2) # load 0x7fbfffff from memory into f14
fnmsub.s f9, f5, f3, f14, dyn # perform operation
fnmsub.s f9, f5, f3, f14, rdn # perform operation
fnmsub.s f9, f5, f3, f14, rmm # perform operation
fnmsub.s f9, f5, f3, f14, rne # perform operation
fnmsub.s f9, f5, f3, f14, rtz # perform operation
fnmsub.s f9, f5, f3, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f9, f5, f3, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f9, f5, f3, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f9, f5, f3, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f9, f5, f3, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f9, f5, f3, f14 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0xffbfffff)
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f1, 0(x2) # load 0x80800000 from memory into f1
la x2, scratch
li x3, 0xac7d3460 # load x3 with value 0xac7d3460
sw x3, 0(x2) # store 0xac7d3460 in memory
flw f18, 0(x2) # load 0xac7d3460 from memory into f18
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f6, 0(x2) # load 0xffbfffff from memory into f6
fnmsub.s f2, f1, f18, f6, dyn # perform operation
fnmsub.s f2, f1, f18, f6, rdn # perform operation
fnmsub.s f2, f1, f18, f6, rmm # perform operation
fnmsub.s f2, f1, f18, f6, rne # perform operation
fnmsub.s f2, f1, f18, f6, rtz # perform operation
fnmsub.s f2, f1, f18, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f2, f1, f18, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f2, f1, f18, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f2, f1, f18, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f2, f1, f18, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f2, f1, f18, f6 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0x7ef8654f)
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f6, 0(x2) # load 0x80800000 from memory into f6
la x2, scratch
li x3, 0x84d31a30 # load x3 with value 0x84d31a30
sw x3, 0(x2) # store 0x84d31a30 in memory
flw f24, 0(x2) # load 0x84d31a30 from memory into f24
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f29, 0(x2) # load 0x7ef8654f from memory into f29
fnmsub.s f31, f6, f24, f29, dyn # perform operation
fnmsub.s f31, f6, f24, f29, rdn # perform operation
fnmsub.s f31, f6, f24, f29, rmm # perform operation
fnmsub.s f31, f6, f24, f29, rne # perform operation
fnmsub.s f31, f6, f24, f29, rtz # perform operation
fnmsub.s f31, f6, f24, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f31, f6, f24, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f31, f6, f24, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f31, f6, f24, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f31, f6, f24, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f31, f6, f24, f29 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0x813d9ab0)
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f11, 0(x2) # load 0x80800000 from memory into f11
la x2, scratch
li x3, 0x536c5963 # load x3 with value 0x536c5963
sw x3, 0(x2) # store 0x536c5963 in memory
flw f16, 0(x2) # load 0x536c5963 from memory into f16
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f1, 0(x2) # load 0x813d9ab0 from memory into f1
fnmsub.s f6, f11, f16, f1, dyn # perform operation
fnmsub.s f6, f11, f16, f1, rdn # perform operation
fnmsub.s f6, f11, f16, f1, rmm # perform operation
fnmsub.s f6, f11, f16, f1, rne # perform operation
fnmsub.s f6, f11, f16, f1, rtz # perform operation
fnmsub.s f6, f11, f16, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f6, f11, f16, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f6, f11, f16, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f6, f11, f16, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f6, f11, f16, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f6, f11, f16, f1 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0x0)
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f15, 0(x2) # load 0x7f7fffff from memory into f15
la x2, scratch
li x3, 0xe2c051f9 # load x3 with value 0xe2c051f9
sw x3, 0(x2) # store 0xe2c051f9 in memory
flw f11, 0(x2) # load 0xe2c051f9 from memory into f11
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f10, 0(x2) # load 0x00000000 from memory into f10
fnmsub.s f8, f15, f11, f10, dyn # perform operation
fnmsub.s f8, f15, f11, f10, rdn # perform operation
fnmsub.s f8, f15, f11, f10, rmm # perform operation
fnmsub.s f8, f15, f11, f10, rne # perform operation
fnmsub.s f8, f15, f11, f10, rtz # perform operation
fnmsub.s f8, f15, f11, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f8, f15, f11, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f8, f15, f11, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f8, f15, f11, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f8, f15, f11, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f8, f15, f11, f10 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0x80000000)
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f12, 0(x2) # load 0x7f7fffff from memory into f12
la x2, scratch
li x3, 0x9f756852 # load x3 with value 0x9f756852
sw x3, 0(x2) # store 0x9f756852 in memory
flw f30, 0(x2) # load 0x9f756852 from memory into f30
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f18, 0(x2) # load 0x80000000 from memory into f18
fnmsub.s f7, f12, f30, f18, dyn # perform operation
fnmsub.s f7, f12, f30, f18, rdn # perform operation
fnmsub.s f7, f12, f30, f18, rmm # perform operation
fnmsub.s f7, f12, f30, f18, rne # perform operation
fnmsub.s f7, f12, f30, f18, rtz # perform operation
fnmsub.s f7, f12, f30, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f7, f12, f30, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f7, f12, f30, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f7, f12, f30, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f7, f12, f30, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f7, f12, f30, f18 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0x3f800000)
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f22, 0(x2) # load 0x7f7fffff from memory into f22
la x2, scratch
li x3, 0x5a3b5fa1 # load x3 with value 0x5a3b5fa1
sw x3, 0(x2) # store 0x5a3b5fa1 in memory
flw f29, 0(x2) # load 0x5a3b5fa1 from memory into f29
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f13, 0(x2) # load 0x3f800000 from memory into f13
fnmsub.s f27, f22, f29, f13, dyn # perform operation
fnmsub.s f27, f22, f29, f13, rdn # perform operation
fnmsub.s f27, f22, f29, f13, rmm # perform operation
fnmsub.s f27, f22, f29, f13, rne # perform operation
fnmsub.s f27, f22, f29, f13, rtz # perform operation
fnmsub.s f27, f22, f29, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f27, f22, f29, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f27, f22, f29, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f27, f22, f29, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f27, f22, f29, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f27, f22, f29, f13 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0xbf800000)
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f13, 0(x2) # load 0x7f7fffff from memory into f13
la x2, scratch
li x3, 0xbe858455 # load x3 with value 0xbe858455
sw x3, 0(x2) # store 0xbe858455 in memory
flw f15, 0(x2) # load 0xbe858455 from memory into f15
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f9, 0(x2) # load 0xbf800000 from memory into f9
fnmsub.s f31, f13, f15, f9, dyn # perform operation
fnmsub.s f31, f13, f15, f9, rdn # perform operation
fnmsub.s f31, f13, f15, f9, rmm # perform operation
fnmsub.s f31, f13, f15, f9, rne # perform operation
fnmsub.s f31, f13, f15, f9, rtz # perform operation
fnmsub.s f31, f13, f15, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f31, f13, f15, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f31, f13, f15, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f31, f13, f15, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f31, f13, f15, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f31, f13, f15, f9 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0x3fc00000)
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f8, 0(x2) # load 0x7f7fffff from memory into f8
la x2, scratch
li x3, 0x45c3d1d3 # load x3 with value 0x45c3d1d3
sw x3, 0(x2) # store 0x45c3d1d3 in memory
flw f21, 0(x2) # load 0x45c3d1d3 from memory into f21
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f14, 0(x2) # load 0x3fc00000 from memory into f14
fnmsub.s f7, f8, f21, f14, dyn # perform operation
fnmsub.s f7, f8, f21, f14, rdn # perform operation
fnmsub.s f7, f8, f21, f14, rmm # perform operation
fnmsub.s f7, f8, f21, f14, rne # perform operation
fnmsub.s f7, f8, f21, f14, rtz # perform operation
fnmsub.s f7, f8, f21, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f7, f8, f21, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f7, f8, f21, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f7, f8, f21, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f7, f8, f21, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f7, f8, f21, f14 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0xbfc00000)
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f10, 0(x2) # load 0x7f7fffff from memory into f10
la x2, scratch
li x3, 0x4c9794aa # load x3 with value 0x4c9794aa
sw x3, 0(x2) # store 0x4c9794aa in memory
flw f16, 0(x2) # load 0x4c9794aa from memory into f16
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f20, 0(x2) # load 0xbfc00000 from memory into f20
fnmsub.s f23, f10, f16, f20, dyn # perform operation
fnmsub.s f23, f10, f16, f20, rdn # perform operation
fnmsub.s f23, f10, f16, f20, rmm # perform operation
fnmsub.s f23, f10, f16, f20, rne # perform operation
fnmsub.s f23, f10, f16, f20, rtz # perform operation
fnmsub.s f23, f10, f16, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f23, f10, f16, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f23, f10, f16, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f23, f10, f16, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f23, f10, f16, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f23, f10, f16, f20 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0x40000000)
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f10, 0(x2) # load 0x7f7fffff from memory into f10
la x2, scratch
li x3, 0x4e11c5bc # load x3 with value 0x4e11c5bc
sw x3, 0(x2) # store 0x4e11c5bc in memory
flw f20, 0(x2) # load 0x4e11c5bc from memory into f20
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f23, 0(x2) # load 0x40000000 from memory into f23
fnmsub.s f28, f10, f20, f23, dyn # perform operation
fnmsub.s f28, f10, f20, f23, rdn # perform operation
fnmsub.s f28, f10, f20, f23, rmm # perform operation
fnmsub.s f28, f10, f20, f23, rne # perform operation
fnmsub.s f28, f10, f20, f23, rtz # perform operation
fnmsub.s f28, f10, f20, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f28, f10, f20, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f28, f10, f20, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f28, f10, f20, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f28, f10, f20, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f28, f10, f20, f23 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0xc0000000)
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f11, 0(x2) # load 0x7f7fffff from memory into f11
la x2, scratch
li x3, 0x632af800 # load x3 with value 0x632af800
sw x3, 0(x2) # store 0x632af800 in memory
flw f30, 0(x2) # load 0x632af800 from memory into f30
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f10, 0(x2) # load 0xc0000000 from memory into f10
fnmsub.s f15, f11, f30, f10, dyn # perform operation
fnmsub.s f15, f11, f30, f10, rdn # perform operation
fnmsub.s f15, f11, f30, f10, rmm # perform operation
fnmsub.s f15, f11, f30, f10, rne # perform operation
fnmsub.s f15, f11, f30, f10, rtz # perform operation
fnmsub.s f15, f11, f30, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f15, f11, f30, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f15, f11, f30, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f15, f11, f30, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f15, f11, f30, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f15, f11, f30, f10 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0x800000)
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f11, 0(x2) # load 0x7f7fffff from memory into f11
la x2, scratch
li x3, 0xbed25950 # load x3 with value 0xbed25950
sw x3, 0(x2) # store 0xbed25950 in memory
flw f15, 0(x2) # load 0xbed25950 from memory into f15
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f24, 0(x2) # load 0x00800000 from memory into f24
fnmsub.s f1, f11, f15, f24, dyn # perform operation
fnmsub.s f1, f11, f15, f24, rdn # perform operation
fnmsub.s f1, f11, f15, f24, rmm # perform operation
fnmsub.s f1, f11, f15, f24, rne # perform operation
fnmsub.s f1, f11, f15, f24, rtz # perform operation
fnmsub.s f1, f11, f15, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f1, f11, f15, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f1, f11, f15, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f1, f11, f15, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f1, f11, f15, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f1, f11, f15, f24 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0x80800000)
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f27, 0(x2) # load 0x7f7fffff from memory into f27
la x2, scratch
li x3, 0x41ef8bab # load x3 with value 0x41ef8bab
sw x3, 0(x2) # store 0x41ef8bab in memory
flw f12, 0(x2) # load 0x41ef8bab from memory into f12
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f7, 0(x2) # load 0x80800000 from memory into f7
fnmsub.s f3, f27, f12, f7, dyn # perform operation
fnmsub.s f3, f27, f12, f7, rdn # perform operation
fnmsub.s f3, f27, f12, f7, rmm # perform operation
fnmsub.s f3, f27, f12, f7, rne # perform operation
fnmsub.s f3, f27, f12, f7, rtz # perform operation
fnmsub.s f3, f27, f12, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f3, f27, f12, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f3, f27, f12, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f3, f27, f12, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f3, f27, f12, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f3, f27, f12, f7 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0x7f7fffff)
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f11, 0(x2) # load 0x7f7fffff from memory into f11
la x2, scratch
li x3, 0xcae0acb6 # load x3 with value 0xcae0acb6
sw x3, 0(x2) # store 0xcae0acb6 in memory
flw f18, 0(x2) # load 0xcae0acb6 from memory into f18
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f1, 0(x2) # load 0x7f7fffff from memory into f1
fnmsub.s f3, f11, f18, f1, dyn # perform operation
fnmsub.s f3, f11, f18, f1, rdn # perform operation
fnmsub.s f3, f11, f18, f1, rmm # perform operation
fnmsub.s f3, f11, f18, f1, rne # perform operation
fnmsub.s f3, f11, f18, f1, rtz # perform operation
fnmsub.s f3, f11, f18, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f3, f11, f18, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f3, f11, f18, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f3, f11, f18, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f3, f11, f18, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f3, f11, f18, f1 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0xff7fffff)
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f1, 0(x2) # load 0x7f7fffff from memory into f1
la x2, scratch
li x3, 0xd853217d # load x3 with value 0xd853217d
sw x3, 0(x2) # store 0xd853217d in memory
flw f22, 0(x2) # load 0xd853217d from memory into f22
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f23, 0(x2) # load 0xff7fffff from memory into f23
fnmsub.s f17, f1, f22, f23, dyn # perform operation
fnmsub.s f17, f1, f22, f23, rdn # perform operation
fnmsub.s f17, f1, f22, f23, rmm # perform operation
fnmsub.s f17, f1, f22, f23, rne # perform operation
fnmsub.s f17, f1, f22, f23, rtz # perform operation
fnmsub.s f17, f1, f22, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f17, f1, f22, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f17, f1, f22, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f17, f1, f22, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f17, f1, f22, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f17, f1, f22, f23 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0x7fffff)
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f23, 0(x2) # load 0x7f7fffff from memory into f23
la x2, scratch
li x3, 0x36e16f58 # load x3 with value 0x36e16f58
sw x3, 0(x2) # store 0x36e16f58 in memory
flw f7, 0(x2) # load 0x36e16f58 from memory into f7
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f25, 0(x2) # load 0x007fffff from memory into f25
fnmsub.s f10, f23, f7, f25, dyn # perform operation
fnmsub.s f10, f23, f7, f25, rdn # perform operation
fnmsub.s f10, f23, f7, f25, rmm # perform operation
fnmsub.s f10, f23, f7, f25, rne # perform operation
fnmsub.s f10, f23, f7, f25, rtz # perform operation
fnmsub.s f10, f23, f7, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f10, f23, f7, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f10, f23, f7, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f10, f23, f7, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f10, f23, f7, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f10, f23, f7, f25 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0x807fffff)
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f2, 0(x2) # load 0x7f7fffff from memory into f2
la x2, scratch
li x3, 0x1a961b0b # load x3 with value 0x1a961b0b
sw x3, 0(x2) # store 0x1a961b0b in memory
flw f28, 0(x2) # load 0x1a961b0b from memory into f28
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f1, 0(x2) # load 0x807fffff from memory into f1
fnmsub.s f20, f2, f28, f1, dyn # perform operation
fnmsub.s f20, f2, f28, f1, rdn # perform operation
fnmsub.s f20, f2, f28, f1, rmm # perform operation
fnmsub.s f20, f2, f28, f1, rne # perform operation
fnmsub.s f20, f2, f28, f1, rtz # perform operation
fnmsub.s f20, f2, f28, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f20, f2, f28, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f20, f2, f28, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f20, f2, f28, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f20, f2, f28, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f20, f2, f28, f1 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0x400000)
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f31, 0(x2) # load 0x7f7fffff from memory into f31
la x2, scratch
li x3, 0x59fcd520 # load x3 with value 0x59fcd520
sw x3, 0(x2) # store 0x59fcd520 in memory
flw f11, 0(x2) # load 0x59fcd520 from memory into f11
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f27, 0(x2) # load 0x00400000 from memory into f27
fnmsub.s f8, f31, f11, f27, dyn # perform operation
fnmsub.s f8, f31, f11, f27, rdn # perform operation
fnmsub.s f8, f31, f11, f27, rmm # perform operation
fnmsub.s f8, f31, f11, f27, rne # perform operation
fnmsub.s f8, f31, f11, f27, rtz # perform operation
fnmsub.s f8, f31, f11, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f8, f31, f11, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f8, f31, f11, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f8, f31, f11, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f8, f31, f11, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f8, f31, f11, f27 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0x80400000)
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f24, 0(x2) # load 0x7f7fffff from memory into f24
la x2, scratch
li x3, 0x39c81375 # load x3 with value 0x39c81375
sw x3, 0(x2) # store 0x39c81375 in memory
flw f19, 0(x2) # load 0x39c81375 from memory into f19
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f15, 0(x2) # load 0x80400000 from memory into f15
fnmsub.s f27, f24, f19, f15, dyn # perform operation
fnmsub.s f27, f24, f19, f15, rdn # perform operation
fnmsub.s f27, f24, f19, f15, rmm # perform operation
fnmsub.s f27, f24, f19, f15, rne # perform operation
fnmsub.s f27, f24, f19, f15, rtz # perform operation
fnmsub.s f27, f24, f19, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f27, f24, f19, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f27, f24, f19, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f27, f24, f19, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f27, f24, f19, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f27, f24, f19, f15 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0x1)
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f6, 0(x2) # load 0x7f7fffff from memory into f6
la x2, scratch
li x3, 0x70d47087 # load x3 with value 0x70d47087
sw x3, 0(x2) # store 0x70d47087 in memory
flw f11, 0(x2) # load 0x70d47087 from memory into f11
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f17, 0(x2) # load 0x00000001 from memory into f17
fnmsub.s f23, f6, f11, f17, dyn # perform operation
fnmsub.s f23, f6, f11, f17, rdn # perform operation
fnmsub.s f23, f6, f11, f17, rmm # perform operation
fnmsub.s f23, f6, f11, f17, rne # perform operation
fnmsub.s f23, f6, f11, f17, rtz # perform operation
fnmsub.s f23, f6, f11, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f23, f6, f11, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f23, f6, f11, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f23, f6, f11, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f23, f6, f11, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f23, f6, f11, f17 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0x80000001)
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f19, 0(x2) # load 0x7f7fffff from memory into f19
la x2, scratch
li x3, 0x0888192a # load x3 with value 0x0888192a
sw x3, 0(x2) # store 0x0888192a in memory
flw f20, 0(x2) # load 0x0888192a from memory into f20
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f15, 0(x2) # load 0x80000001 from memory into f15
fnmsub.s f22, f19, f20, f15, dyn # perform operation
fnmsub.s f22, f19, f20, f15, rdn # perform operation
fnmsub.s f22, f19, f20, f15, rmm # perform operation
fnmsub.s f22, f19, f20, f15, rne # perform operation
fnmsub.s f22, f19, f20, f15, rtz # perform operation
fnmsub.s f22, f19, f20, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f22, f19, f20, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f22, f19, f20, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f22, f19, f20, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f22, f19, f20, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f22, f19, f20, f15 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0x7f800000)
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f22, 0(x2) # load 0x7f7fffff from memory into f22
la x2, scratch
li x3, 0x3ee0d67c # load x3 with value 0x3ee0d67c
sw x3, 0(x2) # store 0x3ee0d67c in memory
flw f8, 0(x2) # load 0x3ee0d67c from memory into f8
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f29, 0(x2) # load 0x7f800000 from memory into f29
fnmsub.s f14, f22, f8, f29, dyn # perform operation
fnmsub.s f14, f22, f8, f29, rdn # perform operation
fnmsub.s f14, f22, f8, f29, rmm # perform operation
fnmsub.s f14, f22, f8, f29, rne # perform operation
fnmsub.s f14, f22, f8, f29, rtz # perform operation
fnmsub.s f14, f22, f8, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f14, f22, f8, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f14, f22, f8, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f14, f22, f8, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f14, f22, f8, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f14, f22, f8, f29 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0xff800000)
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f10, 0(x2) # load 0x7f7fffff from memory into f10
la x2, scratch
li x3, 0xc4f707e4 # load x3 with value 0xc4f707e4
sw x3, 0(x2) # store 0xc4f707e4 in memory
flw f6, 0(x2) # load 0xc4f707e4 from memory into f6
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f1, 0(x2) # load 0xff800000 from memory into f1
fnmsub.s f29, f10, f6, f1, dyn # perform operation
fnmsub.s f29, f10, f6, f1, rdn # perform operation
fnmsub.s f29, f10, f6, f1, rmm # perform operation
fnmsub.s f29, f10, f6, f1, rne # perform operation
fnmsub.s f29, f10, f6, f1, rtz # perform operation
fnmsub.s f29, f10, f6, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f29, f10, f6, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f29, f10, f6, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f29, f10, f6, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f29, f10, f6, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f29, f10, f6, f1 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0x7fc00000)
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f24, 0(x2) # load 0x7f7fffff from memory into f24
la x2, scratch
li x3, 0xeabccf39 # load x3 with value 0xeabccf39
sw x3, 0(x2) # store 0xeabccf39 in memory
flw f16, 0(x2) # load 0xeabccf39 from memory into f16
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f27, 0(x2) # load 0x7fc00000 from memory into f27
fnmsub.s f15, f24, f16, f27, dyn # perform operation
fnmsub.s f15, f24, f16, f27, rdn # perform operation
fnmsub.s f15, f24, f16, f27, rmm # perform operation
fnmsub.s f15, f24, f16, f27, rne # perform operation
fnmsub.s f15, f24, f16, f27, rtz # perform operation
fnmsub.s f15, f24, f16, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f15, f24, f16, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f15, f24, f16, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f15, f24, f16, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f15, f24, f16, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f15, f24, f16, f27 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0x7fffffff)
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f5, 0(x2) # load 0x7f7fffff from memory into f5
la x2, scratch
li x3, 0x417a8b7a # load x3 with value 0x417a8b7a
sw x3, 0(x2) # store 0x417a8b7a in memory
flw f22, 0(x2) # load 0x417a8b7a from memory into f22
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f24, 0(x2) # load 0x7fffffff from memory into f24
fnmsub.s f31, f5, f22, f24, dyn # perform operation
fnmsub.s f31, f5, f22, f24, rdn # perform operation
fnmsub.s f31, f5, f22, f24, rmm # perform operation
fnmsub.s f31, f5, f22, f24, rne # perform operation
fnmsub.s f31, f5, f22, f24, rtz # perform operation
fnmsub.s f31, f5, f22, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f31, f5, f22, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f31, f5, f22, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f31, f5, f22, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f31, f5, f22, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f31, f5, f22, f24 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0xffffffff)
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f29, 0(x2) # load 0x7f7fffff from memory into f29
la x2, scratch
li x3, 0xe4be176f # load x3 with value 0xe4be176f
sw x3, 0(x2) # store 0xe4be176f in memory
flw f12, 0(x2) # load 0xe4be176f from memory into f12
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f9, 0(x2) # load 0xffffffff from memory into f9
fnmsub.s f26, f29, f12, f9, dyn # perform operation
fnmsub.s f26, f29, f12, f9, rdn # perform operation
fnmsub.s f26, f29, f12, f9, rmm # perform operation
fnmsub.s f26, f29, f12, f9, rne # perform operation
fnmsub.s f26, f29, f12, f9, rtz # perform operation
fnmsub.s f26, f29, f12, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f26, f29, f12, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f26, f29, f12, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f26, f29, f12, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f26, f29, f12, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f26, f29, f12, f9 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0x7f800001)
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f16, 0(x2) # load 0x7f7fffff from memory into f16
la x2, scratch
li x3, 0xaf1db336 # load x3 with value 0xaf1db336
sw x3, 0(x2) # store 0xaf1db336 in memory
flw f5, 0(x2) # load 0xaf1db336 from memory into f5
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f9, 0(x2) # load 0x7f800001 from memory into f9
fnmsub.s f3, f16, f5, f9, dyn # perform operation
fnmsub.s f3, f16, f5, f9, rdn # perform operation
fnmsub.s f3, f16, f5, f9, rmm # perform operation
fnmsub.s f3, f16, f5, f9, rne # perform operation
fnmsub.s f3, f16, f5, f9, rtz # perform operation
fnmsub.s f3, f16, f5, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f3, f16, f5, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f3, f16, f5, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f3, f16, f5, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f3, f16, f5, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f3, f16, f5, f9 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0x7fbfffff)
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f27, 0(x2) # load 0x7f7fffff from memory into f27
la x2, scratch
li x3, 0x9f6532a9 # load x3 with value 0x9f6532a9
sw x3, 0(x2) # store 0x9f6532a9 in memory
flw f12, 0(x2) # load 0x9f6532a9 from memory into f12
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f17, 0(x2) # load 0x7fbfffff from memory into f17
fnmsub.s f24, f27, f12, f17, dyn # perform operation
fnmsub.s f24, f27, f12, f17, rdn # perform operation
fnmsub.s f24, f27, f12, f17, rmm # perform operation
fnmsub.s f24, f27, f12, f17, rne # perform operation
fnmsub.s f24, f27, f12, f17, rtz # perform operation
fnmsub.s f24, f27, f12, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f24, f27, f12, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f24, f27, f12, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f24, f27, f12, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f24, f27, f12, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f24, f27, f12, f17 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0xffbfffff)
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f25, 0(x2) # load 0x7f7fffff from memory into f25
la x2, scratch
li x3, 0xe605a686 # load x3 with value 0xe605a686
sw x3, 0(x2) # store 0xe605a686 in memory
flw f6, 0(x2) # load 0xe605a686 from memory into f6
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f11, 0(x2) # load 0xffbfffff from memory into f11
fnmsub.s f8, f25, f6, f11, dyn # perform operation
fnmsub.s f8, f25, f6, f11, rdn # perform operation
fnmsub.s f8, f25, f6, f11, rmm # perform operation
fnmsub.s f8, f25, f6, f11, rne # perform operation
fnmsub.s f8, f25, f6, f11, rtz # perform operation
fnmsub.s f8, f25, f6, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f8, f25, f6, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f8, f25, f6, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f8, f25, f6, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f8, f25, f6, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f8, f25, f6, f11 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0x7ef8654f)
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f11, 0(x2) # load 0x7f7fffff from memory into f11
la x2, scratch
li x3, 0x72435828 # load x3 with value 0x72435828
sw x3, 0(x2) # store 0x72435828 in memory
flw f30, 0(x2) # load 0x72435828 from memory into f30
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f1, 0(x2) # load 0x7ef8654f from memory into f1
fnmsub.s f12, f11, f30, f1, dyn # perform operation
fnmsub.s f12, f11, f30, f1, rdn # perform operation
fnmsub.s f12, f11, f30, f1, rmm # perform operation
fnmsub.s f12, f11, f30, f1, rne # perform operation
fnmsub.s f12, f11, f30, f1, rtz # perform operation
fnmsub.s f12, f11, f30, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f12, f11, f30, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f12, f11, f30, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f12, f11, f30, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f12, f11, f30, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f12, f11, f30, f1 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0x813d9ab0)
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f2, 0(x2) # load 0x7f7fffff from memory into f2
la x2, scratch
li x3, 0xd318f9c2 # load x3 with value 0xd318f9c2
sw x3, 0(x2) # store 0xd318f9c2 in memory
flw f17, 0(x2) # load 0xd318f9c2 from memory into f17
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f22, 0(x2) # load 0x813d9ab0 from memory into f22
fnmsub.s f6, f2, f17, f22, dyn # perform operation
fnmsub.s f6, f2, f17, f22, rdn # perform operation
fnmsub.s f6, f2, f17, f22, rmm # perform operation
fnmsub.s f6, f2, f17, f22, rne # perform operation
fnmsub.s f6, f2, f17, f22, rtz # perform operation
fnmsub.s f6, f2, f17, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f6, f2, f17, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f6, f2, f17, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f6, f2, f17, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f6, f2, f17, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f6, f2, f17, f22 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0x0)
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f26, 0(x2) # load 0xff7fffff from memory into f26
la x2, scratch
li x3, 0x5d4753a0 # load x3 with value 0x5d4753a0
sw x3, 0(x2) # store 0x5d4753a0 in memory
flw f15, 0(x2) # load 0x5d4753a0 from memory into f15
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f25, 0(x2) # load 0x00000000 from memory into f25
fnmsub.s f31, f26, f15, f25, dyn # perform operation
fnmsub.s f31, f26, f15, f25, rdn # perform operation
fnmsub.s f31, f26, f15, f25, rmm # perform operation
fnmsub.s f31, f26, f15, f25, rne # perform operation
fnmsub.s f31, f26, f15, f25, rtz # perform operation
fnmsub.s f31, f26, f15, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f31, f26, f15, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f31, f26, f15, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f31, f26, f15, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f31, f26, f15, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f31, f26, f15, f25 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0x80000000)
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f10, 0(x2) # load 0xff7fffff from memory into f10
la x2, scratch
li x3, 0x17b4eb02 # load x3 with value 0x17b4eb02
sw x3, 0(x2) # store 0x17b4eb02 in memory
flw f24, 0(x2) # load 0x17b4eb02 from memory into f24
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f7, 0(x2) # load 0x80000000 from memory into f7
fnmsub.s f18, f10, f24, f7, dyn # perform operation
fnmsub.s f18, f10, f24, f7, rdn # perform operation
fnmsub.s f18, f10, f24, f7, rmm # perform operation
fnmsub.s f18, f10, f24, f7, rne # perform operation
fnmsub.s f18, f10, f24, f7, rtz # perform operation
fnmsub.s f18, f10, f24, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f18, f10, f24, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f18, f10, f24, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f18, f10, f24, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f18, f10, f24, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f18, f10, f24, f7 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0x3f800000)
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f28, 0(x2) # load 0xff7fffff from memory into f28
la x2, scratch
li x3, 0xb077bd84 # load x3 with value 0xb077bd84
sw x3, 0(x2) # store 0xb077bd84 in memory
flw f21, 0(x2) # load 0xb077bd84 from memory into f21
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f13, 0(x2) # load 0x3f800000 from memory into f13
fnmsub.s f6, f28, f21, f13, dyn # perform operation
fnmsub.s f6, f28, f21, f13, rdn # perform operation
fnmsub.s f6, f28, f21, f13, rmm # perform operation
fnmsub.s f6, f28, f21, f13, rne # perform operation
fnmsub.s f6, f28, f21, f13, rtz # perform operation
fnmsub.s f6, f28, f21, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f6, f28, f21, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f6, f28, f21, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f6, f28, f21, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f6, f28, f21, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f6, f28, f21, f13 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0xbf800000)
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f10, 0(x2) # load 0xff7fffff from memory into f10
la x2, scratch
li x3, 0x9d73feda # load x3 with value 0x9d73feda
sw x3, 0(x2) # store 0x9d73feda in memory
flw f18, 0(x2) # load 0x9d73feda from memory into f18
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f22, 0(x2) # load 0xbf800000 from memory into f22
fnmsub.s f20, f10, f18, f22, dyn # perform operation
fnmsub.s f20, f10, f18, f22, rdn # perform operation
fnmsub.s f20, f10, f18, f22, rmm # perform operation
fnmsub.s f20, f10, f18, f22, rne # perform operation
fnmsub.s f20, f10, f18, f22, rtz # perform operation
fnmsub.s f20, f10, f18, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f20, f10, f18, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f20, f10, f18, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f20, f10, f18, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f20, f10, f18, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f20, f10, f18, f22 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0x3fc00000)
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f29, 0(x2) # load 0xff7fffff from memory into f29
la x2, scratch
li x3, 0xf02e2b44 # load x3 with value 0xf02e2b44
sw x3, 0(x2) # store 0xf02e2b44 in memory
flw f19, 0(x2) # load 0xf02e2b44 from memory into f19
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f3, 0(x2) # load 0x3fc00000 from memory into f3
fnmsub.s f10, f29, f19, f3, dyn # perform operation
fnmsub.s f10, f29, f19, f3, rdn # perform operation
fnmsub.s f10, f29, f19, f3, rmm # perform operation
fnmsub.s f10, f29, f19, f3, rne # perform operation
fnmsub.s f10, f29, f19, f3, rtz # perform operation
fnmsub.s f10, f29, f19, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f10, f29, f19, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f10, f29, f19, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f10, f29, f19, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f10, f29, f19, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f10, f29, f19, f3 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0xbfc00000)
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f5, 0(x2) # load 0xff7fffff from memory into f5
la x2, scratch
li x3, 0xd2321ef0 # load x3 with value 0xd2321ef0
sw x3, 0(x2) # store 0xd2321ef0 in memory
flw f31, 0(x2) # load 0xd2321ef0 from memory into f31
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f2, 0(x2) # load 0xbfc00000 from memory into f2
fnmsub.s f16, f5, f31, f2, dyn # perform operation
fnmsub.s f16, f5, f31, f2, rdn # perform operation
fnmsub.s f16, f5, f31, f2, rmm # perform operation
fnmsub.s f16, f5, f31, f2, rne # perform operation
fnmsub.s f16, f5, f31, f2, rtz # perform operation
fnmsub.s f16, f5, f31, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f16, f5, f31, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f16, f5, f31, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f16, f5, f31, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f16, f5, f31, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f16, f5, f31, f2 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0x40000000)
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f15, 0(x2) # load 0xff7fffff from memory into f15
la x2, scratch
li x3, 0x91bd5bf2 # load x3 with value 0x91bd5bf2
sw x3, 0(x2) # store 0x91bd5bf2 in memory
flw f16, 0(x2) # load 0x91bd5bf2 from memory into f16
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f20, 0(x2) # load 0x40000000 from memory into f20
fnmsub.s f27, f15, f16, f20, dyn # perform operation
fnmsub.s f27, f15, f16, f20, rdn # perform operation
fnmsub.s f27, f15, f16, f20, rmm # perform operation
fnmsub.s f27, f15, f16, f20, rne # perform operation
fnmsub.s f27, f15, f16, f20, rtz # perform operation
fnmsub.s f27, f15, f16, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f27, f15, f16, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f27, f15, f16, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f27, f15, f16, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f27, f15, f16, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f27, f15, f16, f20 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0xc0000000)
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f12, 0(x2) # load 0xff7fffff from memory into f12
la x2, scratch
li x3, 0x4bbdda2b # load x3 with value 0x4bbdda2b
sw x3, 0(x2) # store 0x4bbdda2b in memory
flw f28, 0(x2) # load 0x4bbdda2b from memory into f28
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f7, 0(x2) # load 0xc0000000 from memory into f7
fnmsub.s f15, f12, f28, f7, dyn # perform operation
fnmsub.s f15, f12, f28, f7, rdn # perform operation
fnmsub.s f15, f12, f28, f7, rmm # perform operation
fnmsub.s f15, f12, f28, f7, rne # perform operation
fnmsub.s f15, f12, f28, f7, rtz # perform operation
fnmsub.s f15, f12, f28, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f15, f12, f28, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f15, f12, f28, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f15, f12, f28, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f15, f12, f28, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f15, f12, f28, f7 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0x800000)
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f29, 0(x2) # load 0xff7fffff from memory into f29
la x2, scratch
li x3, 0x0a6a200c # load x3 with value 0x0a6a200c
sw x3, 0(x2) # store 0x0a6a200c in memory
flw f13, 0(x2) # load 0x0a6a200c from memory into f13
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f30, 0(x2) # load 0x00800000 from memory into f30
fnmsub.s f11, f29, f13, f30, dyn # perform operation
fnmsub.s f11, f29, f13, f30, rdn # perform operation
fnmsub.s f11, f29, f13, f30, rmm # perform operation
fnmsub.s f11, f29, f13, f30, rne # perform operation
fnmsub.s f11, f29, f13, f30, rtz # perform operation
fnmsub.s f11, f29, f13, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f11, f29, f13, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f11, f29, f13, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f11, f29, f13, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f11, f29, f13, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f11, f29, f13, f30 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0x80800000)
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f11, 0(x2) # load 0xff7fffff from memory into f11
la x2, scratch
li x3, 0x7d40a89f # load x3 with value 0x7d40a89f
sw x3, 0(x2) # store 0x7d40a89f in memory
flw f17, 0(x2) # load 0x7d40a89f from memory into f17
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f12, 0(x2) # load 0x80800000 from memory into f12
fnmsub.s f18, f11, f17, f12, dyn # perform operation
fnmsub.s f18, f11, f17, f12, rdn # perform operation
fnmsub.s f18, f11, f17, f12, rmm # perform operation
fnmsub.s f18, f11, f17, f12, rne # perform operation
fnmsub.s f18, f11, f17, f12, rtz # perform operation
fnmsub.s f18, f11, f17, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f18, f11, f17, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f18, f11, f17, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f18, f11, f17, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f18, f11, f17, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f18, f11, f17, f12 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0x7f7fffff)
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f20, 0(x2) # load 0xff7fffff from memory into f20
la x2, scratch
li x3, 0x83e93018 # load x3 with value 0x83e93018
sw x3, 0(x2) # store 0x83e93018 in memory
flw f8, 0(x2) # load 0x83e93018 from memory into f8
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f7, 0(x2) # load 0x7f7fffff from memory into f7
fnmsub.s f5, f20, f8, f7, dyn # perform operation
fnmsub.s f5, f20, f8, f7, rdn # perform operation
fnmsub.s f5, f20, f8, f7, rmm # perform operation
fnmsub.s f5, f20, f8, f7, rne # perform operation
fnmsub.s f5, f20, f8, f7, rtz # perform operation
fnmsub.s f5, f20, f8, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f5, f20, f8, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f5, f20, f8, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f5, f20, f8, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f5, f20, f8, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f5, f20, f8, f7 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0xff7fffff)
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f16, 0(x2) # load 0xff7fffff from memory into f16
la x2, scratch
li x3, 0x89d81e4b # load x3 with value 0x89d81e4b
sw x3, 0(x2) # store 0x89d81e4b in memory
flw f31, 0(x2) # load 0x89d81e4b from memory into f31
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f2, 0(x2) # load 0xff7fffff from memory into f2
fnmsub.s f20, f16, f31, f2, dyn # perform operation
fnmsub.s f20, f16, f31, f2, rdn # perform operation
fnmsub.s f20, f16, f31, f2, rmm # perform operation
fnmsub.s f20, f16, f31, f2, rne # perform operation
fnmsub.s f20, f16, f31, f2, rtz # perform operation
fnmsub.s f20, f16, f31, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f20, f16, f31, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f20, f16, f31, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f20, f16, f31, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f20, f16, f31, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f20, f16, f31, f2 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0x7fffff)
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f27, 0(x2) # load 0xff7fffff from memory into f27
la x2, scratch
li x3, 0xdfe84620 # load x3 with value 0xdfe84620
sw x3, 0(x2) # store 0xdfe84620 in memory
flw f22, 0(x2) # load 0xdfe84620 from memory into f22
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f29, 0(x2) # load 0x007fffff from memory into f29
fnmsub.s f10, f27, f22, f29, dyn # perform operation
fnmsub.s f10, f27, f22, f29, rdn # perform operation
fnmsub.s f10, f27, f22, f29, rmm # perform operation
fnmsub.s f10, f27, f22, f29, rne # perform operation
fnmsub.s f10, f27, f22, f29, rtz # perform operation
fnmsub.s f10, f27, f22, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f10, f27, f22, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f10, f27, f22, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f10, f27, f22, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f10, f27, f22, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f10, f27, f22, f29 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0x807fffff)
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f1, 0(x2) # load 0xff7fffff from memory into f1
la x2, scratch
li x3, 0x93ee947a # load x3 with value 0x93ee947a
sw x3, 0(x2) # store 0x93ee947a in memory
flw f3, 0(x2) # load 0x93ee947a from memory into f3
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f19, 0(x2) # load 0x807fffff from memory into f19
fnmsub.s f11, f1, f3, f19, dyn # perform operation
fnmsub.s f11, f1, f3, f19, rdn # perform operation
fnmsub.s f11, f1, f3, f19, rmm # perform operation
fnmsub.s f11, f1, f3, f19, rne # perform operation
fnmsub.s f11, f1, f3, f19, rtz # perform operation
fnmsub.s f11, f1, f3, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f11, f1, f3, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f11, f1, f3, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f11, f1, f3, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f11, f1, f3, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f11, f1, f3, f19 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0x400000)
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f5, 0(x2) # load 0xff7fffff from memory into f5
la x2, scratch
li x3, 0x309c45f2 # load x3 with value 0x309c45f2
sw x3, 0(x2) # store 0x309c45f2 in memory
flw f24, 0(x2) # load 0x309c45f2 from memory into f24
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f6, 0(x2) # load 0x00400000 from memory into f6
fnmsub.s f17, f5, f24, f6, dyn # perform operation
fnmsub.s f17, f5, f24, f6, rdn # perform operation
fnmsub.s f17, f5, f24, f6, rmm # perform operation
fnmsub.s f17, f5, f24, f6, rne # perform operation
fnmsub.s f17, f5, f24, f6, rtz # perform operation
fnmsub.s f17, f5, f24, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f17, f5, f24, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f17, f5, f24, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f17, f5, f24, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f17, f5, f24, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f17, f5, f24, f6 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0x80400000)
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f8, 0(x2) # load 0xff7fffff from memory into f8
la x2, scratch
li x3, 0xffaea224 # load x3 with value 0xffaea224
sw x3, 0(x2) # store 0xffaea224 in memory
flw f16, 0(x2) # load 0xffaea224 from memory into f16
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f23, 0(x2) # load 0x80400000 from memory into f23
fnmsub.s f9, f8, f16, f23, dyn # perform operation
fnmsub.s f9, f8, f16, f23, rdn # perform operation
fnmsub.s f9, f8, f16, f23, rmm # perform operation
fnmsub.s f9, f8, f16, f23, rne # perform operation
fnmsub.s f9, f8, f16, f23, rtz # perform operation
fnmsub.s f9, f8, f16, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f9, f8, f16, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f9, f8, f16, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f9, f8, f16, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f9, f8, f16, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f9, f8, f16, f23 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0x1)
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f9, 0(x2) # load 0xff7fffff from memory into f9
la x2, scratch
li x3, 0xa616f702 # load x3 with value 0xa616f702
sw x3, 0(x2) # store 0xa616f702 in memory
flw f20, 0(x2) # load 0xa616f702 from memory into f20
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f23, 0(x2) # load 0x00000001 from memory into f23
fnmsub.s f11, f9, f20, f23, dyn # perform operation
fnmsub.s f11, f9, f20, f23, rdn # perform operation
fnmsub.s f11, f9, f20, f23, rmm # perform operation
fnmsub.s f11, f9, f20, f23, rne # perform operation
fnmsub.s f11, f9, f20, f23, rtz # perform operation
fnmsub.s f11, f9, f20, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f11, f9, f20, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f11, f9, f20, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f11, f9, f20, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f11, f9, f20, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f11, f9, f20, f23 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0x80000001)
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f13, 0(x2) # load 0xff7fffff from memory into f13
la x2, scratch
li x3, 0xcdb533aa # load x3 with value 0xcdb533aa
sw x3, 0(x2) # store 0xcdb533aa in memory
flw f29, 0(x2) # load 0xcdb533aa from memory into f29
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f23, 0(x2) # load 0x80000001 from memory into f23
fnmsub.s f27, f13, f29, f23, dyn # perform operation
fnmsub.s f27, f13, f29, f23, rdn # perform operation
fnmsub.s f27, f13, f29, f23, rmm # perform operation
fnmsub.s f27, f13, f29, f23, rne # perform operation
fnmsub.s f27, f13, f29, f23, rtz # perform operation
fnmsub.s f27, f13, f29, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f27, f13, f29, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f27, f13, f29, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f27, f13, f29, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f27, f13, f29, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f27, f13, f29, f23 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0x7f800000)
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f16, 0(x2) # load 0xff7fffff from memory into f16
la x2, scratch
li x3, 0xb039464a # load x3 with value 0xb039464a
sw x3, 0(x2) # store 0xb039464a in memory
flw f24, 0(x2) # load 0xb039464a from memory into f24
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f23, 0(x2) # load 0x7f800000 from memory into f23
fnmsub.s f12, f16, f24, f23, dyn # perform operation
fnmsub.s f12, f16, f24, f23, rdn # perform operation
fnmsub.s f12, f16, f24, f23, rmm # perform operation
fnmsub.s f12, f16, f24, f23, rne # perform operation
fnmsub.s f12, f16, f24, f23, rtz # perform operation
fnmsub.s f12, f16, f24, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f12, f16, f24, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f12, f16, f24, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f12, f16, f24, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f12, f16, f24, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f12, f16, f24, f23 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0xff800000)
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f29, 0(x2) # load 0xff7fffff from memory into f29
la x2, scratch
li x3, 0xd6023bc2 # load x3 with value 0xd6023bc2
sw x3, 0(x2) # store 0xd6023bc2 in memory
flw f27, 0(x2) # load 0xd6023bc2 from memory into f27
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f7, 0(x2) # load 0xff800000 from memory into f7
fnmsub.s f13, f29, f27, f7, dyn # perform operation
fnmsub.s f13, f29, f27, f7, rdn # perform operation
fnmsub.s f13, f29, f27, f7, rmm # perform operation
fnmsub.s f13, f29, f27, f7, rne # perform operation
fnmsub.s f13, f29, f27, f7, rtz # perform operation
fnmsub.s f13, f29, f27, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f13, f29, f27, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f13, f29, f27, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f13, f29, f27, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f13, f29, f27, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f13, f29, f27, f7 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0x7fc00000)
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f10, 0(x2) # load 0xff7fffff from memory into f10
la x2, scratch
li x3, 0x40ec1e83 # load x3 with value 0x40ec1e83
sw x3, 0(x2) # store 0x40ec1e83 in memory
flw f9, 0(x2) # load 0x40ec1e83 from memory into f9
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f14, 0(x2) # load 0x7fc00000 from memory into f14
fnmsub.s f23, f10, f9, f14, dyn # perform operation
fnmsub.s f23, f10, f9, f14, rdn # perform operation
fnmsub.s f23, f10, f9, f14, rmm # perform operation
fnmsub.s f23, f10, f9, f14, rne # perform operation
fnmsub.s f23, f10, f9, f14, rtz # perform operation
fnmsub.s f23, f10, f9, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f23, f10, f9, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f23, f10, f9, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f23, f10, f9, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f23, f10, f9, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f23, f10, f9, f14 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0x7fffffff)
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f23, 0(x2) # load 0xff7fffff from memory into f23
la x2, scratch
li x3, 0x9b90b51c # load x3 with value 0x9b90b51c
sw x3, 0(x2) # store 0x9b90b51c in memory
flw f11, 0(x2) # load 0x9b90b51c from memory into f11
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f10, 0(x2) # load 0x7fffffff from memory into f10
fnmsub.s f8, f23, f11, f10, dyn # perform operation
fnmsub.s f8, f23, f11, f10, rdn # perform operation
fnmsub.s f8, f23, f11, f10, rmm # perform operation
fnmsub.s f8, f23, f11, f10, rne # perform operation
fnmsub.s f8, f23, f11, f10, rtz # perform operation
fnmsub.s f8, f23, f11, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f8, f23, f11, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f8, f23, f11, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f8, f23, f11, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f8, f23, f11, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f8, f23, f11, f10 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0xffffffff)
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f6, 0(x2) # load 0xff7fffff from memory into f6
la x2, scratch
li x3, 0xbc4ad9f5 # load x3 with value 0xbc4ad9f5
sw x3, 0(x2) # store 0xbc4ad9f5 in memory
flw f21, 0(x2) # load 0xbc4ad9f5 from memory into f21
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f3, 0(x2) # load 0xffffffff from memory into f3
fnmsub.s f27, f6, f21, f3, dyn # perform operation
fnmsub.s f27, f6, f21, f3, rdn # perform operation
fnmsub.s f27, f6, f21, f3, rmm # perform operation
fnmsub.s f27, f6, f21, f3, rne # perform operation
fnmsub.s f27, f6, f21, f3, rtz # perform operation
fnmsub.s f27, f6, f21, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f27, f6, f21, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f27, f6, f21, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f27, f6, f21, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f27, f6, f21, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f27, f6, f21, f3 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0x7f800001)
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f8, 0(x2) # load 0xff7fffff from memory into f8
la x2, scratch
li x3, 0xec2fbe77 # load x3 with value 0xec2fbe77
sw x3, 0(x2) # store 0xec2fbe77 in memory
flw f6, 0(x2) # load 0xec2fbe77 from memory into f6
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f17, 0(x2) # load 0x7f800001 from memory into f17
fnmsub.s f27, f8, f6, f17, dyn # perform operation
fnmsub.s f27, f8, f6, f17, rdn # perform operation
fnmsub.s f27, f8, f6, f17, rmm # perform operation
fnmsub.s f27, f8, f6, f17, rne # perform operation
fnmsub.s f27, f8, f6, f17, rtz # perform operation
fnmsub.s f27, f8, f6, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f27, f8, f6, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f27, f8, f6, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f27, f8, f6, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f27, f8, f6, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f27, f8, f6, f17 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0x7fbfffff)
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f12, 0(x2) # load 0xff7fffff from memory into f12
la x2, scratch
li x3, 0xbdcaf2f2 # load x3 with value 0xbdcaf2f2
sw x3, 0(x2) # store 0xbdcaf2f2 in memory
flw f31, 0(x2) # load 0xbdcaf2f2 from memory into f31
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f17, 0(x2) # load 0x7fbfffff from memory into f17
fnmsub.s f20, f12, f31, f17, dyn # perform operation
fnmsub.s f20, f12, f31, f17, rdn # perform operation
fnmsub.s f20, f12, f31, f17, rmm # perform operation
fnmsub.s f20, f12, f31, f17, rne # perform operation
fnmsub.s f20, f12, f31, f17, rtz # perform operation
fnmsub.s f20, f12, f31, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f20, f12, f31, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f20, f12, f31, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f20, f12, f31, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f20, f12, f31, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f20, f12, f31, f17 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0xffbfffff)
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f13, 0(x2) # load 0xff7fffff from memory into f13
la x2, scratch
li x3, 0x4bcb37e6 # load x3 with value 0x4bcb37e6
sw x3, 0(x2) # store 0x4bcb37e6 in memory
flw f23, 0(x2) # load 0x4bcb37e6 from memory into f23
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f26, 0(x2) # load 0xffbfffff from memory into f26
fnmsub.s f6, f13, f23, f26, dyn # perform operation
fnmsub.s f6, f13, f23, f26, rdn # perform operation
fnmsub.s f6, f13, f23, f26, rmm # perform operation
fnmsub.s f6, f13, f23, f26, rne # perform operation
fnmsub.s f6, f13, f23, f26, rtz # perform operation
fnmsub.s f6, f13, f23, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f6, f13, f23, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f6, f13, f23, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f6, f13, f23, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f6, f13, f23, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f6, f13, f23, f26 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0x7ef8654f)
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f27, 0(x2) # load 0xff7fffff from memory into f27
la x2, scratch
li x3, 0x47b39b93 # load x3 with value 0x47b39b93
sw x3, 0(x2) # store 0x47b39b93 in memory
flw f26, 0(x2) # load 0x47b39b93 from memory into f26
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f1, 0(x2) # load 0x7ef8654f from memory into f1
fnmsub.s f25, f27, f26, f1, dyn # perform operation
fnmsub.s f25, f27, f26, f1, rdn # perform operation
fnmsub.s f25, f27, f26, f1, rmm # perform operation
fnmsub.s f25, f27, f26, f1, rne # perform operation
fnmsub.s f25, f27, f26, f1, rtz # perform operation
fnmsub.s f25, f27, f26, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f25, f27, f26, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f25, f27, f26, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f25, f27, f26, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f25, f27, f26, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f25, f27, f26, f1 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0x813d9ab0)
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f18, 0(x2) # load 0xff7fffff from memory into f18
la x2, scratch
li x3, 0xc19754f2 # load x3 with value 0xc19754f2
sw x3, 0(x2) # store 0xc19754f2 in memory
flw f7, 0(x2) # load 0xc19754f2 from memory into f7
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f9, 0(x2) # load 0x813d9ab0 from memory into f9
fnmsub.s f21, f18, f7, f9, dyn # perform operation
fnmsub.s f21, f18, f7, f9, rdn # perform operation
fnmsub.s f21, f18, f7, f9, rmm # perform operation
fnmsub.s f21, f18, f7, f9, rne # perform operation
fnmsub.s f21, f18, f7, f9, rtz # perform operation
fnmsub.s f21, f18, f7, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f21, f18, f7, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f21, f18, f7, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f21, f18, f7, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f21, f18, f7, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f21, f18, f7, f9 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0x0)
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f20, 0(x2) # load 0x007fffff from memory into f20
la x2, scratch
li x3, 0xe63401d4 # load x3 with value 0xe63401d4
sw x3, 0(x2) # store 0xe63401d4 in memory
flw f8, 0(x2) # load 0xe63401d4 from memory into f8
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f12, 0(x2) # load 0x00000000 from memory into f12
fnmsub.s f24, f20, f8, f12, dyn # perform operation
fnmsub.s f24, f20, f8, f12, rdn # perform operation
fnmsub.s f24, f20, f8, f12, rmm # perform operation
fnmsub.s f24, f20, f8, f12, rne # perform operation
fnmsub.s f24, f20, f8, f12, rtz # perform operation
fnmsub.s f24, f20, f8, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f24, f20, f8, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f24, f20, f8, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f24, f20, f8, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f24, f20, f8, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f24, f20, f8, f12 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0x80000000)
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f11, 0(x2) # load 0x007fffff from memory into f11
la x2, scratch
li x3, 0x83286db6 # load x3 with value 0x83286db6
sw x3, 0(x2) # store 0x83286db6 in memory
flw f17, 0(x2) # load 0x83286db6 from memory into f17
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f29, 0(x2) # load 0x80000000 from memory into f29
fnmsub.s f1, f11, f17, f29, dyn # perform operation
fnmsub.s f1, f11, f17, f29, rdn # perform operation
fnmsub.s f1, f11, f17, f29, rmm # perform operation
fnmsub.s f1, f11, f17, f29, rne # perform operation
fnmsub.s f1, f11, f17, f29, rtz # perform operation
fnmsub.s f1, f11, f17, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f1, f11, f17, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f1, f11, f17, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f1, f11, f17, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f1, f11, f17, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f1, f11, f17, f29 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0x3f800000)
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f16, 0(x2) # load 0x007fffff from memory into f16
la x2, scratch
li x3, 0x7a76b8bf # load x3 with value 0x7a76b8bf
sw x3, 0(x2) # store 0x7a76b8bf in memory
flw f14, 0(x2) # load 0x7a76b8bf from memory into f14
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f21, 0(x2) # load 0x3f800000 from memory into f21
fnmsub.s f15, f16, f14, f21, dyn # perform operation
fnmsub.s f15, f16, f14, f21, rdn # perform operation
fnmsub.s f15, f16, f14, f21, rmm # perform operation
fnmsub.s f15, f16, f14, f21, rne # perform operation
fnmsub.s f15, f16, f14, f21, rtz # perform operation
fnmsub.s f15, f16, f14, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f15, f16, f14, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f15, f16, f14, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f15, f16, f14, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f15, f16, f14, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f15, f16, f14, f21 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0xbf800000)
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f5, 0(x2) # load 0x007fffff from memory into f5
la x2, scratch
li x3, 0xa3d0d923 # load x3 with value 0xa3d0d923
sw x3, 0(x2) # store 0xa3d0d923 in memory
flw f10, 0(x2) # load 0xa3d0d923 from memory into f10
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f11, 0(x2) # load 0xbf800000 from memory into f11
fnmsub.s f17, f5, f10, f11, dyn # perform operation
fnmsub.s f17, f5, f10, f11, rdn # perform operation
fnmsub.s f17, f5, f10, f11, rmm # perform operation
fnmsub.s f17, f5, f10, f11, rne # perform operation
fnmsub.s f17, f5, f10, f11, rtz # perform operation
fnmsub.s f17, f5, f10, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f17, f5, f10, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f17, f5, f10, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f17, f5, f10, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f17, f5, f10, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f17, f5, f10, f11 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0x3fc00000)
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f3, 0(x2) # load 0x007fffff from memory into f3
la x2, scratch
li x3, 0x1ef27f59 # load x3 with value 0x1ef27f59
sw x3, 0(x2) # store 0x1ef27f59 in memory
flw f19, 0(x2) # load 0x1ef27f59 from memory into f19
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f27, 0(x2) # load 0x3fc00000 from memory into f27
fnmsub.s f13, f3, f19, f27, dyn # perform operation
fnmsub.s f13, f3, f19, f27, rdn # perform operation
fnmsub.s f13, f3, f19, f27, rmm # perform operation
fnmsub.s f13, f3, f19, f27, rne # perform operation
fnmsub.s f13, f3, f19, f27, rtz # perform operation
fnmsub.s f13, f3, f19, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f13, f3, f19, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f13, f3, f19, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f13, f3, f19, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f13, f3, f19, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f13, f3, f19, f27 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0xbfc00000)
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f21, 0(x2) # load 0x007fffff from memory into f21
la x2, scratch
li x3, 0xf0b311d7 # load x3 with value 0xf0b311d7
sw x3, 0(x2) # store 0xf0b311d7 in memory
flw f2, 0(x2) # load 0xf0b311d7 from memory into f2
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f13, 0(x2) # load 0xbfc00000 from memory into f13
fnmsub.s f5, f21, f2, f13, dyn # perform operation
fnmsub.s f5, f21, f2, f13, rdn # perform operation
fnmsub.s f5, f21, f2, f13, rmm # perform operation
fnmsub.s f5, f21, f2, f13, rne # perform operation
fnmsub.s f5, f21, f2, f13, rtz # perform operation
fnmsub.s f5, f21, f2, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f5, f21, f2, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f5, f21, f2, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f5, f21, f2, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f5, f21, f2, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f5, f21, f2, f13 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0x40000000)
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f23, 0(x2) # load 0x007fffff from memory into f23
la x2, scratch
li x3, 0xe38754dc # load x3 with value 0xe38754dc
sw x3, 0(x2) # store 0xe38754dc in memory
flw f11, 0(x2) # load 0xe38754dc from memory into f11
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f29, 0(x2) # load 0x40000000 from memory into f29
fnmsub.s f27, f23, f11, f29, dyn # perform operation
fnmsub.s f27, f23, f11, f29, rdn # perform operation
fnmsub.s f27, f23, f11, f29, rmm # perform operation
fnmsub.s f27, f23, f11, f29, rne # perform operation
fnmsub.s f27, f23, f11, f29, rtz # perform operation
fnmsub.s f27, f23, f11, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f27, f23, f11, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f27, f23, f11, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f27, f23, f11, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f27, f23, f11, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f27, f23, f11, f29 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0xc0000000)
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f12, 0(x2) # load 0x007fffff from memory into f12
la x2, scratch
li x3, 0x6da17f83 # load x3 with value 0x6da17f83
sw x3, 0(x2) # store 0x6da17f83 in memory
flw f23, 0(x2) # load 0x6da17f83 from memory into f23
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f25, 0(x2) # load 0xc0000000 from memory into f25
fnmsub.s f22, f12, f23, f25, dyn # perform operation
fnmsub.s f22, f12, f23, f25, rdn # perform operation
fnmsub.s f22, f12, f23, f25, rmm # perform operation
fnmsub.s f22, f12, f23, f25, rne # perform operation
fnmsub.s f22, f12, f23, f25, rtz # perform operation
fnmsub.s f22, f12, f23, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f22, f12, f23, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f22, f12, f23, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f22, f12, f23, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f22, f12, f23, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f22, f12, f23, f25 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0x800000)
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f18, 0(x2) # load 0x007fffff from memory into f18
la x2, scratch
li x3, 0x61a23944 # load x3 with value 0x61a23944
sw x3, 0(x2) # store 0x61a23944 in memory
flw f11, 0(x2) # load 0x61a23944 from memory into f11
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f2, 0(x2) # load 0x00800000 from memory into f2
fnmsub.s f21, f18, f11, f2, dyn # perform operation
fnmsub.s f21, f18, f11, f2, rdn # perform operation
fnmsub.s f21, f18, f11, f2, rmm # perform operation
fnmsub.s f21, f18, f11, f2, rne # perform operation
fnmsub.s f21, f18, f11, f2, rtz # perform operation
fnmsub.s f21, f18, f11, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f21, f18, f11, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f21, f18, f11, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f21, f18, f11, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f21, f18, f11, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f21, f18, f11, f2 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0x80800000)
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f12, 0(x2) # load 0x007fffff from memory into f12
la x2, scratch
li x3, 0xdde72d40 # load x3 with value 0xdde72d40
sw x3, 0(x2) # store 0xdde72d40 in memory
flw f13, 0(x2) # load 0xdde72d40 from memory into f13
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f1, 0(x2) # load 0x80800000 from memory into f1
fnmsub.s f22, f12, f13, f1, dyn # perform operation
fnmsub.s f22, f12, f13, f1, rdn # perform operation
fnmsub.s f22, f12, f13, f1, rmm # perform operation
fnmsub.s f22, f12, f13, f1, rne # perform operation
fnmsub.s f22, f12, f13, f1, rtz # perform operation
fnmsub.s f22, f12, f13, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f22, f12, f13, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f22, f12, f13, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f22, f12, f13, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f22, f12, f13, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f22, f12, f13, f1 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0x7f7fffff)
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f11, 0(x2) # load 0x007fffff from memory into f11
la x2, scratch
li x3, 0x57778f9f # load x3 with value 0x57778f9f
sw x3, 0(x2) # store 0x57778f9f in memory
flw f25, 0(x2) # load 0x57778f9f from memory into f25
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f30, 0(x2) # load 0x7f7fffff from memory into f30
fnmsub.s f20, f11, f25, f30, dyn # perform operation
fnmsub.s f20, f11, f25, f30, rdn # perform operation
fnmsub.s f20, f11, f25, f30, rmm # perform operation
fnmsub.s f20, f11, f25, f30, rne # perform operation
fnmsub.s f20, f11, f25, f30, rtz # perform operation
fnmsub.s f20, f11, f25, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f20, f11, f25, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f20, f11, f25, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f20, f11, f25, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f20, f11, f25, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f20, f11, f25, f30 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0xff7fffff)
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f22, 0(x2) # load 0x007fffff from memory into f22
la x2, scratch
li x3, 0x037fe351 # load x3 with value 0x037fe351
sw x3, 0(x2) # store 0x037fe351 in memory
flw f3, 0(x2) # load 0x037fe351 from memory into f3
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f28, 0(x2) # load 0xff7fffff from memory into f28
fnmsub.s f7, f22, f3, f28, dyn # perform operation
fnmsub.s f7, f22, f3, f28, rdn # perform operation
fnmsub.s f7, f22, f3, f28, rmm # perform operation
fnmsub.s f7, f22, f3, f28, rne # perform operation
fnmsub.s f7, f22, f3, f28, rtz # perform operation
fnmsub.s f7, f22, f3, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f7, f22, f3, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f7, f22, f3, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f7, f22, f3, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f7, f22, f3, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f7, f22, f3, f28 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0x7fffff)
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f20, 0(x2) # load 0x007fffff from memory into f20
la x2, scratch
li x3, 0xf3f4b71c # load x3 with value 0xf3f4b71c
sw x3, 0(x2) # store 0xf3f4b71c in memory
flw f11, 0(x2) # load 0xf3f4b71c from memory into f11
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f5, 0(x2) # load 0x007fffff from memory into f5
fnmsub.s f17, f20, f11, f5, dyn # perform operation
fnmsub.s f17, f20, f11, f5, rdn # perform operation
fnmsub.s f17, f20, f11, f5, rmm # perform operation
fnmsub.s f17, f20, f11, f5, rne # perform operation
fnmsub.s f17, f20, f11, f5, rtz # perform operation
fnmsub.s f17, f20, f11, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f17, f20, f11, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f17, f20, f11, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f17, f20, f11, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f17, f20, f11, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f17, f20, f11, f5 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0x807fffff)
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f8, 0(x2) # load 0x007fffff from memory into f8
la x2, scratch
li x3, 0xf158d60d # load x3 with value 0xf158d60d
sw x3, 0(x2) # store 0xf158d60d in memory
flw f29, 0(x2) # load 0xf158d60d from memory into f29
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f31, 0(x2) # load 0x807fffff from memory into f31
fnmsub.s f11, f8, f29, f31, dyn # perform operation
fnmsub.s f11, f8, f29, f31, rdn # perform operation
fnmsub.s f11, f8, f29, f31, rmm # perform operation
fnmsub.s f11, f8, f29, f31, rne # perform operation
fnmsub.s f11, f8, f29, f31, rtz # perform operation
fnmsub.s f11, f8, f29, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f11, f8, f29, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f11, f8, f29, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f11, f8, f29, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f11, f8, f29, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f11, f8, f29, f31 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0x400000)
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f21, 0(x2) # load 0x007fffff from memory into f21
la x2, scratch
li x3, 0x1618c4ef # load x3 with value 0x1618c4ef
sw x3, 0(x2) # store 0x1618c4ef in memory
flw f19, 0(x2) # load 0x1618c4ef from memory into f19
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f9, 0(x2) # load 0x00400000 from memory into f9
fnmsub.s f30, f21, f19, f9, dyn # perform operation
fnmsub.s f30, f21, f19, f9, rdn # perform operation
fnmsub.s f30, f21, f19, f9, rmm # perform operation
fnmsub.s f30, f21, f19, f9, rne # perform operation
fnmsub.s f30, f21, f19, f9, rtz # perform operation
fnmsub.s f30, f21, f19, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f30, f21, f19, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f30, f21, f19, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f30, f21, f19, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f30, f21, f19, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f30, f21, f19, f9 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0x80400000)
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f26, 0(x2) # load 0x007fffff from memory into f26
la x2, scratch
li x3, 0x2e8d7018 # load x3 with value 0x2e8d7018
sw x3, 0(x2) # store 0x2e8d7018 in memory
flw f12, 0(x2) # load 0x2e8d7018 from memory into f12
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f1, 0(x2) # load 0x80400000 from memory into f1
fnmsub.s f14, f26, f12, f1, dyn # perform operation
fnmsub.s f14, f26, f12, f1, rdn # perform operation
fnmsub.s f14, f26, f12, f1, rmm # perform operation
fnmsub.s f14, f26, f12, f1, rne # perform operation
fnmsub.s f14, f26, f12, f1, rtz # perform operation
fnmsub.s f14, f26, f12, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f14, f26, f12, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f14, f26, f12, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f14, f26, f12, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f14, f26, f12, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f14, f26, f12, f1 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0x1)
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f31, 0(x2) # load 0x007fffff from memory into f31
la x2, scratch
li x3, 0xb7e29fec # load x3 with value 0xb7e29fec
sw x3, 0(x2) # store 0xb7e29fec in memory
flw f26, 0(x2) # load 0xb7e29fec from memory into f26
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f9, 0(x2) # load 0x00000001 from memory into f9
fnmsub.s f27, f31, f26, f9, dyn # perform operation
fnmsub.s f27, f31, f26, f9, rdn # perform operation
fnmsub.s f27, f31, f26, f9, rmm # perform operation
fnmsub.s f27, f31, f26, f9, rne # perform operation
fnmsub.s f27, f31, f26, f9, rtz # perform operation
fnmsub.s f27, f31, f26, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f27, f31, f26, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f27, f31, f26, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f27, f31, f26, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f27, f31, f26, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f27, f31, f26, f9 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0x80000001)
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f3, 0(x2) # load 0x007fffff from memory into f3
la x2, scratch
li x3, 0xc7af5faa # load x3 with value 0xc7af5faa
sw x3, 0(x2) # store 0xc7af5faa in memory
flw f23, 0(x2) # load 0xc7af5faa from memory into f23
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f13, 0(x2) # load 0x80000001 from memory into f13
fnmsub.s f25, f3, f23, f13, dyn # perform operation
fnmsub.s f25, f3, f23, f13, rdn # perform operation
fnmsub.s f25, f3, f23, f13, rmm # perform operation
fnmsub.s f25, f3, f23, f13, rne # perform operation
fnmsub.s f25, f3, f23, f13, rtz # perform operation
fnmsub.s f25, f3, f23, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f25, f3, f23, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f25, f3, f23, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f25, f3, f23, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f25, f3, f23, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f25, f3, f23, f13 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0x7f800000)
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f11, 0(x2) # load 0x007fffff from memory into f11
la x2, scratch
li x3, 0x09a4530f # load x3 with value 0x09a4530f
sw x3, 0(x2) # store 0x09a4530f in memory
flw f16, 0(x2) # load 0x09a4530f from memory into f16
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f9, 0(x2) # load 0x7f800000 from memory into f9
fnmsub.s f10, f11, f16, f9, dyn # perform operation
fnmsub.s f10, f11, f16, f9, rdn # perform operation
fnmsub.s f10, f11, f16, f9, rmm # perform operation
fnmsub.s f10, f11, f16, f9, rne # perform operation
fnmsub.s f10, f11, f16, f9, rtz # perform operation
fnmsub.s f10, f11, f16, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f10, f11, f16, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f10, f11, f16, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f10, f11, f16, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f10, f11, f16, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f10, f11, f16, f9 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0xff800000)
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f22, 0(x2) # load 0x007fffff from memory into f22
la x2, scratch
li x3, 0x23bb9a5c # load x3 with value 0x23bb9a5c
sw x3, 0(x2) # store 0x23bb9a5c in memory
flw f23, 0(x2) # load 0x23bb9a5c from memory into f23
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f14, 0(x2) # load 0xff800000 from memory into f14
fnmsub.s f24, f22, f23, f14, dyn # perform operation
fnmsub.s f24, f22, f23, f14, rdn # perform operation
fnmsub.s f24, f22, f23, f14, rmm # perform operation
fnmsub.s f24, f22, f23, f14, rne # perform operation
fnmsub.s f24, f22, f23, f14, rtz # perform operation
fnmsub.s f24, f22, f23, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f24, f22, f23, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f24, f22, f23, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f24, f22, f23, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f24, f22, f23, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f24, f22, f23, f14 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0x7fc00000)
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f17, 0(x2) # load 0x007fffff from memory into f17
la x2, scratch
li x3, 0x9e55ae73 # load x3 with value 0x9e55ae73
sw x3, 0(x2) # store 0x9e55ae73 in memory
flw f22, 0(x2) # load 0x9e55ae73 from memory into f22
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f6, 0(x2) # load 0x7fc00000 from memory into f6
fnmsub.s f18, f17, f22, f6, dyn # perform operation
fnmsub.s f18, f17, f22, f6, rdn # perform operation
fnmsub.s f18, f17, f22, f6, rmm # perform operation
fnmsub.s f18, f17, f22, f6, rne # perform operation
fnmsub.s f18, f17, f22, f6, rtz # perform operation
fnmsub.s f18, f17, f22, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f18, f17, f22, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f18, f17, f22, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f18, f17, f22, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f18, f17, f22, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f18, f17, f22, f6 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0x7fffffff)
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f26, 0(x2) # load 0x007fffff from memory into f26
la x2, scratch
li x3, 0x2026dc97 # load x3 with value 0x2026dc97
sw x3, 0(x2) # store 0x2026dc97 in memory
flw f10, 0(x2) # load 0x2026dc97 from memory into f10
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f12, 0(x2) # load 0x7fffffff from memory into f12
fnmsub.s f1, f26, f10, f12, dyn # perform operation
fnmsub.s f1, f26, f10, f12, rdn # perform operation
fnmsub.s f1, f26, f10, f12, rmm # perform operation
fnmsub.s f1, f26, f10, f12, rne # perform operation
fnmsub.s f1, f26, f10, f12, rtz # perform operation
fnmsub.s f1, f26, f10, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f1, f26, f10, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f1, f26, f10, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f1, f26, f10, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f1, f26, f10, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f1, f26, f10, f12 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0xffffffff)
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f23, 0(x2) # load 0x007fffff from memory into f23
la x2, scratch
li x3, 0xaaa42b6b # load x3 with value 0xaaa42b6b
sw x3, 0(x2) # store 0xaaa42b6b in memory
flw f9, 0(x2) # load 0xaaa42b6b from memory into f9
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f7, 0(x2) # load 0xffffffff from memory into f7
fnmsub.s f22, f23, f9, f7, dyn # perform operation
fnmsub.s f22, f23, f9, f7, rdn # perform operation
fnmsub.s f22, f23, f9, f7, rmm # perform operation
fnmsub.s f22, f23, f9, f7, rne # perform operation
fnmsub.s f22, f23, f9, f7, rtz # perform operation
fnmsub.s f22, f23, f9, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f22, f23, f9, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f22, f23, f9, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f22, f23, f9, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f22, f23, f9, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f22, f23, f9, f7 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0x7f800001)
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f11, 0(x2) # load 0x007fffff from memory into f11
la x2, scratch
li x3, 0x498e1b9c # load x3 with value 0x498e1b9c
sw x3, 0(x2) # store 0x498e1b9c in memory
flw f29, 0(x2) # load 0x498e1b9c from memory into f29
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f5, 0(x2) # load 0x7f800001 from memory into f5
fnmsub.s f2, f11, f29, f5, dyn # perform operation
fnmsub.s f2, f11, f29, f5, rdn # perform operation
fnmsub.s f2, f11, f29, f5, rmm # perform operation
fnmsub.s f2, f11, f29, f5, rne # perform operation
fnmsub.s f2, f11, f29, f5, rtz # perform operation
fnmsub.s f2, f11, f29, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f2, f11, f29, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f2, f11, f29, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f2, f11, f29, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f2, f11, f29, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f2, f11, f29, f5 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0x7fbfffff)
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f3, 0(x2) # load 0x007fffff from memory into f3
la x2, scratch
li x3, 0xeb12c2f5 # load x3 with value 0xeb12c2f5
sw x3, 0(x2) # store 0xeb12c2f5 in memory
flw f24, 0(x2) # load 0xeb12c2f5 from memory into f24
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f22, 0(x2) # load 0x7fbfffff from memory into f22
fnmsub.s f20, f3, f24, f22, dyn # perform operation
fnmsub.s f20, f3, f24, f22, rdn # perform operation
fnmsub.s f20, f3, f24, f22, rmm # perform operation
fnmsub.s f20, f3, f24, f22, rne # perform operation
fnmsub.s f20, f3, f24, f22, rtz # perform operation
fnmsub.s f20, f3, f24, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f20, f3, f24, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f20, f3, f24, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f20, f3, f24, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f20, f3, f24, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f20, f3, f24, f22 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0xffbfffff)
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f17, 0(x2) # load 0x007fffff from memory into f17
la x2, scratch
li x3, 0xbe6e971c # load x3 with value 0xbe6e971c
sw x3, 0(x2) # store 0xbe6e971c in memory
flw f8, 0(x2) # load 0xbe6e971c from memory into f8
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f24, 0(x2) # load 0xffbfffff from memory into f24
fnmsub.s f5, f17, f8, f24, dyn # perform operation
fnmsub.s f5, f17, f8, f24, rdn # perform operation
fnmsub.s f5, f17, f8, f24, rmm # perform operation
fnmsub.s f5, f17, f8, f24, rne # perform operation
fnmsub.s f5, f17, f8, f24, rtz # perform operation
fnmsub.s f5, f17, f8, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f5, f17, f8, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f5, f17, f8, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f5, f17, f8, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f5, f17, f8, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f5, f17, f8, f24 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0x7ef8654f)
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f12, 0(x2) # load 0x007fffff from memory into f12
la x2, scratch
li x3, 0x10baf8ae # load x3 with value 0x10baf8ae
sw x3, 0(x2) # store 0x10baf8ae in memory
flw f5, 0(x2) # load 0x10baf8ae from memory into f5
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f23, 0(x2) # load 0x7ef8654f from memory into f23
fnmsub.s f27, f12, f5, f23, dyn # perform operation
fnmsub.s f27, f12, f5, f23, rdn # perform operation
fnmsub.s f27, f12, f5, f23, rmm # perform operation
fnmsub.s f27, f12, f5, f23, rne # perform operation
fnmsub.s f27, f12, f5, f23, rtz # perform operation
fnmsub.s f27, f12, f5, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f27, f12, f5, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f27, f12, f5, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f27, f12, f5, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f27, f12, f5, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f27, f12, f5, f23 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0x813d9ab0)
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f3, 0(x2) # load 0x007fffff from memory into f3
la x2, scratch
li x3, 0x4e733f66 # load x3 with value 0x4e733f66
sw x3, 0(x2) # store 0x4e733f66 in memory
flw f30, 0(x2) # load 0x4e733f66 from memory into f30
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f7, 0(x2) # load 0x813d9ab0 from memory into f7
fnmsub.s f11, f3, f30, f7, dyn # perform operation
fnmsub.s f11, f3, f30, f7, rdn # perform operation
fnmsub.s f11, f3, f30, f7, rmm # perform operation
fnmsub.s f11, f3, f30, f7, rne # perform operation
fnmsub.s f11, f3, f30, f7, rtz # perform operation
fnmsub.s f11, f3, f30, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f11, f3, f30, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f11, f3, f30, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f11, f3, f30, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f11, f3, f30, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f11, f3, f30, f7 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0x0)
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f23, 0(x2) # load 0x807fffff from memory into f23
la x2, scratch
li x3, 0x90b3276c # load x3 with value 0x90b3276c
sw x3, 0(x2) # store 0x90b3276c in memory
flw f5, 0(x2) # load 0x90b3276c from memory into f5
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f9, 0(x2) # load 0x00000000 from memory into f9
fnmsub.s f18, f23, f5, f9, dyn # perform operation
fnmsub.s f18, f23, f5, f9, rdn # perform operation
fnmsub.s f18, f23, f5, f9, rmm # perform operation
fnmsub.s f18, f23, f5, f9, rne # perform operation
fnmsub.s f18, f23, f5, f9, rtz # perform operation
fnmsub.s f18, f23, f5, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f18, f23, f5, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f18, f23, f5, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f18, f23, f5, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f18, f23, f5, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f18, f23, f5, f9 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0x80000000)
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f17, 0(x2) # load 0x807fffff from memory into f17
la x2, scratch
li x3, 0x3cadc897 # load x3 with value 0x3cadc897
sw x3, 0(x2) # store 0x3cadc897 in memory
flw f9, 0(x2) # load 0x3cadc897 from memory into f9
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f1, 0(x2) # load 0x80000000 from memory into f1
fnmsub.s f18, f17, f9, f1, dyn # perform operation
fnmsub.s f18, f17, f9, f1, rdn # perform operation
fnmsub.s f18, f17, f9, f1, rmm # perform operation
fnmsub.s f18, f17, f9, f1, rne # perform operation
fnmsub.s f18, f17, f9, f1, rtz # perform operation
fnmsub.s f18, f17, f9, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f18, f17, f9, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f18, f17, f9, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f18, f17, f9, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f18, f17, f9, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f18, f17, f9, f1 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0x3f800000)
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f20, 0(x2) # load 0x807fffff from memory into f20
la x2, scratch
li x3, 0x65afee38 # load x3 with value 0x65afee38
sw x3, 0(x2) # store 0x65afee38 in memory
flw f7, 0(x2) # load 0x65afee38 from memory into f7
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f10, 0(x2) # load 0x3f800000 from memory into f10
fnmsub.s f9, f20, f7, f10, dyn # perform operation
fnmsub.s f9, f20, f7, f10, rdn # perform operation
fnmsub.s f9, f20, f7, f10, rmm # perform operation
fnmsub.s f9, f20, f7, f10, rne # perform operation
fnmsub.s f9, f20, f7, f10, rtz # perform operation
fnmsub.s f9, f20, f7, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f9, f20, f7, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f9, f20, f7, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f9, f20, f7, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f9, f20, f7, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f9, f20, f7, f10 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0xbf800000)
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f15, 0(x2) # load 0x807fffff from memory into f15
la x2, scratch
li x3, 0xb0a6e74f # load x3 with value 0xb0a6e74f
sw x3, 0(x2) # store 0xb0a6e74f in memory
flw f8, 0(x2) # load 0xb0a6e74f from memory into f8
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f17, 0(x2) # load 0xbf800000 from memory into f17
fnmsub.s f27, f15, f8, f17, dyn # perform operation
fnmsub.s f27, f15, f8, f17, rdn # perform operation
fnmsub.s f27, f15, f8, f17, rmm # perform operation
fnmsub.s f27, f15, f8, f17, rne # perform operation
fnmsub.s f27, f15, f8, f17, rtz # perform operation
fnmsub.s f27, f15, f8, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f27, f15, f8, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f27, f15, f8, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f27, f15, f8, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f27, f15, f8, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f27, f15, f8, f17 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0x3fc00000)
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f27, 0(x2) # load 0x807fffff from memory into f27
la x2, scratch
li x3, 0xffc66370 # load x3 with value 0xffc66370
sw x3, 0(x2) # store 0xffc66370 in memory
flw f18, 0(x2) # load 0xffc66370 from memory into f18
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f20, 0(x2) # load 0x3fc00000 from memory into f20
fnmsub.s f23, f27, f18, f20, dyn # perform operation
fnmsub.s f23, f27, f18, f20, rdn # perform operation
fnmsub.s f23, f27, f18, f20, rmm # perform operation
fnmsub.s f23, f27, f18, f20, rne # perform operation
fnmsub.s f23, f27, f18, f20, rtz # perform operation
fnmsub.s f23, f27, f18, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f23, f27, f18, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f23, f27, f18, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f23, f27, f18, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f23, f27, f18, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f23, f27, f18, f20 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0xbfc00000)
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f20, 0(x2) # load 0x807fffff from memory into f20
la x2, scratch
li x3, 0x0dc908a2 # load x3 with value 0x0dc908a2
sw x3, 0(x2) # store 0x0dc908a2 in memory
flw f21, 0(x2) # load 0x0dc908a2 from memory into f21
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f19, 0(x2) # load 0xbfc00000 from memory into f19
fnmsub.s f5, f20, f21, f19, dyn # perform operation
fnmsub.s f5, f20, f21, f19, rdn # perform operation
fnmsub.s f5, f20, f21, f19, rmm # perform operation
fnmsub.s f5, f20, f21, f19, rne # perform operation
fnmsub.s f5, f20, f21, f19, rtz # perform operation
fnmsub.s f5, f20, f21, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f5, f20, f21, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f5, f20, f21, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f5, f20, f21, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f5, f20, f21, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f5, f20, f21, f19 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0x40000000)
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f18, 0(x2) # load 0x807fffff from memory into f18
la x2, scratch
li x3, 0xa161e425 # load x3 with value 0xa161e425
sw x3, 0(x2) # store 0xa161e425 in memory
flw f10, 0(x2) # load 0xa161e425 from memory into f10
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f7, 0(x2) # load 0x40000000 from memory into f7
fnmsub.s f15, f18, f10, f7, dyn # perform operation
fnmsub.s f15, f18, f10, f7, rdn # perform operation
fnmsub.s f15, f18, f10, f7, rmm # perform operation
fnmsub.s f15, f18, f10, f7, rne # perform operation
fnmsub.s f15, f18, f10, f7, rtz # perform operation
fnmsub.s f15, f18, f10, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f15, f18, f10, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f15, f18, f10, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f15, f18, f10, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f15, f18, f10, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f15, f18, f10, f7 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0xc0000000)
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f14, 0(x2) # load 0x807fffff from memory into f14
la x2, scratch
li x3, 0x51e13a64 # load x3 with value 0x51e13a64
sw x3, 0(x2) # store 0x51e13a64 in memory
flw f1, 0(x2) # load 0x51e13a64 from memory into f1
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f21, 0(x2) # load 0xc0000000 from memory into f21
fnmsub.s f8, f14, f1, f21, dyn # perform operation
fnmsub.s f8, f14, f1, f21, rdn # perform operation
fnmsub.s f8, f14, f1, f21, rmm # perform operation
fnmsub.s f8, f14, f1, f21, rne # perform operation
fnmsub.s f8, f14, f1, f21, rtz # perform operation
fnmsub.s f8, f14, f1, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f8, f14, f1, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f8, f14, f1, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f8, f14, f1, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f8, f14, f1, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f8, f14, f1, f21 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0x800000)
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f18, 0(x2) # load 0x807fffff from memory into f18
la x2, scratch
li x3, 0x80f67bdd # load x3 with value 0x80f67bdd
sw x3, 0(x2) # store 0x80f67bdd in memory
flw f12, 0(x2) # load 0x80f67bdd from memory into f12
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f25, 0(x2) # load 0x00800000 from memory into f25
fnmsub.s f1, f18, f12, f25, dyn # perform operation
fnmsub.s f1, f18, f12, f25, rdn # perform operation
fnmsub.s f1, f18, f12, f25, rmm # perform operation
fnmsub.s f1, f18, f12, f25, rne # perform operation
fnmsub.s f1, f18, f12, f25, rtz # perform operation
fnmsub.s f1, f18, f12, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f1, f18, f12, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f1, f18, f12, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f1, f18, f12, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f1, f18, f12, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f1, f18, f12, f25 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0x80800000)
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f27, 0(x2) # load 0x807fffff from memory into f27
la x2, scratch
li x3, 0x625837b5 # load x3 with value 0x625837b5
sw x3, 0(x2) # store 0x625837b5 in memory
flw f10, 0(x2) # load 0x625837b5 from memory into f10
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f30, 0(x2) # load 0x80800000 from memory into f30
fnmsub.s f29, f27, f10, f30, dyn # perform operation
fnmsub.s f29, f27, f10, f30, rdn # perform operation
fnmsub.s f29, f27, f10, f30, rmm # perform operation
fnmsub.s f29, f27, f10, f30, rne # perform operation
fnmsub.s f29, f27, f10, f30, rtz # perform operation
fnmsub.s f29, f27, f10, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f29, f27, f10, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f29, f27, f10, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f29, f27, f10, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f29, f27, f10, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f29, f27, f10, f30 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0x7f7fffff)
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f16, 0(x2) # load 0x807fffff from memory into f16
la x2, scratch
li x3, 0x9eff8302 # load x3 with value 0x9eff8302
sw x3, 0(x2) # store 0x9eff8302 in memory
flw f18, 0(x2) # load 0x9eff8302 from memory into f18
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f7, 0(x2) # load 0x7f7fffff from memory into f7
fnmsub.s f20, f16, f18, f7, dyn # perform operation
fnmsub.s f20, f16, f18, f7, rdn # perform operation
fnmsub.s f20, f16, f18, f7, rmm # perform operation
fnmsub.s f20, f16, f18, f7, rne # perform operation
fnmsub.s f20, f16, f18, f7, rtz # perform operation
fnmsub.s f20, f16, f18, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f20, f16, f18, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f20, f16, f18, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f20, f16, f18, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f20, f16, f18, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f20, f16, f18, f7 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0xff7fffff)
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f6, 0(x2) # load 0x807fffff from memory into f6
la x2, scratch
li x3, 0x3af8e988 # load x3 with value 0x3af8e988
sw x3, 0(x2) # store 0x3af8e988 in memory
flw f1, 0(x2) # load 0x3af8e988 from memory into f1
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f8, 0(x2) # load 0xff7fffff from memory into f8
fnmsub.s f31, f6, f1, f8, dyn # perform operation
fnmsub.s f31, f6, f1, f8, rdn # perform operation
fnmsub.s f31, f6, f1, f8, rmm # perform operation
fnmsub.s f31, f6, f1, f8, rne # perform operation
fnmsub.s f31, f6, f1, f8, rtz # perform operation
fnmsub.s f31, f6, f1, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f31, f6, f1, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f31, f6, f1, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f31, f6, f1, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f31, f6, f1, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f31, f6, f1, f8 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0x7fffff)
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f10, 0(x2) # load 0x807fffff from memory into f10
la x2, scratch
li x3, 0xc8e7ea9b # load x3 with value 0xc8e7ea9b
sw x3, 0(x2) # store 0xc8e7ea9b in memory
flw f26, 0(x2) # load 0xc8e7ea9b from memory into f26
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f13, 0(x2) # load 0x007fffff from memory into f13
fnmsub.s f19, f10, f26, f13, dyn # perform operation
fnmsub.s f19, f10, f26, f13, rdn # perform operation
fnmsub.s f19, f10, f26, f13, rmm # perform operation
fnmsub.s f19, f10, f26, f13, rne # perform operation
fnmsub.s f19, f10, f26, f13, rtz # perform operation
fnmsub.s f19, f10, f26, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f19, f10, f26, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f19, f10, f26, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f19, f10, f26, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f19, f10, f26, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f19, f10, f26, f13 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0x807fffff)
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f13, 0(x2) # load 0x807fffff from memory into f13
la x2, scratch
li x3, 0xd7641dcd # load x3 with value 0xd7641dcd
sw x3, 0(x2) # store 0xd7641dcd in memory
flw f29, 0(x2) # load 0xd7641dcd from memory into f29
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f14, 0(x2) # load 0x807fffff from memory into f14
fnmsub.s f12, f13, f29, f14, dyn # perform operation
fnmsub.s f12, f13, f29, f14, rdn # perform operation
fnmsub.s f12, f13, f29, f14, rmm # perform operation
fnmsub.s f12, f13, f29, f14, rne # perform operation
fnmsub.s f12, f13, f29, f14, rtz # perform operation
fnmsub.s f12, f13, f29, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f12, f13, f29, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f12, f13, f29, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f12, f13, f29, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f12, f13, f29, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f12, f13, f29, f14 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0x400000)
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f15, 0(x2) # load 0x807fffff from memory into f15
la x2, scratch
li x3, 0x38c8be30 # load x3 with value 0x38c8be30
sw x3, 0(x2) # store 0x38c8be30 in memory
flw f6, 0(x2) # load 0x38c8be30 from memory into f6
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f22, 0(x2) # load 0x00400000 from memory into f22
fnmsub.s f10, f15, f6, f22, dyn # perform operation
fnmsub.s f10, f15, f6, f22, rdn # perform operation
fnmsub.s f10, f15, f6, f22, rmm # perform operation
fnmsub.s f10, f15, f6, f22, rne # perform operation
fnmsub.s f10, f15, f6, f22, rtz # perform operation
fnmsub.s f10, f15, f6, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f10, f15, f6, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f10, f15, f6, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f10, f15, f6, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f10, f15, f6, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f10, f15, f6, f22 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0x80400000)
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f17, 0(x2) # load 0x807fffff from memory into f17
la x2, scratch
li x3, 0x0629db40 # load x3 with value 0x0629db40
sw x3, 0(x2) # store 0x0629db40 in memory
flw f27, 0(x2) # load 0x0629db40 from memory into f27
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f28, 0(x2) # load 0x80400000 from memory into f28
fnmsub.s f22, f17, f27, f28, dyn # perform operation
fnmsub.s f22, f17, f27, f28, rdn # perform operation
fnmsub.s f22, f17, f27, f28, rmm # perform operation
fnmsub.s f22, f17, f27, f28, rne # perform operation
fnmsub.s f22, f17, f27, f28, rtz # perform operation
fnmsub.s f22, f17, f27, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f22, f17, f27, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f22, f17, f27, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f22, f17, f27, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f22, f17, f27, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f22, f17, f27, f28 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0x1)
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f15, 0(x2) # load 0x807fffff from memory into f15
la x2, scratch
li x3, 0x96d62ec1 # load x3 with value 0x96d62ec1
sw x3, 0(x2) # store 0x96d62ec1 in memory
flw f18, 0(x2) # load 0x96d62ec1 from memory into f18
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f2, 0(x2) # load 0x00000001 from memory into f2
fnmsub.s f29, f15, f18, f2, dyn # perform operation
fnmsub.s f29, f15, f18, f2, rdn # perform operation
fnmsub.s f29, f15, f18, f2, rmm # perform operation
fnmsub.s f29, f15, f18, f2, rne # perform operation
fnmsub.s f29, f15, f18, f2, rtz # perform operation
fnmsub.s f29, f15, f18, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f29, f15, f18, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f29, f15, f18, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f29, f15, f18, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f29, f15, f18, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f29, f15, f18, f2 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0x80000001)
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f21, 0(x2) # load 0x807fffff from memory into f21
la x2, scratch
li x3, 0x618304e9 # load x3 with value 0x618304e9
sw x3, 0(x2) # store 0x618304e9 in memory
flw f16, 0(x2) # load 0x618304e9 from memory into f16
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f5, 0(x2) # load 0x80000001 from memory into f5
fnmsub.s f18, f21, f16, f5, dyn # perform operation
fnmsub.s f18, f21, f16, f5, rdn # perform operation
fnmsub.s f18, f21, f16, f5, rmm # perform operation
fnmsub.s f18, f21, f16, f5, rne # perform operation
fnmsub.s f18, f21, f16, f5, rtz # perform operation
fnmsub.s f18, f21, f16, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f18, f21, f16, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f18, f21, f16, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f18, f21, f16, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f18, f21, f16, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f18, f21, f16, f5 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0x7f800000)
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f22, 0(x2) # load 0x807fffff from memory into f22
la x2, scratch
li x3, 0x212c701d # load x3 with value 0x212c701d
sw x3, 0(x2) # store 0x212c701d in memory
flw f26, 0(x2) # load 0x212c701d from memory into f26
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f14, 0(x2) # load 0x7f800000 from memory into f14
fnmsub.s f3, f22, f26, f14, dyn # perform operation
fnmsub.s f3, f22, f26, f14, rdn # perform operation
fnmsub.s f3, f22, f26, f14, rmm # perform operation
fnmsub.s f3, f22, f26, f14, rne # perform operation
fnmsub.s f3, f22, f26, f14, rtz # perform operation
fnmsub.s f3, f22, f26, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f3, f22, f26, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f3, f22, f26, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f3, f22, f26, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f3, f22, f26, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f3, f22, f26, f14 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0xff800000)
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f8, 0(x2) # load 0x807fffff from memory into f8
la x2, scratch
li x3, 0x1f3d4a16 # load x3 with value 0x1f3d4a16
sw x3, 0(x2) # store 0x1f3d4a16 in memory
flw f31, 0(x2) # load 0x1f3d4a16 from memory into f31
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f26, 0(x2) # load 0xff800000 from memory into f26
fnmsub.s f5, f8, f31, f26, dyn # perform operation
fnmsub.s f5, f8, f31, f26, rdn # perform operation
fnmsub.s f5, f8, f31, f26, rmm # perform operation
fnmsub.s f5, f8, f31, f26, rne # perform operation
fnmsub.s f5, f8, f31, f26, rtz # perform operation
fnmsub.s f5, f8, f31, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f5, f8, f31, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f5, f8, f31, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f5, f8, f31, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f5, f8, f31, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f5, f8, f31, f26 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0x7fc00000)
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f29, 0(x2) # load 0x807fffff from memory into f29
la x2, scratch
li x3, 0x864a8b25 # load x3 with value 0x864a8b25
sw x3, 0(x2) # store 0x864a8b25 in memory
flw f14, 0(x2) # load 0x864a8b25 from memory into f14
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f5, 0(x2) # load 0x7fc00000 from memory into f5
fnmsub.s f20, f29, f14, f5, dyn # perform operation
fnmsub.s f20, f29, f14, f5, rdn # perform operation
fnmsub.s f20, f29, f14, f5, rmm # perform operation
fnmsub.s f20, f29, f14, f5, rne # perform operation
fnmsub.s f20, f29, f14, f5, rtz # perform operation
fnmsub.s f20, f29, f14, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f20, f29, f14, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f20, f29, f14, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f20, f29, f14, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f20, f29, f14, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f20, f29, f14, f5 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0x7fffffff)
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f31, 0(x2) # load 0x807fffff from memory into f31
la x2, scratch
li x3, 0x2cdde864 # load x3 with value 0x2cdde864
sw x3, 0(x2) # store 0x2cdde864 in memory
flw f30, 0(x2) # load 0x2cdde864 from memory into f30
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f27, 0(x2) # load 0x7fffffff from memory into f27
fnmsub.s f15, f31, f30, f27, dyn # perform operation
fnmsub.s f15, f31, f30, f27, rdn # perform operation
fnmsub.s f15, f31, f30, f27, rmm # perform operation
fnmsub.s f15, f31, f30, f27, rne # perform operation
fnmsub.s f15, f31, f30, f27, rtz # perform operation
fnmsub.s f15, f31, f30, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f15, f31, f30, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f15, f31, f30, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f15, f31, f30, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f15, f31, f30, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f15, f31, f30, f27 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0xffffffff)
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f15, 0(x2) # load 0x807fffff from memory into f15
la x2, scratch
li x3, 0x9fb6b881 # load x3 with value 0x9fb6b881
sw x3, 0(x2) # store 0x9fb6b881 in memory
flw f7, 0(x2) # load 0x9fb6b881 from memory into f7
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f13, 0(x2) # load 0xffffffff from memory into f13
fnmsub.s f25, f15, f7, f13, dyn # perform operation
fnmsub.s f25, f15, f7, f13, rdn # perform operation
fnmsub.s f25, f15, f7, f13, rmm # perform operation
fnmsub.s f25, f15, f7, f13, rne # perform operation
fnmsub.s f25, f15, f7, f13, rtz # perform operation
fnmsub.s f25, f15, f7, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f25, f15, f7, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f25, f15, f7, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f25, f15, f7, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f25, f15, f7, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f25, f15, f7, f13 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0x7f800001)
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f29, 0(x2) # load 0x807fffff from memory into f29
la x2, scratch
li x3, 0x34107f93 # load x3 with value 0x34107f93
sw x3, 0(x2) # store 0x34107f93 in memory
flw f24, 0(x2) # load 0x34107f93 from memory into f24
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f27, 0(x2) # load 0x7f800001 from memory into f27
fnmsub.s f23, f29, f24, f27, dyn # perform operation
fnmsub.s f23, f29, f24, f27, rdn # perform operation
fnmsub.s f23, f29, f24, f27, rmm # perform operation
fnmsub.s f23, f29, f24, f27, rne # perform operation
fnmsub.s f23, f29, f24, f27, rtz # perform operation
fnmsub.s f23, f29, f24, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f23, f29, f24, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f23, f29, f24, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f23, f29, f24, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f23, f29, f24, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f23, f29, f24, f27 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0x7fbfffff)
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f1, 0(x2) # load 0x807fffff from memory into f1
la x2, scratch
li x3, 0x36742751 # load x3 with value 0x36742751
sw x3, 0(x2) # store 0x36742751 in memory
flw f3, 0(x2) # load 0x36742751 from memory into f3
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f11, 0(x2) # load 0x7fbfffff from memory into f11
fnmsub.s f23, f1, f3, f11, dyn # perform operation
fnmsub.s f23, f1, f3, f11, rdn # perform operation
fnmsub.s f23, f1, f3, f11, rmm # perform operation
fnmsub.s f23, f1, f3, f11, rne # perform operation
fnmsub.s f23, f1, f3, f11, rtz # perform operation
fnmsub.s f23, f1, f3, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f23, f1, f3, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f23, f1, f3, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f23, f1, f3, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f23, f1, f3, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f23, f1, f3, f11 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0xffbfffff)
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f1, 0(x2) # load 0x807fffff from memory into f1
la x2, scratch
li x3, 0x32e84b3e # load x3 with value 0x32e84b3e
sw x3, 0(x2) # store 0x32e84b3e in memory
flw f14, 0(x2) # load 0x32e84b3e from memory into f14
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f31, 0(x2) # load 0xffbfffff from memory into f31
fnmsub.s f21, f1, f14, f31, dyn # perform operation
fnmsub.s f21, f1, f14, f31, rdn # perform operation
fnmsub.s f21, f1, f14, f31, rmm # perform operation
fnmsub.s f21, f1, f14, f31, rne # perform operation
fnmsub.s f21, f1, f14, f31, rtz # perform operation
fnmsub.s f21, f1, f14, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f21, f1, f14, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f21, f1, f14, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f21, f1, f14, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f21, f1, f14, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f21, f1, f14, f31 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0x7ef8654f)
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f10, 0(x2) # load 0x807fffff from memory into f10
la x2, scratch
li x3, 0x0be65014 # load x3 with value 0x0be65014
sw x3, 0(x2) # store 0x0be65014 in memory
flw f21, 0(x2) # load 0x0be65014 from memory into f21
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f27, 0(x2) # load 0x7ef8654f from memory into f27
fnmsub.s f20, f10, f21, f27, dyn # perform operation
fnmsub.s f20, f10, f21, f27, rdn # perform operation
fnmsub.s f20, f10, f21, f27, rmm # perform operation
fnmsub.s f20, f10, f21, f27, rne # perform operation
fnmsub.s f20, f10, f21, f27, rtz # perform operation
fnmsub.s f20, f10, f21, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f20, f10, f21, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f20, f10, f21, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f20, f10, f21, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f20, f10, f21, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f20, f10, f21, f27 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0x813d9ab0)
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f2, 0(x2) # load 0x807fffff from memory into f2
la x2, scratch
li x3, 0x06aea00a # load x3 with value 0x06aea00a
sw x3, 0(x2) # store 0x06aea00a in memory
flw f24, 0(x2) # load 0x06aea00a from memory into f24
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f21, 0(x2) # load 0x813d9ab0 from memory into f21
fnmsub.s f14, f2, f24, f21, dyn # perform operation
fnmsub.s f14, f2, f24, f21, rdn # perform operation
fnmsub.s f14, f2, f24, f21, rmm # perform operation
fnmsub.s f14, f2, f24, f21, rne # perform operation
fnmsub.s f14, f2, f24, f21, rtz # perform operation
fnmsub.s f14, f2, f24, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f14, f2, f24, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f14, f2, f24, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f14, f2, f24, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f14, f2, f24, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f14, f2, f24, f21 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0x0)
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f8, 0(x2) # load 0x00400000 from memory into f8
la x2, scratch
li x3, 0x79c1ee09 # load x3 with value 0x79c1ee09
sw x3, 0(x2) # store 0x79c1ee09 in memory
flw f14, 0(x2) # load 0x79c1ee09 from memory into f14
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f16, 0(x2) # load 0x00000000 from memory into f16
fnmsub.s f30, f8, f14, f16, dyn # perform operation
fnmsub.s f30, f8, f14, f16, rdn # perform operation
fnmsub.s f30, f8, f14, f16, rmm # perform operation
fnmsub.s f30, f8, f14, f16, rne # perform operation
fnmsub.s f30, f8, f14, f16, rtz # perform operation
fnmsub.s f30, f8, f14, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f30, f8, f14, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f30, f8, f14, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f30, f8, f14, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f30, f8, f14, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f30, f8, f14, f16 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0x80000000)
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f25, 0(x2) # load 0x00400000 from memory into f25
la x2, scratch
li x3, 0xc87a563f # load x3 with value 0xc87a563f
sw x3, 0(x2) # store 0xc87a563f in memory
flw f6, 0(x2) # load 0xc87a563f from memory into f6
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f7, 0(x2) # load 0x80000000 from memory into f7
fnmsub.s f30, f25, f6, f7, dyn # perform operation
fnmsub.s f30, f25, f6, f7, rdn # perform operation
fnmsub.s f30, f25, f6, f7, rmm # perform operation
fnmsub.s f30, f25, f6, f7, rne # perform operation
fnmsub.s f30, f25, f6, f7, rtz # perform operation
fnmsub.s f30, f25, f6, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f30, f25, f6, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f30, f25, f6, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f30, f25, f6, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f30, f25, f6, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f30, f25, f6, f7 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0x3f800000)
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f28, 0(x2) # load 0x00400000 from memory into f28
la x2, scratch
li x3, 0xe0bc3ae5 # load x3 with value 0xe0bc3ae5
sw x3, 0(x2) # store 0xe0bc3ae5 in memory
flw f16, 0(x2) # load 0xe0bc3ae5 from memory into f16
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f3, 0(x2) # load 0x3f800000 from memory into f3
fnmsub.s f21, f28, f16, f3, dyn # perform operation
fnmsub.s f21, f28, f16, f3, rdn # perform operation
fnmsub.s f21, f28, f16, f3, rmm # perform operation
fnmsub.s f21, f28, f16, f3, rne # perform operation
fnmsub.s f21, f28, f16, f3, rtz # perform operation
fnmsub.s f21, f28, f16, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f21, f28, f16, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f21, f28, f16, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f21, f28, f16, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f21, f28, f16, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f21, f28, f16, f3 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0xbf800000)
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f12, 0(x2) # load 0x00400000 from memory into f12
la x2, scratch
li x3, 0xa36842a1 # load x3 with value 0xa36842a1
sw x3, 0(x2) # store 0xa36842a1 in memory
flw f10, 0(x2) # load 0xa36842a1 from memory into f10
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f2, 0(x2) # load 0xbf800000 from memory into f2
fnmsub.s f21, f12, f10, f2, dyn # perform operation
fnmsub.s f21, f12, f10, f2, rdn # perform operation
fnmsub.s f21, f12, f10, f2, rmm # perform operation
fnmsub.s f21, f12, f10, f2, rne # perform operation
fnmsub.s f21, f12, f10, f2, rtz # perform operation
fnmsub.s f21, f12, f10, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f21, f12, f10, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f21, f12, f10, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f21, f12, f10, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f21, f12, f10, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f21, f12, f10, f2 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0x3fc00000)
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f5, 0(x2) # load 0x00400000 from memory into f5
la x2, scratch
li x3, 0x5fb5ef05 # load x3 with value 0x5fb5ef05
sw x3, 0(x2) # store 0x5fb5ef05 in memory
flw f18, 0(x2) # load 0x5fb5ef05 from memory into f18
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f8, 0(x2) # load 0x3fc00000 from memory into f8
fnmsub.s f16, f5, f18, f8, dyn # perform operation
fnmsub.s f16, f5, f18, f8, rdn # perform operation
fnmsub.s f16, f5, f18, f8, rmm # perform operation
fnmsub.s f16, f5, f18, f8, rne # perform operation
fnmsub.s f16, f5, f18, f8, rtz # perform operation
fnmsub.s f16, f5, f18, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f16, f5, f18, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f16, f5, f18, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f16, f5, f18, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f16, f5, f18, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f16, f5, f18, f8 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0xbfc00000)
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f2, 0(x2) # load 0x00400000 from memory into f2
la x2, scratch
li x3, 0xa390ae9e # load x3 with value 0xa390ae9e
sw x3, 0(x2) # store 0xa390ae9e in memory
flw f22, 0(x2) # load 0xa390ae9e from memory into f22
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f8, 0(x2) # load 0xbfc00000 from memory into f8
fnmsub.s f27, f2, f22, f8, dyn # perform operation
fnmsub.s f27, f2, f22, f8, rdn # perform operation
fnmsub.s f27, f2, f22, f8, rmm # perform operation
fnmsub.s f27, f2, f22, f8, rne # perform operation
fnmsub.s f27, f2, f22, f8, rtz # perform operation
fnmsub.s f27, f2, f22, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f27, f2, f22, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f27, f2, f22, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f27, f2, f22, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f27, f2, f22, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f27, f2, f22, f8 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0x40000000)
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f31, 0(x2) # load 0x00400000 from memory into f31
la x2, scratch
li x3, 0x97d73600 # load x3 with value 0x97d73600
sw x3, 0(x2) # store 0x97d73600 in memory
flw f5, 0(x2) # load 0x97d73600 from memory into f5
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f21, 0(x2) # load 0x40000000 from memory into f21
fnmsub.s f20, f31, f5, f21, dyn # perform operation
fnmsub.s f20, f31, f5, f21, rdn # perform operation
fnmsub.s f20, f31, f5, f21, rmm # perform operation
fnmsub.s f20, f31, f5, f21, rne # perform operation
fnmsub.s f20, f31, f5, f21, rtz # perform operation
fnmsub.s f20, f31, f5, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f20, f31, f5, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f20, f31, f5, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f20, f31, f5, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f20, f31, f5, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f20, f31, f5, f21 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0xc0000000)
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f2, 0(x2) # load 0x00400000 from memory into f2
la x2, scratch
li x3, 0xe03a97cf # load x3 with value 0xe03a97cf
sw x3, 0(x2) # store 0xe03a97cf in memory
flw f27, 0(x2) # load 0xe03a97cf from memory into f27
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f29, 0(x2) # load 0xc0000000 from memory into f29
fnmsub.s f26, f2, f27, f29, dyn # perform operation
fnmsub.s f26, f2, f27, f29, rdn # perform operation
fnmsub.s f26, f2, f27, f29, rmm # perform operation
fnmsub.s f26, f2, f27, f29, rne # perform operation
fnmsub.s f26, f2, f27, f29, rtz # perform operation
fnmsub.s f26, f2, f27, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f26, f2, f27, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f26, f2, f27, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f26, f2, f27, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f26, f2, f27, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f26, f2, f27, f29 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0x800000)
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f7, 0(x2) # load 0x00400000 from memory into f7
la x2, scratch
li x3, 0x55d2f158 # load x3 with value 0x55d2f158
sw x3, 0(x2) # store 0x55d2f158 in memory
flw f25, 0(x2) # load 0x55d2f158 from memory into f25
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f16, 0(x2) # load 0x00800000 from memory into f16
fnmsub.s f12, f7, f25, f16, dyn # perform operation
fnmsub.s f12, f7, f25, f16, rdn # perform operation
fnmsub.s f12, f7, f25, f16, rmm # perform operation
fnmsub.s f12, f7, f25, f16, rne # perform operation
fnmsub.s f12, f7, f25, f16, rtz # perform operation
fnmsub.s f12, f7, f25, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f12, f7, f25, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f12, f7, f25, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f12, f7, f25, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f12, f7, f25, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f12, f7, f25, f16 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0x80800000)
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f11, 0(x2) # load 0x00400000 from memory into f11
la x2, scratch
li x3, 0x2a940423 # load x3 with value 0x2a940423
sw x3, 0(x2) # store 0x2a940423 in memory
flw f24, 0(x2) # load 0x2a940423 from memory into f24
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f21, 0(x2) # load 0x80800000 from memory into f21
fnmsub.s f3, f11, f24, f21, dyn # perform operation
fnmsub.s f3, f11, f24, f21, rdn # perform operation
fnmsub.s f3, f11, f24, f21, rmm # perform operation
fnmsub.s f3, f11, f24, f21, rne # perform operation
fnmsub.s f3, f11, f24, f21, rtz # perform operation
fnmsub.s f3, f11, f24, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f3, f11, f24, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f3, f11, f24, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f3, f11, f24, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f3, f11, f24, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f3, f11, f24, f21 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0x7f7fffff)
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f14, 0(x2) # load 0x00400000 from memory into f14
la x2, scratch
li x3, 0xa6b03df5 # load x3 with value 0xa6b03df5
sw x3, 0(x2) # store 0xa6b03df5 in memory
flw f27, 0(x2) # load 0xa6b03df5 from memory into f27
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f8, 0(x2) # load 0x7f7fffff from memory into f8
fnmsub.s f28, f14, f27, f8, dyn # perform operation
fnmsub.s f28, f14, f27, f8, rdn # perform operation
fnmsub.s f28, f14, f27, f8, rmm # perform operation
fnmsub.s f28, f14, f27, f8, rne # perform operation
fnmsub.s f28, f14, f27, f8, rtz # perform operation
fnmsub.s f28, f14, f27, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f28, f14, f27, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f28, f14, f27, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f28, f14, f27, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f28, f14, f27, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f28, f14, f27, f8 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0xff7fffff)
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f6, 0(x2) # load 0x00400000 from memory into f6
la x2, scratch
li x3, 0x53efb548 # load x3 with value 0x53efb548
sw x3, 0(x2) # store 0x53efb548 in memory
flw f23, 0(x2) # load 0x53efb548 from memory into f23
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f27, 0(x2) # load 0xff7fffff from memory into f27
fnmsub.s f3, f6, f23, f27, dyn # perform operation
fnmsub.s f3, f6, f23, f27, rdn # perform operation
fnmsub.s f3, f6, f23, f27, rmm # perform operation
fnmsub.s f3, f6, f23, f27, rne # perform operation
fnmsub.s f3, f6, f23, f27, rtz # perform operation
fnmsub.s f3, f6, f23, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f3, f6, f23, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f3, f6, f23, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f3, f6, f23, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f3, f6, f23, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f3, f6, f23, f27 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0x7fffff)
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f6, 0(x2) # load 0x00400000 from memory into f6
la x2, scratch
li x3, 0xa0788cb9 # load x3 with value 0xa0788cb9
sw x3, 0(x2) # store 0xa0788cb9 in memory
flw f7, 0(x2) # load 0xa0788cb9 from memory into f7
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f3, 0(x2) # load 0x007fffff from memory into f3
fnmsub.s f23, f6, f7, f3, dyn # perform operation
fnmsub.s f23, f6, f7, f3, rdn # perform operation
fnmsub.s f23, f6, f7, f3, rmm # perform operation
fnmsub.s f23, f6, f7, f3, rne # perform operation
fnmsub.s f23, f6, f7, f3, rtz # perform operation
fnmsub.s f23, f6, f7, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f23, f6, f7, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f23, f6, f7, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f23, f6, f7, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f23, f6, f7, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f23, f6, f7, f3 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0x807fffff)
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f8, 0(x2) # load 0x00400000 from memory into f8
la x2, scratch
li x3, 0x42a31c0c # load x3 with value 0x42a31c0c
sw x3, 0(x2) # store 0x42a31c0c in memory
flw f6, 0(x2) # load 0x42a31c0c from memory into f6
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f20, 0(x2) # load 0x807fffff from memory into f20
fnmsub.s f7, f8, f6, f20, dyn # perform operation
fnmsub.s f7, f8, f6, f20, rdn # perform operation
fnmsub.s f7, f8, f6, f20, rmm # perform operation
fnmsub.s f7, f8, f6, f20, rne # perform operation
fnmsub.s f7, f8, f6, f20, rtz # perform operation
fnmsub.s f7, f8, f6, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f7, f8, f6, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f7, f8, f6, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f7, f8, f6, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f7, f8, f6, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f7, f8, f6, f20 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0x400000)
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f10, 0(x2) # load 0x00400000 from memory into f10
la x2, scratch
li x3, 0xe040e724 # load x3 with value 0xe040e724
sw x3, 0(x2) # store 0xe040e724 in memory
flw f9, 0(x2) # load 0xe040e724 from memory into f9
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f27, 0(x2) # load 0x00400000 from memory into f27
fnmsub.s f21, f10, f9, f27, dyn # perform operation
fnmsub.s f21, f10, f9, f27, rdn # perform operation
fnmsub.s f21, f10, f9, f27, rmm # perform operation
fnmsub.s f21, f10, f9, f27, rne # perform operation
fnmsub.s f21, f10, f9, f27, rtz # perform operation
fnmsub.s f21, f10, f9, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f21, f10, f9, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f21, f10, f9, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f21, f10, f9, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f21, f10, f9, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f21, f10, f9, f27 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0x80400000)
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f1, 0(x2) # load 0x00400000 from memory into f1
la x2, scratch
li x3, 0xa7571998 # load x3 with value 0xa7571998
sw x3, 0(x2) # store 0xa7571998 in memory
flw f24, 0(x2) # load 0xa7571998 from memory into f24
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f21, 0(x2) # load 0x80400000 from memory into f21
fnmsub.s f12, f1, f24, f21, dyn # perform operation
fnmsub.s f12, f1, f24, f21, rdn # perform operation
fnmsub.s f12, f1, f24, f21, rmm # perform operation
fnmsub.s f12, f1, f24, f21, rne # perform operation
fnmsub.s f12, f1, f24, f21, rtz # perform operation
fnmsub.s f12, f1, f24, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f12, f1, f24, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f12, f1, f24, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f12, f1, f24, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f12, f1, f24, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f12, f1, f24, f21 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0x1)
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f5, 0(x2) # load 0x00400000 from memory into f5
la x2, scratch
li x3, 0x485c0cb3 # load x3 with value 0x485c0cb3
sw x3, 0(x2) # store 0x485c0cb3 in memory
flw f30, 0(x2) # load 0x485c0cb3 from memory into f30
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f17, 0(x2) # load 0x00000001 from memory into f17
fnmsub.s f12, f5, f30, f17, dyn # perform operation
fnmsub.s f12, f5, f30, f17, rdn # perform operation
fnmsub.s f12, f5, f30, f17, rmm # perform operation
fnmsub.s f12, f5, f30, f17, rne # perform operation
fnmsub.s f12, f5, f30, f17, rtz # perform operation
fnmsub.s f12, f5, f30, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f12, f5, f30, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f12, f5, f30, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f12, f5, f30, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f12, f5, f30, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f12, f5, f30, f17 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0x80000001)
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f29, 0(x2) # load 0x00400000 from memory into f29
la x2, scratch
li x3, 0x2afbdf5b # load x3 with value 0x2afbdf5b
sw x3, 0(x2) # store 0x2afbdf5b in memory
flw f12, 0(x2) # load 0x2afbdf5b from memory into f12
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f3, 0(x2) # load 0x80000001 from memory into f3
fnmsub.s f15, f29, f12, f3, dyn # perform operation
fnmsub.s f15, f29, f12, f3, rdn # perform operation
fnmsub.s f15, f29, f12, f3, rmm # perform operation
fnmsub.s f15, f29, f12, f3, rne # perform operation
fnmsub.s f15, f29, f12, f3, rtz # perform operation
fnmsub.s f15, f29, f12, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f15, f29, f12, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f15, f29, f12, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f15, f29, f12, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f15, f29, f12, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f15, f29, f12, f3 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0x7f800000)
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f9, 0(x2) # load 0x00400000 from memory into f9
la x2, scratch
li x3, 0x03fbf1f8 # load x3 with value 0x03fbf1f8
sw x3, 0(x2) # store 0x03fbf1f8 in memory
flw f6, 0(x2) # load 0x03fbf1f8 from memory into f6
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f29, 0(x2) # load 0x7f800000 from memory into f29
fnmsub.s f12, f9, f6, f29, dyn # perform operation
fnmsub.s f12, f9, f6, f29, rdn # perform operation
fnmsub.s f12, f9, f6, f29, rmm # perform operation
fnmsub.s f12, f9, f6, f29, rne # perform operation
fnmsub.s f12, f9, f6, f29, rtz # perform operation
fnmsub.s f12, f9, f6, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f12, f9, f6, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f12, f9, f6, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f12, f9, f6, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f12, f9, f6, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f12, f9, f6, f29 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0xff800000)
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f12, 0(x2) # load 0x00400000 from memory into f12
la x2, scratch
li x3, 0xc21b9ac0 # load x3 with value 0xc21b9ac0
sw x3, 0(x2) # store 0xc21b9ac0 in memory
flw f17, 0(x2) # load 0xc21b9ac0 from memory into f17
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f27, 0(x2) # load 0xff800000 from memory into f27
fnmsub.s f23, f12, f17, f27, dyn # perform operation
fnmsub.s f23, f12, f17, f27, rdn # perform operation
fnmsub.s f23, f12, f17, f27, rmm # perform operation
fnmsub.s f23, f12, f17, f27, rne # perform operation
fnmsub.s f23, f12, f17, f27, rtz # perform operation
fnmsub.s f23, f12, f17, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f23, f12, f17, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f23, f12, f17, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f23, f12, f17, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f23, f12, f17, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f23, f12, f17, f27 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0x7fc00000)
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f15, 0(x2) # load 0x00400000 from memory into f15
la x2, scratch
li x3, 0xd7d8ccec # load x3 with value 0xd7d8ccec
sw x3, 0(x2) # store 0xd7d8ccec in memory
flw f19, 0(x2) # load 0xd7d8ccec from memory into f19
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f8, 0(x2) # load 0x7fc00000 from memory into f8
fnmsub.s f22, f15, f19, f8, dyn # perform operation
fnmsub.s f22, f15, f19, f8, rdn # perform operation
fnmsub.s f22, f15, f19, f8, rmm # perform operation
fnmsub.s f22, f15, f19, f8, rne # perform operation
fnmsub.s f22, f15, f19, f8, rtz # perform operation
fnmsub.s f22, f15, f19, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f22, f15, f19, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f22, f15, f19, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f22, f15, f19, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f22, f15, f19, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f22, f15, f19, f8 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0x7fffffff)
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f13, 0(x2) # load 0x00400000 from memory into f13
la x2, scratch
li x3, 0x441993f2 # load x3 with value 0x441993f2
sw x3, 0(x2) # store 0x441993f2 in memory
flw f5, 0(x2) # load 0x441993f2 from memory into f5
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f25, 0(x2) # load 0x7fffffff from memory into f25
fnmsub.s f3, f13, f5, f25, dyn # perform operation
fnmsub.s f3, f13, f5, f25, rdn # perform operation
fnmsub.s f3, f13, f5, f25, rmm # perform operation
fnmsub.s f3, f13, f5, f25, rne # perform operation
fnmsub.s f3, f13, f5, f25, rtz # perform operation
fnmsub.s f3, f13, f5, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f3, f13, f5, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f3, f13, f5, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f3, f13, f5, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f3, f13, f5, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f3, f13, f5, f25 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0xffffffff)
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f14, 0(x2) # load 0x00400000 from memory into f14
la x2, scratch
li x3, 0x2c78e6f6 # load x3 with value 0x2c78e6f6
sw x3, 0(x2) # store 0x2c78e6f6 in memory
flw f31, 0(x2) # load 0x2c78e6f6 from memory into f31
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f24, 0(x2) # load 0xffffffff from memory into f24
fnmsub.s f16, f14, f31, f24, dyn # perform operation
fnmsub.s f16, f14, f31, f24, rdn # perform operation
fnmsub.s f16, f14, f31, f24, rmm # perform operation
fnmsub.s f16, f14, f31, f24, rne # perform operation
fnmsub.s f16, f14, f31, f24, rtz # perform operation
fnmsub.s f16, f14, f31, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f16, f14, f31, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f16, f14, f31, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f16, f14, f31, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f16, f14, f31, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f16, f14, f31, f24 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0x7f800001)
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f5, 0(x2) # load 0x00400000 from memory into f5
la x2, scratch
li x3, 0xc8e484a6 # load x3 with value 0xc8e484a6
sw x3, 0(x2) # store 0xc8e484a6 in memory
flw f3, 0(x2) # load 0xc8e484a6 from memory into f3
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f27, 0(x2) # load 0x7f800001 from memory into f27
fnmsub.s f12, f5, f3, f27, dyn # perform operation
fnmsub.s f12, f5, f3, f27, rdn # perform operation
fnmsub.s f12, f5, f3, f27, rmm # perform operation
fnmsub.s f12, f5, f3, f27, rne # perform operation
fnmsub.s f12, f5, f3, f27, rtz # perform operation
fnmsub.s f12, f5, f3, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f12, f5, f3, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f12, f5, f3, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f12, f5, f3, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f12, f5, f3, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f12, f5, f3, f27 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0x7fbfffff)
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f15, 0(x2) # load 0x00400000 from memory into f15
la x2, scratch
li x3, 0x8c9fc666 # load x3 with value 0x8c9fc666
sw x3, 0(x2) # store 0x8c9fc666 in memory
flw f24, 0(x2) # load 0x8c9fc666 from memory into f24
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f11, 0(x2) # load 0x7fbfffff from memory into f11
fnmsub.s f30, f15, f24, f11, dyn # perform operation
fnmsub.s f30, f15, f24, f11, rdn # perform operation
fnmsub.s f30, f15, f24, f11, rmm # perform operation
fnmsub.s f30, f15, f24, f11, rne # perform operation
fnmsub.s f30, f15, f24, f11, rtz # perform operation
fnmsub.s f30, f15, f24, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f30, f15, f24, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f30, f15, f24, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f30, f15, f24, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f30, f15, f24, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f30, f15, f24, f11 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0xffbfffff)
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f20, 0(x2) # load 0x00400000 from memory into f20
la x2, scratch
li x3, 0x6842cd24 # load x3 with value 0x6842cd24
sw x3, 0(x2) # store 0x6842cd24 in memory
flw f13, 0(x2) # load 0x6842cd24 from memory into f13
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f18, 0(x2) # load 0xffbfffff from memory into f18
fnmsub.s f10, f20, f13, f18, dyn # perform operation
fnmsub.s f10, f20, f13, f18, rdn # perform operation
fnmsub.s f10, f20, f13, f18, rmm # perform operation
fnmsub.s f10, f20, f13, f18, rne # perform operation
fnmsub.s f10, f20, f13, f18, rtz # perform operation
fnmsub.s f10, f20, f13, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f10, f20, f13, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f10, f20, f13, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f10, f20, f13, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f10, f20, f13, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f10, f20, f13, f18 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0x7ef8654f)
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f29, 0(x2) # load 0x00400000 from memory into f29
la x2, scratch
li x3, 0xcde3ccee # load x3 with value 0xcde3ccee
sw x3, 0(x2) # store 0xcde3ccee in memory
flw f19, 0(x2) # load 0xcde3ccee from memory into f19
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f13, 0(x2) # load 0x7ef8654f from memory into f13
fnmsub.s f15, f29, f19, f13, dyn # perform operation
fnmsub.s f15, f29, f19, f13, rdn # perform operation
fnmsub.s f15, f29, f19, f13, rmm # perform operation
fnmsub.s f15, f29, f19, f13, rne # perform operation
fnmsub.s f15, f29, f19, f13, rtz # perform operation
fnmsub.s f15, f29, f19, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f15, f29, f19, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f15, f29, f19, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f15, f29, f19, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f15, f29, f19, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f15, f29, f19, f13 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0x813d9ab0)
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f19, 0(x2) # load 0x00400000 from memory into f19
la x2, scratch
li x3, 0x6dff24ef # load x3 with value 0x6dff24ef
sw x3, 0(x2) # store 0x6dff24ef in memory
flw f26, 0(x2) # load 0x6dff24ef from memory into f26
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f25, 0(x2) # load 0x813d9ab0 from memory into f25
fnmsub.s f22, f19, f26, f25, dyn # perform operation
fnmsub.s f22, f19, f26, f25, rdn # perform operation
fnmsub.s f22, f19, f26, f25, rmm # perform operation
fnmsub.s f22, f19, f26, f25, rne # perform operation
fnmsub.s f22, f19, f26, f25, rtz # perform operation
fnmsub.s f22, f19, f26, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f22, f19, f26, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f22, f19, f26, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f22, f19, f26, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f22, f19, f26, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f22, f19, f26, f25 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0x0)
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f16, 0(x2) # load 0x80400000 from memory into f16
la x2, scratch
li x3, 0x8f532a63 # load x3 with value 0x8f532a63
sw x3, 0(x2) # store 0x8f532a63 in memory
flw f14, 0(x2) # load 0x8f532a63 from memory into f14
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f27, 0(x2) # load 0x00000000 from memory into f27
fnmsub.s f22, f16, f14, f27, dyn # perform operation
fnmsub.s f22, f16, f14, f27, rdn # perform operation
fnmsub.s f22, f16, f14, f27, rmm # perform operation
fnmsub.s f22, f16, f14, f27, rne # perform operation
fnmsub.s f22, f16, f14, f27, rtz # perform operation
fnmsub.s f22, f16, f14, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f22, f16, f14, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f22, f16, f14, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f22, f16, f14, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f22, f16, f14, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f22, f16, f14, f27 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0x80000000)
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f3, 0(x2) # load 0x80400000 from memory into f3
la x2, scratch
li x3, 0xc56dc792 # load x3 with value 0xc56dc792
sw x3, 0(x2) # store 0xc56dc792 in memory
flw f16, 0(x2) # load 0xc56dc792 from memory into f16
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f7, 0(x2) # load 0x80000000 from memory into f7
fnmsub.s f2, f3, f16, f7, dyn # perform operation
fnmsub.s f2, f3, f16, f7, rdn # perform operation
fnmsub.s f2, f3, f16, f7, rmm # perform operation
fnmsub.s f2, f3, f16, f7, rne # perform operation
fnmsub.s f2, f3, f16, f7, rtz # perform operation
fnmsub.s f2, f3, f16, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f2, f3, f16, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f2, f3, f16, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f2, f3, f16, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f2, f3, f16, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f2, f3, f16, f7 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0x3f800000)
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f22, 0(x2) # load 0x80400000 from memory into f22
la x2, scratch
li x3, 0xf36b56c6 # load x3 with value 0xf36b56c6
sw x3, 0(x2) # store 0xf36b56c6 in memory
flw f20, 0(x2) # load 0xf36b56c6 from memory into f20
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f24, 0(x2) # load 0x3f800000 from memory into f24
fnmsub.s f18, f22, f20, f24, dyn # perform operation
fnmsub.s f18, f22, f20, f24, rdn # perform operation
fnmsub.s f18, f22, f20, f24, rmm # perform operation
fnmsub.s f18, f22, f20, f24, rne # perform operation
fnmsub.s f18, f22, f20, f24, rtz # perform operation
fnmsub.s f18, f22, f20, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f18, f22, f20, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f18, f22, f20, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f18, f22, f20, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f18, f22, f20, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f18, f22, f20, f24 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0xbf800000)
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f13, 0(x2) # load 0x80400000 from memory into f13
la x2, scratch
li x3, 0x86244291 # load x3 with value 0x86244291
sw x3, 0(x2) # store 0x86244291 in memory
flw f14, 0(x2) # load 0x86244291 from memory into f14
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f25, 0(x2) # load 0xbf800000 from memory into f25
fnmsub.s f7, f13, f14, f25, dyn # perform operation
fnmsub.s f7, f13, f14, f25, rdn # perform operation
fnmsub.s f7, f13, f14, f25, rmm # perform operation
fnmsub.s f7, f13, f14, f25, rne # perform operation
fnmsub.s f7, f13, f14, f25, rtz # perform operation
fnmsub.s f7, f13, f14, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f7, f13, f14, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f7, f13, f14, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f7, f13, f14, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f7, f13, f14, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f7, f13, f14, f25 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0x3fc00000)
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f17, 0(x2) # load 0x80400000 from memory into f17
la x2, scratch
li x3, 0x58e64b6f # load x3 with value 0x58e64b6f
sw x3, 0(x2) # store 0x58e64b6f in memory
flw f20, 0(x2) # load 0x58e64b6f from memory into f20
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f3, 0(x2) # load 0x3fc00000 from memory into f3
fnmsub.s f11, f17, f20, f3, dyn # perform operation
fnmsub.s f11, f17, f20, f3, rdn # perform operation
fnmsub.s f11, f17, f20, f3, rmm # perform operation
fnmsub.s f11, f17, f20, f3, rne # perform operation
fnmsub.s f11, f17, f20, f3, rtz # perform operation
fnmsub.s f11, f17, f20, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f11, f17, f20, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f11, f17, f20, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f11, f17, f20, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f11, f17, f20, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f11, f17, f20, f3 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0xbfc00000)
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f13, 0(x2) # load 0x80400000 from memory into f13
la x2, scratch
li x3, 0x2f2a7278 # load x3 with value 0x2f2a7278
sw x3, 0(x2) # store 0x2f2a7278 in memory
flw f8, 0(x2) # load 0x2f2a7278 from memory into f8
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f22, 0(x2) # load 0xbfc00000 from memory into f22
fnmsub.s f3, f13, f8, f22, dyn # perform operation
fnmsub.s f3, f13, f8, f22, rdn # perform operation
fnmsub.s f3, f13, f8, f22, rmm # perform operation
fnmsub.s f3, f13, f8, f22, rne # perform operation
fnmsub.s f3, f13, f8, f22, rtz # perform operation
fnmsub.s f3, f13, f8, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f3, f13, f8, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f3, f13, f8, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f3, f13, f8, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f3, f13, f8, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f3, f13, f8, f22 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0x40000000)
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f19, 0(x2) # load 0x80400000 from memory into f19
la x2, scratch
li x3, 0x6984a749 # load x3 with value 0x6984a749
sw x3, 0(x2) # store 0x6984a749 in memory
flw f20, 0(x2) # load 0x6984a749 from memory into f20
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f6, 0(x2) # load 0x40000000 from memory into f6
fnmsub.s f22, f19, f20, f6, dyn # perform operation
fnmsub.s f22, f19, f20, f6, rdn # perform operation
fnmsub.s f22, f19, f20, f6, rmm # perform operation
fnmsub.s f22, f19, f20, f6, rne # perform operation
fnmsub.s f22, f19, f20, f6, rtz # perform operation
fnmsub.s f22, f19, f20, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f22, f19, f20, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f22, f19, f20, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f22, f19, f20, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f22, f19, f20, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f22, f19, f20, f6 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0xc0000000)
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f30, 0(x2) # load 0x80400000 from memory into f30
la x2, scratch
li x3, 0xb9be9773 # load x3 with value 0xb9be9773
sw x3, 0(x2) # store 0xb9be9773 in memory
flw f19, 0(x2) # load 0xb9be9773 from memory into f19
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f5, 0(x2) # load 0xc0000000 from memory into f5
fnmsub.s f23, f30, f19, f5, dyn # perform operation
fnmsub.s f23, f30, f19, f5, rdn # perform operation
fnmsub.s f23, f30, f19, f5, rmm # perform operation
fnmsub.s f23, f30, f19, f5, rne # perform operation
fnmsub.s f23, f30, f19, f5, rtz # perform operation
fnmsub.s f23, f30, f19, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f23, f30, f19, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f23, f30, f19, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f23, f30, f19, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f23, f30, f19, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f23, f30, f19, f5 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0x800000)
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f11, 0(x2) # load 0x80400000 from memory into f11
la x2, scratch
li x3, 0x043884e7 # load x3 with value 0x043884e7
sw x3, 0(x2) # store 0x043884e7 in memory
flw f15, 0(x2) # load 0x043884e7 from memory into f15
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f9, 0(x2) # load 0x00800000 from memory into f9
fnmsub.s f31, f11, f15, f9, dyn # perform operation
fnmsub.s f31, f11, f15, f9, rdn # perform operation
fnmsub.s f31, f11, f15, f9, rmm # perform operation
fnmsub.s f31, f11, f15, f9, rne # perform operation
fnmsub.s f31, f11, f15, f9, rtz # perform operation
fnmsub.s f31, f11, f15, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f31, f11, f15, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f31, f11, f15, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f31, f11, f15, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f31, f11, f15, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f31, f11, f15, f9 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0x80800000)
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f20, 0(x2) # load 0x80400000 from memory into f20
la x2, scratch
li x3, 0xa4f2720e # load x3 with value 0xa4f2720e
sw x3, 0(x2) # store 0xa4f2720e in memory
flw f13, 0(x2) # load 0xa4f2720e from memory into f13
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f12, 0(x2) # load 0x80800000 from memory into f12
fnmsub.s f29, f20, f13, f12, dyn # perform operation
fnmsub.s f29, f20, f13, f12, rdn # perform operation
fnmsub.s f29, f20, f13, f12, rmm # perform operation
fnmsub.s f29, f20, f13, f12, rne # perform operation
fnmsub.s f29, f20, f13, f12, rtz # perform operation
fnmsub.s f29, f20, f13, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f29, f20, f13, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f29, f20, f13, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f29, f20, f13, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f29, f20, f13, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f29, f20, f13, f12 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0x7f7fffff)
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f23, 0(x2) # load 0x80400000 from memory into f23
la x2, scratch
li x3, 0x1f1bf7b6 # load x3 with value 0x1f1bf7b6
sw x3, 0(x2) # store 0x1f1bf7b6 in memory
flw f11, 0(x2) # load 0x1f1bf7b6 from memory into f11
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f14, 0(x2) # load 0x7f7fffff from memory into f14
fnmsub.s f26, f23, f11, f14, dyn # perform operation
fnmsub.s f26, f23, f11, f14, rdn # perform operation
fnmsub.s f26, f23, f11, f14, rmm # perform operation
fnmsub.s f26, f23, f11, f14, rne # perform operation
fnmsub.s f26, f23, f11, f14, rtz # perform operation
fnmsub.s f26, f23, f11, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f26, f23, f11, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f26, f23, f11, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f26, f23, f11, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f26, f23, f11, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f26, f23, f11, f14 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0xff7fffff)
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f2, 0(x2) # load 0x80400000 from memory into f2
la x2, scratch
li x3, 0x2835c482 # load x3 with value 0x2835c482
sw x3, 0(x2) # store 0x2835c482 in memory
flw f6, 0(x2) # load 0x2835c482 from memory into f6
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f24, 0(x2) # load 0xff7fffff from memory into f24
fnmsub.s f20, f2, f6, f24, dyn # perform operation
fnmsub.s f20, f2, f6, f24, rdn # perform operation
fnmsub.s f20, f2, f6, f24, rmm # perform operation
fnmsub.s f20, f2, f6, f24, rne # perform operation
fnmsub.s f20, f2, f6, f24, rtz # perform operation
fnmsub.s f20, f2, f6, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f20, f2, f6, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f20, f2, f6, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f20, f2, f6, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f20, f2, f6, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f20, f2, f6, f24 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0x7fffff)
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f3, 0(x2) # load 0x80400000 from memory into f3
la x2, scratch
li x3, 0x64a74ed9 # load x3 with value 0x64a74ed9
sw x3, 0(x2) # store 0x64a74ed9 in memory
flw f28, 0(x2) # load 0x64a74ed9 from memory into f28
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f11, 0(x2) # load 0x007fffff from memory into f11
fnmsub.s f14, f3, f28, f11, dyn # perform operation
fnmsub.s f14, f3, f28, f11, rdn # perform operation
fnmsub.s f14, f3, f28, f11, rmm # perform operation
fnmsub.s f14, f3, f28, f11, rne # perform operation
fnmsub.s f14, f3, f28, f11, rtz # perform operation
fnmsub.s f14, f3, f28, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f14, f3, f28, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f14, f3, f28, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f14, f3, f28, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f14, f3, f28, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f14, f3, f28, f11 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0x807fffff)
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f12, 0(x2) # load 0x80400000 from memory into f12
la x2, scratch
li x3, 0x01746112 # load x3 with value 0x01746112
sw x3, 0(x2) # store 0x01746112 in memory
flw f14, 0(x2) # load 0x01746112 from memory into f14
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f3, 0(x2) # load 0x807fffff from memory into f3
fnmsub.s f25, f12, f14, f3, dyn # perform operation
fnmsub.s f25, f12, f14, f3, rdn # perform operation
fnmsub.s f25, f12, f14, f3, rmm # perform operation
fnmsub.s f25, f12, f14, f3, rne # perform operation
fnmsub.s f25, f12, f14, f3, rtz # perform operation
fnmsub.s f25, f12, f14, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f25, f12, f14, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f25, f12, f14, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f25, f12, f14, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f25, f12, f14, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f25, f12, f14, f3 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0x400000)
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f15, 0(x2) # load 0x80400000 from memory into f15
la x2, scratch
li x3, 0xaaf2f391 # load x3 with value 0xaaf2f391
sw x3, 0(x2) # store 0xaaf2f391 in memory
flw f28, 0(x2) # load 0xaaf2f391 from memory into f28
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f27, 0(x2) # load 0x00400000 from memory into f27
fnmsub.s f8, f15, f28, f27, dyn # perform operation
fnmsub.s f8, f15, f28, f27, rdn # perform operation
fnmsub.s f8, f15, f28, f27, rmm # perform operation
fnmsub.s f8, f15, f28, f27, rne # perform operation
fnmsub.s f8, f15, f28, f27, rtz # perform operation
fnmsub.s f8, f15, f28, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f8, f15, f28, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f8, f15, f28, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f8, f15, f28, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f8, f15, f28, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f8, f15, f28, f27 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0x80400000)
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f31, 0(x2) # load 0x80400000 from memory into f31
la x2, scratch
li x3, 0x201f2657 # load x3 with value 0x201f2657
sw x3, 0(x2) # store 0x201f2657 in memory
flw f27, 0(x2) # load 0x201f2657 from memory into f27
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f28, 0(x2) # load 0x80400000 from memory into f28
fnmsub.s f10, f31, f27, f28, dyn # perform operation
fnmsub.s f10, f31, f27, f28, rdn # perform operation
fnmsub.s f10, f31, f27, f28, rmm # perform operation
fnmsub.s f10, f31, f27, f28, rne # perform operation
fnmsub.s f10, f31, f27, f28, rtz # perform operation
fnmsub.s f10, f31, f27, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f10, f31, f27, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f10, f31, f27, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f10, f31, f27, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f10, f31, f27, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f10, f31, f27, f28 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0x1)
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f2, 0(x2) # load 0x80400000 from memory into f2
la x2, scratch
li x3, 0x93747e4c # load x3 with value 0x93747e4c
sw x3, 0(x2) # store 0x93747e4c in memory
flw f29, 0(x2) # load 0x93747e4c from memory into f29
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f23, 0(x2) # load 0x00000001 from memory into f23
fnmsub.s f12, f2, f29, f23, dyn # perform operation
fnmsub.s f12, f2, f29, f23, rdn # perform operation
fnmsub.s f12, f2, f29, f23, rmm # perform operation
fnmsub.s f12, f2, f29, f23, rne # perform operation
fnmsub.s f12, f2, f29, f23, rtz # perform operation
fnmsub.s f12, f2, f29, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f12, f2, f29, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f12, f2, f29, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f12, f2, f29, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f12, f2, f29, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f12, f2, f29, f23 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0x80000001)
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f14, 0(x2) # load 0x80400000 from memory into f14
la x2, scratch
li x3, 0x01e1ea3a # load x3 with value 0x01e1ea3a
sw x3, 0(x2) # store 0x01e1ea3a in memory
flw f6, 0(x2) # load 0x01e1ea3a from memory into f6
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f3, 0(x2) # load 0x80000001 from memory into f3
fnmsub.s f16, f14, f6, f3, dyn # perform operation
fnmsub.s f16, f14, f6, f3, rdn # perform operation
fnmsub.s f16, f14, f6, f3, rmm # perform operation
fnmsub.s f16, f14, f6, f3, rne # perform operation
fnmsub.s f16, f14, f6, f3, rtz # perform operation
fnmsub.s f16, f14, f6, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f16, f14, f6, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f16, f14, f6, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f16, f14, f6, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f16, f14, f6, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f16, f14, f6, f3 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0x7f800000)
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f2, 0(x2) # load 0x80400000 from memory into f2
la x2, scratch
li x3, 0x8c4ddb75 # load x3 with value 0x8c4ddb75
sw x3, 0(x2) # store 0x8c4ddb75 in memory
flw f22, 0(x2) # load 0x8c4ddb75 from memory into f22
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f14, 0(x2) # load 0x7f800000 from memory into f14
fnmsub.s f25, f2, f22, f14, dyn # perform operation
fnmsub.s f25, f2, f22, f14, rdn # perform operation
fnmsub.s f25, f2, f22, f14, rmm # perform operation
fnmsub.s f25, f2, f22, f14, rne # perform operation
fnmsub.s f25, f2, f22, f14, rtz # perform operation
fnmsub.s f25, f2, f22, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f25, f2, f22, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f25, f2, f22, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f25, f2, f22, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f25, f2, f22, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f25, f2, f22, f14 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0xff800000)
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f20, 0(x2) # load 0x80400000 from memory into f20
la x2, scratch
li x3, 0x57d77cc3 # load x3 with value 0x57d77cc3
sw x3, 0(x2) # store 0x57d77cc3 in memory
flw f7, 0(x2) # load 0x57d77cc3 from memory into f7
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f13, 0(x2) # load 0xff800000 from memory into f13
fnmsub.s f27, f20, f7, f13, dyn # perform operation
fnmsub.s f27, f20, f7, f13, rdn # perform operation
fnmsub.s f27, f20, f7, f13, rmm # perform operation
fnmsub.s f27, f20, f7, f13, rne # perform operation
fnmsub.s f27, f20, f7, f13, rtz # perform operation
fnmsub.s f27, f20, f7, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f27, f20, f7, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f27, f20, f7, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f27, f20, f7, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f27, f20, f7, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f27, f20, f7, f13 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0x7fc00000)
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f3, 0(x2) # load 0x80400000 from memory into f3
la x2, scratch
li x3, 0x08bed97b # load x3 with value 0x08bed97b
sw x3, 0(x2) # store 0x08bed97b in memory
flw f12, 0(x2) # load 0x08bed97b from memory into f12
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f26, 0(x2) # load 0x7fc00000 from memory into f26
fnmsub.s f19, f3, f12, f26, dyn # perform operation
fnmsub.s f19, f3, f12, f26, rdn # perform operation
fnmsub.s f19, f3, f12, f26, rmm # perform operation
fnmsub.s f19, f3, f12, f26, rne # perform operation
fnmsub.s f19, f3, f12, f26, rtz # perform operation
fnmsub.s f19, f3, f12, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f19, f3, f12, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f19, f3, f12, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f19, f3, f12, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f19, f3, f12, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f19, f3, f12, f26 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0x7fffffff)
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f23, 0(x2) # load 0x80400000 from memory into f23
la x2, scratch
li x3, 0x8f780b83 # load x3 with value 0x8f780b83
sw x3, 0(x2) # store 0x8f780b83 in memory
flw f5, 0(x2) # load 0x8f780b83 from memory into f5
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f29, 0(x2) # load 0x7fffffff from memory into f29
fnmsub.s f13, f23, f5, f29, dyn # perform operation
fnmsub.s f13, f23, f5, f29, rdn # perform operation
fnmsub.s f13, f23, f5, f29, rmm # perform operation
fnmsub.s f13, f23, f5, f29, rne # perform operation
fnmsub.s f13, f23, f5, f29, rtz # perform operation
fnmsub.s f13, f23, f5, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f13, f23, f5, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f13, f23, f5, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f13, f23, f5, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f13, f23, f5, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f13, f23, f5, f29 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0xffffffff)
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f7, 0(x2) # load 0x80400000 from memory into f7
la x2, scratch
li x3, 0x9bd63d4f # load x3 with value 0x9bd63d4f
sw x3, 0(x2) # store 0x9bd63d4f in memory
flw f17, 0(x2) # load 0x9bd63d4f from memory into f17
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f31, 0(x2) # load 0xffffffff from memory into f31
fnmsub.s f5, f7, f17, f31, dyn # perform operation
fnmsub.s f5, f7, f17, f31, rdn # perform operation
fnmsub.s f5, f7, f17, f31, rmm # perform operation
fnmsub.s f5, f7, f17, f31, rne # perform operation
fnmsub.s f5, f7, f17, f31, rtz # perform operation
fnmsub.s f5, f7, f17, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f5, f7, f17, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f5, f7, f17, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f5, f7, f17, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f5, f7, f17, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f5, f7, f17, f31 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0x7f800001)
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f21, 0(x2) # load 0x80400000 from memory into f21
la x2, scratch
li x3, 0x78c4ec7d # load x3 with value 0x78c4ec7d
sw x3, 0(x2) # store 0x78c4ec7d in memory
flw f11, 0(x2) # load 0x78c4ec7d from memory into f11
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f19, 0(x2) # load 0x7f800001 from memory into f19
fnmsub.s f14, f21, f11, f19, dyn # perform operation
fnmsub.s f14, f21, f11, f19, rdn # perform operation
fnmsub.s f14, f21, f11, f19, rmm # perform operation
fnmsub.s f14, f21, f11, f19, rne # perform operation
fnmsub.s f14, f21, f11, f19, rtz # perform operation
fnmsub.s f14, f21, f11, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f14, f21, f11, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f14, f21, f11, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f14, f21, f11, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f14, f21, f11, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f14, f21, f11, f19 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0x7fbfffff)
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f26, 0(x2) # load 0x80400000 from memory into f26
la x2, scratch
li x3, 0x2fb8728a # load x3 with value 0x2fb8728a
sw x3, 0(x2) # store 0x2fb8728a in memory
flw f8, 0(x2) # load 0x2fb8728a from memory into f8
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f30, 0(x2) # load 0x7fbfffff from memory into f30
fnmsub.s f3, f26, f8, f30, dyn # perform operation
fnmsub.s f3, f26, f8, f30, rdn # perform operation
fnmsub.s f3, f26, f8, f30, rmm # perform operation
fnmsub.s f3, f26, f8, f30, rne # perform operation
fnmsub.s f3, f26, f8, f30, rtz # perform operation
fnmsub.s f3, f26, f8, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f3, f26, f8, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f3, f26, f8, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f3, f26, f8, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f3, f26, f8, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f3, f26, f8, f30 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0xffbfffff)
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f11, 0(x2) # load 0x80400000 from memory into f11
la x2, scratch
li x3, 0xc827b267 # load x3 with value 0xc827b267
sw x3, 0(x2) # store 0xc827b267 in memory
flw f1, 0(x2) # load 0xc827b267 from memory into f1
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f18, 0(x2) # load 0xffbfffff from memory into f18
fnmsub.s f16, f11, f1, f18, dyn # perform operation
fnmsub.s f16, f11, f1, f18, rdn # perform operation
fnmsub.s f16, f11, f1, f18, rmm # perform operation
fnmsub.s f16, f11, f1, f18, rne # perform operation
fnmsub.s f16, f11, f1, f18, rtz # perform operation
fnmsub.s f16, f11, f1, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f16, f11, f1, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f16, f11, f1, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f16, f11, f1, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f16, f11, f1, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f16, f11, f1, f18 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0x7ef8654f)
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f9, 0(x2) # load 0x80400000 from memory into f9
la x2, scratch
li x3, 0x7a5ab577 # load x3 with value 0x7a5ab577
sw x3, 0(x2) # store 0x7a5ab577 in memory
flw f25, 0(x2) # load 0x7a5ab577 from memory into f25
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f13, 0(x2) # load 0x7ef8654f from memory into f13
fnmsub.s f2, f9, f25, f13, dyn # perform operation
fnmsub.s f2, f9, f25, f13, rdn # perform operation
fnmsub.s f2, f9, f25, f13, rmm # perform operation
fnmsub.s f2, f9, f25, f13, rne # perform operation
fnmsub.s f2, f9, f25, f13, rtz # perform operation
fnmsub.s f2, f9, f25, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f2, f9, f25, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f2, f9, f25, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f2, f9, f25, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f2, f9, f25, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f2, f9, f25, f13 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0x813d9ab0)
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f6, 0(x2) # load 0x80400000 from memory into f6
la x2, scratch
li x3, 0xe361cc1b # load x3 with value 0xe361cc1b
sw x3, 0(x2) # store 0xe361cc1b in memory
flw f12, 0(x2) # load 0xe361cc1b from memory into f12
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f1, 0(x2) # load 0x813d9ab0 from memory into f1
fnmsub.s f23, f6, f12, f1, dyn # perform operation
fnmsub.s f23, f6, f12, f1, rdn # perform operation
fnmsub.s f23, f6, f12, f1, rmm # perform operation
fnmsub.s f23, f6, f12, f1, rne # perform operation
fnmsub.s f23, f6, f12, f1, rtz # perform operation
fnmsub.s f23, f6, f12, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f23, f6, f12, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f23, f6, f12, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f23, f6, f12, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f23, f6, f12, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f23, f6, f12, f1 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x0)
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f10, 0(x2) # load 0x00000001 from memory into f10
la x2, scratch
li x3, 0xc034b834 # load x3 with value 0xc034b834
sw x3, 0(x2) # store 0xc034b834 in memory
flw f29, 0(x2) # load 0xc034b834 from memory into f29
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f18, 0(x2) # load 0x00000000 from memory into f18
fnmsub.s f8, f10, f29, f18, dyn # perform operation
fnmsub.s f8, f10, f29, f18, rdn # perform operation
fnmsub.s f8, f10, f29, f18, rmm # perform operation
fnmsub.s f8, f10, f29, f18, rne # perform operation
fnmsub.s f8, f10, f29, f18, rtz # perform operation
fnmsub.s f8, f10, f29, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f8, f10, f29, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f8, f10, f29, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f8, f10, f29, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f8, f10, f29, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f8, f10, f29, f18 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x80000000)
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f8, 0(x2) # load 0x00000001 from memory into f8
la x2, scratch
li x3, 0x0ad57594 # load x3 with value 0x0ad57594
sw x3, 0(x2) # store 0x0ad57594 in memory
flw f31, 0(x2) # load 0x0ad57594 from memory into f31
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f19, 0(x2) # load 0x80000000 from memory into f19
fnmsub.s f9, f8, f31, f19, dyn # perform operation
fnmsub.s f9, f8, f31, f19, rdn # perform operation
fnmsub.s f9, f8, f31, f19, rmm # perform operation
fnmsub.s f9, f8, f31, f19, rne # perform operation
fnmsub.s f9, f8, f31, f19, rtz # perform operation
fnmsub.s f9, f8, f31, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f9, f8, f31, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f9, f8, f31, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f9, f8, f31, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f9, f8, f31, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f9, f8, f31, f19 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x3f800000)
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f15, 0(x2) # load 0x00000001 from memory into f15
la x2, scratch
li x3, 0x72e4e374 # load x3 with value 0x72e4e374
sw x3, 0(x2) # store 0x72e4e374 in memory
flw f12, 0(x2) # load 0x72e4e374 from memory into f12
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f11, 0(x2) # load 0x3f800000 from memory into f11
fnmsub.s f29, f15, f12, f11, dyn # perform operation
fnmsub.s f29, f15, f12, f11, rdn # perform operation
fnmsub.s f29, f15, f12, f11, rmm # perform operation
fnmsub.s f29, f15, f12, f11, rne # perform operation
fnmsub.s f29, f15, f12, f11, rtz # perform operation
fnmsub.s f29, f15, f12, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f29, f15, f12, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f29, f15, f12, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f29, f15, f12, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f29, f15, f12, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f29, f15, f12, f11 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0xbf800000)
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f25, 0(x2) # load 0x00000001 from memory into f25
la x2, scratch
li x3, 0xe9393cd5 # load x3 with value 0xe9393cd5
sw x3, 0(x2) # store 0xe9393cd5 in memory
flw f18, 0(x2) # load 0xe9393cd5 from memory into f18
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f21, 0(x2) # load 0xbf800000 from memory into f21
fnmsub.s f16, f25, f18, f21, dyn # perform operation
fnmsub.s f16, f25, f18, f21, rdn # perform operation
fnmsub.s f16, f25, f18, f21, rmm # perform operation
fnmsub.s f16, f25, f18, f21, rne # perform operation
fnmsub.s f16, f25, f18, f21, rtz # perform operation
fnmsub.s f16, f25, f18, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f16, f25, f18, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f16, f25, f18, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f16, f25, f18, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f16, f25, f18, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f16, f25, f18, f21 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x3fc00000)
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f21, 0(x2) # load 0x00000001 from memory into f21
la x2, scratch
li x3, 0xc1cc4747 # load x3 with value 0xc1cc4747
sw x3, 0(x2) # store 0xc1cc4747 in memory
flw f29, 0(x2) # load 0xc1cc4747 from memory into f29
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f11, 0(x2) # load 0x3fc00000 from memory into f11
fnmsub.s f26, f21, f29, f11, dyn # perform operation
fnmsub.s f26, f21, f29, f11, rdn # perform operation
fnmsub.s f26, f21, f29, f11, rmm # perform operation
fnmsub.s f26, f21, f29, f11, rne # perform operation
fnmsub.s f26, f21, f29, f11, rtz # perform operation
fnmsub.s f26, f21, f29, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f26, f21, f29, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f26, f21, f29, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f26, f21, f29, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f26, f21, f29, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f26, f21, f29, f11 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0xbfc00000)
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f3, 0(x2) # load 0x00000001 from memory into f3
la x2, scratch
li x3, 0x0f5b1673 # load x3 with value 0x0f5b1673
sw x3, 0(x2) # store 0x0f5b1673 in memory
flw f5, 0(x2) # load 0x0f5b1673 from memory into f5
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f13, 0(x2) # load 0xbfc00000 from memory into f13
fnmsub.s f14, f3, f5, f13, dyn # perform operation
fnmsub.s f14, f3, f5, f13, rdn # perform operation
fnmsub.s f14, f3, f5, f13, rmm # perform operation
fnmsub.s f14, f3, f5, f13, rne # perform operation
fnmsub.s f14, f3, f5, f13, rtz # perform operation
fnmsub.s f14, f3, f5, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f14, f3, f5, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f14, f3, f5, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f14, f3, f5, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f14, f3, f5, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f14, f3, f5, f13 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x40000000)
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f12, 0(x2) # load 0x00000001 from memory into f12
la x2, scratch
li x3, 0xc79720a2 # load x3 with value 0xc79720a2
sw x3, 0(x2) # store 0xc79720a2 in memory
flw f22, 0(x2) # load 0xc79720a2 from memory into f22
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f15, 0(x2) # load 0x40000000 from memory into f15
fnmsub.s f30, f12, f22, f15, dyn # perform operation
fnmsub.s f30, f12, f22, f15, rdn # perform operation
fnmsub.s f30, f12, f22, f15, rmm # perform operation
fnmsub.s f30, f12, f22, f15, rne # perform operation
fnmsub.s f30, f12, f22, f15, rtz # perform operation
fnmsub.s f30, f12, f22, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f30, f12, f22, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f30, f12, f22, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f30, f12, f22, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f30, f12, f22, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f30, f12, f22, f15 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0xc0000000)
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f10, 0(x2) # load 0x00000001 from memory into f10
la x2, scratch
li x3, 0x78f1bfe4 # load x3 with value 0x78f1bfe4
sw x3, 0(x2) # store 0x78f1bfe4 in memory
flw f21, 0(x2) # load 0x78f1bfe4 from memory into f21
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f22, 0(x2) # load 0xc0000000 from memory into f22
fnmsub.s f7, f10, f21, f22, dyn # perform operation
fnmsub.s f7, f10, f21, f22, rdn # perform operation
fnmsub.s f7, f10, f21, f22, rmm # perform operation
fnmsub.s f7, f10, f21, f22, rne # perform operation
fnmsub.s f7, f10, f21, f22, rtz # perform operation
fnmsub.s f7, f10, f21, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f7, f10, f21, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f7, f10, f21, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f7, f10, f21, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f7, f10, f21, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f7, f10, f21, f22 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x800000)
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f20, 0(x2) # load 0x00000001 from memory into f20
la x2, scratch
li x3, 0xe19241b4 # load x3 with value 0xe19241b4
sw x3, 0(x2) # store 0xe19241b4 in memory
flw f26, 0(x2) # load 0xe19241b4 from memory into f26
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f25, 0(x2) # load 0x00800000 from memory into f25
fnmsub.s f14, f20, f26, f25, dyn # perform operation
fnmsub.s f14, f20, f26, f25, rdn # perform operation
fnmsub.s f14, f20, f26, f25, rmm # perform operation
fnmsub.s f14, f20, f26, f25, rne # perform operation
fnmsub.s f14, f20, f26, f25, rtz # perform operation
fnmsub.s f14, f20, f26, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f14, f20, f26, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f14, f20, f26, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f14, f20, f26, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f14, f20, f26, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f14, f20, f26, f25 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x80800000)
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f13, 0(x2) # load 0x00000001 from memory into f13
la x2, scratch
li x3, 0xce27a45f # load x3 with value 0xce27a45f
sw x3, 0(x2) # store 0xce27a45f in memory
flw f31, 0(x2) # load 0xce27a45f from memory into f31
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f14, 0(x2) # load 0x80800000 from memory into f14
fnmsub.s f8, f13, f31, f14, dyn # perform operation
fnmsub.s f8, f13, f31, f14, rdn # perform operation
fnmsub.s f8, f13, f31, f14, rmm # perform operation
fnmsub.s f8, f13, f31, f14, rne # perform operation
fnmsub.s f8, f13, f31, f14, rtz # perform operation
fnmsub.s f8, f13, f31, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f8, f13, f31, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f8, f13, f31, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f8, f13, f31, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f8, f13, f31, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f8, f13, f31, f14 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x7f7fffff)
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f5, 0(x2) # load 0x00000001 from memory into f5
la x2, scratch
li x3, 0x4716a741 # load x3 with value 0x4716a741
sw x3, 0(x2) # store 0x4716a741 in memory
flw f6, 0(x2) # load 0x4716a741 from memory into f6
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f18, 0(x2) # load 0x7f7fffff from memory into f18
fnmsub.s f27, f5, f6, f18, dyn # perform operation
fnmsub.s f27, f5, f6, f18, rdn # perform operation
fnmsub.s f27, f5, f6, f18, rmm # perform operation
fnmsub.s f27, f5, f6, f18, rne # perform operation
fnmsub.s f27, f5, f6, f18, rtz # perform operation
fnmsub.s f27, f5, f6, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f27, f5, f6, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f27, f5, f6, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f27, f5, f6, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f27, f5, f6, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f27, f5, f6, f18 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0xff7fffff)
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f15, 0(x2) # load 0x00000001 from memory into f15
la x2, scratch
li x3, 0xf223cfc7 # load x3 with value 0xf223cfc7
sw x3, 0(x2) # store 0xf223cfc7 in memory
flw f24, 0(x2) # load 0xf223cfc7 from memory into f24
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f11, 0(x2) # load 0xff7fffff from memory into f11
fnmsub.s f8, f15, f24, f11, dyn # perform operation
fnmsub.s f8, f15, f24, f11, rdn # perform operation
fnmsub.s f8, f15, f24, f11, rmm # perform operation
fnmsub.s f8, f15, f24, f11, rne # perform operation
fnmsub.s f8, f15, f24, f11, rtz # perform operation
fnmsub.s f8, f15, f24, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f8, f15, f24, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f8, f15, f24, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f8, f15, f24, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f8, f15, f24, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f8, f15, f24, f11 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x7fffff)
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f9, 0(x2) # load 0x00000001 from memory into f9
la x2, scratch
li x3, 0xce5aa666 # load x3 with value 0xce5aa666
sw x3, 0(x2) # store 0xce5aa666 in memory
flw f27, 0(x2) # load 0xce5aa666 from memory into f27
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f10, 0(x2) # load 0x007fffff from memory into f10
fnmsub.s f11, f9, f27, f10, dyn # perform operation
fnmsub.s f11, f9, f27, f10, rdn # perform operation
fnmsub.s f11, f9, f27, f10, rmm # perform operation
fnmsub.s f11, f9, f27, f10, rne # perform operation
fnmsub.s f11, f9, f27, f10, rtz # perform operation
fnmsub.s f11, f9, f27, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f11, f9, f27, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f11, f9, f27, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f11, f9, f27, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f11, f9, f27, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f11, f9, f27, f10 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x807fffff)
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f30, 0(x2) # load 0x00000001 from memory into f30
la x2, scratch
li x3, 0xaaa27044 # load x3 with value 0xaaa27044
sw x3, 0(x2) # store 0xaaa27044 in memory
flw f20, 0(x2) # load 0xaaa27044 from memory into f20
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f11, 0(x2) # load 0x807fffff from memory into f11
fnmsub.s f10, f30, f20, f11, dyn # perform operation
fnmsub.s f10, f30, f20, f11, rdn # perform operation
fnmsub.s f10, f30, f20, f11, rmm # perform operation
fnmsub.s f10, f30, f20, f11, rne # perform operation
fnmsub.s f10, f30, f20, f11, rtz # perform operation
fnmsub.s f10, f30, f20, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f10, f30, f20, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f10, f30, f20, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f10, f30, f20, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f10, f30, f20, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f10, f30, f20, f11 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x400000)
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f5, 0(x2) # load 0x00000001 from memory into f5
la x2, scratch
li x3, 0x7574c5f4 # load x3 with value 0x7574c5f4
sw x3, 0(x2) # store 0x7574c5f4 in memory
flw f3, 0(x2) # load 0x7574c5f4 from memory into f3
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f17, 0(x2) # load 0x00400000 from memory into f17
fnmsub.s f18, f5, f3, f17, dyn # perform operation
fnmsub.s f18, f5, f3, f17, rdn # perform operation
fnmsub.s f18, f5, f3, f17, rmm # perform operation
fnmsub.s f18, f5, f3, f17, rne # perform operation
fnmsub.s f18, f5, f3, f17, rtz # perform operation
fnmsub.s f18, f5, f3, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f18, f5, f3, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f18, f5, f3, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f18, f5, f3, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f18, f5, f3, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f18, f5, f3, f17 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x80400000)
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f8, 0(x2) # load 0x00000001 from memory into f8
la x2, scratch
li x3, 0x07c67187 # load x3 with value 0x07c67187
sw x3, 0(x2) # store 0x07c67187 in memory
flw f2, 0(x2) # load 0x07c67187 from memory into f2
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f13, 0(x2) # load 0x80400000 from memory into f13
fnmsub.s f12, f8, f2, f13, dyn # perform operation
fnmsub.s f12, f8, f2, f13, rdn # perform operation
fnmsub.s f12, f8, f2, f13, rmm # perform operation
fnmsub.s f12, f8, f2, f13, rne # perform operation
fnmsub.s f12, f8, f2, f13, rtz # perform operation
fnmsub.s f12, f8, f2, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f12, f8, f2, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f12, f8, f2, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f12, f8, f2, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f12, f8, f2, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f12, f8, f2, f13 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x1)
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f11, 0(x2) # load 0x00000001 from memory into f11
la x2, scratch
li x3, 0x4d917528 # load x3 with value 0x4d917528
sw x3, 0(x2) # store 0x4d917528 in memory
flw f20, 0(x2) # load 0x4d917528 from memory into f20
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f2, 0(x2) # load 0x00000001 from memory into f2
fnmsub.s f29, f11, f20, f2, dyn # perform operation
fnmsub.s f29, f11, f20, f2, rdn # perform operation
fnmsub.s f29, f11, f20, f2, rmm # perform operation
fnmsub.s f29, f11, f20, f2, rne # perform operation
fnmsub.s f29, f11, f20, f2, rtz # perform operation
fnmsub.s f29, f11, f20, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f29, f11, f20, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f29, f11, f20, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f29, f11, f20, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f29, f11, f20, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f29, f11, f20, f2 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x80000001)
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f15, 0(x2) # load 0x00000001 from memory into f15
la x2, scratch
li x3, 0x8a2a15e0 # load x3 with value 0x8a2a15e0
sw x3, 0(x2) # store 0x8a2a15e0 in memory
flw f29, 0(x2) # load 0x8a2a15e0 from memory into f29
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f6, 0(x2) # load 0x80000001 from memory into f6
fnmsub.s f10, f15, f29, f6, dyn # perform operation
fnmsub.s f10, f15, f29, f6, rdn # perform operation
fnmsub.s f10, f15, f29, f6, rmm # perform operation
fnmsub.s f10, f15, f29, f6, rne # perform operation
fnmsub.s f10, f15, f29, f6, rtz # perform operation
fnmsub.s f10, f15, f29, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f10, f15, f29, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f10, f15, f29, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f10, f15, f29, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f10, f15, f29, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f10, f15, f29, f6 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x7f800000)
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f23, 0(x2) # load 0x00000001 from memory into f23
la x2, scratch
li x3, 0xb2061f4b # load x3 with value 0xb2061f4b
sw x3, 0(x2) # store 0xb2061f4b in memory
flw f8, 0(x2) # load 0xb2061f4b from memory into f8
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f13, 0(x2) # load 0x7f800000 from memory into f13
fnmsub.s f25, f23, f8, f13, dyn # perform operation
fnmsub.s f25, f23, f8, f13, rdn # perform operation
fnmsub.s f25, f23, f8, f13, rmm # perform operation
fnmsub.s f25, f23, f8, f13, rne # perform operation
fnmsub.s f25, f23, f8, f13, rtz # perform operation
fnmsub.s f25, f23, f8, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f25, f23, f8, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f25, f23, f8, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f25, f23, f8, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f25, f23, f8, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f25, f23, f8, f13 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0xff800000)
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f16, 0(x2) # load 0x00000001 from memory into f16
la x2, scratch
li x3, 0xc343a798 # load x3 with value 0xc343a798
sw x3, 0(x2) # store 0xc343a798 in memory
flw f12, 0(x2) # load 0xc343a798 from memory into f12
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f14, 0(x2) # load 0xff800000 from memory into f14
fnmsub.s f27, f16, f12, f14, dyn # perform operation
fnmsub.s f27, f16, f12, f14, rdn # perform operation
fnmsub.s f27, f16, f12, f14, rmm # perform operation
fnmsub.s f27, f16, f12, f14, rne # perform operation
fnmsub.s f27, f16, f12, f14, rtz # perform operation
fnmsub.s f27, f16, f12, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f27, f16, f12, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f27, f16, f12, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f27, f16, f12, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f27, f16, f12, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f27, f16, f12, f14 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x7fc00000)
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f17, 0(x2) # load 0x00000001 from memory into f17
la x2, scratch
li x3, 0x5a40fa46 # load x3 with value 0x5a40fa46
sw x3, 0(x2) # store 0x5a40fa46 in memory
flw f21, 0(x2) # load 0x5a40fa46 from memory into f21
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f11, 0(x2) # load 0x7fc00000 from memory into f11
fnmsub.s f13, f17, f21, f11, dyn # perform operation
fnmsub.s f13, f17, f21, f11, rdn # perform operation
fnmsub.s f13, f17, f21, f11, rmm # perform operation
fnmsub.s f13, f17, f21, f11, rne # perform operation
fnmsub.s f13, f17, f21, f11, rtz # perform operation
fnmsub.s f13, f17, f21, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f13, f17, f21, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f13, f17, f21, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f13, f17, f21, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f13, f17, f21, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f13, f17, f21, f11 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x7fffffff)
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f12, 0(x2) # load 0x00000001 from memory into f12
la x2, scratch
li x3, 0x71bfb56f # load x3 with value 0x71bfb56f
sw x3, 0(x2) # store 0x71bfb56f in memory
flw f1, 0(x2) # load 0x71bfb56f from memory into f1
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f17, 0(x2) # load 0x7fffffff from memory into f17
fnmsub.s f20, f12, f1, f17, dyn # perform operation
fnmsub.s f20, f12, f1, f17, rdn # perform operation
fnmsub.s f20, f12, f1, f17, rmm # perform operation
fnmsub.s f20, f12, f1, f17, rne # perform operation
fnmsub.s f20, f12, f1, f17, rtz # perform operation
fnmsub.s f20, f12, f1, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f20, f12, f1, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f20, f12, f1, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f20, f12, f1, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f20, f12, f1, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f20, f12, f1, f17 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0xffffffff)
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f19, 0(x2) # load 0x00000001 from memory into f19
la x2, scratch
li x3, 0x37939782 # load x3 with value 0x37939782
sw x3, 0(x2) # store 0x37939782 in memory
flw f29, 0(x2) # load 0x37939782 from memory into f29
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f18, 0(x2) # load 0xffffffff from memory into f18
fnmsub.s f8, f19, f29, f18, dyn # perform operation
fnmsub.s f8, f19, f29, f18, rdn # perform operation
fnmsub.s f8, f19, f29, f18, rmm # perform operation
fnmsub.s f8, f19, f29, f18, rne # perform operation
fnmsub.s f8, f19, f29, f18, rtz # perform operation
fnmsub.s f8, f19, f29, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f8, f19, f29, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f8, f19, f29, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f8, f19, f29, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f8, f19, f29, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f8, f19, f29, f18 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x7f800001)
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f23, 0(x2) # load 0x00000001 from memory into f23
la x2, scratch
li x3, 0xd4a82d22 # load x3 with value 0xd4a82d22
sw x3, 0(x2) # store 0xd4a82d22 in memory
flw f31, 0(x2) # load 0xd4a82d22 from memory into f31
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f21, 0(x2) # load 0x7f800001 from memory into f21
fnmsub.s f27, f23, f31, f21, dyn # perform operation
fnmsub.s f27, f23, f31, f21, rdn # perform operation
fnmsub.s f27, f23, f31, f21, rmm # perform operation
fnmsub.s f27, f23, f31, f21, rne # perform operation
fnmsub.s f27, f23, f31, f21, rtz # perform operation
fnmsub.s f27, f23, f31, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f27, f23, f31, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f27, f23, f31, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f27, f23, f31, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f27, f23, f31, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f27, f23, f31, f21 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x7fbfffff)
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f27, 0(x2) # load 0x00000001 from memory into f27
la x2, scratch
li x3, 0x2d110b75 # load x3 with value 0x2d110b75
sw x3, 0(x2) # store 0x2d110b75 in memory
flw f22, 0(x2) # load 0x2d110b75 from memory into f22
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f26, 0(x2) # load 0x7fbfffff from memory into f26
fnmsub.s f8, f27, f22, f26, dyn # perform operation
fnmsub.s f8, f27, f22, f26, rdn # perform operation
fnmsub.s f8, f27, f22, f26, rmm # perform operation
fnmsub.s f8, f27, f22, f26, rne # perform operation
fnmsub.s f8, f27, f22, f26, rtz # perform operation
fnmsub.s f8, f27, f22, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f8, f27, f22, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f8, f27, f22, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f8, f27, f22, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f8, f27, f22, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f8, f27, f22, f26 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0xffbfffff)
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f2, 0(x2) # load 0x00000001 from memory into f2
la x2, scratch
li x3, 0x96776b3a # load x3 with value 0x96776b3a
sw x3, 0(x2) # store 0x96776b3a in memory
flw f29, 0(x2) # load 0x96776b3a from memory into f29
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f19, 0(x2) # load 0xffbfffff from memory into f19
fnmsub.s f17, f2, f29, f19, dyn # perform operation
fnmsub.s f17, f2, f29, f19, rdn # perform operation
fnmsub.s f17, f2, f29, f19, rmm # perform operation
fnmsub.s f17, f2, f29, f19, rne # perform operation
fnmsub.s f17, f2, f29, f19, rtz # perform operation
fnmsub.s f17, f2, f29, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f17, f2, f29, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f17, f2, f29, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f17, f2, f29, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f17, f2, f29, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f17, f2, f29, f19 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x7ef8654f)
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f12, 0(x2) # load 0x00000001 from memory into f12
la x2, scratch
li x3, 0xbc84decb # load x3 with value 0xbc84decb
sw x3, 0(x2) # store 0xbc84decb in memory
flw f18, 0(x2) # load 0xbc84decb from memory into f18
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f3, 0(x2) # load 0x7ef8654f from memory into f3
fnmsub.s f5, f12, f18, f3, dyn # perform operation
fnmsub.s f5, f12, f18, f3, rdn # perform operation
fnmsub.s f5, f12, f18, f3, rmm # perform operation
fnmsub.s f5, f12, f18, f3, rne # perform operation
fnmsub.s f5, f12, f18, f3, rtz # perform operation
fnmsub.s f5, f12, f18, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f5, f12, f18, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f5, f12, f18, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f5, f12, f18, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f5, f12, f18, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f5, f12, f18, f3 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x813d9ab0)
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f24, 0(x2) # load 0x00000001 from memory into f24
la x2, scratch
li x3, 0x52b66340 # load x3 with value 0x52b66340
sw x3, 0(x2) # store 0x52b66340 in memory
flw f2, 0(x2) # load 0x52b66340 from memory into f2
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f19, 0(x2) # load 0x813d9ab0 from memory into f19
fnmsub.s f12, f24, f2, f19, dyn # perform operation
fnmsub.s f12, f24, f2, f19, rdn # perform operation
fnmsub.s f12, f24, f2, f19, rmm # perform operation
fnmsub.s f12, f24, f2, f19, rne # perform operation
fnmsub.s f12, f24, f2, f19, rtz # perform operation
fnmsub.s f12, f24, f2, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f12, f24, f2, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f12, f24, f2, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f12, f24, f2, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f12, f24, f2, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f12, f24, f2, f19 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0x0)
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f22, 0(x2) # load 0x80000001 from memory into f22
la x2, scratch
li x3, 0x760ef1b6 # load x3 with value 0x760ef1b6
sw x3, 0(x2) # store 0x760ef1b6 in memory
flw f19, 0(x2) # load 0x760ef1b6 from memory into f19
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f6, 0(x2) # load 0x00000000 from memory into f6
fnmsub.s f18, f22, f19, f6, dyn # perform operation
fnmsub.s f18, f22, f19, f6, rdn # perform operation
fnmsub.s f18, f22, f19, f6, rmm # perform operation
fnmsub.s f18, f22, f19, f6, rne # perform operation
fnmsub.s f18, f22, f19, f6, rtz # perform operation
fnmsub.s f18, f22, f19, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f18, f22, f19, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f18, f22, f19, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f18, f22, f19, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f18, f22, f19, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f18, f22, f19, f6 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0x80000000)
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f26, 0(x2) # load 0x80000001 from memory into f26
la x2, scratch
li x3, 0x54b5eb8a # load x3 with value 0x54b5eb8a
sw x3, 0(x2) # store 0x54b5eb8a in memory
flw f25, 0(x2) # load 0x54b5eb8a from memory into f25
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f3, 0(x2) # load 0x80000000 from memory into f3
fnmsub.s f9, f26, f25, f3, dyn # perform operation
fnmsub.s f9, f26, f25, f3, rdn # perform operation
fnmsub.s f9, f26, f25, f3, rmm # perform operation
fnmsub.s f9, f26, f25, f3, rne # perform operation
fnmsub.s f9, f26, f25, f3, rtz # perform operation
fnmsub.s f9, f26, f25, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f9, f26, f25, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f9, f26, f25, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f9, f26, f25, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f9, f26, f25, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f9, f26, f25, f3 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0x3f800000)
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f29, 0(x2) # load 0x80000001 from memory into f29
la x2, scratch
li x3, 0x8e2245f7 # load x3 with value 0x8e2245f7
sw x3, 0(x2) # store 0x8e2245f7 in memory
flw f24, 0(x2) # load 0x8e2245f7 from memory into f24
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f15, 0(x2) # load 0x3f800000 from memory into f15
fnmsub.s f23, f29, f24, f15, dyn # perform operation
fnmsub.s f23, f29, f24, f15, rdn # perform operation
fnmsub.s f23, f29, f24, f15, rmm # perform operation
fnmsub.s f23, f29, f24, f15, rne # perform operation
fnmsub.s f23, f29, f24, f15, rtz # perform operation
fnmsub.s f23, f29, f24, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f23, f29, f24, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f23, f29, f24, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f23, f29, f24, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f23, f29, f24, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f23, f29, f24, f15 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0xbf800000)
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f9, 0(x2) # load 0x80000001 from memory into f9
la x2, scratch
li x3, 0xba6c504c # load x3 with value 0xba6c504c
sw x3, 0(x2) # store 0xba6c504c in memory
flw f14, 0(x2) # load 0xba6c504c from memory into f14
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f11, 0(x2) # load 0xbf800000 from memory into f11
fnmsub.s f23, f9, f14, f11, dyn # perform operation
fnmsub.s f23, f9, f14, f11, rdn # perform operation
fnmsub.s f23, f9, f14, f11, rmm # perform operation
fnmsub.s f23, f9, f14, f11, rne # perform operation
fnmsub.s f23, f9, f14, f11, rtz # perform operation
fnmsub.s f23, f9, f14, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f23, f9, f14, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f23, f9, f14, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f23, f9, f14, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f23, f9, f14, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f23, f9, f14, f11 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0x3fc00000)
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f19, 0(x2) # load 0x80000001 from memory into f19
la x2, scratch
li x3, 0x8d628a4d # load x3 with value 0x8d628a4d
sw x3, 0(x2) # store 0x8d628a4d in memory
flw f13, 0(x2) # load 0x8d628a4d from memory into f13
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f30, 0(x2) # load 0x3fc00000 from memory into f30
fnmsub.s f12, f19, f13, f30, dyn # perform operation
fnmsub.s f12, f19, f13, f30, rdn # perform operation
fnmsub.s f12, f19, f13, f30, rmm # perform operation
fnmsub.s f12, f19, f13, f30, rne # perform operation
fnmsub.s f12, f19, f13, f30, rtz # perform operation
fnmsub.s f12, f19, f13, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f12, f19, f13, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f12, f19, f13, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f12, f19, f13, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f12, f19, f13, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f12, f19, f13, f30 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0xbfc00000)
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f1, 0(x2) # load 0x80000001 from memory into f1
la x2, scratch
li x3, 0x87f656e8 # load x3 with value 0x87f656e8
sw x3, 0(x2) # store 0x87f656e8 in memory
flw f21, 0(x2) # load 0x87f656e8 from memory into f21
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f28, 0(x2) # load 0xbfc00000 from memory into f28
fnmsub.s f31, f1, f21, f28, dyn # perform operation
fnmsub.s f31, f1, f21, f28, rdn # perform operation
fnmsub.s f31, f1, f21, f28, rmm # perform operation
fnmsub.s f31, f1, f21, f28, rne # perform operation
fnmsub.s f31, f1, f21, f28, rtz # perform operation
fnmsub.s f31, f1, f21, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f31, f1, f21, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f31, f1, f21, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f31, f1, f21, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f31, f1, f21, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f31, f1, f21, f28 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0x40000000)
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f8, 0(x2) # load 0x80000001 from memory into f8
la x2, scratch
li x3, 0x8d731b4e # load x3 with value 0x8d731b4e
sw x3, 0(x2) # store 0x8d731b4e in memory
flw f22, 0(x2) # load 0x8d731b4e from memory into f22
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f16, 0(x2) # load 0x40000000 from memory into f16
fnmsub.s f20, f8, f22, f16, dyn # perform operation
fnmsub.s f20, f8, f22, f16, rdn # perform operation
fnmsub.s f20, f8, f22, f16, rmm # perform operation
fnmsub.s f20, f8, f22, f16, rne # perform operation
fnmsub.s f20, f8, f22, f16, rtz # perform operation
fnmsub.s f20, f8, f22, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f20, f8, f22, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f20, f8, f22, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f20, f8, f22, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f20, f8, f22, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f20, f8, f22, f16 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0xc0000000)
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f22, 0(x2) # load 0x80000001 from memory into f22
la x2, scratch
li x3, 0xa8d85345 # load x3 with value 0xa8d85345
sw x3, 0(x2) # store 0xa8d85345 in memory
flw f18, 0(x2) # load 0xa8d85345 from memory into f18
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f21, 0(x2) # load 0xc0000000 from memory into f21
fnmsub.s f3, f22, f18, f21, dyn # perform operation
fnmsub.s f3, f22, f18, f21, rdn # perform operation
fnmsub.s f3, f22, f18, f21, rmm # perform operation
fnmsub.s f3, f22, f18, f21, rne # perform operation
fnmsub.s f3, f22, f18, f21, rtz # perform operation
fnmsub.s f3, f22, f18, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f3, f22, f18, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f3, f22, f18, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f3, f22, f18, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f3, f22, f18, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f3, f22, f18, f21 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0x800000)
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f29, 0(x2) # load 0x80000001 from memory into f29
la x2, scratch
li x3, 0xdada9aeb # load x3 with value 0xdada9aeb
sw x3, 0(x2) # store 0xdada9aeb in memory
flw f5, 0(x2) # load 0xdada9aeb from memory into f5
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f19, 0(x2) # load 0x00800000 from memory into f19
fnmsub.s f9, f29, f5, f19, dyn # perform operation
fnmsub.s f9, f29, f5, f19, rdn # perform operation
fnmsub.s f9, f29, f5, f19, rmm # perform operation
fnmsub.s f9, f29, f5, f19, rne # perform operation
fnmsub.s f9, f29, f5, f19, rtz # perform operation
fnmsub.s f9, f29, f5, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f9, f29, f5, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f9, f29, f5, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f9, f29, f5, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f9, f29, f5, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f9, f29, f5, f19 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0x80800000)
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f25, 0(x2) # load 0x80000001 from memory into f25
la x2, scratch
li x3, 0x734bf740 # load x3 with value 0x734bf740
sw x3, 0(x2) # store 0x734bf740 in memory
flw f30, 0(x2) # load 0x734bf740 from memory into f30
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f5, 0(x2) # load 0x80800000 from memory into f5
fnmsub.s f23, f25, f30, f5, dyn # perform operation
fnmsub.s f23, f25, f30, f5, rdn # perform operation
fnmsub.s f23, f25, f30, f5, rmm # perform operation
fnmsub.s f23, f25, f30, f5, rne # perform operation
fnmsub.s f23, f25, f30, f5, rtz # perform operation
fnmsub.s f23, f25, f30, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f23, f25, f30, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f23, f25, f30, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f23, f25, f30, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f23, f25, f30, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f23, f25, f30, f5 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0x7f7fffff)
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f27, 0(x2) # load 0x80000001 from memory into f27
la x2, scratch
li x3, 0x0b3bc49f # load x3 with value 0x0b3bc49f
sw x3, 0(x2) # store 0x0b3bc49f in memory
flw f12, 0(x2) # load 0x0b3bc49f from memory into f12
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f1, 0(x2) # load 0x7f7fffff from memory into f1
fnmsub.s f21, f27, f12, f1, dyn # perform operation
fnmsub.s f21, f27, f12, f1, rdn # perform operation
fnmsub.s f21, f27, f12, f1, rmm # perform operation
fnmsub.s f21, f27, f12, f1, rne # perform operation
fnmsub.s f21, f27, f12, f1, rtz # perform operation
fnmsub.s f21, f27, f12, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f21, f27, f12, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f21, f27, f12, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f21, f27, f12, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f21, f27, f12, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f21, f27, f12, f1 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0xff7fffff)
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f20, 0(x2) # load 0x80000001 from memory into f20
la x2, scratch
li x3, 0x9578b8c7 # load x3 with value 0x9578b8c7
sw x3, 0(x2) # store 0x9578b8c7 in memory
flw f24, 0(x2) # load 0x9578b8c7 from memory into f24
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f19, 0(x2) # load 0xff7fffff from memory into f19
fnmsub.s f23, f20, f24, f19, dyn # perform operation
fnmsub.s f23, f20, f24, f19, rdn # perform operation
fnmsub.s f23, f20, f24, f19, rmm # perform operation
fnmsub.s f23, f20, f24, f19, rne # perform operation
fnmsub.s f23, f20, f24, f19, rtz # perform operation
fnmsub.s f23, f20, f24, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f23, f20, f24, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f23, f20, f24, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f23, f20, f24, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f23, f20, f24, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f23, f20, f24, f19 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0x7fffff)
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f26, 0(x2) # load 0x80000001 from memory into f26
la x2, scratch
li x3, 0x26deb977 # load x3 with value 0x26deb977
sw x3, 0(x2) # store 0x26deb977 in memory
flw f29, 0(x2) # load 0x26deb977 from memory into f29
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f22, 0(x2) # load 0x007fffff from memory into f22
fnmsub.s f25, f26, f29, f22, dyn # perform operation
fnmsub.s f25, f26, f29, f22, rdn # perform operation
fnmsub.s f25, f26, f29, f22, rmm # perform operation
fnmsub.s f25, f26, f29, f22, rne # perform operation
fnmsub.s f25, f26, f29, f22, rtz # perform operation
fnmsub.s f25, f26, f29, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f25, f26, f29, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f25, f26, f29, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f25, f26, f29, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f25, f26, f29, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f25, f26, f29, f22 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0x807fffff)
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f25, 0(x2) # load 0x80000001 from memory into f25
la x2, scratch
li x3, 0xf6f31f53 # load x3 with value 0xf6f31f53
sw x3, 0(x2) # store 0xf6f31f53 in memory
flw f13, 0(x2) # load 0xf6f31f53 from memory into f13
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f19, 0(x2) # load 0x807fffff from memory into f19
fnmsub.s f5, f25, f13, f19, dyn # perform operation
fnmsub.s f5, f25, f13, f19, rdn # perform operation
fnmsub.s f5, f25, f13, f19, rmm # perform operation
fnmsub.s f5, f25, f13, f19, rne # perform operation
fnmsub.s f5, f25, f13, f19, rtz # perform operation
fnmsub.s f5, f25, f13, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f5, f25, f13, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f5, f25, f13, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f5, f25, f13, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f5, f25, f13, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f5, f25, f13, f19 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0x400000)
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f2, 0(x2) # load 0x80000001 from memory into f2
la x2, scratch
li x3, 0x99a19880 # load x3 with value 0x99a19880
sw x3, 0(x2) # store 0x99a19880 in memory
flw f18, 0(x2) # load 0x99a19880 from memory into f18
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f27, 0(x2) # load 0x00400000 from memory into f27
fnmsub.s f16, f2, f18, f27, dyn # perform operation
fnmsub.s f16, f2, f18, f27, rdn # perform operation
fnmsub.s f16, f2, f18, f27, rmm # perform operation
fnmsub.s f16, f2, f18, f27, rne # perform operation
fnmsub.s f16, f2, f18, f27, rtz # perform operation
fnmsub.s f16, f2, f18, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f16, f2, f18, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f16, f2, f18, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f16, f2, f18, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f16, f2, f18, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f16, f2, f18, f27 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0x80400000)
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f28, 0(x2) # load 0x80000001 from memory into f28
la x2, scratch
li x3, 0x19a4fc7c # load x3 with value 0x19a4fc7c
sw x3, 0(x2) # store 0x19a4fc7c in memory
flw f3, 0(x2) # load 0x19a4fc7c from memory into f3
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f16, 0(x2) # load 0x80400000 from memory into f16
fnmsub.s f30, f28, f3, f16, dyn # perform operation
fnmsub.s f30, f28, f3, f16, rdn # perform operation
fnmsub.s f30, f28, f3, f16, rmm # perform operation
fnmsub.s f30, f28, f3, f16, rne # perform operation
fnmsub.s f30, f28, f3, f16, rtz # perform operation
fnmsub.s f30, f28, f3, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f30, f28, f3, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f30, f28, f3, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f30, f28, f3, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f30, f28, f3, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f30, f28, f3, f16 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0x1)
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f26, 0(x2) # load 0x80000001 from memory into f26
la x2, scratch
li x3, 0xce73462a # load x3 with value 0xce73462a
sw x3, 0(x2) # store 0xce73462a in memory
flw f18, 0(x2) # load 0xce73462a from memory into f18
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f7, 0(x2) # load 0x00000001 from memory into f7
fnmsub.s f31, f26, f18, f7, dyn # perform operation
fnmsub.s f31, f26, f18, f7, rdn # perform operation
fnmsub.s f31, f26, f18, f7, rmm # perform operation
fnmsub.s f31, f26, f18, f7, rne # perform operation
fnmsub.s f31, f26, f18, f7, rtz # perform operation
fnmsub.s f31, f26, f18, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f31, f26, f18, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f31, f26, f18, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f31, f26, f18, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f31, f26, f18, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f31, f26, f18, f7 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0x80000001)
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f26, 0(x2) # load 0x80000001 from memory into f26
la x2, scratch
li x3, 0x8db4c41b # load x3 with value 0x8db4c41b
sw x3, 0(x2) # store 0x8db4c41b in memory
flw f16, 0(x2) # load 0x8db4c41b from memory into f16
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f24, 0(x2) # load 0x80000001 from memory into f24
fnmsub.s f11, f26, f16, f24, dyn # perform operation
fnmsub.s f11, f26, f16, f24, rdn # perform operation
fnmsub.s f11, f26, f16, f24, rmm # perform operation
fnmsub.s f11, f26, f16, f24, rne # perform operation
fnmsub.s f11, f26, f16, f24, rtz # perform operation
fnmsub.s f11, f26, f16, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f11, f26, f16, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f11, f26, f16, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f11, f26, f16, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f11, f26, f16, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f11, f26, f16, f24 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0x7f800000)
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f11, 0(x2) # load 0x80000001 from memory into f11
la x2, scratch
li x3, 0x8f3548da # load x3 with value 0x8f3548da
sw x3, 0(x2) # store 0x8f3548da in memory
flw f1, 0(x2) # load 0x8f3548da from memory into f1
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f24, 0(x2) # load 0x7f800000 from memory into f24
fnmsub.s f5, f11, f1, f24, dyn # perform operation
fnmsub.s f5, f11, f1, f24, rdn # perform operation
fnmsub.s f5, f11, f1, f24, rmm # perform operation
fnmsub.s f5, f11, f1, f24, rne # perform operation
fnmsub.s f5, f11, f1, f24, rtz # perform operation
fnmsub.s f5, f11, f1, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f5, f11, f1, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f5, f11, f1, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f5, f11, f1, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f5, f11, f1, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f5, f11, f1, f24 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0xff800000)
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f24, 0(x2) # load 0x80000001 from memory into f24
la x2, scratch
li x3, 0x015e6b1c # load x3 with value 0x015e6b1c
sw x3, 0(x2) # store 0x015e6b1c in memory
flw f29, 0(x2) # load 0x015e6b1c from memory into f29
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f9, 0(x2) # load 0xff800000 from memory into f9
fnmsub.s f11, f24, f29, f9, dyn # perform operation
fnmsub.s f11, f24, f29, f9, rdn # perform operation
fnmsub.s f11, f24, f29, f9, rmm # perform operation
fnmsub.s f11, f24, f29, f9, rne # perform operation
fnmsub.s f11, f24, f29, f9, rtz # perform operation
fnmsub.s f11, f24, f29, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f11, f24, f29, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f11, f24, f29, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f11, f24, f29, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f11, f24, f29, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f11, f24, f29, f9 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0x7fc00000)
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f6, 0(x2) # load 0x80000001 from memory into f6
la x2, scratch
li x3, 0xc9301ce9 # load x3 with value 0xc9301ce9
sw x3, 0(x2) # store 0xc9301ce9 in memory
flw f20, 0(x2) # load 0xc9301ce9 from memory into f20
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f10, 0(x2) # load 0x7fc00000 from memory into f10
fnmsub.s f8, f6, f20, f10, dyn # perform operation
fnmsub.s f8, f6, f20, f10, rdn # perform operation
fnmsub.s f8, f6, f20, f10, rmm # perform operation
fnmsub.s f8, f6, f20, f10, rne # perform operation
fnmsub.s f8, f6, f20, f10, rtz # perform operation
fnmsub.s f8, f6, f20, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f8, f6, f20, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f8, f6, f20, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f8, f6, f20, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f8, f6, f20, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f8, f6, f20, f10 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0x7fffffff)
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f18, 0(x2) # load 0x80000001 from memory into f18
la x2, scratch
li x3, 0xdd0bda9e # load x3 with value 0xdd0bda9e
sw x3, 0(x2) # store 0xdd0bda9e in memory
flw f26, 0(x2) # load 0xdd0bda9e from memory into f26
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f21, 0(x2) # load 0x7fffffff from memory into f21
fnmsub.s f10, f18, f26, f21, dyn # perform operation
fnmsub.s f10, f18, f26, f21, rdn # perform operation
fnmsub.s f10, f18, f26, f21, rmm # perform operation
fnmsub.s f10, f18, f26, f21, rne # perform operation
fnmsub.s f10, f18, f26, f21, rtz # perform operation
fnmsub.s f10, f18, f26, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f10, f18, f26, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f10, f18, f26, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f10, f18, f26, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f10, f18, f26, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f10, f18, f26, f21 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0xffffffff)
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f14, 0(x2) # load 0x80000001 from memory into f14
la x2, scratch
li x3, 0xd9fad924 # load x3 with value 0xd9fad924
sw x3, 0(x2) # store 0xd9fad924 in memory
flw f6, 0(x2) # load 0xd9fad924 from memory into f6
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f10, 0(x2) # load 0xffffffff from memory into f10
fnmsub.s f26, f14, f6, f10, dyn # perform operation
fnmsub.s f26, f14, f6, f10, rdn # perform operation
fnmsub.s f26, f14, f6, f10, rmm # perform operation
fnmsub.s f26, f14, f6, f10, rne # perform operation
fnmsub.s f26, f14, f6, f10, rtz # perform operation
fnmsub.s f26, f14, f6, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f26, f14, f6, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f26, f14, f6, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f26, f14, f6, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f26, f14, f6, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f26, f14, f6, f10 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0x7f800001)
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f3, 0(x2) # load 0x80000001 from memory into f3
la x2, scratch
li x3, 0xf176c594 # load x3 with value 0xf176c594
sw x3, 0(x2) # store 0xf176c594 in memory
flw f14, 0(x2) # load 0xf176c594 from memory into f14
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f13, 0(x2) # load 0x7f800001 from memory into f13
fnmsub.s f12, f3, f14, f13, dyn # perform operation
fnmsub.s f12, f3, f14, f13, rdn # perform operation
fnmsub.s f12, f3, f14, f13, rmm # perform operation
fnmsub.s f12, f3, f14, f13, rne # perform operation
fnmsub.s f12, f3, f14, f13, rtz # perform operation
fnmsub.s f12, f3, f14, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f12, f3, f14, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f12, f3, f14, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f12, f3, f14, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f12, f3, f14, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f12, f3, f14, f13 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0x7fbfffff)
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f21, 0(x2) # load 0x80000001 from memory into f21
la x2, scratch
li x3, 0xa4d9cb4d # load x3 with value 0xa4d9cb4d
sw x3, 0(x2) # store 0xa4d9cb4d in memory
flw f15, 0(x2) # load 0xa4d9cb4d from memory into f15
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f20, 0(x2) # load 0x7fbfffff from memory into f20
fnmsub.s f13, f21, f15, f20, dyn # perform operation
fnmsub.s f13, f21, f15, f20, rdn # perform operation
fnmsub.s f13, f21, f15, f20, rmm # perform operation
fnmsub.s f13, f21, f15, f20, rne # perform operation
fnmsub.s f13, f21, f15, f20, rtz # perform operation
fnmsub.s f13, f21, f15, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f13, f21, f15, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f13, f21, f15, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f13, f21, f15, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f13, f21, f15, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f13, f21, f15, f20 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0xffbfffff)
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f23, 0(x2) # load 0x80000001 from memory into f23
la x2, scratch
li x3, 0xd9add7c4 # load x3 with value 0xd9add7c4
sw x3, 0(x2) # store 0xd9add7c4 in memory
flw f6, 0(x2) # load 0xd9add7c4 from memory into f6
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f1, 0(x2) # load 0xffbfffff from memory into f1
fnmsub.s f12, f23, f6, f1, dyn # perform operation
fnmsub.s f12, f23, f6, f1, rdn # perform operation
fnmsub.s f12, f23, f6, f1, rmm # perform operation
fnmsub.s f12, f23, f6, f1, rne # perform operation
fnmsub.s f12, f23, f6, f1, rtz # perform operation
fnmsub.s f12, f23, f6, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f12, f23, f6, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f12, f23, f6, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f12, f23, f6, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f12, f23, f6, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f12, f23, f6, f1 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0x7ef8654f)
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f5, 0(x2) # load 0x80000001 from memory into f5
la x2, scratch
li x3, 0xf7181954 # load x3 with value 0xf7181954
sw x3, 0(x2) # store 0xf7181954 in memory
flw f29, 0(x2) # load 0xf7181954 from memory into f29
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f9, 0(x2) # load 0x7ef8654f from memory into f9
fnmsub.s f23, f5, f29, f9, dyn # perform operation
fnmsub.s f23, f5, f29, f9, rdn # perform operation
fnmsub.s f23, f5, f29, f9, rmm # perform operation
fnmsub.s f23, f5, f29, f9, rne # perform operation
fnmsub.s f23, f5, f29, f9, rtz # perform operation
fnmsub.s f23, f5, f29, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f23, f5, f29, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f23, f5, f29, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f23, f5, f29, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f23, f5, f29, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f23, f5, f29, f9 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0x813d9ab0)
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f20, 0(x2) # load 0x80000001 from memory into f20
la x2, scratch
li x3, 0x37b2f9a6 # load x3 with value 0x37b2f9a6
sw x3, 0(x2) # store 0x37b2f9a6 in memory
flw f24, 0(x2) # load 0x37b2f9a6 from memory into f24
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f22, 0(x2) # load 0x813d9ab0 from memory into f22
fnmsub.s f17, f20, f24, f22, dyn # perform operation
fnmsub.s f17, f20, f24, f22, rdn # perform operation
fnmsub.s f17, f20, f24, f22, rmm # perform operation
fnmsub.s f17, f20, f24, f22, rne # perform operation
fnmsub.s f17, f20, f24, f22, rtz # perform operation
fnmsub.s f17, f20, f24, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f17, f20, f24, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f17, f20, f24, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f17, f20, f24, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f17, f20, f24, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f17, f20, f24, f22 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0x0)
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f15, 0(x2) # load 0x7f800000 from memory into f15
la x2, scratch
li x3, 0x153029f7 # load x3 with value 0x153029f7
sw x3, 0(x2) # store 0x153029f7 in memory
flw f29, 0(x2) # load 0x153029f7 from memory into f29
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f10, 0(x2) # load 0x00000000 from memory into f10
fnmsub.s f5, f15, f29, f10, dyn # perform operation
fnmsub.s f5, f15, f29, f10, rdn # perform operation
fnmsub.s f5, f15, f29, f10, rmm # perform operation
fnmsub.s f5, f15, f29, f10, rne # perform operation
fnmsub.s f5, f15, f29, f10, rtz # perform operation
fnmsub.s f5, f15, f29, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f5, f15, f29, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f5, f15, f29, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f5, f15, f29, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f5, f15, f29, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f5, f15, f29, f10 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0x80000000)
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f30, 0(x2) # load 0x7f800000 from memory into f30
la x2, scratch
li x3, 0xa4745c47 # load x3 with value 0xa4745c47
sw x3, 0(x2) # store 0xa4745c47 in memory
flw f22, 0(x2) # load 0xa4745c47 from memory into f22
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f20, 0(x2) # load 0x80000000 from memory into f20
fnmsub.s f14, f30, f22, f20, dyn # perform operation
fnmsub.s f14, f30, f22, f20, rdn # perform operation
fnmsub.s f14, f30, f22, f20, rmm # perform operation
fnmsub.s f14, f30, f22, f20, rne # perform operation
fnmsub.s f14, f30, f22, f20, rtz # perform operation
fnmsub.s f14, f30, f22, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f14, f30, f22, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f14, f30, f22, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f14, f30, f22, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f14, f30, f22, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f14, f30, f22, f20 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0x3f800000)
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f11, 0(x2) # load 0x7f800000 from memory into f11
la x2, scratch
li x3, 0xb3eb3bc3 # load x3 with value 0xb3eb3bc3
sw x3, 0(x2) # store 0xb3eb3bc3 in memory
flw f17, 0(x2) # load 0xb3eb3bc3 from memory into f17
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f23, 0(x2) # load 0x3f800000 from memory into f23
fnmsub.s f20, f11, f17, f23, dyn # perform operation
fnmsub.s f20, f11, f17, f23, rdn # perform operation
fnmsub.s f20, f11, f17, f23, rmm # perform operation
fnmsub.s f20, f11, f17, f23, rne # perform operation
fnmsub.s f20, f11, f17, f23, rtz # perform operation
fnmsub.s f20, f11, f17, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f20, f11, f17, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f20, f11, f17, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f20, f11, f17, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f20, f11, f17, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f20, f11, f17, f23 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0xbf800000)
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f10, 0(x2) # load 0x7f800000 from memory into f10
la x2, scratch
li x3, 0xcef4c563 # load x3 with value 0xcef4c563
sw x3, 0(x2) # store 0xcef4c563 in memory
flw f24, 0(x2) # load 0xcef4c563 from memory into f24
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f8, 0(x2) # load 0xbf800000 from memory into f8
fnmsub.s f25, f10, f24, f8, dyn # perform operation
fnmsub.s f25, f10, f24, f8, rdn # perform operation
fnmsub.s f25, f10, f24, f8, rmm # perform operation
fnmsub.s f25, f10, f24, f8, rne # perform operation
fnmsub.s f25, f10, f24, f8, rtz # perform operation
fnmsub.s f25, f10, f24, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f25, f10, f24, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f25, f10, f24, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f25, f10, f24, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f25, f10, f24, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f25, f10, f24, f8 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0x3fc00000)
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f15, 0(x2) # load 0x7f800000 from memory into f15
la x2, scratch
li x3, 0xf4bde1b7 # load x3 with value 0xf4bde1b7
sw x3, 0(x2) # store 0xf4bde1b7 in memory
flw f12, 0(x2) # load 0xf4bde1b7 from memory into f12
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f20, 0(x2) # load 0x3fc00000 from memory into f20
fnmsub.s f27, f15, f12, f20, dyn # perform operation
fnmsub.s f27, f15, f12, f20, rdn # perform operation
fnmsub.s f27, f15, f12, f20, rmm # perform operation
fnmsub.s f27, f15, f12, f20, rne # perform operation
fnmsub.s f27, f15, f12, f20, rtz # perform operation
fnmsub.s f27, f15, f12, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f27, f15, f12, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f27, f15, f12, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f27, f15, f12, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f27, f15, f12, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f27, f15, f12, f20 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0xbfc00000)
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f11, 0(x2) # load 0x7f800000 from memory into f11
la x2, scratch
li x3, 0x8c284b3d # load x3 with value 0x8c284b3d
sw x3, 0(x2) # store 0x8c284b3d in memory
flw f25, 0(x2) # load 0x8c284b3d from memory into f25
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f9, 0(x2) # load 0xbfc00000 from memory into f9
fnmsub.s f29, f11, f25, f9, dyn # perform operation
fnmsub.s f29, f11, f25, f9, rdn # perform operation
fnmsub.s f29, f11, f25, f9, rmm # perform operation
fnmsub.s f29, f11, f25, f9, rne # perform operation
fnmsub.s f29, f11, f25, f9, rtz # perform operation
fnmsub.s f29, f11, f25, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f29, f11, f25, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f29, f11, f25, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f29, f11, f25, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f29, f11, f25, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f29, f11, f25, f9 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0x40000000)
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f23, 0(x2) # load 0x7f800000 from memory into f23
la x2, scratch
li x3, 0xc06a9eee # load x3 with value 0xc06a9eee
sw x3, 0(x2) # store 0xc06a9eee in memory
flw f16, 0(x2) # load 0xc06a9eee from memory into f16
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f12, 0(x2) # load 0x40000000 from memory into f12
fnmsub.s f26, f23, f16, f12, dyn # perform operation
fnmsub.s f26, f23, f16, f12, rdn # perform operation
fnmsub.s f26, f23, f16, f12, rmm # perform operation
fnmsub.s f26, f23, f16, f12, rne # perform operation
fnmsub.s f26, f23, f16, f12, rtz # perform operation
fnmsub.s f26, f23, f16, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f26, f23, f16, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f26, f23, f16, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f26, f23, f16, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f26, f23, f16, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f26, f23, f16, f12 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0xc0000000)
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f18, 0(x2) # load 0x7f800000 from memory into f18
la x2, scratch
li x3, 0x8b906909 # load x3 with value 0x8b906909
sw x3, 0(x2) # store 0x8b906909 in memory
flw f31, 0(x2) # load 0x8b906909 from memory into f31
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f24, 0(x2) # load 0xc0000000 from memory into f24
fnmsub.s f28, f18, f31, f24, dyn # perform operation
fnmsub.s f28, f18, f31, f24, rdn # perform operation
fnmsub.s f28, f18, f31, f24, rmm # perform operation
fnmsub.s f28, f18, f31, f24, rne # perform operation
fnmsub.s f28, f18, f31, f24, rtz # perform operation
fnmsub.s f28, f18, f31, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f28, f18, f31, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f28, f18, f31, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f28, f18, f31, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f28, f18, f31, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f28, f18, f31, f24 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0x800000)
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f2, 0(x2) # load 0x7f800000 from memory into f2
la x2, scratch
li x3, 0x14430760 # load x3 with value 0x14430760
sw x3, 0(x2) # store 0x14430760 in memory
flw f6, 0(x2) # load 0x14430760 from memory into f6
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f30, 0(x2) # load 0x00800000 from memory into f30
fnmsub.s f22, f2, f6, f30, dyn # perform operation
fnmsub.s f22, f2, f6, f30, rdn # perform operation
fnmsub.s f22, f2, f6, f30, rmm # perform operation
fnmsub.s f22, f2, f6, f30, rne # perform operation
fnmsub.s f22, f2, f6, f30, rtz # perform operation
fnmsub.s f22, f2, f6, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f22, f2, f6, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f22, f2, f6, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f22, f2, f6, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f22, f2, f6, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f22, f2, f6, f30 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0x80800000)
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f19, 0(x2) # load 0x7f800000 from memory into f19
la x2, scratch
li x3, 0xe7988b77 # load x3 with value 0xe7988b77
sw x3, 0(x2) # store 0xe7988b77 in memory
flw f6, 0(x2) # load 0xe7988b77 from memory into f6
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f22, 0(x2) # load 0x80800000 from memory into f22
fnmsub.s f5, f19, f6, f22, dyn # perform operation
fnmsub.s f5, f19, f6, f22, rdn # perform operation
fnmsub.s f5, f19, f6, f22, rmm # perform operation
fnmsub.s f5, f19, f6, f22, rne # perform operation
fnmsub.s f5, f19, f6, f22, rtz # perform operation
fnmsub.s f5, f19, f6, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f5, f19, f6, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f5, f19, f6, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f5, f19, f6, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f5, f19, f6, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f5, f19, f6, f22 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0x7f7fffff)
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f25, 0(x2) # load 0x7f800000 from memory into f25
la x2, scratch
li x3, 0xa03bb3f5 # load x3 with value 0xa03bb3f5
sw x3, 0(x2) # store 0xa03bb3f5 in memory
flw f18, 0(x2) # load 0xa03bb3f5 from memory into f18
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f8, 0(x2) # load 0x7f7fffff from memory into f8
fnmsub.s f15, f25, f18, f8, dyn # perform operation
fnmsub.s f15, f25, f18, f8, rdn # perform operation
fnmsub.s f15, f25, f18, f8, rmm # perform operation
fnmsub.s f15, f25, f18, f8, rne # perform operation
fnmsub.s f15, f25, f18, f8, rtz # perform operation
fnmsub.s f15, f25, f18, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f15, f25, f18, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f15, f25, f18, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f15, f25, f18, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f15, f25, f18, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f15, f25, f18, f8 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0xff7fffff)
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f24, 0(x2) # load 0x7f800000 from memory into f24
la x2, scratch
li x3, 0xc2b6255e # load x3 with value 0xc2b6255e
sw x3, 0(x2) # store 0xc2b6255e in memory
flw f6, 0(x2) # load 0xc2b6255e from memory into f6
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f5, 0(x2) # load 0xff7fffff from memory into f5
fnmsub.s f31, f24, f6, f5, dyn # perform operation
fnmsub.s f31, f24, f6, f5, rdn # perform operation
fnmsub.s f31, f24, f6, f5, rmm # perform operation
fnmsub.s f31, f24, f6, f5, rne # perform operation
fnmsub.s f31, f24, f6, f5, rtz # perform operation
fnmsub.s f31, f24, f6, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f31, f24, f6, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f31, f24, f6, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f31, f24, f6, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f31, f24, f6, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f31, f24, f6, f5 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0x7fffff)
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f5, 0(x2) # load 0x7f800000 from memory into f5
la x2, scratch
li x3, 0x99c54bcb # load x3 with value 0x99c54bcb
sw x3, 0(x2) # store 0x99c54bcb in memory
flw f21, 0(x2) # load 0x99c54bcb from memory into f21
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f2, 0(x2) # load 0x007fffff from memory into f2
fnmsub.s f6, f5, f21, f2, dyn # perform operation
fnmsub.s f6, f5, f21, f2, rdn # perform operation
fnmsub.s f6, f5, f21, f2, rmm # perform operation
fnmsub.s f6, f5, f21, f2, rne # perform operation
fnmsub.s f6, f5, f21, f2, rtz # perform operation
fnmsub.s f6, f5, f21, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f6, f5, f21, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f6, f5, f21, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f6, f5, f21, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f6, f5, f21, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f6, f5, f21, f2 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0x807fffff)
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f24, 0(x2) # load 0x7f800000 from memory into f24
la x2, scratch
li x3, 0x154429ab # load x3 with value 0x154429ab
sw x3, 0(x2) # store 0x154429ab in memory
flw f16, 0(x2) # load 0x154429ab from memory into f16
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f18, 0(x2) # load 0x807fffff from memory into f18
fnmsub.s f6, f24, f16, f18, dyn # perform operation
fnmsub.s f6, f24, f16, f18, rdn # perform operation
fnmsub.s f6, f24, f16, f18, rmm # perform operation
fnmsub.s f6, f24, f16, f18, rne # perform operation
fnmsub.s f6, f24, f16, f18, rtz # perform operation
fnmsub.s f6, f24, f16, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f6, f24, f16, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f6, f24, f16, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f6, f24, f16, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f6, f24, f16, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f6, f24, f16, f18 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0x400000)
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f19, 0(x2) # load 0x7f800000 from memory into f19
la x2, scratch
li x3, 0x97871491 # load x3 with value 0x97871491
sw x3, 0(x2) # store 0x97871491 in memory
flw f9, 0(x2) # load 0x97871491 from memory into f9
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f16, 0(x2) # load 0x00400000 from memory into f16
fnmsub.s f11, f19, f9, f16, dyn # perform operation
fnmsub.s f11, f19, f9, f16, rdn # perform operation
fnmsub.s f11, f19, f9, f16, rmm # perform operation
fnmsub.s f11, f19, f9, f16, rne # perform operation
fnmsub.s f11, f19, f9, f16, rtz # perform operation
fnmsub.s f11, f19, f9, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f11, f19, f9, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f11, f19, f9, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f11, f19, f9, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f11, f19, f9, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f11, f19, f9, f16 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0x80400000)
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f24, 0(x2) # load 0x7f800000 from memory into f24
la x2, scratch
li x3, 0xa9f91401 # load x3 with value 0xa9f91401
sw x3, 0(x2) # store 0xa9f91401 in memory
flw f3, 0(x2) # load 0xa9f91401 from memory into f3
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f12, 0(x2) # load 0x80400000 from memory into f12
fnmsub.s f21, f24, f3, f12, dyn # perform operation
fnmsub.s f21, f24, f3, f12, rdn # perform operation
fnmsub.s f21, f24, f3, f12, rmm # perform operation
fnmsub.s f21, f24, f3, f12, rne # perform operation
fnmsub.s f21, f24, f3, f12, rtz # perform operation
fnmsub.s f21, f24, f3, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f21, f24, f3, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f21, f24, f3, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f21, f24, f3, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f21, f24, f3, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f21, f24, f3, f12 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0x1)
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f26, 0(x2) # load 0x7f800000 from memory into f26
la x2, scratch
li x3, 0xca91d802 # load x3 with value 0xca91d802
sw x3, 0(x2) # store 0xca91d802 in memory
flw f10, 0(x2) # load 0xca91d802 from memory into f10
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f25, 0(x2) # load 0x00000001 from memory into f25
fnmsub.s f8, f26, f10, f25, dyn # perform operation
fnmsub.s f8, f26, f10, f25, rdn # perform operation
fnmsub.s f8, f26, f10, f25, rmm # perform operation
fnmsub.s f8, f26, f10, f25, rne # perform operation
fnmsub.s f8, f26, f10, f25, rtz # perform operation
fnmsub.s f8, f26, f10, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f8, f26, f10, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f8, f26, f10, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f8, f26, f10, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f8, f26, f10, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f8, f26, f10, f25 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0x80000001)
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f18, 0(x2) # load 0x7f800000 from memory into f18
la x2, scratch
li x3, 0x1f465d23 # load x3 with value 0x1f465d23
sw x3, 0(x2) # store 0x1f465d23 in memory
flw f8, 0(x2) # load 0x1f465d23 from memory into f8
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f16, 0(x2) # load 0x80000001 from memory into f16
fnmsub.s f1, f18, f8, f16, dyn # perform operation
fnmsub.s f1, f18, f8, f16, rdn # perform operation
fnmsub.s f1, f18, f8, f16, rmm # perform operation
fnmsub.s f1, f18, f8, f16, rne # perform operation
fnmsub.s f1, f18, f8, f16, rtz # perform operation
fnmsub.s f1, f18, f8, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f1, f18, f8, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f1, f18, f8, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f1, f18, f8, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f1, f18, f8, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f1, f18, f8, f16 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0x7f800000)
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f17, 0(x2) # load 0x7f800000 from memory into f17
la x2, scratch
li x3, 0x5343a8e1 # load x3 with value 0x5343a8e1
sw x3, 0(x2) # store 0x5343a8e1 in memory
flw f7, 0(x2) # load 0x5343a8e1 from memory into f7
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f9, 0(x2) # load 0x7f800000 from memory into f9
fnmsub.s f23, f17, f7, f9, dyn # perform operation
fnmsub.s f23, f17, f7, f9, rdn # perform operation
fnmsub.s f23, f17, f7, f9, rmm # perform operation
fnmsub.s f23, f17, f7, f9, rne # perform operation
fnmsub.s f23, f17, f7, f9, rtz # perform operation
fnmsub.s f23, f17, f7, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f23, f17, f7, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f23, f17, f7, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f23, f17, f7, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f23, f17, f7, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f23, f17, f7, f9 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0xff800000)
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f21, 0(x2) # load 0x7f800000 from memory into f21
la x2, scratch
li x3, 0xbf22169b # load x3 with value 0xbf22169b
sw x3, 0(x2) # store 0xbf22169b in memory
flw f11, 0(x2) # load 0xbf22169b from memory into f11
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f13, 0(x2) # load 0xff800000 from memory into f13
fnmsub.s f6, f21, f11, f13, dyn # perform operation
fnmsub.s f6, f21, f11, f13, rdn # perform operation
fnmsub.s f6, f21, f11, f13, rmm # perform operation
fnmsub.s f6, f21, f11, f13, rne # perform operation
fnmsub.s f6, f21, f11, f13, rtz # perform operation
fnmsub.s f6, f21, f11, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f6, f21, f11, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f6, f21, f11, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f6, f21, f11, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f6, f21, f11, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f6, f21, f11, f13 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0x7fc00000)
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f13, 0(x2) # load 0x7f800000 from memory into f13
la x2, scratch
li x3, 0x839257dc # load x3 with value 0x839257dc
sw x3, 0(x2) # store 0x839257dc in memory
flw f29, 0(x2) # load 0x839257dc from memory into f29
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f3, 0(x2) # load 0x7fc00000 from memory into f3
fnmsub.s f9, f13, f29, f3, dyn # perform operation
fnmsub.s f9, f13, f29, f3, rdn # perform operation
fnmsub.s f9, f13, f29, f3, rmm # perform operation
fnmsub.s f9, f13, f29, f3, rne # perform operation
fnmsub.s f9, f13, f29, f3, rtz # perform operation
fnmsub.s f9, f13, f29, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f9, f13, f29, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f9, f13, f29, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f9, f13, f29, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f9, f13, f29, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f9, f13, f29, f3 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0x7fffffff)
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f25, 0(x2) # load 0x7f800000 from memory into f25
la x2, scratch
li x3, 0xdd172fc3 # load x3 with value 0xdd172fc3
sw x3, 0(x2) # store 0xdd172fc3 in memory
flw f16, 0(x2) # load 0xdd172fc3 from memory into f16
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f18, 0(x2) # load 0x7fffffff from memory into f18
fnmsub.s f11, f25, f16, f18, dyn # perform operation
fnmsub.s f11, f25, f16, f18, rdn # perform operation
fnmsub.s f11, f25, f16, f18, rmm # perform operation
fnmsub.s f11, f25, f16, f18, rne # perform operation
fnmsub.s f11, f25, f16, f18, rtz # perform operation
fnmsub.s f11, f25, f16, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f11, f25, f16, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f11, f25, f16, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f11, f25, f16, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f11, f25, f16, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f11, f25, f16, f18 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0xffffffff)
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f11, 0(x2) # load 0x7f800000 from memory into f11
la x2, scratch
li x3, 0xd76c4666 # load x3 with value 0xd76c4666
sw x3, 0(x2) # store 0xd76c4666 in memory
flw f1, 0(x2) # load 0xd76c4666 from memory into f1
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f8, 0(x2) # load 0xffffffff from memory into f8
fnmsub.s f15, f11, f1, f8, dyn # perform operation
fnmsub.s f15, f11, f1, f8, rdn # perform operation
fnmsub.s f15, f11, f1, f8, rmm # perform operation
fnmsub.s f15, f11, f1, f8, rne # perform operation
fnmsub.s f15, f11, f1, f8, rtz # perform operation
fnmsub.s f15, f11, f1, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f15, f11, f1, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f15, f11, f1, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f15, f11, f1, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f15, f11, f1, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f15, f11, f1, f8 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0x7f800001)
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f13, 0(x2) # load 0x7f800000 from memory into f13
la x2, scratch
li x3, 0x8ad8644c # load x3 with value 0x8ad8644c
sw x3, 0(x2) # store 0x8ad8644c in memory
flw f31, 0(x2) # load 0x8ad8644c from memory into f31
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f27, 0(x2) # load 0x7f800001 from memory into f27
fnmsub.s f23, f13, f31, f27, dyn # perform operation
fnmsub.s f23, f13, f31, f27, rdn # perform operation
fnmsub.s f23, f13, f31, f27, rmm # perform operation
fnmsub.s f23, f13, f31, f27, rne # perform operation
fnmsub.s f23, f13, f31, f27, rtz # perform operation
fnmsub.s f23, f13, f31, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f23, f13, f31, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f23, f13, f31, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f23, f13, f31, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f23, f13, f31, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f23, f13, f31, f27 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0x7fbfffff)
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f20, 0(x2) # load 0x7f800000 from memory into f20
la x2, scratch
li x3, 0x5de4051d # load x3 with value 0x5de4051d
sw x3, 0(x2) # store 0x5de4051d in memory
flw f1, 0(x2) # load 0x5de4051d from memory into f1
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f9, 0(x2) # load 0x7fbfffff from memory into f9
fnmsub.s f24, f20, f1, f9, dyn # perform operation
fnmsub.s f24, f20, f1, f9, rdn # perform operation
fnmsub.s f24, f20, f1, f9, rmm # perform operation
fnmsub.s f24, f20, f1, f9, rne # perform operation
fnmsub.s f24, f20, f1, f9, rtz # perform operation
fnmsub.s f24, f20, f1, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f24, f20, f1, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f24, f20, f1, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f24, f20, f1, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f24, f20, f1, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f24, f20, f1, f9 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0xffbfffff)
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f20, 0(x2) # load 0x7f800000 from memory into f20
la x2, scratch
li x3, 0x420b313c # load x3 with value 0x420b313c
sw x3, 0(x2) # store 0x420b313c in memory
flw f5, 0(x2) # load 0x420b313c from memory into f5
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f8, 0(x2) # load 0xffbfffff from memory into f8
fnmsub.s f14, f20, f5, f8, dyn # perform operation
fnmsub.s f14, f20, f5, f8, rdn # perform operation
fnmsub.s f14, f20, f5, f8, rmm # perform operation
fnmsub.s f14, f20, f5, f8, rne # perform operation
fnmsub.s f14, f20, f5, f8, rtz # perform operation
fnmsub.s f14, f20, f5, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f14, f20, f5, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f14, f20, f5, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f14, f20, f5, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f14, f20, f5, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f14, f20, f5, f8 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0x7ef8654f)
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f22, 0(x2) # load 0x7f800000 from memory into f22
la x2, scratch
li x3, 0x18cd05ce # load x3 with value 0x18cd05ce
sw x3, 0(x2) # store 0x18cd05ce in memory
flw f21, 0(x2) # load 0x18cd05ce from memory into f21
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f3, 0(x2) # load 0x7ef8654f from memory into f3
fnmsub.s f18, f22, f21, f3, dyn # perform operation
fnmsub.s f18, f22, f21, f3, rdn # perform operation
fnmsub.s f18, f22, f21, f3, rmm # perform operation
fnmsub.s f18, f22, f21, f3, rne # perform operation
fnmsub.s f18, f22, f21, f3, rtz # perform operation
fnmsub.s f18, f22, f21, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f18, f22, f21, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f18, f22, f21, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f18, f22, f21, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f18, f22, f21, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f18, f22, f21, f3 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0x813d9ab0)
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f26, 0(x2) # load 0x7f800000 from memory into f26
la x2, scratch
li x3, 0x965374bc # load x3 with value 0x965374bc
sw x3, 0(x2) # store 0x965374bc in memory
flw f10, 0(x2) # load 0x965374bc from memory into f10
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f27, 0(x2) # load 0x813d9ab0 from memory into f27
fnmsub.s f6, f26, f10, f27, dyn # perform operation
fnmsub.s f6, f26, f10, f27, rdn # perform operation
fnmsub.s f6, f26, f10, f27, rmm # perform operation
fnmsub.s f6, f26, f10, f27, rne # perform operation
fnmsub.s f6, f26, f10, f27, rtz # perform operation
fnmsub.s f6, f26, f10, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f6, f26, f10, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f6, f26, f10, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f6, f26, f10, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f6, f26, f10, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f6, f26, f10, f27 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0x0)
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f23, 0(x2) # load 0xff800000 from memory into f23
la x2, scratch
li x3, 0x719b6ced # load x3 with value 0x719b6ced
sw x3, 0(x2) # store 0x719b6ced in memory
flw f27, 0(x2) # load 0x719b6ced from memory into f27
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f28, 0(x2) # load 0x00000000 from memory into f28
fnmsub.s f24, f23, f27, f28, dyn # perform operation
fnmsub.s f24, f23, f27, f28, rdn # perform operation
fnmsub.s f24, f23, f27, f28, rmm # perform operation
fnmsub.s f24, f23, f27, f28, rne # perform operation
fnmsub.s f24, f23, f27, f28, rtz # perform operation
fnmsub.s f24, f23, f27, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f24, f23, f27, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f24, f23, f27, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f24, f23, f27, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f24, f23, f27, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f24, f23, f27, f28 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0x80000000)
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f20, 0(x2) # load 0xff800000 from memory into f20
la x2, scratch
li x3, 0x049ea56e # load x3 with value 0x049ea56e
sw x3, 0(x2) # store 0x049ea56e in memory
flw f3, 0(x2) # load 0x049ea56e from memory into f3
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f23, 0(x2) # load 0x80000000 from memory into f23
fnmsub.s f18, f20, f3, f23, dyn # perform operation
fnmsub.s f18, f20, f3, f23, rdn # perform operation
fnmsub.s f18, f20, f3, f23, rmm # perform operation
fnmsub.s f18, f20, f3, f23, rne # perform operation
fnmsub.s f18, f20, f3, f23, rtz # perform operation
fnmsub.s f18, f20, f3, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f18, f20, f3, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f18, f20, f3, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f18, f20, f3, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f18, f20, f3, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f18, f20, f3, f23 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0x3f800000)
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f7, 0(x2) # load 0xff800000 from memory into f7
la x2, scratch
li x3, 0x722047ec # load x3 with value 0x722047ec
sw x3, 0(x2) # store 0x722047ec in memory
flw f19, 0(x2) # load 0x722047ec from memory into f19
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f3, 0(x2) # load 0x3f800000 from memory into f3
fnmsub.s f5, f7, f19, f3, dyn # perform operation
fnmsub.s f5, f7, f19, f3, rdn # perform operation
fnmsub.s f5, f7, f19, f3, rmm # perform operation
fnmsub.s f5, f7, f19, f3, rne # perform operation
fnmsub.s f5, f7, f19, f3, rtz # perform operation
fnmsub.s f5, f7, f19, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f5, f7, f19, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f5, f7, f19, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f5, f7, f19, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f5, f7, f19, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f5, f7, f19, f3 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0xbf800000)
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f29, 0(x2) # load 0xff800000 from memory into f29
la x2, scratch
li x3, 0xb57521f9 # load x3 with value 0xb57521f9
sw x3, 0(x2) # store 0xb57521f9 in memory
flw f20, 0(x2) # load 0xb57521f9 from memory into f20
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f18, 0(x2) # load 0xbf800000 from memory into f18
fnmsub.s f2, f29, f20, f18, dyn # perform operation
fnmsub.s f2, f29, f20, f18, rdn # perform operation
fnmsub.s f2, f29, f20, f18, rmm # perform operation
fnmsub.s f2, f29, f20, f18, rne # perform operation
fnmsub.s f2, f29, f20, f18, rtz # perform operation
fnmsub.s f2, f29, f20, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f2, f29, f20, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f2, f29, f20, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f2, f29, f20, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f2, f29, f20, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f2, f29, f20, f18 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0x3fc00000)
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f17, 0(x2) # load 0xff800000 from memory into f17
la x2, scratch
li x3, 0xf7444ad5 # load x3 with value 0xf7444ad5
sw x3, 0(x2) # store 0xf7444ad5 in memory
flw f19, 0(x2) # load 0xf7444ad5 from memory into f19
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f5, 0(x2) # load 0x3fc00000 from memory into f5
fnmsub.s f1, f17, f19, f5, dyn # perform operation
fnmsub.s f1, f17, f19, f5, rdn # perform operation
fnmsub.s f1, f17, f19, f5, rmm # perform operation
fnmsub.s f1, f17, f19, f5, rne # perform operation
fnmsub.s f1, f17, f19, f5, rtz # perform operation
fnmsub.s f1, f17, f19, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f1, f17, f19, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f1, f17, f19, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f1, f17, f19, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f1, f17, f19, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f1, f17, f19, f5 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0xbfc00000)
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f16, 0(x2) # load 0xff800000 from memory into f16
la x2, scratch
li x3, 0xa0e4b664 # load x3 with value 0xa0e4b664
sw x3, 0(x2) # store 0xa0e4b664 in memory
flw f18, 0(x2) # load 0xa0e4b664 from memory into f18
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f10, 0(x2) # load 0xbfc00000 from memory into f10
fnmsub.s f29, f16, f18, f10, dyn # perform operation
fnmsub.s f29, f16, f18, f10, rdn # perform operation
fnmsub.s f29, f16, f18, f10, rmm # perform operation
fnmsub.s f29, f16, f18, f10, rne # perform operation
fnmsub.s f29, f16, f18, f10, rtz # perform operation
fnmsub.s f29, f16, f18, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f29, f16, f18, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f29, f16, f18, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f29, f16, f18, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f29, f16, f18, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f29, f16, f18, f10 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0x40000000)
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f23, 0(x2) # load 0xff800000 from memory into f23
la x2, scratch
li x3, 0x7817872f # load x3 with value 0x7817872f
sw x3, 0(x2) # store 0x7817872f in memory
flw f2, 0(x2) # load 0x7817872f from memory into f2
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f30, 0(x2) # load 0x40000000 from memory into f30
fnmsub.s f17, f23, f2, f30, dyn # perform operation
fnmsub.s f17, f23, f2, f30, rdn # perform operation
fnmsub.s f17, f23, f2, f30, rmm # perform operation
fnmsub.s f17, f23, f2, f30, rne # perform operation
fnmsub.s f17, f23, f2, f30, rtz # perform operation
fnmsub.s f17, f23, f2, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f17, f23, f2, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f17, f23, f2, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f17, f23, f2, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f17, f23, f2, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f17, f23, f2, f30 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0xc0000000)
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f9, 0(x2) # load 0xff800000 from memory into f9
la x2, scratch
li x3, 0x503d6fc5 # load x3 with value 0x503d6fc5
sw x3, 0(x2) # store 0x503d6fc5 in memory
flw f27, 0(x2) # load 0x503d6fc5 from memory into f27
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f25, 0(x2) # load 0xc0000000 from memory into f25
fnmsub.s f6, f9, f27, f25, dyn # perform operation
fnmsub.s f6, f9, f27, f25, rdn # perform operation
fnmsub.s f6, f9, f27, f25, rmm # perform operation
fnmsub.s f6, f9, f27, f25, rne # perform operation
fnmsub.s f6, f9, f27, f25, rtz # perform operation
fnmsub.s f6, f9, f27, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f6, f9, f27, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f6, f9, f27, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f6, f9, f27, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f6, f9, f27, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f6, f9, f27, f25 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0x800000)
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f26, 0(x2) # load 0xff800000 from memory into f26
la x2, scratch
li x3, 0xc14d591e # load x3 with value 0xc14d591e
sw x3, 0(x2) # store 0xc14d591e in memory
flw f15, 0(x2) # load 0xc14d591e from memory into f15
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f1, 0(x2) # load 0x00800000 from memory into f1
fnmsub.s f30, f26, f15, f1, dyn # perform operation
fnmsub.s f30, f26, f15, f1, rdn # perform operation
fnmsub.s f30, f26, f15, f1, rmm # perform operation
fnmsub.s f30, f26, f15, f1, rne # perform operation
fnmsub.s f30, f26, f15, f1, rtz # perform operation
fnmsub.s f30, f26, f15, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f30, f26, f15, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f30, f26, f15, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f30, f26, f15, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f30, f26, f15, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f30, f26, f15, f1 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0x80800000)
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f27, 0(x2) # load 0xff800000 from memory into f27
la x2, scratch
li x3, 0x043d45ac # load x3 with value 0x043d45ac
sw x3, 0(x2) # store 0x043d45ac in memory
flw f13, 0(x2) # load 0x043d45ac from memory into f13
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f18, 0(x2) # load 0x80800000 from memory into f18
fnmsub.s f19, f27, f13, f18, dyn # perform operation
fnmsub.s f19, f27, f13, f18, rdn # perform operation
fnmsub.s f19, f27, f13, f18, rmm # perform operation
fnmsub.s f19, f27, f13, f18, rne # perform operation
fnmsub.s f19, f27, f13, f18, rtz # perform operation
fnmsub.s f19, f27, f13, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f19, f27, f13, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f19, f27, f13, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f19, f27, f13, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f19, f27, f13, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f19, f27, f13, f18 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0x7f7fffff)
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f29, 0(x2) # load 0xff800000 from memory into f29
la x2, scratch
li x3, 0xb5595072 # load x3 with value 0xb5595072
sw x3, 0(x2) # store 0xb5595072 in memory
flw f28, 0(x2) # load 0xb5595072 from memory into f28
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f30, 0(x2) # load 0x7f7fffff from memory into f30
fnmsub.s f31, f29, f28, f30, dyn # perform operation
fnmsub.s f31, f29, f28, f30, rdn # perform operation
fnmsub.s f31, f29, f28, f30, rmm # perform operation
fnmsub.s f31, f29, f28, f30, rne # perform operation
fnmsub.s f31, f29, f28, f30, rtz # perform operation
fnmsub.s f31, f29, f28, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f31, f29, f28, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f31, f29, f28, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f31, f29, f28, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f31, f29, f28, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f31, f29, f28, f30 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0xff7fffff)
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f7, 0(x2) # load 0xff800000 from memory into f7
la x2, scratch
li x3, 0x23114464 # load x3 with value 0x23114464
sw x3, 0(x2) # store 0x23114464 in memory
flw f10, 0(x2) # load 0x23114464 from memory into f10
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f3, 0(x2) # load 0xff7fffff from memory into f3
fnmsub.s f26, f7, f10, f3, dyn # perform operation
fnmsub.s f26, f7, f10, f3, rdn # perform operation
fnmsub.s f26, f7, f10, f3, rmm # perform operation
fnmsub.s f26, f7, f10, f3, rne # perform operation
fnmsub.s f26, f7, f10, f3, rtz # perform operation
fnmsub.s f26, f7, f10, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f26, f7, f10, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f26, f7, f10, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f26, f7, f10, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f26, f7, f10, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f26, f7, f10, f3 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0x7fffff)
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f8, 0(x2) # load 0xff800000 from memory into f8
la x2, scratch
li x3, 0x68e0c1ff # load x3 with value 0x68e0c1ff
sw x3, 0(x2) # store 0x68e0c1ff in memory
flw f24, 0(x2) # load 0x68e0c1ff from memory into f24
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f3, 0(x2) # load 0x007fffff from memory into f3
fnmsub.s f27, f8, f24, f3, dyn # perform operation
fnmsub.s f27, f8, f24, f3, rdn # perform operation
fnmsub.s f27, f8, f24, f3, rmm # perform operation
fnmsub.s f27, f8, f24, f3, rne # perform operation
fnmsub.s f27, f8, f24, f3, rtz # perform operation
fnmsub.s f27, f8, f24, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f27, f8, f24, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f27, f8, f24, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f27, f8, f24, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f27, f8, f24, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f27, f8, f24, f3 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0x807fffff)
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f17, 0(x2) # load 0xff800000 from memory into f17
la x2, scratch
li x3, 0x62030564 # load x3 with value 0x62030564
sw x3, 0(x2) # store 0x62030564 in memory
flw f30, 0(x2) # load 0x62030564 from memory into f30
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f1, 0(x2) # load 0x807fffff from memory into f1
fnmsub.s f31, f17, f30, f1, dyn # perform operation
fnmsub.s f31, f17, f30, f1, rdn # perform operation
fnmsub.s f31, f17, f30, f1, rmm # perform operation
fnmsub.s f31, f17, f30, f1, rne # perform operation
fnmsub.s f31, f17, f30, f1, rtz # perform operation
fnmsub.s f31, f17, f30, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f31, f17, f30, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f31, f17, f30, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f31, f17, f30, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f31, f17, f30, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f31, f17, f30, f1 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0x400000)
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f31, 0(x2) # load 0xff800000 from memory into f31
la x2, scratch
li x3, 0xbd459feb # load x3 with value 0xbd459feb
sw x3, 0(x2) # store 0xbd459feb in memory
flw f29, 0(x2) # load 0xbd459feb from memory into f29
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f21, 0(x2) # load 0x00400000 from memory into f21
fnmsub.s f28, f31, f29, f21, dyn # perform operation
fnmsub.s f28, f31, f29, f21, rdn # perform operation
fnmsub.s f28, f31, f29, f21, rmm # perform operation
fnmsub.s f28, f31, f29, f21, rne # perform operation
fnmsub.s f28, f31, f29, f21, rtz # perform operation
fnmsub.s f28, f31, f29, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f28, f31, f29, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f28, f31, f29, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f28, f31, f29, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f28, f31, f29, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f28, f31, f29, f21 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0x80400000)
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f8, 0(x2) # load 0xff800000 from memory into f8
la x2, scratch
li x3, 0x7729d73b # load x3 with value 0x7729d73b
sw x3, 0(x2) # store 0x7729d73b in memory
flw f9, 0(x2) # load 0x7729d73b from memory into f9
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f13, 0(x2) # load 0x80400000 from memory into f13
fnmsub.s f29, f8, f9, f13, dyn # perform operation
fnmsub.s f29, f8, f9, f13, rdn # perform operation
fnmsub.s f29, f8, f9, f13, rmm # perform operation
fnmsub.s f29, f8, f9, f13, rne # perform operation
fnmsub.s f29, f8, f9, f13, rtz # perform operation
fnmsub.s f29, f8, f9, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f29, f8, f9, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f29, f8, f9, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f29, f8, f9, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f29, f8, f9, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f29, f8, f9, f13 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0x1)
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f16, 0(x2) # load 0xff800000 from memory into f16
la x2, scratch
li x3, 0xc2f47f54 # load x3 with value 0xc2f47f54
sw x3, 0(x2) # store 0xc2f47f54 in memory
flw f11, 0(x2) # load 0xc2f47f54 from memory into f11
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f29, 0(x2) # load 0x00000001 from memory into f29
fnmsub.s f22, f16, f11, f29, dyn # perform operation
fnmsub.s f22, f16, f11, f29, rdn # perform operation
fnmsub.s f22, f16, f11, f29, rmm # perform operation
fnmsub.s f22, f16, f11, f29, rne # perform operation
fnmsub.s f22, f16, f11, f29, rtz # perform operation
fnmsub.s f22, f16, f11, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f22, f16, f11, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f22, f16, f11, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f22, f16, f11, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f22, f16, f11, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f22, f16, f11, f29 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0x80000001)
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f8, 0(x2) # load 0xff800000 from memory into f8
la x2, scratch
li x3, 0xe13d3e8f # load x3 with value 0xe13d3e8f
sw x3, 0(x2) # store 0xe13d3e8f in memory
flw f20, 0(x2) # load 0xe13d3e8f from memory into f20
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f29, 0(x2) # load 0x80000001 from memory into f29
fnmsub.s f10, f8, f20, f29, dyn # perform operation
fnmsub.s f10, f8, f20, f29, rdn # perform operation
fnmsub.s f10, f8, f20, f29, rmm # perform operation
fnmsub.s f10, f8, f20, f29, rne # perform operation
fnmsub.s f10, f8, f20, f29, rtz # perform operation
fnmsub.s f10, f8, f20, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f10, f8, f20, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f10, f8, f20, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f10, f8, f20, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f10, f8, f20, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f10, f8, f20, f29 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0x7f800000)
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f2, 0(x2) # load 0xff800000 from memory into f2
la x2, scratch
li x3, 0x240801a8 # load x3 with value 0x240801a8
sw x3, 0(x2) # store 0x240801a8 in memory
flw f30, 0(x2) # load 0x240801a8 from memory into f30
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f21, 0(x2) # load 0x7f800000 from memory into f21
fnmsub.s f17, f2, f30, f21, dyn # perform operation
fnmsub.s f17, f2, f30, f21, rdn # perform operation
fnmsub.s f17, f2, f30, f21, rmm # perform operation
fnmsub.s f17, f2, f30, f21, rne # perform operation
fnmsub.s f17, f2, f30, f21, rtz # perform operation
fnmsub.s f17, f2, f30, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f17, f2, f30, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f17, f2, f30, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f17, f2, f30, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f17, f2, f30, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f17, f2, f30, f21 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0xff800000)
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f26, 0(x2) # load 0xff800000 from memory into f26
la x2, scratch
li x3, 0xce3d40ba # load x3 with value 0xce3d40ba
sw x3, 0(x2) # store 0xce3d40ba in memory
flw f23, 0(x2) # load 0xce3d40ba from memory into f23
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f14, 0(x2) # load 0xff800000 from memory into f14
fnmsub.s f17, f26, f23, f14, dyn # perform operation
fnmsub.s f17, f26, f23, f14, rdn # perform operation
fnmsub.s f17, f26, f23, f14, rmm # perform operation
fnmsub.s f17, f26, f23, f14, rne # perform operation
fnmsub.s f17, f26, f23, f14, rtz # perform operation
fnmsub.s f17, f26, f23, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f17, f26, f23, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f17, f26, f23, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f17, f26, f23, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f17, f26, f23, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f17, f26, f23, f14 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0x7fc00000)
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f3, 0(x2) # load 0xff800000 from memory into f3
la x2, scratch
li x3, 0x09f15e17 # load x3 with value 0x09f15e17
sw x3, 0(x2) # store 0x09f15e17 in memory
flw f28, 0(x2) # load 0x09f15e17 from memory into f28
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f10, 0(x2) # load 0x7fc00000 from memory into f10
fnmsub.s f18, f3, f28, f10, dyn # perform operation
fnmsub.s f18, f3, f28, f10, rdn # perform operation
fnmsub.s f18, f3, f28, f10, rmm # perform operation
fnmsub.s f18, f3, f28, f10, rne # perform operation
fnmsub.s f18, f3, f28, f10, rtz # perform operation
fnmsub.s f18, f3, f28, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f18, f3, f28, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f18, f3, f28, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f18, f3, f28, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f18, f3, f28, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f18, f3, f28, f10 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0x7fffffff)
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f28, 0(x2) # load 0xff800000 from memory into f28
la x2, scratch
li x3, 0xc8c7675a # load x3 with value 0xc8c7675a
sw x3, 0(x2) # store 0xc8c7675a in memory
flw f17, 0(x2) # load 0xc8c7675a from memory into f17
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f31, 0(x2) # load 0x7fffffff from memory into f31
fnmsub.s f9, f28, f17, f31, dyn # perform operation
fnmsub.s f9, f28, f17, f31, rdn # perform operation
fnmsub.s f9, f28, f17, f31, rmm # perform operation
fnmsub.s f9, f28, f17, f31, rne # perform operation
fnmsub.s f9, f28, f17, f31, rtz # perform operation
fnmsub.s f9, f28, f17, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f9, f28, f17, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f9, f28, f17, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f9, f28, f17, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f9, f28, f17, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f9, f28, f17, f31 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0xffffffff)
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f23, 0(x2) # load 0xff800000 from memory into f23
la x2, scratch
li x3, 0x220aef51 # load x3 with value 0x220aef51
sw x3, 0(x2) # store 0x220aef51 in memory
flw f29, 0(x2) # load 0x220aef51 from memory into f29
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f15, 0(x2) # load 0xffffffff from memory into f15
fnmsub.s f27, f23, f29, f15, dyn # perform operation
fnmsub.s f27, f23, f29, f15, rdn # perform operation
fnmsub.s f27, f23, f29, f15, rmm # perform operation
fnmsub.s f27, f23, f29, f15, rne # perform operation
fnmsub.s f27, f23, f29, f15, rtz # perform operation
fnmsub.s f27, f23, f29, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f27, f23, f29, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f27, f23, f29, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f27, f23, f29, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f27, f23, f29, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f27, f23, f29, f15 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0x7f800001)
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f23, 0(x2) # load 0xff800000 from memory into f23
la x2, scratch
li x3, 0xf0befe92 # load x3 with value 0xf0befe92
sw x3, 0(x2) # store 0xf0befe92 in memory
flw f22, 0(x2) # load 0xf0befe92 from memory into f22
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f6, 0(x2) # load 0x7f800001 from memory into f6
fnmsub.s f31, f23, f22, f6, dyn # perform operation
fnmsub.s f31, f23, f22, f6, rdn # perform operation
fnmsub.s f31, f23, f22, f6, rmm # perform operation
fnmsub.s f31, f23, f22, f6, rne # perform operation
fnmsub.s f31, f23, f22, f6, rtz # perform operation
fnmsub.s f31, f23, f22, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f31, f23, f22, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f31, f23, f22, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f31, f23, f22, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f31, f23, f22, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f31, f23, f22, f6 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0x7fbfffff)
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f17, 0(x2) # load 0xff800000 from memory into f17
la x2, scratch
li x3, 0xafe7c07c # load x3 with value 0xafe7c07c
sw x3, 0(x2) # store 0xafe7c07c in memory
flw f16, 0(x2) # load 0xafe7c07c from memory into f16
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f20, 0(x2) # load 0x7fbfffff from memory into f20
fnmsub.s f2, f17, f16, f20, dyn # perform operation
fnmsub.s f2, f17, f16, f20, rdn # perform operation
fnmsub.s f2, f17, f16, f20, rmm # perform operation
fnmsub.s f2, f17, f16, f20, rne # perform operation
fnmsub.s f2, f17, f16, f20, rtz # perform operation
fnmsub.s f2, f17, f16, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f2, f17, f16, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f2, f17, f16, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f2, f17, f16, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f2, f17, f16, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f2, f17, f16, f20 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0xffbfffff)
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f3, 0(x2) # load 0xff800000 from memory into f3
la x2, scratch
li x3, 0xe0268388 # load x3 with value 0xe0268388
sw x3, 0(x2) # store 0xe0268388 in memory
flw f22, 0(x2) # load 0xe0268388 from memory into f22
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f27, 0(x2) # load 0xffbfffff from memory into f27
fnmsub.s f1, f3, f22, f27, dyn # perform operation
fnmsub.s f1, f3, f22, f27, rdn # perform operation
fnmsub.s f1, f3, f22, f27, rmm # perform operation
fnmsub.s f1, f3, f22, f27, rne # perform operation
fnmsub.s f1, f3, f22, f27, rtz # perform operation
fnmsub.s f1, f3, f22, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f1, f3, f22, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f1, f3, f22, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f1, f3, f22, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f1, f3, f22, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f1, f3, f22, f27 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0x7ef8654f)
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f22, 0(x2) # load 0xff800000 from memory into f22
la x2, scratch
li x3, 0x1d236848 # load x3 with value 0x1d236848
sw x3, 0(x2) # store 0x1d236848 in memory
flw f20, 0(x2) # load 0x1d236848 from memory into f20
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f3, 0(x2) # load 0x7ef8654f from memory into f3
fnmsub.s f31, f22, f20, f3, dyn # perform operation
fnmsub.s f31, f22, f20, f3, rdn # perform operation
fnmsub.s f31, f22, f20, f3, rmm # perform operation
fnmsub.s f31, f22, f20, f3, rne # perform operation
fnmsub.s f31, f22, f20, f3, rtz # perform operation
fnmsub.s f31, f22, f20, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f31, f22, f20, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f31, f22, f20, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f31, f22, f20, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f31, f22, f20, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f31, f22, f20, f3 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0x813d9ab0)
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f31, 0(x2) # load 0xff800000 from memory into f31
la x2, scratch
li x3, 0x0eb071b6 # load x3 with value 0x0eb071b6
sw x3, 0(x2) # store 0x0eb071b6 in memory
flw f24, 0(x2) # load 0x0eb071b6 from memory into f24
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f22, 0(x2) # load 0x813d9ab0 from memory into f22
fnmsub.s f17, f31, f24, f22, dyn # perform operation
fnmsub.s f17, f31, f24, f22, rdn # perform operation
fnmsub.s f17, f31, f24, f22, rmm # perform operation
fnmsub.s f17, f31, f24, f22, rne # perform operation
fnmsub.s f17, f31, f24, f22, rtz # perform operation
fnmsub.s f17, f31, f24, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f17, f31, f24, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f17, f31, f24, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f17, f31, f24, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f17, f31, f24, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f17, f31, f24, f22 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0x0)
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f14, 0(x2) # load 0x7fc00000 from memory into f14
la x2, scratch
li x3, 0x3a68586c # load x3 with value 0x3a68586c
sw x3, 0(x2) # store 0x3a68586c in memory
flw f11, 0(x2) # load 0x3a68586c from memory into f11
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f29, 0(x2) # load 0x00000000 from memory into f29
fnmsub.s f18, f14, f11, f29, dyn # perform operation
fnmsub.s f18, f14, f11, f29, rdn # perform operation
fnmsub.s f18, f14, f11, f29, rmm # perform operation
fnmsub.s f18, f14, f11, f29, rne # perform operation
fnmsub.s f18, f14, f11, f29, rtz # perform operation
fnmsub.s f18, f14, f11, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f18, f14, f11, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f18, f14, f11, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f18, f14, f11, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f18, f14, f11, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f18, f14, f11, f29 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0x80000000)
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f14, 0(x2) # load 0x7fc00000 from memory into f14
la x2, scratch
li x3, 0x48267604 # load x3 with value 0x48267604
sw x3, 0(x2) # store 0x48267604 in memory
flw f20, 0(x2) # load 0x48267604 from memory into f20
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f5, 0(x2) # load 0x80000000 from memory into f5
fnmsub.s f23, f14, f20, f5, dyn # perform operation
fnmsub.s f23, f14, f20, f5, rdn # perform operation
fnmsub.s f23, f14, f20, f5, rmm # perform operation
fnmsub.s f23, f14, f20, f5, rne # perform operation
fnmsub.s f23, f14, f20, f5, rtz # perform operation
fnmsub.s f23, f14, f20, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f23, f14, f20, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f23, f14, f20, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f23, f14, f20, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f23, f14, f20, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f23, f14, f20, f5 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0x3f800000)
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f1, 0(x2) # load 0x7fc00000 from memory into f1
la x2, scratch
li x3, 0xb2177f4e # load x3 with value 0xb2177f4e
sw x3, 0(x2) # store 0xb2177f4e in memory
flw f9, 0(x2) # load 0xb2177f4e from memory into f9
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f12, 0(x2) # load 0x3f800000 from memory into f12
fnmsub.s f24, f1, f9, f12, dyn # perform operation
fnmsub.s f24, f1, f9, f12, rdn # perform operation
fnmsub.s f24, f1, f9, f12, rmm # perform operation
fnmsub.s f24, f1, f9, f12, rne # perform operation
fnmsub.s f24, f1, f9, f12, rtz # perform operation
fnmsub.s f24, f1, f9, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f24, f1, f9, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f24, f1, f9, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f24, f1, f9, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f24, f1, f9, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f24, f1, f9, f12 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0xbf800000)
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f1, 0(x2) # load 0x7fc00000 from memory into f1
la x2, scratch
li x3, 0xf4675f01 # load x3 with value 0xf4675f01
sw x3, 0(x2) # store 0xf4675f01 in memory
flw f6, 0(x2) # load 0xf4675f01 from memory into f6
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f2, 0(x2) # load 0xbf800000 from memory into f2
fnmsub.s f8, f1, f6, f2, dyn # perform operation
fnmsub.s f8, f1, f6, f2, rdn # perform operation
fnmsub.s f8, f1, f6, f2, rmm # perform operation
fnmsub.s f8, f1, f6, f2, rne # perform operation
fnmsub.s f8, f1, f6, f2, rtz # perform operation
fnmsub.s f8, f1, f6, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f8, f1, f6, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f8, f1, f6, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f8, f1, f6, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f8, f1, f6, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f8, f1, f6, f2 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0x3fc00000)
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f15, 0(x2) # load 0x7fc00000 from memory into f15
la x2, scratch
li x3, 0x37ec5b5c # load x3 with value 0x37ec5b5c
sw x3, 0(x2) # store 0x37ec5b5c in memory
flw f17, 0(x2) # load 0x37ec5b5c from memory into f17
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f29, 0(x2) # load 0x3fc00000 from memory into f29
fnmsub.s f27, f15, f17, f29, dyn # perform operation
fnmsub.s f27, f15, f17, f29, rdn # perform operation
fnmsub.s f27, f15, f17, f29, rmm # perform operation
fnmsub.s f27, f15, f17, f29, rne # perform operation
fnmsub.s f27, f15, f17, f29, rtz # perform operation
fnmsub.s f27, f15, f17, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f27, f15, f17, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f27, f15, f17, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f27, f15, f17, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f27, f15, f17, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f27, f15, f17, f29 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0xbfc00000)
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f5, 0(x2) # load 0x7fc00000 from memory into f5
la x2, scratch
li x3, 0x221993bb # load x3 with value 0x221993bb
sw x3, 0(x2) # store 0x221993bb in memory
flw f13, 0(x2) # load 0x221993bb from memory into f13
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f14, 0(x2) # load 0xbfc00000 from memory into f14
fnmsub.s f3, f5, f13, f14, dyn # perform operation
fnmsub.s f3, f5, f13, f14, rdn # perform operation
fnmsub.s f3, f5, f13, f14, rmm # perform operation
fnmsub.s f3, f5, f13, f14, rne # perform operation
fnmsub.s f3, f5, f13, f14, rtz # perform operation
fnmsub.s f3, f5, f13, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f3, f5, f13, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f3, f5, f13, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f3, f5, f13, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f3, f5, f13, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f3, f5, f13, f14 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0x40000000)
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f22, 0(x2) # load 0x7fc00000 from memory into f22
la x2, scratch
li x3, 0x203f68d0 # load x3 with value 0x203f68d0
sw x3, 0(x2) # store 0x203f68d0 in memory
flw f26, 0(x2) # load 0x203f68d0 from memory into f26
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f23, 0(x2) # load 0x40000000 from memory into f23
fnmsub.s f9, f22, f26, f23, dyn # perform operation
fnmsub.s f9, f22, f26, f23, rdn # perform operation
fnmsub.s f9, f22, f26, f23, rmm # perform operation
fnmsub.s f9, f22, f26, f23, rne # perform operation
fnmsub.s f9, f22, f26, f23, rtz # perform operation
fnmsub.s f9, f22, f26, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f9, f22, f26, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f9, f22, f26, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f9, f22, f26, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f9, f22, f26, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f9, f22, f26, f23 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0xc0000000)
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f16, 0(x2) # load 0x7fc00000 from memory into f16
la x2, scratch
li x3, 0x01aa9056 # load x3 with value 0x01aa9056
sw x3, 0(x2) # store 0x01aa9056 in memory
flw f25, 0(x2) # load 0x01aa9056 from memory into f25
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f21, 0(x2) # load 0xc0000000 from memory into f21
fnmsub.s f22, f16, f25, f21, dyn # perform operation
fnmsub.s f22, f16, f25, f21, rdn # perform operation
fnmsub.s f22, f16, f25, f21, rmm # perform operation
fnmsub.s f22, f16, f25, f21, rne # perform operation
fnmsub.s f22, f16, f25, f21, rtz # perform operation
fnmsub.s f22, f16, f25, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f22, f16, f25, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f22, f16, f25, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f22, f16, f25, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f22, f16, f25, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f22, f16, f25, f21 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0x800000)
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f18, 0(x2) # load 0x7fc00000 from memory into f18
la x2, scratch
li x3, 0xdeb0eb0b # load x3 with value 0xdeb0eb0b
sw x3, 0(x2) # store 0xdeb0eb0b in memory
flw f21, 0(x2) # load 0xdeb0eb0b from memory into f21
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f11, 0(x2) # load 0x00800000 from memory into f11
fnmsub.s f24, f18, f21, f11, dyn # perform operation
fnmsub.s f24, f18, f21, f11, rdn # perform operation
fnmsub.s f24, f18, f21, f11, rmm # perform operation
fnmsub.s f24, f18, f21, f11, rne # perform operation
fnmsub.s f24, f18, f21, f11, rtz # perform operation
fnmsub.s f24, f18, f21, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f24, f18, f21, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f24, f18, f21, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f24, f18, f21, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f24, f18, f21, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f24, f18, f21, f11 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0x80800000)
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f18, 0(x2) # load 0x7fc00000 from memory into f18
la x2, scratch
li x3, 0x71e1991f # load x3 with value 0x71e1991f
sw x3, 0(x2) # store 0x71e1991f in memory
flw f7, 0(x2) # load 0x71e1991f from memory into f7
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f10, 0(x2) # load 0x80800000 from memory into f10
fnmsub.s f27, f18, f7, f10, dyn # perform operation
fnmsub.s f27, f18, f7, f10, rdn # perform operation
fnmsub.s f27, f18, f7, f10, rmm # perform operation
fnmsub.s f27, f18, f7, f10, rne # perform operation
fnmsub.s f27, f18, f7, f10, rtz # perform operation
fnmsub.s f27, f18, f7, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f27, f18, f7, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f27, f18, f7, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f27, f18, f7, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f27, f18, f7, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f27, f18, f7, f10 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0x7f7fffff)
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f22, 0(x2) # load 0x7fc00000 from memory into f22
la x2, scratch
li x3, 0xd29d5337 # load x3 with value 0xd29d5337
sw x3, 0(x2) # store 0xd29d5337 in memory
flw f28, 0(x2) # load 0xd29d5337 from memory into f28
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f17, 0(x2) # load 0x7f7fffff from memory into f17
fnmsub.s f14, f22, f28, f17, dyn # perform operation
fnmsub.s f14, f22, f28, f17, rdn # perform operation
fnmsub.s f14, f22, f28, f17, rmm # perform operation
fnmsub.s f14, f22, f28, f17, rne # perform operation
fnmsub.s f14, f22, f28, f17, rtz # perform operation
fnmsub.s f14, f22, f28, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f14, f22, f28, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f14, f22, f28, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f14, f22, f28, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f14, f22, f28, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f14, f22, f28, f17 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0xff7fffff)
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f1, 0(x2) # load 0x7fc00000 from memory into f1
la x2, scratch
li x3, 0xc671ea2d # load x3 with value 0xc671ea2d
sw x3, 0(x2) # store 0xc671ea2d in memory
flw f9, 0(x2) # load 0xc671ea2d from memory into f9
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f21, 0(x2) # load 0xff7fffff from memory into f21
fnmsub.s f17, f1, f9, f21, dyn # perform operation
fnmsub.s f17, f1, f9, f21, rdn # perform operation
fnmsub.s f17, f1, f9, f21, rmm # perform operation
fnmsub.s f17, f1, f9, f21, rne # perform operation
fnmsub.s f17, f1, f9, f21, rtz # perform operation
fnmsub.s f17, f1, f9, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f17, f1, f9, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f17, f1, f9, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f17, f1, f9, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f17, f1, f9, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f17, f1, f9, f21 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0x7fffff)
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f17, 0(x2) # load 0x7fc00000 from memory into f17
la x2, scratch
li x3, 0x6260864e # load x3 with value 0x6260864e
sw x3, 0(x2) # store 0x6260864e in memory
flw f1, 0(x2) # load 0x6260864e from memory into f1
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f2, 0(x2) # load 0x007fffff from memory into f2
fnmsub.s f19, f17, f1, f2, dyn # perform operation
fnmsub.s f19, f17, f1, f2, rdn # perform operation
fnmsub.s f19, f17, f1, f2, rmm # perform operation
fnmsub.s f19, f17, f1, f2, rne # perform operation
fnmsub.s f19, f17, f1, f2, rtz # perform operation
fnmsub.s f19, f17, f1, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f19, f17, f1, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f19, f17, f1, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f19, f17, f1, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f19, f17, f1, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f19, f17, f1, f2 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0x807fffff)
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f24, 0(x2) # load 0x7fc00000 from memory into f24
la x2, scratch
li x3, 0xf2b95883 # load x3 with value 0xf2b95883
sw x3, 0(x2) # store 0xf2b95883 in memory
flw f30, 0(x2) # load 0xf2b95883 from memory into f30
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f18, 0(x2) # load 0x807fffff from memory into f18
fnmsub.s f8, f24, f30, f18, dyn # perform operation
fnmsub.s f8, f24, f30, f18, rdn # perform operation
fnmsub.s f8, f24, f30, f18, rmm # perform operation
fnmsub.s f8, f24, f30, f18, rne # perform operation
fnmsub.s f8, f24, f30, f18, rtz # perform operation
fnmsub.s f8, f24, f30, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f8, f24, f30, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f8, f24, f30, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f8, f24, f30, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f8, f24, f30, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f8, f24, f30, f18 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0x400000)
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f10, 0(x2) # load 0x7fc00000 from memory into f10
la x2, scratch
li x3, 0x8797895f # load x3 with value 0x8797895f
sw x3, 0(x2) # store 0x8797895f in memory
flw f2, 0(x2) # load 0x8797895f from memory into f2
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f22, 0(x2) # load 0x00400000 from memory into f22
fnmsub.s f25, f10, f2, f22, dyn # perform operation
fnmsub.s f25, f10, f2, f22, rdn # perform operation
fnmsub.s f25, f10, f2, f22, rmm # perform operation
fnmsub.s f25, f10, f2, f22, rne # perform operation
fnmsub.s f25, f10, f2, f22, rtz # perform operation
fnmsub.s f25, f10, f2, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f25, f10, f2, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f25, f10, f2, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f25, f10, f2, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f25, f10, f2, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f25, f10, f2, f22 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0x80400000)
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f6, 0(x2) # load 0x7fc00000 from memory into f6
la x2, scratch
li x3, 0x342a425f # load x3 with value 0x342a425f
sw x3, 0(x2) # store 0x342a425f in memory
flw f15, 0(x2) # load 0x342a425f from memory into f15
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f2, 0(x2) # load 0x80400000 from memory into f2
fnmsub.s f24, f6, f15, f2, dyn # perform operation
fnmsub.s f24, f6, f15, f2, rdn # perform operation
fnmsub.s f24, f6, f15, f2, rmm # perform operation
fnmsub.s f24, f6, f15, f2, rne # perform operation
fnmsub.s f24, f6, f15, f2, rtz # perform operation
fnmsub.s f24, f6, f15, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f24, f6, f15, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f24, f6, f15, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f24, f6, f15, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f24, f6, f15, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f24, f6, f15, f2 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0x1)
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f13, 0(x2) # load 0x7fc00000 from memory into f13
la x2, scratch
li x3, 0xe3e4624b # load x3 with value 0xe3e4624b
sw x3, 0(x2) # store 0xe3e4624b in memory
flw f15, 0(x2) # load 0xe3e4624b from memory into f15
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f28, 0(x2) # load 0x00000001 from memory into f28
fnmsub.s f14, f13, f15, f28, dyn # perform operation
fnmsub.s f14, f13, f15, f28, rdn # perform operation
fnmsub.s f14, f13, f15, f28, rmm # perform operation
fnmsub.s f14, f13, f15, f28, rne # perform operation
fnmsub.s f14, f13, f15, f28, rtz # perform operation
fnmsub.s f14, f13, f15, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f14, f13, f15, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f14, f13, f15, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f14, f13, f15, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f14, f13, f15, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f14, f13, f15, f28 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0x80000001)
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f31, 0(x2) # load 0x7fc00000 from memory into f31
la x2, scratch
li x3, 0xa58c5df6 # load x3 with value 0xa58c5df6
sw x3, 0(x2) # store 0xa58c5df6 in memory
flw f22, 0(x2) # load 0xa58c5df6 from memory into f22
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f1, 0(x2) # load 0x80000001 from memory into f1
fnmsub.s f2, f31, f22, f1, dyn # perform operation
fnmsub.s f2, f31, f22, f1, rdn # perform operation
fnmsub.s f2, f31, f22, f1, rmm # perform operation
fnmsub.s f2, f31, f22, f1, rne # perform operation
fnmsub.s f2, f31, f22, f1, rtz # perform operation
fnmsub.s f2, f31, f22, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f2, f31, f22, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f2, f31, f22, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f2, f31, f22, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f2, f31, f22, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f2, f31, f22, f1 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0x7f800000)
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f3, 0(x2) # load 0x7fc00000 from memory into f3
la x2, scratch
li x3, 0x74a8b362 # load x3 with value 0x74a8b362
sw x3, 0(x2) # store 0x74a8b362 in memory
flw f9, 0(x2) # load 0x74a8b362 from memory into f9
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f10, 0(x2) # load 0x7f800000 from memory into f10
fnmsub.s f2, f3, f9, f10, dyn # perform operation
fnmsub.s f2, f3, f9, f10, rdn # perform operation
fnmsub.s f2, f3, f9, f10, rmm # perform operation
fnmsub.s f2, f3, f9, f10, rne # perform operation
fnmsub.s f2, f3, f9, f10, rtz # perform operation
fnmsub.s f2, f3, f9, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f2, f3, f9, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f2, f3, f9, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f2, f3, f9, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f2, f3, f9, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f2, f3, f9, f10 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0xff800000)
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f15, 0(x2) # load 0x7fc00000 from memory into f15
la x2, scratch
li x3, 0x381e804d # load x3 with value 0x381e804d
sw x3, 0(x2) # store 0x381e804d in memory
flw f6, 0(x2) # load 0x381e804d from memory into f6
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f14, 0(x2) # load 0xff800000 from memory into f14
fnmsub.s f20, f15, f6, f14, dyn # perform operation
fnmsub.s f20, f15, f6, f14, rdn # perform operation
fnmsub.s f20, f15, f6, f14, rmm # perform operation
fnmsub.s f20, f15, f6, f14, rne # perform operation
fnmsub.s f20, f15, f6, f14, rtz # perform operation
fnmsub.s f20, f15, f6, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f20, f15, f6, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f20, f15, f6, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f20, f15, f6, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f20, f15, f6, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f20, f15, f6, f14 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0x7fc00000)
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f30, 0(x2) # load 0x7fc00000 from memory into f30
la x2, scratch
li x3, 0xd719776e # load x3 with value 0xd719776e
sw x3, 0(x2) # store 0xd719776e in memory
flw f6, 0(x2) # load 0xd719776e from memory into f6
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f5, 0(x2) # load 0x7fc00000 from memory into f5
fnmsub.s f7, f30, f6, f5, dyn # perform operation
fnmsub.s f7, f30, f6, f5, rdn # perform operation
fnmsub.s f7, f30, f6, f5, rmm # perform operation
fnmsub.s f7, f30, f6, f5, rne # perform operation
fnmsub.s f7, f30, f6, f5, rtz # perform operation
fnmsub.s f7, f30, f6, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f7, f30, f6, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f7, f30, f6, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f7, f30, f6, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f7, f30, f6, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f7, f30, f6, f5 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0x7fffffff)
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f17, 0(x2) # load 0x7fc00000 from memory into f17
la x2, scratch
li x3, 0x650a2cb8 # load x3 with value 0x650a2cb8
sw x3, 0(x2) # store 0x650a2cb8 in memory
flw f11, 0(x2) # load 0x650a2cb8 from memory into f11
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f23, 0(x2) # load 0x7fffffff from memory into f23
fnmsub.s f31, f17, f11, f23, dyn # perform operation
fnmsub.s f31, f17, f11, f23, rdn # perform operation
fnmsub.s f31, f17, f11, f23, rmm # perform operation
fnmsub.s f31, f17, f11, f23, rne # perform operation
fnmsub.s f31, f17, f11, f23, rtz # perform operation
fnmsub.s f31, f17, f11, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f31, f17, f11, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f31, f17, f11, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f31, f17, f11, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f31, f17, f11, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f31, f17, f11, f23 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0xffffffff)
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f19, 0(x2) # load 0x7fc00000 from memory into f19
la x2, scratch
li x3, 0xca485b6d # load x3 with value 0xca485b6d
sw x3, 0(x2) # store 0xca485b6d in memory
flw f26, 0(x2) # load 0xca485b6d from memory into f26
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f2, 0(x2) # load 0xffffffff from memory into f2
fnmsub.s f31, f19, f26, f2, dyn # perform operation
fnmsub.s f31, f19, f26, f2, rdn # perform operation
fnmsub.s f31, f19, f26, f2, rmm # perform operation
fnmsub.s f31, f19, f26, f2, rne # perform operation
fnmsub.s f31, f19, f26, f2, rtz # perform operation
fnmsub.s f31, f19, f26, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f31, f19, f26, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f31, f19, f26, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f31, f19, f26, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f31, f19, f26, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f31, f19, f26, f2 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0x7f800001)
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f21, 0(x2) # load 0x7fc00000 from memory into f21
la x2, scratch
li x3, 0x46900a40 # load x3 with value 0x46900a40
sw x3, 0(x2) # store 0x46900a40 in memory
flw f22, 0(x2) # load 0x46900a40 from memory into f22
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f20, 0(x2) # load 0x7f800001 from memory into f20
fnmsub.s f17, f21, f22, f20, dyn # perform operation
fnmsub.s f17, f21, f22, f20, rdn # perform operation
fnmsub.s f17, f21, f22, f20, rmm # perform operation
fnmsub.s f17, f21, f22, f20, rne # perform operation
fnmsub.s f17, f21, f22, f20, rtz # perform operation
fnmsub.s f17, f21, f22, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f17, f21, f22, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f17, f21, f22, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f17, f21, f22, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f17, f21, f22, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f17, f21, f22, f20 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0x7fbfffff)
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f14, 0(x2) # load 0x7fc00000 from memory into f14
la x2, scratch
li x3, 0x0b7246f4 # load x3 with value 0x0b7246f4
sw x3, 0(x2) # store 0x0b7246f4 in memory
flw f17, 0(x2) # load 0x0b7246f4 from memory into f17
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f20, 0(x2) # load 0x7fbfffff from memory into f20
fnmsub.s f8, f14, f17, f20, dyn # perform operation
fnmsub.s f8, f14, f17, f20, rdn # perform operation
fnmsub.s f8, f14, f17, f20, rmm # perform operation
fnmsub.s f8, f14, f17, f20, rne # perform operation
fnmsub.s f8, f14, f17, f20, rtz # perform operation
fnmsub.s f8, f14, f17, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f8, f14, f17, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f8, f14, f17, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f8, f14, f17, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f8, f14, f17, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f8, f14, f17, f20 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0xffbfffff)
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f29, 0(x2) # load 0x7fc00000 from memory into f29
la x2, scratch
li x3, 0x725a0740 # load x3 with value 0x725a0740
sw x3, 0(x2) # store 0x725a0740 in memory
flw f12, 0(x2) # load 0x725a0740 from memory into f12
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f31, 0(x2) # load 0xffbfffff from memory into f31
fnmsub.s f18, f29, f12, f31, dyn # perform operation
fnmsub.s f18, f29, f12, f31, rdn # perform operation
fnmsub.s f18, f29, f12, f31, rmm # perform operation
fnmsub.s f18, f29, f12, f31, rne # perform operation
fnmsub.s f18, f29, f12, f31, rtz # perform operation
fnmsub.s f18, f29, f12, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f18, f29, f12, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f18, f29, f12, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f18, f29, f12, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f18, f29, f12, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f18, f29, f12, f31 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0x7ef8654f)
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f29, 0(x2) # load 0x7fc00000 from memory into f29
la x2, scratch
li x3, 0x756c9469 # load x3 with value 0x756c9469
sw x3, 0(x2) # store 0x756c9469 in memory
flw f13, 0(x2) # load 0x756c9469 from memory into f13
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f24, 0(x2) # load 0x7ef8654f from memory into f24
fnmsub.s f25, f29, f13, f24, dyn # perform operation
fnmsub.s f25, f29, f13, f24, rdn # perform operation
fnmsub.s f25, f29, f13, f24, rmm # perform operation
fnmsub.s f25, f29, f13, f24, rne # perform operation
fnmsub.s f25, f29, f13, f24, rtz # perform operation
fnmsub.s f25, f29, f13, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f25, f29, f13, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f25, f29, f13, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f25, f29, f13, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f25, f29, f13, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f25, f29, f13, f24 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0x813d9ab0)
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f27, 0(x2) # load 0x7fc00000 from memory into f27
la x2, scratch
li x3, 0x322d5776 # load x3 with value 0x322d5776
sw x3, 0(x2) # store 0x322d5776 in memory
flw f8, 0(x2) # load 0x322d5776 from memory into f8
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f31, 0(x2) # load 0x813d9ab0 from memory into f31
fnmsub.s f11, f27, f8, f31, dyn # perform operation
fnmsub.s f11, f27, f8, f31, rdn # perform operation
fnmsub.s f11, f27, f8, f31, rmm # perform operation
fnmsub.s f11, f27, f8, f31, rne # perform operation
fnmsub.s f11, f27, f8, f31, rtz # perform operation
fnmsub.s f11, f27, f8, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f11, f27, f8, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f11, f27, f8, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f11, f27, f8, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f11, f27, f8, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f11, f27, f8, f31 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0x0)
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f21, 0(x2) # load 0x7fffffff from memory into f21
la x2, scratch
li x3, 0x0bbba517 # load x3 with value 0x0bbba517
sw x3, 0(x2) # store 0x0bbba517 in memory
flw f8, 0(x2) # load 0x0bbba517 from memory into f8
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f25, 0(x2) # load 0x00000000 from memory into f25
fnmsub.s f2, f21, f8, f25, dyn # perform operation
fnmsub.s f2, f21, f8, f25, rdn # perform operation
fnmsub.s f2, f21, f8, f25, rmm # perform operation
fnmsub.s f2, f21, f8, f25, rne # perform operation
fnmsub.s f2, f21, f8, f25, rtz # perform operation
fnmsub.s f2, f21, f8, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f2, f21, f8, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f2, f21, f8, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f2, f21, f8, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f2, f21, f8, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f2, f21, f8, f25 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0x80000000)
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f13, 0(x2) # load 0x7fffffff from memory into f13
la x2, scratch
li x3, 0x1a274c5a # load x3 with value 0x1a274c5a
sw x3, 0(x2) # store 0x1a274c5a in memory
flw f17, 0(x2) # load 0x1a274c5a from memory into f17
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f3, 0(x2) # load 0x80000000 from memory into f3
fnmsub.s f1, f13, f17, f3, dyn # perform operation
fnmsub.s f1, f13, f17, f3, rdn # perform operation
fnmsub.s f1, f13, f17, f3, rmm # perform operation
fnmsub.s f1, f13, f17, f3, rne # perform operation
fnmsub.s f1, f13, f17, f3, rtz # perform operation
fnmsub.s f1, f13, f17, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f1, f13, f17, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f1, f13, f17, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f1, f13, f17, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f1, f13, f17, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f1, f13, f17, f3 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0x3f800000)
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f11, 0(x2) # load 0x7fffffff from memory into f11
la x2, scratch
li x3, 0xf5eed172 # load x3 with value 0xf5eed172
sw x3, 0(x2) # store 0xf5eed172 in memory
flw f15, 0(x2) # load 0xf5eed172 from memory into f15
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f30, 0(x2) # load 0x3f800000 from memory into f30
fnmsub.s f17, f11, f15, f30, dyn # perform operation
fnmsub.s f17, f11, f15, f30, rdn # perform operation
fnmsub.s f17, f11, f15, f30, rmm # perform operation
fnmsub.s f17, f11, f15, f30, rne # perform operation
fnmsub.s f17, f11, f15, f30, rtz # perform operation
fnmsub.s f17, f11, f15, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f17, f11, f15, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f17, f11, f15, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f17, f11, f15, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f17, f11, f15, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f17, f11, f15, f30 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0xbf800000)
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f27, 0(x2) # load 0x7fffffff from memory into f27
la x2, scratch
li x3, 0x0f9dc602 # load x3 with value 0x0f9dc602
sw x3, 0(x2) # store 0x0f9dc602 in memory
flw f10, 0(x2) # load 0x0f9dc602 from memory into f10
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f7, 0(x2) # load 0xbf800000 from memory into f7
fnmsub.s f29, f27, f10, f7, dyn # perform operation
fnmsub.s f29, f27, f10, f7, rdn # perform operation
fnmsub.s f29, f27, f10, f7, rmm # perform operation
fnmsub.s f29, f27, f10, f7, rne # perform operation
fnmsub.s f29, f27, f10, f7, rtz # perform operation
fnmsub.s f29, f27, f10, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f29, f27, f10, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f29, f27, f10, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f29, f27, f10, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f29, f27, f10, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f29, f27, f10, f7 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0x3fc00000)
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f27, 0(x2) # load 0x7fffffff from memory into f27
la x2, scratch
li x3, 0x9d6b5efa # load x3 with value 0x9d6b5efa
sw x3, 0(x2) # store 0x9d6b5efa in memory
flw f22, 0(x2) # load 0x9d6b5efa from memory into f22
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f5, 0(x2) # load 0x3fc00000 from memory into f5
fnmsub.s f19, f27, f22, f5, dyn # perform operation
fnmsub.s f19, f27, f22, f5, rdn # perform operation
fnmsub.s f19, f27, f22, f5, rmm # perform operation
fnmsub.s f19, f27, f22, f5, rne # perform operation
fnmsub.s f19, f27, f22, f5, rtz # perform operation
fnmsub.s f19, f27, f22, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f19, f27, f22, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f19, f27, f22, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f19, f27, f22, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f19, f27, f22, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f19, f27, f22, f5 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0xbfc00000)
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f27, 0(x2) # load 0x7fffffff from memory into f27
la x2, scratch
li x3, 0xd464a81e # load x3 with value 0xd464a81e
sw x3, 0(x2) # store 0xd464a81e in memory
flw f9, 0(x2) # load 0xd464a81e from memory into f9
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f29, 0(x2) # load 0xbfc00000 from memory into f29
fnmsub.s f14, f27, f9, f29, dyn # perform operation
fnmsub.s f14, f27, f9, f29, rdn # perform operation
fnmsub.s f14, f27, f9, f29, rmm # perform operation
fnmsub.s f14, f27, f9, f29, rne # perform operation
fnmsub.s f14, f27, f9, f29, rtz # perform operation
fnmsub.s f14, f27, f9, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f14, f27, f9, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f14, f27, f9, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f14, f27, f9, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f14, f27, f9, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f14, f27, f9, f29 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0x40000000)
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f12, 0(x2) # load 0x7fffffff from memory into f12
la x2, scratch
li x3, 0x7a6ed5c5 # load x3 with value 0x7a6ed5c5
sw x3, 0(x2) # store 0x7a6ed5c5 in memory
flw f16, 0(x2) # load 0x7a6ed5c5 from memory into f16
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f3, 0(x2) # load 0x40000000 from memory into f3
fnmsub.s f17, f12, f16, f3, dyn # perform operation
fnmsub.s f17, f12, f16, f3, rdn # perform operation
fnmsub.s f17, f12, f16, f3, rmm # perform operation
fnmsub.s f17, f12, f16, f3, rne # perform operation
fnmsub.s f17, f12, f16, f3, rtz # perform operation
fnmsub.s f17, f12, f16, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f17, f12, f16, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f17, f12, f16, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f17, f12, f16, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f17, f12, f16, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f17, f12, f16, f3 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0xc0000000)
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f23, 0(x2) # load 0x7fffffff from memory into f23
la x2, scratch
li x3, 0x958980d4 # load x3 with value 0x958980d4
sw x3, 0(x2) # store 0x958980d4 in memory
flw f16, 0(x2) # load 0x958980d4 from memory into f16
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f9, 0(x2) # load 0xc0000000 from memory into f9
fnmsub.s f15, f23, f16, f9, dyn # perform operation
fnmsub.s f15, f23, f16, f9, rdn # perform operation
fnmsub.s f15, f23, f16, f9, rmm # perform operation
fnmsub.s f15, f23, f16, f9, rne # perform operation
fnmsub.s f15, f23, f16, f9, rtz # perform operation
fnmsub.s f15, f23, f16, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f15, f23, f16, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f15, f23, f16, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f15, f23, f16, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f15, f23, f16, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f15, f23, f16, f9 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0x800000)
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f25, 0(x2) # load 0x7fffffff from memory into f25
la x2, scratch
li x3, 0x43870582 # load x3 with value 0x43870582
sw x3, 0(x2) # store 0x43870582 in memory
flw f11, 0(x2) # load 0x43870582 from memory into f11
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f31, 0(x2) # load 0x00800000 from memory into f31
fnmsub.s f18, f25, f11, f31, dyn # perform operation
fnmsub.s f18, f25, f11, f31, rdn # perform operation
fnmsub.s f18, f25, f11, f31, rmm # perform operation
fnmsub.s f18, f25, f11, f31, rne # perform operation
fnmsub.s f18, f25, f11, f31, rtz # perform operation
fnmsub.s f18, f25, f11, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f18, f25, f11, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f18, f25, f11, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f18, f25, f11, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f18, f25, f11, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f18, f25, f11, f31 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0x80800000)
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f11, 0(x2) # load 0x7fffffff from memory into f11
la x2, scratch
li x3, 0xbc3349e8 # load x3 with value 0xbc3349e8
sw x3, 0(x2) # store 0xbc3349e8 in memory
flw f20, 0(x2) # load 0xbc3349e8 from memory into f20
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f21, 0(x2) # load 0x80800000 from memory into f21
fnmsub.s f15, f11, f20, f21, dyn # perform operation
fnmsub.s f15, f11, f20, f21, rdn # perform operation
fnmsub.s f15, f11, f20, f21, rmm # perform operation
fnmsub.s f15, f11, f20, f21, rne # perform operation
fnmsub.s f15, f11, f20, f21, rtz # perform operation
fnmsub.s f15, f11, f20, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f15, f11, f20, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f15, f11, f20, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f15, f11, f20, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f15, f11, f20, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f15, f11, f20, f21 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0x7f7fffff)
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f2, 0(x2) # load 0x7fffffff from memory into f2
la x2, scratch
li x3, 0x559e7c63 # load x3 with value 0x559e7c63
sw x3, 0(x2) # store 0x559e7c63 in memory
flw f27, 0(x2) # load 0x559e7c63 from memory into f27
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f15, 0(x2) # load 0x7f7fffff from memory into f15
fnmsub.s f22, f2, f27, f15, dyn # perform operation
fnmsub.s f22, f2, f27, f15, rdn # perform operation
fnmsub.s f22, f2, f27, f15, rmm # perform operation
fnmsub.s f22, f2, f27, f15, rne # perform operation
fnmsub.s f22, f2, f27, f15, rtz # perform operation
fnmsub.s f22, f2, f27, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f22, f2, f27, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f22, f2, f27, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f22, f2, f27, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f22, f2, f27, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f22, f2, f27, f15 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0xff7fffff)
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f20, 0(x2) # load 0x7fffffff from memory into f20
la x2, scratch
li x3, 0x3ea924ec # load x3 with value 0x3ea924ec
sw x3, 0(x2) # store 0x3ea924ec in memory
flw f17, 0(x2) # load 0x3ea924ec from memory into f17
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f26, 0(x2) # load 0xff7fffff from memory into f26
fnmsub.s f18, f20, f17, f26, dyn # perform operation
fnmsub.s f18, f20, f17, f26, rdn # perform operation
fnmsub.s f18, f20, f17, f26, rmm # perform operation
fnmsub.s f18, f20, f17, f26, rne # perform operation
fnmsub.s f18, f20, f17, f26, rtz # perform operation
fnmsub.s f18, f20, f17, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f18, f20, f17, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f18, f20, f17, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f18, f20, f17, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f18, f20, f17, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f18, f20, f17, f26 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0x7fffff)
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f2, 0(x2) # load 0x7fffffff from memory into f2
la x2, scratch
li x3, 0x2c6bf1c0 # load x3 with value 0x2c6bf1c0
sw x3, 0(x2) # store 0x2c6bf1c0 in memory
flw f19, 0(x2) # load 0x2c6bf1c0 from memory into f19
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f5, 0(x2) # load 0x007fffff from memory into f5
fnmsub.s f21, f2, f19, f5, dyn # perform operation
fnmsub.s f21, f2, f19, f5, rdn # perform operation
fnmsub.s f21, f2, f19, f5, rmm # perform operation
fnmsub.s f21, f2, f19, f5, rne # perform operation
fnmsub.s f21, f2, f19, f5, rtz # perform operation
fnmsub.s f21, f2, f19, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f21, f2, f19, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f21, f2, f19, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f21, f2, f19, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f21, f2, f19, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f21, f2, f19, f5 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0x807fffff)
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f27, 0(x2) # load 0x7fffffff from memory into f27
la x2, scratch
li x3, 0x7f3e0076 # load x3 with value 0x7f3e0076
sw x3, 0(x2) # store 0x7f3e0076 in memory
flw f28, 0(x2) # load 0x7f3e0076 from memory into f28
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f8, 0(x2) # load 0x807fffff from memory into f8
fnmsub.s f13, f27, f28, f8, dyn # perform operation
fnmsub.s f13, f27, f28, f8, rdn # perform operation
fnmsub.s f13, f27, f28, f8, rmm # perform operation
fnmsub.s f13, f27, f28, f8, rne # perform operation
fnmsub.s f13, f27, f28, f8, rtz # perform operation
fnmsub.s f13, f27, f28, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f13, f27, f28, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f13, f27, f28, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f13, f27, f28, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f13, f27, f28, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f13, f27, f28, f8 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0x400000)
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f22, 0(x2) # load 0x7fffffff from memory into f22
la x2, scratch
li x3, 0x7cd20c97 # load x3 with value 0x7cd20c97
sw x3, 0(x2) # store 0x7cd20c97 in memory
flw f27, 0(x2) # load 0x7cd20c97 from memory into f27
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f7, 0(x2) # load 0x00400000 from memory into f7
fnmsub.s f2, f22, f27, f7, dyn # perform operation
fnmsub.s f2, f22, f27, f7, rdn # perform operation
fnmsub.s f2, f22, f27, f7, rmm # perform operation
fnmsub.s f2, f22, f27, f7, rne # perform operation
fnmsub.s f2, f22, f27, f7, rtz # perform operation
fnmsub.s f2, f22, f27, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f2, f22, f27, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f2, f22, f27, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f2, f22, f27, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f2, f22, f27, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f2, f22, f27, f7 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0x80400000)
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f17, 0(x2) # load 0x7fffffff from memory into f17
la x2, scratch
li x3, 0x44170f3a # load x3 with value 0x44170f3a
sw x3, 0(x2) # store 0x44170f3a in memory
flw f19, 0(x2) # load 0x44170f3a from memory into f19
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f9, 0(x2) # load 0x80400000 from memory into f9
fnmsub.s f14, f17, f19, f9, dyn # perform operation
fnmsub.s f14, f17, f19, f9, rdn # perform operation
fnmsub.s f14, f17, f19, f9, rmm # perform operation
fnmsub.s f14, f17, f19, f9, rne # perform operation
fnmsub.s f14, f17, f19, f9, rtz # perform operation
fnmsub.s f14, f17, f19, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f14, f17, f19, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f14, f17, f19, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f14, f17, f19, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f14, f17, f19, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f14, f17, f19, f9 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0x1)
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f25, 0(x2) # load 0x7fffffff from memory into f25
la x2, scratch
li x3, 0x3de266b2 # load x3 with value 0x3de266b2
sw x3, 0(x2) # store 0x3de266b2 in memory
flw f27, 0(x2) # load 0x3de266b2 from memory into f27
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f10, 0(x2) # load 0x00000001 from memory into f10
fnmsub.s f12, f25, f27, f10, dyn # perform operation
fnmsub.s f12, f25, f27, f10, rdn # perform operation
fnmsub.s f12, f25, f27, f10, rmm # perform operation
fnmsub.s f12, f25, f27, f10, rne # perform operation
fnmsub.s f12, f25, f27, f10, rtz # perform operation
fnmsub.s f12, f25, f27, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f12, f25, f27, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f12, f25, f27, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f12, f25, f27, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f12, f25, f27, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f12, f25, f27, f10 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0x80000001)
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f13, 0(x2) # load 0x7fffffff from memory into f13
la x2, scratch
li x3, 0xdcf2c6e2 # load x3 with value 0xdcf2c6e2
sw x3, 0(x2) # store 0xdcf2c6e2 in memory
flw f2, 0(x2) # load 0xdcf2c6e2 from memory into f2
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f5, 0(x2) # load 0x80000001 from memory into f5
fnmsub.s f29, f13, f2, f5, dyn # perform operation
fnmsub.s f29, f13, f2, f5, rdn # perform operation
fnmsub.s f29, f13, f2, f5, rmm # perform operation
fnmsub.s f29, f13, f2, f5, rne # perform operation
fnmsub.s f29, f13, f2, f5, rtz # perform operation
fnmsub.s f29, f13, f2, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f29, f13, f2, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f29, f13, f2, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f29, f13, f2, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f29, f13, f2, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f29, f13, f2, f5 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0x7f800000)
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f5, 0(x2) # load 0x7fffffff from memory into f5
la x2, scratch
li x3, 0x0e129560 # load x3 with value 0x0e129560
sw x3, 0(x2) # store 0x0e129560 in memory
flw f26, 0(x2) # load 0x0e129560 from memory into f26
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f25, 0(x2) # load 0x7f800000 from memory into f25
fnmsub.s f2, f5, f26, f25, dyn # perform operation
fnmsub.s f2, f5, f26, f25, rdn # perform operation
fnmsub.s f2, f5, f26, f25, rmm # perform operation
fnmsub.s f2, f5, f26, f25, rne # perform operation
fnmsub.s f2, f5, f26, f25, rtz # perform operation
fnmsub.s f2, f5, f26, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f2, f5, f26, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f2, f5, f26, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f2, f5, f26, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f2, f5, f26, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f2, f5, f26, f25 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0xff800000)
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f16, 0(x2) # load 0x7fffffff from memory into f16
la x2, scratch
li x3, 0xe2f8b09c # load x3 with value 0xe2f8b09c
sw x3, 0(x2) # store 0xe2f8b09c in memory
flw f24, 0(x2) # load 0xe2f8b09c from memory into f24
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f31, 0(x2) # load 0xff800000 from memory into f31
fnmsub.s f30, f16, f24, f31, dyn # perform operation
fnmsub.s f30, f16, f24, f31, rdn # perform operation
fnmsub.s f30, f16, f24, f31, rmm # perform operation
fnmsub.s f30, f16, f24, f31, rne # perform operation
fnmsub.s f30, f16, f24, f31, rtz # perform operation
fnmsub.s f30, f16, f24, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f30, f16, f24, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f30, f16, f24, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f30, f16, f24, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f30, f16, f24, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f30, f16, f24, f31 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0x7fc00000)
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f9, 0(x2) # load 0x7fffffff from memory into f9
la x2, scratch
li x3, 0x4879e09c # load x3 with value 0x4879e09c
sw x3, 0(x2) # store 0x4879e09c in memory
flw f7, 0(x2) # load 0x4879e09c from memory into f7
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f20, 0(x2) # load 0x7fc00000 from memory into f20
fnmsub.s f23, f9, f7, f20, dyn # perform operation
fnmsub.s f23, f9, f7, f20, rdn # perform operation
fnmsub.s f23, f9, f7, f20, rmm # perform operation
fnmsub.s f23, f9, f7, f20, rne # perform operation
fnmsub.s f23, f9, f7, f20, rtz # perform operation
fnmsub.s f23, f9, f7, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f23, f9, f7, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f23, f9, f7, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f23, f9, f7, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f23, f9, f7, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f23, f9, f7, f20 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0x7fffffff)
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f19, 0(x2) # load 0x7fffffff from memory into f19
la x2, scratch
li x3, 0xfcf04e92 # load x3 with value 0xfcf04e92
sw x3, 0(x2) # store 0xfcf04e92 in memory
flw f23, 0(x2) # load 0xfcf04e92 from memory into f23
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f18, 0(x2) # load 0x7fffffff from memory into f18
fnmsub.s f30, f19, f23, f18, dyn # perform operation
fnmsub.s f30, f19, f23, f18, rdn # perform operation
fnmsub.s f30, f19, f23, f18, rmm # perform operation
fnmsub.s f30, f19, f23, f18, rne # perform operation
fnmsub.s f30, f19, f23, f18, rtz # perform operation
fnmsub.s f30, f19, f23, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f30, f19, f23, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f30, f19, f23, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f30, f19, f23, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f30, f19, f23, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f30, f19, f23, f18 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0xffffffff)
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f13, 0(x2) # load 0x7fffffff from memory into f13
la x2, scratch
li x3, 0xa9280802 # load x3 with value 0xa9280802
sw x3, 0(x2) # store 0xa9280802 in memory
flw f27, 0(x2) # load 0xa9280802 from memory into f27
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f9, 0(x2) # load 0xffffffff from memory into f9
fnmsub.s f2, f13, f27, f9, dyn # perform operation
fnmsub.s f2, f13, f27, f9, rdn # perform operation
fnmsub.s f2, f13, f27, f9, rmm # perform operation
fnmsub.s f2, f13, f27, f9, rne # perform operation
fnmsub.s f2, f13, f27, f9, rtz # perform operation
fnmsub.s f2, f13, f27, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f2, f13, f27, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f2, f13, f27, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f2, f13, f27, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f2, f13, f27, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f2, f13, f27, f9 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0x7f800001)
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f21, 0(x2) # load 0x7fffffff from memory into f21
la x2, scratch
li x3, 0xf6eec73a # load x3 with value 0xf6eec73a
sw x3, 0(x2) # store 0xf6eec73a in memory
flw f30, 0(x2) # load 0xf6eec73a from memory into f30
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f25, 0(x2) # load 0x7f800001 from memory into f25
fnmsub.s f2, f21, f30, f25, dyn # perform operation
fnmsub.s f2, f21, f30, f25, rdn # perform operation
fnmsub.s f2, f21, f30, f25, rmm # perform operation
fnmsub.s f2, f21, f30, f25, rne # perform operation
fnmsub.s f2, f21, f30, f25, rtz # perform operation
fnmsub.s f2, f21, f30, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f2, f21, f30, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f2, f21, f30, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f2, f21, f30, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f2, f21, f30, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f2, f21, f30, f25 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0x7fbfffff)
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f19, 0(x2) # load 0x7fffffff from memory into f19
la x2, scratch
li x3, 0x909d443e # load x3 with value 0x909d443e
sw x3, 0(x2) # store 0x909d443e in memory
flw f9, 0(x2) # load 0x909d443e from memory into f9
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f31, 0(x2) # load 0x7fbfffff from memory into f31
fnmsub.s f24, f19, f9, f31, dyn # perform operation
fnmsub.s f24, f19, f9, f31, rdn # perform operation
fnmsub.s f24, f19, f9, f31, rmm # perform operation
fnmsub.s f24, f19, f9, f31, rne # perform operation
fnmsub.s f24, f19, f9, f31, rtz # perform operation
fnmsub.s f24, f19, f9, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f24, f19, f9, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f24, f19, f9, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f24, f19, f9, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f24, f19, f9, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f24, f19, f9, f31 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0xffbfffff)
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f3, 0(x2) # load 0x7fffffff from memory into f3
la x2, scratch
li x3, 0x956b1779 # load x3 with value 0x956b1779
sw x3, 0(x2) # store 0x956b1779 in memory
flw f31, 0(x2) # load 0x956b1779 from memory into f31
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f21, 0(x2) # load 0xffbfffff from memory into f21
fnmsub.s f13, f3, f31, f21, dyn # perform operation
fnmsub.s f13, f3, f31, f21, rdn # perform operation
fnmsub.s f13, f3, f31, f21, rmm # perform operation
fnmsub.s f13, f3, f31, f21, rne # perform operation
fnmsub.s f13, f3, f31, f21, rtz # perform operation
fnmsub.s f13, f3, f31, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f13, f3, f31, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f13, f3, f31, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f13, f3, f31, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f13, f3, f31, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f13, f3, f31, f21 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0x7ef8654f)
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f13, 0(x2) # load 0x7fffffff from memory into f13
la x2, scratch
li x3, 0x25f44143 # load x3 with value 0x25f44143
sw x3, 0(x2) # store 0x25f44143 in memory
flw f15, 0(x2) # load 0x25f44143 from memory into f15
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f7, 0(x2) # load 0x7ef8654f from memory into f7
fnmsub.s f28, f13, f15, f7, dyn # perform operation
fnmsub.s f28, f13, f15, f7, rdn # perform operation
fnmsub.s f28, f13, f15, f7, rmm # perform operation
fnmsub.s f28, f13, f15, f7, rne # perform operation
fnmsub.s f28, f13, f15, f7, rtz # perform operation
fnmsub.s f28, f13, f15, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f28, f13, f15, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f28, f13, f15, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f28, f13, f15, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f28, f13, f15, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f28, f13, f15, f7 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0x813d9ab0)
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f28, 0(x2) # load 0x7fffffff from memory into f28
la x2, scratch
li x3, 0x90755d2c # load x3 with value 0x90755d2c
sw x3, 0(x2) # store 0x90755d2c in memory
flw f23, 0(x2) # load 0x90755d2c from memory into f23
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f7, 0(x2) # load 0x813d9ab0 from memory into f7
fnmsub.s f15, f28, f23, f7, dyn # perform operation
fnmsub.s f15, f28, f23, f7, rdn # perform operation
fnmsub.s f15, f28, f23, f7, rmm # perform operation
fnmsub.s f15, f28, f23, f7, rne # perform operation
fnmsub.s f15, f28, f23, f7, rtz # perform operation
fnmsub.s f15, f28, f23, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f15, f28, f23, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f15, f28, f23, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f15, f28, f23, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f15, f28, f23, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f15, f28, f23, f7 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffffffff fs3 = 0x0)
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f19, 0(x2) # load 0xffffffff from memory into f19
la x2, scratch
li x3, 0x98970131 # load x3 with value 0x98970131
sw x3, 0(x2) # store 0x98970131 in memory
flw f24, 0(x2) # load 0x98970131 from memory into f24
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f26, 0(x2) # load 0x00000000 from memory into f26
fnmsub.s f5, f19, f24, f26, dyn # perform operation
fnmsub.s f5, f19, f24, f26, rdn # perform operation
fnmsub.s f5, f19, f24, f26, rmm # perform operation
fnmsub.s f5, f19, f24, f26, rne # perform operation
fnmsub.s f5, f19, f24, f26, rtz # perform operation
fnmsub.s f5, f19, f24, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f5, f19, f24, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f5, f19, f24, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f5, f19, f24, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f5, f19, f24, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f5, f19, f24, f26 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffffffff fs3 = 0x80000000)
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f29, 0(x2) # load 0xffffffff from memory into f29
la x2, scratch
li x3, 0x39d770cd # load x3 with value 0x39d770cd
sw x3, 0(x2) # store 0x39d770cd in memory
flw f21, 0(x2) # load 0x39d770cd from memory into f21
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f9, 0(x2) # load 0x80000000 from memory into f9
fnmsub.s f8, f29, f21, f9, dyn # perform operation
fnmsub.s f8, f29, f21, f9, rdn # perform operation
fnmsub.s f8, f29, f21, f9, rmm # perform operation
fnmsub.s f8, f29, f21, f9, rne # perform operation
fnmsub.s f8, f29, f21, f9, rtz # perform operation
fnmsub.s f8, f29, f21, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f8, f29, f21, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f8, f29, f21, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f8, f29, f21, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f8, f29, f21, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f8, f29, f21, f9 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffffffff fs3 = 0x3f800000)
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f9, 0(x2) # load 0xffffffff from memory into f9
la x2, scratch
li x3, 0x30a0a9ea # load x3 with value 0x30a0a9ea
sw x3, 0(x2) # store 0x30a0a9ea in memory
flw f28, 0(x2) # load 0x30a0a9ea from memory into f28
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f6, 0(x2) # load 0x3f800000 from memory into f6
fnmsub.s f14, f9, f28, f6, dyn # perform operation
fnmsub.s f14, f9, f28, f6, rdn # perform operation
fnmsub.s f14, f9, f28, f6, rmm # perform operation
fnmsub.s f14, f9, f28, f6, rne # perform operation
fnmsub.s f14, f9, f28, f6, rtz # perform operation
fnmsub.s f14, f9, f28, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f14, f9, f28, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f14, f9, f28, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f14, f9, f28, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f14, f9, f28, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f14, f9, f28, f6 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffffffff fs3 = 0xbf800000)
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f24, 0(x2) # load 0xffffffff from memory into f24
la x2, scratch
li x3, 0x88ddd4bd # load x3 with value 0x88ddd4bd
sw x3, 0(x2) # store 0x88ddd4bd in memory
flw f27, 0(x2) # load 0x88ddd4bd from memory into f27
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f10, 0(x2) # load 0xbf800000 from memory into f10
fnmsub.s f7, f24, f27, f10, dyn # perform operation
fnmsub.s f7, f24, f27, f10, rdn # perform operation
fnmsub.s f7, f24, f27, f10, rmm # perform operation
fnmsub.s f7, f24, f27, f10, rne # perform operation
fnmsub.s f7, f24, f27, f10, rtz # perform operation
fnmsub.s f7, f24, f27, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f7, f24, f27, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f7, f24, f27, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f7, f24, f27, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f7, f24, f27, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f7, f24, f27, f10 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffffffff fs3 = 0x3fc00000)
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f31, 0(x2) # load 0xffffffff from memory into f31
la x2, scratch
li x3, 0x653f9a40 # load x3 with value 0x653f9a40
sw x3, 0(x2) # store 0x653f9a40 in memory
flw f30, 0(x2) # load 0x653f9a40 from memory into f30
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f19, 0(x2) # load 0x3fc00000 from memory into f19
fnmsub.s f13, f31, f30, f19, dyn # perform operation
fnmsub.s f13, f31, f30, f19, rdn # perform operation
fnmsub.s f13, f31, f30, f19, rmm # perform operation
fnmsub.s f13, f31, f30, f19, rne # perform operation
fnmsub.s f13, f31, f30, f19, rtz # perform operation
fnmsub.s f13, f31, f30, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f13, f31, f30, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f13, f31, f30, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f13, f31, f30, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f13, f31, f30, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f13, f31, f30, f19 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffffffff fs3 = 0xbfc00000)
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f29, 0(x2) # load 0xffffffff from memory into f29
la x2, scratch
li x3, 0x1edf1ba0 # load x3 with value 0x1edf1ba0
sw x3, 0(x2) # store 0x1edf1ba0 in memory
flw f16, 0(x2) # load 0x1edf1ba0 from memory into f16
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f18, 0(x2) # load 0xbfc00000 from memory into f18
fnmsub.s f15, f29, f16, f18, dyn # perform operation
fnmsub.s f15, f29, f16, f18, rdn # perform operation
fnmsub.s f15, f29, f16, f18, rmm # perform operation
fnmsub.s f15, f29, f16, f18, rne # perform operation
fnmsub.s f15, f29, f16, f18, rtz # perform operation
fnmsub.s f15, f29, f16, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f15, f29, f16, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f15, f29, f16, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f15, f29, f16, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f15, f29, f16, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f15, f29, f16, f18 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffffffff fs3 = 0x40000000)
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f27, 0(x2) # load 0xffffffff from memory into f27
la x2, scratch
li x3, 0xfb7a176c # load x3 with value 0xfb7a176c
sw x3, 0(x2) # store 0xfb7a176c in memory
flw f9, 0(x2) # load 0xfb7a176c from memory into f9
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f26, 0(x2) # load 0x40000000 from memory into f26
fnmsub.s f15, f27, f9, f26, dyn # perform operation
fnmsub.s f15, f27, f9, f26, rdn # perform operation
fnmsub.s f15, f27, f9, f26, rmm # perform operation
fnmsub.s f15, f27, f9, f26, rne # perform operation
fnmsub.s f15, f27, f9, f26, rtz # perform operation
fnmsub.s f15, f27, f9, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f15, f27, f9, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f15, f27, f9, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f15, f27, f9, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f15, f27, f9, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f15, f27, f9, f26 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffffffff fs3 = 0xc0000000)
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f8, 0(x2) # load 0xffffffff from memory into f8
la x2, scratch
li x3, 0xf88e9058 # load x3 with value 0xf88e9058
sw x3, 0(x2) # store 0xf88e9058 in memory
flw f13, 0(x2) # load 0xf88e9058 from memory into f13
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f23, 0(x2) # load 0xc0000000 from memory into f23
fnmsub.s f30, f8, f13, f23, dyn # perform operation
fnmsub.s f30, f8, f13, f23, rdn # perform operation
fnmsub.s f30, f8, f13, f23, rmm # perform operation
fnmsub.s f30, f8, f13, f23, rne # perform operation
fnmsub.s f30, f8, f13, f23, rtz # perform operation
fnmsub.s f30, f8, f13, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f30, f8, f13, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f30, f8, f13, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f30, f8, f13, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f30, f8, f13, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f30, f8, f13, f23 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffffffff fs3 = 0x800000)
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f1, 0(x2) # load 0xffffffff from memory into f1
la x2, scratch
li x3, 0xce1eb817 # load x3 with value 0xce1eb817
sw x3, 0(x2) # store 0xce1eb817 in memory
flw f13, 0(x2) # load 0xce1eb817 from memory into f13
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f6, 0(x2) # load 0x00800000 from memory into f6
fnmsub.s f8, f1, f13, f6, dyn # perform operation
fnmsub.s f8, f1, f13, f6, rdn # perform operation
fnmsub.s f8, f1, f13, f6, rmm # perform operation
fnmsub.s f8, f1, f13, f6, rne # perform operation
fnmsub.s f8, f1, f13, f6, rtz # perform operation
fnmsub.s f8, f1, f13, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f8, f1, f13, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f8, f1, f13, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f8, f1, f13, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f8, f1, f13, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f8, f1, f13, f6 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffffffff fs3 = 0x80800000)
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f1, 0(x2) # load 0xffffffff from memory into f1
la x2, scratch
li x3, 0x07a13471 # load x3 with value 0x07a13471
sw x3, 0(x2) # store 0x07a13471 in memory
flw f28, 0(x2) # load 0x07a13471 from memory into f28
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f30, 0(x2) # load 0x80800000 from memory into f30
fnmsub.s f29, f1, f28, f30, dyn # perform operation
fnmsub.s f29, f1, f28, f30, rdn # perform operation
fnmsub.s f29, f1, f28, f30, rmm # perform operation
fnmsub.s f29, f1, f28, f30, rne # perform operation
fnmsub.s f29, f1, f28, f30, rtz # perform operation
fnmsub.s f29, f1, f28, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f29, f1, f28, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f29, f1, f28, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f29, f1, f28, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f29, f1, f28, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f29, f1, f28, f30 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffffffff fs3 = 0x7f7fffff)
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f25, 0(x2) # load 0xffffffff from memory into f25
la x2, scratch
li x3, 0x59364769 # load x3 with value 0x59364769
sw x3, 0(x2) # store 0x59364769 in memory
flw f29, 0(x2) # load 0x59364769 from memory into f29
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f10, 0(x2) # load 0x7f7fffff from memory into f10
fnmsub.s f22, f25, f29, f10, dyn # perform operation
fnmsub.s f22, f25, f29, f10, rdn # perform operation
fnmsub.s f22, f25, f29, f10, rmm # perform operation
fnmsub.s f22, f25, f29, f10, rne # perform operation
fnmsub.s f22, f25, f29, f10, rtz # perform operation
fnmsub.s f22, f25, f29, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f22, f25, f29, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f22, f25, f29, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f22, f25, f29, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f22, f25, f29, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f22, f25, f29, f10 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffffffff fs3 = 0xff7fffff)
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f16, 0(x2) # load 0xffffffff from memory into f16
la x2, scratch
li x3, 0x12d1f77d # load x3 with value 0x12d1f77d
sw x3, 0(x2) # store 0x12d1f77d in memory
flw f1, 0(x2) # load 0x12d1f77d from memory into f1
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f19, 0(x2) # load 0xff7fffff from memory into f19
fnmsub.s f3, f16, f1, f19, dyn # perform operation
fnmsub.s f3, f16, f1, f19, rdn # perform operation
fnmsub.s f3, f16, f1, f19, rmm # perform operation
fnmsub.s f3, f16, f1, f19, rne # perform operation
fnmsub.s f3, f16, f1, f19, rtz # perform operation
fnmsub.s f3, f16, f1, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f3, f16, f1, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f3, f16, f1, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f3, f16, f1, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f3, f16, f1, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f3, f16, f1, f19 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffffffff fs3 = 0x7fffff)
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f15, 0(x2) # load 0xffffffff from memory into f15
la x2, scratch
li x3, 0x7bad2a86 # load x3 with value 0x7bad2a86
sw x3, 0(x2) # store 0x7bad2a86 in memory
flw f26, 0(x2) # load 0x7bad2a86 from memory into f26
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f10, 0(x2) # load 0x007fffff from memory into f10
fnmsub.s f9, f15, f26, f10, dyn # perform operation
fnmsub.s f9, f15, f26, f10, rdn # perform operation
fnmsub.s f9, f15, f26, f10, rmm # perform operation
fnmsub.s f9, f15, f26, f10, rne # perform operation
fnmsub.s f9, f15, f26, f10, rtz # perform operation
fnmsub.s f9, f15, f26, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f9, f15, f26, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f9, f15, f26, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f9, f15, f26, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f9, f15, f26, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f9, f15, f26, f10 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffffffff fs3 = 0x807fffff)
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f25, 0(x2) # load 0xffffffff from memory into f25
la x2, scratch
li x3, 0x6eaa1b57 # load x3 with value 0x6eaa1b57
sw x3, 0(x2) # store 0x6eaa1b57 in memory
flw f30, 0(x2) # load 0x6eaa1b57 from memory into f30
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f6, 0(x2) # load 0x807fffff from memory into f6
fnmsub.s f14, f25, f30, f6, dyn # perform operation
fnmsub.s f14, f25, f30, f6, rdn # perform operation
fnmsub.s f14, f25, f30, f6, rmm # perform operation
fnmsub.s f14, f25, f30, f6, rne # perform operation
fnmsub.s f14, f25, f30, f6, rtz # perform operation
fnmsub.s f14, f25, f30, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f14, f25, f30, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f14, f25, f30, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f14, f25, f30, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f14, f25, f30, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f14, f25, f30, f6 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffffffff fs3 = 0x400000)
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f24, 0(x2) # load 0xffffffff from memory into f24
la x2, scratch
li x3, 0xed3a05d8 # load x3 with value 0xed3a05d8
sw x3, 0(x2) # store 0xed3a05d8 in memory
flw f11, 0(x2) # load 0xed3a05d8 from memory into f11
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f6, 0(x2) # load 0x00400000 from memory into f6
fnmsub.s f27, f24, f11, f6, dyn # perform operation
fnmsub.s f27, f24, f11, f6, rdn # perform operation
fnmsub.s f27, f24, f11, f6, rmm # perform operation
fnmsub.s f27, f24, f11, f6, rne # perform operation
fnmsub.s f27, f24, f11, f6, rtz # perform operation
fnmsub.s f27, f24, f11, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f27, f24, f11, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f27, f24, f11, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f27, f24, f11, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f27, f24, f11, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f27, f24, f11, f6 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffffffff fs3 = 0x80400000)
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f24, 0(x2) # load 0xffffffff from memory into f24
la x2, scratch
li x3, 0xa16371d1 # load x3 with value 0xa16371d1
sw x3, 0(x2) # store 0xa16371d1 in memory
flw f13, 0(x2) # load 0xa16371d1 from memory into f13
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f29, 0(x2) # load 0x80400000 from memory into f29
fnmsub.s f30, f24, f13, f29, dyn # perform operation
fnmsub.s f30, f24, f13, f29, rdn # perform operation
fnmsub.s f30, f24, f13, f29, rmm # perform operation
fnmsub.s f30, f24, f13, f29, rne # perform operation
fnmsub.s f30, f24, f13, f29, rtz # perform operation
fnmsub.s f30, f24, f13, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f30, f24, f13, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f30, f24, f13, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f30, f24, f13, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f30, f24, f13, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f30, f24, f13, f29 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffffffff fs3 = 0x1)
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f2, 0(x2) # load 0xffffffff from memory into f2
la x2, scratch
li x3, 0xd0c77d45 # load x3 with value 0xd0c77d45
sw x3, 0(x2) # store 0xd0c77d45 in memory
flw f27, 0(x2) # load 0xd0c77d45 from memory into f27
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f5, 0(x2) # load 0x00000001 from memory into f5
fnmsub.s f11, f2, f27, f5, dyn # perform operation
fnmsub.s f11, f2, f27, f5, rdn # perform operation
fnmsub.s f11, f2, f27, f5, rmm # perform operation
fnmsub.s f11, f2, f27, f5, rne # perform operation
fnmsub.s f11, f2, f27, f5, rtz # perform operation
fnmsub.s f11, f2, f27, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f11, f2, f27, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f11, f2, f27, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f11, f2, f27, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f11, f2, f27, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f11, f2, f27, f5 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffffffff fs3 = 0x80000001)
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f6, 0(x2) # load 0xffffffff from memory into f6
la x2, scratch
li x3, 0xdcba7a94 # load x3 with value 0xdcba7a94
sw x3, 0(x2) # store 0xdcba7a94 in memory
flw f18, 0(x2) # load 0xdcba7a94 from memory into f18
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f5, 0(x2) # load 0x80000001 from memory into f5
fnmsub.s f29, f6, f18, f5, dyn # perform operation
fnmsub.s f29, f6, f18, f5, rdn # perform operation
fnmsub.s f29, f6, f18, f5, rmm # perform operation
fnmsub.s f29, f6, f18, f5, rne # perform operation
fnmsub.s f29, f6, f18, f5, rtz # perform operation
fnmsub.s f29, f6, f18, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f29, f6, f18, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f29, f6, f18, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f29, f6, f18, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f29, f6, f18, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f29, f6, f18, f5 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffffffff fs3 = 0x7f800000)
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f25, 0(x2) # load 0xffffffff from memory into f25
la x2, scratch
li x3, 0x9255bd24 # load x3 with value 0x9255bd24
sw x3, 0(x2) # store 0x9255bd24 in memory
flw f5, 0(x2) # load 0x9255bd24 from memory into f5
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f28, 0(x2) # load 0x7f800000 from memory into f28
fnmsub.s f1, f25, f5, f28, dyn # perform operation
fnmsub.s f1, f25, f5, f28, rdn # perform operation
fnmsub.s f1, f25, f5, f28, rmm # perform operation
fnmsub.s f1, f25, f5, f28, rne # perform operation
fnmsub.s f1, f25, f5, f28, rtz # perform operation
fnmsub.s f1, f25, f5, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f1, f25, f5, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f1, f25, f5, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f1, f25, f5, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f1, f25, f5, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f1, f25, f5, f28 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffffffff fs3 = 0xff800000)
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f28, 0(x2) # load 0xffffffff from memory into f28
la x2, scratch
li x3, 0x106f9b48 # load x3 with value 0x106f9b48
sw x3, 0(x2) # store 0x106f9b48 in memory
flw f16, 0(x2) # load 0x106f9b48 from memory into f16
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f9, 0(x2) # load 0xff800000 from memory into f9
fnmsub.s f12, f28, f16, f9, dyn # perform operation
fnmsub.s f12, f28, f16, f9, rdn # perform operation
fnmsub.s f12, f28, f16, f9, rmm # perform operation
fnmsub.s f12, f28, f16, f9, rne # perform operation
fnmsub.s f12, f28, f16, f9, rtz # perform operation
fnmsub.s f12, f28, f16, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f12, f28, f16, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f12, f28, f16, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f12, f28, f16, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f12, f28, f16, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f12, f28, f16, f9 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffffffff fs3 = 0x7fc00000)
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f19, 0(x2) # load 0xffffffff from memory into f19
la x2, scratch
li x3, 0xd10d6884 # load x3 with value 0xd10d6884
sw x3, 0(x2) # store 0xd10d6884 in memory
flw f27, 0(x2) # load 0xd10d6884 from memory into f27
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f28, 0(x2) # load 0x7fc00000 from memory into f28
fnmsub.s f26, f19, f27, f28, dyn # perform operation
fnmsub.s f26, f19, f27, f28, rdn # perform operation
fnmsub.s f26, f19, f27, f28, rmm # perform operation
fnmsub.s f26, f19, f27, f28, rne # perform operation
fnmsub.s f26, f19, f27, f28, rtz # perform operation
fnmsub.s f26, f19, f27, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f26, f19, f27, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f26, f19, f27, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f26, f19, f27, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f26, f19, f27, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f26, f19, f27, f28 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffffffff fs3 = 0x7fffffff)
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f22, 0(x2) # load 0xffffffff from memory into f22
la x2, scratch
li x3, 0x4a62f097 # load x3 with value 0x4a62f097
sw x3, 0(x2) # store 0x4a62f097 in memory
flw f24, 0(x2) # load 0x4a62f097 from memory into f24
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f1, 0(x2) # load 0x7fffffff from memory into f1
fnmsub.s f3, f22, f24, f1, dyn # perform operation
fnmsub.s f3, f22, f24, f1, rdn # perform operation
fnmsub.s f3, f22, f24, f1, rmm # perform operation
fnmsub.s f3, f22, f24, f1, rne # perform operation
fnmsub.s f3, f22, f24, f1, rtz # perform operation
fnmsub.s f3, f22, f24, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f3, f22, f24, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f3, f22, f24, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f3, f22, f24, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f3, f22, f24, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f3, f22, f24, f1 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffffffff fs3 = 0xffffffff)
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f31, 0(x2) # load 0xffffffff from memory into f31
la x2, scratch
li x3, 0xeb4f6b8f # load x3 with value 0xeb4f6b8f
sw x3, 0(x2) # store 0xeb4f6b8f in memory
flw f7, 0(x2) # load 0xeb4f6b8f from memory into f7
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f24, 0(x2) # load 0xffffffff from memory into f24
fnmsub.s f5, f31, f7, f24, dyn # perform operation
fnmsub.s f5, f31, f7, f24, rdn # perform operation
fnmsub.s f5, f31, f7, f24, rmm # perform operation
fnmsub.s f5, f31, f7, f24, rne # perform operation
fnmsub.s f5, f31, f7, f24, rtz # perform operation
fnmsub.s f5, f31, f7, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f5, f31, f7, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f5, f31, f7, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f5, f31, f7, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f5, f31, f7, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f5, f31, f7, f24 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffffffff fs3 = 0x7f800001)
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f1, 0(x2) # load 0xffffffff from memory into f1
la x2, scratch
li x3, 0xae4a234a # load x3 with value 0xae4a234a
sw x3, 0(x2) # store 0xae4a234a in memory
flw f9, 0(x2) # load 0xae4a234a from memory into f9
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f7, 0(x2) # load 0x7f800001 from memory into f7
fnmsub.s f17, f1, f9, f7, dyn # perform operation
fnmsub.s f17, f1, f9, f7, rdn # perform operation
fnmsub.s f17, f1, f9, f7, rmm # perform operation
fnmsub.s f17, f1, f9, f7, rne # perform operation
fnmsub.s f17, f1, f9, f7, rtz # perform operation
fnmsub.s f17, f1, f9, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f17, f1, f9, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f17, f1, f9, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f17, f1, f9, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f17, f1, f9, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f17, f1, f9, f7 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffffffff fs3 = 0x7fbfffff)
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f2, 0(x2) # load 0xffffffff from memory into f2
la x2, scratch
li x3, 0x2f509262 # load x3 with value 0x2f509262
sw x3, 0(x2) # store 0x2f509262 in memory
flw f8, 0(x2) # load 0x2f509262 from memory into f8
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f24, 0(x2) # load 0x7fbfffff from memory into f24
fnmsub.s f3, f2, f8, f24, dyn # perform operation
fnmsub.s f3, f2, f8, f24, rdn # perform operation
fnmsub.s f3, f2, f8, f24, rmm # perform operation
fnmsub.s f3, f2, f8, f24, rne # perform operation
fnmsub.s f3, f2, f8, f24, rtz # perform operation
fnmsub.s f3, f2, f8, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f3, f2, f8, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f3, f2, f8, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f3, f2, f8, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f3, f2, f8, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f3, f2, f8, f24 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffffffff fs3 = 0xffbfffff)
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f20, 0(x2) # load 0xffffffff from memory into f20
la x2, scratch
li x3, 0x2f895b91 # load x3 with value 0x2f895b91
sw x3, 0(x2) # store 0x2f895b91 in memory
flw f10, 0(x2) # load 0x2f895b91 from memory into f10
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f27, 0(x2) # load 0xffbfffff from memory into f27
fnmsub.s f23, f20, f10, f27, dyn # perform operation
fnmsub.s f23, f20, f10, f27, rdn # perform operation
fnmsub.s f23, f20, f10, f27, rmm # perform operation
fnmsub.s f23, f20, f10, f27, rne # perform operation
fnmsub.s f23, f20, f10, f27, rtz # perform operation
fnmsub.s f23, f20, f10, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f23, f20, f10, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f23, f20, f10, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f23, f20, f10, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f23, f20, f10, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f23, f20, f10, f27 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffffffff fs3 = 0x7ef8654f)
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f16, 0(x2) # load 0xffffffff from memory into f16
la x2, scratch
li x3, 0xa07f08d9 # load x3 with value 0xa07f08d9
sw x3, 0(x2) # store 0xa07f08d9 in memory
flw f9, 0(x2) # load 0xa07f08d9 from memory into f9
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f20, 0(x2) # load 0x7ef8654f from memory into f20
fnmsub.s f18, f16, f9, f20, dyn # perform operation
fnmsub.s f18, f16, f9, f20, rdn # perform operation
fnmsub.s f18, f16, f9, f20, rmm # perform operation
fnmsub.s f18, f16, f9, f20, rne # perform operation
fnmsub.s f18, f16, f9, f20, rtz # perform operation
fnmsub.s f18, f16, f9, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f18, f16, f9, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f18, f16, f9, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f18, f16, f9, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f18, f16, f9, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f18, f16, f9, f20 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffffffff fs3 = 0x813d9ab0)
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f19, 0(x2) # load 0xffffffff from memory into f19
la x2, scratch
li x3, 0xfac34fe0 # load x3 with value 0xfac34fe0
sw x3, 0(x2) # store 0xfac34fe0 in memory
flw f20, 0(x2) # load 0xfac34fe0 from memory into f20
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f27, 0(x2) # load 0x813d9ab0 from memory into f27
fnmsub.s f16, f19, f20, f27, dyn # perform operation
fnmsub.s f16, f19, f20, f27, rdn # perform operation
fnmsub.s f16, f19, f20, f27, rmm # perform operation
fnmsub.s f16, f19, f20, f27, rne # perform operation
fnmsub.s f16, f19, f20, f27, rtz # perform operation
fnmsub.s f16, f19, f20, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f16, f19, f20, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f16, f19, f20, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f16, f19, f20, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f16, f19, f20, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f16, f19, f20, f27 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0x0)
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f7, 0(x2) # load 0x7f800001 from memory into f7
la x2, scratch
li x3, 0xca66419d # load x3 with value 0xca66419d
sw x3, 0(x2) # store 0xca66419d in memory
flw f11, 0(x2) # load 0xca66419d from memory into f11
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f28, 0(x2) # load 0x00000000 from memory into f28
fnmsub.s f27, f7, f11, f28, dyn # perform operation
fnmsub.s f27, f7, f11, f28, rdn # perform operation
fnmsub.s f27, f7, f11, f28, rmm # perform operation
fnmsub.s f27, f7, f11, f28, rne # perform operation
fnmsub.s f27, f7, f11, f28, rtz # perform operation
fnmsub.s f27, f7, f11, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f27, f7, f11, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f27, f7, f11, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f27, f7, f11, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f27, f7, f11, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f27, f7, f11, f28 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0x80000000)
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f21, 0(x2) # load 0x7f800001 from memory into f21
la x2, scratch
li x3, 0x6c9cafbd # load x3 with value 0x6c9cafbd
sw x3, 0(x2) # store 0x6c9cafbd in memory
flw f27, 0(x2) # load 0x6c9cafbd from memory into f27
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f17, 0(x2) # load 0x80000000 from memory into f17
fnmsub.s f25, f21, f27, f17, dyn # perform operation
fnmsub.s f25, f21, f27, f17, rdn # perform operation
fnmsub.s f25, f21, f27, f17, rmm # perform operation
fnmsub.s f25, f21, f27, f17, rne # perform operation
fnmsub.s f25, f21, f27, f17, rtz # perform operation
fnmsub.s f25, f21, f27, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f25, f21, f27, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f25, f21, f27, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f25, f21, f27, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f25, f21, f27, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f25, f21, f27, f17 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0x3f800000)
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f17, 0(x2) # load 0x7f800001 from memory into f17
la x2, scratch
li x3, 0xf666a47e # load x3 with value 0xf666a47e
sw x3, 0(x2) # store 0xf666a47e in memory
flw f22, 0(x2) # load 0xf666a47e from memory into f22
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f5, 0(x2) # load 0x3f800000 from memory into f5
fnmsub.s f11, f17, f22, f5, dyn # perform operation
fnmsub.s f11, f17, f22, f5, rdn # perform operation
fnmsub.s f11, f17, f22, f5, rmm # perform operation
fnmsub.s f11, f17, f22, f5, rne # perform operation
fnmsub.s f11, f17, f22, f5, rtz # perform operation
fnmsub.s f11, f17, f22, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f11, f17, f22, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f11, f17, f22, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f11, f17, f22, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f11, f17, f22, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f11, f17, f22, f5 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0xbf800000)
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f16, 0(x2) # load 0x7f800001 from memory into f16
la x2, scratch
li x3, 0xc6be1a22 # load x3 with value 0xc6be1a22
sw x3, 0(x2) # store 0xc6be1a22 in memory
flw f7, 0(x2) # load 0xc6be1a22 from memory into f7
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f18, 0(x2) # load 0xbf800000 from memory into f18
fnmsub.s f17, f16, f7, f18, dyn # perform operation
fnmsub.s f17, f16, f7, f18, rdn # perform operation
fnmsub.s f17, f16, f7, f18, rmm # perform operation
fnmsub.s f17, f16, f7, f18, rne # perform operation
fnmsub.s f17, f16, f7, f18, rtz # perform operation
fnmsub.s f17, f16, f7, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f17, f16, f7, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f17, f16, f7, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f17, f16, f7, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f17, f16, f7, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f17, f16, f7, f18 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0x3fc00000)
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f13, 0(x2) # load 0x7f800001 from memory into f13
la x2, scratch
li x3, 0x20e2e724 # load x3 with value 0x20e2e724
sw x3, 0(x2) # store 0x20e2e724 in memory
flw f17, 0(x2) # load 0x20e2e724 from memory into f17
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f30, 0(x2) # load 0x3fc00000 from memory into f30
fnmsub.s f9, f13, f17, f30, dyn # perform operation
fnmsub.s f9, f13, f17, f30, rdn # perform operation
fnmsub.s f9, f13, f17, f30, rmm # perform operation
fnmsub.s f9, f13, f17, f30, rne # perform operation
fnmsub.s f9, f13, f17, f30, rtz # perform operation
fnmsub.s f9, f13, f17, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f9, f13, f17, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f9, f13, f17, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f9, f13, f17, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f9, f13, f17, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f9, f13, f17, f30 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0xbfc00000)
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f9, 0(x2) # load 0x7f800001 from memory into f9
la x2, scratch
li x3, 0x2f7cf6eb # load x3 with value 0x2f7cf6eb
sw x3, 0(x2) # store 0x2f7cf6eb in memory
flw f31, 0(x2) # load 0x2f7cf6eb from memory into f31
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f16, 0(x2) # load 0xbfc00000 from memory into f16
fnmsub.s f5, f9, f31, f16, dyn # perform operation
fnmsub.s f5, f9, f31, f16, rdn # perform operation
fnmsub.s f5, f9, f31, f16, rmm # perform operation
fnmsub.s f5, f9, f31, f16, rne # perform operation
fnmsub.s f5, f9, f31, f16, rtz # perform operation
fnmsub.s f5, f9, f31, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f5, f9, f31, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f5, f9, f31, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f5, f9, f31, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f5, f9, f31, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f5, f9, f31, f16 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0x40000000)
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f30, 0(x2) # load 0x7f800001 from memory into f30
la x2, scratch
li x3, 0x26f335d3 # load x3 with value 0x26f335d3
sw x3, 0(x2) # store 0x26f335d3 in memory
flw f27, 0(x2) # load 0x26f335d3 from memory into f27
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f28, 0(x2) # load 0x40000000 from memory into f28
fnmsub.s f6, f30, f27, f28, dyn # perform operation
fnmsub.s f6, f30, f27, f28, rdn # perform operation
fnmsub.s f6, f30, f27, f28, rmm # perform operation
fnmsub.s f6, f30, f27, f28, rne # perform operation
fnmsub.s f6, f30, f27, f28, rtz # perform operation
fnmsub.s f6, f30, f27, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f6, f30, f27, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f6, f30, f27, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f6, f30, f27, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f6, f30, f27, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f6, f30, f27, f28 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0xc0000000)
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f20, 0(x2) # load 0x7f800001 from memory into f20
la x2, scratch
li x3, 0x230d2d49 # load x3 with value 0x230d2d49
sw x3, 0(x2) # store 0x230d2d49 in memory
flw f13, 0(x2) # load 0x230d2d49 from memory into f13
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f28, 0(x2) # load 0xc0000000 from memory into f28
fnmsub.s f29, f20, f13, f28, dyn # perform operation
fnmsub.s f29, f20, f13, f28, rdn # perform operation
fnmsub.s f29, f20, f13, f28, rmm # perform operation
fnmsub.s f29, f20, f13, f28, rne # perform operation
fnmsub.s f29, f20, f13, f28, rtz # perform operation
fnmsub.s f29, f20, f13, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f29, f20, f13, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f29, f20, f13, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f29, f20, f13, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f29, f20, f13, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f29, f20, f13, f28 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0x800000)
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f31, 0(x2) # load 0x7f800001 from memory into f31
la x2, scratch
li x3, 0x7c518e96 # load x3 with value 0x7c518e96
sw x3, 0(x2) # store 0x7c518e96 in memory
flw f22, 0(x2) # load 0x7c518e96 from memory into f22
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f14, 0(x2) # load 0x00800000 from memory into f14
fnmsub.s f18, f31, f22, f14, dyn # perform operation
fnmsub.s f18, f31, f22, f14, rdn # perform operation
fnmsub.s f18, f31, f22, f14, rmm # perform operation
fnmsub.s f18, f31, f22, f14, rne # perform operation
fnmsub.s f18, f31, f22, f14, rtz # perform operation
fnmsub.s f18, f31, f22, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f18, f31, f22, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f18, f31, f22, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f18, f31, f22, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f18, f31, f22, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f18, f31, f22, f14 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0x80800000)
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f21, 0(x2) # load 0x7f800001 from memory into f21
la x2, scratch
li x3, 0x606a6131 # load x3 with value 0x606a6131
sw x3, 0(x2) # store 0x606a6131 in memory
flw f22, 0(x2) # load 0x606a6131 from memory into f22
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f20, 0(x2) # load 0x80800000 from memory into f20
fnmsub.s f11, f21, f22, f20, dyn # perform operation
fnmsub.s f11, f21, f22, f20, rdn # perform operation
fnmsub.s f11, f21, f22, f20, rmm # perform operation
fnmsub.s f11, f21, f22, f20, rne # perform operation
fnmsub.s f11, f21, f22, f20, rtz # perform operation
fnmsub.s f11, f21, f22, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f11, f21, f22, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f11, f21, f22, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f11, f21, f22, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f11, f21, f22, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f11, f21, f22, f20 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0x7f7fffff)
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f25, 0(x2) # load 0x7f800001 from memory into f25
la x2, scratch
li x3, 0x334392c1 # load x3 with value 0x334392c1
sw x3, 0(x2) # store 0x334392c1 in memory
flw f18, 0(x2) # load 0x334392c1 from memory into f18
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f16, 0(x2) # load 0x7f7fffff from memory into f16
fnmsub.s f5, f25, f18, f16, dyn # perform operation
fnmsub.s f5, f25, f18, f16, rdn # perform operation
fnmsub.s f5, f25, f18, f16, rmm # perform operation
fnmsub.s f5, f25, f18, f16, rne # perform operation
fnmsub.s f5, f25, f18, f16, rtz # perform operation
fnmsub.s f5, f25, f18, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f5, f25, f18, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f5, f25, f18, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f5, f25, f18, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f5, f25, f18, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f5, f25, f18, f16 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0xff7fffff)
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f1, 0(x2) # load 0x7f800001 from memory into f1
la x2, scratch
li x3, 0x268b245f # load x3 with value 0x268b245f
sw x3, 0(x2) # store 0x268b245f in memory
flw f21, 0(x2) # load 0x268b245f from memory into f21
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f8, 0(x2) # load 0xff7fffff from memory into f8
fnmsub.s f20, f1, f21, f8, dyn # perform operation
fnmsub.s f20, f1, f21, f8, rdn # perform operation
fnmsub.s f20, f1, f21, f8, rmm # perform operation
fnmsub.s f20, f1, f21, f8, rne # perform operation
fnmsub.s f20, f1, f21, f8, rtz # perform operation
fnmsub.s f20, f1, f21, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f20, f1, f21, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f20, f1, f21, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f20, f1, f21, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f20, f1, f21, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f20, f1, f21, f8 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0x7fffff)
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f10, 0(x2) # load 0x7f800001 from memory into f10
la x2, scratch
li x3, 0xc61a3215 # load x3 with value 0xc61a3215
sw x3, 0(x2) # store 0xc61a3215 in memory
flw f1, 0(x2) # load 0xc61a3215 from memory into f1
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f7, 0(x2) # load 0x007fffff from memory into f7
fnmsub.s f20, f10, f1, f7, dyn # perform operation
fnmsub.s f20, f10, f1, f7, rdn # perform operation
fnmsub.s f20, f10, f1, f7, rmm # perform operation
fnmsub.s f20, f10, f1, f7, rne # perform operation
fnmsub.s f20, f10, f1, f7, rtz # perform operation
fnmsub.s f20, f10, f1, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f20, f10, f1, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f20, f10, f1, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f20, f10, f1, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f20, f10, f1, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f20, f10, f1, f7 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0x807fffff)
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f24, 0(x2) # load 0x7f800001 from memory into f24
la x2, scratch
li x3, 0x8849da14 # load x3 with value 0x8849da14
sw x3, 0(x2) # store 0x8849da14 in memory
flw f9, 0(x2) # load 0x8849da14 from memory into f9
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f25, 0(x2) # load 0x807fffff from memory into f25
fnmsub.s f20, f24, f9, f25, dyn # perform operation
fnmsub.s f20, f24, f9, f25, rdn # perform operation
fnmsub.s f20, f24, f9, f25, rmm # perform operation
fnmsub.s f20, f24, f9, f25, rne # perform operation
fnmsub.s f20, f24, f9, f25, rtz # perform operation
fnmsub.s f20, f24, f9, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f20, f24, f9, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f20, f24, f9, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f20, f24, f9, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f20, f24, f9, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f20, f24, f9, f25 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0x400000)
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f1, 0(x2) # load 0x7f800001 from memory into f1
la x2, scratch
li x3, 0x22ec74b2 # load x3 with value 0x22ec74b2
sw x3, 0(x2) # store 0x22ec74b2 in memory
flw f19, 0(x2) # load 0x22ec74b2 from memory into f19
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f14, 0(x2) # load 0x00400000 from memory into f14
fnmsub.s f25, f1, f19, f14, dyn # perform operation
fnmsub.s f25, f1, f19, f14, rdn # perform operation
fnmsub.s f25, f1, f19, f14, rmm # perform operation
fnmsub.s f25, f1, f19, f14, rne # perform operation
fnmsub.s f25, f1, f19, f14, rtz # perform operation
fnmsub.s f25, f1, f19, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f25, f1, f19, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f25, f1, f19, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f25, f1, f19, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f25, f1, f19, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f25, f1, f19, f14 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0x80400000)
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f25, 0(x2) # load 0x7f800001 from memory into f25
la x2, scratch
li x3, 0x9fc7d039 # load x3 with value 0x9fc7d039
sw x3, 0(x2) # store 0x9fc7d039 in memory
flw f15, 0(x2) # load 0x9fc7d039 from memory into f15
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f20, 0(x2) # load 0x80400000 from memory into f20
fnmsub.s f11, f25, f15, f20, dyn # perform operation
fnmsub.s f11, f25, f15, f20, rdn # perform operation
fnmsub.s f11, f25, f15, f20, rmm # perform operation
fnmsub.s f11, f25, f15, f20, rne # perform operation
fnmsub.s f11, f25, f15, f20, rtz # perform operation
fnmsub.s f11, f25, f15, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f11, f25, f15, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f11, f25, f15, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f11, f25, f15, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f11, f25, f15, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f11, f25, f15, f20 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0x1)
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f28, 0(x2) # load 0x7f800001 from memory into f28
la x2, scratch
li x3, 0xb0dc6997 # load x3 with value 0xb0dc6997
sw x3, 0(x2) # store 0xb0dc6997 in memory
flw f31, 0(x2) # load 0xb0dc6997 from memory into f31
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f9, 0(x2) # load 0x00000001 from memory into f9
fnmsub.s f21, f28, f31, f9, dyn # perform operation
fnmsub.s f21, f28, f31, f9, rdn # perform operation
fnmsub.s f21, f28, f31, f9, rmm # perform operation
fnmsub.s f21, f28, f31, f9, rne # perform operation
fnmsub.s f21, f28, f31, f9, rtz # perform operation
fnmsub.s f21, f28, f31, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f21, f28, f31, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f21, f28, f31, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f21, f28, f31, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f21, f28, f31, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f21, f28, f31, f9 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0x80000001)
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f20, 0(x2) # load 0x7f800001 from memory into f20
la x2, scratch
li x3, 0x1fb7ea46 # load x3 with value 0x1fb7ea46
sw x3, 0(x2) # store 0x1fb7ea46 in memory
flw f7, 0(x2) # load 0x1fb7ea46 from memory into f7
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f3, 0(x2) # load 0x80000001 from memory into f3
fnmsub.s f21, f20, f7, f3, dyn # perform operation
fnmsub.s f21, f20, f7, f3, rdn # perform operation
fnmsub.s f21, f20, f7, f3, rmm # perform operation
fnmsub.s f21, f20, f7, f3, rne # perform operation
fnmsub.s f21, f20, f7, f3, rtz # perform operation
fnmsub.s f21, f20, f7, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f21, f20, f7, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f21, f20, f7, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f21, f20, f7, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f21, f20, f7, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f21, f20, f7, f3 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0x7f800000)
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f8, 0(x2) # load 0x7f800001 from memory into f8
la x2, scratch
li x3, 0xe9abdf73 # load x3 with value 0xe9abdf73
sw x3, 0(x2) # store 0xe9abdf73 in memory
flw f13, 0(x2) # load 0xe9abdf73 from memory into f13
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f23, 0(x2) # load 0x7f800000 from memory into f23
fnmsub.s f30, f8, f13, f23, dyn # perform operation
fnmsub.s f30, f8, f13, f23, rdn # perform operation
fnmsub.s f30, f8, f13, f23, rmm # perform operation
fnmsub.s f30, f8, f13, f23, rne # perform operation
fnmsub.s f30, f8, f13, f23, rtz # perform operation
fnmsub.s f30, f8, f13, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f30, f8, f13, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f30, f8, f13, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f30, f8, f13, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f30, f8, f13, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f30, f8, f13, f23 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0xff800000)
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f2, 0(x2) # load 0x7f800001 from memory into f2
la x2, scratch
li x3, 0xadbaf2a7 # load x3 with value 0xadbaf2a7
sw x3, 0(x2) # store 0xadbaf2a7 in memory
flw f10, 0(x2) # load 0xadbaf2a7 from memory into f10
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f15, 0(x2) # load 0xff800000 from memory into f15
fnmsub.s f24, f2, f10, f15, dyn # perform operation
fnmsub.s f24, f2, f10, f15, rdn # perform operation
fnmsub.s f24, f2, f10, f15, rmm # perform operation
fnmsub.s f24, f2, f10, f15, rne # perform operation
fnmsub.s f24, f2, f10, f15, rtz # perform operation
fnmsub.s f24, f2, f10, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f24, f2, f10, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f24, f2, f10, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f24, f2, f10, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f24, f2, f10, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f24, f2, f10, f15 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0x7fc00000)
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f28, 0(x2) # load 0x7f800001 from memory into f28
la x2, scratch
li x3, 0xc4fb0b8d # load x3 with value 0xc4fb0b8d
sw x3, 0(x2) # store 0xc4fb0b8d in memory
flw f14, 0(x2) # load 0xc4fb0b8d from memory into f14
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f13, 0(x2) # load 0x7fc00000 from memory into f13
fnmsub.s f21, f28, f14, f13, dyn # perform operation
fnmsub.s f21, f28, f14, f13, rdn # perform operation
fnmsub.s f21, f28, f14, f13, rmm # perform operation
fnmsub.s f21, f28, f14, f13, rne # perform operation
fnmsub.s f21, f28, f14, f13, rtz # perform operation
fnmsub.s f21, f28, f14, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f21, f28, f14, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f21, f28, f14, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f21, f28, f14, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f21, f28, f14, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f21, f28, f14, f13 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0x7fffffff)
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f14, 0(x2) # load 0x7f800001 from memory into f14
la x2, scratch
li x3, 0xcee6e172 # load x3 with value 0xcee6e172
sw x3, 0(x2) # store 0xcee6e172 in memory
flw f27, 0(x2) # load 0xcee6e172 from memory into f27
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f29, 0(x2) # load 0x7fffffff from memory into f29
fnmsub.s f24, f14, f27, f29, dyn # perform operation
fnmsub.s f24, f14, f27, f29, rdn # perform operation
fnmsub.s f24, f14, f27, f29, rmm # perform operation
fnmsub.s f24, f14, f27, f29, rne # perform operation
fnmsub.s f24, f14, f27, f29, rtz # perform operation
fnmsub.s f24, f14, f27, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f24, f14, f27, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f24, f14, f27, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f24, f14, f27, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f24, f14, f27, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f24, f14, f27, f29 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0xffffffff)
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f22, 0(x2) # load 0x7f800001 from memory into f22
la x2, scratch
li x3, 0xe03421f1 # load x3 with value 0xe03421f1
sw x3, 0(x2) # store 0xe03421f1 in memory
flw f20, 0(x2) # load 0xe03421f1 from memory into f20
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f31, 0(x2) # load 0xffffffff from memory into f31
fnmsub.s f5, f22, f20, f31, dyn # perform operation
fnmsub.s f5, f22, f20, f31, rdn # perform operation
fnmsub.s f5, f22, f20, f31, rmm # perform operation
fnmsub.s f5, f22, f20, f31, rne # perform operation
fnmsub.s f5, f22, f20, f31, rtz # perform operation
fnmsub.s f5, f22, f20, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f5, f22, f20, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f5, f22, f20, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f5, f22, f20, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f5, f22, f20, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f5, f22, f20, f31 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0x7f800001)
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f15, 0(x2) # load 0x7f800001 from memory into f15
la x2, scratch
li x3, 0x0b7f0e6b # load x3 with value 0x0b7f0e6b
sw x3, 0(x2) # store 0x0b7f0e6b in memory
flw f26, 0(x2) # load 0x0b7f0e6b from memory into f26
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f23, 0(x2) # load 0x7f800001 from memory into f23
fnmsub.s f8, f15, f26, f23, dyn # perform operation
fnmsub.s f8, f15, f26, f23, rdn # perform operation
fnmsub.s f8, f15, f26, f23, rmm # perform operation
fnmsub.s f8, f15, f26, f23, rne # perform operation
fnmsub.s f8, f15, f26, f23, rtz # perform operation
fnmsub.s f8, f15, f26, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f8, f15, f26, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f8, f15, f26, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f8, f15, f26, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f8, f15, f26, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f8, f15, f26, f23 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0x7fbfffff)
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f27, 0(x2) # load 0x7f800001 from memory into f27
la x2, scratch
li x3, 0x61f623c9 # load x3 with value 0x61f623c9
sw x3, 0(x2) # store 0x61f623c9 in memory
flw f6, 0(x2) # load 0x61f623c9 from memory into f6
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f10, 0(x2) # load 0x7fbfffff from memory into f10
fnmsub.s f8, f27, f6, f10, dyn # perform operation
fnmsub.s f8, f27, f6, f10, rdn # perform operation
fnmsub.s f8, f27, f6, f10, rmm # perform operation
fnmsub.s f8, f27, f6, f10, rne # perform operation
fnmsub.s f8, f27, f6, f10, rtz # perform operation
fnmsub.s f8, f27, f6, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f8, f27, f6, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f8, f27, f6, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f8, f27, f6, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f8, f27, f6, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f8, f27, f6, f10 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0xffbfffff)
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f13, 0(x2) # load 0x7f800001 from memory into f13
la x2, scratch
li x3, 0x56c7c2bb # load x3 with value 0x56c7c2bb
sw x3, 0(x2) # store 0x56c7c2bb in memory
flw f29, 0(x2) # load 0x56c7c2bb from memory into f29
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f22, 0(x2) # load 0xffbfffff from memory into f22
fnmsub.s f28, f13, f29, f22, dyn # perform operation
fnmsub.s f28, f13, f29, f22, rdn # perform operation
fnmsub.s f28, f13, f29, f22, rmm # perform operation
fnmsub.s f28, f13, f29, f22, rne # perform operation
fnmsub.s f28, f13, f29, f22, rtz # perform operation
fnmsub.s f28, f13, f29, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f28, f13, f29, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f28, f13, f29, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f28, f13, f29, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f28, f13, f29, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f28, f13, f29, f22 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0x7ef8654f)
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f9, 0(x2) # load 0x7f800001 from memory into f9
la x2, scratch
li x3, 0xc269ce8f # load x3 with value 0xc269ce8f
sw x3, 0(x2) # store 0xc269ce8f in memory
flw f8, 0(x2) # load 0xc269ce8f from memory into f8
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f31, 0(x2) # load 0x7ef8654f from memory into f31
fnmsub.s f27, f9, f8, f31, dyn # perform operation
fnmsub.s f27, f9, f8, f31, rdn # perform operation
fnmsub.s f27, f9, f8, f31, rmm # perform operation
fnmsub.s f27, f9, f8, f31, rne # perform operation
fnmsub.s f27, f9, f8, f31, rtz # perform operation
fnmsub.s f27, f9, f8, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f27, f9, f8, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f27, f9, f8, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f27, f9, f8, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f27, f9, f8, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f27, f9, f8, f31 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0x813d9ab0)
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f9, 0(x2) # load 0x7f800001 from memory into f9
la x2, scratch
li x3, 0xbc7dfb6e # load x3 with value 0xbc7dfb6e
sw x3, 0(x2) # store 0xbc7dfb6e in memory
flw f22, 0(x2) # load 0xbc7dfb6e from memory into f22
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f19, 0(x2) # load 0x813d9ab0 from memory into f19
fnmsub.s f15, f9, f22, f19, dyn # perform operation
fnmsub.s f15, f9, f22, f19, rdn # perform operation
fnmsub.s f15, f9, f22, f19, rmm # perform operation
fnmsub.s f15, f9, f22, f19, rne # perform operation
fnmsub.s f15, f9, f22, f19, rtz # perform operation
fnmsub.s f15, f9, f22, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f15, f9, f22, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f15, f9, f22, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f15, f9, f22, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f15, f9, f22, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f15, f9, f22, f19 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0x0)
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f6, 0(x2) # load 0x7fbfffff from memory into f6
la x2, scratch
li x3, 0xd2addb06 # load x3 with value 0xd2addb06
sw x3, 0(x2) # store 0xd2addb06 in memory
flw f14, 0(x2) # load 0xd2addb06 from memory into f14
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f16, 0(x2) # load 0x00000000 from memory into f16
fnmsub.s f18, f6, f14, f16, dyn # perform operation
fnmsub.s f18, f6, f14, f16, rdn # perform operation
fnmsub.s f18, f6, f14, f16, rmm # perform operation
fnmsub.s f18, f6, f14, f16, rne # perform operation
fnmsub.s f18, f6, f14, f16, rtz # perform operation
fnmsub.s f18, f6, f14, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f18, f6, f14, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f18, f6, f14, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f18, f6, f14, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f18, f6, f14, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f18, f6, f14, f16 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0x80000000)
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f15, 0(x2) # load 0x7fbfffff from memory into f15
la x2, scratch
li x3, 0x2a2c7f3c # load x3 with value 0x2a2c7f3c
sw x3, 0(x2) # store 0x2a2c7f3c in memory
flw f3, 0(x2) # load 0x2a2c7f3c from memory into f3
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f18, 0(x2) # load 0x80000000 from memory into f18
fnmsub.s f9, f15, f3, f18, dyn # perform operation
fnmsub.s f9, f15, f3, f18, rdn # perform operation
fnmsub.s f9, f15, f3, f18, rmm # perform operation
fnmsub.s f9, f15, f3, f18, rne # perform operation
fnmsub.s f9, f15, f3, f18, rtz # perform operation
fnmsub.s f9, f15, f3, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f9, f15, f3, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f9, f15, f3, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f9, f15, f3, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f9, f15, f3, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f9, f15, f3, f18 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0x3f800000)
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f21, 0(x2) # load 0x7fbfffff from memory into f21
la x2, scratch
li x3, 0xd937ea12 # load x3 with value 0xd937ea12
sw x3, 0(x2) # store 0xd937ea12 in memory
flw f18, 0(x2) # load 0xd937ea12 from memory into f18
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f7, 0(x2) # load 0x3f800000 from memory into f7
fnmsub.s f11, f21, f18, f7, dyn # perform operation
fnmsub.s f11, f21, f18, f7, rdn # perform operation
fnmsub.s f11, f21, f18, f7, rmm # perform operation
fnmsub.s f11, f21, f18, f7, rne # perform operation
fnmsub.s f11, f21, f18, f7, rtz # perform operation
fnmsub.s f11, f21, f18, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f11, f21, f18, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f11, f21, f18, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f11, f21, f18, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f11, f21, f18, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f11, f21, f18, f7 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0xbf800000)
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f5, 0(x2) # load 0x7fbfffff from memory into f5
la x2, scratch
li x3, 0xf61fd69c # load x3 with value 0xf61fd69c
sw x3, 0(x2) # store 0xf61fd69c in memory
flw f15, 0(x2) # load 0xf61fd69c from memory into f15
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f22, 0(x2) # load 0xbf800000 from memory into f22
fnmsub.s f27, f5, f15, f22, dyn # perform operation
fnmsub.s f27, f5, f15, f22, rdn # perform operation
fnmsub.s f27, f5, f15, f22, rmm # perform operation
fnmsub.s f27, f5, f15, f22, rne # perform operation
fnmsub.s f27, f5, f15, f22, rtz # perform operation
fnmsub.s f27, f5, f15, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f27, f5, f15, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f27, f5, f15, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f27, f5, f15, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f27, f5, f15, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f27, f5, f15, f22 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0x3fc00000)
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f9, 0(x2) # load 0x7fbfffff from memory into f9
la x2, scratch
li x3, 0x8d5d4cbd # load x3 with value 0x8d5d4cbd
sw x3, 0(x2) # store 0x8d5d4cbd in memory
flw f30, 0(x2) # load 0x8d5d4cbd from memory into f30
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f25, 0(x2) # load 0x3fc00000 from memory into f25
fnmsub.s f11, f9, f30, f25, dyn # perform operation
fnmsub.s f11, f9, f30, f25, rdn # perform operation
fnmsub.s f11, f9, f30, f25, rmm # perform operation
fnmsub.s f11, f9, f30, f25, rne # perform operation
fnmsub.s f11, f9, f30, f25, rtz # perform operation
fnmsub.s f11, f9, f30, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f11, f9, f30, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f11, f9, f30, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f11, f9, f30, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f11, f9, f30, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f11, f9, f30, f25 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0xbfc00000)
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f23, 0(x2) # load 0x7fbfffff from memory into f23
la x2, scratch
li x3, 0xf90533ca # load x3 with value 0xf90533ca
sw x3, 0(x2) # store 0xf90533ca in memory
flw f28, 0(x2) # load 0xf90533ca from memory into f28
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f1, 0(x2) # load 0xbfc00000 from memory into f1
fnmsub.s f29, f23, f28, f1, dyn # perform operation
fnmsub.s f29, f23, f28, f1, rdn # perform operation
fnmsub.s f29, f23, f28, f1, rmm # perform operation
fnmsub.s f29, f23, f28, f1, rne # perform operation
fnmsub.s f29, f23, f28, f1, rtz # perform operation
fnmsub.s f29, f23, f28, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f29, f23, f28, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f29, f23, f28, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f29, f23, f28, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f29, f23, f28, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f29, f23, f28, f1 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0x40000000)
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f7, 0(x2) # load 0x7fbfffff from memory into f7
la x2, scratch
li x3, 0xba775ae9 # load x3 with value 0xba775ae9
sw x3, 0(x2) # store 0xba775ae9 in memory
flw f30, 0(x2) # load 0xba775ae9 from memory into f30
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f31, 0(x2) # load 0x40000000 from memory into f31
fnmsub.s f12, f7, f30, f31, dyn # perform operation
fnmsub.s f12, f7, f30, f31, rdn # perform operation
fnmsub.s f12, f7, f30, f31, rmm # perform operation
fnmsub.s f12, f7, f30, f31, rne # perform operation
fnmsub.s f12, f7, f30, f31, rtz # perform operation
fnmsub.s f12, f7, f30, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f12, f7, f30, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f12, f7, f30, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f12, f7, f30, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f12, f7, f30, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f12, f7, f30, f31 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0xc0000000)
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f1, 0(x2) # load 0x7fbfffff from memory into f1
la x2, scratch
li x3, 0x9ca48921 # load x3 with value 0x9ca48921
sw x3, 0(x2) # store 0x9ca48921 in memory
flw f15, 0(x2) # load 0x9ca48921 from memory into f15
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f21, 0(x2) # load 0xc0000000 from memory into f21
fnmsub.s f6, f1, f15, f21, dyn # perform operation
fnmsub.s f6, f1, f15, f21, rdn # perform operation
fnmsub.s f6, f1, f15, f21, rmm # perform operation
fnmsub.s f6, f1, f15, f21, rne # perform operation
fnmsub.s f6, f1, f15, f21, rtz # perform operation
fnmsub.s f6, f1, f15, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f6, f1, f15, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f6, f1, f15, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f6, f1, f15, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f6, f1, f15, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f6, f1, f15, f21 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0x800000)
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f10, 0(x2) # load 0x7fbfffff from memory into f10
la x2, scratch
li x3, 0x8155d650 # load x3 with value 0x8155d650
sw x3, 0(x2) # store 0x8155d650 in memory
flw f29, 0(x2) # load 0x8155d650 from memory into f29
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f28, 0(x2) # load 0x00800000 from memory into f28
fnmsub.s f11, f10, f29, f28, dyn # perform operation
fnmsub.s f11, f10, f29, f28, rdn # perform operation
fnmsub.s f11, f10, f29, f28, rmm # perform operation
fnmsub.s f11, f10, f29, f28, rne # perform operation
fnmsub.s f11, f10, f29, f28, rtz # perform operation
fnmsub.s f11, f10, f29, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f11, f10, f29, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f11, f10, f29, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f11, f10, f29, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f11, f10, f29, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f11, f10, f29, f28 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0x80800000)
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f19, 0(x2) # load 0x7fbfffff from memory into f19
la x2, scratch
li x3, 0xa6390dd3 # load x3 with value 0xa6390dd3
sw x3, 0(x2) # store 0xa6390dd3 in memory
flw f13, 0(x2) # load 0xa6390dd3 from memory into f13
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f8, 0(x2) # load 0x80800000 from memory into f8
fnmsub.s f30, f19, f13, f8, dyn # perform operation
fnmsub.s f30, f19, f13, f8, rdn # perform operation
fnmsub.s f30, f19, f13, f8, rmm # perform operation
fnmsub.s f30, f19, f13, f8, rne # perform operation
fnmsub.s f30, f19, f13, f8, rtz # perform operation
fnmsub.s f30, f19, f13, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f30, f19, f13, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f30, f19, f13, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f30, f19, f13, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f30, f19, f13, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f30, f19, f13, f8 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0x7f7fffff)
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f8, 0(x2) # load 0x7fbfffff from memory into f8
la x2, scratch
li x3, 0x34123c0f # load x3 with value 0x34123c0f
sw x3, 0(x2) # store 0x34123c0f in memory
flw f10, 0(x2) # load 0x34123c0f from memory into f10
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f3, 0(x2) # load 0x7f7fffff from memory into f3
fnmsub.s f18, f8, f10, f3, dyn # perform operation
fnmsub.s f18, f8, f10, f3, rdn # perform operation
fnmsub.s f18, f8, f10, f3, rmm # perform operation
fnmsub.s f18, f8, f10, f3, rne # perform operation
fnmsub.s f18, f8, f10, f3, rtz # perform operation
fnmsub.s f18, f8, f10, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f18, f8, f10, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f18, f8, f10, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f18, f8, f10, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f18, f8, f10, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f18, f8, f10, f3 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0xff7fffff)
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f19, 0(x2) # load 0x7fbfffff from memory into f19
la x2, scratch
li x3, 0x205c0a7a # load x3 with value 0x205c0a7a
sw x3, 0(x2) # store 0x205c0a7a in memory
flw f10, 0(x2) # load 0x205c0a7a from memory into f10
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f31, 0(x2) # load 0xff7fffff from memory into f31
fnmsub.s f17, f19, f10, f31, dyn # perform operation
fnmsub.s f17, f19, f10, f31, rdn # perform operation
fnmsub.s f17, f19, f10, f31, rmm # perform operation
fnmsub.s f17, f19, f10, f31, rne # perform operation
fnmsub.s f17, f19, f10, f31, rtz # perform operation
fnmsub.s f17, f19, f10, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f17, f19, f10, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f17, f19, f10, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f17, f19, f10, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f17, f19, f10, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f17, f19, f10, f31 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0x7fffff)
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f31, 0(x2) # load 0x7fbfffff from memory into f31
la x2, scratch
li x3, 0x0c6d561b # load x3 with value 0x0c6d561b
sw x3, 0(x2) # store 0x0c6d561b in memory
flw f2, 0(x2) # load 0x0c6d561b from memory into f2
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f22, 0(x2) # load 0x007fffff from memory into f22
fnmsub.s f13, f31, f2, f22, dyn # perform operation
fnmsub.s f13, f31, f2, f22, rdn # perform operation
fnmsub.s f13, f31, f2, f22, rmm # perform operation
fnmsub.s f13, f31, f2, f22, rne # perform operation
fnmsub.s f13, f31, f2, f22, rtz # perform operation
fnmsub.s f13, f31, f2, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f13, f31, f2, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f13, f31, f2, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f13, f31, f2, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f13, f31, f2, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f13, f31, f2, f22 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0x807fffff)
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f7, 0(x2) # load 0x7fbfffff from memory into f7
la x2, scratch
li x3, 0x1909b9de # load x3 with value 0x1909b9de
sw x3, 0(x2) # store 0x1909b9de in memory
flw f17, 0(x2) # load 0x1909b9de from memory into f17
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f24, 0(x2) # load 0x807fffff from memory into f24
fnmsub.s f22, f7, f17, f24, dyn # perform operation
fnmsub.s f22, f7, f17, f24, rdn # perform operation
fnmsub.s f22, f7, f17, f24, rmm # perform operation
fnmsub.s f22, f7, f17, f24, rne # perform operation
fnmsub.s f22, f7, f17, f24, rtz # perform operation
fnmsub.s f22, f7, f17, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f22, f7, f17, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f22, f7, f17, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f22, f7, f17, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f22, f7, f17, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f22, f7, f17, f24 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0x400000)
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f3, 0(x2) # load 0x7fbfffff from memory into f3
la x2, scratch
li x3, 0x41fdf934 # load x3 with value 0x41fdf934
sw x3, 0(x2) # store 0x41fdf934 in memory
flw f2, 0(x2) # load 0x41fdf934 from memory into f2
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f31, 0(x2) # load 0x00400000 from memory into f31
fnmsub.s f9, f3, f2, f31, dyn # perform operation
fnmsub.s f9, f3, f2, f31, rdn # perform operation
fnmsub.s f9, f3, f2, f31, rmm # perform operation
fnmsub.s f9, f3, f2, f31, rne # perform operation
fnmsub.s f9, f3, f2, f31, rtz # perform operation
fnmsub.s f9, f3, f2, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f9, f3, f2, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f9, f3, f2, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f9, f3, f2, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f9, f3, f2, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f9, f3, f2, f31 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0x80400000)
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f6, 0(x2) # load 0x7fbfffff from memory into f6
la x2, scratch
li x3, 0xf4e5dfb6 # load x3 with value 0xf4e5dfb6
sw x3, 0(x2) # store 0xf4e5dfb6 in memory
flw f12, 0(x2) # load 0xf4e5dfb6 from memory into f12
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f27, 0(x2) # load 0x80400000 from memory into f27
fnmsub.s f18, f6, f12, f27, dyn # perform operation
fnmsub.s f18, f6, f12, f27, rdn # perform operation
fnmsub.s f18, f6, f12, f27, rmm # perform operation
fnmsub.s f18, f6, f12, f27, rne # perform operation
fnmsub.s f18, f6, f12, f27, rtz # perform operation
fnmsub.s f18, f6, f12, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f18, f6, f12, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f18, f6, f12, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f18, f6, f12, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f18, f6, f12, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f18, f6, f12, f27 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0x1)
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f18, 0(x2) # load 0x7fbfffff from memory into f18
la x2, scratch
li x3, 0xa5641d74 # load x3 with value 0xa5641d74
sw x3, 0(x2) # store 0xa5641d74 in memory
flw f21, 0(x2) # load 0xa5641d74 from memory into f21
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f23, 0(x2) # load 0x00000001 from memory into f23
fnmsub.s f20, f18, f21, f23, dyn # perform operation
fnmsub.s f20, f18, f21, f23, rdn # perform operation
fnmsub.s f20, f18, f21, f23, rmm # perform operation
fnmsub.s f20, f18, f21, f23, rne # perform operation
fnmsub.s f20, f18, f21, f23, rtz # perform operation
fnmsub.s f20, f18, f21, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f20, f18, f21, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f20, f18, f21, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f20, f18, f21, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f20, f18, f21, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f20, f18, f21, f23 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0x80000001)
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f26, 0(x2) # load 0x7fbfffff from memory into f26
la x2, scratch
li x3, 0xec26d078 # load x3 with value 0xec26d078
sw x3, 0(x2) # store 0xec26d078 in memory
flw f27, 0(x2) # load 0xec26d078 from memory into f27
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f2, 0(x2) # load 0x80000001 from memory into f2
fnmsub.s f14, f26, f27, f2, dyn # perform operation
fnmsub.s f14, f26, f27, f2, rdn # perform operation
fnmsub.s f14, f26, f27, f2, rmm # perform operation
fnmsub.s f14, f26, f27, f2, rne # perform operation
fnmsub.s f14, f26, f27, f2, rtz # perform operation
fnmsub.s f14, f26, f27, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f14, f26, f27, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f14, f26, f27, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f14, f26, f27, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f14, f26, f27, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f14, f26, f27, f2 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0x7f800000)
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f9, 0(x2) # load 0x7fbfffff from memory into f9
la x2, scratch
li x3, 0xed4c55a3 # load x3 with value 0xed4c55a3
sw x3, 0(x2) # store 0xed4c55a3 in memory
flw f27, 0(x2) # load 0xed4c55a3 from memory into f27
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f3, 0(x2) # load 0x7f800000 from memory into f3
fnmsub.s f2, f9, f27, f3, dyn # perform operation
fnmsub.s f2, f9, f27, f3, rdn # perform operation
fnmsub.s f2, f9, f27, f3, rmm # perform operation
fnmsub.s f2, f9, f27, f3, rne # perform operation
fnmsub.s f2, f9, f27, f3, rtz # perform operation
fnmsub.s f2, f9, f27, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f2, f9, f27, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f2, f9, f27, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f2, f9, f27, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f2, f9, f27, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f2, f9, f27, f3 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0xff800000)
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f7, 0(x2) # load 0x7fbfffff from memory into f7
la x2, scratch
li x3, 0xe95926ac # load x3 with value 0xe95926ac
sw x3, 0(x2) # store 0xe95926ac in memory
flw f13, 0(x2) # load 0xe95926ac from memory into f13
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f30, 0(x2) # load 0xff800000 from memory into f30
fnmsub.s f26, f7, f13, f30, dyn # perform operation
fnmsub.s f26, f7, f13, f30, rdn # perform operation
fnmsub.s f26, f7, f13, f30, rmm # perform operation
fnmsub.s f26, f7, f13, f30, rne # perform operation
fnmsub.s f26, f7, f13, f30, rtz # perform operation
fnmsub.s f26, f7, f13, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f26, f7, f13, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f26, f7, f13, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f26, f7, f13, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f26, f7, f13, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f26, f7, f13, f30 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0x7fc00000)
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f26, 0(x2) # load 0x7fbfffff from memory into f26
la x2, scratch
li x3, 0x1f462dd4 # load x3 with value 0x1f462dd4
sw x3, 0(x2) # store 0x1f462dd4 in memory
flw f11, 0(x2) # load 0x1f462dd4 from memory into f11
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f12, 0(x2) # load 0x7fc00000 from memory into f12
fnmsub.s f20, f26, f11, f12, dyn # perform operation
fnmsub.s f20, f26, f11, f12, rdn # perform operation
fnmsub.s f20, f26, f11, f12, rmm # perform operation
fnmsub.s f20, f26, f11, f12, rne # perform operation
fnmsub.s f20, f26, f11, f12, rtz # perform operation
fnmsub.s f20, f26, f11, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f20, f26, f11, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f20, f26, f11, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f20, f26, f11, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f20, f26, f11, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f20, f26, f11, f12 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0x7fffffff)
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f16, 0(x2) # load 0x7fbfffff from memory into f16
la x2, scratch
li x3, 0x3e621a53 # load x3 with value 0x3e621a53
sw x3, 0(x2) # store 0x3e621a53 in memory
flw f31, 0(x2) # load 0x3e621a53 from memory into f31
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f11, 0(x2) # load 0x7fffffff from memory into f11
fnmsub.s f18, f16, f31, f11, dyn # perform operation
fnmsub.s f18, f16, f31, f11, rdn # perform operation
fnmsub.s f18, f16, f31, f11, rmm # perform operation
fnmsub.s f18, f16, f31, f11, rne # perform operation
fnmsub.s f18, f16, f31, f11, rtz # perform operation
fnmsub.s f18, f16, f31, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f18, f16, f31, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f18, f16, f31, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f18, f16, f31, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f18, f16, f31, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f18, f16, f31, f11 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0xffffffff)
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f20, 0(x2) # load 0x7fbfffff from memory into f20
la x2, scratch
li x3, 0x05d5c17c # load x3 with value 0x05d5c17c
sw x3, 0(x2) # store 0x05d5c17c in memory
flw f18, 0(x2) # load 0x05d5c17c from memory into f18
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f21, 0(x2) # load 0xffffffff from memory into f21
fnmsub.s f19, f20, f18, f21, dyn # perform operation
fnmsub.s f19, f20, f18, f21, rdn # perform operation
fnmsub.s f19, f20, f18, f21, rmm # perform operation
fnmsub.s f19, f20, f18, f21, rne # perform operation
fnmsub.s f19, f20, f18, f21, rtz # perform operation
fnmsub.s f19, f20, f18, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f19, f20, f18, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f19, f20, f18, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f19, f20, f18, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f19, f20, f18, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f19, f20, f18, f21 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0x7f800001)
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f30, 0(x2) # load 0x7fbfffff from memory into f30
la x2, scratch
li x3, 0x620b4165 # load x3 with value 0x620b4165
sw x3, 0(x2) # store 0x620b4165 in memory
flw f22, 0(x2) # load 0x620b4165 from memory into f22
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f21, 0(x2) # load 0x7f800001 from memory into f21
fnmsub.s f29, f30, f22, f21, dyn # perform operation
fnmsub.s f29, f30, f22, f21, rdn # perform operation
fnmsub.s f29, f30, f22, f21, rmm # perform operation
fnmsub.s f29, f30, f22, f21, rne # perform operation
fnmsub.s f29, f30, f22, f21, rtz # perform operation
fnmsub.s f29, f30, f22, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f29, f30, f22, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f29, f30, f22, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f29, f30, f22, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f29, f30, f22, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f29, f30, f22, f21 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0x7fbfffff)
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f14, 0(x2) # load 0x7fbfffff from memory into f14
la x2, scratch
li x3, 0x2f421393 # load x3 with value 0x2f421393
sw x3, 0(x2) # store 0x2f421393 in memory
flw f2, 0(x2) # load 0x2f421393 from memory into f2
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f19, 0(x2) # load 0x7fbfffff from memory into f19
fnmsub.s f9, f14, f2, f19, dyn # perform operation
fnmsub.s f9, f14, f2, f19, rdn # perform operation
fnmsub.s f9, f14, f2, f19, rmm # perform operation
fnmsub.s f9, f14, f2, f19, rne # perform operation
fnmsub.s f9, f14, f2, f19, rtz # perform operation
fnmsub.s f9, f14, f2, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f9, f14, f2, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f9, f14, f2, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f9, f14, f2, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f9, f14, f2, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f9, f14, f2, f19 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0xffbfffff)
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f13, 0(x2) # load 0x7fbfffff from memory into f13
la x2, scratch
li x3, 0x91f72e3f # load x3 with value 0x91f72e3f
sw x3, 0(x2) # store 0x91f72e3f in memory
flw f29, 0(x2) # load 0x91f72e3f from memory into f29
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f24, 0(x2) # load 0xffbfffff from memory into f24
fnmsub.s f21, f13, f29, f24, dyn # perform operation
fnmsub.s f21, f13, f29, f24, rdn # perform operation
fnmsub.s f21, f13, f29, f24, rmm # perform operation
fnmsub.s f21, f13, f29, f24, rne # perform operation
fnmsub.s f21, f13, f29, f24, rtz # perform operation
fnmsub.s f21, f13, f29, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f21, f13, f29, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f21, f13, f29, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f21, f13, f29, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f21, f13, f29, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f21, f13, f29, f24 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0x7ef8654f)
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f12, 0(x2) # load 0x7fbfffff from memory into f12
la x2, scratch
li x3, 0x0d67832e # load x3 with value 0x0d67832e
sw x3, 0(x2) # store 0x0d67832e in memory
flw f9, 0(x2) # load 0x0d67832e from memory into f9
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f27, 0(x2) # load 0x7ef8654f from memory into f27
fnmsub.s f5, f12, f9, f27, dyn # perform operation
fnmsub.s f5, f12, f9, f27, rdn # perform operation
fnmsub.s f5, f12, f9, f27, rmm # perform operation
fnmsub.s f5, f12, f9, f27, rne # perform operation
fnmsub.s f5, f12, f9, f27, rtz # perform operation
fnmsub.s f5, f12, f9, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f5, f12, f9, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f5, f12, f9, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f5, f12, f9, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f5, f12, f9, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f5, f12, f9, f27 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0x813d9ab0)
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f31, 0(x2) # load 0x7fbfffff from memory into f31
la x2, scratch
li x3, 0x81c6790e # load x3 with value 0x81c6790e
sw x3, 0(x2) # store 0x81c6790e in memory
flw f28, 0(x2) # load 0x81c6790e from memory into f28
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f11, 0(x2) # load 0x813d9ab0 from memory into f11
fnmsub.s f1, f31, f28, f11, dyn # perform operation
fnmsub.s f1, f31, f28, f11, rdn # perform operation
fnmsub.s f1, f31, f28, f11, rmm # perform operation
fnmsub.s f1, f31, f28, f11, rne # perform operation
fnmsub.s f1, f31, f28, f11, rtz # perform operation
fnmsub.s f1, f31, f28, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f1, f31, f28, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f1, f31, f28, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f1, f31, f28, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f1, f31, f28, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f1, f31, f28, f11 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffbfffff fs3 = 0x0)
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f1, 0(x2) # load 0xffbfffff from memory into f1
la x2, scratch
li x3, 0x2b9e252b # load x3 with value 0x2b9e252b
sw x3, 0(x2) # store 0x2b9e252b in memory
flw f6, 0(x2) # load 0x2b9e252b from memory into f6
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f25, 0(x2) # load 0x00000000 from memory into f25
fnmsub.s f21, f1, f6, f25, dyn # perform operation
fnmsub.s f21, f1, f6, f25, rdn # perform operation
fnmsub.s f21, f1, f6, f25, rmm # perform operation
fnmsub.s f21, f1, f6, f25, rne # perform operation
fnmsub.s f21, f1, f6, f25, rtz # perform operation
fnmsub.s f21, f1, f6, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f21, f1, f6, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f21, f1, f6, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f21, f1, f6, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f21, f1, f6, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f21, f1, f6, f25 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffbfffff fs3 = 0x80000000)
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f27, 0(x2) # load 0xffbfffff from memory into f27
la x2, scratch
li x3, 0x64f83c3e # load x3 with value 0x64f83c3e
sw x3, 0(x2) # store 0x64f83c3e in memory
flw f23, 0(x2) # load 0x64f83c3e from memory into f23
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f13, 0(x2) # load 0x80000000 from memory into f13
fnmsub.s f26, f27, f23, f13, dyn # perform operation
fnmsub.s f26, f27, f23, f13, rdn # perform operation
fnmsub.s f26, f27, f23, f13, rmm # perform operation
fnmsub.s f26, f27, f23, f13, rne # perform operation
fnmsub.s f26, f27, f23, f13, rtz # perform operation
fnmsub.s f26, f27, f23, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f26, f27, f23, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f26, f27, f23, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f26, f27, f23, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f26, f27, f23, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f26, f27, f23, f13 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffbfffff fs3 = 0x3f800000)
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f2, 0(x2) # load 0xffbfffff from memory into f2
la x2, scratch
li x3, 0xe4c62858 # load x3 with value 0xe4c62858
sw x3, 0(x2) # store 0xe4c62858 in memory
flw f5, 0(x2) # load 0xe4c62858 from memory into f5
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f25, 0(x2) # load 0x3f800000 from memory into f25
fnmsub.s f30, f2, f5, f25, dyn # perform operation
fnmsub.s f30, f2, f5, f25, rdn # perform operation
fnmsub.s f30, f2, f5, f25, rmm # perform operation
fnmsub.s f30, f2, f5, f25, rne # perform operation
fnmsub.s f30, f2, f5, f25, rtz # perform operation
fnmsub.s f30, f2, f5, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f30, f2, f5, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f30, f2, f5, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f30, f2, f5, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f30, f2, f5, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f30, f2, f5, f25 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffbfffff fs3 = 0xbf800000)
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f21, 0(x2) # load 0xffbfffff from memory into f21
la x2, scratch
li x3, 0xdff1006d # load x3 with value 0xdff1006d
sw x3, 0(x2) # store 0xdff1006d in memory
flw f2, 0(x2) # load 0xdff1006d from memory into f2
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f3, 0(x2) # load 0xbf800000 from memory into f3
fnmsub.s f19, f21, f2, f3, dyn # perform operation
fnmsub.s f19, f21, f2, f3, rdn # perform operation
fnmsub.s f19, f21, f2, f3, rmm # perform operation
fnmsub.s f19, f21, f2, f3, rne # perform operation
fnmsub.s f19, f21, f2, f3, rtz # perform operation
fnmsub.s f19, f21, f2, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f19, f21, f2, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f19, f21, f2, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f19, f21, f2, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f19, f21, f2, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f19, f21, f2, f3 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffbfffff fs3 = 0x3fc00000)
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f5, 0(x2) # load 0xffbfffff from memory into f5
la x2, scratch
li x3, 0xcddf50a3 # load x3 with value 0xcddf50a3
sw x3, 0(x2) # store 0xcddf50a3 in memory
flw f17, 0(x2) # load 0xcddf50a3 from memory into f17
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f16, 0(x2) # load 0x3fc00000 from memory into f16
fnmsub.s f8, f5, f17, f16, dyn # perform operation
fnmsub.s f8, f5, f17, f16, rdn # perform operation
fnmsub.s f8, f5, f17, f16, rmm # perform operation
fnmsub.s f8, f5, f17, f16, rne # perform operation
fnmsub.s f8, f5, f17, f16, rtz # perform operation
fnmsub.s f8, f5, f17, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f8, f5, f17, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f8, f5, f17, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f8, f5, f17, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f8, f5, f17, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f8, f5, f17, f16 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffbfffff fs3 = 0xbfc00000)
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f25, 0(x2) # load 0xffbfffff from memory into f25
la x2, scratch
li x3, 0x5c0cd81c # load x3 with value 0x5c0cd81c
sw x3, 0(x2) # store 0x5c0cd81c in memory
flw f3, 0(x2) # load 0x5c0cd81c from memory into f3
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f16, 0(x2) # load 0xbfc00000 from memory into f16
fnmsub.s f22, f25, f3, f16, dyn # perform operation
fnmsub.s f22, f25, f3, f16, rdn # perform operation
fnmsub.s f22, f25, f3, f16, rmm # perform operation
fnmsub.s f22, f25, f3, f16, rne # perform operation
fnmsub.s f22, f25, f3, f16, rtz # perform operation
fnmsub.s f22, f25, f3, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f22, f25, f3, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f22, f25, f3, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f22, f25, f3, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f22, f25, f3, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f22, f25, f3, f16 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffbfffff fs3 = 0x40000000)
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f5, 0(x2) # load 0xffbfffff from memory into f5
la x2, scratch
li x3, 0xda585501 # load x3 with value 0xda585501
sw x3, 0(x2) # store 0xda585501 in memory
flw f18, 0(x2) # load 0xda585501 from memory into f18
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f12, 0(x2) # load 0x40000000 from memory into f12
fnmsub.s f22, f5, f18, f12, dyn # perform operation
fnmsub.s f22, f5, f18, f12, rdn # perform operation
fnmsub.s f22, f5, f18, f12, rmm # perform operation
fnmsub.s f22, f5, f18, f12, rne # perform operation
fnmsub.s f22, f5, f18, f12, rtz # perform operation
fnmsub.s f22, f5, f18, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f22, f5, f18, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f22, f5, f18, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f22, f5, f18, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f22, f5, f18, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f22, f5, f18, f12 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffbfffff fs3 = 0xc0000000)
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f15, 0(x2) # load 0xffbfffff from memory into f15
la x2, scratch
li x3, 0x3f6f87c8 # load x3 with value 0x3f6f87c8
sw x3, 0(x2) # store 0x3f6f87c8 in memory
flw f1, 0(x2) # load 0x3f6f87c8 from memory into f1
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f11, 0(x2) # load 0xc0000000 from memory into f11
fnmsub.s f5, f15, f1, f11, dyn # perform operation
fnmsub.s f5, f15, f1, f11, rdn # perform operation
fnmsub.s f5, f15, f1, f11, rmm # perform operation
fnmsub.s f5, f15, f1, f11, rne # perform operation
fnmsub.s f5, f15, f1, f11, rtz # perform operation
fnmsub.s f5, f15, f1, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f5, f15, f1, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f5, f15, f1, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f5, f15, f1, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f5, f15, f1, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f5, f15, f1, f11 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffbfffff fs3 = 0x800000)
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f27, 0(x2) # load 0xffbfffff from memory into f27
la x2, scratch
li x3, 0x1460328a # load x3 with value 0x1460328a
sw x3, 0(x2) # store 0x1460328a in memory
flw f18, 0(x2) # load 0x1460328a from memory into f18
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f28, 0(x2) # load 0x00800000 from memory into f28
fnmsub.s f14, f27, f18, f28, dyn # perform operation
fnmsub.s f14, f27, f18, f28, rdn # perform operation
fnmsub.s f14, f27, f18, f28, rmm # perform operation
fnmsub.s f14, f27, f18, f28, rne # perform operation
fnmsub.s f14, f27, f18, f28, rtz # perform operation
fnmsub.s f14, f27, f18, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f14, f27, f18, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f14, f27, f18, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f14, f27, f18, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f14, f27, f18, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f14, f27, f18, f28 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffbfffff fs3 = 0x80800000)
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f18, 0(x2) # load 0xffbfffff from memory into f18
la x2, scratch
li x3, 0x05d913ab # load x3 with value 0x05d913ab
sw x3, 0(x2) # store 0x05d913ab in memory
flw f23, 0(x2) # load 0x05d913ab from memory into f23
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f15, 0(x2) # load 0x80800000 from memory into f15
fnmsub.s f12, f18, f23, f15, dyn # perform operation
fnmsub.s f12, f18, f23, f15, rdn # perform operation
fnmsub.s f12, f18, f23, f15, rmm # perform operation
fnmsub.s f12, f18, f23, f15, rne # perform operation
fnmsub.s f12, f18, f23, f15, rtz # perform operation
fnmsub.s f12, f18, f23, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f12, f18, f23, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f12, f18, f23, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f12, f18, f23, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f12, f18, f23, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f12, f18, f23, f15 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffbfffff fs3 = 0x7f7fffff)
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f1, 0(x2) # load 0xffbfffff from memory into f1
la x2, scratch
li x3, 0xbfa07e35 # load x3 with value 0xbfa07e35
sw x3, 0(x2) # store 0xbfa07e35 in memory
flw f29, 0(x2) # load 0xbfa07e35 from memory into f29
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f9, 0(x2) # load 0x7f7fffff from memory into f9
fnmsub.s f31, f1, f29, f9, dyn # perform operation
fnmsub.s f31, f1, f29, f9, rdn # perform operation
fnmsub.s f31, f1, f29, f9, rmm # perform operation
fnmsub.s f31, f1, f29, f9, rne # perform operation
fnmsub.s f31, f1, f29, f9, rtz # perform operation
fnmsub.s f31, f1, f29, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f31, f1, f29, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f31, f1, f29, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f31, f1, f29, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f31, f1, f29, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f31, f1, f29, f9 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffbfffff fs3 = 0xff7fffff)
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f25, 0(x2) # load 0xffbfffff from memory into f25
la x2, scratch
li x3, 0xae068a60 # load x3 with value 0xae068a60
sw x3, 0(x2) # store 0xae068a60 in memory
flw f11, 0(x2) # load 0xae068a60 from memory into f11
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f26, 0(x2) # load 0xff7fffff from memory into f26
fnmsub.s f2, f25, f11, f26, dyn # perform operation
fnmsub.s f2, f25, f11, f26, rdn # perform operation
fnmsub.s f2, f25, f11, f26, rmm # perform operation
fnmsub.s f2, f25, f11, f26, rne # perform operation
fnmsub.s f2, f25, f11, f26, rtz # perform operation
fnmsub.s f2, f25, f11, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f2, f25, f11, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f2, f25, f11, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f2, f25, f11, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f2, f25, f11, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f2, f25, f11, f26 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffbfffff fs3 = 0x7fffff)
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f13, 0(x2) # load 0xffbfffff from memory into f13
la x2, scratch
li x3, 0x47a5896e # load x3 with value 0x47a5896e
sw x3, 0(x2) # store 0x47a5896e in memory
flw f3, 0(x2) # load 0x47a5896e from memory into f3
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f31, 0(x2) # load 0x007fffff from memory into f31
fnmsub.s f17, f13, f3, f31, dyn # perform operation
fnmsub.s f17, f13, f3, f31, rdn # perform operation
fnmsub.s f17, f13, f3, f31, rmm # perform operation
fnmsub.s f17, f13, f3, f31, rne # perform operation
fnmsub.s f17, f13, f3, f31, rtz # perform operation
fnmsub.s f17, f13, f3, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f17, f13, f3, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f17, f13, f3, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f17, f13, f3, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f17, f13, f3, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f17, f13, f3, f31 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffbfffff fs3 = 0x807fffff)
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f13, 0(x2) # load 0xffbfffff from memory into f13
la x2, scratch
li x3, 0xb71bae0a # load x3 with value 0xb71bae0a
sw x3, 0(x2) # store 0xb71bae0a in memory
flw f20, 0(x2) # load 0xb71bae0a from memory into f20
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f2, 0(x2) # load 0x807fffff from memory into f2
fnmsub.s f27, f13, f20, f2, dyn # perform operation
fnmsub.s f27, f13, f20, f2, rdn # perform operation
fnmsub.s f27, f13, f20, f2, rmm # perform operation
fnmsub.s f27, f13, f20, f2, rne # perform operation
fnmsub.s f27, f13, f20, f2, rtz # perform operation
fnmsub.s f27, f13, f20, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f27, f13, f20, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f27, f13, f20, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f27, f13, f20, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f27, f13, f20, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f27, f13, f20, f2 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffbfffff fs3 = 0x400000)
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f7, 0(x2) # load 0xffbfffff from memory into f7
la x2, scratch
li x3, 0x4e498cf2 # load x3 with value 0x4e498cf2
sw x3, 0(x2) # store 0x4e498cf2 in memory
flw f12, 0(x2) # load 0x4e498cf2 from memory into f12
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f19, 0(x2) # load 0x00400000 from memory into f19
fnmsub.s f17, f7, f12, f19, dyn # perform operation
fnmsub.s f17, f7, f12, f19, rdn # perform operation
fnmsub.s f17, f7, f12, f19, rmm # perform operation
fnmsub.s f17, f7, f12, f19, rne # perform operation
fnmsub.s f17, f7, f12, f19, rtz # perform operation
fnmsub.s f17, f7, f12, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f17, f7, f12, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f17, f7, f12, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f17, f7, f12, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f17, f7, f12, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f17, f7, f12, f19 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffbfffff fs3 = 0x80400000)
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f24, 0(x2) # load 0xffbfffff from memory into f24
la x2, scratch
li x3, 0xbaeaf06b # load x3 with value 0xbaeaf06b
sw x3, 0(x2) # store 0xbaeaf06b in memory
flw f14, 0(x2) # load 0xbaeaf06b from memory into f14
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f31, 0(x2) # load 0x80400000 from memory into f31
fnmsub.s f6, f24, f14, f31, dyn # perform operation
fnmsub.s f6, f24, f14, f31, rdn # perform operation
fnmsub.s f6, f24, f14, f31, rmm # perform operation
fnmsub.s f6, f24, f14, f31, rne # perform operation
fnmsub.s f6, f24, f14, f31, rtz # perform operation
fnmsub.s f6, f24, f14, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f6, f24, f14, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f6, f24, f14, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f6, f24, f14, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f6, f24, f14, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f6, f24, f14, f31 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffbfffff fs3 = 0x1)
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f25, 0(x2) # load 0xffbfffff from memory into f25
la x2, scratch
li x3, 0x69ee317d # load x3 with value 0x69ee317d
sw x3, 0(x2) # store 0x69ee317d in memory
flw f29, 0(x2) # load 0x69ee317d from memory into f29
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f13, 0(x2) # load 0x00000001 from memory into f13
fnmsub.s f30, f25, f29, f13, dyn # perform operation
fnmsub.s f30, f25, f29, f13, rdn # perform operation
fnmsub.s f30, f25, f29, f13, rmm # perform operation
fnmsub.s f30, f25, f29, f13, rne # perform operation
fnmsub.s f30, f25, f29, f13, rtz # perform operation
fnmsub.s f30, f25, f29, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f30, f25, f29, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f30, f25, f29, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f30, f25, f29, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f30, f25, f29, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f30, f25, f29, f13 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffbfffff fs3 = 0x80000001)
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f8, 0(x2) # load 0xffbfffff from memory into f8
la x2, scratch
li x3, 0x5abb9f4b # load x3 with value 0x5abb9f4b
sw x3, 0(x2) # store 0x5abb9f4b in memory
flw f12, 0(x2) # load 0x5abb9f4b from memory into f12
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f19, 0(x2) # load 0x80000001 from memory into f19
fnmsub.s f24, f8, f12, f19, dyn # perform operation
fnmsub.s f24, f8, f12, f19, rdn # perform operation
fnmsub.s f24, f8, f12, f19, rmm # perform operation
fnmsub.s f24, f8, f12, f19, rne # perform operation
fnmsub.s f24, f8, f12, f19, rtz # perform operation
fnmsub.s f24, f8, f12, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f24, f8, f12, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f24, f8, f12, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f24, f8, f12, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f24, f8, f12, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f24, f8, f12, f19 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffbfffff fs3 = 0x7f800000)
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f10, 0(x2) # load 0xffbfffff from memory into f10
la x2, scratch
li x3, 0xe01e3db8 # load x3 with value 0xe01e3db8
sw x3, 0(x2) # store 0xe01e3db8 in memory
flw f8, 0(x2) # load 0xe01e3db8 from memory into f8
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f6, 0(x2) # load 0x7f800000 from memory into f6
fnmsub.s f29, f10, f8, f6, dyn # perform operation
fnmsub.s f29, f10, f8, f6, rdn # perform operation
fnmsub.s f29, f10, f8, f6, rmm # perform operation
fnmsub.s f29, f10, f8, f6, rne # perform operation
fnmsub.s f29, f10, f8, f6, rtz # perform operation
fnmsub.s f29, f10, f8, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f29, f10, f8, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f29, f10, f8, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f29, f10, f8, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f29, f10, f8, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f29, f10, f8, f6 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffbfffff fs3 = 0xff800000)
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f25, 0(x2) # load 0xffbfffff from memory into f25
la x2, scratch
li x3, 0x76564c9b # load x3 with value 0x76564c9b
sw x3, 0(x2) # store 0x76564c9b in memory
flw f1, 0(x2) # load 0x76564c9b from memory into f1
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f26, 0(x2) # load 0xff800000 from memory into f26
fnmsub.s f27, f25, f1, f26, dyn # perform operation
fnmsub.s f27, f25, f1, f26, rdn # perform operation
fnmsub.s f27, f25, f1, f26, rmm # perform operation
fnmsub.s f27, f25, f1, f26, rne # perform operation
fnmsub.s f27, f25, f1, f26, rtz # perform operation
fnmsub.s f27, f25, f1, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f27, f25, f1, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f27, f25, f1, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f27, f25, f1, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f27, f25, f1, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f27, f25, f1, f26 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffbfffff fs3 = 0x7fc00000)
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f2, 0(x2) # load 0xffbfffff from memory into f2
la x2, scratch
li x3, 0x8cd1c7fe # load x3 with value 0x8cd1c7fe
sw x3, 0(x2) # store 0x8cd1c7fe in memory
flw f5, 0(x2) # load 0x8cd1c7fe from memory into f5
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f16, 0(x2) # load 0x7fc00000 from memory into f16
fnmsub.s f29, f2, f5, f16, dyn # perform operation
fnmsub.s f29, f2, f5, f16, rdn # perform operation
fnmsub.s f29, f2, f5, f16, rmm # perform operation
fnmsub.s f29, f2, f5, f16, rne # perform operation
fnmsub.s f29, f2, f5, f16, rtz # perform operation
fnmsub.s f29, f2, f5, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f29, f2, f5, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f29, f2, f5, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f29, f2, f5, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f29, f2, f5, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f29, f2, f5, f16 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffbfffff fs3 = 0x7fffffff)
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f12, 0(x2) # load 0xffbfffff from memory into f12
la x2, scratch
li x3, 0x50874dbd # load x3 with value 0x50874dbd
sw x3, 0(x2) # store 0x50874dbd in memory
flw f2, 0(x2) # load 0x50874dbd from memory into f2
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f17, 0(x2) # load 0x7fffffff from memory into f17
fnmsub.s f21, f12, f2, f17, dyn # perform operation
fnmsub.s f21, f12, f2, f17, rdn # perform operation
fnmsub.s f21, f12, f2, f17, rmm # perform operation
fnmsub.s f21, f12, f2, f17, rne # perform operation
fnmsub.s f21, f12, f2, f17, rtz # perform operation
fnmsub.s f21, f12, f2, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f21, f12, f2, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f21, f12, f2, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f21, f12, f2, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f21, f12, f2, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f21, f12, f2, f17 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffbfffff fs3 = 0xffffffff)
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f28, 0(x2) # load 0xffbfffff from memory into f28
la x2, scratch
li x3, 0x5f467dc3 # load x3 with value 0x5f467dc3
sw x3, 0(x2) # store 0x5f467dc3 in memory
flw f12, 0(x2) # load 0x5f467dc3 from memory into f12
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f27, 0(x2) # load 0xffffffff from memory into f27
fnmsub.s f8, f28, f12, f27, dyn # perform operation
fnmsub.s f8, f28, f12, f27, rdn # perform operation
fnmsub.s f8, f28, f12, f27, rmm # perform operation
fnmsub.s f8, f28, f12, f27, rne # perform operation
fnmsub.s f8, f28, f12, f27, rtz # perform operation
fnmsub.s f8, f28, f12, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f8, f28, f12, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f8, f28, f12, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f8, f28, f12, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f8, f28, f12, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f8, f28, f12, f27 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffbfffff fs3 = 0x7f800001)
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f8, 0(x2) # load 0xffbfffff from memory into f8
la x2, scratch
li x3, 0xfa353aba # load x3 with value 0xfa353aba
sw x3, 0(x2) # store 0xfa353aba in memory
flw f31, 0(x2) # load 0xfa353aba from memory into f31
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f5, 0(x2) # load 0x7f800001 from memory into f5
fnmsub.s f18, f8, f31, f5, dyn # perform operation
fnmsub.s f18, f8, f31, f5, rdn # perform operation
fnmsub.s f18, f8, f31, f5, rmm # perform operation
fnmsub.s f18, f8, f31, f5, rne # perform operation
fnmsub.s f18, f8, f31, f5, rtz # perform operation
fnmsub.s f18, f8, f31, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f18, f8, f31, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f18, f8, f31, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f18, f8, f31, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f18, f8, f31, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f18, f8, f31, f5 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffbfffff fs3 = 0x7fbfffff)
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f16, 0(x2) # load 0xffbfffff from memory into f16
la x2, scratch
li x3, 0xfbec379d # load x3 with value 0xfbec379d
sw x3, 0(x2) # store 0xfbec379d in memory
flw f5, 0(x2) # load 0xfbec379d from memory into f5
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f8, 0(x2) # load 0x7fbfffff from memory into f8
fnmsub.s f26, f16, f5, f8, dyn # perform operation
fnmsub.s f26, f16, f5, f8, rdn # perform operation
fnmsub.s f26, f16, f5, f8, rmm # perform operation
fnmsub.s f26, f16, f5, f8, rne # perform operation
fnmsub.s f26, f16, f5, f8, rtz # perform operation
fnmsub.s f26, f16, f5, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f26, f16, f5, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f26, f16, f5, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f26, f16, f5, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f26, f16, f5, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f26, f16, f5, f8 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffbfffff fs3 = 0xffbfffff)
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f25, 0(x2) # load 0xffbfffff from memory into f25
la x2, scratch
li x3, 0xc2d3aca5 # load x3 with value 0xc2d3aca5
sw x3, 0(x2) # store 0xc2d3aca5 in memory
flw f9, 0(x2) # load 0xc2d3aca5 from memory into f9
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f13, 0(x2) # load 0xffbfffff from memory into f13
fnmsub.s f15, f25, f9, f13, dyn # perform operation
fnmsub.s f15, f25, f9, f13, rdn # perform operation
fnmsub.s f15, f25, f9, f13, rmm # perform operation
fnmsub.s f15, f25, f9, f13, rne # perform operation
fnmsub.s f15, f25, f9, f13, rtz # perform operation
fnmsub.s f15, f25, f9, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f15, f25, f9, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f15, f25, f9, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f15, f25, f9, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f15, f25, f9, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f15, f25, f9, f13 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffbfffff fs3 = 0x7ef8654f)
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f6, 0(x2) # load 0xffbfffff from memory into f6
la x2, scratch
li x3, 0x9eef3cdf # load x3 with value 0x9eef3cdf
sw x3, 0(x2) # store 0x9eef3cdf in memory
flw f23, 0(x2) # load 0x9eef3cdf from memory into f23
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f27, 0(x2) # load 0x7ef8654f from memory into f27
fnmsub.s f28, f6, f23, f27, dyn # perform operation
fnmsub.s f28, f6, f23, f27, rdn # perform operation
fnmsub.s f28, f6, f23, f27, rmm # perform operation
fnmsub.s f28, f6, f23, f27, rne # perform operation
fnmsub.s f28, f6, f23, f27, rtz # perform operation
fnmsub.s f28, f6, f23, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f28, f6, f23, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f28, f6, f23, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f28, f6, f23, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f28, f6, f23, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f28, f6, f23, f27 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffbfffff fs3 = 0x813d9ab0)
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f31, 0(x2) # load 0xffbfffff from memory into f31
la x2, scratch
li x3, 0x8bf9c99d # load x3 with value 0x8bf9c99d
sw x3, 0(x2) # store 0x8bf9c99d in memory
flw f16, 0(x2) # load 0x8bf9c99d from memory into f16
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f25, 0(x2) # load 0x813d9ab0 from memory into f25
fnmsub.s f27, f31, f16, f25, dyn # perform operation
fnmsub.s f27, f31, f16, f25, rdn # perform operation
fnmsub.s f27, f31, f16, f25, rmm # perform operation
fnmsub.s f27, f31, f16, f25, rne # perform operation
fnmsub.s f27, f31, f16, f25, rtz # perform operation
fnmsub.s f27, f31, f16, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f27, f31, f16, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f27, f31, f16, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f27, f31, f16, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f27, f31, f16, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f27, f31, f16, f25 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0x0)
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f18, 0(x2) # load 0x7ef8654f from memory into f18
la x2, scratch
li x3, 0x28455389 # load x3 with value 0x28455389
sw x3, 0(x2) # store 0x28455389 in memory
flw f29, 0(x2) # load 0x28455389 from memory into f29
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f7, 0(x2) # load 0x00000000 from memory into f7
fnmsub.s f5, f18, f29, f7, dyn # perform operation
fnmsub.s f5, f18, f29, f7, rdn # perform operation
fnmsub.s f5, f18, f29, f7, rmm # perform operation
fnmsub.s f5, f18, f29, f7, rne # perform operation
fnmsub.s f5, f18, f29, f7, rtz # perform operation
fnmsub.s f5, f18, f29, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f5, f18, f29, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f5, f18, f29, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f5, f18, f29, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f5, f18, f29, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f5, f18, f29, f7 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0x80000000)
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f17, 0(x2) # load 0x7ef8654f from memory into f17
la x2, scratch
li x3, 0x9e30ed9b # load x3 with value 0x9e30ed9b
sw x3, 0(x2) # store 0x9e30ed9b in memory
flw f14, 0(x2) # load 0x9e30ed9b from memory into f14
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f8, 0(x2) # load 0x80000000 from memory into f8
fnmsub.s f13, f17, f14, f8, dyn # perform operation
fnmsub.s f13, f17, f14, f8, rdn # perform operation
fnmsub.s f13, f17, f14, f8, rmm # perform operation
fnmsub.s f13, f17, f14, f8, rne # perform operation
fnmsub.s f13, f17, f14, f8, rtz # perform operation
fnmsub.s f13, f17, f14, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f13, f17, f14, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f13, f17, f14, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f13, f17, f14, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f13, f17, f14, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f13, f17, f14, f8 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0x3f800000)
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f25, 0(x2) # load 0x7ef8654f from memory into f25
la x2, scratch
li x3, 0xaae928a4 # load x3 with value 0xaae928a4
sw x3, 0(x2) # store 0xaae928a4 in memory
flw f17, 0(x2) # load 0xaae928a4 from memory into f17
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f12, 0(x2) # load 0x3f800000 from memory into f12
fnmsub.s f2, f25, f17, f12, dyn # perform operation
fnmsub.s f2, f25, f17, f12, rdn # perform operation
fnmsub.s f2, f25, f17, f12, rmm # perform operation
fnmsub.s f2, f25, f17, f12, rne # perform operation
fnmsub.s f2, f25, f17, f12, rtz # perform operation
fnmsub.s f2, f25, f17, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f2, f25, f17, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f2, f25, f17, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f2, f25, f17, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f2, f25, f17, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f2, f25, f17, f12 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0xbf800000)
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f13, 0(x2) # load 0x7ef8654f from memory into f13
la x2, scratch
li x3, 0xc10b19dc # load x3 with value 0xc10b19dc
sw x3, 0(x2) # store 0xc10b19dc in memory
flw f18, 0(x2) # load 0xc10b19dc from memory into f18
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f10, 0(x2) # load 0xbf800000 from memory into f10
fnmsub.s f29, f13, f18, f10, dyn # perform operation
fnmsub.s f29, f13, f18, f10, rdn # perform operation
fnmsub.s f29, f13, f18, f10, rmm # perform operation
fnmsub.s f29, f13, f18, f10, rne # perform operation
fnmsub.s f29, f13, f18, f10, rtz # perform operation
fnmsub.s f29, f13, f18, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f29, f13, f18, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f29, f13, f18, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f29, f13, f18, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f29, f13, f18, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f29, f13, f18, f10 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0x3fc00000)
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f19, 0(x2) # load 0x7ef8654f from memory into f19
la x2, scratch
li x3, 0x36e81394 # load x3 with value 0x36e81394
sw x3, 0(x2) # store 0x36e81394 in memory
flw f26, 0(x2) # load 0x36e81394 from memory into f26
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f30, 0(x2) # load 0x3fc00000 from memory into f30
fnmsub.s f21, f19, f26, f30, dyn # perform operation
fnmsub.s f21, f19, f26, f30, rdn # perform operation
fnmsub.s f21, f19, f26, f30, rmm # perform operation
fnmsub.s f21, f19, f26, f30, rne # perform operation
fnmsub.s f21, f19, f26, f30, rtz # perform operation
fnmsub.s f21, f19, f26, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f21, f19, f26, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f21, f19, f26, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f21, f19, f26, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f21, f19, f26, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f21, f19, f26, f30 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0xbfc00000)
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f11, 0(x2) # load 0x7ef8654f from memory into f11
la x2, scratch
li x3, 0x46250b86 # load x3 with value 0x46250b86
sw x3, 0(x2) # store 0x46250b86 in memory
flw f6, 0(x2) # load 0x46250b86 from memory into f6
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f18, 0(x2) # load 0xbfc00000 from memory into f18
fnmsub.s f30, f11, f6, f18, dyn # perform operation
fnmsub.s f30, f11, f6, f18, rdn # perform operation
fnmsub.s f30, f11, f6, f18, rmm # perform operation
fnmsub.s f30, f11, f6, f18, rne # perform operation
fnmsub.s f30, f11, f6, f18, rtz # perform operation
fnmsub.s f30, f11, f6, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f30, f11, f6, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f30, f11, f6, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f30, f11, f6, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f30, f11, f6, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f30, f11, f6, f18 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0x40000000)
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f20, 0(x2) # load 0x7ef8654f from memory into f20
la x2, scratch
li x3, 0x950cac54 # load x3 with value 0x950cac54
sw x3, 0(x2) # store 0x950cac54 in memory
flw f15, 0(x2) # load 0x950cac54 from memory into f15
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f6, 0(x2) # load 0x40000000 from memory into f6
fnmsub.s f14, f20, f15, f6, dyn # perform operation
fnmsub.s f14, f20, f15, f6, rdn # perform operation
fnmsub.s f14, f20, f15, f6, rmm # perform operation
fnmsub.s f14, f20, f15, f6, rne # perform operation
fnmsub.s f14, f20, f15, f6, rtz # perform operation
fnmsub.s f14, f20, f15, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f14, f20, f15, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f14, f20, f15, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f14, f20, f15, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f14, f20, f15, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f14, f20, f15, f6 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0xc0000000)
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f23, 0(x2) # load 0x7ef8654f from memory into f23
la x2, scratch
li x3, 0xbd4e3ac0 # load x3 with value 0xbd4e3ac0
sw x3, 0(x2) # store 0xbd4e3ac0 in memory
flw f6, 0(x2) # load 0xbd4e3ac0 from memory into f6
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f31, 0(x2) # load 0xc0000000 from memory into f31
fnmsub.s f15, f23, f6, f31, dyn # perform operation
fnmsub.s f15, f23, f6, f31, rdn # perform operation
fnmsub.s f15, f23, f6, f31, rmm # perform operation
fnmsub.s f15, f23, f6, f31, rne # perform operation
fnmsub.s f15, f23, f6, f31, rtz # perform operation
fnmsub.s f15, f23, f6, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f15, f23, f6, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f15, f23, f6, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f15, f23, f6, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f15, f23, f6, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f15, f23, f6, f31 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0x800000)
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f11, 0(x2) # load 0x7ef8654f from memory into f11
la x2, scratch
li x3, 0x440c5ee9 # load x3 with value 0x440c5ee9
sw x3, 0(x2) # store 0x440c5ee9 in memory
flw f23, 0(x2) # load 0x440c5ee9 from memory into f23
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f1, 0(x2) # load 0x00800000 from memory into f1
fnmsub.s f31, f11, f23, f1, dyn # perform operation
fnmsub.s f31, f11, f23, f1, rdn # perform operation
fnmsub.s f31, f11, f23, f1, rmm # perform operation
fnmsub.s f31, f11, f23, f1, rne # perform operation
fnmsub.s f31, f11, f23, f1, rtz # perform operation
fnmsub.s f31, f11, f23, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f31, f11, f23, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f31, f11, f23, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f31, f11, f23, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f31, f11, f23, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f31, f11, f23, f1 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0x80800000)
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f9, 0(x2) # load 0x7ef8654f from memory into f9
la x2, scratch
li x3, 0x1c254219 # load x3 with value 0x1c254219
sw x3, 0(x2) # store 0x1c254219 in memory
flw f3, 0(x2) # load 0x1c254219 from memory into f3
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f28, 0(x2) # load 0x80800000 from memory into f28
fnmsub.s f5, f9, f3, f28, dyn # perform operation
fnmsub.s f5, f9, f3, f28, rdn # perform operation
fnmsub.s f5, f9, f3, f28, rmm # perform operation
fnmsub.s f5, f9, f3, f28, rne # perform operation
fnmsub.s f5, f9, f3, f28, rtz # perform operation
fnmsub.s f5, f9, f3, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f5, f9, f3, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f5, f9, f3, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f5, f9, f3, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f5, f9, f3, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f5, f9, f3, f28 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0x7f7fffff)
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f9, 0(x2) # load 0x7ef8654f from memory into f9
la x2, scratch
li x3, 0xe710fa9d # load x3 with value 0xe710fa9d
sw x3, 0(x2) # store 0xe710fa9d in memory
flw f17, 0(x2) # load 0xe710fa9d from memory into f17
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f8, 0(x2) # load 0x7f7fffff from memory into f8
fnmsub.s f26, f9, f17, f8, dyn # perform operation
fnmsub.s f26, f9, f17, f8, rdn # perform operation
fnmsub.s f26, f9, f17, f8, rmm # perform operation
fnmsub.s f26, f9, f17, f8, rne # perform operation
fnmsub.s f26, f9, f17, f8, rtz # perform operation
fnmsub.s f26, f9, f17, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f26, f9, f17, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f26, f9, f17, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f26, f9, f17, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f26, f9, f17, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f26, f9, f17, f8 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0xff7fffff)
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f30, 0(x2) # load 0x7ef8654f from memory into f30
la x2, scratch
li x3, 0x126a73e1 # load x3 with value 0x126a73e1
sw x3, 0(x2) # store 0x126a73e1 in memory
flw f9, 0(x2) # load 0x126a73e1 from memory into f9
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f1, 0(x2) # load 0xff7fffff from memory into f1
fnmsub.s f22, f30, f9, f1, dyn # perform operation
fnmsub.s f22, f30, f9, f1, rdn # perform operation
fnmsub.s f22, f30, f9, f1, rmm # perform operation
fnmsub.s f22, f30, f9, f1, rne # perform operation
fnmsub.s f22, f30, f9, f1, rtz # perform operation
fnmsub.s f22, f30, f9, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f22, f30, f9, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f22, f30, f9, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f22, f30, f9, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f22, f30, f9, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f22, f30, f9, f1 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0x7fffff)
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f9, 0(x2) # load 0x7ef8654f from memory into f9
la x2, scratch
li x3, 0xc2ed2801 # load x3 with value 0xc2ed2801
sw x3, 0(x2) # store 0xc2ed2801 in memory
flw f2, 0(x2) # load 0xc2ed2801 from memory into f2
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f25, 0(x2) # load 0x007fffff from memory into f25
fnmsub.s f26, f9, f2, f25, dyn # perform operation
fnmsub.s f26, f9, f2, f25, rdn # perform operation
fnmsub.s f26, f9, f2, f25, rmm # perform operation
fnmsub.s f26, f9, f2, f25, rne # perform operation
fnmsub.s f26, f9, f2, f25, rtz # perform operation
fnmsub.s f26, f9, f2, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f26, f9, f2, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f26, f9, f2, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f26, f9, f2, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f26, f9, f2, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f26, f9, f2, f25 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0x807fffff)
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f10, 0(x2) # load 0x7ef8654f from memory into f10
la x2, scratch
li x3, 0x6a145338 # load x3 with value 0x6a145338
sw x3, 0(x2) # store 0x6a145338 in memory
flw f12, 0(x2) # load 0x6a145338 from memory into f12
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f24, 0(x2) # load 0x807fffff from memory into f24
fnmsub.s f18, f10, f12, f24, dyn # perform operation
fnmsub.s f18, f10, f12, f24, rdn # perform operation
fnmsub.s f18, f10, f12, f24, rmm # perform operation
fnmsub.s f18, f10, f12, f24, rne # perform operation
fnmsub.s f18, f10, f12, f24, rtz # perform operation
fnmsub.s f18, f10, f12, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f18, f10, f12, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f18, f10, f12, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f18, f10, f12, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f18, f10, f12, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f18, f10, f12, f24 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0x400000)
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f13, 0(x2) # load 0x7ef8654f from memory into f13
la x2, scratch
li x3, 0xd4d1fe93 # load x3 with value 0xd4d1fe93
sw x3, 0(x2) # store 0xd4d1fe93 in memory
flw f6, 0(x2) # load 0xd4d1fe93 from memory into f6
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f27, 0(x2) # load 0x00400000 from memory into f27
fnmsub.s f9, f13, f6, f27, dyn # perform operation
fnmsub.s f9, f13, f6, f27, rdn # perform operation
fnmsub.s f9, f13, f6, f27, rmm # perform operation
fnmsub.s f9, f13, f6, f27, rne # perform operation
fnmsub.s f9, f13, f6, f27, rtz # perform operation
fnmsub.s f9, f13, f6, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f9, f13, f6, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f9, f13, f6, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f9, f13, f6, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f9, f13, f6, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f9, f13, f6, f27 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0x80400000)
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f5, 0(x2) # load 0x7ef8654f from memory into f5
la x2, scratch
li x3, 0x866c15d0 # load x3 with value 0x866c15d0
sw x3, 0(x2) # store 0x866c15d0 in memory
flw f2, 0(x2) # load 0x866c15d0 from memory into f2
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f26, 0(x2) # load 0x80400000 from memory into f26
fnmsub.s f23, f5, f2, f26, dyn # perform operation
fnmsub.s f23, f5, f2, f26, rdn # perform operation
fnmsub.s f23, f5, f2, f26, rmm # perform operation
fnmsub.s f23, f5, f2, f26, rne # perform operation
fnmsub.s f23, f5, f2, f26, rtz # perform operation
fnmsub.s f23, f5, f2, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f23, f5, f2, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f23, f5, f2, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f23, f5, f2, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f23, f5, f2, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f23, f5, f2, f26 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0x1)
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f9, 0(x2) # load 0x7ef8654f from memory into f9
la x2, scratch
li x3, 0x6909f604 # load x3 with value 0x6909f604
sw x3, 0(x2) # store 0x6909f604 in memory
flw f13, 0(x2) # load 0x6909f604 from memory into f13
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f3, 0(x2) # load 0x00000001 from memory into f3
fnmsub.s f1, f9, f13, f3, dyn # perform operation
fnmsub.s f1, f9, f13, f3, rdn # perform operation
fnmsub.s f1, f9, f13, f3, rmm # perform operation
fnmsub.s f1, f9, f13, f3, rne # perform operation
fnmsub.s f1, f9, f13, f3, rtz # perform operation
fnmsub.s f1, f9, f13, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f1, f9, f13, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f1, f9, f13, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f1, f9, f13, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f1, f9, f13, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f1, f9, f13, f3 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0x80000001)
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f26, 0(x2) # load 0x7ef8654f from memory into f26
la x2, scratch
li x3, 0x9cab75fa # load x3 with value 0x9cab75fa
sw x3, 0(x2) # store 0x9cab75fa in memory
flw f16, 0(x2) # load 0x9cab75fa from memory into f16
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f3, 0(x2) # load 0x80000001 from memory into f3
fnmsub.s f23, f26, f16, f3, dyn # perform operation
fnmsub.s f23, f26, f16, f3, rdn # perform operation
fnmsub.s f23, f26, f16, f3, rmm # perform operation
fnmsub.s f23, f26, f16, f3, rne # perform operation
fnmsub.s f23, f26, f16, f3, rtz # perform operation
fnmsub.s f23, f26, f16, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f23, f26, f16, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f23, f26, f16, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f23, f26, f16, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f23, f26, f16, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f23, f26, f16, f3 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0x7f800000)
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f1, 0(x2) # load 0x7ef8654f from memory into f1
la x2, scratch
li x3, 0x66690e8b # load x3 with value 0x66690e8b
sw x3, 0(x2) # store 0x66690e8b in memory
flw f31, 0(x2) # load 0x66690e8b from memory into f31
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f11, 0(x2) # load 0x7f800000 from memory into f11
fnmsub.s f18, f1, f31, f11, dyn # perform operation
fnmsub.s f18, f1, f31, f11, rdn # perform operation
fnmsub.s f18, f1, f31, f11, rmm # perform operation
fnmsub.s f18, f1, f31, f11, rne # perform operation
fnmsub.s f18, f1, f31, f11, rtz # perform operation
fnmsub.s f18, f1, f31, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f18, f1, f31, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f18, f1, f31, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f18, f1, f31, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f18, f1, f31, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f18, f1, f31, f11 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0xff800000)
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f9, 0(x2) # load 0x7ef8654f from memory into f9
la x2, scratch
li x3, 0x86507fcb # load x3 with value 0x86507fcb
sw x3, 0(x2) # store 0x86507fcb in memory
flw f31, 0(x2) # load 0x86507fcb from memory into f31
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f21, 0(x2) # load 0xff800000 from memory into f21
fnmsub.s f7, f9, f31, f21, dyn # perform operation
fnmsub.s f7, f9, f31, f21, rdn # perform operation
fnmsub.s f7, f9, f31, f21, rmm # perform operation
fnmsub.s f7, f9, f31, f21, rne # perform operation
fnmsub.s f7, f9, f31, f21, rtz # perform operation
fnmsub.s f7, f9, f31, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f7, f9, f31, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f7, f9, f31, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f7, f9, f31, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f7, f9, f31, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f7, f9, f31, f21 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0x7fc00000)
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f3, 0(x2) # load 0x7ef8654f from memory into f3
la x2, scratch
li x3, 0x60319e7e # load x3 with value 0x60319e7e
sw x3, 0(x2) # store 0x60319e7e in memory
flw f14, 0(x2) # load 0x60319e7e from memory into f14
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f11, 0(x2) # load 0x7fc00000 from memory into f11
fnmsub.s f12, f3, f14, f11, dyn # perform operation
fnmsub.s f12, f3, f14, f11, rdn # perform operation
fnmsub.s f12, f3, f14, f11, rmm # perform operation
fnmsub.s f12, f3, f14, f11, rne # perform operation
fnmsub.s f12, f3, f14, f11, rtz # perform operation
fnmsub.s f12, f3, f14, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f12, f3, f14, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f12, f3, f14, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f12, f3, f14, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f12, f3, f14, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f12, f3, f14, f11 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0x7fffffff)
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f24, 0(x2) # load 0x7ef8654f from memory into f24
la x2, scratch
li x3, 0x35296339 # load x3 with value 0x35296339
sw x3, 0(x2) # store 0x35296339 in memory
flw f23, 0(x2) # load 0x35296339 from memory into f23
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f25, 0(x2) # load 0x7fffffff from memory into f25
fnmsub.s f28, f24, f23, f25, dyn # perform operation
fnmsub.s f28, f24, f23, f25, rdn # perform operation
fnmsub.s f28, f24, f23, f25, rmm # perform operation
fnmsub.s f28, f24, f23, f25, rne # perform operation
fnmsub.s f28, f24, f23, f25, rtz # perform operation
fnmsub.s f28, f24, f23, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f28, f24, f23, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f28, f24, f23, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f28, f24, f23, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f28, f24, f23, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f28, f24, f23, f25 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0xffffffff)
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f8, 0(x2) # load 0x7ef8654f from memory into f8
la x2, scratch
li x3, 0x68a56835 # load x3 with value 0x68a56835
sw x3, 0(x2) # store 0x68a56835 in memory
flw f2, 0(x2) # load 0x68a56835 from memory into f2
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f17, 0(x2) # load 0xffffffff from memory into f17
fnmsub.s f10, f8, f2, f17, dyn # perform operation
fnmsub.s f10, f8, f2, f17, rdn # perform operation
fnmsub.s f10, f8, f2, f17, rmm # perform operation
fnmsub.s f10, f8, f2, f17, rne # perform operation
fnmsub.s f10, f8, f2, f17, rtz # perform operation
fnmsub.s f10, f8, f2, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f10, f8, f2, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f10, f8, f2, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f10, f8, f2, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f10, f8, f2, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f10, f8, f2, f17 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0x7f800001)
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f26, 0(x2) # load 0x7ef8654f from memory into f26
la x2, scratch
li x3, 0x60b12bf8 # load x3 with value 0x60b12bf8
sw x3, 0(x2) # store 0x60b12bf8 in memory
flw f10, 0(x2) # load 0x60b12bf8 from memory into f10
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f20, 0(x2) # load 0x7f800001 from memory into f20
fnmsub.s f13, f26, f10, f20, dyn # perform operation
fnmsub.s f13, f26, f10, f20, rdn # perform operation
fnmsub.s f13, f26, f10, f20, rmm # perform operation
fnmsub.s f13, f26, f10, f20, rne # perform operation
fnmsub.s f13, f26, f10, f20, rtz # perform operation
fnmsub.s f13, f26, f10, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f13, f26, f10, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f13, f26, f10, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f13, f26, f10, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f13, f26, f10, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f13, f26, f10, f20 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0x7fbfffff)
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f9, 0(x2) # load 0x7ef8654f from memory into f9
la x2, scratch
li x3, 0x5be03b40 # load x3 with value 0x5be03b40
sw x3, 0(x2) # store 0x5be03b40 in memory
flw f12, 0(x2) # load 0x5be03b40 from memory into f12
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f16, 0(x2) # load 0x7fbfffff from memory into f16
fnmsub.s f14, f9, f12, f16, dyn # perform operation
fnmsub.s f14, f9, f12, f16, rdn # perform operation
fnmsub.s f14, f9, f12, f16, rmm # perform operation
fnmsub.s f14, f9, f12, f16, rne # perform operation
fnmsub.s f14, f9, f12, f16, rtz # perform operation
fnmsub.s f14, f9, f12, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f14, f9, f12, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f14, f9, f12, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f14, f9, f12, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f14, f9, f12, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f14, f9, f12, f16 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0xffbfffff)
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f10, 0(x2) # load 0x7ef8654f from memory into f10
la x2, scratch
li x3, 0xfeb358c0 # load x3 with value 0xfeb358c0
sw x3, 0(x2) # store 0xfeb358c0 in memory
flw f5, 0(x2) # load 0xfeb358c0 from memory into f5
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f13, 0(x2) # load 0xffbfffff from memory into f13
fnmsub.s f24, f10, f5, f13, dyn # perform operation
fnmsub.s f24, f10, f5, f13, rdn # perform operation
fnmsub.s f24, f10, f5, f13, rmm # perform operation
fnmsub.s f24, f10, f5, f13, rne # perform operation
fnmsub.s f24, f10, f5, f13, rtz # perform operation
fnmsub.s f24, f10, f5, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f24, f10, f5, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f24, f10, f5, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f24, f10, f5, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f24, f10, f5, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f24, f10, f5, f13 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0x7ef8654f)
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f20, 0(x2) # load 0x7ef8654f from memory into f20
la x2, scratch
li x3, 0x191a7643 # load x3 with value 0x191a7643
sw x3, 0(x2) # store 0x191a7643 in memory
flw f19, 0(x2) # load 0x191a7643 from memory into f19
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f7, 0(x2) # load 0x7ef8654f from memory into f7
fnmsub.s f8, f20, f19, f7, dyn # perform operation
fnmsub.s f8, f20, f19, f7, rdn # perform operation
fnmsub.s f8, f20, f19, f7, rmm # perform operation
fnmsub.s f8, f20, f19, f7, rne # perform operation
fnmsub.s f8, f20, f19, f7, rtz # perform operation
fnmsub.s f8, f20, f19, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f8, f20, f19, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f8, f20, f19, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f8, f20, f19, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f8, f20, f19, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f8, f20, f19, f7 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0x813d9ab0)
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f19, 0(x2) # load 0x7ef8654f from memory into f19
la x2, scratch
li x3, 0x5dc47678 # load x3 with value 0x5dc47678
sw x3, 0(x2) # store 0x5dc47678 in memory
flw f24, 0(x2) # load 0x5dc47678 from memory into f24
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f14, 0(x2) # load 0x813d9ab0 from memory into f14
fnmsub.s f28, f19, f24, f14, dyn # perform operation
fnmsub.s f28, f19, f24, f14, rdn # perform operation
fnmsub.s f28, f19, f24, f14, rmm # perform operation
fnmsub.s f28, f19, f24, f14, rne # perform operation
fnmsub.s f28, f19, f24, f14, rtz # perform operation
fnmsub.s f28, f19, f24, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f28, f19, f24, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f28, f19, f24, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f28, f19, f24, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f28, f19, f24, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f28, f19, f24, f14 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0x0)
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f25, 0(x2) # load 0x813d9ab0 from memory into f25
la x2, scratch
li x3, 0x7f546fa6 # load x3 with value 0x7f546fa6
sw x3, 0(x2) # store 0x7f546fa6 in memory
flw f1, 0(x2) # load 0x7f546fa6 from memory into f1
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f30, 0(x2) # load 0x00000000 from memory into f30
fnmsub.s f12, f25, f1, f30, dyn # perform operation
fnmsub.s f12, f25, f1, f30, rdn # perform operation
fnmsub.s f12, f25, f1, f30, rmm # perform operation
fnmsub.s f12, f25, f1, f30, rne # perform operation
fnmsub.s f12, f25, f1, f30, rtz # perform operation
fnmsub.s f12, f25, f1, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f12, f25, f1, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f12, f25, f1, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f12, f25, f1, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f12, f25, f1, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f12, f25, f1, f30 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0x80000000)
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f2, 0(x2) # load 0x813d9ab0 from memory into f2
la x2, scratch
li x3, 0x4871bd92 # load x3 with value 0x4871bd92
sw x3, 0(x2) # store 0x4871bd92 in memory
flw f10, 0(x2) # load 0x4871bd92 from memory into f10
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f3, 0(x2) # load 0x80000000 from memory into f3
fnmsub.s f14, f2, f10, f3, dyn # perform operation
fnmsub.s f14, f2, f10, f3, rdn # perform operation
fnmsub.s f14, f2, f10, f3, rmm # perform operation
fnmsub.s f14, f2, f10, f3, rne # perform operation
fnmsub.s f14, f2, f10, f3, rtz # perform operation
fnmsub.s f14, f2, f10, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f14, f2, f10, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f14, f2, f10, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f14, f2, f10, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f14, f2, f10, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f14, f2, f10, f3 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0x3f800000)
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f29, 0(x2) # load 0x813d9ab0 from memory into f29
la x2, scratch
li x3, 0xb2ae412a # load x3 with value 0xb2ae412a
sw x3, 0(x2) # store 0xb2ae412a in memory
flw f28, 0(x2) # load 0xb2ae412a from memory into f28
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f24, 0(x2) # load 0x3f800000 from memory into f24
fnmsub.s f22, f29, f28, f24, dyn # perform operation
fnmsub.s f22, f29, f28, f24, rdn # perform operation
fnmsub.s f22, f29, f28, f24, rmm # perform operation
fnmsub.s f22, f29, f28, f24, rne # perform operation
fnmsub.s f22, f29, f28, f24, rtz # perform operation
fnmsub.s f22, f29, f28, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f22, f29, f28, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f22, f29, f28, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f22, f29, f28, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f22, f29, f28, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f22, f29, f28, f24 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0xbf800000)
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f8, 0(x2) # load 0x813d9ab0 from memory into f8
la x2, scratch
li x3, 0xb9c5928c # load x3 with value 0xb9c5928c
sw x3, 0(x2) # store 0xb9c5928c in memory
flw f17, 0(x2) # load 0xb9c5928c from memory into f17
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f31, 0(x2) # load 0xbf800000 from memory into f31
fnmsub.s f13, f8, f17, f31, dyn # perform operation
fnmsub.s f13, f8, f17, f31, rdn # perform operation
fnmsub.s f13, f8, f17, f31, rmm # perform operation
fnmsub.s f13, f8, f17, f31, rne # perform operation
fnmsub.s f13, f8, f17, f31, rtz # perform operation
fnmsub.s f13, f8, f17, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f13, f8, f17, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f13, f8, f17, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f13, f8, f17, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f13, f8, f17, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f13, f8, f17, f31 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0x3fc00000)
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f27, 0(x2) # load 0x813d9ab0 from memory into f27
la x2, scratch
li x3, 0x1721a9d0 # load x3 with value 0x1721a9d0
sw x3, 0(x2) # store 0x1721a9d0 in memory
flw f8, 0(x2) # load 0x1721a9d0 from memory into f8
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f1, 0(x2) # load 0x3fc00000 from memory into f1
fnmsub.s f14, f27, f8, f1, dyn # perform operation
fnmsub.s f14, f27, f8, f1, rdn # perform operation
fnmsub.s f14, f27, f8, f1, rmm # perform operation
fnmsub.s f14, f27, f8, f1, rne # perform operation
fnmsub.s f14, f27, f8, f1, rtz # perform operation
fnmsub.s f14, f27, f8, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f14, f27, f8, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f14, f27, f8, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f14, f27, f8, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f14, f27, f8, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f14, f27, f8, f1 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0xbfc00000)
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f25, 0(x2) # load 0x813d9ab0 from memory into f25
la x2, scratch
li x3, 0x366f073e # load x3 with value 0x366f073e
sw x3, 0(x2) # store 0x366f073e in memory
flw f29, 0(x2) # load 0x366f073e from memory into f29
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f20, 0(x2) # load 0xbfc00000 from memory into f20
fnmsub.s f31, f25, f29, f20, dyn # perform operation
fnmsub.s f31, f25, f29, f20, rdn # perform operation
fnmsub.s f31, f25, f29, f20, rmm # perform operation
fnmsub.s f31, f25, f29, f20, rne # perform operation
fnmsub.s f31, f25, f29, f20, rtz # perform operation
fnmsub.s f31, f25, f29, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f31, f25, f29, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f31, f25, f29, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f31, f25, f29, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f31, f25, f29, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f31, f25, f29, f20 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0x40000000)
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f7, 0(x2) # load 0x813d9ab0 from memory into f7
la x2, scratch
li x3, 0x8aa8d0dd # load x3 with value 0x8aa8d0dd
sw x3, 0(x2) # store 0x8aa8d0dd in memory
flw f24, 0(x2) # load 0x8aa8d0dd from memory into f24
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f23, 0(x2) # load 0x40000000 from memory into f23
fnmsub.s f27, f7, f24, f23, dyn # perform operation
fnmsub.s f27, f7, f24, f23, rdn # perform operation
fnmsub.s f27, f7, f24, f23, rmm # perform operation
fnmsub.s f27, f7, f24, f23, rne # perform operation
fnmsub.s f27, f7, f24, f23, rtz # perform operation
fnmsub.s f27, f7, f24, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f27, f7, f24, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f27, f7, f24, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f27, f7, f24, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f27, f7, f24, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f27, f7, f24, f23 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0xc0000000)
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f3, 0(x2) # load 0x813d9ab0 from memory into f3
la x2, scratch
li x3, 0x524717ba # load x3 with value 0x524717ba
sw x3, 0(x2) # store 0x524717ba in memory
flw f24, 0(x2) # load 0x524717ba from memory into f24
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f25, 0(x2) # load 0xc0000000 from memory into f25
fnmsub.s f26, f3, f24, f25, dyn # perform operation
fnmsub.s f26, f3, f24, f25, rdn # perform operation
fnmsub.s f26, f3, f24, f25, rmm # perform operation
fnmsub.s f26, f3, f24, f25, rne # perform operation
fnmsub.s f26, f3, f24, f25, rtz # perform operation
fnmsub.s f26, f3, f24, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f26, f3, f24, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f26, f3, f24, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f26, f3, f24, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f26, f3, f24, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f26, f3, f24, f25 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0x800000)
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f9, 0(x2) # load 0x813d9ab0 from memory into f9
la x2, scratch
li x3, 0x4ab2491f # load x3 with value 0x4ab2491f
sw x3, 0(x2) # store 0x4ab2491f in memory
flw f16, 0(x2) # load 0x4ab2491f from memory into f16
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f13, 0(x2) # load 0x00800000 from memory into f13
fnmsub.s f12, f9, f16, f13, dyn # perform operation
fnmsub.s f12, f9, f16, f13, rdn # perform operation
fnmsub.s f12, f9, f16, f13, rmm # perform operation
fnmsub.s f12, f9, f16, f13, rne # perform operation
fnmsub.s f12, f9, f16, f13, rtz # perform operation
fnmsub.s f12, f9, f16, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f12, f9, f16, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f12, f9, f16, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f12, f9, f16, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f12, f9, f16, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f12, f9, f16, f13 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0x80800000)
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f12, 0(x2) # load 0x813d9ab0 from memory into f12
la x2, scratch
li x3, 0x5b906b80 # load x3 with value 0x5b906b80
sw x3, 0(x2) # store 0x5b906b80 in memory
flw f26, 0(x2) # load 0x5b906b80 from memory into f26
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f28, 0(x2) # load 0x80800000 from memory into f28
fnmsub.s f5, f12, f26, f28, dyn # perform operation
fnmsub.s f5, f12, f26, f28, rdn # perform operation
fnmsub.s f5, f12, f26, f28, rmm # perform operation
fnmsub.s f5, f12, f26, f28, rne # perform operation
fnmsub.s f5, f12, f26, f28, rtz # perform operation
fnmsub.s f5, f12, f26, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f5, f12, f26, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f5, f12, f26, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f5, f12, f26, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f5, f12, f26, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f5, f12, f26, f28 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0x7f7fffff)
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f20, 0(x2) # load 0x813d9ab0 from memory into f20
la x2, scratch
li x3, 0x18654898 # load x3 with value 0x18654898
sw x3, 0(x2) # store 0x18654898 in memory
flw f14, 0(x2) # load 0x18654898 from memory into f14
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f18, 0(x2) # load 0x7f7fffff from memory into f18
fnmsub.s f1, f20, f14, f18, dyn # perform operation
fnmsub.s f1, f20, f14, f18, rdn # perform operation
fnmsub.s f1, f20, f14, f18, rmm # perform operation
fnmsub.s f1, f20, f14, f18, rne # perform operation
fnmsub.s f1, f20, f14, f18, rtz # perform operation
fnmsub.s f1, f20, f14, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f1, f20, f14, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f1, f20, f14, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f1, f20, f14, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f1, f20, f14, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f1, f20, f14, f18 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0xff7fffff)
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f6, 0(x2) # load 0x813d9ab0 from memory into f6
la x2, scratch
li x3, 0x78ba7f09 # load x3 with value 0x78ba7f09
sw x3, 0(x2) # store 0x78ba7f09 in memory
flw f2, 0(x2) # load 0x78ba7f09 from memory into f2
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f5, 0(x2) # load 0xff7fffff from memory into f5
fnmsub.s f28, f6, f2, f5, dyn # perform operation
fnmsub.s f28, f6, f2, f5, rdn # perform operation
fnmsub.s f28, f6, f2, f5, rmm # perform operation
fnmsub.s f28, f6, f2, f5, rne # perform operation
fnmsub.s f28, f6, f2, f5, rtz # perform operation
fnmsub.s f28, f6, f2, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f28, f6, f2, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f28, f6, f2, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f28, f6, f2, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f28, f6, f2, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f28, f6, f2, f5 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0x7fffff)
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f21, 0(x2) # load 0x813d9ab0 from memory into f21
la x2, scratch
li x3, 0x60473cc2 # load x3 with value 0x60473cc2
sw x3, 0(x2) # store 0x60473cc2 in memory
flw f15, 0(x2) # load 0x60473cc2 from memory into f15
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f22, 0(x2) # load 0x007fffff from memory into f22
fnmsub.s f5, f21, f15, f22, dyn # perform operation
fnmsub.s f5, f21, f15, f22, rdn # perform operation
fnmsub.s f5, f21, f15, f22, rmm # perform operation
fnmsub.s f5, f21, f15, f22, rne # perform operation
fnmsub.s f5, f21, f15, f22, rtz # perform operation
fnmsub.s f5, f21, f15, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f5, f21, f15, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f5, f21, f15, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f5, f21, f15, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f5, f21, f15, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f5, f21, f15, f22 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0x807fffff)
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f1, 0(x2) # load 0x813d9ab0 from memory into f1
la x2, scratch
li x3, 0x8fa3e774 # load x3 with value 0x8fa3e774
sw x3, 0(x2) # store 0x8fa3e774 in memory
flw f24, 0(x2) # load 0x8fa3e774 from memory into f24
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f30, 0(x2) # load 0x807fffff from memory into f30
fnmsub.s f18, f1, f24, f30, dyn # perform operation
fnmsub.s f18, f1, f24, f30, rdn # perform operation
fnmsub.s f18, f1, f24, f30, rmm # perform operation
fnmsub.s f18, f1, f24, f30, rne # perform operation
fnmsub.s f18, f1, f24, f30, rtz # perform operation
fnmsub.s f18, f1, f24, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f18, f1, f24, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f18, f1, f24, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f18, f1, f24, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f18, f1, f24, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f18, f1, f24, f30 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0x400000)
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f28, 0(x2) # load 0x813d9ab0 from memory into f28
la x2, scratch
li x3, 0xd8c22c74 # load x3 with value 0xd8c22c74
sw x3, 0(x2) # store 0xd8c22c74 in memory
flw f24, 0(x2) # load 0xd8c22c74 from memory into f24
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f31, 0(x2) # load 0x00400000 from memory into f31
fnmsub.s f16, f28, f24, f31, dyn # perform operation
fnmsub.s f16, f28, f24, f31, rdn # perform operation
fnmsub.s f16, f28, f24, f31, rmm # perform operation
fnmsub.s f16, f28, f24, f31, rne # perform operation
fnmsub.s f16, f28, f24, f31, rtz # perform operation
fnmsub.s f16, f28, f24, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f16, f28, f24, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f16, f28, f24, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f16, f28, f24, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f16, f28, f24, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f16, f28, f24, f31 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0x80400000)
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f28, 0(x2) # load 0x813d9ab0 from memory into f28
la x2, scratch
li x3, 0x386525a7 # load x3 with value 0x386525a7
sw x3, 0(x2) # store 0x386525a7 in memory
flw f15, 0(x2) # load 0x386525a7 from memory into f15
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f11, 0(x2) # load 0x80400000 from memory into f11
fnmsub.s f16, f28, f15, f11, dyn # perform operation
fnmsub.s f16, f28, f15, f11, rdn # perform operation
fnmsub.s f16, f28, f15, f11, rmm # perform operation
fnmsub.s f16, f28, f15, f11, rne # perform operation
fnmsub.s f16, f28, f15, f11, rtz # perform operation
fnmsub.s f16, f28, f15, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f16, f28, f15, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f16, f28, f15, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f16, f28, f15, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f16, f28, f15, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f16, f28, f15, f11 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0x1)
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f22, 0(x2) # load 0x813d9ab0 from memory into f22
la x2, scratch
li x3, 0x8494b663 # load x3 with value 0x8494b663
sw x3, 0(x2) # store 0x8494b663 in memory
flw f10, 0(x2) # load 0x8494b663 from memory into f10
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f25, 0(x2) # load 0x00000001 from memory into f25
fnmsub.s f27, f22, f10, f25, dyn # perform operation
fnmsub.s f27, f22, f10, f25, rdn # perform operation
fnmsub.s f27, f22, f10, f25, rmm # perform operation
fnmsub.s f27, f22, f10, f25, rne # perform operation
fnmsub.s f27, f22, f10, f25, rtz # perform operation
fnmsub.s f27, f22, f10, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f27, f22, f10, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f27, f22, f10, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f27, f22, f10, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f27, f22, f10, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f27, f22, f10, f25 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0x80000001)
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f8, 0(x2) # load 0x813d9ab0 from memory into f8
la x2, scratch
li x3, 0x50200864 # load x3 with value 0x50200864
sw x3, 0(x2) # store 0x50200864 in memory
flw f29, 0(x2) # load 0x50200864 from memory into f29
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f12, 0(x2) # load 0x80000001 from memory into f12
fnmsub.s f28, f8, f29, f12, dyn # perform operation
fnmsub.s f28, f8, f29, f12, rdn # perform operation
fnmsub.s f28, f8, f29, f12, rmm # perform operation
fnmsub.s f28, f8, f29, f12, rne # perform operation
fnmsub.s f28, f8, f29, f12, rtz # perform operation
fnmsub.s f28, f8, f29, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f28, f8, f29, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f28, f8, f29, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f28, f8, f29, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f28, f8, f29, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f28, f8, f29, f12 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0x7f800000)
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f15, 0(x2) # load 0x813d9ab0 from memory into f15
la x2, scratch
li x3, 0x81d58149 # load x3 with value 0x81d58149
sw x3, 0(x2) # store 0x81d58149 in memory
flw f21, 0(x2) # load 0x81d58149 from memory into f21
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f31, 0(x2) # load 0x7f800000 from memory into f31
fnmsub.s f23, f15, f21, f31, dyn # perform operation
fnmsub.s f23, f15, f21, f31, rdn # perform operation
fnmsub.s f23, f15, f21, f31, rmm # perform operation
fnmsub.s f23, f15, f21, f31, rne # perform operation
fnmsub.s f23, f15, f21, f31, rtz # perform operation
fnmsub.s f23, f15, f21, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f23, f15, f21, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f23, f15, f21, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f23, f15, f21, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f23, f15, f21, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f23, f15, f21, f31 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0xff800000)
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f29, 0(x2) # load 0x813d9ab0 from memory into f29
la x2, scratch
li x3, 0xe10242fd # load x3 with value 0xe10242fd
sw x3, 0(x2) # store 0xe10242fd in memory
flw f20, 0(x2) # load 0xe10242fd from memory into f20
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f17, 0(x2) # load 0xff800000 from memory into f17
fnmsub.s f18, f29, f20, f17, dyn # perform operation
fnmsub.s f18, f29, f20, f17, rdn # perform operation
fnmsub.s f18, f29, f20, f17, rmm # perform operation
fnmsub.s f18, f29, f20, f17, rne # perform operation
fnmsub.s f18, f29, f20, f17, rtz # perform operation
fnmsub.s f18, f29, f20, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f18, f29, f20, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f18, f29, f20, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f18, f29, f20, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f18, f29, f20, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f18, f29, f20, f17 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0x7fc00000)
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f16, 0(x2) # load 0x813d9ab0 from memory into f16
la x2, scratch
li x3, 0x9f5e0cc2 # load x3 with value 0x9f5e0cc2
sw x3, 0(x2) # store 0x9f5e0cc2 in memory
flw f6, 0(x2) # load 0x9f5e0cc2 from memory into f6
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f7, 0(x2) # load 0x7fc00000 from memory into f7
fnmsub.s f8, f16, f6, f7, dyn # perform operation
fnmsub.s f8, f16, f6, f7, rdn # perform operation
fnmsub.s f8, f16, f6, f7, rmm # perform operation
fnmsub.s f8, f16, f6, f7, rne # perform operation
fnmsub.s f8, f16, f6, f7, rtz # perform operation
fnmsub.s f8, f16, f6, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f8, f16, f6, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f8, f16, f6, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f8, f16, f6, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f8, f16, f6, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f8, f16, f6, f7 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0x7fffffff)
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f24, 0(x2) # load 0x813d9ab0 from memory into f24
la x2, scratch
li x3, 0x06d97a0b # load x3 with value 0x06d97a0b
sw x3, 0(x2) # store 0x06d97a0b in memory
flw f23, 0(x2) # load 0x06d97a0b from memory into f23
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f3, 0(x2) # load 0x7fffffff from memory into f3
fnmsub.s f2, f24, f23, f3, dyn # perform operation
fnmsub.s f2, f24, f23, f3, rdn # perform operation
fnmsub.s f2, f24, f23, f3, rmm # perform operation
fnmsub.s f2, f24, f23, f3, rne # perform operation
fnmsub.s f2, f24, f23, f3, rtz # perform operation
fnmsub.s f2, f24, f23, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f2, f24, f23, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f2, f24, f23, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f2, f24, f23, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f2, f24, f23, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f2, f24, f23, f3 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0xffffffff)
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f14, 0(x2) # load 0x813d9ab0 from memory into f14
la x2, scratch
li x3, 0x73c2d578 # load x3 with value 0x73c2d578
sw x3, 0(x2) # store 0x73c2d578 in memory
flw f27, 0(x2) # load 0x73c2d578 from memory into f27
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f15, 0(x2) # load 0xffffffff from memory into f15
fnmsub.s f22, f14, f27, f15, dyn # perform operation
fnmsub.s f22, f14, f27, f15, rdn # perform operation
fnmsub.s f22, f14, f27, f15, rmm # perform operation
fnmsub.s f22, f14, f27, f15, rne # perform operation
fnmsub.s f22, f14, f27, f15, rtz # perform operation
fnmsub.s f22, f14, f27, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f22, f14, f27, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f22, f14, f27, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f22, f14, f27, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f22, f14, f27, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f22, f14, f27, f15 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0x7f800001)
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f30, 0(x2) # load 0x813d9ab0 from memory into f30
la x2, scratch
li x3, 0x89876a16 # load x3 with value 0x89876a16
sw x3, 0(x2) # store 0x89876a16 in memory
flw f15, 0(x2) # load 0x89876a16 from memory into f15
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f1, 0(x2) # load 0x7f800001 from memory into f1
fnmsub.s f13, f30, f15, f1, dyn # perform operation
fnmsub.s f13, f30, f15, f1, rdn # perform operation
fnmsub.s f13, f30, f15, f1, rmm # perform operation
fnmsub.s f13, f30, f15, f1, rne # perform operation
fnmsub.s f13, f30, f15, f1, rtz # perform operation
fnmsub.s f13, f30, f15, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f13, f30, f15, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f13, f30, f15, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f13, f30, f15, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f13, f30, f15, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f13, f30, f15, f1 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0x7fbfffff)
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f18, 0(x2) # load 0x813d9ab0 from memory into f18
la x2, scratch
li x3, 0xfd00ff47 # load x3 with value 0xfd00ff47
sw x3, 0(x2) # store 0xfd00ff47 in memory
flw f13, 0(x2) # load 0xfd00ff47 from memory into f13
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f14, 0(x2) # load 0x7fbfffff from memory into f14
fnmsub.s f22, f18, f13, f14, dyn # perform operation
fnmsub.s f22, f18, f13, f14, rdn # perform operation
fnmsub.s f22, f18, f13, f14, rmm # perform operation
fnmsub.s f22, f18, f13, f14, rne # perform operation
fnmsub.s f22, f18, f13, f14, rtz # perform operation
fnmsub.s f22, f18, f13, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f22, f18, f13, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f22, f18, f13, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f22, f18, f13, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f22, f18, f13, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f22, f18, f13, f14 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0xffbfffff)
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f11, 0(x2) # load 0x813d9ab0 from memory into f11
la x2, scratch
li x3, 0xd2bd8481 # load x3 with value 0xd2bd8481
sw x3, 0(x2) # store 0xd2bd8481 in memory
flw f17, 0(x2) # load 0xd2bd8481 from memory into f17
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f5, 0(x2) # load 0xffbfffff from memory into f5
fnmsub.s f14, f11, f17, f5, dyn # perform operation
fnmsub.s f14, f11, f17, f5, rdn # perform operation
fnmsub.s f14, f11, f17, f5, rmm # perform operation
fnmsub.s f14, f11, f17, f5, rne # perform operation
fnmsub.s f14, f11, f17, f5, rtz # perform operation
fnmsub.s f14, f11, f17, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f14, f11, f17, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f14, f11, f17, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f14, f11, f17, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f14, f11, f17, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f14, f11, f17, f5 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0x7ef8654f)
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f8, 0(x2) # load 0x813d9ab0 from memory into f8
la x2, scratch
li x3, 0x2e15ffdb # load x3 with value 0x2e15ffdb
sw x3, 0(x2) # store 0x2e15ffdb in memory
flw f25, 0(x2) # load 0x2e15ffdb from memory into f25
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f1, 0(x2) # load 0x7ef8654f from memory into f1
fnmsub.s f19, f8, f25, f1, dyn # perform operation
fnmsub.s f19, f8, f25, f1, rdn # perform operation
fnmsub.s f19, f8, f25, f1, rmm # perform operation
fnmsub.s f19, f8, f25, f1, rne # perform operation
fnmsub.s f19, f8, f25, f1, rtz # perform operation
fnmsub.s f19, f8, f25, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f19, f8, f25, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f19, f8, f25, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f19, f8, f25, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f19, f8, f25, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f19, f8, f25, f1 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0x813d9ab0)
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f22, 0(x2) # load 0x813d9ab0 from memory into f22
la x2, scratch
li x3, 0xbd744678 # load x3 with value 0xbd744678
sw x3, 0(x2) # store 0xbd744678 in memory
flw f13, 0(x2) # load 0xbd744678 from memory into f13
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f24, 0(x2) # load 0x813d9ab0 from memory into f24
fnmsub.s f29, f22, f13, f24, dyn # perform operation
fnmsub.s f29, f22, f13, f24, rdn # perform operation
fnmsub.s f29, f22, f13, f24, rmm # perform operation
fnmsub.s f29, f22, f13, f24, rne # perform operation
fnmsub.s f29, f22, f13, f24, rtz # perform operation
fnmsub.s f29, f22, f13, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmsub.s f29, f22, f13, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmsub.s f29, f22, f13, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmsub.s f29, f22, f13, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmsub.s f29, f22, f13, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmsub.s f29, f22, f13, f24 # perform operation


.EQU SIGSIZE,0


 # testgen_footer.S


write_tohost:
    la t1, tohost
    li t0, 1
    sw t0, 0(t1)
    sw zero, 4(t1)

self_loop:
    j self_loop

.data

.align 4
scratch:
    .bss 136

.data 

.section .tohost 
tohost: # write to HTIF
    .dword 0
fromhost:
    .dword 0

.align 4
begin_signature:
    .fill SIGSIZE*8/__riscv_xlen,__riscv_xlen/8,0xdeadbeef
end_signature:

.end
