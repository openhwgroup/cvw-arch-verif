///////////////////////////////////////////
// SsstrictInstrS.S
//
// Written: Roman De Santos rdesantos@hmc.edu 8 April 2025
//
// Purpose: Functional coverage test for Ssstrict Illegal instructions in S mode
//
// SPDX-License-Identifier: Apache-2.0 WITH SHL-2.1
///////////////////////////////////////////

#include "WALLY-init-lib.h"

main:

    # set up fast trap handler for uncompressed illegal instructions
    # because Zicsr tests will throw a lot of illegal instruction traps while attempting to access CSRs
    # This cuts the instruction count and runtime by nearly 2x
    # However, don't blindly use this handler in other privileged tests
    # Note this uses the normal trap handler if the instruction is compressed
    la t0, trap_handler_fastuncompressedillegalinstr
    csrw mtvec, t0

    # turn on extensions to reduce unnecessary exceptions
    li t0, 1
    slli t1, t0, 13
    csrs mstatus, t1    # turn on floating-point with mstatus.FS
    slli t1, t0, 9
    csrs mstatus, t1    # turn on vector (if applicable) with mstatus.VS

/////////////////////////////////
// Autogenerated code included from illegalinstrtests.py to hit the following coverpoints
// cp_illegal_instruction               Test all legal/illegal uncompressed instructions
// cp_illegal_compressed_instruction    Test all legal/illegal compressed instructions
/////////////////////////////////

//load into supervisor mode
li a0, 1
ecall

# include "ExceptionInstr-Tests.h"
# include "ExceptionInstrCompressed-Tests.h"

finish:
    j done
