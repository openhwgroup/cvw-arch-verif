//
// Copyright (C) 2024 Harvey Mudd College & Oklahoma State University, Habib University, UET Lahore
//
// SPDX-License-Identifier: Apache-2.0 WITH SHL-2.1
///////////////////////////////////////////

#include "macros.h"

.section .text.init
.globl rvtest_entry_point

rvtest_entry_point:

# initialize signature pointer
la x4, begin_signature

    

// ******************
// Tests from: WALLY-COV-amominu.d.S
// ******************


# initialize signature pointer
la x4, begin_signature

    
# Testcase cp_rs1 (Test source rs1 = x1)
li x25, 0x6c645d9f5cf00a11 # load random value
la x1, scratch # base address
sd x25, 0(x1) # store in memory
li x25, 0x36caaea9e65d95a5 # load another value into integer register
amominu.d x12, x25, (x1) # perform operation

# Testcase cp_rs1 (Test source rs1 = x2)
li x11, 0xd4e837ee97612427 # load random value
la x2, scratch # base address
sd x11, 0(x2) # store in memory
li x11, 0xa526ad79ad9ef0f8 # load another value into integer register
amominu.d x27, x11, (x2) # perform operation

# Testcase cp_rs1 (Test source rs1 = x3)
li x13, 0xefd48c24deabf719 # load random value
la x3, scratch # base address
sd x13, 0(x3) # store in memory
li x13, 0xbed0d4b634e86feb # load another value into integer register
amominu.d x7, x13, (x3) # perform operation

# Testcase cp_rs1 (Test source rs1 = x4)
mv x5, x4 # switch signature pointer register to avoid conflict with test
li x19, 0xe5c833002ed997b6 # load random value
la x4, scratch # base address
sd x19, 0(x4) # store in memory
li x19, 0x6966ff62515d7d64 # load another value into integer register
amominu.d x21, x19, (x4) # perform operation

# Testcase cp_rs1 (Test source rs1 = x5)
mv x6, x5 # switch signature pointer register to avoid conflict with test
li x22, 0x35b063637037fac5 # load random value
la x5, scratch # base address
sd x22, 0(x5) # store in memory
li x22, 0xa800b9af77884189 # load another value into integer register
amominu.d x26, x22, (x5) # perform operation

# Testcase cp_rs1 (Test source rs1 = x6)
mv x7, x6 # switch signature pointer register to avoid conflict with test
li x8, 0xd49383a7463881ba # load random value
la x6, scratch # base address
sd x8, 0(x6) # store in memory
li x8, 0x15f71b6fc3206ad8 # load another value into integer register
amominu.d x30, x8, (x6) # perform operation

# Testcase cp_rs1 (Test source rs1 = x7)
mv x4, x7 # switch signature pointer register to avoid conflict with test
li x22, 0xa01351745fc66d8d # load random value
la x7, scratch # base address
sd x22, 0(x7) # store in memory
li x22, 0x5ab516a2b7c7b5f2 # load another value into integer register
amominu.d x1, x22, (x7) # perform operation

# Testcase cp_rs1 (Test source rs1 = x8)
li x19, 0x422572a2c7292721 # load random value
la x8, scratch # base address
sd x19, 0(x8) # store in memory
li x19, 0x6e370f3d2015ef53 # load another value into integer register
amominu.d x7, x19, (x8) # perform operation

# Testcase cp_rs1 (Test source rs1 = x9)
li x22, 0x83026326843e5a48 # load random value
la x9, scratch # base address
sd x22, 0(x9) # store in memory
li x22, 0x1bacb7115c7d938f # load another value into integer register
amominu.d x20, x22, (x9) # perform operation

# Testcase cp_rs1 (Test source rs1 = x10)
li x7, 0x443739919943bdfb # load random value
la x10, scratch # base address
sd x7, 0(x10) # store in memory
li x7, 0x9d7951ab71b2bf9e # load another value into integer register
amominu.d x28, x7, (x10) # perform operation

# Testcase cp_rs1 (Test source rs1 = x11)
li x24, 0x4be234f2153a2206 # load random value
la x11, scratch # base address
sd x24, 0(x11) # store in memory
li x24, 0x8e056d34faf90472 # load another value into integer register
amominu.d x30, x24, (x11) # perform operation

# Testcase cp_rs1 (Test source rs1 = x12)
li x2, 0x913d39caec4d4e76 # load random value
la x12, scratch # base address
sd x2, 0(x12) # store in memory
li x2, 0x8c013d001444a2c4 # load another value into integer register
amominu.d x1, x2, (x12) # perform operation

# Testcase cp_rs1 (Test source rs1 = x13)
li x31, 0x734baa4a0648bf63 # load random value
la x13, scratch # base address
sd x31, 0(x13) # store in memory
li x31, 0xbbad6b52778b1390 # load another value into integer register
amominu.d x12, x31, (x13) # perform operation

# Testcase cp_rs1 (Test source rs1 = x14)
li x9, 0x131ad8d08365f254 # load random value
la x14, scratch # base address
sd x9, 0(x14) # store in memory
li x9, 0x0072105e0abe3a3c # load another value into integer register
amominu.d x25, x9, (x14) # perform operation

# Testcase cp_rs1 (Test source rs1 = x15)
li x22, 0x7faf847196b30319 # load random value
la x15, scratch # base address
sd x22, 0(x15) # store in memory
li x22, 0x431c8eb68cf1f6ec # load another value into integer register
amominu.d x27, x22, (x15) # perform operation

# Testcase cp_rs1 (Test source rs1 = x16)
li x5, 0xcf6f5100162e0ec5 # load random value
la x16, scratch # base address
sd x5, 0(x16) # store in memory
li x5, 0xa8a8c31d28c53365 # load another value into integer register
amominu.d x11, x5, (x16) # perform operation

# Testcase cp_rs1 (Test source rs1 = x17)
li x26, 0xe507536861dfe61d # load random value
la x17, scratch # base address
sd x26, 0(x17) # store in memory
li x26, 0x1490da7dc405ff7d # load another value into integer register
amominu.d x7, x26, (x17) # perform operation

# Testcase cp_rs1 (Test source rs1 = x18)
li x14, 0x772cc7768759a4df # load random value
la x18, scratch # base address
sd x14, 0(x18) # store in memory
li x14, 0xa4b275f858d0974a # load another value into integer register
amominu.d x16, x14, (x18) # perform operation

# Testcase cp_rs1 (Test source rs1 = x19)
li x16, 0x0c9743f9ee78611f # load random value
la x19, scratch # base address
sd x16, 0(x19) # store in memory
li x16, 0x3755c3016e23f1fb # load another value into integer register
amominu.d x15, x16, (x19) # perform operation

# Testcase cp_rs1 (Test source rs1 = x20)
li x12, 0xe852f7f45359460f # load random value
la x20, scratch # base address
sd x12, 0(x20) # store in memory
li x12, 0x82832523bef381ae # load another value into integer register
amominu.d x19, x12, (x20) # perform operation

# Testcase cp_rs1 (Test source rs1 = x21)
li x9, 0x09d5abc65a013179 # load random value
la x21, scratch # base address
sd x9, 0(x21) # store in memory
li x9, 0xedab4f5d73ce7f1b # load another value into integer register
amominu.d x30, x9, (x21) # perform operation

# Testcase cp_rs1 (Test source rs1 = x22)
li x7, 0x87d4c2e32cca2f89 # load random value
la x22, scratch # base address
sd x7, 0(x22) # store in memory
li x7, 0x7dd68b881bfbadc3 # load another value into integer register
amominu.d x14, x7, (x22) # perform operation

# Testcase cp_rs1 (Test source rs1 = x23)
li x26, 0x20645060f35890ac # load random value
la x23, scratch # base address
sd x26, 0(x23) # store in memory
li x26, 0xfd9f51489d8bd86d # load another value into integer register
amominu.d x7, x26, (x23) # perform operation

# Testcase cp_rs1 (Test source rs1 = x24)
li x17, 0x8ea9ade1d9fd3654 # load random value
la x24, scratch # base address
sd x17, 0(x24) # store in memory
li x17, 0x201b9ca30cd67b7a # load another value into integer register
amominu.d x27, x17, (x24) # perform operation

# Testcase cp_rs1 (Test source rs1 = x25)
li x9, 0x6a3f1d44ab9bfb9b # load random value
la x25, scratch # base address
sd x9, 0(x25) # store in memory
li x9, 0x405fc1ec007663f0 # load another value into integer register
amominu.d x27, x9, (x25) # perform operation

# Testcase cp_rs1 (Test source rs1 = x26)
li x5, 0x2edd025fdbfe127e # load random value
la x26, scratch # base address
sd x5, 0(x26) # store in memory
li x5, 0xf002b9679edc95fc # load another value into integer register
amominu.d x22, x5, (x26) # perform operation

# Testcase cp_rs1 (Test source rs1 = x27)
li x13, 0x4858256470236de0 # load random value
la x27, scratch # base address
sd x13, 0(x27) # store in memory
li x13, 0xd2ff62c975478f34 # load another value into integer register
amominu.d x30, x13, (x27) # perform operation

# Testcase cp_rs1 (Test source rs1 = x28)
li x6, 0xb0ec068f388038b6 # load random value
la x28, scratch # base address
sd x6, 0(x28) # store in memory
li x6, 0x1414073750f7f002 # load another value into integer register
amominu.d x1, x6, (x28) # perform operation

# Testcase cp_rs1 (Test source rs1 = x29)
li x16, 0x9b4403ca5226244f # load random value
la x29, scratch # base address
sd x16, 0(x29) # store in memory
li x16, 0x7af1ccb77096ba0c # load another value into integer register
amominu.d x7, x16, (x29) # perform operation

# Testcase cp_rs1 (Test source rs1 = x30)
li x9, 0x325034ff57a0cd05 # load random value
la x30, scratch # base address
sd x9, 0(x30) # store in memory
li x9, 0x087693bf686c360a # load another value into integer register
amominu.d x11, x9, (x30) # perform operation

# Testcase cp_rs1 (Test source rs1 = x31)
li x11, 0xa0365afd1d8f5d54 # load random value
la x31, scratch # base address
sd x11, 0(x31) # store in memory
li x11, 0xbcfc64862e885250 # load another value into integer register
amominu.d x14, x11, (x31) # perform operation

# Testcase cp_rs2 (Test source rs2 = x0)
li x0, 0x2fd998d7cd74f009 # load random value
la x22, scratch # base address
sd x0, 0(x22) # store in memory
li x0, 0x31c7009ad3571e3f # load another value into integer register
amominu.d x28, x0, (x22) # perform operation

# Testcase cp_rs2 (Test source rs2 = x1)
li x1, 0x8de2378e2c7cbbee # load random value
la x24, scratch # base address
sd x1, 0(x24) # store in memory
li x1, 0xb542b6e5ca7ec10e # load another value into integer register
amominu.d x23, x1, (x24) # perform operation

# Testcase cp_rs2 (Test source rs2 = x2)
li x2, 0x9467ccebb14e5d8c # load random value
la x19, scratch # base address
sd x2, 0(x19) # store in memory
li x2, 0x0b64d1092d1ffba8 # load another value into integer register
amominu.d x24, x2, (x19) # perform operation

# Testcase cp_rs2 (Test source rs2 = x3)
li x3, 0x8ed7af81182d7d5b # load random value
la x11, scratch # base address
sd x3, 0(x11) # store in memory
li x3, 0xed426f6b7943ab69 # load another value into integer register
amominu.d x1, x3, (x11) # perform operation

# Testcase cp_rs2 (Test source rs2 = x4)
mv x5, x4 # switch signature pointer register to avoid conflict with test
li x4, 0x0480a17eafed7c41 # load random value
la x29, scratch # base address
sd x4, 0(x29) # store in memory
li x4, 0x1249551c423d6d53 # load another value into integer register
amominu.d x23, x4, (x29) # perform operation

# Testcase cp_rs2 (Test source rs2 = x5)
mv x6, x5 # switch signature pointer register to avoid conflict with test
li x5, 0x1586193e43e95a52 # load random value
la x20, scratch # base address
sd x5, 0(x20) # store in memory
li x5, 0x837c85b004595e0a # load another value into integer register
amominu.d x8, x5, (x20) # perform operation

# Testcase cp_rs2 (Test source rs2 = x6)
mv x7, x6 # switch signature pointer register to avoid conflict with test
li x6, 0x0d6009e3bb341f49 # load random value
la x24, scratch # base address
sd x6, 0(x24) # store in memory
li x6, 0x3364ea960eeaa745 # load another value into integer register
amominu.d x16, x6, (x24) # perform operation

# Testcase cp_rs2 (Test source rs2 = x7)
mv x4, x7 # switch signature pointer register to avoid conflict with test
li x7, 0x05f0cc234dc0a466 # load random value
la x17, scratch # base address
sd x7, 0(x17) # store in memory
li x7, 0x4410b153367165bb # load another value into integer register
amominu.d x22, x7, (x17) # perform operation

# Testcase cp_rs2 (Test source rs2 = x8)
li x8, 0x6d02e5555032b55d # load random value
la x14, scratch # base address
sd x8, 0(x14) # store in memory
li x8, 0x0f6b440768a7eba1 # load another value into integer register
amominu.d x2, x8, (x14) # perform operation

# Testcase cp_rs2 (Test source rs2 = x9)
li x9, 0x11ae7fb9688f6ec7 # load random value
la x30, scratch # base address
sd x9, 0(x30) # store in memory
li x9, 0x40cd581c7cb3d6c9 # load another value into integer register
amominu.d x26, x9, (x30) # perform operation

# Testcase cp_rs2 (Test source rs2 = x10)
li x10, 0x100e310b0892873a # load random value
la x16, scratch # base address
sd x10, 0(x16) # store in memory
li x10, 0xd50214e608f2143a # load another value into integer register
amominu.d x25, x10, (x16) # perform operation

# Testcase cp_rs2 (Test source rs2 = x11)
li x11, 0x5eb84b1fb6aab5fd # load random value
la x3, scratch # base address
sd x11, 0(x3) # store in memory
li x11, 0xd8225fbca63bcfc3 # load another value into integer register
amominu.d x9, x11, (x3) # perform operation

# Testcase cp_rs2 (Test source rs2 = x12)
li x12, 0x8568aefafdff5bcb # load random value
la x1, scratch # base address
sd x12, 0(x1) # store in memory
li x12, 0x5a153b9ce75c9f5d # load another value into integer register
amominu.d x29, x12, (x1) # perform operation

# Testcase cp_rs2 (Test source rs2 = x13)
li x13, 0x93fe70738feaa03c # load random value
la x30, scratch # base address
sd x13, 0(x30) # store in memory
li x13, 0xd3a483aa98d3ec84 # load another value into integer register
amominu.d x19, x13, (x30) # perform operation

# Testcase cp_rs2 (Test source rs2 = x14)
li x14, 0x8733c4a0aac8636c # load random value
la x27, scratch # base address
sd x14, 0(x27) # store in memory
li x14, 0xc11f18e5408ce89f # load another value into integer register
amominu.d x2, x14, (x27) # perform operation

# Testcase cp_rs2 (Test source rs2 = x15)
li x15, 0x96f5cdc033b8295e # load random value
la x30, scratch # base address
sd x15, 0(x30) # store in memory
li x15, 0x5f60cd0d02adb281 # load another value into integer register
amominu.d x6, x15, (x30) # perform operation

# Testcase cp_rs2 (Test source rs2 = x16)
li x16, 0x1f141dc3deb4d7a7 # load random value
la x25, scratch # base address
sd x16, 0(x25) # store in memory
li x16, 0x3d59540915d96b60 # load another value into integer register
amominu.d x26, x16, (x25) # perform operation

# Testcase cp_rs2 (Test source rs2 = x17)
li x17, 0x5edf93ba6f2b0c52 # load random value
la x28, scratch # base address
sd x17, 0(x28) # store in memory
li x17, 0xa0cf43c2d2e8fcba # load another value into integer register
amominu.d x8, x17, (x28) # perform operation

# Testcase cp_rs2 (Test source rs2 = x18)
li x18, 0x0f4eee6fc169d9f1 # load random value
la x3, scratch # base address
sd x18, 0(x3) # store in memory
li x18, 0x0c3eb1665aaa214a # load another value into integer register
amominu.d x25, x18, (x3) # perform operation

# Testcase cp_rs2 (Test source rs2 = x19)
li x19, 0xd17bf2e5db39c783 # load random value
la x3, scratch # base address
sd x19, 0(x3) # store in memory
li x19, 0xb2b88ad090293fb0 # load another value into integer register
amominu.d x30, x19, (x3) # perform operation

# Testcase cp_rs2 (Test source rs2 = x20)
li x20, 0xb4314b3488a670f0 # load random value
la x3, scratch # base address
sd x20, 0(x3) # store in memory
li x20, 0x512852fdf463f6b7 # load another value into integer register
amominu.d x25, x20, (x3) # perform operation

# Testcase cp_rs2 (Test source rs2 = x21)
li x21, 0x169227e717a22e10 # load random value
la x23, scratch # base address
sd x21, 0(x23) # store in memory
li x21, 0x0715c4324362f111 # load another value into integer register
amominu.d x5, x21, (x23) # perform operation

# Testcase cp_rs2 (Test source rs2 = x22)
li x22, 0xc645f5cc1c1ac044 # load random value
la x13, scratch # base address
sd x22, 0(x13) # store in memory
li x22, 0x5c647db13762d3b2 # load another value into integer register
amominu.d x9, x22, (x13) # perform operation

# Testcase cp_rs2 (Test source rs2 = x23)
li x23, 0x3791a69486e422d5 # load random value
la x13, scratch # base address
sd x23, 0(x13) # store in memory
li x23, 0xad24b6f1db09778c # load another value into integer register
amominu.d x15, x23, (x13) # perform operation

# Testcase cp_rs2 (Test source rs2 = x24)
li x24, 0x234ff64f941c2971 # load random value
la x3, scratch # base address
sd x24, 0(x3) # store in memory
li x24, 0xa2538443b53e475c # load another value into integer register
amominu.d x8, x24, (x3) # perform operation

# Testcase cp_rs2 (Test source rs2 = x25)
li x25, 0x5e5de89fc7b15b40 # load random value
la x23, scratch # base address
sd x25, 0(x23) # store in memory
li x25, 0x8525911caf8942e0 # load another value into integer register
amominu.d x29, x25, (x23) # perform operation

# Testcase cp_rs2 (Test source rs2 = x26)
li x26, 0x945b48a957003cc4 # load random value
la x5, scratch # base address
sd x26, 0(x5) # store in memory
li x26, 0x0d439ed2d68aa092 # load another value into integer register
amominu.d x25, x26, (x5) # perform operation

# Testcase cp_rs2 (Test source rs2 = x27)
li x27, 0x8acdfb9360341cf6 # load random value
la x2, scratch # base address
sd x27, 0(x2) # store in memory
li x27, 0x087ddfe4c7caad27 # load another value into integer register
amominu.d x5, x27, (x2) # perform operation

# Testcase cp_rs2 (Test source rs2 = x28)
li x28, 0x3cfd0dd93a1e602d # load random value
la x16, scratch # base address
sd x28, 0(x16) # store in memory
li x28, 0x84c9c0e4dbd32e9a # load another value into integer register
amominu.d x2, x28, (x16) # perform operation

# Testcase cp_rs2 (Test source rs2 = x29)
li x29, 0x6bc4cdb7bef4f1c8 # load random value
la x27, scratch # base address
sd x29, 0(x27) # store in memory
li x29, 0xacfd4b208dd216a0 # load another value into integer register
amominu.d x8, x29, (x27) # perform operation

# Testcase cp_rs2 (Test source rs2 = x30)
li x30, 0x5b9ee93dfa4f611f # load random value
la x27, scratch # base address
sd x30, 0(x27) # store in memory
li x30, 0xa9dcc9be0541ef89 # load another value into integer register
amominu.d x8, x30, (x27) # perform operation

# Testcase cp_rs2 (Test source rs2 = x31)
li x31, 0x0f4b0308db295fb6 # load random value
la x28, scratch # base address
sd x31, 0(x28) # store in memory
li x31, 0xee0b8ba91b664b3f # load another value into integer register
amominu.d x12, x31, (x28) # perform operation

# Testcase cp_rd (Test destination rd = x0)
li x12, 0xaefa2bec5865ded7 # load random value
la x17, scratch # base address
sd x12, 0(x17) # store in memory
li x12, 0x9ad23b6577c06cb3 # load another value into integer register
amominu.d x0, x12, (x17) # perform operation

# Testcase cp_rd (Test destination rd = x1)
li x9, 0x142805126d81f800 # load random value
la x30, scratch # base address
sd x9, 0(x30) # store in memory
li x9, 0x43f2073810d5cac1 # load another value into integer register
amominu.d x1, x9, (x30) # perform operation

# Testcase cp_rd (Test destination rd = x2)
li x25, 0xe3719a06268d0f9d # load random value
la x12, scratch # base address
sd x25, 0(x12) # store in memory
li x25, 0x1cafac958a239590 # load another value into integer register
amominu.d x2, x25, (x12) # perform operation

# Testcase cp_rd (Test destination rd = x3)
li x15, 0x3331a2b156e82763 # load random value
la x21, scratch # base address
sd x15, 0(x21) # store in memory
li x15, 0xc20a67dd65ed7f14 # load another value into integer register
amominu.d x3, x15, (x21) # perform operation

# Testcase cp_rd (Test destination rd = x4)
mv x5, x4 # switch signature pointer register to avoid conflict with test
li x15, 0xb6113eb6636b26aa # load random value
la x1, scratch # base address
sd x15, 0(x1) # store in memory
li x15, 0x535e313bb79e645b # load another value into integer register
amominu.d x4, x15, (x1) # perform operation

# Testcase cp_rd (Test destination rd = x5)
mv x6, x5 # switch signature pointer register to avoid conflict with test
li x14, 0x33f8b9a8312c0454 # load random value
la x4, scratch # base address
sd x14, 0(x4) # store in memory
li x14, 0x055da0bb911f052f # load another value into integer register
amominu.d x5, x14, (x4) # perform operation

# Testcase cp_rd (Test destination rd = x6)
mv x7, x6 # switch signature pointer register to avoid conflict with test
li x29, 0xf7b45a2d12239ac0 # load random value
la x9, scratch # base address
sd x29, 0(x9) # store in memory
li x29, 0x800c9d22a6fefb67 # load another value into integer register
amominu.d x6, x29, (x9) # perform operation

# Testcase cp_rd (Test destination rd = x7)
mv x4, x7 # switch signature pointer register to avoid conflict with test
li x19, 0x294c48bb2f1be489 # load random value
la x6, scratch # base address
sd x19, 0(x6) # store in memory
li x19, 0x50d5093e0bf6643b # load another value into integer register
amominu.d x7, x19, (x6) # perform operation

# Testcase cp_rd (Test destination rd = x8)
li x28, 0x87c596bb26ff8506 # load random value
la x25, scratch # base address
sd x28, 0(x25) # store in memory
li x28, 0x3901ccb1b45be1ab # load another value into integer register
amominu.d x8, x28, (x25) # perform operation

# Testcase cp_rd (Test destination rd = x9)
li x20, 0xfe247473a8c70ed1 # load random value
la x24, scratch # base address
sd x20, 0(x24) # store in memory
li x20, 0xd5f5eb7fd4aaef11 # load another value into integer register
amominu.d x9, x20, (x24) # perform operation

# Testcase cp_rd (Test destination rd = x10)
li x13, 0x6663788dbd3d8d8e # load random value
la x23, scratch # base address
sd x13, 0(x23) # store in memory
li x13, 0x57a06e49d82ee3b1 # load another value into integer register
amominu.d x10, x13, (x23) # perform operation

# Testcase cp_rd (Test destination rd = x11)
li x3, 0xc366c65630ee4845 # load random value
la x30, scratch # base address
sd x3, 0(x30) # store in memory
li x3, 0xc6da022a05520f51 # load another value into integer register
amominu.d x11, x3, (x30) # perform operation

# Testcase cp_rd (Test destination rd = x12)
li x28, 0x2dc2583779662e87 # load random value
la x12, scratch # base address
sd x28, 0(x12) # store in memory
li x28, 0x6e34e90c3b644988 # load another value into integer register
amominu.d x12, x28, (x12) # perform operation

# Testcase cp_rd (Test destination rd = x13)
li x31, 0x522810f88c4248ab # load random value
la x3, scratch # base address
sd x31, 0(x3) # store in memory
li x31, 0x63472749ddc56bb8 # load another value into integer register
amominu.d x13, x31, (x3) # perform operation

# Testcase cp_rd (Test destination rd = x14)
li x17, 0xff5e07a1db28ef78 # load random value
la x24, scratch # base address
sd x17, 0(x24) # store in memory
li x17, 0xc6d69af4006e7e50 # load another value into integer register
amominu.d x14, x17, (x24) # perform operation

# Testcase cp_rd (Test destination rd = x15)
li x26, 0xee2bc18e659070f9 # load random value
la x29, scratch # base address
sd x26, 0(x29) # store in memory
li x26, 0x7c236119cf44614a # load another value into integer register
amominu.d x15, x26, (x29) # perform operation

# Testcase cp_rd (Test destination rd = x16)
li x21, 0x5fedb920aaf94f6e # load random value
la x28, scratch # base address
sd x21, 0(x28) # store in memory
li x21, 0x90f42e29d7978ef4 # load another value into integer register
amominu.d x16, x21, (x28) # perform operation

# Testcase cp_rd (Test destination rd = x17)
li x19, 0xaca2bf03df67c132 # load random value
la x2, scratch # base address
sd x19, 0(x2) # store in memory
li x19, 0xd122263459ab2779 # load another value into integer register
amominu.d x17, x19, (x2) # perform operation

# Testcase cp_rd (Test destination rd = x18)
li x3, 0xa0bbc83f900e9b6b # load random value
la x16, scratch # base address
sd x3, 0(x16) # store in memory
li x3, 0x7da923b60d79465c # load another value into integer register
amominu.d x18, x3, (x16) # perform operation

# Testcase cp_rd (Test destination rd = x19)
li x8, 0x1d1f06fa4c09ca2d # load random value
la x18, scratch # base address
sd x8, 0(x18) # store in memory
li x8, 0x55b2d144ef8c6fda # load another value into integer register
amominu.d x19, x8, (x18) # perform operation

# Testcase cp_rd (Test destination rd = x20)
li x21, 0xabf10b45211c8126 # load random value
la x23, scratch # base address
sd x21, 0(x23) # store in memory
li x21, 0x9e9126d6ba5ec08f # load another value into integer register
amominu.d x20, x21, (x23) # perform operation

# Testcase cp_rd (Test destination rd = x21)
li x27, 0x5370730cc504d2f4 # load random value
la x16, scratch # base address
sd x27, 0(x16) # store in memory
li x27, 0x8598dfc7031df7db # load another value into integer register
amominu.d x21, x27, (x16) # perform operation

# Testcase cp_rd (Test destination rd = x22)
li x17, 0x36706d68cc05ae04 # load random value
la x19, scratch # base address
sd x17, 0(x19) # store in memory
li x17, 0x2010fc1f5d522ddd # load another value into integer register
amominu.d x22, x17, (x19) # perform operation

# Testcase cp_rd (Test destination rd = x23)
li x28, 0xaa6825fca9cbcdd2 # load random value
la x1, scratch # base address
sd x28, 0(x1) # store in memory
li x28, 0xebeb280033be5185 # load another value into integer register
amominu.d x23, x28, (x1) # perform operation

# Testcase cp_rd (Test destination rd = x24)
li x25, 0x48260aa9b1c30446 # load random value
la x6, scratch # base address
sd x25, 0(x6) # store in memory
li x25, 0x8f39537c967a5b9a # load another value into integer register
amominu.d x24, x25, (x6) # perform operation

# Testcase cp_rd (Test destination rd = x25)
li x12, 0x08352a8ebed69032 # load random value
la x31, scratch # base address
sd x12, 0(x31) # store in memory
li x12, 0xcd672b903f88edec # load another value into integer register
amominu.d x25, x12, (x31) # perform operation

# Testcase cp_rd (Test destination rd = x26)
li x2, 0x023ac56815c78fe8 # load random value
la x22, scratch # base address
sd x2, 0(x22) # store in memory
li x2, 0xb3af4ab00ef97758 # load another value into integer register
amominu.d x26, x2, (x22) # perform operation

# Testcase cp_rd (Test destination rd = x27)
li x6, 0x1203ea22d605fa0f # load random value
la x16, scratch # base address
sd x6, 0(x16) # store in memory
li x6, 0xcbb31bb9cd3a15e7 # load another value into integer register
amominu.d x27, x6, (x16) # perform operation

# Testcase cp_rd (Test destination rd = x28)
li x18, 0x12cc48d0f72a8d78 # load random value
la x25, scratch # base address
sd x18, 0(x25) # store in memory
li x18, 0x354b4ee43b75b02c # load another value into integer register
amominu.d x28, x18, (x25) # perform operation

# Testcase cp_rd (Test destination rd = x29)
li x18, 0x6b08d47737f5892b # load random value
la x21, scratch # base address
sd x18, 0(x21) # store in memory
li x18, 0x5d7db56f99913ae0 # load another value into integer register
amominu.d x29, x18, (x21) # perform operation

# Testcase cp_rd (Test destination rd = x30)
li x18, 0xff24a3653fed1b43 # load random value
la x16, scratch # base address
sd x18, 0(x16) # store in memory
li x18, 0x176a06ff826e0916 # load another value into integer register
amominu.d x30, x18, (x16) # perform operation

# Testcase cp_rd (Test destination rd = x31)
li x30, 0xd2ff2168d0b32e18 # load random value
la x22, scratch # base address
sd x30, 0(x22) # store in memory
li x30, 0x640fcd49e4826bde # load another value into integer register
amominu.d x31, x30, (x22) # perform operation

# Testcase cp_rs2_corners (Test source rs2 value = 0x0)
li x19, 0x5dfac5e7a6ad041e # load random value
la x24, scratch # base address
sd x19, 0(x24) # store in memory
li x19, 0x0000000000000000 # load another value into integer register
amominu.d x9, x19, (x24) # perform operation

# Testcase cp_rs2_corners (Test source rs2 value = 0x1)
li x21, 0xa6508c92362294eb # load random value
la x25, scratch # base address
sd x21, 0(x25) # store in memory
li x21, 0x0000000000000001 # load another value into integer register
amominu.d x1, x21, (x25) # perform operation

# Testcase cp_rs2_corners (Test source rs2 value = 0x2)
li x5, 0x1a5cf6be4a0bd640 # load random value
la x7, scratch # base address
sd x5, 0(x7) # store in memory
li x5, 0x0000000000000002 # load another value into integer register
amominu.d x30, x5, (x7) # perform operation

# Testcase cp_rs2_corners (Test source rs2 value = 0x8000000000000000)
li x27, 0xf3dac63aee155b6f # load random value
la x20, scratch # base address
sd x27, 0(x20) # store in memory
li x27, 0x8000000000000000 # load another value into integer register
amominu.d x31, x27, (x20) # perform operation

# Testcase cp_rs2_corners (Test source rs2 value = 0x8000000000000001)
li x27, 0xe3e03692804378cb # load random value
la x2, scratch # base address
sd x27, 0(x2) # store in memory
li x27, 0x8000000000000001 # load another value into integer register
amominu.d x23, x27, (x2) # perform operation

# Testcase cp_rs2_corners (Test source rs2 value = 0x7fffffffffffffff)
li x2, 0x0193f8479a414bd1 # load random value
la x5, scratch # base address
sd x2, 0(x5) # store in memory
li x2, 0x7fffffffffffffff # load another value into integer register
amominu.d x30, x2, (x5) # perform operation

# Testcase cp_rs2_corners (Test source rs2 value = 0x7ffffffffffffffe)
li x18, 0x474692e748d8825a # load random value
la x30, scratch # base address
sd x18, 0(x30) # store in memory
li x18, 0x7ffffffffffffffe # load another value into integer register
amominu.d x9, x18, (x30) # perform operation

# Testcase cp_rs2_corners (Test source rs2 value = 0xffffffffffffffff)
li x15, 0xdfa8ddaf63588c6b # load random value
la x28, scratch # base address
sd x15, 0(x28) # store in memory
li x15, 0xffffffffffffffff # load another value into integer register
amominu.d x2, x15, (x28) # perform operation

# Testcase cp_rs2_corners (Test source rs2 value = 0xfffffffffffffffe)
li x11, 0x54bd9de110841519 # load random value
la x20, scratch # base address
sd x11, 0(x20) # store in memory
li x11, 0xfffffffffffffffe # load another value into integer register
amominu.d x18, x11, (x20) # perform operation

# Testcase cp_rs2_corners (Test source rs2 value = 0x5bbc887763ae86f2)
li x9, 0xfe9a6c99321b7019 # load random value
la x15, scratch # base address
sd x9, 0(x15) # store in memory
li x9, 0x5bbc887763ae86f2 # load another value into integer register
amominu.d x13, x9, (x15) # perform operation

# Testcase cp_rs2_corners (Test source rs2 value = 0xaaaaaaaaaaaaaaaa)
li x31, 0x54db5ed6c621ac49 # load random value
la x12, scratch # base address
sd x31, 0(x12) # store in memory
li x31, 0xaaaaaaaaaaaaaaaa # load another value into integer register
amominu.d x20, x31, (x12) # perform operation

# Testcase cp_rs2_corners (Test source rs2 value = 0x5555555555555555)
li x23, 0x71db252c157a1085 # load random value
la x24, scratch # base address
sd x23, 0(x24) # store in memory
li x23, 0x5555555555555555 # load another value into integer register
amominu.d x30, x23, (x24) # perform operation

# Testcase cp_rs2_corners (Test source rs2 value = 0xffffffff)
li x20, 0xd8a1ec49f6d78226 # load random value
la x7, scratch # base address
sd x20, 0(x7) # store in memory
li x20, 0x00000000ffffffff # load another value into integer register
amominu.d x10, x20, (x7) # perform operation

# Testcase cp_rs2_corners (Test source rs2 value = 0xfffffffe)
li x17, 0x044ac7dd149e9ca0 # load random value
la x24, scratch # base address
sd x17, 0(x24) # store in memory
li x17, 0x00000000fffffffe # load another value into integer register
amominu.d x11, x17, (x24) # perform operation

# Testcase cp_rs2_corners (Test source rs2 value = 0x100000000)
li x27, 0xdbadabc6b438b25d # load random value
la x7, scratch # base address
sd x27, 0(x7) # store in memory
li x27, 0x0000000100000000 # load another value into integer register
amominu.d x20, x27, (x7) # perform operation

# Testcase cp_rs2_corners (Test source rs2 value = 0x100000001)
li x2, 0xdf9aff68f728075b # load random value
la x24, scratch # base address
sd x2, 0(x24) # store in memory
li x2, 0x0000000100000001 # load another value into integer register
amominu.d x17, x2, (x24) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x1)
li x1, 0xfaa3c477b01a74eb # load random value
la x1, scratch # base address
sd x1, 0(x1) # store in memory
amominu.d x22, x1, (x1) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x2)
li x2, 0x63fc9f3b53e10fd2 # load random value
la x2, scratch # base address
sd x2, 0(x2) # store in memory
amominu.d x20, x2, (x2) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x3)
li x3, 0xdd335bcca713d8b4 # load random value
la x3, scratch # base address
sd x3, 0(x3) # store in memory
amominu.d x10, x3, (x3) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x4)
mv x5, x4 # switch signature pointer register to avoid conflict with test
li x4, 0xf6191ae1e6809519 # load random value
la x4, scratch # base address
sd x4, 0(x4) # store in memory
amominu.d x20, x4, (x4) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x5)
mv x6, x5 # switch signature pointer register to avoid conflict with test
li x5, 0x41d09411696e209a # load random value
la x5, scratch # base address
sd x5, 0(x5) # store in memory
amominu.d x2, x5, (x5) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x6)
mv x7, x6 # switch signature pointer register to avoid conflict with test
li x6, 0x9c463791e2202123 # load random value
la x6, scratch # base address
sd x6, 0(x6) # store in memory
amominu.d x4, x6, (x6) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x7)
mv x4, x7 # switch signature pointer register to avoid conflict with test
li x7, 0x2b3d9af15dc186e8 # load random value
la x7, scratch # base address
sd x7, 0(x7) # store in memory
amominu.d x30, x7, (x7) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x8)
li x8, 0xf63eaab1e5e5b470 # load random value
la x8, scratch # base address
sd x8, 0(x8) # store in memory
amominu.d x29, x8, (x8) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x9)
li x9, 0xab63f66b169cb900 # load random value
la x9, scratch # base address
sd x9, 0(x9) # store in memory
amominu.d x30, x9, (x9) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x10)
li x10, 0x983777cae7cd5444 # load random value
la x10, scratch # base address
sd x10, 0(x10) # store in memory
amominu.d x14, x10, (x10) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x11)
li x11, 0x2ecc7879c10f40fc # load random value
la x11, scratch # base address
sd x11, 0(x11) # store in memory
amominu.d x1, x11, (x11) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x12)
li x12, 0x31c2ed3690fdce14 # load random value
la x12, scratch # base address
sd x12, 0(x12) # store in memory
amominu.d x23, x12, (x12) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x13)
li x13, 0xe284fda9bcb290f5 # load random value
la x13, scratch # base address
sd x13, 0(x13) # store in memory
amominu.d x19, x13, (x13) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x14)
li x14, 0xb5d06dc5cd26f207 # load random value
la x14, scratch # base address
sd x14, 0(x14) # store in memory
amominu.d x14, x14, (x14) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x15)
li x15, 0xf9911726ae8f5722 # load random value
la x15, scratch # base address
sd x15, 0(x15) # store in memory
amominu.d x18, x15, (x15) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x16)
li x16, 0x500daee1b44c8dc7 # load random value
la x16, scratch # base address
sd x16, 0(x16) # store in memory
amominu.d x19, x16, (x16) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x17)
li x17, 0x611c520f8775a0de # load random value
la x17, scratch # base address
sd x17, 0(x17) # store in memory
amominu.d x2, x17, (x17) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x18)
li x18, 0x4039636aba94e582 # load random value
la x18, scratch # base address
sd x18, 0(x18) # store in memory
amominu.d x23, x18, (x18) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x19)
li x19, 0x9d4f033afdd7703f # load random value
la x19, scratch # base address
sd x19, 0(x19) # store in memory
amominu.d x11, x19, (x19) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x20)
li x20, 0x709061f5c52fb5b4 # load random value
la x20, scratch # base address
sd x20, 0(x20) # store in memory
amominu.d x1, x20, (x20) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x21)
li x21, 0x1840c568ef3ac885 # load random value
la x21, scratch # base address
sd x21, 0(x21) # store in memory
amominu.d x1, x21, (x21) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x22)
li x22, 0x6a4f00ff113f0874 # load random value
la x22, scratch # base address
sd x22, 0(x22) # store in memory
amominu.d x21, x22, (x22) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x23)
li x23, 0xd72109675a2ae147 # load random value
la x23, scratch # base address
sd x23, 0(x23) # store in memory
amominu.d x29, x23, (x23) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x24)
li x24, 0xb215b04db6a8ab36 # load random value
la x24, scratch # base address
sd x24, 0(x24) # store in memory
amominu.d x15, x24, (x24) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x25)
li x25, 0xa36a0e2e16f7a58d # load random value
la x25, scratch # base address
sd x25, 0(x25) # store in memory
amominu.d x19, x25, (x25) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x26)
li x26, 0xc98488ee4cdfbf16 # load random value
la x26, scratch # base address
sd x26, 0(x26) # store in memory
amominu.d x28, x26, (x26) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x27)
li x27, 0xee32cb6f9be56151 # load random value
la x27, scratch # base address
sd x27, 0(x27) # store in memory
amominu.d x14, x27, (x27) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x28)
li x28, 0x3663f0c93594a48f # load random value
la x28, scratch # base address
sd x28, 0(x28) # store in memory
amominu.d x13, x28, (x28) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x29)
li x29, 0x96039677cf991f64 # load random value
la x29, scratch # base address
sd x29, 0(x29) # store in memory
amominu.d x16, x29, (x29) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x30)
li x30, 0x7f7fe1ea6cc54909 # load random value
la x30, scratch # base address
sd x30, 0(x30) # store in memory
amominu.d x15, x30, (x30) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x31)
li x31, 0xc89bfa375c753e4d # load random value
la x31, scratch # base address
sd x31, 0(x31) # store in memory
amominu.d x2, x31, (x31) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x1)
li x9, 0xdf450a406d22ff76 # load random value
la x1, scratch # base address
sd x9, 0(x1) # store in memory
li x9, 0x247b644cfdc73218 # load another value into integer register
amominu.d x1, x9, (x1) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x2)
li x15, 0xb2d09b1d1a7b7d6f # load random value
la x2, scratch # base address
sd x15, 0(x2) # store in memory
li x15, 0x38ba3d42bcaa03a9 # load another value into integer register
amominu.d x2, x15, (x2) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x3)
li x17, 0x373c4b0403725356 # load random value
la x3, scratch # base address
sd x17, 0(x3) # store in memory
li x17, 0x211b2fde6580b59b # load another value into integer register
amominu.d x3, x17, (x3) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x4)
mv x5, x4 # switch signature pointer register to avoid conflict with test
li x9, 0x64af05930c4761d5 # load random value
la x4, scratch # base address
sd x9, 0(x4) # store in memory
li x9, 0x4c0b4103d0ba100e # load another value into integer register
amominu.d x4, x9, (x4) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x5)
mv x6, x5 # switch signature pointer register to avoid conflict with test
li x19, 0x7971f73166a366db # load random value
la x5, scratch # base address
sd x19, 0(x5) # store in memory
li x19, 0x7e1c24c300c12364 # load another value into integer register
amominu.d x5, x19, (x5) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x6)
mv x7, x6 # switch signature pointer register to avoid conflict with test
li x28, 0x1f7586f5b5c16535 # load random value
la x6, scratch # base address
sd x28, 0(x6) # store in memory
li x28, 0x02c0d6244ff7850d # load another value into integer register
amominu.d x6, x28, (x6) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x7)
mv x4, x7 # switch signature pointer register to avoid conflict with test
li x11, 0x53bbe6055979103e # load random value
la x7, scratch # base address
sd x11, 0(x7) # store in memory
li x11, 0x889ee9cafa732981 # load another value into integer register
amominu.d x7, x11, (x7) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x8)
li x14, 0xdf514eca3e9d3985 # load random value
la x8, scratch # base address
sd x14, 0(x8) # store in memory
li x14, 0x2977fd958d95f4b9 # load another value into integer register
amominu.d x8, x14, (x8) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x9)
li x5, 0x66f3f9faca8aab84 # load random value
la x9, scratch # base address
sd x5, 0(x9) # store in memory
li x5, 0x7da76b98117259fc # load another value into integer register
amominu.d x9, x5, (x9) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x10)
li x9, 0xe8f6fb494f568870 # load random value
la x10, scratch # base address
sd x9, 0(x10) # store in memory
li x9, 0x7a6dde37727cdb7b # load another value into integer register
amominu.d x10, x9, (x10) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x11)
li x6, 0x92a2d8afc51fafdc # load random value
la x11, scratch # base address
sd x6, 0(x11) # store in memory
li x6, 0xfc80dd87b7b3db96 # load another value into integer register
amominu.d x11, x6, (x11) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x12)
li x9, 0x15e7a2b26f35fa55 # load random value
la x12, scratch # base address
sd x9, 0(x12) # store in memory
li x9, 0xa00db6507bcbc391 # load another value into integer register
amominu.d x12, x9, (x12) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x13)
li x26, 0x4a623969262d6e38 # load random value
la x13, scratch # base address
sd x26, 0(x13) # store in memory
li x26, 0x26670bb7363a6894 # load another value into integer register
amominu.d x13, x26, (x13) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x14)
li x23, 0x04082d246370bb18 # load random value
la x14, scratch # base address
sd x23, 0(x14) # store in memory
li x23, 0xa9ede56802e5f616 # load another value into integer register
amominu.d x14, x23, (x14) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x15)
li x28, 0xe4db6561c762fce2 # load random value
la x15, scratch # base address
sd x28, 0(x15) # store in memory
li x28, 0x7299ebd8dc662f36 # load another value into integer register
amominu.d x15, x28, (x15) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x16)
li x14, 0x4268152b10beb476 # load random value
la x16, scratch # base address
sd x14, 0(x16) # store in memory
li x14, 0xa4ea6e84f65c8c4b # load another value into integer register
amominu.d x16, x14, (x16) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x17)
li x14, 0xca06053783f5a828 # load random value
la x17, scratch # base address
sd x14, 0(x17) # store in memory
li x14, 0x22dadc570c829438 # load another value into integer register
amominu.d x17, x14, (x17) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x18)
li x26, 0x8128903167dd5881 # load random value
la x18, scratch # base address
sd x26, 0(x18) # store in memory
li x26, 0xc5adcf78dea879fd # load another value into integer register
amominu.d x18, x26, (x18) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x19)
li x7, 0xaa083e6dbf38fc61 # load random value
la x19, scratch # base address
sd x7, 0(x19) # store in memory
li x7, 0x9d6da73cfbaeb193 # load another value into integer register
amominu.d x19, x7, (x19) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x20)
li x23, 0xd2e591e8f87fc834 # load random value
la x20, scratch # base address
sd x23, 0(x20) # store in memory
li x23, 0x67c718d90f924d44 # load another value into integer register
amominu.d x20, x23, (x20) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x21)
li x26, 0xa5a3396ffd3fd3d8 # load random value
la x21, scratch # base address
sd x26, 0(x21) # store in memory
li x26, 0xd8681f52f88e1c31 # load another value into integer register
amominu.d x21, x26, (x21) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x22)
li x3, 0xe2a1588b390164d9 # load random value
la x22, scratch # base address
sd x3, 0(x22) # store in memory
li x3, 0x9d64742cde611b99 # load another value into integer register
amominu.d x22, x3, (x22) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x23)
li x11, 0xf2f5eae94972a358 # load random value
la x23, scratch # base address
sd x11, 0(x23) # store in memory
li x11, 0xc85bb0f618de640e # load another value into integer register
amominu.d x23, x11, (x23) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x24)
li x21, 0x51bad6ee417f3eb7 # load random value
la x24, scratch # base address
sd x21, 0(x24) # store in memory
li x21, 0x9362bce5dbdae430 # load another value into integer register
amominu.d x24, x21, (x24) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x25)
li x9, 0x55b09235a75cb8ec # load random value
la x25, scratch # base address
sd x9, 0(x25) # store in memory
li x9, 0x125533d3d79ec7f8 # load another value into integer register
amominu.d x25, x9, (x25) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x26)
li x17, 0xfafdbd816c3c5f11 # load random value
la x26, scratch # base address
sd x17, 0(x26) # store in memory
li x17, 0x4509d9b0b193611f # load another value into integer register
amominu.d x26, x17, (x26) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x27)
li x5, 0x32999fe193c73293 # load random value
la x27, scratch # base address
sd x5, 0(x27) # store in memory
li x5, 0x8bf339571e0c2f72 # load another value into integer register
amominu.d x27, x5, (x27) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x28)
li x6, 0xfd7c35a2e7c9dc1c # load random value
la x28, scratch # base address
sd x6, 0(x28) # store in memory
li x6, 0xc3e6ae6b02b5f376 # load another value into integer register
amominu.d x28, x6, (x28) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x29)
li x26, 0xe54dd6e096eac272 # load random value
la x29, scratch # base address
sd x26, 0(x29) # store in memory
li x26, 0x1eaf1cf5e4ab81aa # load another value into integer register
amominu.d x29, x26, (x29) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x30)
li x16, 0x6ec20fdad91d59bf # load random value
la x30, scratch # base address
sd x16, 0(x30) # store in memory
li x16, 0xe1ab25a3dc923ace # load another value into integer register
amominu.d x30, x16, (x30) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x31)
li x26, 0x1d6715c2af84cbea # load random value
la x31, scratch # base address
sd x26, 0(x31) # store in memory
li x26, 0x048ef7c90f1a5479 # load another value into integer register
amominu.d x31, x26, (x31) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x0)
li x0, 0xcef0f621c291f099 # load random value
la x14, scratch # base address
sd x0, 0(x14) # store in memory
li x0, 0x22705c40d2554fb5 # load another value into integer register
amominu.d x0, x0, (x14) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x1)
li x1, 0x425eedb7bfd99b44 # load random value
la x7, scratch # base address
sd x1, 0(x7) # store in memory
li x1, 0x8d8b6e9d0a8b35f9 # load another value into integer register
amominu.d x1, x1, (x7) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x2)
li x2, 0xd3c8f6542faad305 # load random value
la x19, scratch # base address
sd x2, 0(x19) # store in memory
li x2, 0x9c8e1bbf0bbae881 # load another value into integer register
amominu.d x2, x2, (x19) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x3)
li x3, 0xcda4316aad896370 # load random value
la x23, scratch # base address
sd x3, 0(x23) # store in memory
li x3, 0x702a59baffecfe11 # load another value into integer register
amominu.d x3, x3, (x23) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x4)
mv x5, x4 # switch signature pointer register to avoid conflict with test
li x4, 0x98cd565ec94481a7 # load random value
la x18, scratch # base address
sd x4, 0(x18) # store in memory
li x4, 0x428295d6989988ad # load another value into integer register
amominu.d x4, x4, (x18) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x5)
mv x6, x5 # switch signature pointer register to avoid conflict with test
li x5, 0x456c0a34b724beef # load random value
la x3, scratch # base address
sd x5, 0(x3) # store in memory
li x5, 0x1d98c7ad49b0471d # load another value into integer register
amominu.d x5, x5, (x3) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x6)
mv x7, x6 # switch signature pointer register to avoid conflict with test
li x6, 0x0b24f30bc12f39a9 # load random value
la x8, scratch # base address
sd x6, 0(x8) # store in memory
li x6, 0x08b88c04396166a4 # load another value into integer register
amominu.d x6, x6, (x8) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x7)
mv x5, x7 # switch signature pointer register to avoid conflict with test
li x7, 0x6261218e0133b0fc # load random value
la x4, scratch # base address
sd x7, 0(x4) # store in memory
li x7, 0xef50c4b3ddfb0b6c # load another value into integer register
amominu.d x7, x7, (x4) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x8)
li x8, 0xdd7d3e94c4a892dc # load random value
la x31, scratch # base address
sd x8, 0(x31) # store in memory
li x8, 0xb283640784e7f239 # load another value into integer register
amominu.d x8, x8, (x31) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x9)
li x9, 0xad99aff3d3124e28 # load random value
la x10, scratch # base address
sd x9, 0(x10) # store in memory
li x9, 0xba69d3b993dd84ed # load another value into integer register
amominu.d x9, x9, (x10) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x10)
li x10, 0xce4a3f23151b9557 # load random value
la x4, scratch # base address
sd x10, 0(x4) # store in memory
li x10, 0x812b310eeb694ec6 # load another value into integer register
amominu.d x10, x10, (x4) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x11)
li x11, 0xba9279107d0e9a2b # load random value
la x31, scratch # base address
sd x11, 0(x31) # store in memory
li x11, 0x382d3fb385890fbb # load another value into integer register
amominu.d x11, x11, (x31) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x12)
li x12, 0x0c4bb6715454545e # load random value
la x21, scratch # base address
sd x12, 0(x21) # store in memory
li x12, 0x6a5101858368db1e # load another value into integer register
amominu.d x12, x12, (x21) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x13)
li x13, 0x5198fcd5daa6386d # load random value
la x26, scratch # base address
sd x13, 0(x26) # store in memory
li x13, 0x3d6edc5093cd627d # load another value into integer register
amominu.d x13, x13, (x26) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x14)
li x14, 0x9e3d7ba775da5e2c # load random value
la x10, scratch # base address
sd x14, 0(x10) # store in memory
li x14, 0x3920426c16640387 # load another value into integer register
amominu.d x14, x14, (x10) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x15)
li x15, 0x87f132577027e50d # load random value
la x30, scratch # base address
sd x15, 0(x30) # store in memory
li x15, 0xfdffdb89e336e422 # load another value into integer register
amominu.d x15, x15, (x30) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x16)
li x16, 0x19e1554206f423b2 # load random value
la x18, scratch # base address
sd x16, 0(x18) # store in memory
li x16, 0x5437e313f3cf581c # load another value into integer register
amominu.d x16, x16, (x18) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x17)
li x17, 0x190a23a6a7fd0162 # load random value
la x22, scratch # base address
sd x17, 0(x22) # store in memory
li x17, 0xa057a406a3bcb3d3 # load another value into integer register
amominu.d x17, x17, (x22) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x18)
li x18, 0xace85c268b5cf6c5 # load random value
la x3, scratch # base address
sd x18, 0(x3) # store in memory
li x18, 0x17d033f1bdba6d10 # load another value into integer register
amominu.d x18, x18, (x3) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x19)
li x19, 0x8bf8fb9549a73a79 # load random value
la x24, scratch # base address
sd x19, 0(x24) # store in memory
li x19, 0x223b6696e03ea6ec # load another value into integer register
amominu.d x19, x19, (x24) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x20)
li x20, 0xdd1642b50c3292be # load random value
la x26, scratch # base address
sd x20, 0(x26) # store in memory
li x20, 0xa44b625c93456727 # load another value into integer register
amominu.d x20, x20, (x26) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x21)
li x21, 0x7173d683076cc9ca # load random value
la x12, scratch # base address
sd x21, 0(x12) # store in memory
li x21, 0xa893938653546dce # load another value into integer register
amominu.d x21, x21, (x12) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x22)
li x22, 0x814a311d559b8dfe # load random value
la x16, scratch # base address
sd x22, 0(x16) # store in memory
li x22, 0xdce2c36b4882de64 # load another value into integer register
amominu.d x22, x22, (x16) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x23)
li x23, 0xe97a117e07d331c4 # load random value
la x27, scratch # base address
sd x23, 0(x27) # store in memory
li x23, 0xc4e956190cd0c3ad # load another value into integer register
amominu.d x23, x23, (x27) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x24)
li x24, 0x46b60edd57e958e3 # load random value
la x14, scratch # base address
sd x24, 0(x14) # store in memory
li x24, 0xd6336ecfd5baf765 # load another value into integer register
amominu.d x24, x24, (x14) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x25)
li x25, 0xe4901be3223b9b90 # load random value
la x12, scratch # base address
sd x25, 0(x12) # store in memory
li x25, 0xc78e8a56c5d4481d # load another value into integer register
amominu.d x25, x25, (x12) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x26)
li x26, 0xdc42e3d336f50295 # load random value
la x29, scratch # base address
sd x26, 0(x29) # store in memory
li x26, 0x7c458438bbab4d00 # load another value into integer register
amominu.d x26, x26, (x29) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x27)
li x27, 0xf57c40b0a99f3e22 # load random value
la x24, scratch # base address
sd x27, 0(x24) # store in memory
li x27, 0x93b7c53df61d188a # load another value into integer register
amominu.d x27, x27, (x24) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x28)
li x28, 0x3df5a9dedfdcbd93 # load random value
la x23, scratch # base address
sd x28, 0(x23) # store in memory
li x28, 0x64d8ca921fd0cf2b # load another value into integer register
amominu.d x28, x28, (x23) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x29)
li x29, 0x6a6fcf47cd0149ac # load random value
la x2, scratch # base address
sd x29, 0(x2) # store in memory
li x29, 0x6d3009a4a02da570 # load another value into integer register
amominu.d x29, x29, (x2) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x30)
li x30, 0xdf2a76035c9441fa # load random value
la x12, scratch # base address
sd x30, 0(x12) # store in memory
li x30, 0x750aaf833e7a2347 # load another value into integer register
amominu.d x30, x30, (x12) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x31)
li x31, 0x67377c9a13ce7c47 # load random value
la x24, scratch # base address
sd x31, 0(x24) # store in memory
li x31, 0x90e057dcd301231a # load another value into integer register
amominu.d x31, x31, (x24) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x1)
li x1, 0xd2a7d2e9f1d8103b # load random value
la x1, scratch # base address
sd x1, 0(x1) # store in memory
amominu.d x1, x1, (x1) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x2)
li x2, 0x2403a9ab2851fcbd # load random value
la x2, scratch # base address
sd x2, 0(x2) # store in memory
amominu.d x2, x2, (x2) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x3)
li x3, 0xef258553f48fc063 # load random value
la x3, scratch # base address
sd x3, 0(x3) # store in memory
amominu.d x3, x3, (x3) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x4)
li x4, 0x34cfc3bfe1344da7 # load random value
la x4, scratch # base address
sd x4, 0(x4) # store in memory
amominu.d x4, x4, (x4) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x5)
mv x6, x5 # switch signature pointer register to avoid conflict with test
li x5, 0x26fe1961ff1517bf # load random value
la x5, scratch # base address
sd x5, 0(x5) # store in memory
amominu.d x5, x5, (x5) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x6)
mv x7, x6 # switch signature pointer register to avoid conflict with test
li x6, 0x36a3d9f02ebba61d # load random value
la x6, scratch # base address
sd x6, 0(x6) # store in memory
amominu.d x6, x6, (x6) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x7)
mv x4, x7 # switch signature pointer register to avoid conflict with test
li x7, 0x37b849e0001c1caf # load random value
la x7, scratch # base address
sd x7, 0(x7) # store in memory
amominu.d x7, x7, (x7) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x8)
li x8, 0xe037141c5d50174a # load random value
la x8, scratch # base address
sd x8, 0(x8) # store in memory
amominu.d x8, x8, (x8) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x9)
li x9, 0xe8e44688444d083e # load random value
la x9, scratch # base address
sd x9, 0(x9) # store in memory
amominu.d x9, x9, (x9) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x10)
li x10, 0x721feaa4e24bb9c0 # load random value
la x10, scratch # base address
sd x10, 0(x10) # store in memory
amominu.d x10, x10, (x10) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x11)
li x11, 0x698524d0e80cabb1 # load random value
la x11, scratch # base address
sd x11, 0(x11) # store in memory
amominu.d x11, x11, (x11) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x12)
li x12, 0x60b7027ca685bf53 # load random value
la x12, scratch # base address
sd x12, 0(x12) # store in memory
amominu.d x12, x12, (x12) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x13)
li x13, 0x118880768739cf18 # load random value
la x13, scratch # base address
sd x13, 0(x13) # store in memory
amominu.d x13, x13, (x13) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x14)
li x14, 0xb1001ad3b699fd7e # load random value
la x14, scratch # base address
sd x14, 0(x14) # store in memory
amominu.d x14, x14, (x14) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x15)
li x15, 0x0fe40a83b372b2db # load random value
la x15, scratch # base address
sd x15, 0(x15) # store in memory
amominu.d x15, x15, (x15) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x16)
li x16, 0xdce8966a31d890b7 # load random value
la x16, scratch # base address
sd x16, 0(x16) # store in memory
amominu.d x16, x16, (x16) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x17)
li x17, 0x17de0326d643ac9b # load random value
la x17, scratch # base address
sd x17, 0(x17) # store in memory
amominu.d x17, x17, (x17) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x18)
li x18, 0x7d557eae0f803e29 # load random value
la x18, scratch # base address
sd x18, 0(x18) # store in memory
amominu.d x18, x18, (x18) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x19)
li x19, 0xb27a14d0b129ec43 # load random value
la x19, scratch # base address
sd x19, 0(x19) # store in memory
amominu.d x19, x19, (x19) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x20)
li x20, 0xdef5658b290cc129 # load random value
la x20, scratch # base address
sd x20, 0(x20) # store in memory
amominu.d x20, x20, (x20) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x21)
li x21, 0xc76ba9ddced24b6e # load random value
la x21, scratch # base address
sd x21, 0(x21) # store in memory
amominu.d x21, x21, (x21) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x22)
li x22, 0xe2c9e0a9fa6a7f4a # load random value
la x22, scratch # base address
sd x22, 0(x22) # store in memory
amominu.d x22, x22, (x22) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x23)
li x23, 0xeb847c0f2afef04d # load random value
la x23, scratch # base address
sd x23, 0(x23) # store in memory
amominu.d x23, x23, (x23) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x24)
li x24, 0x423c0929f9daa7a7 # load random value
la x24, scratch # base address
sd x24, 0(x24) # store in memory
amominu.d x24, x24, (x24) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x25)
li x25, 0x6000c14b1a290147 # load random value
la x25, scratch # base address
sd x25, 0(x25) # store in memory
amominu.d x25, x25, (x25) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x26)
li x26, 0x2eed6b2c4cf777c5 # load random value
la x26, scratch # base address
sd x26, 0(x26) # store in memory
amominu.d x26, x26, (x26) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x27)
li x27, 0x8b7d79834b13b743 # load random value
la x27, scratch # base address
sd x27, 0(x27) # store in memory
amominu.d x27, x27, (x27) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x28)
li x28, 0x11f3604200fe94a0 # load random value
la x28, scratch # base address
sd x28, 0(x28) # store in memory
amominu.d x28, x28, (x28) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x29)
li x29, 0xe47867ee81dde906 # load random value
la x29, scratch # base address
sd x29, 0(x29) # store in memory
amominu.d x29, x29, (x29) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x30)
li x30, 0x71e9fd6b377e17ea # load random value
la x30, scratch # base address
sd x30, 0(x30) # store in memory
amominu.d x30, x30, (x30) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x31)
li x31, 0xfb3bd044b0d98c29 # load random value
la x31, scratch # base address
sd x31, 0(x31) # store in memory
amominu.d x31, x31, (x31) # perform operation

# Testcase cp_gpr/fpr_hazard nohaz test
la x11, scratch
add x8, x13, x2 # perform first operation
amominu.d x5, x17, (x11) # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard nohaz test
la x26, scratch
add x2, x7, x30 # perform first operation
amominu.d x27, x25, (x26) # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard nohaz test
la x9, scratch
add x31, x29, x6 # perform first operation
amominu.d x25, x24, (x9) # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard raw test
la x31, scratch
add x14, x14, x0 # perform first operation
amominu.d x2, x14, (x31) # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard raw test
la x27, scratch
add x27, x27, x0 # perform first operation
amominu.d x27, x14, (x27) # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard raw test
la x20, scratch
add x8, x8, x0 # perform first operation
amominu.d x16, x11, (x20) # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard waw test
la x29, scratch
add x10, x1, x16 # perform first operation
amominu.d x10, x9, (x29) # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard waw test
la x22, scratch
add x18, x12, x2 # perform first operation
amominu.d x18, x31, (x22) # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard waw test
la x25, scratch
add x26, x14, x22 # perform first operation
amominu.d x26, x8, (x25) # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard war test
la x30, scratch
add x8, x23, x2 # perform first operation
amominu.d x23, x25, (x30) # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard war test
la x29, scratch
add x5, x17, x3 # perform first operation
amominu.d x3, x6, (x29) # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard war test
la x17, scratch
add x13, x23, x15 # perform first operation
amominu.d x2, x10, (x17) # perform second (triggering) operation

#.EQU SIGSIZE,0


// ******************
// Tests from: WALLY-COV-amomin.d.S
// ******************


# initialize signature pointer
la x4, begin_signature

    
# Testcase cp_rs1 (Test source rs1 = x1)
li x12, 0x68df41054a52db0f # load random value
la x1, scratch # base address
sd x12, 0(x1) # store in memory
li x12, 0x850ce19ba90840a4 # load another value into integer register
amomin.d x24, x12, (x1) # perform operation

# Testcase cp_rs1 (Test source rs1 = x2)
li x20, 0xc764cb436c583b7b # load random value
la x2, scratch # base address
sd x20, 0(x2) # store in memory
li x20, 0xdffb0e7b76dcd9d9 # load another value into integer register
amomin.d x8, x20, (x2) # perform operation

# Testcase cp_rs1 (Test source rs1 = x3)
li x18, 0xa4d635f9c11d7d88 # load random value
la x3, scratch # base address
sd x18, 0(x3) # store in memory
li x18, 0xcde3af2a4ee5c2e8 # load another value into integer register
amomin.d x24, x18, (x3) # perform operation

# Testcase cp_rs1 (Test source rs1 = x4)
mv x5, x4 # switch signature pointer register to avoid conflict with test
li x3, 0xc66e58417f29fd9d # load random value
la x4, scratch # base address
sd x3, 0(x4) # store in memory
li x3, 0xb763630a88fca139 # load another value into integer register
amomin.d x24, x3, (x4) # perform operation

# Testcase cp_rs1 (Test source rs1 = x5)
mv x6, x5 # switch signature pointer register to avoid conflict with test
li x21, 0x3f74419b866dafa9 # load random value
la x5, scratch # base address
sd x21, 0(x5) # store in memory
li x21, 0x3eaf3eacef246625 # load another value into integer register
amomin.d x23, x21, (x5) # perform operation

# Testcase cp_rs1 (Test source rs1 = x6)
mv x7, x6 # switch signature pointer register to avoid conflict with test
li x9, 0x400e50f2e9604139 # load random value
la x6, scratch # base address
sd x9, 0(x6) # store in memory
li x9, 0x1887cd86412fc2ef # load another value into integer register
amomin.d x16, x9, (x6) # perform operation

# Testcase cp_rs1 (Test source rs1 = x7)
mv x4, x7 # switch signature pointer register to avoid conflict with test
li x27, 0x18da7605649638b7 # load random value
la x7, scratch # base address
sd x27, 0(x7) # store in memory
li x27, 0x8a9cde75ad2e4365 # load another value into integer register
amomin.d x23, x27, (x7) # perform operation

# Testcase cp_rs1 (Test source rs1 = x8)
li x16, 0xb224fc6ec28eb7fb # load random value
la x8, scratch # base address
sd x16, 0(x8) # store in memory
li x16, 0x5a7c9b21861819fd # load another value into integer register
amomin.d x18, x16, (x8) # perform operation

# Testcase cp_rs1 (Test source rs1 = x9)
li x26, 0xe8eed4135457da0e # load random value
la x9, scratch # base address
sd x26, 0(x9) # store in memory
li x26, 0x3b3d1b33bb2ae87d # load another value into integer register
amomin.d x24, x26, (x9) # perform operation

# Testcase cp_rs1 (Test source rs1 = x10)
li x7, 0xe414ba4097309cc5 # load random value
la x10, scratch # base address
sd x7, 0(x10) # store in memory
li x7, 0x2c2cca486fcde513 # load another value into integer register
amomin.d x25, x7, (x10) # perform operation

# Testcase cp_rs1 (Test source rs1 = x11)
li x31, 0x777f39796f363b8a # load random value
la x11, scratch # base address
sd x31, 0(x11) # store in memory
li x31, 0x7efe3b99bd0c0078 # load another value into integer register
amomin.d x5, x31, (x11) # perform operation

# Testcase cp_rs1 (Test source rs1 = x12)
li x24, 0x253fd104eeb8a9c4 # load random value
la x12, scratch # base address
sd x24, 0(x12) # store in memory
li x24, 0xdd739319328958a8 # load another value into integer register
amomin.d x8, x24, (x12) # perform operation

# Testcase cp_rs1 (Test source rs1 = x13)
li x14, 0xa88fdc5341f020b1 # load random value
la x13, scratch # base address
sd x14, 0(x13) # store in memory
li x14, 0xbedf15daf8770007 # load another value into integer register
amomin.d x28, x14, (x13) # perform operation

# Testcase cp_rs1 (Test source rs1 = x14)
li x27, 0x089427f0c1882d70 # load random value
la x14, scratch # base address
sd x27, 0(x14) # store in memory
li x27, 0x4213873b8a3cf551 # load another value into integer register
amomin.d x19, x27, (x14) # perform operation

# Testcase cp_rs1 (Test source rs1 = x15)
li x20, 0x3d648d456752f360 # load random value
la x15, scratch # base address
sd x20, 0(x15) # store in memory
li x20, 0x119be571c2760785 # load another value into integer register
amomin.d x25, x20, (x15) # perform operation

# Testcase cp_rs1 (Test source rs1 = x16)
li x25, 0x106735849804bc9d # load random value
la x16, scratch # base address
sd x25, 0(x16) # store in memory
li x25, 0x6691d42c22a75082 # load another value into integer register
amomin.d x13, x25, (x16) # perform operation

# Testcase cp_rs1 (Test source rs1 = x17)
li x12, 0xe062c4c2f35fd13d # load random value
la x17, scratch # base address
sd x12, 0(x17) # store in memory
li x12, 0x265e52cd135e8996 # load another value into integer register
amomin.d x15, x12, (x17) # perform operation

# Testcase cp_rs1 (Test source rs1 = x18)
li x21, 0x63eb43e072a8476d # load random value
la x18, scratch # base address
sd x21, 0(x18) # store in memory
li x21, 0x5125cce92ce0e501 # load another value into integer register
amomin.d x1, x21, (x18) # perform operation

# Testcase cp_rs1 (Test source rs1 = x19)
li x12, 0x181147a84a6f4fa6 # load random value
la x19, scratch # base address
sd x12, 0(x19) # store in memory
li x12, 0x7cdc7bc99f2864c0 # load another value into integer register
amomin.d x11, x12, (x19) # perform operation

# Testcase cp_rs1 (Test source rs1 = x20)
li x15, 0xdeaf1726b750b96c # load random value
la x20, scratch # base address
sd x15, 0(x20) # store in memory
li x15, 0xcda7ff14d72f6a56 # load another value into integer register
amomin.d x11, x15, (x20) # perform operation

# Testcase cp_rs1 (Test source rs1 = x21)
li x31, 0x94f4a20d6d4a556a # load random value
la x21, scratch # base address
sd x31, 0(x21) # store in memory
li x31, 0xe7af9db1be46267a # load another value into integer register
amomin.d x29, x31, (x21) # perform operation

# Testcase cp_rs1 (Test source rs1 = x22)
li x3, 0x2629da8247cea3a2 # load random value
la x22, scratch # base address
sd x3, 0(x22) # store in memory
li x3, 0x2be58d4668c1e853 # load another value into integer register
amomin.d x6, x3, (x22) # perform operation

# Testcase cp_rs1 (Test source rs1 = x23)
li x12, 0x531c36c8c7dfa954 # load random value
la x23, scratch # base address
sd x12, 0(x23) # store in memory
li x12, 0xd3b0828d971c3305 # load another value into integer register
amomin.d x3, x12, (x23) # perform operation

# Testcase cp_rs1 (Test source rs1 = x24)
li x9, 0x05c88864f8c79608 # load random value
la x24, scratch # base address
sd x9, 0(x24) # store in memory
li x9, 0x465afb5f8f97a8b8 # load another value into integer register
amomin.d x17, x9, (x24) # perform operation

# Testcase cp_rs1 (Test source rs1 = x25)
li x14, 0xbf177ed3fe61775d # load random value
la x25, scratch # base address
sd x14, 0(x25) # store in memory
li x14, 0x543ff93aaa0cb498 # load another value into integer register
amomin.d x29, x14, (x25) # perform operation

# Testcase cp_rs1 (Test source rs1 = x26)
li x1, 0x8be3f93eb70e0dc7 # load random value
la x26, scratch # base address
sd x1, 0(x26) # store in memory
li x1, 0x9db9dcfd901823c3 # load another value into integer register
amomin.d x19, x1, (x26) # perform operation

# Testcase cp_rs1 (Test source rs1 = x27)
li x10, 0xdc05645e9d4306d6 # load random value
la x27, scratch # base address
sd x10, 0(x27) # store in memory
li x10, 0x4fd0275bb37963ec # load another value into integer register
amomin.d x5, x10, (x27) # perform operation

# Testcase cp_rs1 (Test source rs1 = x28)
li x12, 0x95a79a734b793976 # load random value
la x28, scratch # base address
sd x12, 0(x28) # store in memory
li x12, 0xb20a26c575bd9153 # load another value into integer register
amomin.d x22, x12, (x28) # perform operation

# Testcase cp_rs1 (Test source rs1 = x29)
li x9, 0x28cf8f7802943ca2 # load random value
la x29, scratch # base address
sd x9, 0(x29) # store in memory
li x9, 0xb618349c01330b81 # load another value into integer register
amomin.d x7, x9, (x29) # perform operation

# Testcase cp_rs1 (Test source rs1 = x30)
li x24, 0xbd87e9261040b3a1 # load random value
la x30, scratch # base address
sd x24, 0(x30) # store in memory
li x24, 0x574b2d9918d9b0c8 # load another value into integer register
amomin.d x14, x24, (x30) # perform operation

# Testcase cp_rs1 (Test source rs1 = x31)
li x12, 0x500b626b55db190e # load random value
la x31, scratch # base address
sd x12, 0(x31) # store in memory
li x12, 0xda08ba953cf61a82 # load another value into integer register
amomin.d x22, x12, (x31) # perform operation

# Testcase cp_rs2 (Test source rs2 = x0)
li x0, 0xc6aed330a0149eb1 # load random value
la x25, scratch # base address
sd x0, 0(x25) # store in memory
li x0, 0x34e426a387c5a2e3 # load another value into integer register
amomin.d x9, x0, (x25) # perform operation

# Testcase cp_rs2 (Test source rs2 = x1)
li x1, 0xba95f5fd6c31ba63 # load random value
la x25, scratch # base address
sd x1, 0(x25) # store in memory
li x1, 0x92042e884c6c7a21 # load another value into integer register
amomin.d x16, x1, (x25) # perform operation

# Testcase cp_rs2 (Test source rs2 = x2)
li x2, 0x38d4189e5b54e90c # load random value
la x8, scratch # base address
sd x2, 0(x8) # store in memory
li x2, 0x58adfba51c1fea33 # load another value into integer register
amomin.d x17, x2, (x8) # perform operation

# Testcase cp_rs2 (Test source rs2 = x3)
li x3, 0xa70064801dcfb605 # load random value
la x17, scratch # base address
sd x3, 0(x17) # store in memory
li x3, 0x76b8f50419fc9dc3 # load another value into integer register
amomin.d x12, x3, (x17) # perform operation

# Testcase cp_rs2 (Test source rs2 = x4)
mv x6, x4 # switch signature pointer register to avoid conflict with test
li x4, 0xeee4f50b7366418d # load random value
la x14, scratch # base address
sd x4, 0(x14) # store in memory
li x4, 0x4fa4ce5b0a5f79e4 # load another value into integer register
amomin.d x5, x4, (x14) # perform operation

# Testcase cp_rs2 (Test source rs2 = x5)
li x5, 0x2a699c4b0c054b59 # load random value
la x16, scratch # base address
sd x5, 0(x16) # store in memory
li x5, 0xde14f44d3d4a1bff # load another value into integer register
amomin.d x9, x5, (x16) # perform operation

# Testcase cp_rs2 (Test source rs2 = x6)
mv x7, x6 # switch signature pointer register to avoid conflict with test
li x6, 0x14351089acc7f40e # load random value
la x21, scratch # base address
sd x6, 0(x21) # store in memory
li x6, 0x577bc5dccb9f0337 # load another value into integer register
amomin.d x9, x6, (x21) # perform operation

# Testcase cp_rs2 (Test source rs2 = x7)
mv x4, x7 # switch signature pointer register to avoid conflict with test
li x7, 0x7a6da6006bef843c # load random value
la x28, scratch # base address
sd x7, 0(x28) # store in memory
li x7, 0x23d33cc3703a4d6d # load another value into integer register
amomin.d x20, x7, (x28) # perform operation

# Testcase cp_rs2 (Test source rs2 = x8)
li x8, 0x45f8ce6b542f1b5c # load random value
la x11, scratch # base address
sd x8, 0(x11) # store in memory
li x8, 0x7e25f266b01242a0 # load another value into integer register
amomin.d x22, x8, (x11) # perform operation

# Testcase cp_rs2 (Test source rs2 = x9)
li x9, 0xb11f86709d738a93 # load random value
la x6, scratch # base address
sd x9, 0(x6) # store in memory
li x9, 0x046cdb05847680b7 # load another value into integer register
amomin.d x3, x9, (x6) # perform operation

# Testcase cp_rs2 (Test source rs2 = x10)
li x10, 0x8f2a19492be7b373 # load random value
la x24, scratch # base address
sd x10, 0(x24) # store in memory
li x10, 0x253b4b9ad35183f1 # load another value into integer register
amomin.d x13, x10, (x24) # perform operation

# Testcase cp_rs2 (Test source rs2 = x11)
li x11, 0xc854cbade1eed9a1 # load random value
la x24, scratch # base address
sd x11, 0(x24) # store in memory
li x11, 0xb3ffe093a4dca33c # load another value into integer register
amomin.d x29, x11, (x24) # perform operation

# Testcase cp_rs2 (Test source rs2 = x12)
li x12, 0x1ef60b44d7b3a838 # load random value
la x16, scratch # base address
sd x12, 0(x16) # store in memory
li x12, 0x0505aaf8b13ca04e # load another value into integer register
amomin.d x27, x12, (x16) # perform operation

# Testcase cp_rs2 (Test source rs2 = x13)
li x13, 0xc575ec40f5f744f1 # load random value
la x18, scratch # base address
sd x13, 0(x18) # store in memory
li x13, 0xe139dd43aa1c0f83 # load another value into integer register
amomin.d x22, x13, (x18) # perform operation

# Testcase cp_rs2 (Test source rs2 = x14)
li x14, 0xe7589173d7bfe05f # load random value
la x8, scratch # base address
sd x14, 0(x8) # store in memory
li x14, 0x756445406ed96604 # load another value into integer register
amomin.d x1, x14, (x8) # perform operation

# Testcase cp_rs2 (Test source rs2 = x15)
li x15, 0xdbc5ef5146dca2f5 # load random value
la x16, scratch # base address
sd x15, 0(x16) # store in memory
li x15, 0x4c15f5f5aa8524a0 # load another value into integer register
amomin.d x23, x15, (x16) # perform operation

# Testcase cp_rs2 (Test source rs2 = x16)
li x16, 0xcfc5e4ba37549e79 # load random value
la x15, scratch # base address
sd x16, 0(x15) # store in memory
li x16, 0xebd7997994b8f0b0 # load another value into integer register
amomin.d x2, x16, (x15) # perform operation

# Testcase cp_rs2 (Test source rs2 = x17)
li x17, 0x720aa88772e7f762 # load random value
la x12, scratch # base address
sd x17, 0(x12) # store in memory
li x17, 0x018c30c4fa9115c2 # load another value into integer register
amomin.d x24, x17, (x12) # perform operation

# Testcase cp_rs2 (Test source rs2 = x18)
li x18, 0x2e388f0c213830c5 # load random value
la x2, scratch # base address
sd x18, 0(x2) # store in memory
li x18, 0x74f7296dfffe38e5 # load another value into integer register
amomin.d x19, x18, (x2) # perform operation

# Testcase cp_rs2 (Test source rs2 = x19)
li x19, 0xf93a82c4d0032280 # load random value
la x24, scratch # base address
sd x19, 0(x24) # store in memory
li x19, 0x8ae0d052cdf9deb0 # load another value into integer register
amomin.d x10, x19, (x24) # perform operation

# Testcase cp_rs2 (Test source rs2 = x20)
li x20, 0xcb6bd9da02bbef1e # load random value
la x19, scratch # base address
sd x20, 0(x19) # store in memory
li x20, 0xa6b7652e2e7cd45d # load another value into integer register
amomin.d x23, x20, (x19) # perform operation

# Testcase cp_rs2 (Test source rs2 = x21)
li x21, 0x224fbd107c010eaa # load random value
la x8, scratch # base address
sd x21, 0(x8) # store in memory
li x21, 0xbd10ce1e283dfe26 # load another value into integer register
amomin.d x12, x21, (x8) # perform operation

# Testcase cp_rs2 (Test source rs2 = x22)
li x22, 0x00f5122a7c69b00f # load random value
la x16, scratch # base address
sd x22, 0(x16) # store in memory
li x22, 0x98efe792706da010 # load another value into integer register
amomin.d x17, x22, (x16) # perform operation

# Testcase cp_rs2 (Test source rs2 = x23)
li x23, 0x1bbd73fb189fd898 # load random value
la x21, scratch # base address
sd x23, 0(x21) # store in memory
li x23, 0x2f778392bebd588f # load another value into integer register
amomin.d x19, x23, (x21) # perform operation

# Testcase cp_rs2 (Test source rs2 = x24)
li x24, 0x15cd9370fa64174e # load random value
la x18, scratch # base address
sd x24, 0(x18) # store in memory
li x24, 0x0a287abc7a449a9d # load another value into integer register
amomin.d x6, x24, (x18) # perform operation

# Testcase cp_rs2 (Test source rs2 = x25)
li x25, 0x085daede809266d2 # load random value
la x18, scratch # base address
sd x25, 0(x18) # store in memory
li x25, 0x0cb3fb7528b13cfe # load another value into integer register
amomin.d x24, x25, (x18) # perform operation

# Testcase cp_rs2 (Test source rs2 = x26)
li x26, 0x8f2c286649ea5d49 # load random value
la x16, scratch # base address
sd x26, 0(x16) # store in memory
li x26, 0x15aeb178cc99b35b # load another value into integer register
amomin.d x23, x26, (x16) # perform operation

# Testcase cp_rs2 (Test source rs2 = x27)
li x27, 0x14f9d13c1df50371 # load random value
la x24, scratch # base address
sd x27, 0(x24) # store in memory
li x27, 0x2fed7de9c1db982f # load another value into integer register
amomin.d x11, x27, (x24) # perform operation

# Testcase cp_rs2 (Test source rs2 = x28)
li x28, 0x836a019e388c0f41 # load random value
la x22, scratch # base address
sd x28, 0(x22) # store in memory
li x28, 0x8357e7f5dddffbc1 # load another value into integer register
amomin.d x6, x28, (x22) # perform operation

# Testcase cp_rs2 (Test source rs2 = x29)
li x29, 0x8124ba95a84c64ad # load random value
la x9, scratch # base address
sd x29, 0(x9) # store in memory
li x29, 0xccad88bb4ece0e98 # load another value into integer register
amomin.d x11, x29, (x9) # perform operation

# Testcase cp_rs2 (Test source rs2 = x30)
li x30, 0x7b6d2faade6cbb7b # load random value
la x21, scratch # base address
sd x30, 0(x21) # store in memory
li x30, 0x5a71ad58b2eacf4e # load another value into integer register
amomin.d x7, x30, (x21) # perform operation

# Testcase cp_rs2 (Test source rs2 = x31)
li x31, 0xc45134a4c8a4f7e7 # load random value
la x9, scratch # base address
sd x31, 0(x9) # store in memory
li x31, 0x2cca548b6cd1a4b6 # load another value into integer register
amomin.d x26, x31, (x9) # perform operation

# Testcase cp_rd (Test destination rd = x0)
li x12, 0x0f7e58a91d1c2034 # load random value
la x26, scratch # base address
sd x12, 0(x26) # store in memory
li x12, 0x9465ede3222b35d2 # load another value into integer register
amomin.d x0, x12, (x26) # perform operation

# Testcase cp_rd (Test destination rd = x1)
li x20, 0x329c141b610d876a # load random value
la x10, scratch # base address
sd x20, 0(x10) # store in memory
li x20, 0x479af7c8bf34c0a4 # load another value into integer register
amomin.d x1, x20, (x10) # perform operation

# Testcase cp_rd (Test destination rd = x2)
li x18, 0x3772ded24d86efbf # load random value
la x15, scratch # base address
sd x18, 0(x15) # store in memory
li x18, 0xf959c434a4fe0895 # load another value into integer register
amomin.d x2, x18, (x15) # perform operation

# Testcase cp_rd (Test destination rd = x3)
li x30, 0xb80c12bff6de9590 # load random value
la x8, scratch # base address
sd x30, 0(x8) # store in memory
li x30, 0x36a94a699b12b4ba # load another value into integer register
amomin.d x3, x30, (x8) # perform operation

# Testcase cp_rd (Test destination rd = x4)
mv x5, x4 # switch signature pointer register to avoid conflict with test
li x19, 0x07e0b6862db82a99 # load random value
la x9, scratch # base address
sd x19, 0(x9) # store in memory
li x19, 0x9f0ce4c4d49077ec # load another value into integer register
amomin.d x4, x19, (x9) # perform operation

# Testcase cp_rd (Test destination rd = x5)
mv x6, x5 # switch signature pointer register to avoid conflict with test
li x27, 0x7d4fdcb86a64ba8a # load random value
la x4, scratch # base address
sd x27, 0(x4) # store in memory
li x27, 0x6a3efedf585ee2ed # load another value into integer register
amomin.d x5, x27, (x4) # perform operation

# Testcase cp_rd (Test destination rd = x6)
mv x7, x6 # switch signature pointer register to avoid conflict with test
li x21, 0x9fdbf49b09500427 # load random value
la x29, scratch # base address
sd x21, 0(x29) # store in memory
li x21, 0x4c93ca14add69565 # load another value into integer register
amomin.d x6, x21, (x29) # perform operation

# Testcase cp_rd (Test destination rd = x7)
mv x4, x7 # switch signature pointer register to avoid conflict with test
li x23, 0xb2162b7de385c3b8 # load random value
la x2, scratch # base address
sd x23, 0(x2) # store in memory
li x23, 0xa5cc5f524f55d0d2 # load another value into integer register
amomin.d x7, x23, (x2) # perform operation

# Testcase cp_rd (Test destination rd = x8)
li x14, 0xd2ec348aad42e64f # load random value
la x9, scratch # base address
sd x14, 0(x9) # store in memory
li x14, 0xf57b3a716120bfb8 # load another value into integer register
amomin.d x8, x14, (x9) # perform operation

# Testcase cp_rd (Test destination rd = x9)
li x20, 0x49c32459e043b8d7 # load random value
la x19, scratch # base address
sd x20, 0(x19) # store in memory
li x20, 0xe269964048d508bd # load another value into integer register
amomin.d x9, x20, (x19) # perform operation

# Testcase cp_rd (Test destination rd = x10)
li x29, 0xcc407378ce460dc4 # load random value
la x31, scratch # base address
sd x29, 0(x31) # store in memory
li x29, 0xa4b9b4ffa84a97ab # load another value into integer register
amomin.d x10, x29, (x31) # perform operation

# Testcase cp_rd (Test destination rd = x11)
li x11, 0x278949c96fd0c390 # load random value
la x27, scratch # base address
sd x11, 0(x27) # store in memory
li x11, 0xf44aa0e219a30e60 # load another value into integer register
amomin.d x11, x11, (x27) # perform operation

# Testcase cp_rd (Test destination rd = x12)
li x6, 0x3083c946b9b7885b # load random value
la x31, scratch # base address
sd x6, 0(x31) # store in memory
li x6, 0xc8b61e80db995216 # load another value into integer register
amomin.d x12, x6, (x31) # perform operation

# Testcase cp_rd (Test destination rd = x13)
li x12, 0x17a4236c3559ea4e # load random value
la x21, scratch # base address
sd x12, 0(x21) # store in memory
li x12, 0x3e2fec7eb5556193 # load another value into integer register
amomin.d x13, x12, (x21) # perform operation

# Testcase cp_rd (Test destination rd = x14)
li x15, 0x201213b7241ca0ea # load random value
la x2, scratch # base address
sd x15, 0(x2) # store in memory
li x15, 0x8f3ee37efe80e6e3 # load another value into integer register
amomin.d x14, x15, (x2) # perform operation

# Testcase cp_rd (Test destination rd = x15)
li x5, 0xd03dfb6d44097864 # load random value
la x31, scratch # base address
sd x5, 0(x31) # store in memory
li x5, 0xfdfdaf550b2f312f # load another value into integer register
amomin.d x15, x5, (x31) # perform operation

# Testcase cp_rd (Test destination rd = x16)
li x2, 0x7d78590a4347415d # load random value
la x18, scratch # base address
sd x2, 0(x18) # store in memory
li x2, 0xcbe41f19a0ee5c59 # load another value into integer register
amomin.d x16, x2, (x18) # perform operation

# Testcase cp_rd (Test destination rd = x17)
li x15, 0xf6e618724d117fd8 # load random value
la x6, scratch # base address
sd x15, 0(x6) # store in memory
li x15, 0x336097f9f8280401 # load another value into integer register
amomin.d x17, x15, (x6) # perform operation

# Testcase cp_rd (Test destination rd = x18)
li x1, 0xe18fa1f763dcc947 # load random value
la x29, scratch # base address
sd x1, 0(x29) # store in memory
li x1, 0xe1929569be693f1f # load another value into integer register
amomin.d x18, x1, (x29) # perform operation

# Testcase cp_rd (Test destination rd = x19)
li x16, 0xf9161dea1f9934a3 # load random value
la x13, scratch # base address
sd x16, 0(x13) # store in memory
li x16, 0x95005f80eeb9354c # load another value into integer register
amomin.d x19, x16, (x13) # perform operation

# Testcase cp_rd (Test destination rd = x20)
li x12, 0x5ff4dd294ceddd3c # load random value
la x24, scratch # base address
sd x12, 0(x24) # store in memory
li x12, 0xd907932ed5da5dc1 # load another value into integer register
amomin.d x20, x12, (x24) # perform operation

# Testcase cp_rd (Test destination rd = x21)
li x1, 0x77219a1b9a853b72 # load random value
la x15, scratch # base address
sd x1, 0(x15) # store in memory
li x1, 0x5740f923b868db77 # load another value into integer register
amomin.d x21, x1, (x15) # perform operation

# Testcase cp_rd (Test destination rd = x22)
li x12, 0x012437cc804c37bf # load random value
la x9, scratch # base address
sd x12, 0(x9) # store in memory
li x12, 0x617524f50625f616 # load another value into integer register
amomin.d x22, x12, (x9) # perform operation

# Testcase cp_rd (Test destination rd = x23)
li x9, 0x19a1e05f3727fe34 # load random value
la x2, scratch # base address
sd x9, 0(x2) # store in memory
li x9, 0xb00b84983cee6178 # load another value into integer register
amomin.d x23, x9, (x2) # perform operation

# Testcase cp_rd (Test destination rd = x24)
li x20, 0x3e6df205561b338e # load random value
la x1, scratch # base address
sd x20, 0(x1) # store in memory
li x20, 0x7d91b28d2bd3a6f0 # load another value into integer register
amomin.d x24, x20, (x1) # perform operation

# Testcase cp_rd (Test destination rd = x25)
li x22, 0xc81c83bf3bd5bd4c # load random value
la x6, scratch # base address
sd x22, 0(x6) # store in memory
li x22, 0xa375dab342d3772e # load another value into integer register
amomin.d x25, x22, (x6) # perform operation

# Testcase cp_rd (Test destination rd = x26)
li x25, 0xffa4b4b7d46e5172 # load random value
la x1, scratch # base address
sd x25, 0(x1) # store in memory
li x25, 0x6784567314d715fc # load another value into integer register
amomin.d x26, x25, (x1) # perform operation

# Testcase cp_rd (Test destination rd = x27)
li x1, 0x445b20223863a266 # load random value
la x9, scratch # base address
sd x1, 0(x9) # store in memory
li x1, 0x73f98cfbcc371e8f # load another value into integer register
amomin.d x27, x1, (x9) # perform operation

# Testcase cp_rd (Test destination rd = x28)
li x25, 0x631e73bf1d70412b # load random value
la x27, scratch # base address
sd x25, 0(x27) # store in memory
li x25, 0x85cb99c1da5a2c5b # load another value into integer register
amomin.d x28, x25, (x27) # perform operation

# Testcase cp_rd (Test destination rd = x29)
li x11, 0x52b598e1c567f339 # load random value
la x30, scratch # base address
sd x11, 0(x30) # store in memory
li x11, 0x03630e5bf80ae593 # load another value into integer register
amomin.d x29, x11, (x30) # perform operation

# Testcase cp_rd (Test destination rd = x30)
li x5, 0x2e29c5969fcf90dd # load random value
la x1, scratch # base address
sd x5, 0(x1) # store in memory
li x5, 0x9a328ef8ba14dc30 # load another value into integer register
amomin.d x30, x5, (x1) # perform operation

# Testcase cp_rd (Test destination rd = x31)
li x14, 0xa3ed1b655eb3eed7 # load random value
la x16, scratch # base address
sd x14, 0(x16) # store in memory
li x14, 0x0831544169ef0bd3 # load another value into integer register
amomin.d x31, x14, (x16) # perform operation

# Testcase cp_rs2_corners (Test source rs2 value = 0x0)
li x29, 0x68a6d797cf76e53a # load random value
la x1, scratch # base address
sd x29, 0(x1) # store in memory
li x29, 0x0000000000000000 # load another value into integer register
amomin.d x26, x29, (x1) # perform operation

# Testcase cp_rs2_corners (Test source rs2 value = 0x1)
li x23, 0x06e40f2819723616 # load random value
la x5, scratch # base address
sd x23, 0(x5) # store in memory
li x23, 0x0000000000000001 # load another value into integer register
amomin.d x13, x23, (x5) # perform operation

# Testcase cp_rs2_corners (Test source rs2 value = 0x2)
li x9, 0x8746812a08408b34 # load random value
la x10, scratch # base address
sd x9, 0(x10) # store in memory
li x9, 0x0000000000000002 # load another value into integer register
amomin.d x20, x9, (x10) # perform operation

# Testcase cp_rs2_corners (Test source rs2 value = 0x8000000000000000)
li x23, 0xea6a0d00517df4e1 # load random value
la x28, scratch # base address
sd x23, 0(x28) # store in memory
li x23, 0x8000000000000000 # load another value into integer register
amomin.d x5, x23, (x28) # perform operation

# Testcase cp_rs2_corners (Test source rs2 value = 0x8000000000000001)
li x2, 0x89a9a6f18e508d32 # load random value
la x24, scratch # base address
sd x2, 0(x24) # store in memory
li x2, 0x8000000000000001 # load another value into integer register
amomin.d x30, x2, (x24) # perform operation

# Testcase cp_rs2_corners (Test source rs2 value = 0x7fffffffffffffff)
li x7, 0xdd19a56caa2eb4a2 # load random value
la x31, scratch # base address
sd x7, 0(x31) # store in memory
li x7, 0x7fffffffffffffff # load another value into integer register
amomin.d x18, x7, (x31) # perform operation

# Testcase cp_rs2_corners (Test source rs2 value = 0x7ffffffffffffffe)
li x6, 0x7391d7cdb92f35af # load random value
la x26, scratch # base address
sd x6, 0(x26) # store in memory
li x6, 0x7ffffffffffffffe # load another value into integer register
amomin.d x30, x6, (x26) # perform operation

# Testcase cp_rs2_corners (Test source rs2 value = 0xffffffffffffffff)
li x5, 0x0c19788995580af3 # load random value
la x1, scratch # base address
sd x5, 0(x1) # store in memory
li x5, 0xffffffffffffffff # load another value into integer register
amomin.d x20, x5, (x1) # perform operation

# Testcase cp_rs2_corners (Test source rs2 value = 0xfffffffffffffffe)
li x18, 0x40ae33b45f1c0f36 # load random value
la x13, scratch # base address
sd x18, 0(x13) # store in memory
li x18, 0xfffffffffffffffe # load another value into integer register
amomin.d x25, x18, (x13) # perform operation

# Testcase cp_rs2_corners (Test source rs2 value = 0x5bbc887763ae86f2)
li x29, 0x4fcfd83296053d7a # load random value
la x2, scratch # base address
sd x29, 0(x2) # store in memory
li x29, 0x5bbc887763ae86f2 # load another value into integer register
amomin.d x16, x29, (x2) # perform operation

# Testcase cp_rs2_corners (Test source rs2 value = 0xaaaaaaaaaaaaaaaa)
li x7, 0x4a4b69d2a649713f # load random value
la x10, scratch # base address
sd x7, 0(x10) # store in memory
li x7, 0xaaaaaaaaaaaaaaaa # load another value into integer register
amomin.d x8, x7, (x10) # perform operation

# Testcase cp_rs2_corners (Test source rs2 value = 0x5555555555555555)
li x21, 0x7496ac8b57b61126 # load random value
la x15, scratch # base address
sd x21, 0(x15) # store in memory
li x21, 0x5555555555555555 # load another value into integer register
amomin.d x10, x21, (x15) # perform operation

# Testcase cp_rs2_corners (Test source rs2 value = 0xffffffff)
li x10, 0x41b9781e594b4323 # load random value
la x23, scratch # base address
sd x10, 0(x23) # store in memory
li x10, 0x00000000ffffffff # load another value into integer register
amomin.d x15, x10, (x23) # perform operation

# Testcase cp_rs2_corners (Test source rs2 value = 0xfffffffe)
li x25, 0x5fcee1540e07e3a1 # load random value
la x29, scratch # base address
sd x25, 0(x29) # store in memory
li x25, 0x00000000fffffffe # load another value into integer register
amomin.d x8, x25, (x29) # perform operation

# Testcase cp_rs2_corners (Test source rs2 value = 0x100000000)
li x30, 0xa4addfe471bafbd8 # load random value
la x23, scratch # base address
sd x30, 0(x23) # store in memory
li x30, 0x0000000100000000 # load another value into integer register
amomin.d x7, x30, (x23) # perform operation

# Testcase cp_rs2_corners (Test source rs2 value = 0x100000001)
li x8, 0x7caf4bafbef4548c # load random value
la x14, scratch # base address
sd x8, 0(x14) # store in memory
li x8, 0x0000000100000001 # load another value into integer register
amomin.d x17, x8, (x14) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x1)
li x1, 0x9c45f5aacb6cf9ff # load random value
la x1, scratch # base address
sd x1, 0(x1) # store in memory
amomin.d x30, x1, (x1) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x2)
li x2, 0xe4ab9e6c7240376d # load random value
la x2, scratch # base address
sd x2, 0(x2) # store in memory
amomin.d x1, x2, (x2) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x3)
li x3, 0x510408536be3a0b2 # load random value
la x3, scratch # base address
sd x3, 0(x3) # store in memory
amomin.d x8, x3, (x3) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x4)
mv x5, x4 # switch signature pointer register to avoid conflict with test
li x4, 0xe3448c2fed9be1ae # load random value
la x4, scratch # base address
sd x4, 0(x4) # store in memory
amomin.d x28, x4, (x4) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x5)
mv x6, x5 # switch signature pointer register to avoid conflict with test
li x5, 0x611373ca9ae63c73 # load random value
la x5, scratch # base address
sd x5, 0(x5) # store in memory
amomin.d x16, x5, (x5) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x6)
mv x7, x6 # switch signature pointer register to avoid conflict with test
li x6, 0x006c9ca543ffce44 # load random value
la x6, scratch # base address
sd x6, 0(x6) # store in memory
amomin.d x16, x6, (x6) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x7)
mv x4, x7 # switch signature pointer register to avoid conflict with test
li x7, 0x7f9dad387732626a # load random value
la x7, scratch # base address
sd x7, 0(x7) # store in memory
amomin.d x12, x7, (x7) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x8)
li x8, 0xdbe3ea4eaf251ac1 # load random value
la x8, scratch # base address
sd x8, 0(x8) # store in memory
amomin.d x20, x8, (x8) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x9)
li x9, 0x9454781293bd2cf9 # load random value
la x9, scratch # base address
sd x9, 0(x9) # store in memory
amomin.d x20, x9, (x9) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x10)
li x10, 0x02109d40a4329f1e # load random value
la x10, scratch # base address
sd x10, 0(x10) # store in memory
amomin.d x7, x10, (x10) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x11)
li x11, 0xbbf2ccca1f46739b # load random value
la x11, scratch # base address
sd x11, 0(x11) # store in memory
amomin.d x28, x11, (x11) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x12)
li x12, 0x2bfca5fce31ec9a4 # load random value
la x12, scratch # base address
sd x12, 0(x12) # store in memory
amomin.d x2, x12, (x12) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x13)
li x13, 0xc5ac17b3ab224387 # load random value
la x13, scratch # base address
sd x13, 0(x13) # store in memory
amomin.d x3, x13, (x13) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x14)
li x14, 0x195f0cd95b274b3a # load random value
la x14, scratch # base address
sd x14, 0(x14) # store in memory
amomin.d x15, x14, (x14) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x15)
li x15, 0x6bc23c5fe5a47cf4 # load random value
la x15, scratch # base address
sd x15, 0(x15) # store in memory
amomin.d x6, x15, (x15) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x16)
li x16, 0x7f3fa8020069e61f # load random value
la x16, scratch # base address
sd x16, 0(x16) # store in memory
amomin.d x12, x16, (x16) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x17)
li x17, 0xe156d3d04e47364d # load random value
la x17, scratch # base address
sd x17, 0(x17) # store in memory
amomin.d x17, x17, (x17) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x18)
li x18, 0x1fea5c24588b4315 # load random value
la x18, scratch # base address
sd x18, 0(x18) # store in memory
amomin.d x17, x18, (x18) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x19)
li x19, 0x76831ed81735cd2b # load random value
la x19, scratch # base address
sd x19, 0(x19) # store in memory
amomin.d x1, x19, (x19) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x20)
li x20, 0xe9527435fcadbdde # load random value
la x20, scratch # base address
sd x20, 0(x20) # store in memory
amomin.d x27, x20, (x20) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x21)
li x21, 0xb9e8ffc07915784d # load random value
la x21, scratch # base address
sd x21, 0(x21) # store in memory
amomin.d x17, x21, (x21) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x22)
li x22, 0xa25c635d75a2049e # load random value
la x22, scratch # base address
sd x22, 0(x22) # store in memory
amomin.d x30, x22, (x22) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x23)
li x23, 0xe3eb707046dbac67 # load random value
la x23, scratch # base address
sd x23, 0(x23) # store in memory
amomin.d x5, x23, (x23) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x24)
li x24, 0xa3cb896e8799e7d8 # load random value
la x24, scratch # base address
sd x24, 0(x24) # store in memory
amomin.d x25, x24, (x24) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x25)
li x25, 0x3d7878d8f4dd5b4f # load random value
la x25, scratch # base address
sd x25, 0(x25) # store in memory
amomin.d x21, x25, (x25) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x26)
li x26, 0xcd98103928df3d0a # load random value
la x26, scratch # base address
sd x26, 0(x26) # store in memory
amomin.d x22, x26, (x26) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x27)
li x27, 0xce3443fd2cdd1804 # load random value
la x27, scratch # base address
sd x27, 0(x27) # store in memory
amomin.d x21, x27, (x27) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x28)
li x28, 0x27c24f26b27f6d33 # load random value
la x28, scratch # base address
sd x28, 0(x28) # store in memory
amomin.d x10, x28, (x28) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x29)
li x29, 0xe7c52d36ccc2443c # load random value
la x29, scratch # base address
sd x29, 0(x29) # store in memory
amomin.d x1, x29, (x29) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x30)
li x30, 0x1bba670f9ba0520e # load random value
la x30, scratch # base address
sd x30, 0(x30) # store in memory
amomin.d x5, x30, (x30) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x31)
li x31, 0xc11d2b058d685763 # load random value
la x31, scratch # base address
sd x31, 0(x31) # store in memory
amomin.d x28, x31, (x31) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x1)
li x23, 0x2f9c8327674c8d31 # load random value
la x1, scratch # base address
sd x23, 0(x1) # store in memory
li x23, 0x1b70451c25428cd1 # load another value into integer register
amomin.d x1, x23, (x1) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x2)
li x11, 0x5c3443fe7f47ba4e # load random value
la x2, scratch # base address
sd x11, 0(x2) # store in memory
li x11, 0xcb6898dafad5b1fe # load another value into integer register
amomin.d x2, x11, (x2) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x3)
li x11, 0x839e544d8de0f957 # load random value
la x3, scratch # base address
sd x11, 0(x3) # store in memory
li x11, 0xb166b75f0caa02c0 # load another value into integer register
amomin.d x3, x11, (x3) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x4)
mv x5, x4 # switch signature pointer register to avoid conflict with test
li x24, 0x81385fe2ca8d23ab # load random value
la x4, scratch # base address
sd x24, 0(x4) # store in memory
li x24, 0x433add53b6ee2351 # load another value into integer register
amomin.d x4, x24, (x4) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x5)
mv x6, x5 # switch signature pointer register to avoid conflict with test
li x18, 0x5f887b40203a83a1 # load random value
la x5, scratch # base address
sd x18, 0(x5) # store in memory
li x18, 0x6723df09cc0729c0 # load another value into integer register
amomin.d x5, x18, (x5) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x6)
mv x7, x6 # switch signature pointer register to avoid conflict with test
li x27, 0x4d298fbb0e67ce45 # load random value
la x6, scratch # base address
sd x27, 0(x6) # store in memory
li x27, 0xc36d8be85a31f9e2 # load another value into integer register
amomin.d x6, x27, (x6) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x7)
mv x4, x7 # switch signature pointer register to avoid conflict with test
li x2, 0x9d3b7109b579d372 # load random value
la x7, scratch # base address
sd x2, 0(x7) # store in memory
li x2, 0x5a54200719f489b4 # load another value into integer register
amomin.d x7, x2, (x7) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x8)
li x25, 0xe9edee6bd5d1cabe # load random value
la x8, scratch # base address
sd x25, 0(x8) # store in memory
li x25, 0x56be0f18b651bc5d # load another value into integer register
amomin.d x8, x25, (x8) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x9)
li x21, 0x7528326fb27d9aac # load random value
la x9, scratch # base address
sd x21, 0(x9) # store in memory
li x21, 0x4421229289eaf740 # load another value into integer register
amomin.d x9, x21, (x9) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x10)
li x28, 0xf43317d1f27d3280 # load random value
la x10, scratch # base address
sd x28, 0(x10) # store in memory
li x28, 0x381cdf5b1cd15889 # load another value into integer register
amomin.d x10, x28, (x10) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x11)
li x30, 0x8c73e6108136a988 # load random value
la x11, scratch # base address
sd x30, 0(x11) # store in memory
li x30, 0xee2b0c555e00a2a7 # load another value into integer register
amomin.d x11, x30, (x11) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x12)
li x28, 0x380bd9011c7e30e7 # load random value
la x12, scratch # base address
sd x28, 0(x12) # store in memory
li x28, 0x89d8c8fcc87d489f # load another value into integer register
amomin.d x12, x28, (x12) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x13)
li x17, 0x68007446680a0d3f # load random value
la x13, scratch # base address
sd x17, 0(x13) # store in memory
li x17, 0x8d9d6d48cd5ffa50 # load another value into integer register
amomin.d x13, x17, (x13) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x14)
li x20, 0x50c4aedd8b76129f # load random value
la x14, scratch # base address
sd x20, 0(x14) # store in memory
li x20, 0xdad50dccaf504ac1 # load another value into integer register
amomin.d x14, x20, (x14) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x15)
li x17, 0x2bdfb2f6d2fd4b7f # load random value
la x15, scratch # base address
sd x17, 0(x15) # store in memory
li x17, 0x89cde9d5c031f7ec # load another value into integer register
amomin.d x15, x17, (x15) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x16)
li x9, 0x7626f304daccc90e # load random value
la x16, scratch # base address
sd x9, 0(x16) # store in memory
li x9, 0x126299a322c3aa30 # load another value into integer register
amomin.d x16, x9, (x16) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x17)
li x25, 0x0b135a39ae32ed3e # load random value
la x17, scratch # base address
sd x25, 0(x17) # store in memory
li x25, 0x94e0c55a07100295 # load another value into integer register
amomin.d x17, x25, (x17) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x18)
li x11, 0x7aeb66182bf4ea6f # load random value
la x18, scratch # base address
sd x11, 0(x18) # store in memory
li x11, 0x86d93c12d95d85cb # load another value into integer register
amomin.d x18, x11, (x18) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x19)
li x10, 0xd41bedbcbb57c10f # load random value
la x19, scratch # base address
sd x10, 0(x19) # store in memory
li x10, 0x730df6facf1a2d4c # load another value into integer register
amomin.d x19, x10, (x19) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x20)
li x22, 0x2adc6dc6100efc65 # load random value
la x20, scratch # base address
sd x22, 0(x20) # store in memory
li x22, 0x4355e978b8c7d77c # load another value into integer register
amomin.d x20, x22, (x20) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x21)
li x5, 0x340b1e632ec4b942 # load random value
la x21, scratch # base address
sd x5, 0(x21) # store in memory
li x5, 0xb610a4c8c49f2e0d # load another value into integer register
amomin.d x21, x5, (x21) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x22)
li x27, 0xb9abd26f1cd06437 # load random value
la x22, scratch # base address
sd x27, 0(x22) # store in memory
li x27, 0xee822f43532e05fc # load another value into integer register
amomin.d x22, x27, (x22) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x23)
li x27, 0xb43d84a2729515e4 # load random value
la x23, scratch # base address
sd x27, 0(x23) # store in memory
li x27, 0xaa29de82081c88d3 # load another value into integer register
amomin.d x23, x27, (x23) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x24)
li x17, 0x3483beb47696aa3a # load random value
la x24, scratch # base address
sd x17, 0(x24) # store in memory
li x17, 0xfe60390a8c56fb91 # load another value into integer register
amomin.d x24, x17, (x24) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x25)
li x22, 0xd0f1f77375b2d724 # load random value
la x25, scratch # base address
sd x22, 0(x25) # store in memory
li x22, 0x9a9a138c315af36d # load another value into integer register
amomin.d x25, x22, (x25) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x26)
li x20, 0xa992d37f6ef51b1f # load random value
la x26, scratch # base address
sd x20, 0(x26) # store in memory
li x20, 0xac5076225a5ca838 # load another value into integer register
amomin.d x26, x20, (x26) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x27)
li x11, 0x95cb416ed9fbece8 # load random value
la x27, scratch # base address
sd x11, 0(x27) # store in memory
li x11, 0x10c7e85e6add4a68 # load another value into integer register
amomin.d x27, x11, (x27) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x28)
li x31, 0x9fef023ce67f760d # load random value
la x28, scratch # base address
sd x31, 0(x28) # store in memory
li x31, 0x0a32a6ff691c1b18 # load another value into integer register
amomin.d x28, x31, (x28) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x29)
li x21, 0x2aa0e75fcc0d25d6 # load random value
la x29, scratch # base address
sd x21, 0(x29) # store in memory
li x21, 0xbb0d054ff3ea3eaa # load another value into integer register
amomin.d x29, x21, (x29) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x30)
li x24, 0x269fb706a9bccec9 # load random value
la x30, scratch # base address
sd x24, 0(x30) # store in memory
li x24, 0x129b3430379e7546 # load another value into integer register
amomin.d x30, x24, (x30) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x31)
li x9, 0xb82ddaa5c5fe3ea4 # load random value
la x31, scratch # base address
sd x9, 0(x31) # store in memory
li x9, 0xcb2ce2671edd3af8 # load another value into integer register
amomin.d x31, x9, (x31) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x0)
li x0, 0xd298b77cb8574f0d # load random value
la x17, scratch # base address
sd x0, 0(x17) # store in memory
li x0, 0x5f2054ca07bb7baa # load another value into integer register
amomin.d x0, x0, (x17) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x1)
li x1, 0x2bdba95b4249248e # load random value
la x23, scratch # base address
sd x1, 0(x23) # store in memory
li x1, 0xe88349813a6f333e # load another value into integer register
amomin.d x1, x1, (x23) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x2)
li x2, 0xc3b5c10f27be4a1e # load random value
la x5, scratch # base address
sd x2, 0(x5) # store in memory
li x2, 0xa424da4b6190e1a0 # load another value into integer register
amomin.d x2, x2, (x5) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x3)
li x3, 0x7678dd10fdf94e14 # load random value
la x23, scratch # base address
sd x3, 0(x23) # store in memory
li x3, 0xef80249cba579fc5 # load another value into integer register
amomin.d x3, x3, (x23) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x4)
mv x5, x4 # switch signature pointer register to avoid conflict with test
li x4, 0x2ff29fd37301527c # load random value
la x16, scratch # base address
sd x4, 0(x16) # store in memory
li x4, 0x9a221e94e2d2c011 # load another value into integer register
amomin.d x4, x4, (x16) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x5)
mv x6, x5 # switch signature pointer register to avoid conflict with test
li x5, 0xb97bf068efb34d2c # load random value
la x18, scratch # base address
sd x5, 0(x18) # store in memory
li x5, 0xfa0ae570addee142 # load another value into integer register
amomin.d x5, x5, (x18) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x6)
mv x7, x6 # switch signature pointer register to avoid conflict with test
li x6, 0x6910c94b725602a7 # load random value
la x20, scratch # base address
sd x6, 0(x20) # store in memory
li x6, 0x3b69b79e3643c5d2 # load another value into integer register
amomin.d x6, x6, (x20) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x7)
mv x4, x7 # switch signature pointer register to avoid conflict with test
li x7, 0x6a7bb69e0b34b5fa # load random value
la x29, scratch # base address
sd x7, 0(x29) # store in memory
li x7, 0xf8202a1cb7ee37ac # load another value into integer register
amomin.d x7, x7, (x29) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x8)
li x8, 0xc6b97555650452bb # load random value
la x11, scratch # base address
sd x8, 0(x11) # store in memory
li x8, 0x7f1e593c8e67f69b # load another value into integer register
amomin.d x8, x8, (x11) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x9)
li x9, 0xa096543dae33ae32 # load random value
la x15, scratch # base address
sd x9, 0(x15) # store in memory
li x9, 0xd0a82789522043b3 # load another value into integer register
amomin.d x9, x9, (x15) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x10)
li x10, 0xb81aa1b39506dacb # load random value
la x3, scratch # base address
sd x10, 0(x3) # store in memory
li x10, 0x56dc697ac73e15b3 # load another value into integer register
amomin.d x10, x10, (x3) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x11)
li x11, 0xb74d1552554703b9 # load random value
la x19, scratch # base address
sd x11, 0(x19) # store in memory
li x11, 0x534829aac7cf5090 # load another value into integer register
amomin.d x11, x11, (x19) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x12)
li x12, 0x9c095f8bc4b57cb7 # load random value
la x6, scratch # base address
sd x12, 0(x6) # store in memory
li x12, 0x6294085222328a3b # load another value into integer register
amomin.d x12, x12, (x6) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x13)
li x13, 0x4d9678f93607fc4c # load random value
la x23, scratch # base address
sd x13, 0(x23) # store in memory
li x13, 0xf4f6fc28595b6616 # load another value into integer register
amomin.d x13, x13, (x23) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x14)
li x14, 0xf196bd44660a8eba # load random value
la x30, scratch # base address
sd x14, 0(x30) # store in memory
li x14, 0x01f6fa6095081bd6 # load another value into integer register
amomin.d x14, x14, (x30) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x15)
li x15, 0x31479319f33ba6fe # load random value
la x22, scratch # base address
sd x15, 0(x22) # store in memory
li x15, 0x8e794ec6f743ffb0 # load another value into integer register
amomin.d x15, x15, (x22) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x16)
li x16, 0xb8d21710115f5906 # load random value
la x1, scratch # base address
sd x16, 0(x1) # store in memory
li x16, 0x04668fa028b187af # load another value into integer register
amomin.d x16, x16, (x1) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x17)
li x17, 0xbfa0a4bc1c02766e # load random value
la x27, scratch # base address
sd x17, 0(x27) # store in memory
li x17, 0x53bc08550931747b # load another value into integer register
amomin.d x17, x17, (x27) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x18)
li x18, 0x9f44cd1421381f6b # load random value
la x18, scratch # base address
sd x18, 0(x18) # store in memory
amomin.d x18, x18, (x18) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x19)
li x19, 0xe3f5945d34424b86 # load random value
la x15, scratch # base address
sd x19, 0(x15) # store in memory
li x19, 0x157ee3c38ff75c77 # load another value into integer register
amomin.d x19, x19, (x15) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x20)
li x20, 0xe1ea5be0273da709 # load random value
la x25, scratch # base address
sd x20, 0(x25) # store in memory
li x20, 0x2a860b691aba4ce0 # load another value into integer register
amomin.d x20, x20, (x25) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x21)
li x21, 0xd4f9ac2b4e2f2b13 # load random value
la x29, scratch # base address
sd x21, 0(x29) # store in memory
li x21, 0xe04b1f508ba706b7 # load another value into integer register
amomin.d x21, x21, (x29) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x22)
li x22, 0xd6ea7e7097567eea # load random value
la x19, scratch # base address
sd x22, 0(x19) # store in memory
li x22, 0x05cf68334115a5ea # load another value into integer register
amomin.d x22, x22, (x19) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x23)
li x23, 0xf22923e9060fdeef # load random value
la x16, scratch # base address
sd x23, 0(x16) # store in memory
li x23, 0x716df0478427f92d # load another value into integer register
amomin.d x23, x23, (x16) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x24)
li x24, 0x5f01a456c28ff978 # load random value
la x12, scratch # base address
sd x24, 0(x12) # store in memory
li x24, 0xb2fad7f12d36b21e # load another value into integer register
amomin.d x24, x24, (x12) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x25)
li x25, 0x5f22454bda4d516e # load random value
la x9, scratch # base address
sd x25, 0(x9) # store in memory
li x25, 0xa2d1f239c15383bc # load another value into integer register
amomin.d x25, x25, (x9) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x26)
li x26, 0xf4baaaa88391697a # load random value
la x20, scratch # base address
sd x26, 0(x20) # store in memory
li x26, 0xc2aba0d4cc762176 # load another value into integer register
amomin.d x26, x26, (x20) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x27)
li x27, 0xc9a2257c39429abe # load random value
la x3, scratch # base address
sd x27, 0(x3) # store in memory
li x27, 0x8a264b2779c13c4c # load another value into integer register
amomin.d x27, x27, (x3) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x28)
li x28, 0x608a4953e30a07a2 # load random value
la x17, scratch # base address
sd x28, 0(x17) # store in memory
li x28, 0xc1511a2fc8d931aa # load another value into integer register
amomin.d x28, x28, (x17) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x29)
li x29, 0xe0bf6306ddc6ea30 # load random value
la x23, scratch # base address
sd x29, 0(x23) # store in memory
li x29, 0xfd07375b7997df58 # load another value into integer register
amomin.d x29, x29, (x23) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x30)
li x30, 0xd8b3c95125bf1ed1 # load random value
la x20, scratch # base address
sd x30, 0(x20) # store in memory
li x30, 0x82ac4c7be5e6fc4c # load another value into integer register
amomin.d x30, x30, (x20) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x31)
li x31, 0x2d0b299db6eee78b # load random value
la x30, scratch # base address
sd x31, 0(x30) # store in memory
li x31, 0x3eecaf1ed5ef699d # load another value into integer register
amomin.d x31, x31, (x30) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x1)
li x1, 0xc096e02504b9f3f4 # load random value
la x1, scratch # base address
sd x1, 0(x1) # store in memory
amomin.d x1, x1, (x1) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x2)
li x2, 0x4f2ddb5da8b15f9c # load random value
la x2, scratch # base address
sd x2, 0(x2) # store in memory
amomin.d x2, x2, (x2) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x3)
li x3, 0x41979a43c3258917 # load random value
la x3, scratch # base address
sd x3, 0(x3) # store in memory
amomin.d x3, x3, (x3) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x4)
mv x5, x4 # switch signature pointer register to avoid conflict with test
li x4, 0xc7ffaf1c4373f7f0 # load random value
la x4, scratch # base address
sd x4, 0(x4) # store in memory
amomin.d x4, x4, (x4) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x5)
mv x6, x5 # switch signature pointer register to avoid conflict with test
li x5, 0x70b1ef875d4a94b6 # load random value
la x5, scratch # base address
sd x5, 0(x5) # store in memory
amomin.d x5, x5, (x5) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x6)
mv x7, x6 # switch signature pointer register to avoid conflict with test
li x6, 0xcae23607b2a459fc # load random value
la x6, scratch # base address
sd x6, 0(x6) # store in memory
amomin.d x6, x6, (x6) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x7)
mv x4, x7 # switch signature pointer register to avoid conflict with test
li x7, 0xe8c93462188daacd # load random value
la x7, scratch # base address
sd x7, 0(x7) # store in memory
amomin.d x7, x7, (x7) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x8)
li x8, 0xbf7b35f710eee14e # load random value
la x8, scratch # base address
sd x8, 0(x8) # store in memory
amomin.d x8, x8, (x8) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x9)
li x9, 0x907bab55e18955ce # load random value
la x9, scratch # base address
sd x9, 0(x9) # store in memory
amomin.d x9, x9, (x9) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x10)
li x10, 0x1dba1e2342a3c78c # load random value
la x10, scratch # base address
sd x10, 0(x10) # store in memory
amomin.d x10, x10, (x10) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x11)
li x11, 0x316b8e78d93fbc3f # load random value
la x11, scratch # base address
sd x11, 0(x11) # store in memory
amomin.d x11, x11, (x11) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x12)
li x12, 0x746f99938c695585 # load random value
la x12, scratch # base address
sd x12, 0(x12) # store in memory
amomin.d x12, x12, (x12) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x13)
li x13, 0x16de90cb45e3e83a # load random value
la x13, scratch # base address
sd x13, 0(x13) # store in memory
amomin.d x13, x13, (x13) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x14)
li x14, 0x09e812cf95c091e1 # load random value
la x14, scratch # base address
sd x14, 0(x14) # store in memory
amomin.d x14, x14, (x14) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x15)
li x15, 0x3a64223818599206 # load random value
la x15, scratch # base address
sd x15, 0(x15) # store in memory
amomin.d x15, x15, (x15) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x16)
li x16, 0x6ee293f21daeeaa7 # load random value
la x16, scratch # base address
sd x16, 0(x16) # store in memory
amomin.d x16, x16, (x16) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x17)
li x17, 0x7661c607ce09c03e # load random value
la x17, scratch # base address
sd x17, 0(x17) # store in memory
amomin.d x17, x17, (x17) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x18)
li x18, 0xfa1c2cfdd1908714 # load random value
la x18, scratch # base address
sd x18, 0(x18) # store in memory
amomin.d x18, x18, (x18) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x19)
li x19, 0x63682a34a6ac3d67 # load random value
la x19, scratch # base address
sd x19, 0(x19) # store in memory
amomin.d x19, x19, (x19) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x20)
li x20, 0x49d0ddb947a304a1 # load random value
la x20, scratch # base address
sd x20, 0(x20) # store in memory
amomin.d x20, x20, (x20) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x21)
li x21, 0x285eafad3d916697 # load random value
la x21, scratch # base address
sd x21, 0(x21) # store in memory
amomin.d x21, x21, (x21) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x22)
li x22, 0x47a7b2bcf51a35d4 # load random value
la x22, scratch # base address
sd x22, 0(x22) # store in memory
amomin.d x22, x22, (x22) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x23)
li x23, 0x1c26a2eb54caf958 # load random value
la x23, scratch # base address
sd x23, 0(x23) # store in memory
amomin.d x23, x23, (x23) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x24)
li x24, 0x81d8b777c02407c5 # load random value
la x24, scratch # base address
sd x24, 0(x24) # store in memory
amomin.d x24, x24, (x24) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x25)
li x25, 0x68bbb3e8b94165fb # load random value
la x25, scratch # base address
sd x25, 0(x25) # store in memory
amomin.d x25, x25, (x25) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x26)
li x26, 0x3026443ea5544c23 # load random value
la x26, scratch # base address
sd x26, 0(x26) # store in memory
amomin.d x26, x26, (x26) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x27)
li x27, 0x49c686b605c8e743 # load random value
la x27, scratch # base address
sd x27, 0(x27) # store in memory
amomin.d x27, x27, (x27) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x28)
li x28, 0xe02f4c93eb27666d # load random value
la x28, scratch # base address
sd x28, 0(x28) # store in memory
amomin.d x28, x28, (x28) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x29)
li x29, 0xb29279aa12f0338f # load random value
la x29, scratch # base address
sd x29, 0(x29) # store in memory
amomin.d x29, x29, (x29) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x30)
li x30, 0x18bfdce8a0f17055 # load random value
la x30, scratch # base address
sd x30, 0(x30) # store in memory
amomin.d x30, x30, (x30) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x31)
li x31, 0x57cfdea9d20e78c9 # load random value
la x31, scratch # base address
sd x31, 0(x31) # store in memory
amomin.d x31, x31, (x31) # perform operation

# Testcase cp_gpr/fpr_hazard nohaz test
la x25, scratch
add x8, x30, x10 # perform first operation
amomin.d x6, x22, (x25) # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard nohaz test
la x11, scratch
add x30, x2, x7 # perform first operation
amomin.d x23, x19, (x11) # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard nohaz test
la x29, scratch
add x25, x27, x30 # perform first operation
amomin.d x8, x14, (x29) # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard raw test
la x19, scratch
add x10, x10, x0 # perform first operation
amomin.d x10, x10, (x19) # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard raw test
la x31, scratch
add x31, x31, x0 # perform first operation
amomin.d x12, x10, (x31) # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard raw test
la x20, scratch
add x28, x28, x0 # perform first operation
amomin.d x16, x8, (x20) # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard waw test
la x14, scratch
add x8, x23, x1 # perform first operation
amomin.d x8, x3, (x14) # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard waw test
la x17, scratch
add x14, x1, x2 # perform first operation
amomin.d x14, x22, (x17) # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard waw test
la x27, scratch
add x16, x30, x9 # perform first operation
amomin.d x16, x22, (x27) # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard war test
la x16, scratch
add x10, x5, x26 # perform first operation
amomin.d x5, x17, (x16) # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard war test
la x23, scratch
add x18, x28, x27 # perform first operation
amomin.d x27, x25, (x23) # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard war test
la x5, scratch
add x2, x26, x10 # perform first operation
amomin.d x17, x12, (x5) # perform second (triggering) operation

#.EQU SIGSIZE,0


// ******************
// Tests from: WALLY-COV-amoor.d.S
// ******************


# initialize signature pointer
la x4, begin_signature

    
# Testcase cp_rs1 (Test source rs1 = x1)
li x7, 0x5dcfec513cc293aa # load random value
la x1, scratch # base address
sd x7, 0(x1) # store in memory
li x7, 0x5be2841691b0d5b7 # load another value into integer register
amoor.d x26, x7, (x1) # perform operation

# Testcase cp_rs1 (Test source rs1 = x2)
li x17, 0x18eca5e0391f0239 # load random value
la x2, scratch # base address
sd x17, 0(x2) # store in memory
li x17, 0xda3794f248408236 # load another value into integer register
amoor.d x26, x17, (x2) # perform operation

# Testcase cp_rs1 (Test source rs1 = x3)
li x1, 0x279b40e72ba085d5 # load random value
la x3, scratch # base address
sd x1, 0(x3) # store in memory
li x1, 0xeb59f2a7086c7b74 # load another value into integer register
amoor.d x9, x1, (x3) # perform operation

# Testcase cp_rs1 (Test source rs1 = x4)
mv x5, x4 # switch signature pointer register to avoid conflict with test
li x27, 0xb25496559be09808 # load random value
la x4, scratch # base address
sd x27, 0(x4) # store in memory
li x27, 0xf2a385906cd0873a # load another value into integer register
amoor.d x8, x27, (x4) # perform operation

# Testcase cp_rs1 (Test source rs1 = x5)
mv x6, x5 # switch signature pointer register to avoid conflict with test
li x9, 0xca7f8135a684fdac # load random value
la x5, scratch # base address
sd x9, 0(x5) # store in memory
li x9, 0x8137130206a8bcf2 # load another value into integer register
amoor.d x10, x9, (x5) # perform operation

# Testcase cp_rs1 (Test source rs1 = x6)
mv x7, x6 # switch signature pointer register to avoid conflict with test
li x15, 0x509f30c25e8cd030 # load random value
la x6, scratch # base address
sd x15, 0(x6) # store in memory
li x15, 0x0e4be173a8ea3e2a # load another value into integer register
amoor.d x19, x15, (x6) # perform operation

# Testcase cp_rs1 (Test source rs1 = x7)
mv x4, x7 # switch signature pointer register to avoid conflict with test
li x31, 0x609d81945c8c23f4 # load random value
la x7, scratch # base address
sd x31, 0(x7) # store in memory
li x31, 0xc31ca444941fa7ab # load another value into integer register
amoor.d x2, x31, (x7) # perform operation

# Testcase cp_rs1 (Test source rs1 = x8)
li x1, 0xa4a2354da9695e5e # load random value
la x8, scratch # base address
sd x1, 0(x8) # store in memory
li x1, 0x89535ddfb15f2bc1 # load another value into integer register
amoor.d x2, x1, (x8) # perform operation

# Testcase cp_rs1 (Test source rs1 = x9)
li x30, 0x5f0417bd11667bf9 # load random value
la x9, scratch # base address
sd x30, 0(x9) # store in memory
li x30, 0x63d776b261e1b2ac # load another value into integer register
amoor.d x18, x30, (x9) # perform operation

# Testcase cp_rs1 (Test source rs1 = x10)
li x24, 0x85b1f2c88ba315ee # load random value
la x10, scratch # base address
sd x24, 0(x10) # store in memory
li x24, 0x647094243d18b56c # load another value into integer register
amoor.d x11, x24, (x10) # perform operation

# Testcase cp_rs1 (Test source rs1 = x11)
li x15, 0x4f07b41b96fbcfe8 # load random value
la x11, scratch # base address
sd x15, 0(x11) # store in memory
li x15, 0x5f328726afa55797 # load another value into integer register
amoor.d x21, x15, (x11) # perform operation

# Testcase cp_rs1 (Test source rs1 = x12)
li x1, 0x3c2cd67faa37ed7c # load random value
la x12, scratch # base address
sd x1, 0(x12) # store in memory
li x1, 0x4e7aa9383639169c # load another value into integer register
amoor.d x16, x1, (x12) # perform operation

# Testcase cp_rs1 (Test source rs1 = x13)
li x23, 0x0e25d9fc5439a01c # load random value
la x13, scratch # base address
sd x23, 0(x13) # store in memory
li x23, 0x627689af407abf69 # load another value into integer register
amoor.d x15, x23, (x13) # perform operation

# Testcase cp_rs1 (Test source rs1 = x14)
li x13, 0xff2cc31be212c535 # load random value
la x14, scratch # base address
sd x13, 0(x14) # store in memory
li x13, 0xf85542550a3b92b0 # load another value into integer register
amoor.d x9, x13, (x14) # perform operation

# Testcase cp_rs1 (Test source rs1 = x15)
li x27, 0x2e8fbd6248f63a08 # load random value
la x15, scratch # base address
sd x27, 0(x15) # store in memory
li x27, 0x20e3a0ec78a05dfe # load another value into integer register
amoor.d x21, x27, (x15) # perform operation

# Testcase cp_rs1 (Test source rs1 = x16)
li x3, 0x40d7299d692b19c8 # load random value
la x16, scratch # base address
sd x3, 0(x16) # store in memory
li x3, 0x91e0a9640de8b0d4 # load another value into integer register
amoor.d x20, x3, (x16) # perform operation

# Testcase cp_rs1 (Test source rs1 = x17)
li x3, 0xd0b12918d50b18f1 # load random value
la x17, scratch # base address
sd x3, 0(x17) # store in memory
li x3, 0x0089f9cb71d5655b # load another value into integer register
amoor.d x12, x3, (x17) # perform operation

# Testcase cp_rs1 (Test source rs1 = x18)
li x17, 0x7d18ea0b84221ed3 # load random value
la x18, scratch # base address
sd x17, 0(x18) # store in memory
li x17, 0xa729b01467fba1ca # load another value into integer register
amoor.d x3, x17, (x18) # perform operation

# Testcase cp_rs1 (Test source rs1 = x19)
li x13, 0x7725511e64959e46 # load random value
la x19, scratch # base address
sd x13, 0(x19) # store in memory
li x13, 0x9f980bc84b143d25 # load another value into integer register
amoor.d x16, x13, (x19) # perform operation

# Testcase cp_rs1 (Test source rs1 = x20)
li x30, 0x3fa4ffd805ee26a5 # load random value
la x20, scratch # base address
sd x30, 0(x20) # store in memory
li x30, 0x6c5e89da543a0b6e # load another value into integer register
amoor.d x13, x30, (x20) # perform operation

# Testcase cp_rs1 (Test source rs1 = x21)
li x5, 0x54b33c4c77cbcf76 # load random value
la x21, scratch # base address
sd x5, 0(x21) # store in memory
li x5, 0x990a5e290e5ebb25 # load another value into integer register
amoor.d x14, x5, (x21) # perform operation

# Testcase cp_rs1 (Test source rs1 = x22)
li x3, 0xd4dc1a6a55c087f4 # load random value
la x22, scratch # base address
sd x3, 0(x22) # store in memory
li x3, 0x487dd5410f5c1165 # load another value into integer register
amoor.d x30, x3, (x22) # perform operation

# Testcase cp_rs1 (Test source rs1 = x23)
li x26, 0x667853355e727914 # load random value
la x23, scratch # base address
sd x26, 0(x23) # store in memory
li x26, 0xb352d2184d2b9d4b # load another value into integer register
amoor.d x25, x26, (x23) # perform operation

# Testcase cp_rs1 (Test source rs1 = x24)
li x12, 0xa43f3c285bedb6ea # load random value
la x24, scratch # base address
sd x12, 0(x24) # store in memory
li x12, 0xbe2f840cebd45f93 # load another value into integer register
amoor.d x17, x12, (x24) # perform operation

# Testcase cp_rs1 (Test source rs1 = x25)
li x18, 0x2619722b94481820 # load random value
la x25, scratch # base address
sd x18, 0(x25) # store in memory
li x18, 0xa4630ed7dd020e96 # load another value into integer register
amoor.d x7, x18, (x25) # perform operation

# Testcase cp_rs1 (Test source rs1 = x26)
li x6, 0x14ca5b4c557c4712 # load random value
la x26, scratch # base address
sd x6, 0(x26) # store in memory
li x6, 0x96147bd5a362b23a # load another value into integer register
amoor.d x25, x6, (x26) # perform operation

# Testcase cp_rs1 (Test source rs1 = x27)
li x12, 0x40e6862af6198690 # load random value
la x27, scratch # base address
sd x12, 0(x27) # store in memory
li x12, 0x2a2364085574e935 # load another value into integer register
amoor.d x28, x12, (x27) # perform operation

# Testcase cp_rs1 (Test source rs1 = x28)
li x5, 0x4a1d13fef72843c7 # load random value
la x28, scratch # base address
sd x5, 0(x28) # store in memory
li x5, 0x239a8f14e512d205 # load another value into integer register
amoor.d x10, x5, (x28) # perform operation

# Testcase cp_rs1 (Test source rs1 = x29)
li x6, 0x88361b97973970a4 # load random value
la x29, scratch # base address
sd x6, 0(x29) # store in memory
li x6, 0x9c290d3ee294122f # load another value into integer register
amoor.d x22, x6, (x29) # perform operation

# Testcase cp_rs1 (Test source rs1 = x30)
li x13, 0xb83869e22188eab2 # load random value
la x30, scratch # base address
sd x13, 0(x30) # store in memory
li x13, 0x181378c5b39d4077 # load another value into integer register
amoor.d x27, x13, (x30) # perform operation

# Testcase cp_rs1 (Test source rs1 = x31)
li x11, 0xe1a29f4dc486a43d # load random value
la x31, scratch # base address
sd x11, 0(x31) # store in memory
li x11, 0x5a8ddc7fe5799787 # load another value into integer register
amoor.d x8, x11, (x31) # perform operation

# Testcase cp_rs2 (Test source rs2 = x0)
li x0, 0xebd73478ac2676c2 # load random value
la x8, scratch # base address
sd x0, 0(x8) # store in memory
li x0, 0x57af6323bc2b1435 # load another value into integer register
amoor.d x27, x0, (x8) # perform operation

# Testcase cp_rs2 (Test source rs2 = x1)
li x1, 0x0f5b0dfe8e8acfba # load random value
la x15, scratch # base address
sd x1, 0(x15) # store in memory
li x1, 0x48fe25d51faeb6c2 # load another value into integer register
amoor.d x21, x1, (x15) # perform operation

# Testcase cp_rs2 (Test source rs2 = x2)
li x2, 0xfc1137e9af5ee78c # load random value
la x23, scratch # base address
sd x2, 0(x23) # store in memory
li x2, 0x472b8967dc030812 # load another value into integer register
amoor.d x13, x2, (x23) # perform operation

# Testcase cp_rs2 (Test source rs2 = x3)
li x3, 0x5daf9810ed698ec5 # load random value
la x7, scratch # base address
sd x3, 0(x7) # store in memory
li x3, 0xdce5284c07768b31 # load another value into integer register
amoor.d x26, x3, (x7) # perform operation

# Testcase cp_rs2 (Test source rs2 = x4)
mv x5, x4 # switch signature pointer register to avoid conflict with test
li x4, 0xdcc15e81d5406db0 # load random value
la x14, scratch # base address
sd x4, 0(x14) # store in memory
li x4, 0xaa76e34c31d4f467 # load another value into integer register
amoor.d x25, x4, (x14) # perform operation

# Testcase cp_rs2 (Test source rs2 = x5)
mv x6, x5 # switch signature pointer register to avoid conflict with test
li x5, 0x2d55871475bd0379 # load random value
la x13, scratch # base address
sd x5, 0(x13) # store in memory
li x5, 0xf4d582250d05aa9a # load another value into integer register
amoor.d x14, x5, (x13) # perform operation

# Testcase cp_rs2 (Test source rs2 = x6)
mv x7, x6 # switch signature pointer register to avoid conflict with test
li x6, 0x562ea75d20be31b1 # load random value
la x30, scratch # base address
sd x6, 0(x30) # store in memory
li x6, 0x5374857014c4bc15 # load another value into integer register
amoor.d x8, x6, (x30) # perform operation

# Testcase cp_rs2 (Test source rs2 = x7)
mv x4, x7 # switch signature pointer register to avoid conflict with test
li x7, 0x4d06700b10816048 # load random value
la x5, scratch # base address
sd x7, 0(x5) # store in memory
li x7, 0x857fa8139e002900 # load another value into integer register
amoor.d x2, x7, (x5) # perform operation

# Testcase cp_rs2 (Test source rs2 = x8)
li x8, 0xa7f9df5d15cbc7e0 # load random value
la x28, scratch # base address
sd x8, 0(x28) # store in memory
li x8, 0x1aa912fddcf8d3bd # load another value into integer register
amoor.d x22, x8, (x28) # perform operation

# Testcase cp_rs2 (Test source rs2 = x9)
li x9, 0x68d377138c2ff1ee # load random value
la x5, scratch # base address
sd x9, 0(x5) # store in memory
li x9, 0x552b552608f55df9 # load another value into integer register
amoor.d x29, x9, (x5) # perform operation

# Testcase cp_rs2 (Test source rs2 = x10)
li x10, 0x83257602b4f62206 # load random value
la x28, scratch # base address
sd x10, 0(x28) # store in memory
li x10, 0xfcd3505cbe724c4d # load another value into integer register
amoor.d x24, x10, (x28) # perform operation

# Testcase cp_rs2 (Test source rs2 = x11)
li x11, 0xf30dbdc7fd916c6a # load random value
la x28, scratch # base address
sd x11, 0(x28) # store in memory
li x11, 0x9686c6c7393ab208 # load another value into integer register
amoor.d x16, x11, (x28) # perform operation

# Testcase cp_rs2 (Test source rs2 = x12)
li x12, 0xeff2196efab8ba3e # load random value
la x23, scratch # base address
sd x12, 0(x23) # store in memory
li x12, 0x9d5f6c246360ebb3 # load another value into integer register
amoor.d x10, x12, (x23) # perform operation

# Testcase cp_rs2 (Test source rs2 = x13)
li x13, 0x3a6b040ec8eca1b9 # load random value
la x2, scratch # base address
sd x13, 0(x2) # store in memory
li x13, 0xf9145fd552a44e3d # load another value into integer register
amoor.d x12, x13, (x2) # perform operation

# Testcase cp_rs2 (Test source rs2 = x14)
li x14, 0x9db807d6f3b6fdba # load random value
la x13, scratch # base address
sd x14, 0(x13) # store in memory
li x14, 0xacef5a817d69ecbe # load another value into integer register
amoor.d x25, x14, (x13) # perform operation

# Testcase cp_rs2 (Test source rs2 = x15)
li x15, 0x6385d91ac5fb261f # load random value
la x6, scratch # base address
sd x15, 0(x6) # store in memory
li x15, 0x8eb00d515bcdec9a # load another value into integer register
amoor.d x19, x15, (x6) # perform operation

# Testcase cp_rs2 (Test source rs2 = x16)
li x16, 0xb207201930c537e4 # load random value
la x25, scratch # base address
sd x16, 0(x25) # store in memory
li x16, 0xb8db3167b06fda0c # load another value into integer register
amoor.d x11, x16, (x25) # perform operation

# Testcase cp_rs2 (Test source rs2 = x17)
li x17, 0xae454ca92cbeb46c # load random value
la x5, scratch # base address
sd x17, 0(x5) # store in memory
li x17, 0xaeced3c4c35024f4 # load another value into integer register
amoor.d x3, x17, (x5) # perform operation

# Testcase cp_rs2 (Test source rs2 = x18)
li x18, 0x125d4397f888fcca # load random value
la x23, scratch # base address
sd x18, 0(x23) # store in memory
li x18, 0x1acec322ef869e76 # load another value into integer register
amoor.d x19, x18, (x23) # perform operation

# Testcase cp_rs2 (Test source rs2 = x19)
li x19, 0xa0e8818c2e904af9 # load random value
la x29, scratch # base address
sd x19, 0(x29) # store in memory
li x19, 0x3379d7c41df7cf38 # load another value into integer register
amoor.d x14, x19, (x29) # perform operation

# Testcase cp_rs2 (Test source rs2 = x20)
li x20, 0x34328b0fb1c213fc # load random value
la x10, scratch # base address
sd x20, 0(x10) # store in memory
li x20, 0xc436d432d2d37c11 # load another value into integer register
amoor.d x1, x20, (x10) # perform operation

# Testcase cp_rs2 (Test source rs2 = x21)
li x21, 0x205c9a669b871955 # load random value
la x20, scratch # base address
sd x21, 0(x20) # store in memory
li x21, 0x6c947f607478ba41 # load another value into integer register
amoor.d x8, x21, (x20) # perform operation

# Testcase cp_rs2 (Test source rs2 = x22)
li x22, 0x245b282ad932bf97 # load random value
la x11, scratch # base address
sd x22, 0(x11) # store in memory
li x22, 0x264f1c7b523dc4bf # load another value into integer register
amoor.d x8, x22, (x11) # perform operation

# Testcase cp_rs2 (Test source rs2 = x23)
li x23, 0xa1494d6ecbb7a074 # load random value
la x9, scratch # base address
sd x23, 0(x9) # store in memory
li x23, 0x9fab9ad94c5eb9dd # load another value into integer register
amoor.d x20, x23, (x9) # perform operation

# Testcase cp_rs2 (Test source rs2 = x24)
li x24, 0x21a1968c54bf0440 # load random value
la x27, scratch # base address
sd x24, 0(x27) # store in memory
li x24, 0x5f522829d74c07dd # load another value into integer register
amoor.d x20, x24, (x27) # perform operation

# Testcase cp_rs2 (Test source rs2 = x25)
li x25, 0xf4745e041eac1f5d # load random value
la x17, scratch # base address
sd x25, 0(x17) # store in memory
li x25, 0xf711896bcbcac36c # load another value into integer register
amoor.d x24, x25, (x17) # perform operation

# Testcase cp_rs2 (Test source rs2 = x26)
li x26, 0x0890e6b8b1d80308 # load random value
la x8, scratch # base address
sd x26, 0(x8) # store in memory
li x26, 0x5d68bd84740d87f8 # load another value into integer register
amoor.d x29, x26, (x8) # perform operation

# Testcase cp_rs2 (Test source rs2 = x27)
li x27, 0xf5d96ef081d7e9ff # load random value
la x15, scratch # base address
sd x27, 0(x15) # store in memory
li x27, 0x2aec6fd528960993 # load another value into integer register
amoor.d x29, x27, (x15) # perform operation

# Testcase cp_rs2 (Test source rs2 = x28)
li x28, 0xaf39b0d4f33a182f # load random value
la x23, scratch # base address
sd x28, 0(x23) # store in memory
li x28, 0x6cf3fc30987422a4 # load another value into integer register
amoor.d x20, x28, (x23) # perform operation

# Testcase cp_rs2 (Test source rs2 = x29)
li x29, 0xac80bef2be1029ca # load random value
la x26, scratch # base address
sd x29, 0(x26) # store in memory
li x29, 0x68be2435e2f3e5dd # load another value into integer register
amoor.d x19, x29, (x26) # perform operation

# Testcase cp_rs2 (Test source rs2 = x30)
li x30, 0x162d5ce6724f1ba2 # load random value
la x28, scratch # base address
sd x30, 0(x28) # store in memory
li x30, 0x20633474b4aa19bd # load another value into integer register
amoor.d x25, x30, (x28) # perform operation

# Testcase cp_rs2 (Test source rs2 = x31)
li x31, 0x232542a865e94501 # load random value
la x6, scratch # base address
sd x31, 0(x6) # store in memory
li x31, 0x70972270712cba08 # load another value into integer register
amoor.d x26, x31, (x6) # perform operation

# Testcase cp_rd (Test destination rd = x0)
li x5, 0x0c5815856be5c8ab # load random value
la x31, scratch # base address
sd x5, 0(x31) # store in memory
li x5, 0xcda9fd99741c7849 # load another value into integer register
amoor.d x0, x5, (x31) # perform operation

# Testcase cp_rd (Test destination rd = x1)
li x28, 0xe671da8912ab3c23 # load random value
la x18, scratch # base address
sd x28, 0(x18) # store in memory
li x28, 0xfff58c5bdc1629a3 # load another value into integer register
amoor.d x1, x28, (x18) # perform operation

# Testcase cp_rd (Test destination rd = x2)
li x19, 0x8ea5937d9e8e62e0 # load random value
la x30, scratch # base address
sd x19, 0(x30) # store in memory
li x19, 0x1ea42a8154c3bca7 # load another value into integer register
amoor.d x2, x19, (x30) # perform operation

# Testcase cp_rd (Test destination rd = x3)
li x29, 0x5984a3e5e20a7569 # load random value
la x9, scratch # base address
sd x29, 0(x9) # store in memory
li x29, 0x1faf9033787b990d # load another value into integer register
amoor.d x3, x29, (x9) # perform operation

# Testcase cp_rd (Test destination rd = x4)
mv x6, x4 # switch signature pointer register to avoid conflict with test
li x5, 0xaad73eff9fc8fd98 # load random value
la x21, scratch # base address
sd x5, 0(x21) # store in memory
li x5, 0xfe98f148e4cd5035 # load another value into integer register
amoor.d x4, x5, (x21) # perform operation

# Testcase cp_rd (Test destination rd = x5)
li x1, 0xeedbcad773353638 # load random value
la x30, scratch # base address
sd x1, 0(x30) # store in memory
li x1, 0xbb98ee69f070fe51 # load another value into integer register
amoor.d x5, x1, (x30) # perform operation

# Testcase cp_rd (Test destination rd = x6)
mv x7, x6 # switch signature pointer register to avoid conflict with test
li x10, 0x39b76a4562506ca7 # load random value
la x21, scratch # base address
sd x10, 0(x21) # store in memory
li x10, 0xc1b0a23ff5c3bd5e # load another value into integer register
amoor.d x6, x10, (x21) # perform operation

# Testcase cp_rd (Test destination rd = x7)
mv x4, x7 # switch signature pointer register to avoid conflict with test
li x8, 0xc8ff652a0ad7999e # load random value
la x30, scratch # base address
sd x8, 0(x30) # store in memory
li x8, 0xee290c05ab19375f # load another value into integer register
amoor.d x7, x8, (x30) # perform operation

# Testcase cp_rd (Test destination rd = x8)
li x25, 0xbb42cace39376ab7 # load random value
la x18, scratch # base address
sd x25, 0(x18) # store in memory
li x25, 0xe2af73d4215c9466 # load another value into integer register
amoor.d x8, x25, (x18) # perform operation

# Testcase cp_rd (Test destination rd = x9)
li x20, 0x311b8ae144592b9f # load random value
la x8, scratch # base address
sd x20, 0(x8) # store in memory
li x20, 0x5d942f0727735a34 # load another value into integer register
amoor.d x9, x20, (x8) # perform operation

# Testcase cp_rd (Test destination rd = x10)
li x29, 0xfff1807b4083f4ea # load random value
la x11, scratch # base address
sd x29, 0(x11) # store in memory
li x29, 0x4dcc9bab8d7363f9 # load another value into integer register
amoor.d x10, x29, (x11) # perform operation

# Testcase cp_rd (Test destination rd = x11)
li x10, 0x3754615c603ee6ea # load random value
la x16, scratch # base address
sd x10, 0(x16) # store in memory
li x10, 0xfbf5ae0d75be751b # load another value into integer register
amoor.d x11, x10, (x16) # perform operation

# Testcase cp_rd (Test destination rd = x12)
li x14, 0xdd8a87975f6a1f09 # load random value
la x1, scratch # base address
sd x14, 0(x1) # store in memory
li x14, 0xd1d7f80a0f5184ad # load another value into integer register
amoor.d x12, x14, (x1) # perform operation

# Testcase cp_rd (Test destination rd = x13)
li x13, 0xc6600e646a2648fe # load random value
la x7, scratch # base address
sd x13, 0(x7) # store in memory
li x13, 0x6df67090c073942b # load another value into integer register
amoor.d x13, x13, (x7) # perform operation

# Testcase cp_rd (Test destination rd = x14)
li x30, 0x90a0c075592a170f # load random value
la x17, scratch # base address
sd x30, 0(x17) # store in memory
li x30, 0xb1a5216d3858c70f # load another value into integer register
amoor.d x14, x30, (x17) # perform operation

# Testcase cp_rd (Test destination rd = x15)
li x2, 0x36b0593fd0b74313 # load random value
la x3, scratch # base address
sd x2, 0(x3) # store in memory
li x2, 0xd7a6f7f10b326d8d # load another value into integer register
amoor.d x15, x2, (x3) # perform operation

# Testcase cp_rd (Test destination rd = x16)
li x10, 0xfd7343620818129b # load random value
la x29, scratch # base address
sd x10, 0(x29) # store in memory
li x10, 0x44340d8969fc0742 # load another value into integer register
amoor.d x16, x10, (x29) # perform operation

# Testcase cp_rd (Test destination rd = x17)
li x10, 0x8d86ee39a22292ed # load random value
la x29, scratch # base address
sd x10, 0(x29) # store in memory
li x10, 0xaf7362c28b42b804 # load another value into integer register
amoor.d x17, x10, (x29) # perform operation

# Testcase cp_rd (Test destination rd = x18)
li x30, 0x7cc2854516e02821 # load random value
la x6, scratch # base address
sd x30, 0(x6) # store in memory
li x30, 0x68be353ef76bb371 # load another value into integer register
amoor.d x18, x30, (x6) # perform operation

# Testcase cp_rd (Test destination rd = x19)
li x27, 0x4dc11c48e396ee69 # load random value
la x12, scratch # base address
sd x27, 0(x12) # store in memory
li x27, 0x464a9edb8f370c2b # load another value into integer register
amoor.d x19, x27, (x12) # perform operation

# Testcase cp_rd (Test destination rd = x20)
li x28, 0x0d9d9668c76d31c9 # load random value
la x8, scratch # base address
sd x28, 0(x8) # store in memory
li x28, 0x4174e213b6df232d # load another value into integer register
amoor.d x20, x28, (x8) # perform operation

# Testcase cp_rd (Test destination rd = x21)
li x1, 0x3c36de8198169072 # load random value
la x17, scratch # base address
sd x1, 0(x17) # store in memory
li x1, 0xe3941a80581254b1 # load another value into integer register
amoor.d x21, x1, (x17) # perform operation

# Testcase cp_rd (Test destination rd = x22)
li x11, 0x00c5cd636f120f70 # load random value
la x27, scratch # base address
sd x11, 0(x27) # store in memory
li x11, 0xbc9e5ca12ca04cd5 # load another value into integer register
amoor.d x22, x11, (x27) # perform operation

# Testcase cp_rd (Test destination rd = x23)
li x5, 0x7f80b2a211860f11 # load random value
la x20, scratch # base address
sd x5, 0(x20) # store in memory
li x5, 0x0097261f16788a24 # load another value into integer register
amoor.d x23, x5, (x20) # perform operation

# Testcase cp_rd (Test destination rd = x24)
li x13, 0xfc46430dd8543065 # load random value
la x12, scratch # base address
sd x13, 0(x12) # store in memory
li x13, 0x855301ae66c53156 # load another value into integer register
amoor.d x24, x13, (x12) # perform operation

# Testcase cp_rd (Test destination rd = x25)
li x5, 0xf4d1c04c223b576f # load random value
la x22, scratch # base address
sd x5, 0(x22) # store in memory
li x5, 0xb62286515c1da3f5 # load another value into integer register
amoor.d x25, x5, (x22) # perform operation

# Testcase cp_rd (Test destination rd = x26)
li x3, 0x5c0f1201b74bcb1a # load random value
la x12, scratch # base address
sd x3, 0(x12) # store in memory
li x3, 0x54821fba4205fe74 # load another value into integer register
amoor.d x26, x3, (x12) # perform operation

# Testcase cp_rd (Test destination rd = x27)
li x7, 0x857b0504723c0fe3 # load random value
la x21, scratch # base address
sd x7, 0(x21) # store in memory
li x7, 0xfafa16f437721248 # load another value into integer register
amoor.d x27, x7, (x21) # perform operation

# Testcase cp_rd (Test destination rd = x28)
li x20, 0x21d8f593093a21a0 # load random value
la x1, scratch # base address
sd x20, 0(x1) # store in memory
li x20, 0xea728eb3860b6f09 # load another value into integer register
amoor.d x28, x20, (x1) # perform operation

# Testcase cp_rd (Test destination rd = x29)
li x27, 0x7f6b0e8743713bc1 # load random value
la x17, scratch # base address
sd x27, 0(x17) # store in memory
li x27, 0xe7ac3ba8720d06cd # load another value into integer register
amoor.d x29, x27, (x17) # perform operation

# Testcase cp_rd (Test destination rd = x30)
li x10, 0xa2b7d807b86dd028 # load random value
la x22, scratch # base address
sd x10, 0(x22) # store in memory
li x10, 0x1d8d7ebea9e02bbe # load another value into integer register
amoor.d x30, x10, (x22) # perform operation

# Testcase cp_rd (Test destination rd = x31)
li x3, 0xeef36731febc0d67 # load random value
la x13, scratch # base address
sd x3, 0(x13) # store in memory
li x3, 0xb00b1d8666d723b3 # load another value into integer register
amoor.d x31, x3, (x13) # perform operation

# Testcase cp_rs2_corners (Test source rs2 value = 0x0)
li x21, 0x82f115efdf88da73 # load random value
la x13, scratch # base address
sd x21, 0(x13) # store in memory
li x21, 0x0000000000000000 # load another value into integer register
amoor.d x17, x21, (x13) # perform operation

# Testcase cp_rs2_corners (Test source rs2 value = 0x1)
li x19, 0xf602815ef8500eb5 # load random value
la x15, scratch # base address
sd x19, 0(x15) # store in memory
li x19, 0x0000000000000001 # load another value into integer register
amoor.d x6, x19, (x15) # perform operation

# Testcase cp_rs2_corners (Test source rs2 value = 0x2)
li x19, 0xc6f5f035b1ea8887 # load random value
la x30, scratch # base address
sd x19, 0(x30) # store in memory
li x19, 0x0000000000000002 # load another value into integer register
amoor.d x8, x19, (x30) # perform operation

# Testcase cp_rs2_corners (Test source rs2 value = 0x8000000000000000)
li x20, 0xe229aedc1b8968fa # load random value
la x19, scratch # base address
sd x20, 0(x19) # store in memory
li x20, 0x8000000000000000 # load another value into integer register
amoor.d x14, x20, (x19) # perform operation

# Testcase cp_rs2_corners (Test source rs2 value = 0x8000000000000001)
li x1, 0xaf4978e5f577d0f7 # load random value
la x11, scratch # base address
sd x1, 0(x11) # store in memory
li x1, 0x8000000000000001 # load another value into integer register
amoor.d x17, x1, (x11) # perform operation

# Testcase cp_rs2_corners (Test source rs2 value = 0x7fffffffffffffff)
li x2, 0x88b466844778c64d # load random value
la x30, scratch # base address
sd x2, 0(x30) # store in memory
li x2, 0x7fffffffffffffff # load another value into integer register
amoor.d x15, x2, (x30) # perform operation

# Testcase cp_rs2_corners (Test source rs2 value = 0x7ffffffffffffffe)
li x22, 0xcca90be6dd57be85 # load random value
la x2, scratch # base address
sd x22, 0(x2) # store in memory
li x22, 0x7ffffffffffffffe # load another value into integer register
amoor.d x6, x22, (x2) # perform operation

# Testcase cp_rs2_corners (Test source rs2 value = 0xffffffffffffffff)
li x9, 0xd5d26b6a8414769a # load random value
la x30, scratch # base address
sd x9, 0(x30) # store in memory
li x9, 0xffffffffffffffff # load another value into integer register
amoor.d x22, x9, (x30) # perform operation

# Testcase cp_rs2_corners (Test source rs2 value = 0xfffffffffffffffe)
li x11, 0x146bfe1580b88892 # load random value
la x21, scratch # base address
sd x11, 0(x21) # store in memory
li x11, 0xfffffffffffffffe # load another value into integer register
amoor.d x10, x11, (x21) # perform operation

# Testcase cp_rs2_corners (Test source rs2 value = 0x5bbc887763ae86f2)
li x7, 0x96d08a87018dc90c # load random value
la x30, scratch # base address
sd x7, 0(x30) # store in memory
li x7, 0x5bbc887763ae86f2 # load another value into integer register
amoor.d x2, x7, (x30) # perform operation

# Testcase cp_rs2_corners (Test source rs2 value = 0xaaaaaaaaaaaaaaaa)
li x18, 0x30c52774cb2b18a6 # load random value
la x12, scratch # base address
sd x18, 0(x12) # store in memory
li x18, 0xaaaaaaaaaaaaaaaa # load another value into integer register
amoor.d x24, x18, (x12) # perform operation

# Testcase cp_rs2_corners (Test source rs2 value = 0x5555555555555555)
li x5, 0xfd92d7bf0c753ce9 # load random value
la x23, scratch # base address
sd x5, 0(x23) # store in memory
li x5, 0x5555555555555555 # load another value into integer register
amoor.d x12, x5, (x23) # perform operation

# Testcase cp_rs2_corners (Test source rs2 value = 0xffffffff)
li x25, 0x200d6b3186140648 # load random value
la x22, scratch # base address
sd x25, 0(x22) # store in memory
li x25, 0x00000000ffffffff # load another value into integer register
amoor.d x11, x25, (x22) # perform operation

# Testcase cp_rs2_corners (Test source rs2 value = 0xfffffffe)
li x20, 0x291bc567eb3d9805 # load random value
la x8, scratch # base address
sd x20, 0(x8) # store in memory
li x20, 0x00000000fffffffe # load another value into integer register
amoor.d x18, x20, (x8) # perform operation

# Testcase cp_rs2_corners (Test source rs2 value = 0x100000000)
li x6, 0x799da09ce19b9bb4 # load random value
la x11, scratch # base address
sd x6, 0(x11) # store in memory
li x6, 0x0000000100000000 # load another value into integer register
amoor.d x5, x6, (x11) # perform operation

# Testcase cp_rs2_corners (Test source rs2 value = 0x100000001)
li x22, 0x0e532722646ff324 # load random value
la x26, scratch # base address
sd x22, 0(x26) # store in memory
li x22, 0x0000000100000001 # load another value into integer register
amoor.d x19, x22, (x26) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x1)
li x1, 0x7b72cee50a1ef230 # load random value
la x1, scratch # base address
sd x1, 0(x1) # store in memory
amoor.d x14, x1, (x1) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x2)
li x2, 0xa222c2f08a505cbc # load random value
la x2, scratch # base address
sd x2, 0(x2) # store in memory
amoor.d x24, x2, (x2) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x3)
li x3, 0x7b11cd91ac19f3c5 # load random value
la x3, scratch # base address
sd x3, 0(x3) # store in memory
amoor.d x27, x3, (x3) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x4)
mv x5, x4 # switch signature pointer register to avoid conflict with test
li x4, 0xdaec7ca5dc01962e # load random value
la x4, scratch # base address
sd x4, 0(x4) # store in memory
amoor.d x7, x4, (x4) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x5)
mv x6, x5 # switch signature pointer register to avoid conflict with test
li x5, 0xd2787b8fa2066633 # load random value
la x5, scratch # base address
sd x5, 0(x5) # store in memory
amoor.d x27, x5, (x5) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x6)
mv x7, x6 # switch signature pointer register to avoid conflict with test
li x6, 0x9226670e0c0ce897 # load random value
la x6, scratch # base address
sd x6, 0(x6) # store in memory
amoor.d x28, x6, (x6) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x7)
mv x4, x7 # switch signature pointer register to avoid conflict with test
li x7, 0xa3db8f75a818b76f # load random value
la x7, scratch # base address
sd x7, 0(x7) # store in memory
amoor.d x29, x7, (x7) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x8)
li x8, 0xce2c0b460ea5f7db # load random value
la x8, scratch # base address
sd x8, 0(x8) # store in memory
amoor.d x2, x8, (x8) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x9)
li x9, 0x009654b2f9ad3099 # load random value
la x9, scratch # base address
sd x9, 0(x9) # store in memory
amoor.d x24, x9, (x9) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x10)
li x10, 0xf6f7d91940268c1a # load random value
la x10, scratch # base address
sd x10, 0(x10) # store in memory
amoor.d x31, x10, (x10) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x11)
li x11, 0xb0c54eda18fc8209 # load random value
la x11, scratch # base address
sd x11, 0(x11) # store in memory
amoor.d x26, x11, (x11) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x12)
li x12, 0x76f8dc127246e897 # load random value
la x12, scratch # base address
sd x12, 0(x12) # store in memory
amoor.d x3, x12, (x12) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x13)
li x13, 0x9d918a19cf2e1e9a # load random value
la x13, scratch # base address
sd x13, 0(x13) # store in memory
amoor.d x31, x13, (x13) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x14)
li x14, 0xe35d7e7b9e52a9c5 # load random value
la x14, scratch # base address
sd x14, 0(x14) # store in memory
amoor.d x26, x14, (x14) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x15)
li x15, 0xf1d37a513f460fab # load random value
la x15, scratch # base address
sd x15, 0(x15) # store in memory
amoor.d x6, x15, (x15) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x16)
li x16, 0xf8e8a4687668235c # load random value
la x16, scratch # base address
sd x16, 0(x16) # store in memory
amoor.d x19, x16, (x16) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x17)
li x17, 0xec1e8442009a00eb # load random value
la x17, scratch # base address
sd x17, 0(x17) # store in memory
amoor.d x10, x17, (x17) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x18)
li x18, 0xa52aff92cefd423c # load random value
la x18, scratch # base address
sd x18, 0(x18) # store in memory
amoor.d x28, x18, (x18) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x19)
li x19, 0x7dcb9af69291e251 # load random value
la x19, scratch # base address
sd x19, 0(x19) # store in memory
amoor.d x13, x19, (x19) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x20)
li x20, 0xba65a9b6fd03a842 # load random value
la x20, scratch # base address
sd x20, 0(x20) # store in memory
amoor.d x11, x20, (x20) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x21)
li x21, 0x4664659ae203ad5c # load random value
la x21, scratch # base address
sd x21, 0(x21) # store in memory
amoor.d x8, x21, (x21) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x22)
li x22, 0xdfaf130ca13f0f5e # load random value
la x22, scratch # base address
sd x22, 0(x22) # store in memory
amoor.d x11, x22, (x22) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x23)
li x23, 0x23a36cbf67e9cc87 # load random value
la x23, scratch # base address
sd x23, 0(x23) # store in memory
amoor.d x9, x23, (x23) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x24)
li x24, 0xf81fe73cda692988 # load random value
la x24, scratch # base address
sd x24, 0(x24) # store in memory
amoor.d x14, x24, (x24) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x25)
li x25, 0x92ceb1b47a775e53 # load random value
la x25, scratch # base address
sd x25, 0(x25) # store in memory
amoor.d x29, x25, (x25) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x26)
li x26, 0xe8d5775bc196f2ee # load random value
la x26, scratch # base address
sd x26, 0(x26) # store in memory
amoor.d x30, x26, (x26) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x27)
li x27, 0x1f60269f134788fe # load random value
la x27, scratch # base address
sd x27, 0(x27) # store in memory
amoor.d x31, x27, (x27) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x28)
li x28, 0xee949b079af7a3de # load random value
la x28, scratch # base address
sd x28, 0(x28) # store in memory
amoor.d x22, x28, (x28) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x29)
li x29, 0x95a105553ca658ea # load random value
la x29, scratch # base address
sd x29, 0(x29) # store in memory
amoor.d x14, x29, (x29) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x30)
li x30, 0x224dda83f7b9d3f7 # load random value
la x30, scratch # base address
sd x30, 0(x30) # store in memory
amoor.d x30, x30, (x30) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x31)
li x31, 0xd77ad4e0639a3696 # load random value
la x31, scratch # base address
sd x31, 0(x31) # store in memory
amoor.d x16, x31, (x31) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x1)
li x18, 0x1ad12f5730940c3f # load random value
la x1, scratch # base address
sd x18, 0(x1) # store in memory
li x18, 0xd2841d70dd8cb036 # load another value into integer register
amoor.d x1, x18, (x1) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x2)
li x14, 0x4112f7cca17e43bc # load random value
la x2, scratch # base address
sd x14, 0(x2) # store in memory
li x14, 0xfe1978074526d676 # load another value into integer register
amoor.d x2, x14, (x2) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x3)
li x12, 0xd85f38f97bd2b31e # load random value
la x3, scratch # base address
sd x12, 0(x3) # store in memory
li x12, 0x89c5046e873dba1e # load another value into integer register
amoor.d x3, x12, (x3) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x4)
mv x5, x4 # switch signature pointer register to avoid conflict with test
li x6, 0x87ce3c1656c3705b # load random value
la x4, scratch # base address
sd x6, 0(x4) # store in memory
li x6, 0xe792de1f7ee367d0 # load another value into integer register
amoor.d x4, x6, (x4) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x5)
mv x6, x5 # switch signature pointer register to avoid conflict with test
li x3, 0x2ec93732daacaa2a # load random value
la x5, scratch # base address
sd x3, 0(x5) # store in memory
li x3, 0x676a8963242da344 # load another value into integer register
amoor.d x5, x3, (x5) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x6)
mv x7, x6 # switch signature pointer register to avoid conflict with test
li x21, 0x57e7f232a0c90581 # load random value
la x6, scratch # base address
sd x21, 0(x6) # store in memory
li x21, 0xf782e69caff2ac7c # load another value into integer register
amoor.d x6, x21, (x6) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x7)
mv x4, x7 # switch signature pointer register to avoid conflict with test
li x27, 0xba9a4b769f8672e0 # load random value
la x7, scratch # base address
sd x27, 0(x7) # store in memory
li x27, 0x5e3b957c17a55c78 # load another value into integer register
amoor.d x7, x27, (x7) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x8)
li x30, 0x0a6f4526086fcbdd # load random value
la x8, scratch # base address
sd x30, 0(x8) # store in memory
li x30, 0x319e64e33f7668d9 # load another value into integer register
amoor.d x8, x30, (x8) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x9)
li x1, 0xc70da03d9e51c756 # load random value
la x9, scratch # base address
sd x1, 0(x9) # store in memory
li x1, 0x1e2e2df60b643535 # load another value into integer register
amoor.d x9, x1, (x9) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x10)
li x1, 0x3928170c67756de3 # load random value
la x10, scratch # base address
sd x1, 0(x10) # store in memory
li x1, 0x4c0dbc333c751241 # load another value into integer register
amoor.d x10, x1, (x10) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x11)
li x30, 0x79ad5e743c37ea70 # load random value
la x11, scratch # base address
sd x30, 0(x11) # store in memory
li x30, 0x442154e04267f0d5 # load another value into integer register
amoor.d x11, x30, (x11) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x12)
li x14, 0x0d42c1167c414572 # load random value
la x12, scratch # base address
sd x14, 0(x12) # store in memory
li x14, 0x8c141e01478ef739 # load another value into integer register
amoor.d x12, x14, (x12) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x13)
li x15, 0x1d40aca22aa9c2f6 # load random value
la x13, scratch # base address
sd x15, 0(x13) # store in memory
li x15, 0x89bf83229a8e137c # load another value into integer register
amoor.d x13, x15, (x13) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x14)
li x1, 0xe4abae103d69960e # load random value
la x14, scratch # base address
sd x1, 0(x14) # store in memory
li x1, 0x935e9378b5e8c71a # load another value into integer register
amoor.d x14, x1, (x14) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x15)
li x2, 0xf126eb6f97e5f4d5 # load random value
la x15, scratch # base address
sd x2, 0(x15) # store in memory
li x2, 0xc60d44b0f6e9a68d # load another value into integer register
amoor.d x15, x2, (x15) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x16)
li x13, 0x0a6c0f843b3dca7c # load random value
la x16, scratch # base address
sd x13, 0(x16) # store in memory
li x13, 0xa96a80d2e99ed77b # load another value into integer register
amoor.d x16, x13, (x16) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x17)
li x6, 0x5336f8796df33cce # load random value
la x17, scratch # base address
sd x6, 0(x17) # store in memory
li x6, 0x940df091ffb0711b # load another value into integer register
amoor.d x17, x6, (x17) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x18)
li x5, 0x70aefbe24cedde8f # load random value
la x18, scratch # base address
sd x5, 0(x18) # store in memory
li x5, 0x492d335ad756b8f1 # load another value into integer register
amoor.d x18, x5, (x18) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x19)
li x12, 0xceada748bdf72284 # load random value
la x19, scratch # base address
sd x12, 0(x19) # store in memory
li x12, 0x98340c87739c23d0 # load another value into integer register
amoor.d x19, x12, (x19) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x20)
li x8, 0xf13a580f1e16826e # load random value
la x20, scratch # base address
sd x8, 0(x20) # store in memory
li x8, 0x093e48589d43ef73 # load another value into integer register
amoor.d x20, x8, (x20) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x21)
li x6, 0x74b4933ca0023002 # load random value
la x21, scratch # base address
sd x6, 0(x21) # store in memory
li x6, 0x07c54dc0a31a284b # load another value into integer register
amoor.d x21, x6, (x21) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x22)
li x17, 0x336b0977b77bb47e # load random value
la x22, scratch # base address
sd x17, 0(x22) # store in memory
li x17, 0xcffed6e009834d6e # load another value into integer register
amoor.d x22, x17, (x22) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x23)
li x27, 0xec5d1f3d5fab4e36 # load random value
la x23, scratch # base address
sd x27, 0(x23) # store in memory
li x27, 0x86743bdd47420dc2 # load another value into integer register
amoor.d x23, x27, (x23) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x24)
li x12, 0xe0126fe6d52b3d3f # load random value
la x24, scratch # base address
sd x12, 0(x24) # store in memory
li x12, 0x9aa7a8d3bf0b2fff # load another value into integer register
amoor.d x24, x12, (x24) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x25)
li x21, 0xf874889d4657dadf # load random value
la x25, scratch # base address
sd x21, 0(x25) # store in memory
li x21, 0x9451e4d1d1f17888 # load another value into integer register
amoor.d x25, x21, (x25) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x26)
li x10, 0x5c032a5481453e0b # load random value
la x26, scratch # base address
sd x10, 0(x26) # store in memory
li x10, 0xea2e9404078ae0c5 # load another value into integer register
amoor.d x26, x10, (x26) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x27)
li x21, 0x5db3d6af088f69e7 # load random value
la x27, scratch # base address
sd x21, 0(x27) # store in memory
li x21, 0xd70d5233b8b9d340 # load another value into integer register
amoor.d x27, x21, (x27) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x28)
li x2, 0x4432ec26dd2e3971 # load random value
la x28, scratch # base address
sd x2, 0(x28) # store in memory
li x2, 0x719599f427a32ab5 # load another value into integer register
amoor.d x28, x2, (x28) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x29)
li x28, 0x1e248d3d07748aaa # load random value
la x29, scratch # base address
sd x28, 0(x29) # store in memory
li x28, 0xbe8c10e07c491b9f # load another value into integer register
amoor.d x29, x28, (x29) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x30)
li x31, 0x64ca691385172975 # load random value
la x30, scratch # base address
sd x31, 0(x30) # store in memory
li x31, 0x0021ef1c0277c71c # load another value into integer register
amoor.d x30, x31, (x30) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x31)
li x25, 0x0670ab6499ddeaae # load random value
la x31, scratch # base address
sd x25, 0(x31) # store in memory
li x25, 0xf17ea0fcd208f4a0 # load another value into integer register
amoor.d x31, x25, (x31) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x0)
li x0, 0x516fc26d301f0e1e # load random value
la x9, scratch # base address
sd x0, 0(x9) # store in memory
li x0, 0xcc81815324aa9801 # load another value into integer register
amoor.d x0, x0, (x9) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x1)
li x1, 0x0cd103b573da14b7 # load random value
la x16, scratch # base address
sd x1, 0(x16) # store in memory
li x1, 0xb4f451ee560fadc7 # load another value into integer register
amoor.d x1, x1, (x16) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x2)
li x2, 0x51237dfb44b470d4 # load random value
la x13, scratch # base address
sd x2, 0(x13) # store in memory
li x2, 0x5c727b36f1bec159 # load another value into integer register
amoor.d x2, x2, (x13) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x3)
li x3, 0xda502de6699a7079 # load random value
la x2, scratch # base address
sd x3, 0(x2) # store in memory
li x3, 0xf84c767166ded752 # load another value into integer register
amoor.d x3, x3, (x2) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x4)
mv x5, x4 # switch signature pointer register to avoid conflict with test
li x4, 0x6d7d36fe3b821476 # load random value
la x1, scratch # base address
sd x4, 0(x1) # store in memory
li x4, 0x01820332a79b9dbb # load another value into integer register
amoor.d x4, x4, (x1) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x5)
mv x6, x5 # switch signature pointer register to avoid conflict with test
li x5, 0xa05157ba71c6ae40 # load random value
la x10, scratch # base address
sd x5, 0(x10) # store in memory
li x5, 0xd08233f161f9a41b # load another value into integer register
amoor.d x5, x5, (x10) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x6)
mv x7, x6 # switch signature pointer register to avoid conflict with test
li x6, 0x85078284d27a7147 # load random value
la x21, scratch # base address
sd x6, 0(x21) # store in memory
li x6, 0x3135531e7893c868 # load another value into integer register
amoor.d x6, x6, (x21) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x7)
mv x4, x7 # switch signature pointer register to avoid conflict with test
li x7, 0xa626fed9f4264d5c # load random value
la x15, scratch # base address
sd x7, 0(x15) # store in memory
li x7, 0x21a2c57e24ef0753 # load another value into integer register
amoor.d x7, x7, (x15) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x8)
li x8, 0xe9c24a486df0cae3 # load random value
la x29, scratch # base address
sd x8, 0(x29) # store in memory
li x8, 0x68895f1b0de6cfe0 # load another value into integer register
amoor.d x8, x8, (x29) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x9)
li x9, 0x8292e96c0e361434 # load random value
la x8, scratch # base address
sd x9, 0(x8) # store in memory
li x9, 0xbf13764ad28073c9 # load another value into integer register
amoor.d x9, x9, (x8) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x10)
li x10, 0x1590d788274e1538 # load random value
la x10, scratch # base address
sd x10, 0(x10) # store in memory
amoor.d x10, x10, (x10) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x11)
li x11, 0xb89a388b392c6a32 # load random value
la x28, scratch # base address
sd x11, 0(x28) # store in memory
li x11, 0xb117419458ede280 # load another value into integer register
amoor.d x11, x11, (x28) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x12)
li x12, 0x60f8c48db51c1c3a # load random value
la x11, scratch # base address
sd x12, 0(x11) # store in memory
li x12, 0xe14acee07450afb7 # load another value into integer register
amoor.d x12, x12, (x11) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x13)
li x13, 0xa1ec0fc3c58d53d2 # load random value
la x22, scratch # base address
sd x13, 0(x22) # store in memory
li x13, 0x4b43a3b7975e2cdf # load another value into integer register
amoor.d x13, x13, (x22) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x14)
li x14, 0x6cb75e8596e57e2b # load random value
la x12, scratch # base address
sd x14, 0(x12) # store in memory
li x14, 0x379e36590e29e449 # load another value into integer register
amoor.d x14, x14, (x12) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x15)
li x15, 0xcf7c627c98e5f720 # load random value
la x5, scratch # base address
sd x15, 0(x5) # store in memory
li x15, 0x707e548ce5278442 # load another value into integer register
amoor.d x15, x15, (x5) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x16)
li x16, 0xbec2dc140e4ecb85 # load random value
la x2, scratch # base address
sd x16, 0(x2) # store in memory
li x16, 0x756e7f17dd461357 # load another value into integer register
amoor.d x16, x16, (x2) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x17)
li x17, 0x8fc2cf9866869180 # load random value
la x24, scratch # base address
sd x17, 0(x24) # store in memory
li x17, 0xd816f1f1a33a4a24 # load another value into integer register
amoor.d x17, x17, (x24) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x18)
li x18, 0x926617f809f9358a # load random value
la x5, scratch # base address
sd x18, 0(x5) # store in memory
li x18, 0x9710c40cd4d6acc8 # load another value into integer register
amoor.d x18, x18, (x5) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x19)
li x19, 0x4d7517cbdd9a2629 # load random value
la x3, scratch # base address
sd x19, 0(x3) # store in memory
li x19, 0x62dc68a2cc6e3d1e # load another value into integer register
amoor.d x19, x19, (x3) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x20)
li x20, 0x9cf5b6cfd94c4a19 # load random value
la x12, scratch # base address
sd x20, 0(x12) # store in memory
li x20, 0xdb7ae687fa945d95 # load another value into integer register
amoor.d x20, x20, (x12) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x21)
li x21, 0x663f9d1a6a5a4194 # load random value
la x10, scratch # base address
sd x21, 0(x10) # store in memory
li x21, 0xed5ebd69511280f1 # load another value into integer register
amoor.d x21, x21, (x10) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x22)
li x22, 0xc52fe19a4d3510ad # load random value
la x11, scratch # base address
sd x22, 0(x11) # store in memory
li x22, 0x6f68c1e776569c1e # load another value into integer register
amoor.d x22, x22, (x11) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x23)
li x23, 0xb6995fa0ae714ef5 # load random value
la x28, scratch # base address
sd x23, 0(x28) # store in memory
li x23, 0x5ee111379417aa2c # load another value into integer register
amoor.d x23, x23, (x28) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x24)
li x24, 0x6a033ddc5655c093 # load random value
la x16, scratch # base address
sd x24, 0(x16) # store in memory
li x24, 0xccd309999f959e1e # load another value into integer register
amoor.d x24, x24, (x16) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x25)
li x25, 0xc297734c4769da8c # load random value
la x18, scratch # base address
sd x25, 0(x18) # store in memory
li x25, 0x97042a7c9166d86f # load another value into integer register
amoor.d x25, x25, (x18) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x26)
li x26, 0x3e6538f657ab616a # load random value
la x20, scratch # base address
sd x26, 0(x20) # store in memory
li x26, 0x96fe89d45e2cd972 # load another value into integer register
amoor.d x26, x26, (x20) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x27)
li x27, 0xb232b20a1ec98090 # load random value
la x28, scratch # base address
sd x27, 0(x28) # store in memory
li x27, 0x90f0f7bdc0eed1a0 # load another value into integer register
amoor.d x27, x27, (x28) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x28)
li x28, 0x6f5ad3b3c59d5208 # load random value
la x15, scratch # base address
sd x28, 0(x15) # store in memory
li x28, 0x714880fc87f683e1 # load another value into integer register
amoor.d x28, x28, (x15) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x29)
li x29, 0x0efb1c15e931889c # load random value
la x13, scratch # base address
sd x29, 0(x13) # store in memory
li x29, 0xe93c7aad0362a04a # load another value into integer register
amoor.d x29, x29, (x13) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x30)
li x30, 0xc9c1cbb64015d62a # load random value
la x11, scratch # base address
sd x30, 0(x11) # store in memory
li x30, 0x94c4b3702902f90e # load another value into integer register
amoor.d x30, x30, (x11) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x31)
li x31, 0x1d3c726d73cd3ef0 # load random value
la x16, scratch # base address
sd x31, 0(x16) # store in memory
li x31, 0x8e958b9e605b5246 # load another value into integer register
amoor.d x31, x31, (x16) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x1)
li x1, 0x717f675b22a48773 # load random value
la x1, scratch # base address
sd x1, 0(x1) # store in memory
amoor.d x1, x1, (x1) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x2)
li x2, 0x66b8e79f9263d295 # load random value
la x2, scratch # base address
sd x2, 0(x2) # store in memory
amoor.d x2, x2, (x2) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x3)
li x3, 0x4b18954f38b86d7c # load random value
la x3, scratch # base address
sd x3, 0(x3) # store in memory
amoor.d x3, x3, (x3) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x4)
mv x5, x4 # switch signature pointer register to avoid conflict with test
li x4, 0x632670e958a49d6f # load random value
la x4, scratch # base address
sd x4, 0(x4) # store in memory
amoor.d x4, x4, (x4) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x5)
mv x6, x5 # switch signature pointer register to avoid conflict with test
li x5, 0x3784ae4379050aa6 # load random value
la x5, scratch # base address
sd x5, 0(x5) # store in memory
amoor.d x5, x5, (x5) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x6)
mv x7, x6 # switch signature pointer register to avoid conflict with test
li x6, 0xb82781a5365539ff # load random value
la x6, scratch # base address
sd x6, 0(x6) # store in memory
amoor.d x6, x6, (x6) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x7)
mv x4, x7 # switch signature pointer register to avoid conflict with test
li x7, 0x5d1927202a11f9ee # load random value
la x7, scratch # base address
sd x7, 0(x7) # store in memory
amoor.d x7, x7, (x7) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x8)
li x8, 0xeb5f480ec4a5c8a8 # load random value
la x8, scratch # base address
sd x8, 0(x8) # store in memory
amoor.d x8, x8, (x8) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x9)
li x9, 0x3f9e381b4240d6f3 # load random value
la x9, scratch # base address
sd x9, 0(x9) # store in memory
amoor.d x9, x9, (x9) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x10)
li x10, 0xf27dc94e87cfd133 # load random value
la x10, scratch # base address
sd x10, 0(x10) # store in memory
amoor.d x10, x10, (x10) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x11)
li x11, 0xf5dff6da62576092 # load random value
la x11, scratch # base address
sd x11, 0(x11) # store in memory
amoor.d x11, x11, (x11) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x12)
li x12, 0xf34f03325a78b4a0 # load random value
la x12, scratch # base address
sd x12, 0(x12) # store in memory
amoor.d x12, x12, (x12) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x13)
li x13, 0x009f277ebb520668 # load random value
la x13, scratch # base address
sd x13, 0(x13) # store in memory
amoor.d x13, x13, (x13) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x14)
li x14, 0xd6b3e8d810f07cae # load random value
la x14, scratch # base address
sd x14, 0(x14) # store in memory
amoor.d x14, x14, (x14) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x15)
li x15, 0xa600a993f2299d66 # load random value
la x15, scratch # base address
sd x15, 0(x15) # store in memory
amoor.d x15, x15, (x15) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x16)
li x16, 0x1b7ca51c82025bb4 # load random value
la x16, scratch # base address
sd x16, 0(x16) # store in memory
amoor.d x16, x16, (x16) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x17)
li x17, 0xe81bff30dd722ceb # load random value
la x17, scratch # base address
sd x17, 0(x17) # store in memory
amoor.d x17, x17, (x17) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x18)
li x18, 0x4f7cbb50afdd4436 # load random value
la x18, scratch # base address
sd x18, 0(x18) # store in memory
amoor.d x18, x18, (x18) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x19)
li x19, 0xd90e39f8180279b1 # load random value
la x19, scratch # base address
sd x19, 0(x19) # store in memory
amoor.d x19, x19, (x19) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x20)
li x20, 0x27957de5640bdbb1 # load random value
la x20, scratch # base address
sd x20, 0(x20) # store in memory
amoor.d x20, x20, (x20) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x21)
li x21, 0xc51951f124b692e4 # load random value
la x21, scratch # base address
sd x21, 0(x21) # store in memory
amoor.d x21, x21, (x21) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x22)
li x22, 0x5966f5646a25d9ed # load random value
la x22, scratch # base address
sd x22, 0(x22) # store in memory
amoor.d x22, x22, (x22) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x23)
li x23, 0x88b86d7f2329fbea # load random value
la x23, scratch # base address
sd x23, 0(x23) # store in memory
amoor.d x23, x23, (x23) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x24)
li x24, 0x53dd0ed75dec6efe # load random value
la x24, scratch # base address
sd x24, 0(x24) # store in memory
amoor.d x24, x24, (x24) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x25)
li x25, 0x6ae2dae04fec5776 # load random value
la x25, scratch # base address
sd x25, 0(x25) # store in memory
amoor.d x25, x25, (x25) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x26)
li x26, 0x8e1a79e7724636fc # load random value
la x26, scratch # base address
sd x26, 0(x26) # store in memory
amoor.d x26, x26, (x26) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x27)
li x27, 0x6161e675745be2e0 # load random value
la x27, scratch # base address
sd x27, 0(x27) # store in memory
amoor.d x27, x27, (x27) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x28)
li x28, 0xc3a893553ccf8492 # load random value
la x28, scratch # base address
sd x28, 0(x28) # store in memory
amoor.d x28, x28, (x28) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x29)
li x29, 0x648dfbca0c6aef6d # load random value
la x29, scratch # base address
sd x29, 0(x29) # store in memory
amoor.d x29, x29, (x29) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x30)
li x30, 0x917ddd1c39177a49 # load random value
la x30, scratch # base address
sd x30, 0(x30) # store in memory
amoor.d x30, x30, (x30) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x31)
li x31, 0x46dee62402af1722 # load random value
la x31, scratch # base address
sd x31, 0(x31) # store in memory
amoor.d x31, x31, (x31) # perform operation

# Testcase cp_gpr/fpr_hazard nohaz test
la x28, scratch
add x16, x6, x23 # perform first operation
amoor.d x20, x31, (x28) # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard nohaz test
la x3, scratch
add x26, x15, x17 # perform first operation
amoor.d x6, x8, (x3) # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard nohaz test
la x30, scratch
add x27, x16, x17 # perform first operation
amoor.d x8, x3, (x30) # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard raw test
la x30, scratch
add x17, x17, x0 # perform first operation
amoor.d x14, x29, (x30) # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard raw test
la x7, scratch
add x7, x7, x0 # perform first operation
amoor.d x7, x24, (x7) # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard raw test
la x29, scratch
add x19, x19, x0 # perform first operation
amoor.d x20, x14, (x29) # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard waw test
la x15, scratch
add x30, x12, x2 # perform first operation
amoor.d x30, x3, (x15) # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard waw test
la x20, scratch
add x27, x13, x7 # perform first operation
amoor.d x27, x21, (x20) # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard waw test
la x31, scratch
add x30, x9, x18 # perform first operation
amoor.d x30, x21, (x31) # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard war test
la x1, scratch
add x15, x25, x9 # perform first operation
amoor.d x25, x8, (x1) # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard war test
la x27, scratch
add x25, x7, x13 # perform first operation
amoor.d x13, x11, (x27) # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard war test
la x24, scratch
add x16, x13, x17 # perform first operation
amoor.d x6, x11, (x24) # perform second (triggering) operation

#.EQU SIGSIZE,0


// ******************
// Tests from: WALLY-COV-amoand.d.S
// ******************


# initialize signature pointer
la x4, begin_signature

    
# Testcase cp_rs1 (Test source rs1 = x1)
li x30, 0x5dd5b3f9badda20e # load random value
la x1, scratch # base address
sd x30, 0(x1) # store in memory
li x30, 0x6f4a7f85509f3842 # load another value into integer register
amoand.d x29, x30, (x1) # perform operation

# Testcase cp_rs1 (Test source rs1 = x2)
li x13, 0x4e059c7aef62b5dc # load random value
la x2, scratch # base address
sd x13, 0(x2) # store in memory
li x13, 0x5fa630465051eb79 # load another value into integer register
amoand.d x27, x13, (x2) # perform operation

# Testcase cp_rs1 (Test source rs1 = x3)
li x29, 0x997847144298c46b # load random value
la x3, scratch # base address
sd x29, 0(x3) # store in memory
li x29, 0xb64a358b06fe6dd2 # load another value into integer register
amoand.d x30, x29, (x3) # perform operation

# Testcase cp_rs1 (Test source rs1 = x4)
mv x5, x4 # switch signature pointer register to avoid conflict with test
li x28, 0x59f1ead5f4d0cd83 # load random value
la x4, scratch # base address
sd x28, 0(x4) # store in memory
li x28, 0x0e6b7fb85a65bf85 # load another value into integer register
amoand.d x23, x28, (x4) # perform operation

# Testcase cp_rs1 (Test source rs1 = x5)
mv x6, x5 # switch signature pointer register to avoid conflict with test
li x25, 0x2e9fa1bbc00672f5 # load random value
la x5, scratch # base address
sd x25, 0(x5) # store in memory
li x25, 0x8afb61019f7a87fe # load another value into integer register
amoand.d x4, x25, (x5) # perform operation

# Testcase cp_rs1 (Test source rs1 = x6)
mv x7, x6 # switch signature pointer register to avoid conflict with test
li x31, 0x627ab42c54b4d1e8 # load random value
la x6, scratch # base address
sd x31, 0(x6) # store in memory
li x31, 0xa59b0c607d39971f # load another value into integer register
amoand.d x16, x31, (x6) # perform operation

# Testcase cp_rs1 (Test source rs1 = x7)
mv x4, x7 # switch signature pointer register to avoid conflict with test
li x6, 0x3ce823718751f2b0 # load random value
la x7, scratch # base address
sd x6, 0(x7) # store in memory
li x6, 0x179d4bb767d98975 # load another value into integer register
amoand.d x12, x6, (x7) # perform operation

# Testcase cp_rs1 (Test source rs1 = x8)
li x14, 0x51a5126f00c59a74 # load random value
la x8, scratch # base address
sd x14, 0(x8) # store in memory
li x14, 0xdffcfdf99ad6058c # load another value into integer register
amoand.d x29, x14, (x8) # perform operation

# Testcase cp_rs1 (Test source rs1 = x9)
li x17, 0x95f2858054eb43de # load random value
la x9, scratch # base address
sd x17, 0(x9) # store in memory
li x17, 0xd96233d09a93e4a4 # load another value into integer register
amoand.d x22, x17, (x9) # perform operation

# Testcase cp_rs1 (Test source rs1 = x10)
li x19, 0x79db1b2f040d2e5b # load random value
la x10, scratch # base address
sd x19, 0(x10) # store in memory
li x19, 0xd504f81b152b71b0 # load another value into integer register
amoand.d x27, x19, (x10) # perform operation

# Testcase cp_rs1 (Test source rs1 = x11)
li x24, 0xea821f33d829cf2e # load random value
la x11, scratch # base address
sd x24, 0(x11) # store in memory
li x24, 0x453aa9560e447af0 # load another value into integer register
amoand.d x30, x24, (x11) # perform operation

# Testcase cp_rs1 (Test source rs1 = x12)
li x15, 0xc1075fc62a433f5f # load random value
la x12, scratch # base address
sd x15, 0(x12) # store in memory
li x15, 0x3c4aeb3829e9417f # load another value into integer register
amoand.d x27, x15, (x12) # perform operation

# Testcase cp_rs1 (Test source rs1 = x13)
li x2, 0x56f2fc2481a738da # load random value
la x13, scratch # base address
sd x2, 0(x13) # store in memory
li x2, 0x55628f1ee8a17726 # load another value into integer register
amoand.d x5, x2, (x13) # perform operation

# Testcase cp_rs1 (Test source rs1 = x14)
li x13, 0x89c0bc3ddbb5b73b # load random value
la x14, scratch # base address
sd x13, 0(x14) # store in memory
li x13, 0xe255e9ddd3562261 # load another value into integer register
amoand.d x6, x13, (x14) # perform operation

# Testcase cp_rs1 (Test source rs1 = x15)
li x31, 0x29dd42f6218805d3 # load random value
la x15, scratch # base address
sd x31, 0(x15) # store in memory
li x31, 0xb061d84a286da999 # load another value into integer register
amoand.d x20, x31, (x15) # perform operation

# Testcase cp_rs1 (Test source rs1 = x16)
li x9, 0xce830d69351a9a54 # load random value
la x16, scratch # base address
sd x9, 0(x16) # store in memory
li x9, 0xd6b9338ec44211ae # load another value into integer register
amoand.d x6, x9, (x16) # perform operation

# Testcase cp_rs1 (Test source rs1 = x17)
li x2, 0x1f4f9378751aec99 # load random value
la x17, scratch # base address
sd x2, 0(x17) # store in memory
li x2, 0x8e69d822e60ffa9d # load another value into integer register
amoand.d x30, x2, (x17) # perform operation

# Testcase cp_rs1 (Test source rs1 = x18)
li x25, 0x38ab1c4c6b41d397 # load random value
la x18, scratch # base address
sd x25, 0(x18) # store in memory
li x25, 0x29cdec32ee9e2522 # load another value into integer register
amoand.d x19, x25, (x18) # perform operation

# Testcase cp_rs1 (Test source rs1 = x19)
li x31, 0x3851c791342d07a2 # load random value
la x19, scratch # base address
sd x31, 0(x19) # store in memory
li x31, 0x9aa86659f8930b78 # load another value into integer register
amoand.d x17, x31, (x19) # perform operation

# Testcase cp_rs1 (Test source rs1 = x20)
li x13, 0x4e29b2dec4f8810d # load random value
la x20, scratch # base address
sd x13, 0(x20) # store in memory
li x13, 0x0911963e8c39ab65 # load another value into integer register
amoand.d x19, x13, (x20) # perform operation

# Testcase cp_rs1 (Test source rs1 = x21)
li x30, 0x003df013ab0920e5 # load random value
la x21, scratch # base address
sd x30, 0(x21) # store in memory
li x30, 0xa0b8889391440ace # load another value into integer register
amoand.d x22, x30, (x21) # perform operation

# Testcase cp_rs1 (Test source rs1 = x22)
li x5, 0xf39782d8d1dc0f74 # load random value
la x22, scratch # base address
sd x5, 0(x22) # store in memory
li x5, 0x2010223a149db659 # load another value into integer register
amoand.d x1, x5, (x22) # perform operation

# Testcase cp_rs1 (Test source rs1 = x23)
li x9, 0xcc2a45b604df7904 # load random value
la x23, scratch # base address
sd x9, 0(x23) # store in memory
li x9, 0x6b09d3e0233fb72a # load another value into integer register
amoand.d x21, x9, (x23) # perform operation

# Testcase cp_rs1 (Test source rs1 = x24)
li x21, 0xb2a5861afe4b4f4e # load random value
la x24, scratch # base address
sd x21, 0(x24) # store in memory
li x21, 0x3503d718c6981dcb # load another value into integer register
amoand.d x9, x21, (x24) # perform operation

# Testcase cp_rs1 (Test source rs1 = x25)
li x20, 0x6745788fe948f2fc # load random value
la x25, scratch # base address
sd x20, 0(x25) # store in memory
li x20, 0x405ea085e27ae999 # load another value into integer register
amoand.d x17, x20, (x25) # perform operation

# Testcase cp_rs1 (Test source rs1 = x26)
li x1, 0x21bb7b357331a191 # load random value
la x26, scratch # base address
sd x1, 0(x26) # store in memory
li x1, 0x2768bc65565b60f6 # load another value into integer register
amoand.d x10, x1, (x26) # perform operation

# Testcase cp_rs1 (Test source rs1 = x27)
li x9, 0x09e3b7f51e7de8ec # load random value
la x27, scratch # base address
sd x9, 0(x27) # store in memory
li x9, 0xefd158228248a968 # load another value into integer register
amoand.d x19, x9, (x27) # perform operation

# Testcase cp_rs1 (Test source rs1 = x28)
li x20, 0x8a379e27506a76c1 # load random value
la x28, scratch # base address
sd x20, 0(x28) # store in memory
li x20, 0x93b7b6af1c400bd2 # load another value into integer register
amoand.d x25, x20, (x28) # perform operation

# Testcase cp_rs1 (Test source rs1 = x29)
li x25, 0x5e30764030e5fc57 # load random value
la x29, scratch # base address
sd x25, 0(x29) # store in memory
li x25, 0xf4e03e9dc7c080dc # load another value into integer register
amoand.d x8, x25, (x29) # perform operation

# Testcase cp_rs1 (Test source rs1 = x30)
li x19, 0xc1d4c1966460f250 # load random value
la x30, scratch # base address
sd x19, 0(x30) # store in memory
li x19, 0x09ffc4a3d877054a # load another value into integer register
amoand.d x2, x19, (x30) # perform operation

# Testcase cp_rs1 (Test source rs1 = x31)
li x17, 0x6855274857a25294 # load random value
la x31, scratch # base address
sd x17, 0(x31) # store in memory
li x17, 0xc67a0e836ed80cca # load another value into integer register
amoand.d x1, x17, (x31) # perform operation

# Testcase cp_rs2 (Test source rs2 = x0)
li x0, 0xe6272a751981ff0f # load random value
la x30, scratch # base address
sd x0, 0(x30) # store in memory
li x0, 0x9a105724168745c9 # load another value into integer register
amoand.d x15, x0, (x30) # perform operation

# Testcase cp_rs2 (Test source rs2 = x1)
li x1, 0xdf35ae2d2f0d5ffc # load random value
la x2, scratch # base address
sd x1, 0(x2) # store in memory
li x1, 0xc190b8ec1f3250f5 # load another value into integer register
amoand.d x29, x1, (x2) # perform operation

# Testcase cp_rs2 (Test source rs2 = x2)
li x2, 0xbb8c48b4a84caef6 # load random value
la x22, scratch # base address
sd x2, 0(x22) # store in memory
li x2, 0x008fc3eb97f12997 # load another value into integer register
amoand.d x1, x2, (x22) # perform operation

# Testcase cp_rs2 (Test source rs2 = x3)
li x3, 0x9598731d7a69f1cd # load random value
la x5, scratch # base address
sd x3, 0(x5) # store in memory
li x3, 0x31e1144dad290173 # load another value into integer register
amoand.d x26, x3, (x5) # perform operation

# Testcase cp_rs2 (Test source rs2 = x4)
mv x5, x4 # switch signature pointer register to avoid conflict with test
li x4, 0x2d582029c5de8741 # load random value
la x19, scratch # base address
sd x4, 0(x19) # store in memory
li x4, 0x0bc450d627b95665 # load another value into integer register
amoand.d x25, x4, (x19) # perform operation

# Testcase cp_rs2 (Test source rs2 = x5)
mv x6, x5 # switch signature pointer register to avoid conflict with test
li x5, 0x085b68fe9283e4af # load random value
la x23, scratch # base address
sd x5, 0(x23) # store in memory
li x5, 0x6e100fb1dd7c9f81 # load another value into integer register
amoand.d x1, x5, (x23) # perform operation

# Testcase cp_rs2 (Test source rs2 = x6)
mv x7, x6 # switch signature pointer register to avoid conflict with test
li x6, 0x2fca33a0692a6867 # load random value
la x1, scratch # base address
sd x6, 0(x1) # store in memory
li x6, 0xf2c67b3dad59f367 # load another value into integer register
amoand.d x14, x6, (x1) # perform operation

# Testcase cp_rs2 (Test source rs2 = x7)
mv x4, x7 # switch signature pointer register to avoid conflict with test
li x7, 0x7071e3b5609e6ba4 # load random value
la x31, scratch # base address
sd x7, 0(x31) # store in memory
li x7, 0x070fcde3c2333571 # load another value into integer register
amoand.d x1, x7, (x31) # perform operation

# Testcase cp_rs2 (Test source rs2 = x8)
li x8, 0xc0dd8e3583435af2 # load random value
la x7, scratch # base address
sd x8, 0(x7) # store in memory
li x8, 0x1a1762e04e0a6518 # load another value into integer register
amoand.d x12, x8, (x7) # perform operation

# Testcase cp_rs2 (Test source rs2 = x9)
li x9, 0x8a348537d362eb22 # load random value
la x10, scratch # base address
sd x9, 0(x10) # store in memory
li x9, 0x84596f8200fc4d1d # load another value into integer register
amoand.d x23, x9, (x10) # perform operation

# Testcase cp_rs2 (Test source rs2 = x10)
li x10, 0xa44db71308f216a5 # load random value
la x2, scratch # base address
sd x10, 0(x2) # store in memory
li x10, 0x6f8d6fc037e59b01 # load another value into integer register
amoand.d x3, x10, (x2) # perform operation

# Testcase cp_rs2 (Test source rs2 = x11)
li x11, 0xfb15822d7b97b87a # load random value
la x25, scratch # base address
sd x11, 0(x25) # store in memory
li x11, 0x38bea69dcf49c34a # load another value into integer register
amoand.d x14, x11, (x25) # perform operation

# Testcase cp_rs2 (Test source rs2 = x12)
li x12, 0x63b34d3a9333badb # load random value
la x26, scratch # base address
sd x12, 0(x26) # store in memory
li x12, 0x1fc38361695e7a37 # load another value into integer register
amoand.d x10, x12, (x26) # perform operation

# Testcase cp_rs2 (Test source rs2 = x13)
li x13, 0x4e1603371bd6ec0f # load random value
la x10, scratch # base address
sd x13, 0(x10) # store in memory
li x13, 0x83bbf1c623f2fe29 # load another value into integer register
amoand.d x21, x13, (x10) # perform operation

# Testcase cp_rs2 (Test source rs2 = x14)
li x14, 0x1ab8b7b4e3c4de6c # load random value
la x19, scratch # base address
sd x14, 0(x19) # store in memory
li x14, 0x09b36d6353991510 # load another value into integer register
amoand.d x18, x14, (x19) # perform operation

# Testcase cp_rs2 (Test source rs2 = x15)
li x15, 0xdcba20a7f1d6c45c # load random value
la x7, scratch # base address
sd x15, 0(x7) # store in memory
li x15, 0x2d8dad9d66ba5272 # load another value into integer register
amoand.d x29, x15, (x7) # perform operation

# Testcase cp_rs2 (Test source rs2 = x16)
li x16, 0x3fd7e12e452677f7 # load random value
la x23, scratch # base address
sd x16, 0(x23) # store in memory
li x16, 0x58e2540aa95e5f11 # load another value into integer register
amoand.d x27, x16, (x23) # perform operation

# Testcase cp_rs2 (Test source rs2 = x17)
li x17, 0x1d51f55716ac6190 # load random value
la x22, scratch # base address
sd x17, 0(x22) # store in memory
li x17, 0xc79c266d151ede9f # load another value into integer register
amoand.d x1, x17, (x22) # perform operation

# Testcase cp_rs2 (Test source rs2 = x18)
li x18, 0x67175238a14f8935 # load random value
la x1, scratch # base address
sd x18, 0(x1) # store in memory
li x18, 0xd43a67d4d98b8e95 # load another value into integer register
amoand.d x30, x18, (x1) # perform operation

# Testcase cp_rs2 (Test source rs2 = x19)
li x19, 0xac7a80db3e73217e # load random value
la x8, scratch # base address
sd x19, 0(x8) # store in memory
li x19, 0x2a8536d32b3a31ed # load another value into integer register
amoand.d x12, x19, (x8) # perform operation

# Testcase cp_rs2 (Test source rs2 = x20)
li x20, 0x1d20c91e6504d5de # load random value
la x26, scratch # base address
sd x20, 0(x26) # store in memory
li x20, 0x8efbdd861358d606 # load another value into integer register
amoand.d x12, x20, (x26) # perform operation

# Testcase cp_rs2 (Test source rs2 = x21)
li x21, 0x35b2ab2e51902fef # load random value
la x23, scratch # base address
sd x21, 0(x23) # store in memory
li x21, 0x8d60b3a640269d8c # load another value into integer register
amoand.d x17, x21, (x23) # perform operation

# Testcase cp_rs2 (Test source rs2 = x22)
li x22, 0x8b8847e1de940a8f # load random value
la x16, scratch # base address
sd x22, 0(x16) # store in memory
li x22, 0x9fa9420396aa7c02 # load another value into integer register
amoand.d x15, x22, (x16) # perform operation

# Testcase cp_rs2 (Test source rs2 = x23)
li x23, 0xdbca80b3979bcbd7 # load random value
la x26, scratch # base address
sd x23, 0(x26) # store in memory
li x23, 0x9473737c118e3bca # load another value into integer register
amoand.d x17, x23, (x26) # perform operation

# Testcase cp_rs2 (Test source rs2 = x24)
li x24, 0xca645a4d06f1e1a1 # load random value
la x28, scratch # base address
sd x24, 0(x28) # store in memory
li x24, 0xae930474962008cd # load another value into integer register
amoand.d x25, x24, (x28) # perform operation

# Testcase cp_rs2 (Test source rs2 = x25)
li x25, 0x2959bee9cfbe0ae4 # load random value
la x1, scratch # base address
sd x25, 0(x1) # store in memory
li x25, 0xfb6e66971f04ed5c # load another value into integer register
amoand.d x12, x25, (x1) # perform operation

# Testcase cp_rs2 (Test source rs2 = x26)
li x26, 0x20ab58d559e724ba # load random value
la x5, scratch # base address
sd x26, 0(x5) # store in memory
li x26, 0xc11d01c1a3cd3944 # load another value into integer register
amoand.d x25, x26, (x5) # perform operation

# Testcase cp_rs2 (Test source rs2 = x27)
li x27, 0x915daed262e4d2ec # load random value
la x12, scratch # base address
sd x27, 0(x12) # store in memory
li x27, 0xfcc584acd2c676d5 # load another value into integer register
amoand.d x11, x27, (x12) # perform operation

# Testcase cp_rs2 (Test source rs2 = x28)
li x28, 0x90432766779ed588 # load random value
la x10, scratch # base address
sd x28, 0(x10) # store in memory
li x28, 0xb3024b61315e2bca # load another value into integer register
amoand.d x15, x28, (x10) # perform operation

# Testcase cp_rs2 (Test source rs2 = x29)
li x29, 0x95263bac4fca95be # load random value
la x10, scratch # base address
sd x29, 0(x10) # store in memory
li x29, 0x39959d4d317d924f # load another value into integer register
amoand.d x24, x29, (x10) # perform operation

# Testcase cp_rs2 (Test source rs2 = x30)
li x30, 0x50499308449ca776 # load random value
la x20, scratch # base address
sd x30, 0(x20) # store in memory
li x30, 0x991e02788217fdc0 # load another value into integer register
amoand.d x13, x30, (x20) # perform operation

# Testcase cp_rs2 (Test source rs2 = x31)
li x31, 0x538070c139e981e3 # load random value
la x8, scratch # base address
sd x31, 0(x8) # store in memory
li x31, 0x6338b8a0c05a2e6c # load another value into integer register
amoand.d x30, x31, (x8) # perform operation

# Testcase cp_rd (Test destination rd = x0)
li x3, 0x0877faf62ec5f415 # load random value
la x6, scratch # base address
sd x3, 0(x6) # store in memory
li x3, 0xad774510e1443c6d # load another value into integer register
amoand.d x0, x3, (x6) # perform operation

# Testcase cp_rd (Test destination rd = x1)
li x18, 0xc71b1b201a7ff3a6 # load random value
la x23, scratch # base address
sd x18, 0(x23) # store in memory
li x18, 0x244371470c55c1e4 # load another value into integer register
amoand.d x1, x18, (x23) # perform operation

# Testcase cp_rd (Test destination rd = x2)
li x12, 0x0b252d764ce3128d # load random value
la x31, scratch # base address
sd x12, 0(x31) # store in memory
li x12, 0x064dccee44360a29 # load another value into integer register
amoand.d x2, x12, (x31) # perform operation

# Testcase cp_rd (Test destination rd = x3)
li x21, 0x587b67c95ccf9f20 # load random value
la x10, scratch # base address
sd x21, 0(x10) # store in memory
li x21, 0x3b00ca1ba821f67d # load another value into integer register
amoand.d x3, x21, (x10) # perform operation

# Testcase cp_rd (Test destination rd = x4)
mv x5, x4 # switch signature pointer register to avoid conflict with test
li x22, 0x4fa90bb8e3c649e1 # load random value
la x1, scratch # base address
sd x22, 0(x1) # store in memory
li x22, 0x7385ebe317fe8cdf # load another value into integer register
amoand.d x4, x22, (x1) # perform operation

# Testcase cp_rd (Test destination rd = x5)
mv x6, x5 # switch signature pointer register to avoid conflict with test
li x3, 0x12a4cfa647ebb542 # load random value
la x27, scratch # base address
sd x3, 0(x27) # store in memory
li x3, 0x06fe8bd62c239e5b # load another value into integer register
amoand.d x5, x3, (x27) # perform operation

# Testcase cp_rd (Test destination rd = x6)
mv x7, x6 # switch signature pointer register to avoid conflict with test
li x14, 0xc53dc34312aba5dc # load random value
la x23, scratch # base address
sd x14, 0(x23) # store in memory
li x14, 0xc34e07b75f512b97 # load another value into integer register
amoand.d x6, x14, (x23) # perform operation

# Testcase cp_rd (Test destination rd = x7)
mv x4, x7 # switch signature pointer register to avoid conflict with test
li x11, 0x3711857fa9dadcd9 # load random value
la x25, scratch # base address
sd x11, 0(x25) # store in memory
li x11, 0x3612b263abd72637 # load another value into integer register
amoand.d x7, x11, (x25) # perform operation

# Testcase cp_rd (Test destination rd = x8)
li x5, 0xa0080dfe2eb450e6 # load random value
la x2, scratch # base address
sd x5, 0(x2) # store in memory
li x5, 0xe342000edf41c7c2 # load another value into integer register
amoand.d x8, x5, (x2) # perform operation

# Testcase cp_rd (Test destination rd = x9)
li x25, 0xc3b7573fce313a1f # load random value
la x18, scratch # base address
sd x25, 0(x18) # store in memory
li x25, 0xa4921583454f92ca # load another value into integer register
amoand.d x9, x25, (x18) # perform operation

# Testcase cp_rd (Test destination rd = x10)
li x29, 0x7dd7a249dceac07c # load random value
la x17, scratch # base address
sd x29, 0(x17) # store in memory
li x29, 0x1ccffe05f279891a # load another value into integer register
amoand.d x10, x29, (x17) # perform operation

# Testcase cp_rd (Test destination rd = x11)
li x11, 0x2636a94431ba6ec1 # load random value
la x27, scratch # base address
sd x11, 0(x27) # store in memory
li x11, 0x3be400f3055af01e # load another value into integer register
amoand.d x11, x11, (x27) # perform operation

# Testcase cp_rd (Test destination rd = x12)
li x23, 0xa0a42298bab78790 # load random value
la x30, scratch # base address
sd x23, 0(x30) # store in memory
li x23, 0x3012a6edfcd68f53 # load another value into integer register
amoand.d x12, x23, (x30) # perform operation

# Testcase cp_rd (Test destination rd = x13)
li x10, 0xcf98eb500b57cb76 # load random value
la x20, scratch # base address
sd x10, 0(x20) # store in memory
li x10, 0x6cba7b3440b06f5b # load another value into integer register
amoand.d x13, x10, (x20) # perform operation

# Testcase cp_rd (Test destination rd = x14)
li x29, 0xb3d30605a598952c # load random value
la x19, scratch # base address
sd x29, 0(x19) # store in memory
li x29, 0xf8cb52e9f20c74d7 # load another value into integer register
amoand.d x14, x29, (x19) # perform operation

# Testcase cp_rd (Test destination rd = x15)
li x29, 0xd1135c2a86ef6b0e # load random value
la x9, scratch # base address
sd x29, 0(x9) # store in memory
li x29, 0xd3dd1216b4e181ab # load another value into integer register
amoand.d x15, x29, (x9) # perform operation

# Testcase cp_rd (Test destination rd = x16)
li x24, 0xf2bc6523e48a58e6 # load random value
la x2, scratch # base address
sd x24, 0(x2) # store in memory
li x24, 0x0c0a29abac88519d # load another value into integer register
amoand.d x16, x24, (x2) # perform operation

# Testcase cp_rd (Test destination rd = x17)
li x3, 0x6e15c4e9460e0bf9 # load random value
la x11, scratch # base address
sd x3, 0(x11) # store in memory
li x3, 0x4a6a0c878b1fb628 # load another value into integer register
amoand.d x17, x3, (x11) # perform operation

# Testcase cp_rd (Test destination rd = x18)
li x1, 0xd68eee0fb603df8f # load random value
la x28, scratch # base address
sd x1, 0(x28) # store in memory
li x1, 0x8ef9083810258f5c # load another value into integer register
amoand.d x18, x1, (x28) # perform operation

# Testcase cp_rd (Test destination rd = x19)
li x6, 0xb1d4e460d8ac546d # load random value
la x23, scratch # base address
sd x6, 0(x23) # store in memory
li x6, 0x6775225ef4a1105e # load another value into integer register
amoand.d x19, x6, (x23) # perform operation

# Testcase cp_rd (Test destination rd = x20)
li x21, 0x889f27f8a3c017ab # load random value
la x24, scratch # base address
sd x21, 0(x24) # store in memory
li x21, 0x279e339d656bc863 # load another value into integer register
amoand.d x20, x21, (x24) # perform operation

# Testcase cp_rd (Test destination rd = x21)
li x30, 0xc67cb7ff64bc7fdd # load random value
la x21, scratch # base address
sd x30, 0(x21) # store in memory
li x30, 0x3baee22637a6c173 # load another value into integer register
amoand.d x21, x30, (x21) # perform operation

# Testcase cp_rd (Test destination rd = x22)
li x24, 0x5afa4acfad164a1f # load random value
la x12, scratch # base address
sd x24, 0(x12) # store in memory
li x24, 0x5fc2053edce2203f # load another value into integer register
amoand.d x22, x24, (x12) # perform operation

# Testcase cp_rd (Test destination rd = x23)
li x22, 0x62a267969de1c561 # load random value
la x25, scratch # base address
sd x22, 0(x25) # store in memory
li x22, 0x63901d83e707220c # load another value into integer register
amoand.d x23, x22, (x25) # perform operation

# Testcase cp_rd (Test destination rd = x24)
li x26, 0xe16e8d18c61e5fb5 # load random value
la x14, scratch # base address
sd x26, 0(x14) # store in memory
li x26, 0x4754a201e4260be1 # load another value into integer register
amoand.d x24, x26, (x14) # perform operation

# Testcase cp_rd (Test destination rd = x25)
li x1, 0xee3cae9164fb7e78 # load random value
la x13, scratch # base address
sd x1, 0(x13) # store in memory
li x1, 0x0d020cb7e64e6d2c # load another value into integer register
amoand.d x25, x1, (x13) # perform operation

# Testcase cp_rd (Test destination rd = x26)
li x25, 0x53081e8b32aed0c8 # load random value
la x2, scratch # base address
sd x25, 0(x2) # store in memory
li x25, 0x9b31527ff3a19de7 # load another value into integer register
amoand.d x26, x25, (x2) # perform operation

# Testcase cp_rd (Test destination rd = x27)
li x20, 0x25707c01574981b2 # load random value
la x25, scratch # base address
sd x20, 0(x25) # store in memory
li x20, 0x55d56b2bf0527939 # load another value into integer register
amoand.d x27, x20, (x25) # perform operation

# Testcase cp_rd (Test destination rd = x28)
li x6, 0x4b2697bbd5912510 # load random value
la x1, scratch # base address
sd x6, 0(x1) # store in memory
li x6, 0x154712f8e3474e64 # load another value into integer register
amoand.d x28, x6, (x1) # perform operation

# Testcase cp_rd (Test destination rd = x29)
li x29, 0x623e9e52aae29523 # load random value
la x9, scratch # base address
sd x29, 0(x9) # store in memory
li x29, 0xef5b93c005ac6587 # load another value into integer register
amoand.d x29, x29, (x9) # perform operation

# Testcase cp_rd (Test destination rd = x30)
li x18, 0x3a2d59672b2c888c # load random value
la x1, scratch # base address
sd x18, 0(x1) # store in memory
li x18, 0x1decf8c72ccff7c5 # load another value into integer register
amoand.d x30, x18, (x1) # perform operation

# Testcase cp_rd (Test destination rd = x31)
li x21, 0x5d928302d9fa9977 # load random value
la x28, scratch # base address
sd x21, 0(x28) # store in memory
li x21, 0x0b4ba16f7ef025a0 # load another value into integer register
amoand.d x31, x21, (x28) # perform operation

# Testcase cp_rs2_corners (Test source rs2 value = 0x0)
li x6, 0x78a4a11f7434f697 # load random value
la x31, scratch # base address
sd x6, 0(x31) # store in memory
li x6, 0x0000000000000000 # load another value into integer register
amoand.d x25, x6, (x31) # perform operation

# Testcase cp_rs2_corners (Test source rs2 value = 0x1)
li x18, 0x4d9db83a8a219d1e # load random value
la x10, scratch # base address
sd x18, 0(x10) # store in memory
li x18, 0x0000000000000001 # load another value into integer register
amoand.d x26, x18, (x10) # perform operation

# Testcase cp_rs2_corners (Test source rs2 value = 0x2)
li x23, 0x176bc974d250f4be # load random value
la x8, scratch # base address
sd x23, 0(x8) # store in memory
li x23, 0x0000000000000002 # load another value into integer register
amoand.d x15, x23, (x8) # perform operation

# Testcase cp_rs2_corners (Test source rs2 value = 0x8000000000000000)
li x11, 0x8de488884ad28c44 # load random value
la x8, scratch # base address
sd x11, 0(x8) # store in memory
li x11, 0x8000000000000000 # load another value into integer register
amoand.d x2, x11, (x8) # perform operation

# Testcase cp_rs2_corners (Test source rs2 value = 0x8000000000000001)
li x29, 0x39eace499e209ded # load random value
la x8, scratch # base address
sd x29, 0(x8) # store in memory
li x29, 0x8000000000000001 # load another value into integer register
amoand.d x1, x29, (x8) # perform operation

# Testcase cp_rs2_corners (Test source rs2 value = 0x7fffffffffffffff)
li x10, 0x901717d0549347bf # load random value
la x15, scratch # base address
sd x10, 0(x15) # store in memory
li x10, 0x7fffffffffffffff # load another value into integer register
amoand.d x22, x10, (x15) # perform operation

# Testcase cp_rs2_corners (Test source rs2 value = 0x7ffffffffffffffe)
li x11, 0xc1bdaa157bd30d0b # load random value
la x30, scratch # base address
sd x11, 0(x30) # store in memory
li x11, 0x7ffffffffffffffe # load another value into integer register
amoand.d x19, x11, (x30) # perform operation

# Testcase cp_rs2_corners (Test source rs2 value = 0xffffffffffffffff)
li x28, 0x292901e944def851 # load random value
la x9, scratch # base address
sd x28, 0(x9) # store in memory
li x28, 0xffffffffffffffff # load another value into integer register
amoand.d x31, x28, (x9) # perform operation

# Testcase cp_rs2_corners (Test source rs2 value = 0xfffffffffffffffe)
li x11, 0x605fc6d85236e37b # load random value
la x12, scratch # base address
sd x11, 0(x12) # store in memory
li x11, 0xfffffffffffffffe # load another value into integer register
amoand.d x28, x11, (x12) # perform operation

# Testcase cp_rs2_corners (Test source rs2 value = 0x5bbc887763ae86f2)
li x29, 0x66c132fe8a8951f7 # load random value
la x11, scratch # base address
sd x29, 0(x11) # store in memory
li x29, 0x5bbc887763ae86f2 # load another value into integer register
amoand.d x19, x29, (x11) # perform operation

# Testcase cp_rs2_corners (Test source rs2 value = 0xaaaaaaaaaaaaaaaa)
li x24, 0x362fec6692505859 # load random value
la x6, scratch # base address
sd x24, 0(x6) # store in memory
li x24, 0xaaaaaaaaaaaaaaaa # load another value into integer register
amoand.d x8, x24, (x6) # perform operation

# Testcase cp_rs2_corners (Test source rs2 value = 0x5555555555555555)
li x22, 0xc3d79b5b6c10da04 # load random value
la x24, scratch # base address
sd x22, 0(x24) # store in memory
li x22, 0x5555555555555555 # load another value into integer register
amoand.d x30, x22, (x24) # perform operation

# Testcase cp_rs2_corners (Test source rs2 value = 0xffffffff)
li x24, 0x7f6a12daf1553b7e # load random value
la x29, scratch # base address
sd x24, 0(x29) # store in memory
li x24, 0x00000000ffffffff # load another value into integer register
amoand.d x15, x24, (x29) # perform operation

# Testcase cp_rs2_corners (Test source rs2 value = 0xfffffffe)
li x17, 0x9c7f20054bc5a842 # load random value
la x11, scratch # base address
sd x17, 0(x11) # store in memory
li x17, 0x00000000fffffffe # load another value into integer register
amoand.d x9, x17, (x11) # perform operation

# Testcase cp_rs2_corners (Test source rs2 value = 0x100000000)
li x22, 0x48222151a6c838e7 # load random value
la x28, scratch # base address
sd x22, 0(x28) # store in memory
li x22, 0x0000000100000000 # load another value into integer register
amoand.d x13, x22, (x28) # perform operation

# Testcase cp_rs2_corners (Test source rs2 value = 0x100000001)
li x5, 0x9670cb454ee04e50 # load random value
la x18, scratch # base address
sd x5, 0(x18) # store in memory
li x5, 0x0000000100000001 # load another value into integer register
amoand.d x11, x5, (x18) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x1)
li x1, 0xa4b23e4fbe4bd29a # load random value
la x1, scratch # base address
sd x1, 0(x1) # store in memory
amoand.d x9, x1, (x1) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x2)
li x2, 0x99c8ad4bf184c1bb # load random value
la x2, scratch # base address
sd x2, 0(x2) # store in memory
amoand.d x12, x2, (x2) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x3)
li x3, 0x6cf2dbc3111644a6 # load random value
la x3, scratch # base address
sd x3, 0(x3) # store in memory
amoand.d x17, x3, (x3) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x4)
mv x5, x4 # switch signature pointer register to avoid conflict with test
li x4, 0xf3cd9770d8573db1 # load random value
la x4, scratch # base address
sd x4, 0(x4) # store in memory
amoand.d x3, x4, (x4) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x5)
mv x6, x5 # switch signature pointer register to avoid conflict with test
li x5, 0x54d229f3924b191a # load random value
la x5, scratch # base address
sd x5, 0(x5) # store in memory
amoand.d x1, x5, (x5) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x6)
mv x7, x6 # switch signature pointer register to avoid conflict with test
li x6, 0x7b0b76e5b747d833 # load random value
la x6, scratch # base address
sd x6, 0(x6) # store in memory
amoand.d x15, x6, (x6) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x7)
mv x4, x7 # switch signature pointer register to avoid conflict with test
li x7, 0x9e49ab57da76f5e6 # load random value
la x7, scratch # base address
sd x7, 0(x7) # store in memory
amoand.d x23, x7, (x7) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x8)
li x8, 0xbaceb4d8940dd0bf # load random value
la x8, scratch # base address
sd x8, 0(x8) # store in memory
amoand.d x7, x8, (x8) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x9)
li x9, 0x220302ad7f2e258a # load random value
la x9, scratch # base address
sd x9, 0(x9) # store in memory
amoand.d x7, x9, (x9) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x10)
li x10, 0x68afc8b42159cc19 # load random value
la x10, scratch # base address
sd x10, 0(x10) # store in memory
amoand.d x2, x10, (x10) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x11)
li x11, 0xf77c2d4362815121 # load random value
la x11, scratch # base address
sd x11, 0(x11) # store in memory
amoand.d x30, x11, (x11) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x12)
li x12, 0x84074d7bb7a0ce44 # load random value
la x12, scratch # base address
sd x12, 0(x12) # store in memory
amoand.d x3, x12, (x12) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x13)
li x13, 0xfb9bae7fc419abb6 # load random value
la x13, scratch # base address
sd x13, 0(x13) # store in memory
amoand.d x20, x13, (x13) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x14)
li x14, 0xfc56d58deb064e65 # load random value
la x14, scratch # base address
sd x14, 0(x14) # store in memory
amoand.d x29, x14, (x14) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x15)
li x15, 0x2dda990a32399f05 # load random value
la x15, scratch # base address
sd x15, 0(x15) # store in memory
amoand.d x14, x15, (x15) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x16)
li x16, 0x007f8f6ac536fd69 # load random value
la x16, scratch # base address
sd x16, 0(x16) # store in memory
amoand.d x6, x16, (x16) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x17)
li x17, 0x1c6af175900d2701 # load random value
la x17, scratch # base address
sd x17, 0(x17) # store in memory
amoand.d x7, x17, (x17) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x18)
li x18, 0x12db88c42dd8713c # load random value
la x18, scratch # base address
sd x18, 0(x18) # store in memory
amoand.d x21, x18, (x18) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x19)
li x19, 0xeb643025af6b37b9 # load random value
la x19, scratch # base address
sd x19, 0(x19) # store in memory
amoand.d x8, x19, (x19) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x20)
li x20, 0x2bb29c706f9a3bf9 # load random value
la x20, scratch # base address
sd x20, 0(x20) # store in memory
amoand.d x20, x20, (x20) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x21)
li x21, 0x1dddb8259e36cc74 # load random value
la x21, scratch # base address
sd x21, 0(x21) # store in memory
amoand.d x8, x21, (x21) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x22)
li x22, 0x94cc06ef9e04f440 # load random value
la x22, scratch # base address
sd x22, 0(x22) # store in memory
amoand.d x3, x22, (x22) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x23)
li x23, 0x5ed782dbe193fe49 # load random value
la x23, scratch # base address
sd x23, 0(x23) # store in memory
amoand.d x6, x23, (x23) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x24)
li x24, 0x0a5f81e2b0cfaca7 # load random value
la x24, scratch # base address
sd x24, 0(x24) # store in memory
amoand.d x9, x24, (x24) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x25)
li x25, 0x8ebfced7337d02bc # load random value
la x25, scratch # base address
sd x25, 0(x25) # store in memory
amoand.d x15, x25, (x25) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x26)
li x26, 0x5d6ff7ab9805475b # load random value
la x26, scratch # base address
sd x26, 0(x26) # store in memory
amoand.d x17, x26, (x26) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x27)
li x27, 0xc2b467a7d95d3390 # load random value
la x27, scratch # base address
sd x27, 0(x27) # store in memory
amoand.d x7, x27, (x27) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x28)
li x28, 0x2765271939f75663 # load random value
la x28, scratch # base address
sd x28, 0(x28) # store in memory
amoand.d x16, x28, (x28) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x29)
li x29, 0x02f7318a9d03b0dd # load random value
la x29, scratch # base address
sd x29, 0(x29) # store in memory
amoand.d x3, x29, (x29) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x30)
li x30, 0x3e936e8e3bb80a00 # load random value
la x30, scratch # base address
sd x30, 0(x30) # store in memory
amoand.d x22, x30, (x30) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x31)
li x31, 0x9408557f16f169e2 # load random value
la x31, scratch # base address
sd x31, 0(x31) # store in memory
amoand.d x13, x31, (x31) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x1)
li x22, 0x8b67ce00280d1d5e # load random value
la x1, scratch # base address
sd x22, 0(x1) # store in memory
li x22, 0x580690771ebabc14 # load another value into integer register
amoand.d x1, x22, (x1) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x2)
li x5, 0x59f168eef0b3dc67 # load random value
la x2, scratch # base address
sd x5, 0(x2) # store in memory
li x5, 0xe9a6e73609619f53 # load another value into integer register
amoand.d x2, x5, (x2) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x3)
li x31, 0x0459e873cf2457ec # load random value
la x3, scratch # base address
sd x31, 0(x3) # store in memory
li x31, 0xb94f8b7a7fc449ff # load another value into integer register
amoand.d x3, x31, (x3) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x4)
mv x5, x4 # switch signature pointer register to avoid conflict with test
li x8, 0x39bb0f926127b976 # load random value
la x4, scratch # base address
sd x8, 0(x4) # store in memory
li x8, 0x175e2b40213ddb15 # load another value into integer register
amoand.d x4, x8, (x4) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x5)
mv x6, x5 # switch signature pointer register to avoid conflict with test
li x22, 0x0002b7f0456f6e3a # load random value
la x5, scratch # base address
sd x22, 0(x5) # store in memory
li x22, 0xc5f88a1561878388 # load another value into integer register
amoand.d x5, x22, (x5) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x6)
mv x7, x6 # switch signature pointer register to avoid conflict with test
li x9, 0x77b5769a481dbf83 # load random value
la x6, scratch # base address
sd x9, 0(x6) # store in memory
li x9, 0xdd237f71a0369f56 # load another value into integer register
amoand.d x6, x9, (x6) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x7)
mv x4, x7 # switch signature pointer register to avoid conflict with test
li x1, 0xf17e9079420bdc3c # load random value
la x7, scratch # base address
sd x1, 0(x7) # store in memory
li x1, 0x46d23ca5d0d3c82b # load another value into integer register
amoand.d x7, x1, (x7) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x8)
li x23, 0x85c529f22a38e56f # load random value
la x8, scratch # base address
sd x23, 0(x8) # store in memory
li x23, 0x10e153fd03818ae1 # load another value into integer register
amoand.d x8, x23, (x8) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x9)
li x22, 0x1d6ff405e19410e6 # load random value
la x9, scratch # base address
sd x22, 0(x9) # store in memory
li x22, 0xac78424a4a723122 # load another value into integer register
amoand.d x9, x22, (x9) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x10)
li x16, 0x992182d762cb5a32 # load random value
la x10, scratch # base address
sd x16, 0(x10) # store in memory
li x16, 0xd0d6bf22547dc504 # load another value into integer register
amoand.d x10, x16, (x10) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x11)
li x2, 0x22099f8b2473ec24 # load random value
la x11, scratch # base address
sd x2, 0(x11) # store in memory
li x2, 0xae9a047abecda05c # load another value into integer register
amoand.d x11, x2, (x11) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x12)
li x8, 0x77615700acda9997 # load random value
la x12, scratch # base address
sd x8, 0(x12) # store in memory
li x8, 0xfff3515c5e6a59a0 # load another value into integer register
amoand.d x12, x8, (x12) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x13)
li x9, 0x4b70a7843e53104e # load random value
la x13, scratch # base address
sd x9, 0(x13) # store in memory
li x9, 0xc4b187430b279f6f # load another value into integer register
amoand.d x13, x9, (x13) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x14)
li x8, 0x9ea581e1ebc05832 # load random value
la x14, scratch # base address
sd x8, 0(x14) # store in memory
li x8, 0x4ec7c4cd02bbdf55 # load another value into integer register
amoand.d x14, x8, (x14) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x15)
li x6, 0x45c39ed5a1a0e95e # load random value
la x15, scratch # base address
sd x6, 0(x15) # store in memory
li x6, 0xe66ee35279d2daa9 # load another value into integer register
amoand.d x15, x6, (x15) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x16)
li x7, 0xeecd68711a515f3c # load random value
la x16, scratch # base address
sd x7, 0(x16) # store in memory
li x7, 0x0560f8b2d37f0286 # load another value into integer register
amoand.d x16, x7, (x16) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x17)
li x29, 0xb6a5f41f00e91f72 # load random value
la x17, scratch # base address
sd x29, 0(x17) # store in memory
li x29, 0x69f69ba6ae23ce59 # load another value into integer register
amoand.d x17, x29, (x17) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x18)
li x18, 0x8ba113cdd37cf2d0 # load random value
la x18, scratch # base address
sd x18, 0(x18) # store in memory
amoand.d x18, x18, (x18) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x19)
li x24, 0x2cd7eff09309f0eb # load random value
la x19, scratch # base address
sd x24, 0(x19) # store in memory
li x24, 0xf75b62ec6825ab6d # load another value into integer register
amoand.d x19, x24, (x19) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x20)
li x13, 0x3c9d6d598aa4dcd7 # load random value
la x20, scratch # base address
sd x13, 0(x20) # store in memory
li x13, 0x1cb7a5086e24b9d0 # load another value into integer register
amoand.d x20, x13, (x20) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x21)
li x1, 0xd709cc9c84f74a38 # load random value
la x21, scratch # base address
sd x1, 0(x21) # store in memory
li x1, 0x18dbb4d418babaf7 # load another value into integer register
amoand.d x21, x1, (x21) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x22)
li x9, 0x09e69f3ece12e9d1 # load random value
la x22, scratch # base address
sd x9, 0(x22) # store in memory
li x9, 0xadce1018e80119ae # load another value into integer register
amoand.d x22, x9, (x22) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x23)
li x24, 0xa788b65e19146b7b # load random value
la x23, scratch # base address
sd x24, 0(x23) # store in memory
li x24, 0x09d918bfccbc6e04 # load another value into integer register
amoand.d x23, x24, (x23) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x24)
li x15, 0xab691841cf0963a4 # load random value
la x24, scratch # base address
sd x15, 0(x24) # store in memory
li x15, 0xbf05411e6637d274 # load another value into integer register
amoand.d x24, x15, (x24) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x25)
li x18, 0x023fba47caebe0a5 # load random value
la x25, scratch # base address
sd x18, 0(x25) # store in memory
li x18, 0x6113aa0a4734922e # load another value into integer register
amoand.d x25, x18, (x25) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x26)
li x19, 0x2f1f22b6d13603fc # load random value
la x26, scratch # base address
sd x19, 0(x26) # store in memory
li x19, 0xd4c1f83938a9adb2 # load another value into integer register
amoand.d x26, x19, (x26) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x27)
li x27, 0x2621a9458313179e # load random value
la x27, scratch # base address
sd x27, 0(x27) # store in memory
amoand.d x27, x27, (x27) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x28)
li x10, 0x004bdc9833d96f9a # load random value
la x28, scratch # base address
sd x10, 0(x28) # store in memory
li x10, 0xf0d086fe5a689d4f # load another value into integer register
amoand.d x28, x10, (x28) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x29)
li x19, 0x708dc013916bc1d8 # load random value
la x29, scratch # base address
sd x19, 0(x29) # store in memory
li x19, 0xdbd755a68b9abef1 # load another value into integer register
amoand.d x29, x19, (x29) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x30)
li x2, 0x32213c3d5d243208 # load random value
la x30, scratch # base address
sd x2, 0(x30) # store in memory
li x2, 0xe2220ceeda95642e # load another value into integer register
amoand.d x30, x2, (x30) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x31)
li x20, 0xe406eaedd170f0f8 # load random value
la x31, scratch # base address
sd x20, 0(x31) # store in memory
li x20, 0x3f5624e480e2283f # load another value into integer register
amoand.d x31, x20, (x31) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x0)
li x0, 0x3090d4665bb2b12e # load random value
la x5, scratch # base address
sd x0, 0(x5) # store in memory
li x0, 0x7a96d2e3e4ed9dde # load another value into integer register
amoand.d x0, x0, (x5) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x1)
li x1, 0x0da430594471f873 # load random value
la x29, scratch # base address
sd x1, 0(x29) # store in memory
li x1, 0xc3ab2f5ba8c16d6f # load another value into integer register
amoand.d x1, x1, (x29) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x2)
li x2, 0xa0cd6225ffb10a66 # load random value
la x24, scratch # base address
sd x2, 0(x24) # store in memory
li x2, 0xac04ba068188f636 # load another value into integer register
amoand.d x2, x2, (x24) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x3)
li x3, 0x4c10f09af3400132 # load random value
la x2, scratch # base address
sd x3, 0(x2) # store in memory
li x3, 0xb63b6aa29b3e6369 # load another value into integer register
amoand.d x3, x3, (x2) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x4)
mv x5, x4 # switch signature pointer register to avoid conflict with test
li x4, 0xb2304457c21949ce # load random value
la x27, scratch # base address
sd x4, 0(x27) # store in memory
li x4, 0x68cf5757e8bb85f1 # load another value into integer register
amoand.d x4, x4, (x27) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x5)
mv x6, x5 # switch signature pointer register to avoid conflict with test
li x5, 0x4e011baa9f069b94 # load random value
la x9, scratch # base address
sd x5, 0(x9) # store in memory
li x5, 0x9ffd85102fb9ba58 # load another value into integer register
amoand.d x5, x5, (x9) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x6)
mv x7, x6 # switch signature pointer register to avoid conflict with test
li x6, 0x0a6334a2da057824 # load random value
la x17, scratch # base address
sd x6, 0(x17) # store in memory
li x6, 0x113d4337e5ec05a3 # load another value into integer register
amoand.d x6, x6, (x17) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x7)
mv x4, x7 # switch signature pointer register to avoid conflict with test
li x7, 0x5880534de7c60d06 # load random value
la x3, scratch # base address
sd x7, 0(x3) # store in memory
li x7, 0x9c6b899c6e524901 # load another value into integer register
amoand.d x7, x7, (x3) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x8)
li x8, 0x7413e791f0483d14 # load random value
la x26, scratch # base address
sd x8, 0(x26) # store in memory
li x8, 0x8fc19928166608ab # load another value into integer register
amoand.d x8, x8, (x26) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x9)
li x9, 0x3dd24e8547e12cde # load random value
la x25, scratch # base address
sd x9, 0(x25) # store in memory
li x9, 0x3d6dcd8de1bf5f9e # load another value into integer register
amoand.d x9, x9, (x25) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x10)
li x10, 0xca6a3b3bafad3e55 # load random value
la x27, scratch # base address
sd x10, 0(x27) # store in memory
li x10, 0xf74782bab48e0393 # load another value into integer register
amoand.d x10, x10, (x27) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x11)
li x11, 0x4d28f8c0cdcf5159 # load random value
la x19, scratch # base address
sd x11, 0(x19) # store in memory
li x11, 0x388139959705d99c # load another value into integer register
amoand.d x11, x11, (x19) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x12)
li x12, 0x4e92b51703dd5c75 # load random value
la x3, scratch # base address
sd x12, 0(x3) # store in memory
li x12, 0x8372e4a41d4a478f # load another value into integer register
amoand.d x12, x12, (x3) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x13)
li x13, 0x5d133932a810a4a3 # load random value
la x31, scratch # base address
sd x13, 0(x31) # store in memory
li x13, 0xb290d99f4ab7de66 # load another value into integer register
amoand.d x13, x13, (x31) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x14)
li x14, 0x282c46e68f646a43 # load random value
la x3, scratch # base address
sd x14, 0(x3) # store in memory
li x14, 0x3f862fd1d25c93e5 # load another value into integer register
amoand.d x14, x14, (x3) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x15)
li x15, 0x4f083cb41970139d # load random value
la x31, scratch # base address
sd x15, 0(x31) # store in memory
li x15, 0x240bc786003d7144 # load another value into integer register
amoand.d x15, x15, (x31) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x16)
li x16, 0xf025901a2b20c623 # load random value
la x17, scratch # base address
sd x16, 0(x17) # store in memory
li x16, 0x12eaf6aaf2abd429 # load another value into integer register
amoand.d x16, x16, (x17) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x17)
li x17, 0x033382d852e72d8e # load random value
la x21, scratch # base address
sd x17, 0(x21) # store in memory
li x17, 0xe3248d2db14216ab # load another value into integer register
amoand.d x17, x17, (x21) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x18)
li x18, 0x5b975c4d33504e4f # load random value
la x27, scratch # base address
sd x18, 0(x27) # store in memory
li x18, 0xfe985f68f4b136ba # load another value into integer register
amoand.d x18, x18, (x27) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x19)
li x19, 0x45c598ff46c17aad # load random value
la x7, scratch # base address
sd x19, 0(x7) # store in memory
li x19, 0xb68be66dcffbf48a # load another value into integer register
amoand.d x19, x19, (x7) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x20)
li x20, 0x990263a6549a0b30 # load random value
la x8, scratch # base address
sd x20, 0(x8) # store in memory
li x20, 0xc4b2456b3b76f2b0 # load another value into integer register
amoand.d x20, x20, (x8) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x21)
li x21, 0xfbc4a7d22613611f # load random value
la x11, scratch # base address
sd x21, 0(x11) # store in memory
li x21, 0x84a809fb805938c0 # load another value into integer register
amoand.d x21, x21, (x11) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x22)
li x22, 0xfccfdcbf05915820 # load random value
la x22, scratch # base address
sd x22, 0(x22) # store in memory
amoand.d x22, x22, (x22) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x23)
li x23, 0x564c0617714715ad # load random value
la x13, scratch # base address
sd x23, 0(x13) # store in memory
li x23, 0x8ee2751d6db34cd6 # load another value into integer register
amoand.d x23, x23, (x13) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x24)
li x24, 0xa4f5c695fbaa193c # load random value
la x28, scratch # base address
sd x24, 0(x28) # store in memory
li x24, 0x2532f1fd44e4d114 # load another value into integer register
amoand.d x24, x24, (x28) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x25)
li x25, 0x281565218e1cb25c # load random value
la x20, scratch # base address
sd x25, 0(x20) # store in memory
li x25, 0xaf5bffb9fb085c69 # load another value into integer register
amoand.d x25, x25, (x20) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x26)
li x26, 0x039678f430496a0c # load random value
la x10, scratch # base address
sd x26, 0(x10) # store in memory
li x26, 0x37e98436cf9c8e94 # load another value into integer register
amoand.d x26, x26, (x10) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x27)
li x27, 0x46e91a3d37a7e0d0 # load random value
la x21, scratch # base address
sd x27, 0(x21) # store in memory
li x27, 0x1ed0737fd4f2407e # load another value into integer register
amoand.d x27, x27, (x21) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x28)
li x28, 0x1a4a9854c3773ef9 # load random value
la x27, scratch # base address
sd x28, 0(x27) # store in memory
li x28, 0x0116ae2034699c1a # load another value into integer register
amoand.d x28, x28, (x27) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x29)
li x29, 0x9b65e43972d0f71b # load random value
la x19, scratch # base address
sd x29, 0(x19) # store in memory
li x29, 0xe2b0efc7262e9587 # load another value into integer register
amoand.d x29, x29, (x19) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x30)
li x30, 0xe372adcaee952d34 # load random value
la x17, scratch # base address
sd x30, 0(x17) # store in memory
li x30, 0x54ce72e4443c6e3a # load another value into integer register
amoand.d x30, x30, (x17) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x31)
li x31, 0xa253e8974fcbc110 # load random value
la x20, scratch # base address
sd x31, 0(x20) # store in memory
li x31, 0x88d6860b81a99407 # load another value into integer register
amoand.d x31, x31, (x20) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x1)
li x1, 0x08978dbe810c64bc # load random value
la x1, scratch # base address
sd x1, 0(x1) # store in memory
amoand.d x1, x1, (x1) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x2)
li x2, 0x7a535a575b98cbce # load random value
la x2, scratch # base address
sd x2, 0(x2) # store in memory
amoand.d x2, x2, (x2) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x3)
li x3, 0x29350015544eabd5 # load random value
la x3, scratch # base address
sd x3, 0(x3) # store in memory
amoand.d x3, x3, (x3) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x4)
mv x5, x4 # switch signature pointer register to avoid conflict with test
li x4, 0x9cba137e912669ac # load random value
la x4, scratch # base address
sd x4, 0(x4) # store in memory
amoand.d x4, x4, (x4) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x5)
mv x6, x5 # switch signature pointer register to avoid conflict with test
li x5, 0xfc8354671da37098 # load random value
la x5, scratch # base address
sd x5, 0(x5) # store in memory
amoand.d x5, x5, (x5) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x6)
mv x7, x6 # switch signature pointer register to avoid conflict with test
li x6, 0xbe072ba299620339 # load random value
la x6, scratch # base address
sd x6, 0(x6) # store in memory
amoand.d x6, x6, (x6) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x7)
mv x4, x7 # switch signature pointer register to avoid conflict with test
li x7, 0x18eea3763292ccdc # load random value
la x7, scratch # base address
sd x7, 0(x7) # store in memory
amoand.d x7, x7, (x7) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x8)
li x8, 0xdbea5cec92145e5d # load random value
la x8, scratch # base address
sd x8, 0(x8) # store in memory
amoand.d x8, x8, (x8) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x9)
li x9, 0x3cfd1516e79bd11d # load random value
la x9, scratch # base address
sd x9, 0(x9) # store in memory
amoand.d x9, x9, (x9) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x10)
li x10, 0x36cef7e97209030e # load random value
la x10, scratch # base address
sd x10, 0(x10) # store in memory
amoand.d x10, x10, (x10) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x11)
li x11, 0xf7bbbf064228038f # load random value
la x11, scratch # base address
sd x11, 0(x11) # store in memory
amoand.d x11, x11, (x11) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x12)
li x12, 0xd55ca1fbfe25a5fa # load random value
la x12, scratch # base address
sd x12, 0(x12) # store in memory
amoand.d x12, x12, (x12) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x13)
li x13, 0x0b8867c8e4fb45d6 # load random value
la x13, scratch # base address
sd x13, 0(x13) # store in memory
amoand.d x13, x13, (x13) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x14)
li x14, 0xf67a0a74f7a83903 # load random value
la x14, scratch # base address
sd x14, 0(x14) # store in memory
amoand.d x14, x14, (x14) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x15)
li x15, 0x5659157308949054 # load random value
la x15, scratch # base address
sd x15, 0(x15) # store in memory
amoand.d x15, x15, (x15) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x16)
li x16, 0xd1a47ae9bcf74886 # load random value
la x16, scratch # base address
sd x16, 0(x16) # store in memory
amoand.d x16, x16, (x16) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x17)
li x17, 0xffee3e70090ea11c # load random value
la x17, scratch # base address
sd x17, 0(x17) # store in memory
amoand.d x17, x17, (x17) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x18)
li x18, 0x531069833f10c2d0 # load random value
la x18, scratch # base address
sd x18, 0(x18) # store in memory
amoand.d x18, x18, (x18) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x19)
li x19, 0x15d57e8925b030f1 # load random value
la x19, scratch # base address
sd x19, 0(x19) # store in memory
amoand.d x19, x19, (x19) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x20)
li x20, 0xa17bab46d0aa7ef9 # load random value
la x20, scratch # base address
sd x20, 0(x20) # store in memory
amoand.d x20, x20, (x20) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x21)
li x21, 0x2553be22381a70ab # load random value
la x21, scratch # base address
sd x21, 0(x21) # store in memory
amoand.d x21, x21, (x21) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x22)
li x22, 0x7164c989e589a41c # load random value
la x22, scratch # base address
sd x22, 0(x22) # store in memory
amoand.d x22, x22, (x22) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x23)
li x23, 0x39f58559264c55f5 # load random value
la x23, scratch # base address
sd x23, 0(x23) # store in memory
amoand.d x23, x23, (x23) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x24)
li x24, 0x9fee6dacd760e1e7 # load random value
la x24, scratch # base address
sd x24, 0(x24) # store in memory
amoand.d x24, x24, (x24) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x25)
li x25, 0x975747c8e3f7ff32 # load random value
la x25, scratch # base address
sd x25, 0(x25) # store in memory
amoand.d x25, x25, (x25) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x26)
li x26, 0x567c8bdd27bf592e # load random value
la x26, scratch # base address
sd x26, 0(x26) # store in memory
amoand.d x26, x26, (x26) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x27)
li x27, 0x005b19790a9fd066 # load random value
la x27, scratch # base address
sd x27, 0(x27) # store in memory
amoand.d x27, x27, (x27) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x28)
li x28, 0xd6f2eac3247dc53a # load random value
la x28, scratch # base address
sd x28, 0(x28) # store in memory
amoand.d x28, x28, (x28) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x29)
li x29, 0x2ccd79524e75a18b # load random value
la x29, scratch # base address
sd x29, 0(x29) # store in memory
amoand.d x29, x29, (x29) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x30)
li x30, 0xa9e1184450e7701a # load random value
la x30, scratch # base address
sd x30, 0(x30) # store in memory
amoand.d x30, x30, (x30) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x31)
li x31, 0x31fe417abd2953a6 # load random value
la x31, scratch # base address
sd x31, 0(x31) # store in memory
amoand.d x31, x31, (x31) # perform operation

# Testcase cp_gpr/fpr_hazard nohaz test
la x3, scratch
add x12, x15, x7 # perform first operation
amoand.d x17, x14, (x3) # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard nohaz test
la x12, scratch
add x16, x24, x23 # perform first operation
amoand.d x10, x27, (x12) # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard nohaz test
la x21, scratch
add x28, x8, x6 # perform first operation
amoand.d x25, x2, (x21) # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard raw test
la x5, scratch
add x1, x1, x0 # perform first operation
amoand.d x24, x25, (x5) # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard raw test
la x20, scratch
add x20, x20, x0 # perform first operation
amoand.d x21, x2, (x20) # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard raw test
la x8, scratch
add x10, x10, x0 # perform first operation
amoand.d x22, x15, (x8) # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard waw test
la x27, scratch
add x23, x1, x18 # perform first operation
amoand.d x23, x11, (x27) # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard waw test
la x26, scratch
add x6, x2, x16 # perform first operation
amoand.d x6, x30, (x26) # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard waw test
la x13, scratch
add x12, x1, x16 # perform first operation
amoand.d x12, x6, (x13) # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard war test
la x5, scratch
add x21, x30, x24 # perform first operation
amoand.d x30, x7, (x5) # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard war test
la x1, scratch
add x14, x19, x25 # perform first operation
amoand.d x25, x23, (x1) # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard war test
la x28, scratch
add x2, x7, x13 # perform first operation
amoand.d x10, x12, (x28) # perform second (triggering) operation

#.EQU SIGSIZE,0


// ******************
// Tests from: WALLY-COV-amomax.w.S
// ******************


# initialize signature pointer
la x4, begin_signature

    
# Testcase cp_rs1 (Test source rs1 = x1)
li x9, 0x0e6dfd1afc0d8cbf # load random value
la x1, scratch # base address
sd x9, 0(x1) # store in memory
li x9, 0xd3b982d15eb41163 # load another value into integer register
amomax.w x24, x9, (x1) # perform operation

# Testcase cp_rs1 (Test source rs1 = x2)
li x28, 0xecba358aed1fcf0c # load random value
la x2, scratch # base address
sd x28, 0(x2) # store in memory
li x28, 0x57c3ca05f29db14d # load another value into integer register
amomax.w x1, x28, (x2) # perform operation

# Testcase cp_rs1 (Test source rs1 = x3)
li x21, 0x956f48108ffae6fe # load random value
la x3, scratch # base address
sd x21, 0(x3) # store in memory
li x21, 0xb138493b2f10f10c # load another value into integer register
amomax.w x27, x21, (x3) # perform operation

# Testcase cp_rs1 (Test source rs1 = x4)
mv x5, x4 # switch signature pointer register to avoid conflict with test
li x18, 0x7758e691bbdd7bbd # load random value
la x4, scratch # base address
sd x18, 0(x4) # store in memory
li x18, 0x223fe1d7fc958058 # load another value into integer register
amomax.w x13, x18, (x4) # perform operation

# Testcase cp_rs1 (Test source rs1 = x5)
mv x6, x5 # switch signature pointer register to avoid conflict with test
li x23, 0xf6548dd5dc5b2561 # load random value
la x5, scratch # base address
sd x23, 0(x5) # store in memory
li x23, 0x217800c717fb1ff0 # load another value into integer register
amomax.w x27, x23, (x5) # perform operation

# Testcase cp_rs1 (Test source rs1 = x6)
mv x7, x6 # switch signature pointer register to avoid conflict with test
li x11, 0xb830e525867309ba # load random value
la x6, scratch # base address
sd x11, 0(x6) # store in memory
li x11, 0xf4325cc617e6f2bd # load another value into integer register
amomax.w x28, x11, (x6) # perform operation

# Testcase cp_rs1 (Test source rs1 = x7)
mv x4, x7 # switch signature pointer register to avoid conflict with test
li x21, 0x50c1877f5b3aede5 # load random value
la x7, scratch # base address
sd x21, 0(x7) # store in memory
li x21, 0x900236f4cd686095 # load another value into integer register
amomax.w x28, x21, (x7) # perform operation

# Testcase cp_rs1 (Test source rs1 = x8)
li x5, 0x38083179859195bf # load random value
la x8, scratch # base address
sd x5, 0(x8) # store in memory
li x5, 0x3e80263a2332b055 # load another value into integer register
amomax.w x16, x5, (x8) # perform operation

# Testcase cp_rs1 (Test source rs1 = x9)
li x16, 0x6a0473167f3ba5eb # load random value
la x9, scratch # base address
sd x16, 0(x9) # store in memory
li x16, 0xc8f2ce8421048a55 # load another value into integer register
amomax.w x5, x16, (x9) # perform operation

# Testcase cp_rs1 (Test source rs1 = x10)
li x27, 0x61e6e48d34496def # load random value
la x10, scratch # base address
sd x27, 0(x10) # store in memory
li x27, 0xb8ad602be1b0ada3 # load another value into integer register
amomax.w x11, x27, (x10) # perform operation

# Testcase cp_rs1 (Test source rs1 = x11)
li x16, 0xb2f03f3fd3d66b23 # load random value
la x11, scratch # base address
sd x16, 0(x11) # store in memory
li x16, 0x76d8d6038116a503 # load another value into integer register
amomax.w x12, x16, (x11) # perform operation

# Testcase cp_rs1 (Test source rs1 = x12)
li x5, 0xd819f311fbfbf78b # load random value
la x12, scratch # base address
sd x5, 0(x12) # store in memory
li x5, 0xdaba27e2553c39ba # load another value into integer register
amomax.w x22, x5, (x12) # perform operation

# Testcase cp_rs1 (Test source rs1 = x13)
li x31, 0xa6f1a04d52a4c448 # load random value
la x13, scratch # base address
sd x31, 0(x13) # store in memory
li x31, 0xa72b937087189473 # load another value into integer register
amomax.w x26, x31, (x13) # perform operation

# Testcase cp_rs1 (Test source rs1 = x14)
li x25, 0xba517077fd9bd3e7 # load random value
la x14, scratch # base address
sd x25, 0(x14) # store in memory
li x25, 0xdcc3416590904fa0 # load another value into integer register
amomax.w x29, x25, (x14) # perform operation

# Testcase cp_rs1 (Test source rs1 = x15)
li x30, 0x22576cf20d486323 # load random value
la x15, scratch # base address
sd x30, 0(x15) # store in memory
li x30, 0x4c0597a836a8a8fd # load another value into integer register
amomax.w x19, x30, (x15) # perform operation

# Testcase cp_rs1 (Test source rs1 = x16)
li x14, 0x82c08248250cfbdb # load random value
la x16, scratch # base address
sd x14, 0(x16) # store in memory
li x14, 0xbf9b5d9af6dd6f78 # load another value into integer register
amomax.w x5, x14, (x16) # perform operation

# Testcase cp_rs1 (Test source rs1 = x17)
li x9, 0xa0b41fe8495099c7 # load random value
la x17, scratch # base address
sd x9, 0(x17) # store in memory
li x9, 0xf4c475342fa315e7 # load another value into integer register
amomax.w x30, x9, (x17) # perform operation

# Testcase cp_rs1 (Test source rs1 = x18)
li x20, 0x7ade765e428dd241 # load random value
la x18, scratch # base address
sd x20, 0(x18) # store in memory
li x20, 0x88f1a570bf37dd19 # load another value into integer register
amomax.w x12, x20, (x18) # perform operation

# Testcase cp_rs1 (Test source rs1 = x19)
li x26, 0x7cbac6ce33dc3e1e # load random value
la x19, scratch # base address
sd x26, 0(x19) # store in memory
li x26, 0xfcbef260c03123c3 # load another value into integer register
amomax.w x9, x26, (x19) # perform operation

# Testcase cp_rs1 (Test source rs1 = x20)
li x16, 0xfad0333ef284c3fe # load random value
la x20, scratch # base address
sd x16, 0(x20) # store in memory
li x16, 0x15627dee039c04ae # load another value into integer register
amomax.w x2, x16, (x20) # perform operation

# Testcase cp_rs1 (Test source rs1 = x21)
li x30, 0xfba3d91307b62dbd # load random value
la x21, scratch # base address
sd x30, 0(x21) # store in memory
li x30, 0xfc29f388bdbc3966 # load another value into integer register
amomax.w x2, x30, (x21) # perform operation

# Testcase cp_rs1 (Test source rs1 = x22)
li x12, 0x54aad77486dd075d # load random value
la x22, scratch # base address
sd x12, 0(x22) # store in memory
li x12, 0x91515cefda61c4cd # load another value into integer register
amomax.w x29, x12, (x22) # perform operation

# Testcase cp_rs1 (Test source rs1 = x23)
li x9, 0x8822b3dce22e501d # load random value
la x23, scratch # base address
sd x9, 0(x23) # store in memory
li x9, 0xd93123314f635d49 # load another value into integer register
amomax.w x11, x9, (x23) # perform operation

# Testcase cp_rs1 (Test source rs1 = x24)
li x1, 0xa2c3e16dfa61e07a # load random value
la x24, scratch # base address
sd x1, 0(x24) # store in memory
li x1, 0x609feffd72d6fa3e # load another value into integer register
amomax.w x30, x1, (x24) # perform operation

# Testcase cp_rs1 (Test source rs1 = x25)
li x31, 0x75316be79ff8615d # load random value
la x25, scratch # base address
sd x31, 0(x25) # store in memory
li x31, 0xa2088d3482ec099c # load another value into integer register
amomax.w x10, x31, (x25) # perform operation

# Testcase cp_rs1 (Test source rs1 = x26)
li x23, 0x3c021d2ddc379160 # load random value
la x26, scratch # base address
sd x23, 0(x26) # store in memory
li x23, 0xc4a49b32b0b8228f # load another value into integer register
amomax.w x25, x23, (x26) # perform operation

# Testcase cp_rs1 (Test source rs1 = x27)
li x31, 0x297a49a1423e166e # load random value
la x27, scratch # base address
sd x31, 0(x27) # store in memory
li x31, 0x66277f42f0dbec2c # load another value into integer register
amomax.w x5, x31, (x27) # perform operation

# Testcase cp_rs1 (Test source rs1 = x28)
li x24, 0xa17d5c6df181b4e7 # load random value
la x28, scratch # base address
sd x24, 0(x28) # store in memory
li x24, 0x8525cf1822bea4a4 # load another value into integer register
amomax.w x20, x24, (x28) # perform operation

# Testcase cp_rs1 (Test source rs1 = x29)
li x7, 0xb423e4de03b5cfe2 # load random value
la x29, scratch # base address
sd x7, 0(x29) # store in memory
li x7, 0xd975c928b7e7bbbf # load another value into integer register
amomax.w x31, x7, (x29) # perform operation

# Testcase cp_rs1 (Test source rs1 = x30)
li x16, 0xa84cbb2c4b842d72 # load random value
la x30, scratch # base address
sd x16, 0(x30) # store in memory
li x16, 0xb098b581f5173ddd # load another value into integer register
amomax.w x12, x16, (x30) # perform operation

# Testcase cp_rs1 (Test source rs1 = x31)
li x10, 0x98eb25f2723ec863 # load random value
la x31, scratch # base address
sd x10, 0(x31) # store in memory
li x10, 0xf898e7d20a0de9ed # load another value into integer register
amomax.w x3, x10, (x31) # perform operation

# Testcase cp_rs2 (Test source rs2 = x0)
li x0, 0x79ab25c1a5e90209 # load random value
la x10, scratch # base address
sd x0, 0(x10) # store in memory
li x0, 0xa727f25c580e7985 # load another value into integer register
amomax.w x18, x0, (x10) # perform operation

# Testcase cp_rs2 (Test source rs2 = x1)
li x1, 0xbb6ea50a3e80380a # load random value
la x25, scratch # base address
sd x1, 0(x25) # store in memory
li x1, 0xb57ac1ac97d61f89 # load another value into integer register
amomax.w x14, x1, (x25) # perform operation

# Testcase cp_rs2 (Test source rs2 = x2)
li x2, 0xdc7c550e01c7adaf # load random value
la x5, scratch # base address
sd x2, 0(x5) # store in memory
li x2, 0xfa3999475aab3598 # load another value into integer register
amomax.w x15, x2, (x5) # perform operation

# Testcase cp_rs2 (Test source rs2 = x3)
li x3, 0x157974925b37e821 # load random value
la x15, scratch # base address
sd x3, 0(x15) # store in memory
li x3, 0xe39730bc8305444c # load another value into integer register
amomax.w x14, x3, (x15) # perform operation

# Testcase cp_rs2 (Test source rs2 = x4)
mv x5, x4 # switch signature pointer register to avoid conflict with test
li x4, 0xb20934d6649e400e # load random value
la x1, scratch # base address
sd x4, 0(x1) # store in memory
li x4, 0x853b218e23acd309 # load another value into integer register
amomax.w x29, x4, (x1) # perform operation

# Testcase cp_rs2 (Test source rs2 = x5)
mv x6, x5 # switch signature pointer register to avoid conflict with test
li x5, 0x2dd74f9f11ae60e0 # load random value
la x2, scratch # base address
sd x5, 0(x2) # store in memory
li x5, 0xd89cc192c74424ce # load another value into integer register
amomax.w x17, x5, (x2) # perform operation

# Testcase cp_rs2 (Test source rs2 = x6)
mv x7, x6 # switch signature pointer register to avoid conflict with test
li x6, 0x12bc9f23f3bacce1 # load random value
la x8, scratch # base address
sd x6, 0(x8) # store in memory
li x6, 0x377c39b7e9ba5f8f # load another value into integer register
amomax.w x11, x6, (x8) # perform operation

# Testcase cp_rs2 (Test source rs2 = x7)
mv x5, x7 # switch signature pointer register to avoid conflict with test
li x7, 0x95c2feb7a109b58f # load random value
la x4, scratch # base address
sd x7, 0(x4) # store in memory
li x7, 0xa61747dc89aa4214 # load another value into integer register
amomax.w x26, x7, (x4) # perform operation

# Testcase cp_rs2 (Test source rs2 = x8)
li x8, 0xc3c02e6b3c1e50dc # load random value
la x26, scratch # base address
sd x8, 0(x26) # store in memory
li x8, 0x98610bed0cccfb47 # load another value into integer register
amomax.w x1, x8, (x26) # perform operation

# Testcase cp_rs2 (Test source rs2 = x9)
li x9, 0x57703b9c10c27770 # load random value
la x10, scratch # base address
sd x9, 0(x10) # store in memory
li x9, 0xdb72215349c26ffa # load another value into integer register
amomax.w x7, x9, (x10) # perform operation

# Testcase cp_rs2 (Test source rs2 = x10)
li x10, 0x87203f970ba10c13 # load random value
la x1, scratch # base address
sd x10, 0(x1) # store in memory
li x10, 0xee57ae3f0929646f # load another value into integer register
amomax.w x6, x10, (x1) # perform operation

# Testcase cp_rs2 (Test source rs2 = x11)
li x11, 0x5c913a9678893388 # load random value
la x3, scratch # base address
sd x11, 0(x3) # store in memory
li x11, 0x17caf163e11ffcf9 # load another value into integer register
amomax.w x31, x11, (x3) # perform operation

# Testcase cp_rs2 (Test source rs2 = x12)
li x12, 0x0fe82759e0d9e7e8 # load random value
la x1, scratch # base address
sd x12, 0(x1) # store in memory
li x12, 0x8637fcc9b72a0a32 # load another value into integer register
amomax.w x7, x12, (x1) # perform operation

# Testcase cp_rs2 (Test source rs2 = x13)
li x13, 0x61203882bd1394f8 # load random value
la x30, scratch # base address
sd x13, 0(x30) # store in memory
li x13, 0xeec9101424d76dbb # load another value into integer register
amomax.w x27, x13, (x30) # perform operation

# Testcase cp_rs2 (Test source rs2 = x14)
li x14, 0xb9e8f25bd837c958 # load random value
la x26, scratch # base address
sd x14, 0(x26) # store in memory
li x14, 0x3d5ab5cedf3c76ac # load another value into integer register
amomax.w x11, x14, (x26) # perform operation

# Testcase cp_rs2 (Test source rs2 = x15)
li x15, 0x5089a9028b4f7a88 # load random value
la x24, scratch # base address
sd x15, 0(x24) # store in memory
li x15, 0xd5e9f6f7b8f6e6a7 # load another value into integer register
amomax.w x9, x15, (x24) # perform operation

# Testcase cp_rs2 (Test source rs2 = x16)
li x16, 0x2558ccf8279e3913 # load random value
la x15, scratch # base address
sd x16, 0(x15) # store in memory
li x16, 0xee3737dc1f103347 # load another value into integer register
amomax.w x12, x16, (x15) # perform operation

# Testcase cp_rs2 (Test source rs2 = x17)
li x17, 0x1fabd83818406281 # load random value
la x11, scratch # base address
sd x17, 0(x11) # store in memory
li x17, 0xdc300226985f5613 # load another value into integer register
amomax.w x19, x17, (x11) # perform operation

# Testcase cp_rs2 (Test source rs2 = x18)
li x18, 0xc0c2a6d750358a53 # load random value
la x1, scratch # base address
sd x18, 0(x1) # store in memory
li x18, 0x9f1986b1ce0d5332 # load another value into integer register
amomax.w x31, x18, (x1) # perform operation

# Testcase cp_rs2 (Test source rs2 = x19)
li x19, 0x7f99014d2c3686a3 # load random value
la x6, scratch # base address
sd x19, 0(x6) # store in memory
li x19, 0xea3831eccf3f2c39 # load another value into integer register
amomax.w x23, x19, (x6) # perform operation

# Testcase cp_rs2 (Test source rs2 = x20)
li x20, 0x7e0fa7a0d62b113d # load random value
la x3, scratch # base address
sd x20, 0(x3) # store in memory
li x20, 0xa5d497790641c987 # load another value into integer register
amomax.w x19, x20, (x3) # perform operation

# Testcase cp_rs2 (Test source rs2 = x21)
li x21, 0x377ee8fca5d4de60 # load random value
la x11, scratch # base address
sd x21, 0(x11) # store in memory
li x21, 0x0a7c4d6e3aefa905 # load another value into integer register
amomax.w x1, x21, (x11) # perform operation

# Testcase cp_rs2 (Test source rs2 = x22)
li x22, 0x09392790fff05509 # load random value
la x18, scratch # base address
sd x22, 0(x18) # store in memory
li x22, 0x25446c16cec498af # load another value into integer register
amomax.w x3, x22, (x18) # perform operation

# Testcase cp_rs2 (Test source rs2 = x23)
li x23, 0xa64fb7ed1998220b # load random value
la x7, scratch # base address
sd x23, 0(x7) # store in memory
li x23, 0xfe470fdf5c66772c # load another value into integer register
amomax.w x19, x23, (x7) # perform operation

# Testcase cp_rs2 (Test source rs2 = x24)
li x24, 0x0d80e737ec90a717 # load random value
la x13, scratch # base address
sd x24, 0(x13) # store in memory
li x24, 0xc32cc64bbefa03bc # load another value into integer register
amomax.w x27, x24, (x13) # perform operation

# Testcase cp_rs2 (Test source rs2 = x25)
li x25, 0x65e164e3b293f81f # load random value
la x11, scratch # base address
sd x25, 0(x11) # store in memory
li x25, 0x0de18d541f3d4cd5 # load another value into integer register
amomax.w x15, x25, (x11) # perform operation

# Testcase cp_rs2 (Test source rs2 = x26)
li x26, 0x8b52f92f121c96ea # load random value
la x22, scratch # base address
sd x26, 0(x22) # store in memory
li x26, 0xdb75b7e0cbfb14ba # load another value into integer register
amomax.w x31, x26, (x22) # perform operation

# Testcase cp_rs2 (Test source rs2 = x27)
li x27, 0xde578caee544284a # load random value
la x26, scratch # base address
sd x27, 0(x26) # store in memory
li x27, 0x788c8fb98a6fc9d3 # load another value into integer register
amomax.w x9, x27, (x26) # perform operation

# Testcase cp_rs2 (Test source rs2 = x28)
li x28, 0xcfd4c2753ee396ee # load random value
la x26, scratch # base address
sd x28, 0(x26) # store in memory
li x28, 0xbb2343e91b73cda8 # load another value into integer register
amomax.w x8, x28, (x26) # perform operation

# Testcase cp_rs2 (Test source rs2 = x29)
li x29, 0x443d40cda10c6cee # load random value
la x21, scratch # base address
sd x29, 0(x21) # store in memory
li x29, 0x089d25f878ddd274 # load another value into integer register
amomax.w x6, x29, (x21) # perform operation

# Testcase cp_rs2 (Test source rs2 = x30)
li x30, 0x3d9e24f9bb3049d5 # load random value
la x18, scratch # base address
sd x30, 0(x18) # store in memory
li x30, 0xcfde522220f8874b # load another value into integer register
amomax.w x7, x30, (x18) # perform operation

# Testcase cp_rs2 (Test source rs2 = x31)
li x31, 0x94670c2a0cf2618e # load random value
la x24, scratch # base address
sd x31, 0(x24) # store in memory
li x31, 0x658927acc624288b # load another value into integer register
amomax.w x20, x31, (x24) # perform operation

# Testcase cp_rd (Test destination rd = x0)
li x4, 0x5de454f9122d3ecb # load random value
la x6, scratch # base address
sd x4, 0(x6) # store in memory
li x4, 0x2cfa56eaff4f70b8 # load another value into integer register
amomax.w x0, x4, (x6) # perform operation

# Testcase cp_rd (Test destination rd = x1)
li x31, 0x446897da22f19198 # load random value
la x7, scratch # base address
sd x31, 0(x7) # store in memory
li x31, 0xf1c1d3c97189fba8 # load another value into integer register
amomax.w x1, x31, (x7) # perform operation

# Testcase cp_rd (Test destination rd = x2)
li x30, 0x512bb59cf907aae1 # load random value
la x7, scratch # base address
sd x30, 0(x7) # store in memory
li x30, 0xe66487fc07837245 # load another value into integer register
amomax.w x2, x30, (x7) # perform operation

# Testcase cp_rd (Test destination rd = x3)
li x22, 0x19890fc94e5de67a # load random value
la x8, scratch # base address
sd x22, 0(x8) # store in memory
li x22, 0x6cd8c70baf58ff5f # load another value into integer register
amomax.w x3, x22, (x8) # perform operation

# Testcase cp_rd (Test destination rd = x4)
li x19, 0x1488ad117b987996 # load random value
la x9, scratch # base address
sd x19, 0(x9) # store in memory
li x19, 0xdc28b63a3d437107 # load another value into integer register
amomax.w x4, x19, (x9) # perform operation

# Testcase cp_rd (Test destination rd = x5)
mv x6, x5 # switch signature pointer register to avoid conflict with test
li x23, 0x43b0fa9d54644a52 # load random value
la x12, scratch # base address
sd x23, 0(x12) # store in memory
li x23, 0x35a49061c96978cc # load another value into integer register
amomax.w x5, x23, (x12) # perform operation

# Testcase cp_rd (Test destination rd = x6)
mv x7, x6 # switch signature pointer register to avoid conflict with test
li x20, 0x92e48761d6aaa2a1 # load random value
la x16, scratch # base address
sd x20, 0(x16) # store in memory
li x20, 0x674640c19863955f # load another value into integer register
amomax.w x6, x20, (x16) # perform operation

# Testcase cp_rd (Test destination rd = x7)
mv x4, x7 # switch signature pointer register to avoid conflict with test
li x28, 0x494ff785a12706a4 # load random value
la x21, scratch # base address
sd x28, 0(x21) # store in memory
li x28, 0x3fb98a450912f6a4 # load another value into integer register
amomax.w x7, x28, (x21) # perform operation

# Testcase cp_rd (Test destination rd = x8)
li x27, 0xb430ad91a6021c7b # load random value
la x8, scratch # base address
sd x27, 0(x8) # store in memory
li x27, 0x2a0e9a7456279e1c # load another value into integer register
amomax.w x8, x27, (x8) # perform operation

# Testcase cp_rd (Test destination rd = x9)
li x2, 0xb5d27b39e6534e0a # load random value
la x24, scratch # base address
sd x2, 0(x24) # store in memory
li x2, 0xec480f86fed42b55 # load another value into integer register
amomax.w x9, x2, (x24) # perform operation

# Testcase cp_rd (Test destination rd = x10)
li x23, 0xda4c52846839e46a # load random value
la x28, scratch # base address
sd x23, 0(x28) # store in memory
li x23, 0x9ecd782d6ce0f2f1 # load another value into integer register
amomax.w x10, x23, (x28) # perform operation

# Testcase cp_rd (Test destination rd = x11)
li x15, 0x3198dfcbf16a3e18 # load random value
la x20, scratch # base address
sd x15, 0(x20) # store in memory
li x15, 0x117d0411b1ddcc4f # load another value into integer register
amomax.w x11, x15, (x20) # perform operation

# Testcase cp_rd (Test destination rd = x12)
li x26, 0x44dabed3f8d33637 # load random value
la x31, scratch # base address
sd x26, 0(x31) # store in memory
li x26, 0xdf83eb4a43f86dbc # load another value into integer register
amomax.w x12, x26, (x31) # perform operation

# Testcase cp_rd (Test destination rd = x13)
li x27, 0xd4a66c4358e196d1 # load random value
la x28, scratch # base address
sd x27, 0(x28) # store in memory
li x27, 0xc7c2ff78a7b995a7 # load another value into integer register
amomax.w x13, x27, (x28) # perform operation

# Testcase cp_rd (Test destination rd = x14)
li x9, 0x1042d31c24a14f67 # load random value
la x11, scratch # base address
sd x9, 0(x11) # store in memory
li x9, 0x8eeebcb2514df09d # load another value into integer register
amomax.w x14, x9, (x11) # perform operation

# Testcase cp_rd (Test destination rd = x15)
li x12, 0xf6073e30bade1b9f # load random value
la x10, scratch # base address
sd x12, 0(x10) # store in memory
li x12, 0xbc3a87fa3bc84084 # load another value into integer register
amomax.w x15, x12, (x10) # perform operation

# Testcase cp_rd (Test destination rd = x16)
li x19, 0x53f29f80ae3f3d87 # load random value
la x16, scratch # base address
sd x19, 0(x16) # store in memory
li x19, 0x23894c36ed7f3378 # load another value into integer register
amomax.w x16, x19, (x16) # perform operation

# Testcase cp_rd (Test destination rd = x17)
li x17, 0x26c6a7e8ee951a09 # load random value
la x5, scratch # base address
sd x17, 0(x5) # store in memory
li x17, 0xf39345cc45c15835 # load another value into integer register
amomax.w x17, x17, (x5) # perform operation

# Testcase cp_rd (Test destination rd = x18)
li x30, 0xac14e248db061b94 # load random value
la x31, scratch # base address
sd x30, 0(x31) # store in memory
li x30, 0x8f77dd75455123c6 # load another value into integer register
amomax.w x18, x30, (x31) # perform operation

# Testcase cp_rd (Test destination rd = x19)
li x29, 0x34a8416abc8fb471 # load random value
la x30, scratch # base address
sd x29, 0(x30) # store in memory
li x29, 0x00c4d5bccfd40a61 # load another value into integer register
amomax.w x19, x29, (x30) # perform operation

# Testcase cp_rd (Test destination rd = x20)
li x3, 0xaa6a731b45dfa7b0 # load random value
la x18, scratch # base address
sd x3, 0(x18) # store in memory
li x3, 0x02bf25dacbd7d3c8 # load another value into integer register
amomax.w x20, x3, (x18) # perform operation

# Testcase cp_rd (Test destination rd = x21)
li x14, 0x0f15f0d5c156e913 # load random value
la x3, scratch # base address
sd x14, 0(x3) # store in memory
li x14, 0xf67df02cb1ff9cd1 # load another value into integer register
amomax.w x21, x14, (x3) # perform operation

# Testcase cp_rd (Test destination rd = x22)
li x21, 0xa51c5f4845be5065 # load random value
la x24, scratch # base address
sd x21, 0(x24) # store in memory
li x21, 0x2b88c7b5db37929b # load another value into integer register
amomax.w x22, x21, (x24) # perform operation

# Testcase cp_rd (Test destination rd = x23)
li x23, 0x806d899cc5bacecd # load random value
la x28, scratch # base address
sd x23, 0(x28) # store in memory
li x23, 0xd434f1aa4381543f # load another value into integer register
amomax.w x23, x23, (x28) # perform operation

# Testcase cp_rd (Test destination rd = x24)
li x15, 0x2cd3957962cb36fa # load random value
la x9, scratch # base address
sd x15, 0(x9) # store in memory
li x15, 0x90ce90d422e069bb # load another value into integer register
amomax.w x24, x15, (x9) # perform operation

# Testcase cp_rd (Test destination rd = x25)
li x19, 0xa0c36d72147c89b8 # load random value
la x7, scratch # base address
sd x19, 0(x7) # store in memory
li x19, 0xa877512d823d29fb # load another value into integer register
amomax.w x25, x19, (x7) # perform operation

# Testcase cp_rd (Test destination rd = x26)
li x29, 0x16863af992592e91 # load random value
la x14, scratch # base address
sd x29, 0(x14) # store in memory
li x29, 0x569b34055785d0fe # load another value into integer register
amomax.w x26, x29, (x14) # perform operation

# Testcase cp_rd (Test destination rd = x27)
li x25, 0xa1c2307a7e531a6d # load random value
la x6, scratch # base address
sd x25, 0(x6) # store in memory
li x25, 0x1d36b51be811701c # load another value into integer register
amomax.w x27, x25, (x6) # perform operation

# Testcase cp_rd (Test destination rd = x28)
li x11, 0x643dc79d2baeaf88 # load random value
la x19, scratch # base address
sd x11, 0(x19) # store in memory
li x11, 0x78eea5916f6d6866 # load another value into integer register
amomax.w x28, x11, (x19) # perform operation

# Testcase cp_rd (Test destination rd = x29)
li x10, 0x016bb92e3302b27d # load random value
la x1, scratch # base address
sd x10, 0(x1) # store in memory
li x10, 0x1a5e144e84166265 # load another value into integer register
amomax.w x29, x10, (x1) # perform operation

# Testcase cp_rd (Test destination rd = x30)
li x31, 0xa5f5afcb864d0366 # load random value
la x8, scratch # base address
sd x31, 0(x8) # store in memory
li x31, 0xfa5fdf27fe7eaa65 # load another value into integer register
amomax.w x30, x31, (x8) # perform operation

# Testcase cp_rd (Test destination rd = x31)
li x25, 0xe5309389ad081818 # load random value
la x18, scratch # base address
sd x25, 0(x18) # store in memory
li x25, 0xaa1da743e2250314 # load another value into integer register
amomax.w x31, x25, (x18) # perform operation

# Testcase cp_rs2_corners (Test source rs2 value = 0x0)
li x23, 0x599ce6952d68ae81 # load random value
la x3, scratch # base address
sd x23, 0(x3) # store in memory
li x23, 0x0000000000000000 # load another value into integer register
amomax.w x1, x23, (x3) # perform operation

# Testcase cp_rs2_corners (Test source rs2 value = 0x1)
li x21, 0xe5684d81dbd49414 # load random value
la x13, scratch # base address
sd x21, 0(x13) # store in memory
li x21, 0x0000000000000001 # load another value into integer register
amomax.w x17, x21, (x13) # perform operation

# Testcase cp_rs2_corners (Test source rs2 value = 0x2)
li x5, 0x9af181a15a86e82c # load random value
la x19, scratch # base address
sd x5, 0(x19) # store in memory
li x5, 0x0000000000000002 # load another value into integer register
amomax.w x1, x5, (x19) # perform operation

# Testcase cp_rs2_corners (Test source rs2 value = 0x8000000000000000)
li x13, 0x855508a7891f936c # load random value
la x6, scratch # base address
sd x13, 0(x6) # store in memory
li x13, 0x8000000000000000 # load another value into integer register
amomax.w x18, x13, (x6) # perform operation

# Testcase cp_rs2_corners (Test source rs2 value = 0x8000000000000001)
li x18, 0x3944ed51ef082d14 # load random value
la x15, scratch # base address
sd x18, 0(x15) # store in memory
li x18, 0x8000000000000001 # load another value into integer register
amomax.w x23, x18, (x15) # perform operation

# Testcase cp_rs2_corners (Test source rs2 value = 0x7fffffffffffffff)
li x8, 0xf11d152bd0c97054 # load random value
la x28, scratch # base address
sd x8, 0(x28) # store in memory
li x8, 0x7fffffffffffffff # load another value into integer register
amomax.w x31, x8, (x28) # perform operation

# Testcase cp_rs2_corners (Test source rs2 value = 0x7ffffffffffffffe)
li x26, 0x9dca848c73a8ae60 # load random value
la x17, scratch # base address
sd x26, 0(x17) # store in memory
li x26, 0x7ffffffffffffffe # load another value into integer register
amomax.w x9, x26, (x17) # perform operation

# Testcase cp_rs2_corners (Test source rs2 value = 0xffffffffffffffff)
li x22, 0xdf0d821a999ee682 # load random value
la x25, scratch # base address
sd x22, 0(x25) # store in memory
li x22, 0xffffffffffffffff # load another value into integer register
amomax.w x24, x22, (x25) # perform operation

# Testcase cp_rs2_corners (Test source rs2 value = 0xfffffffffffffffe)
li x15, 0x81ae939240363120 # load random value
la x26, scratch # base address
sd x15, 0(x26) # store in memory
li x15, 0xfffffffffffffffe # load another value into integer register
amomax.w x22, x15, (x26) # perform operation

# Testcase cp_rs2_corners (Test source rs2 value = 0x5bbc887763ae86f2)
li x27, 0x6141d0e95da0f8f2 # load random value
la x11, scratch # base address
sd x27, 0(x11) # store in memory
li x27, 0x5bbc887763ae86f2 # load another value into integer register
amomax.w x24, x27, (x11) # perform operation

# Testcase cp_rs2_corners (Test source rs2 value = 0xaaaaaaaaaaaaaaaa)
li x5, 0x27b2ae582621d446 # load random value
la x8, scratch # base address
sd x5, 0(x8) # store in memory
li x5, 0xaaaaaaaaaaaaaaaa # load another value into integer register
amomax.w x14, x5, (x8) # perform operation

# Testcase cp_rs2_corners (Test source rs2 value = 0x5555555555555555)
li x15, 0xd6c960bae9c90a35 # load random value
la x31, scratch # base address
sd x15, 0(x31) # store in memory
li x15, 0x5555555555555555 # load another value into integer register
amomax.w x21, x15, (x31) # perform operation

# Testcase cp_rs2_corners (Test source rs2 value = 0xffffffff)
li x29, 0xcd5dc288b1e6d56b # load random value
la x7, scratch # base address
sd x29, 0(x7) # store in memory
li x29, 0x00000000ffffffff # load another value into integer register
amomax.w x2, x29, (x7) # perform operation

# Testcase cp_rs2_corners (Test source rs2 value = 0xfffffffe)
li x12, 0xdefeae8620ac7cbd # load random value
la x29, scratch # base address
sd x12, 0(x29) # store in memory
li x12, 0x00000000fffffffe # load another value into integer register
amomax.w x30, x12, (x29) # perform operation

# Testcase cp_rs2_corners (Test source rs2 value = 0x100000000)
li x16, 0x8cf85b4a3be2256b # load random value
la x18, scratch # base address
sd x16, 0(x18) # store in memory
li x16, 0x0000000100000000 # load another value into integer register
amomax.w x27, x16, (x18) # perform operation

# Testcase cp_rs2_corners (Test source rs2 value = 0x100000001)
li x12, 0x9321bcec6b852e7c # load random value
la x27, scratch # base address
sd x12, 0(x27) # store in memory
li x12, 0x0000000100000001 # load another value into integer register
amomax.w x22, x12, (x27) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x1)
li x1, 0x28c3e90f5625a9d1 # load random value
la x1, scratch # base address
sd x1, 0(x1) # store in memory
amomax.w x30, x1, (x1) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x2)
li x2, 0x2dff897e1380451e # load random value
la x2, scratch # base address
sd x2, 0(x2) # store in memory
amomax.w x2, x2, (x2) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x3)
li x3, 0x1d3c421315b9835a # load random value
la x3, scratch # base address
sd x3, 0(x3) # store in memory
amomax.w x20, x3, (x3) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x4)
mv x5, x4 # switch signature pointer register to avoid conflict with test
li x4, 0xc83f14b6dca60717 # load random value
la x4, scratch # base address
sd x4, 0(x4) # store in memory
amomax.w x11, x4, (x4) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x5)
mv x6, x5 # switch signature pointer register to avoid conflict with test
li x5, 0x9a3eb31a6d2d6d7b # load random value
la x5, scratch # base address
sd x5, 0(x5) # store in memory
amomax.w x12, x5, (x5) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x6)
mv x7, x6 # switch signature pointer register to avoid conflict with test
li x6, 0xd2870739517d7ec2 # load random value
la x6, scratch # base address
sd x6, 0(x6) # store in memory
amomax.w x1, x6, (x6) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x7)
mv x4, x7 # switch signature pointer register to avoid conflict with test
li x7, 0x9bab93b8bb7d12c3 # load random value
la x7, scratch # base address
sd x7, 0(x7) # store in memory
amomax.w x21, x7, (x7) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x8)
li x8, 0xa3babfb16e5fea5d # load random value
la x8, scratch # base address
sd x8, 0(x8) # store in memory
amomax.w x14, x8, (x8) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x9)
li x9, 0x3dd1d7b6169bdc07 # load random value
la x9, scratch # base address
sd x9, 0(x9) # store in memory
amomax.w x6, x9, (x9) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x10)
li x10, 0x2898ab698e51aa85 # load random value
la x10, scratch # base address
sd x10, 0(x10) # store in memory
amomax.w x31, x10, (x10) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x11)
li x11, 0xc20fd87a7fb44119 # load random value
la x11, scratch # base address
sd x11, 0(x11) # store in memory
amomax.w x16, x11, (x11) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x12)
li x12, 0xc066fb3955cd3ece # load random value
la x12, scratch # base address
sd x12, 0(x12) # store in memory
amomax.w x24, x12, (x12) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x13)
li x13, 0x5edb0478b99d5b6e # load random value
la x13, scratch # base address
sd x13, 0(x13) # store in memory
amomax.w x7, x13, (x13) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x14)
li x14, 0x9904e3a86887a859 # load random value
la x14, scratch # base address
sd x14, 0(x14) # store in memory
amomax.w x9, x14, (x14) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x15)
li x15, 0xf8071689bda32ed0 # load random value
la x15, scratch # base address
sd x15, 0(x15) # store in memory
amomax.w x7, x15, (x15) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x16)
li x16, 0x8a1052d93c5f4721 # load random value
la x16, scratch # base address
sd x16, 0(x16) # store in memory
amomax.w x20, x16, (x16) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x17)
li x17, 0xfd444f86736789b9 # load random value
la x17, scratch # base address
sd x17, 0(x17) # store in memory
amomax.w x30, x17, (x17) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x18)
li x18, 0x5f6aa2d2c26a704d # load random value
la x18, scratch # base address
sd x18, 0(x18) # store in memory
amomax.w x27, x18, (x18) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x19)
li x19, 0x1f6d290d45784d76 # load random value
la x19, scratch # base address
sd x19, 0(x19) # store in memory
amomax.w x2, x19, (x19) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x20)
li x20, 0x9d405307bce6e125 # load random value
la x20, scratch # base address
sd x20, 0(x20) # store in memory
amomax.w x24, x20, (x20) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x21)
li x21, 0xece3c268bb9c449c # load random value
la x21, scratch # base address
sd x21, 0(x21) # store in memory
amomax.w x7, x21, (x21) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x22)
li x22, 0xd16fd9a878e40071 # load random value
la x22, scratch # base address
sd x22, 0(x22) # store in memory
amomax.w x29, x22, (x22) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x23)
li x23, 0x31cc0c38326a7ca8 # load random value
la x23, scratch # base address
sd x23, 0(x23) # store in memory
amomax.w x22, x23, (x23) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x24)
li x24, 0x94c75e4a3530511b # load random value
la x24, scratch # base address
sd x24, 0(x24) # store in memory
amomax.w x9, x24, (x24) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x25)
li x25, 0x13a683dda82a0e5d # load random value
la x25, scratch # base address
sd x25, 0(x25) # store in memory
amomax.w x23, x25, (x25) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x26)
li x26, 0xe1444629b3450601 # load random value
la x26, scratch # base address
sd x26, 0(x26) # store in memory
amomax.w x7, x26, (x26) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x27)
li x27, 0xda9c623bee71e887 # load random value
la x27, scratch # base address
sd x27, 0(x27) # store in memory
amomax.w x31, x27, (x27) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x28)
li x28, 0xabf619c2f81be639 # load random value
la x28, scratch # base address
sd x28, 0(x28) # store in memory
amomax.w x2, x28, (x28) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x29)
li x29, 0x08cbf836831b71bc # load random value
la x29, scratch # base address
sd x29, 0(x29) # store in memory
amomax.w x3, x29, (x29) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x30)
li x30, 0xcb9c9eb85ada02fe # load random value
la x30, scratch # base address
sd x30, 0(x30) # store in memory
amomax.w x11, x30, (x30) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x31)
li x31, 0x21ed053972cdb79b # load random value
la x31, scratch # base address
sd x31, 0(x31) # store in memory
amomax.w x23, x31, (x31) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x1)
li x9, 0x170db6a4a241ac03 # load random value
la x1, scratch # base address
sd x9, 0(x1) # store in memory
li x9, 0xe353455953623ea5 # load another value into integer register
amomax.w x1, x9, (x1) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x2)
li x14, 0x665234bf953ca4cc # load random value
la x2, scratch # base address
sd x14, 0(x2) # store in memory
li x14, 0xd89ad42d9bfbdc97 # load another value into integer register
amomax.w x2, x14, (x2) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x3)
li x25, 0x0041754a6cd8c130 # load random value
la x3, scratch # base address
sd x25, 0(x3) # store in memory
li x25, 0x70d51ac46c59d16a # load another value into integer register
amomax.w x3, x25, (x3) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x4)
mv x5, x4 # switch signature pointer register to avoid conflict with test
li x31, 0x66b2d6cafc238594 # load random value
la x4, scratch # base address
sd x31, 0(x4) # store in memory
li x31, 0xe95da14bb221383f # load another value into integer register
amomax.w x4, x31, (x4) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x5)
mv x6, x5 # switch signature pointer register to avoid conflict with test
li x12, 0x215cd5a26b2e7895 # load random value
la x5, scratch # base address
sd x12, 0(x5) # store in memory
li x12, 0xae7952ff019711a1 # load another value into integer register
amomax.w x5, x12, (x5) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x6)
mv x7, x6 # switch signature pointer register to avoid conflict with test
li x1, 0xfecf3832ea4f8871 # load random value
la x6, scratch # base address
sd x1, 0(x6) # store in memory
li x1, 0xf09ab5db6be6060e # load another value into integer register
amomax.w x6, x1, (x6) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x7)
mv x4, x7 # switch signature pointer register to avoid conflict with test
li x27, 0x1ec68e0d1bc98bdf # load random value
la x7, scratch # base address
sd x27, 0(x7) # store in memory
li x27, 0xe8845631b1839a36 # load another value into integer register
amomax.w x7, x27, (x7) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x8)
li x20, 0xfac4d451220e09d5 # load random value
la x8, scratch # base address
sd x20, 0(x8) # store in memory
li x20, 0x778ea71e4ba366d5 # load another value into integer register
amomax.w x8, x20, (x8) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x9)
li x27, 0x947c7893a245dcba # load random value
la x9, scratch # base address
sd x27, 0(x9) # store in memory
li x27, 0x5b92549d3eea0972 # load another value into integer register
amomax.w x9, x27, (x9) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x10)
li x8, 0x5d3f28827a14fb6a # load random value
la x10, scratch # base address
sd x8, 0(x10) # store in memory
li x8, 0x3f95b4ed4b495ecb # load another value into integer register
amomax.w x10, x8, (x10) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x11)
li x17, 0x9d0a0605cfbcd62c # load random value
la x11, scratch # base address
sd x17, 0(x11) # store in memory
li x17, 0x670a638d22b74efa # load another value into integer register
amomax.w x11, x17, (x11) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x12)
li x25, 0xeabd0b0b8507ed35 # load random value
la x12, scratch # base address
sd x25, 0(x12) # store in memory
li x25, 0x21d7d80e7364ebc9 # load another value into integer register
amomax.w x12, x25, (x12) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x13)
li x26, 0x6fcdfb0c5bd9c9cf # load random value
la x13, scratch # base address
sd x26, 0(x13) # store in memory
li x26, 0xe52f8257882893a4 # load another value into integer register
amomax.w x13, x26, (x13) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x14)
li x26, 0x617e9cd867d96f48 # load random value
la x14, scratch # base address
sd x26, 0(x14) # store in memory
li x26, 0x5430811b1ac8c14c # load another value into integer register
amomax.w x14, x26, (x14) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x15)
li x18, 0xa44943ca51c52afa # load random value
la x15, scratch # base address
sd x18, 0(x15) # store in memory
li x18, 0xf9faa8db60e2cb29 # load another value into integer register
amomax.w x15, x18, (x15) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x16)
li x17, 0x6295850ea600f39e # load random value
la x16, scratch # base address
sd x17, 0(x16) # store in memory
li x17, 0xb316877cc661e9ef # load another value into integer register
amomax.w x16, x17, (x16) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x17)
li x7, 0xcaa61d9eb00cd0c8 # load random value
la x17, scratch # base address
sd x7, 0(x17) # store in memory
li x7, 0x93970289bd06d664 # load another value into integer register
amomax.w x17, x7, (x17) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x18)
li x17, 0x255e6f6cd947149d # load random value
la x18, scratch # base address
sd x17, 0(x18) # store in memory
li x17, 0x931a7158437f6e99 # load another value into integer register
amomax.w x18, x17, (x18) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x19)
li x8, 0xbf7db9b73c4902bf # load random value
la x19, scratch # base address
sd x8, 0(x19) # store in memory
li x8, 0x58acab4e5ebe0258 # load another value into integer register
amomax.w x19, x8, (x19) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x20)
li x1, 0xeda468efe4c56e1c # load random value
la x20, scratch # base address
sd x1, 0(x20) # store in memory
li x1, 0x7fd6003cffe0770c # load another value into integer register
amomax.w x20, x1, (x20) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x21)
li x21, 0x1cf6eee0c0a8f809 # load random value
la x21, scratch # base address
sd x21, 0(x21) # store in memory
amomax.w x21, x21, (x21) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x22)
li x9, 0x3f52511592b779cb # load random value
la x22, scratch # base address
sd x9, 0(x22) # store in memory
li x9, 0x67b330ab18fc14b3 # load another value into integer register
amomax.w x22, x9, (x22) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x23)
li x15, 0x6c36453755e46186 # load random value
la x23, scratch # base address
sd x15, 0(x23) # store in memory
li x15, 0xb825b491532b24f3 # load another value into integer register
amomax.w x23, x15, (x23) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x24)
li x25, 0xc2f22fb2334c6186 # load random value
la x24, scratch # base address
sd x25, 0(x24) # store in memory
li x25, 0x265154675891690a # load another value into integer register
amomax.w x24, x25, (x24) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x25)
li x12, 0x63ec0266b6124c5b # load random value
la x25, scratch # base address
sd x12, 0(x25) # store in memory
li x12, 0xf9847a1aa1a13615 # load another value into integer register
amomax.w x25, x12, (x25) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x26)
li x21, 0xf1449c4bc12e62f0 # load random value
la x26, scratch # base address
sd x21, 0(x26) # store in memory
li x21, 0x7070d9ddb11fee75 # load another value into integer register
amomax.w x26, x21, (x26) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x27)
li x7, 0xe55c171e420b12c1 # load random value
la x27, scratch # base address
sd x7, 0(x27) # store in memory
li x7, 0xe8f4499391976270 # load another value into integer register
amomax.w x27, x7, (x27) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x28)
li x15, 0xe6341aea9846191e # load random value
la x28, scratch # base address
sd x15, 0(x28) # store in memory
li x15, 0x070444a00b33506d # load another value into integer register
amomax.w x28, x15, (x28) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x29)
li x15, 0xeb900b5f1b46a310 # load random value
la x29, scratch # base address
sd x15, 0(x29) # store in memory
li x15, 0xa285b46f162cad3f # load another value into integer register
amomax.w x29, x15, (x29) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x30)
li x1, 0x3ef5e9530e83eb96 # load random value
la x30, scratch # base address
sd x1, 0(x30) # store in memory
li x1, 0xae00d98de6f0266a # load another value into integer register
amomax.w x30, x1, (x30) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x31)
li x13, 0xa2a683ed149c4bae # load random value
la x31, scratch # base address
sd x13, 0(x31) # store in memory
li x13, 0x42a1d40394831dbf # load another value into integer register
amomax.w x31, x13, (x31) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x0)
li x0, 0xa18a15a775cae6b1 # load random value
la x10, scratch # base address
sd x0, 0(x10) # store in memory
li x0, 0x05572ce76c6d415c # load another value into integer register
amomax.w x0, x0, (x10) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x1)
li x1, 0x1fdf88ef2bac62c8 # load random value
la x31, scratch # base address
sd x1, 0(x31) # store in memory
li x1, 0xba991a487915a55f # load another value into integer register
amomax.w x1, x1, (x31) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x2)
li x2, 0xa66b78f112e94cae # load random value
la x22, scratch # base address
sd x2, 0(x22) # store in memory
li x2, 0x48fc6806a045c465 # load another value into integer register
amomax.w x2, x2, (x22) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x3)
li x3, 0x536b817d4c4faba4 # load random value
la x22, scratch # base address
sd x3, 0(x22) # store in memory
li x3, 0xb8c277b35dc4475f # load another value into integer register
amomax.w x3, x3, (x22) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x4)
mv x5, x4 # switch signature pointer register to avoid conflict with test
li x4, 0xc367db272192e53b # load random value
la x18, scratch # base address
sd x4, 0(x18) # store in memory
li x4, 0x10e7cb0957563af4 # load another value into integer register
amomax.w x4, x4, (x18) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x5)
mv x6, x5 # switch signature pointer register to avoid conflict with test
li x5, 0x45eb358fd65ce36b # load random value
la x4, scratch # base address
sd x5, 0(x4) # store in memory
li x5, 0xee679146bd4bbd39 # load another value into integer register
amomax.w x5, x5, (x4) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x6)
mv x7, x6 # switch signature pointer register to avoid conflict with test
li x6, 0x8bbfe8522f4a585b # load random value
la x21, scratch # base address
sd x6, 0(x21) # store in memory
li x6, 0xc9fda0352dd404a4 # load another value into integer register
amomax.w x6, x6, (x21) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x7)
mv x4, x7 # switch signature pointer register to avoid conflict with test
li x7, 0x094968b3e7e378c9 # load random value
la x28, scratch # base address
sd x7, 0(x28) # store in memory
li x7, 0xdc1f4207bf266353 # load another value into integer register
amomax.w x7, x7, (x28) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x8)
li x8, 0x9b3bf133b91df96f # load random value
la x8, scratch # base address
sd x8, 0(x8) # store in memory
amomax.w x8, x8, (x8) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x9)
li x9, 0x41b967b987c0efe2 # load random value
la x3, scratch # base address
sd x9, 0(x3) # store in memory
li x9, 0x2632d0cc1311ed13 # load another value into integer register
amomax.w x9, x9, (x3) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x10)
li x10, 0xafb37ac1f9601d42 # load random value
la x15, scratch # base address
sd x10, 0(x15) # store in memory
li x10, 0x7c0b88de7ada9ede # load another value into integer register
amomax.w x10, x10, (x15) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x11)
li x11, 0x7140ff5fe709c3dc # load random value
la x7, scratch # base address
sd x11, 0(x7) # store in memory
li x11, 0xd386e2a1f52a7e16 # load another value into integer register
amomax.w x11, x11, (x7) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x12)
li x12, 0xbf63588f1775bd03 # load random value
la x12, scratch # base address
sd x12, 0(x12) # store in memory
amomax.w x12, x12, (x12) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x13)
li x13, 0xc55d9972b0d81585 # load random value
la x14, scratch # base address
sd x13, 0(x14) # store in memory
li x13, 0x3cd73b3152dc72b3 # load another value into integer register
amomax.w x13, x13, (x14) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x14)
li x14, 0xe3bd08b37400bd6f # load random value
la x16, scratch # base address
sd x14, 0(x16) # store in memory
li x14, 0x09ecb0f6ab70bc15 # load another value into integer register
amomax.w x14, x14, (x16) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x15)
li x15, 0xabd692b3dbe4177f # load random value
la x2, scratch # base address
sd x15, 0(x2) # store in memory
li x15, 0xe4c23e8c71fd613b # load another value into integer register
amomax.w x15, x15, (x2) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x16)
li x16, 0x090ea1272c3f275b # load random value
la x24, scratch # base address
sd x16, 0(x24) # store in memory
li x16, 0x1599e07c285421c9 # load another value into integer register
amomax.w x16, x16, (x24) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x17)
li x17, 0x0e1d3184f19fa6d6 # load random value
la x22, scratch # base address
sd x17, 0(x22) # store in memory
li x17, 0x2ea63939fbeb313e # load another value into integer register
amomax.w x17, x17, (x22) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x18)
li x18, 0xff16629b0d14f0d1 # load random value
la x25, scratch # base address
sd x18, 0(x25) # store in memory
li x18, 0x5e4837bbaf3c1a66 # load another value into integer register
amomax.w x18, x18, (x25) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x19)
li x19, 0x78c9f407f32526ad # load random value
la x21, scratch # base address
sd x19, 0(x21) # store in memory
li x19, 0xf0591e34ea2fab42 # load another value into integer register
amomax.w x19, x19, (x21) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x20)
li x20, 0x37cef7705d67480e # load random value
la x9, scratch # base address
sd x20, 0(x9) # store in memory
li x20, 0x913f3de0aec867b7 # load another value into integer register
amomax.w x20, x20, (x9) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x21)
li x21, 0xb89ab7b575824c76 # load random value
la x3, scratch # base address
sd x21, 0(x3) # store in memory
li x21, 0xdb5bd6eb383d4910 # load another value into integer register
amomax.w x21, x21, (x3) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x22)
li x22, 0xbfe22f4d77cfdf19 # load random value
la x29, scratch # base address
sd x22, 0(x29) # store in memory
li x22, 0xc384231953880841 # load another value into integer register
amomax.w x22, x22, (x29) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x23)
li x23, 0x06ab0d256c6d6bf7 # load random value
la x17, scratch # base address
sd x23, 0(x17) # store in memory
li x23, 0xc60e37caf68a51d7 # load another value into integer register
amomax.w x23, x23, (x17) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x24)
li x24, 0x03c91b849eb5a365 # load random value
la x8, scratch # base address
sd x24, 0(x8) # store in memory
li x24, 0x15badd7929b9e647 # load another value into integer register
amomax.w x24, x24, (x8) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x25)
li x25, 0xddc5efead3e3349d # load random value
la x14, scratch # base address
sd x25, 0(x14) # store in memory
li x25, 0xca9dec0307203b46 # load another value into integer register
amomax.w x25, x25, (x14) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x26)
li x26, 0x0a08ba5feb509c52 # load random value
la x23, scratch # base address
sd x26, 0(x23) # store in memory
li x26, 0xe8821acc6678473a # load another value into integer register
amomax.w x26, x26, (x23) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x27)
li x27, 0x7a5e640346747a97 # load random value
la x16, scratch # base address
sd x27, 0(x16) # store in memory
li x27, 0x7e19d6d0ba3bfd74 # load another value into integer register
amomax.w x27, x27, (x16) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x28)
li x28, 0xc37e9b325e52a542 # load random value
la x14, scratch # base address
sd x28, 0(x14) # store in memory
li x28, 0x78b4aa39788c139c # load another value into integer register
amomax.w x28, x28, (x14) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x29)
li x29, 0x8de0a19d920826fe # load random value
la x30, scratch # base address
sd x29, 0(x30) # store in memory
li x29, 0x18f51beb49157a1e # load another value into integer register
amomax.w x29, x29, (x30) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x30)
li x30, 0x09031119ee13a0b8 # load random value
la x9, scratch # base address
sd x30, 0(x9) # store in memory
li x30, 0xdb3d93477119c743 # load another value into integer register
amomax.w x30, x30, (x9) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x31)
li x31, 0x6dd09196716465a5 # load random value
la x28, scratch # base address
sd x31, 0(x28) # store in memory
li x31, 0x4877660b0a3e5cbb # load another value into integer register
amomax.w x31, x31, (x28) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x1)
li x1, 0xd375ce13273a1025 # load random value
la x1, scratch # base address
sd x1, 0(x1) # store in memory
amomax.w x1, x1, (x1) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x2)
li x2, 0x3796fe5ba149059c # load random value
la x2, scratch # base address
sd x2, 0(x2) # store in memory
amomax.w x2, x2, (x2) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x3)
li x3, 0x5ca1f132fdbcc88c # load random value
la x3, scratch # base address
sd x3, 0(x3) # store in memory
amomax.w x3, x3, (x3) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x4)
mv x5, x4 # switch signature pointer register to avoid conflict with test
li x4, 0x308cff7462ded2e1 # load random value
la x4, scratch # base address
sd x4, 0(x4) # store in memory
amomax.w x4, x4, (x4) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x5)
mv x6, x5 # switch signature pointer register to avoid conflict with test
li x5, 0xf3225fb0b7a8f80b # load random value
la x5, scratch # base address
sd x5, 0(x5) # store in memory
amomax.w x5, x5, (x5) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x6)
mv x7, x6 # switch signature pointer register to avoid conflict with test
li x6, 0xfa43e4e789410105 # load random value
la x6, scratch # base address
sd x6, 0(x6) # store in memory
amomax.w x6, x6, (x6) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x7)
mv x4, x7 # switch signature pointer register to avoid conflict with test
li x7, 0xa224c070039e824b # load random value
la x7, scratch # base address
sd x7, 0(x7) # store in memory
amomax.w x7, x7, (x7) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x8)
li x8, 0x498967ec47c22cc4 # load random value
la x8, scratch # base address
sd x8, 0(x8) # store in memory
amomax.w x8, x8, (x8) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x9)
li x9, 0xeb6414f9847e0073 # load random value
la x9, scratch # base address
sd x9, 0(x9) # store in memory
amomax.w x9, x9, (x9) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x10)
li x10, 0xdf588d3fda9f0a47 # load random value
la x10, scratch # base address
sd x10, 0(x10) # store in memory
amomax.w x10, x10, (x10) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x11)
li x11, 0xaddd9d508b9f1c3a # load random value
la x11, scratch # base address
sd x11, 0(x11) # store in memory
amomax.w x11, x11, (x11) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x12)
li x12, 0x1e0166adb26d5fe8 # load random value
la x12, scratch # base address
sd x12, 0(x12) # store in memory
amomax.w x12, x12, (x12) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x13)
li x13, 0xcb7a67b6e3cf3dba # load random value
la x13, scratch # base address
sd x13, 0(x13) # store in memory
amomax.w x13, x13, (x13) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x14)
li x14, 0x5b892e30101fa424 # load random value
la x14, scratch # base address
sd x14, 0(x14) # store in memory
amomax.w x14, x14, (x14) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x15)
li x15, 0xf0b79829e58e6ff5 # load random value
la x15, scratch # base address
sd x15, 0(x15) # store in memory
amomax.w x15, x15, (x15) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x16)
li x16, 0x2be688eb498a306f # load random value
la x16, scratch # base address
sd x16, 0(x16) # store in memory
amomax.w x16, x16, (x16) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x17)
li x17, 0x372228d779c214f6 # load random value
la x17, scratch # base address
sd x17, 0(x17) # store in memory
amomax.w x17, x17, (x17) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x18)
li x18, 0x48914d084bfe3858 # load random value
la x18, scratch # base address
sd x18, 0(x18) # store in memory
amomax.w x18, x18, (x18) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x19)
li x19, 0x293cfd639e8510bf # load random value
la x19, scratch # base address
sd x19, 0(x19) # store in memory
amomax.w x19, x19, (x19) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x20)
li x20, 0x3ed225cbacd4a5a1 # load random value
la x20, scratch # base address
sd x20, 0(x20) # store in memory
amomax.w x20, x20, (x20) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x21)
li x21, 0x3b7ef651a6d0238d # load random value
la x21, scratch # base address
sd x21, 0(x21) # store in memory
amomax.w x21, x21, (x21) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x22)
li x22, 0xedf850bf1fe97289 # load random value
la x22, scratch # base address
sd x22, 0(x22) # store in memory
amomax.w x22, x22, (x22) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x23)
li x23, 0xf1cf73e31c699565 # load random value
la x23, scratch # base address
sd x23, 0(x23) # store in memory
amomax.w x23, x23, (x23) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x24)
li x24, 0x931e0b6aa7e86154 # load random value
la x24, scratch # base address
sd x24, 0(x24) # store in memory
amomax.w x24, x24, (x24) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x25)
li x25, 0x104c33179f6166d0 # load random value
la x25, scratch # base address
sd x25, 0(x25) # store in memory
amomax.w x25, x25, (x25) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x26)
li x26, 0xa36d2984d2c00d92 # load random value
la x26, scratch # base address
sd x26, 0(x26) # store in memory
amomax.w x26, x26, (x26) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x27)
li x27, 0x3f8827033928d1f4 # load random value
la x27, scratch # base address
sd x27, 0(x27) # store in memory
amomax.w x27, x27, (x27) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x28)
li x28, 0xa3662d18fd2ac876 # load random value
la x28, scratch # base address
sd x28, 0(x28) # store in memory
amomax.w x28, x28, (x28) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x29)
li x29, 0x608ba9e1abb0f086 # load random value
la x29, scratch # base address
sd x29, 0(x29) # store in memory
amomax.w x29, x29, (x29) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x30)
li x30, 0x804f3210c38ab963 # load random value
la x30, scratch # base address
sd x30, 0(x30) # store in memory
amomax.w x30, x30, (x30) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x31)
li x31, 0xcfea640f63398530 # load random value
la x31, scratch # base address
sd x31, 0(x31) # store in memory
amomax.w x31, x31, (x31) # perform operation

# Testcase cp_gpr/fpr_hazard nohaz test
la x20, scratch
add x24, x19, x14 # perform first operation
amomax.w x5, x12, (x20) # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard nohaz test
la x1, scratch
add x5, x3, x12 # perform first operation
amomax.w x21, x27, (x1) # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard nohaz test
la x19, scratch
add x1, x2, x25 # perform first operation
amomax.w x29, x31, (x19) # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard raw test
la x23, scratch
add x9, x9, x0 # perform first operation
amomax.w x5, x9, (x23) # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard raw test
la x7, scratch
add x5, x5, x0 # perform first operation
amomax.w x16, x26, (x7) # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard raw test
la x5, scratch
add x9, x9, x0 # perform first operation
amomax.w x8, x13, (x5) # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard waw test
la x23, scratch
add x8, x12, x5 # perform first operation
amomax.w x8, x31, (x23) # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard waw test
la x1, scratch
add x5, x17, x14 # perform first operation
amomax.w x5, x26, (x1) # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard waw test
la x13, scratch
add x12, x14, x18 # perform first operation
amomax.w x12, x8, (x13) # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard war test
la x24, scratch
add x9, x11, x20 # perform first operation
amomax.w x11, x13, (x24) # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard war test
la x31, scratch
add x26, x1, x25 # perform first operation
amomax.w x25, x18, (x31) # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard war test
la x1, scratch
add x27, x8, x21 # perform first operation
amomax.w x24, x30, (x1) # perform second (triggering) operation

#.EQU SIGSIZE,0


// ******************
// Tests from: WALLY-COV-amoxor.d.S
// ******************


# initialize signature pointer
la x4, begin_signature

    
# Testcase cp_rs1 (Test source rs1 = x1)
li x9, 0x65efddd46c19833d # load random value
la x1, scratch # base address
sd x9, 0(x1) # store in memory
li x9, 0xd3c365534679e76a # load another value into integer register
amoxor.d x10, x9, (x1) # perform operation

# Testcase cp_rs1 (Test source rs1 = x2)
li x10, 0x63e120d6d9b7c9db # load random value
la x2, scratch # base address
sd x10, 0(x2) # store in memory
li x10, 0x8a170d9a5e318b24 # load another value into integer register
amoxor.d x21, x10, (x2) # perform operation

# Testcase cp_rs1 (Test source rs1 = x3)
li x21, 0x95941163526ca522 # load random value
la x3, scratch # base address
sd x21, 0(x3) # store in memory
li x21, 0x2fffca7ce4e23cef # load another value into integer register
amoxor.d x1, x21, (x3) # perform operation

# Testcase cp_rs1 (Test source rs1 = x4)
mv x5, x4 # switch signature pointer register to avoid conflict with test
li x29, 0x11f0136e637fa472 # load random value
la x4, scratch # base address
sd x29, 0(x4) # store in memory
li x29, 0xd45bb64d67fff408 # load another value into integer register
amoxor.d x18, x29, (x4) # perform operation

# Testcase cp_rs1 (Test source rs1 = x5)
mv x6, x5 # switch signature pointer register to avoid conflict with test
li x31, 0x0a52cc9f5ff1e83d # load random value
la x5, scratch # base address
sd x31, 0(x5) # store in memory
li x31, 0xba0b970cd80d87e7 # load another value into integer register
amoxor.d x27, x31, (x5) # perform operation

# Testcase cp_rs1 (Test source rs1 = x6)
mv x7, x6 # switch signature pointer register to avoid conflict with test
li x4, 0x8f435da2572cc303 # load random value
la x6, scratch # base address
sd x4, 0(x6) # store in memory
li x4, 0xc6bc182dcf810a2b # load another value into integer register
amoxor.d x8, x4, (x6) # perform operation

# Testcase cp_rs1 (Test source rs1 = x7)
mv x4, x7 # switch signature pointer register to avoid conflict with test
li x2, 0x19f39d89704e0150 # load random value
la x7, scratch # base address
sd x2, 0(x7) # store in memory
li x2, 0x0f1571f0f0f7fede # load another value into integer register
amoxor.d x15, x2, (x7) # perform operation

# Testcase cp_rs1 (Test source rs1 = x8)
li x1, 0xe337885c982daf22 # load random value
la x8, scratch # base address
sd x1, 0(x8) # store in memory
li x1, 0x216a93e1e193c87a # load another value into integer register
amoxor.d x13, x1, (x8) # perform operation

# Testcase cp_rs1 (Test source rs1 = x9)
li x25, 0x419bfcbde8762f37 # load random value
la x9, scratch # base address
sd x25, 0(x9) # store in memory
li x25, 0x02ee687b9f4b1233 # load another value into integer register
amoxor.d x31, x25, (x9) # perform operation

# Testcase cp_rs1 (Test source rs1 = x10)
li x7, 0x3a89c81edda28209 # load random value
la x10, scratch # base address
sd x7, 0(x10) # store in memory
li x7, 0xb646439d92d71fd0 # load another value into integer register
amoxor.d x9, x7, (x10) # perform operation

# Testcase cp_rs1 (Test source rs1 = x11)
li x29, 0x3eb2bb182fb64c37 # load random value
la x11, scratch # base address
sd x29, 0(x11) # store in memory
li x29, 0x13cca3bf91f6d93f # load another value into integer register
amoxor.d x10, x29, (x11) # perform operation

# Testcase cp_rs1 (Test source rs1 = x12)
li x21, 0x3f0c6eab03e9b7ac # load random value
la x12, scratch # base address
sd x21, 0(x12) # store in memory
li x21, 0x80c853f580d764e6 # load another value into integer register
amoxor.d x7, x21, (x12) # perform operation

# Testcase cp_rs1 (Test source rs1 = x13)
li x12, 0x69acdc143b4e4826 # load random value
la x13, scratch # base address
sd x12, 0(x13) # store in memory
li x12, 0x2db54ad1efe6f1e2 # load another value into integer register
amoxor.d x8, x12, (x13) # perform operation

# Testcase cp_rs1 (Test source rs1 = x14)
li x24, 0xe42efc51df536263 # load random value
la x14, scratch # base address
sd x24, 0(x14) # store in memory
li x24, 0xe9f60c94ff907924 # load another value into integer register
amoxor.d x16, x24, (x14) # perform operation

# Testcase cp_rs1 (Test source rs1 = x15)
li x18, 0x8fecf9131d4afbd5 # load random value
la x15, scratch # base address
sd x18, 0(x15) # store in memory
li x18, 0x94294145e3d390b9 # load another value into integer register
amoxor.d x10, x18, (x15) # perform operation

# Testcase cp_rs1 (Test source rs1 = x16)
li x2, 0x5cacfb0182f4463a # load random value
la x16, scratch # base address
sd x2, 0(x16) # store in memory
li x2, 0x98c42bf674dd140e # load another value into integer register
amoxor.d x15, x2, (x16) # perform operation

# Testcase cp_rs1 (Test source rs1 = x17)
li x27, 0x07a6b8a7796b501a # load random value
la x17, scratch # base address
sd x27, 0(x17) # store in memory
li x27, 0x66001b67509ed358 # load another value into integer register
amoxor.d x11, x27, (x17) # perform operation

# Testcase cp_rs1 (Test source rs1 = x18)
li x9, 0x626927266710d6ee # load random value
la x18, scratch # base address
sd x9, 0(x18) # store in memory
li x9, 0xb49ffe94ecc8234f # load another value into integer register
amoxor.d x14, x9, (x18) # perform operation

# Testcase cp_rs1 (Test source rs1 = x19)
li x10, 0x39992e706519c023 # load random value
la x19, scratch # base address
sd x10, 0(x19) # store in memory
li x10, 0x3d513e4d32291106 # load another value into integer register
amoxor.d x20, x10, (x19) # perform operation

# Testcase cp_rs1 (Test source rs1 = x20)
li x25, 0xc5c2435fdd9315a8 # load random value
la x20, scratch # base address
sd x25, 0(x20) # store in memory
li x25, 0x852279bb84a3a00a # load another value into integer register
amoxor.d x17, x25, (x20) # perform operation

# Testcase cp_rs1 (Test source rs1 = x21)
li x19, 0x1fcfc8ab8a683614 # load random value
la x21, scratch # base address
sd x19, 0(x21) # store in memory
li x19, 0x1db20eec6742b979 # load another value into integer register
amoxor.d x24, x19, (x21) # perform operation

# Testcase cp_rs1 (Test source rs1 = x22)
li x17, 0x23361720f9bcce9e # load random value
la x22, scratch # base address
sd x17, 0(x22) # store in memory
li x17, 0xa135e3f82f7390c3 # load another value into integer register
amoxor.d x3, x17, (x22) # perform operation

# Testcase cp_rs1 (Test source rs1 = x23)
li x14, 0x1342b523c0adf859 # load random value
la x23, scratch # base address
sd x14, 0(x23) # store in memory
li x14, 0x4352dbd8c58f8feb # load another value into integer register
amoxor.d x27, x14, (x23) # perform operation

# Testcase cp_rs1 (Test source rs1 = x24)
li x30, 0xe91bbfd45c1df4a3 # load random value
la x24, scratch # base address
sd x30, 0(x24) # store in memory
li x30, 0x96df95acf9eb23fc # load another value into integer register
amoxor.d x18, x30, (x24) # perform operation

# Testcase cp_rs1 (Test source rs1 = x25)
li x2, 0xedb11942d7d023f1 # load random value
la x25, scratch # base address
sd x2, 0(x25) # store in memory
li x2, 0xe7346cebf9991360 # load another value into integer register
amoxor.d x14, x2, (x25) # perform operation

# Testcase cp_rs1 (Test source rs1 = x26)
li x29, 0xd589284987ed52fc # load random value
la x26, scratch # base address
sd x29, 0(x26) # store in memory
li x29, 0xb6c9003c91ea515a # load another value into integer register
amoxor.d x28, x29, (x26) # perform operation

# Testcase cp_rs1 (Test source rs1 = x27)
li x9, 0xd022d060fb045e71 # load random value
la x27, scratch # base address
sd x9, 0(x27) # store in memory
li x9, 0xbdd1165fe4d6fe3d # load another value into integer register
amoxor.d x17, x9, (x27) # perform operation

# Testcase cp_rs1 (Test source rs1 = x28)
li x29, 0xf3abeea08b817579 # load random value
la x28, scratch # base address
sd x29, 0(x28) # store in memory
li x29, 0x30481d0e2e42538a # load another value into integer register
amoxor.d x12, x29, (x28) # perform operation

# Testcase cp_rs1 (Test source rs1 = x29)
li x12, 0xcf2cf8bbc8dce4f6 # load random value
la x29, scratch # base address
sd x12, 0(x29) # store in memory
li x12, 0x725d105759e5774c # load another value into integer register
amoxor.d x7, x12, (x29) # perform operation

# Testcase cp_rs1 (Test source rs1 = x30)
li x27, 0x3cdd9b6f6107864b # load random value
la x30, scratch # base address
sd x27, 0(x30) # store in memory
li x27, 0x6cb04f8176e0bedf # load another value into integer register
amoxor.d x15, x27, (x30) # perform operation

# Testcase cp_rs1 (Test source rs1 = x31)
li x7, 0xf662c7aa207b0973 # load random value
la x31, scratch # base address
sd x7, 0(x31) # store in memory
li x7, 0x742e739932f33318 # load another value into integer register
amoxor.d x9, x7, (x31) # perform operation

# Testcase cp_rs2 (Test source rs2 = x0)
li x0, 0x8ffc48d87891c084 # load random value
la x11, scratch # base address
sd x0, 0(x11) # store in memory
li x0, 0x23ce979995f8fdde # load another value into integer register
amoxor.d x23, x0, (x11) # perform operation

# Testcase cp_rs2 (Test source rs2 = x1)
li x1, 0x1a86381c6e948f5b # load random value
la x29, scratch # base address
sd x1, 0(x29) # store in memory
li x1, 0x5b203c60eea912ff # load another value into integer register
amoxor.d x22, x1, (x29) # perform operation

# Testcase cp_rs2 (Test source rs2 = x2)
li x2, 0x72928177a0854229 # load random value
la x23, scratch # base address
sd x2, 0(x23) # store in memory
li x2, 0x44ee14ca090d908e # load another value into integer register
amoxor.d x20, x2, (x23) # perform operation

# Testcase cp_rs2 (Test source rs2 = x3)
li x3, 0x17a1735b853eb1d6 # load random value
la x8, scratch # base address
sd x3, 0(x8) # store in memory
li x3, 0x07e8a8efba35316a # load another value into integer register
amoxor.d x26, x3, (x8) # perform operation

# Testcase cp_rs2 (Test source rs2 = x4)
mv x5, x4 # switch signature pointer register to avoid conflict with test
li x4, 0xe81a2a4c0e5ebaf1 # load random value
la x29, scratch # base address
sd x4, 0(x29) # store in memory
li x4, 0x93f430d73d1e0d61 # load another value into integer register
amoxor.d x26, x4, (x29) # perform operation

# Testcase cp_rs2 (Test source rs2 = x5)
mv x6, x5 # switch signature pointer register to avoid conflict with test
li x5, 0x00b7e4abcc74d1b3 # load random value
la x29, scratch # base address
sd x5, 0(x29) # store in memory
li x5, 0xa89b817facd555fa # load another value into integer register
amoxor.d x20, x5, (x29) # perform operation

# Testcase cp_rs2 (Test source rs2 = x6)
mv x4, x6 # switch signature pointer register to avoid conflict with test
li x6, 0x7795f9b6653c6ae8 # load random value
la x31, scratch # base address
sd x6, 0(x31) # store in memory
li x6, 0x57890c013071415c # load another value into integer register
amoxor.d x7, x6, (x31) # perform operation

# Testcase cp_rs2 (Test source rs2 = x7)
li x7, 0x484f688141787595 # load random value
la x6, scratch # base address
sd x7, 0(x6) # store in memory
li x7, 0xe967b9855b5d51f4 # load another value into integer register
amoxor.d x3, x7, (x6) # perform operation

# Testcase cp_rs2 (Test source rs2 = x8)
li x8, 0xacd8969084800e43 # load random value
la x30, scratch # base address
sd x8, 0(x30) # store in memory
li x8, 0x6b5e0be308960dbb # load another value into integer register
amoxor.d x29, x8, (x30) # perform operation

# Testcase cp_rs2 (Test source rs2 = x9)
li x9, 0x370f49fe02f33b79 # load random value
la x10, scratch # base address
sd x9, 0(x10) # store in memory
li x9, 0x416ad123d274d34a # load another value into integer register
amoxor.d x17, x9, (x10) # perform operation

# Testcase cp_rs2 (Test source rs2 = x10)
li x10, 0xfbbf7910687da869 # load random value
la x18, scratch # base address
sd x10, 0(x18) # store in memory
li x10, 0x9cec4a8243aec484 # load another value into integer register
amoxor.d x25, x10, (x18) # perform operation

# Testcase cp_rs2 (Test source rs2 = x11)
li x11, 0x15f119588bd46e7b # load random value
la x8, scratch # base address
sd x11, 0(x8) # store in memory
li x11, 0x98fc9e5d1a44b5d6 # load another value into integer register
amoxor.d x13, x11, (x8) # perform operation

# Testcase cp_rs2 (Test source rs2 = x12)
li x12, 0xb72f76beffa18e47 # load random value
la x6, scratch # base address
sd x12, 0(x6) # store in memory
li x12, 0xeb2a1d6a4f0c53b0 # load another value into integer register
amoxor.d x8, x12, (x6) # perform operation

# Testcase cp_rs2 (Test source rs2 = x13)
li x13, 0xa6ac626826c0d62c # load random value
la x14, scratch # base address
sd x13, 0(x14) # store in memory
li x13, 0xeb8b8ffcd5df2577 # load another value into integer register
amoxor.d x26, x13, (x14) # perform operation

# Testcase cp_rs2 (Test source rs2 = x14)
li x14, 0xa4190970f70f20a4 # load random value
la x1, scratch # base address
sd x14, 0(x1) # store in memory
li x14, 0x52e7efbbfef3188a # load another value into integer register
amoxor.d x15, x14, (x1) # perform operation

# Testcase cp_rs2 (Test source rs2 = x15)
li x15, 0x1be2123459c3a4ec # load random value
la x2, scratch # base address
sd x15, 0(x2) # store in memory
li x15, 0x3f302c1d9af8f63e # load another value into integer register
amoxor.d x13, x15, (x2) # perform operation

# Testcase cp_rs2 (Test source rs2 = x16)
li x16, 0xaf724bbbff720c60 # load random value
la x12, scratch # base address
sd x16, 0(x12) # store in memory
li x16, 0xae936d987097fa73 # load another value into integer register
amoxor.d x11, x16, (x12) # perform operation

# Testcase cp_rs2 (Test source rs2 = x17)
li x17, 0xdbf452096ee57bad # load random value
la x18, scratch # base address
sd x17, 0(x18) # store in memory
li x17, 0x441764f1cd055c13 # load another value into integer register
amoxor.d x29, x17, (x18) # perform operation

# Testcase cp_rs2 (Test source rs2 = x18)
li x18, 0xf7a60afe7157f490 # load random value
la x16, scratch # base address
sd x18, 0(x16) # store in memory
li x18, 0x46482a5505823cec # load another value into integer register
amoxor.d x19, x18, (x16) # perform operation

# Testcase cp_rs2 (Test source rs2 = x19)
li x19, 0xf4b34feca89f5519 # load random value
la x17, scratch # base address
sd x19, 0(x17) # store in memory
li x19, 0xbda09816a1a47c60 # load another value into integer register
amoxor.d x20, x19, (x17) # perform operation

# Testcase cp_rs2 (Test source rs2 = x20)
li x20, 0x8bfa05dae6fad40e # load random value
la x26, scratch # base address
sd x20, 0(x26) # store in memory
li x20, 0x371695cd6baff5be # load another value into integer register
amoxor.d x22, x20, (x26) # perform operation

# Testcase cp_rs2 (Test source rs2 = x21)
li x21, 0x81ffff5af9119cb9 # load random value
la x29, scratch # base address
sd x21, 0(x29) # store in memory
li x21, 0x128143c60d22d075 # load another value into integer register
amoxor.d x8, x21, (x29) # perform operation

# Testcase cp_rs2 (Test source rs2 = x22)
li x22, 0xf4f97db706360b44 # load random value
la x23, scratch # base address
sd x22, 0(x23) # store in memory
li x22, 0x3293572b347ad8ac # load another value into integer register
amoxor.d x3, x22, (x23) # perform operation

# Testcase cp_rs2 (Test source rs2 = x23)
li x23, 0x3968849362993ec4 # load random value
la x6, scratch # base address
sd x23, 0(x6) # store in memory
li x23, 0xb2b61eb727858b30 # load another value into integer register
amoxor.d x7, x23, (x6) # perform operation

# Testcase cp_rs2 (Test source rs2 = x24)
li x24, 0x6ab9ac9afc88c56f # load random value
la x22, scratch # base address
sd x24, 0(x22) # store in memory
li x24, 0xcbacf1563ca11943 # load another value into integer register
amoxor.d x1, x24, (x22) # perform operation

# Testcase cp_rs2 (Test source rs2 = x25)
li x25, 0x6a90d1df190d1902 # load random value
la x20, scratch # base address
sd x25, 0(x20) # store in memory
li x25, 0x275e87783eea496e # load another value into integer register
amoxor.d x6, x25, (x20) # perform operation

# Testcase cp_rs2 (Test source rs2 = x26)
li x26, 0x0238d3c9fce8e86e # load random value
la x10, scratch # base address
sd x26, 0(x10) # store in memory
li x26, 0x1f95d40562288f78 # load another value into integer register
amoxor.d x6, x26, (x10) # perform operation

# Testcase cp_rs2 (Test source rs2 = x27)
li x27, 0xca73d2d979e37f2b # load random value
la x7, scratch # base address
sd x27, 0(x7) # store in memory
li x27, 0x73b1cb0705d656d5 # load another value into integer register
amoxor.d x22, x27, (x7) # perform operation

# Testcase cp_rs2 (Test source rs2 = x28)
li x28, 0x20a40f4187bd7889 # load random value
la x30, scratch # base address
sd x28, 0(x30) # store in memory
li x28, 0x2546e6b60b7e7fbe # load another value into integer register
amoxor.d x18, x28, (x30) # perform operation

# Testcase cp_rs2 (Test source rs2 = x29)
li x29, 0xf32c791d7180b3d9 # load random value
la x8, scratch # base address
sd x29, 0(x8) # store in memory
li x29, 0xeeb761caaa225aaf # load another value into integer register
amoxor.d x9, x29, (x8) # perform operation

# Testcase cp_rs2 (Test source rs2 = x30)
li x30, 0x87efae5e664bf65c # load random value
la x16, scratch # base address
sd x30, 0(x16) # store in memory
li x30, 0x48796ae763b0ba99 # load another value into integer register
amoxor.d x26, x30, (x16) # perform operation

# Testcase cp_rs2 (Test source rs2 = x31)
li x31, 0xadfd9537faa25a6f # load random value
la x29, scratch # base address
sd x31, 0(x29) # store in memory
li x31, 0x5cbfcf295f36c518 # load another value into integer register
amoxor.d x15, x31, (x29) # perform operation

# Testcase cp_rd (Test destination rd = x0)
li x14, 0x1642b4764047cd11 # load random value
la x7, scratch # base address
sd x14, 0(x7) # store in memory
li x14, 0x1b8d4dbc4ec4badc # load another value into integer register
amoxor.d x0, x14, (x7) # perform operation

# Testcase cp_rd (Test destination rd = x1)
li x15, 0x645104b243a7206f # load random value
la x5, scratch # base address
sd x15, 0(x5) # store in memory
li x15, 0xfefed9c09553cfff # load another value into integer register
amoxor.d x1, x15, (x5) # perform operation

# Testcase cp_rd (Test destination rd = x2)
li x8, 0xc61fdca40ebb4032 # load random value
la x9, scratch # base address
sd x8, 0(x9) # store in memory
li x8, 0xe0ecd8b80aa27193 # load another value into integer register
amoxor.d x2, x8, (x9) # perform operation

# Testcase cp_rd (Test destination rd = x3)
li x27, 0xcafae085f0ceeceb # load random value
la x24, scratch # base address
sd x27, 0(x24) # store in memory
li x27, 0x44ac031e3e2c6687 # load another value into integer register
amoxor.d x3, x27, (x24) # perform operation

# Testcase cp_rd (Test destination rd = x4)
mv x6, x4 # switch signature pointer register to avoid conflict with test
li x5, 0xa4057b09d830d24f # load random value
la x8, scratch # base address
sd x5, 0(x8) # store in memory
li x5, 0xa9e7e54d6f33a3ef # load another value into integer register
amoxor.d x4, x5, (x8) # perform operation

# Testcase cp_rd (Test destination rd = x5)
li x22, 0xcc7f671d8593135f # load random value
la x31, scratch # base address
sd x22, 0(x31) # store in memory
li x22, 0xc14a3b9d77a33f67 # load another value into integer register
amoxor.d x5, x22, (x31) # perform operation

# Testcase cp_rd (Test destination rd = x6)
mv x4, x6 # switch signature pointer register to avoid conflict with test
li x7, 0x3db1bae62a93200c # load random value
la x21, scratch # base address
sd x7, 0(x21) # store in memory
li x7, 0x6c0166bef4d86966 # load another value into integer register
amoxor.d x6, x7, (x21) # perform operation

# Testcase cp_rd (Test destination rd = x7)
li x20, 0xce233a3a7db565fd # load random value
la x27, scratch # base address
sd x20, 0(x27) # store in memory
li x20, 0x9b59fab2ecefcc71 # load another value into integer register
amoxor.d x7, x20, (x27) # perform operation

# Testcase cp_rd (Test destination rd = x8)
li x3, 0xd369562dcf05f970 # load random value
la x25, scratch # base address
sd x3, 0(x25) # store in memory
li x3, 0xc98a1d95d6dc6feb # load another value into integer register
amoxor.d x8, x3, (x25) # perform operation

# Testcase cp_rd (Test destination rd = x9)
li x7, 0xddc77b3bc60b2371 # load random value
la x15, scratch # base address
sd x7, 0(x15) # store in memory
li x7, 0xd8bba891f4f3a16c # load another value into integer register
amoxor.d x9, x7, (x15) # perform operation

# Testcase cp_rd (Test destination rd = x10)
li x25, 0x937c1c14d980d2b3 # load random value
la x27, scratch # base address
sd x25, 0(x27) # store in memory
li x25, 0xcbd689a69cda5264 # load another value into integer register
amoxor.d x10, x25, (x27) # perform operation

# Testcase cp_rd (Test destination rd = x11)
li x3, 0x194952be091c3959 # load random value
la x1, scratch # base address
sd x3, 0(x1) # store in memory
li x3, 0xa4a1b0b5bc6ea432 # load another value into integer register
amoxor.d x11, x3, (x1) # perform operation

# Testcase cp_rd (Test destination rd = x12)
li x11, 0xc113f86700bdafcb # load random value
la x26, scratch # base address
sd x11, 0(x26) # store in memory
li x11, 0x5edbb270a23398bf # load another value into integer register
amoxor.d x12, x11, (x26) # perform operation

# Testcase cp_rd (Test destination rd = x13)
li x3, 0xab8d5345c9d7979d # load random value
la x18, scratch # base address
sd x3, 0(x18) # store in memory
li x3, 0xbe6afc66bb18f957 # load another value into integer register
amoxor.d x13, x3, (x18) # perform operation

# Testcase cp_rd (Test destination rd = x14)
li x29, 0x4e68aeb24fabc14a # load random value
la x2, scratch # base address
sd x29, 0(x2) # store in memory
li x29, 0x0fc622d8e6979f3d # load another value into integer register
amoxor.d x14, x29, (x2) # perform operation

# Testcase cp_rd (Test destination rd = x15)
li x11, 0xe441bc0c51a41a68 # load random value
la x14, scratch # base address
sd x11, 0(x14) # store in memory
li x11, 0xe90690eea798c986 # load another value into integer register
amoxor.d x15, x11, (x14) # perform operation

# Testcase cp_rd (Test destination rd = x16)
li x2, 0x9ab26fa6610ec5b7 # load random value
la x16, scratch # base address
sd x2, 0(x16) # store in memory
li x2, 0xcea8b96fa92019e4 # load another value into integer register
amoxor.d x16, x2, (x16) # perform operation

# Testcase cp_rd (Test destination rd = x17)
li x15, 0xdda043f0edc5a185 # load random value
la x14, scratch # base address
sd x15, 0(x14) # store in memory
li x15, 0xfc6e94e75e537a6c # load another value into integer register
amoxor.d x17, x15, (x14) # perform operation

# Testcase cp_rd (Test destination rd = x18)
li x31, 0x63121d41f035bf53 # load random value
la x5, scratch # base address
sd x31, 0(x5) # store in memory
li x31, 0xb56629852282b23a # load another value into integer register
amoxor.d x18, x31, (x5) # perform operation

# Testcase cp_rd (Test destination rd = x19)
li x6, 0xb5dfe3c4c7fc7f40 # load random value
la x20, scratch # base address
sd x6, 0(x20) # store in memory
li x6, 0xaa177def29bad5f5 # load another value into integer register
amoxor.d x19, x6, (x20) # perform operation

# Testcase cp_rd (Test destination rd = x20)
li x16, 0x3feb0ccd6252f231 # load random value
la x27, scratch # base address
sd x16, 0(x27) # store in memory
li x16, 0x054fa5a74fdacf4c # load another value into integer register
amoxor.d x20, x16, (x27) # perform operation

# Testcase cp_rd (Test destination rd = x21)
li x19, 0x05dd19579ec46914 # load random value
la x2, scratch # base address
sd x19, 0(x2) # store in memory
li x19, 0x53f020c81fb7c558 # load another value into integer register
amoxor.d x21, x19, (x2) # perform operation

# Testcase cp_rd (Test destination rd = x22)
li x2, 0x497d9714d45881b0 # load random value
la x11, scratch # base address
sd x2, 0(x11) # store in memory
li x2, 0x1baa082fd9624dda # load another value into integer register
amoxor.d x22, x2, (x11) # perform operation

# Testcase cp_rd (Test destination rd = x23)
li x3, 0x5cdd2952541b567a # load random value
la x31, scratch # base address
sd x3, 0(x31) # store in memory
li x3, 0x54e2e292993ad505 # load another value into integer register
amoxor.d x23, x3, (x31) # perform operation

# Testcase cp_rd (Test destination rd = x24)
li x13, 0x4d4df789eb0fba80 # load random value
la x28, scratch # base address
sd x13, 0(x28) # store in memory
li x13, 0x64f2cfdd8399ea20 # load another value into integer register
amoxor.d x24, x13, (x28) # perform operation

# Testcase cp_rd (Test destination rd = x25)
li x20, 0xe6bdf0cd6150b3e2 # load random value
la x5, scratch # base address
sd x20, 0(x5) # store in memory
li x20, 0x4fcf847ba0d01831 # load another value into integer register
amoxor.d x25, x20, (x5) # perform operation

# Testcase cp_rd (Test destination rd = x26)
li x28, 0x40d9b0aa49561117 # load random value
la x5, scratch # base address
sd x28, 0(x5) # store in memory
li x28, 0x12d9335b4ae874e9 # load another value into integer register
amoxor.d x26, x28, (x5) # perform operation

# Testcase cp_rd (Test destination rd = x27)
li x25, 0x0990691766488057 # load random value
la x9, scratch # base address
sd x25, 0(x9) # store in memory
li x25, 0x505e2a418a5b7c8c # load another value into integer register
amoxor.d x27, x25, (x9) # perform operation

# Testcase cp_rd (Test destination rd = x28)
li x22, 0xc79b23fb12c08f73 # load random value
la x3, scratch # base address
sd x22, 0(x3) # store in memory
li x22, 0xa6fbdbc4b80302c6 # load another value into integer register
amoxor.d x28, x22, (x3) # perform operation

# Testcase cp_rd (Test destination rd = x29)
li x23, 0x7512a9a9ac384b97 # load random value
la x3, scratch # base address
sd x23, 0(x3) # store in memory
li x23, 0xf37a57a6bcbfd061 # load another value into integer register
amoxor.d x29, x23, (x3) # perform operation

# Testcase cp_rd (Test destination rd = x30)
li x16, 0xfd2089175f066bf8 # load random value
la x22, scratch # base address
sd x16, 0(x22) # store in memory
li x16, 0x51d7d16137ef46eb # load another value into integer register
amoxor.d x30, x16, (x22) # perform operation

# Testcase cp_rd (Test destination rd = x31)
li x8, 0xa487e72668cd68cb # load random value
la x13, scratch # base address
sd x8, 0(x13) # store in memory
li x8, 0xe5b3d192e1f2c587 # load another value into integer register
amoxor.d x31, x8, (x13) # perform operation

# Testcase cp_rs2_corners (Test source rs2 value = 0x0)
li x22, 0x5e609fc30557c0f1 # load random value
la x19, scratch # base address
sd x22, 0(x19) # store in memory
li x22, 0x0000000000000000 # load another value into integer register
amoxor.d x31, x22, (x19) # perform operation

# Testcase cp_rs2_corners (Test source rs2 value = 0x1)
li x19, 0xcfe50a5618b6fb8b # load random value
la x17, scratch # base address
sd x19, 0(x17) # store in memory
li x19, 0x0000000000000001 # load another value into integer register
amoxor.d x9, x19, (x17) # perform operation

# Testcase cp_rs2_corners (Test source rs2 value = 0x2)
li x28, 0x5c6b6264abc093ef # load random value
la x9, scratch # base address
sd x28, 0(x9) # store in memory
li x28, 0x0000000000000002 # load another value into integer register
amoxor.d x11, x28, (x9) # perform operation

# Testcase cp_rs2_corners (Test source rs2 value = 0x8000000000000000)
li x16, 0x9267fc591d296f0a # load random value
la x14, scratch # base address
sd x16, 0(x14) # store in memory
li x16, 0x8000000000000000 # load another value into integer register
amoxor.d x23, x16, (x14) # perform operation

# Testcase cp_rs2_corners (Test source rs2 value = 0x8000000000000001)
li x9, 0x658c4a04431f511b # load random value
la x31, scratch # base address
sd x9, 0(x31) # store in memory
li x9, 0x8000000000000001 # load another value into integer register
amoxor.d x11, x9, (x31) # perform operation

# Testcase cp_rs2_corners (Test source rs2 value = 0x7fffffffffffffff)
li x22, 0x9c01dc331585fbcd # load random value
la x13, scratch # base address
sd x22, 0(x13) # store in memory
li x22, 0x7fffffffffffffff # load another value into integer register
amoxor.d x29, x22, (x13) # perform operation

# Testcase cp_rs2_corners (Test source rs2 value = 0x7ffffffffffffffe)
li x7, 0x56128832520aa6f0 # load random value
la x9, scratch # base address
sd x7, 0(x9) # store in memory
li x7, 0x7ffffffffffffffe # load another value into integer register
amoxor.d x3, x7, (x9) # perform operation

# Testcase cp_rs2_corners (Test source rs2 value = 0xffffffffffffffff)
li x8, 0x4f95b62b0192e2b7 # load random value
la x29, scratch # base address
sd x8, 0(x29) # store in memory
li x8, 0xffffffffffffffff # load another value into integer register
amoxor.d x13, x8, (x29) # perform operation

# Testcase cp_rs2_corners (Test source rs2 value = 0xfffffffffffffffe)
li x23, 0x0ab38bee22c723cc # load random value
la x26, scratch # base address
sd x23, 0(x26) # store in memory
li x23, 0xfffffffffffffffe # load another value into integer register
amoxor.d x28, x23, (x26) # perform operation

# Testcase cp_rs2_corners (Test source rs2 value = 0x5bbc887763ae86f2)
li x19, 0x065de0369e4717c1 # load random value
la x8, scratch # base address
sd x19, 0(x8) # store in memory
li x19, 0x5bbc887763ae86f2 # load another value into integer register
amoxor.d x20, x19, (x8) # perform operation

# Testcase cp_rs2_corners (Test source rs2 value = 0xaaaaaaaaaaaaaaaa)
li x28, 0xb6080b94a0caacbc # load random value
la x24, scratch # base address
sd x28, 0(x24) # store in memory
li x28, 0xaaaaaaaaaaaaaaaa # load another value into integer register
amoxor.d x15, x28, (x24) # perform operation

# Testcase cp_rs2_corners (Test source rs2 value = 0x5555555555555555)
li x26, 0xe400e3e8862a4651 # load random value
la x8, scratch # base address
sd x26, 0(x8) # store in memory
li x26, 0x5555555555555555 # load another value into integer register
amoxor.d x9, x26, (x8) # perform operation

# Testcase cp_rs2_corners (Test source rs2 value = 0xffffffff)
li x29, 0x49bb74d634893823 # load random value
la x23, scratch # base address
sd x29, 0(x23) # store in memory
li x29, 0x00000000ffffffff # load another value into integer register
amoxor.d x19, x29, (x23) # perform operation

# Testcase cp_rs2_corners (Test source rs2 value = 0xfffffffe)
li x5, 0x73a529fd9ec95685 # load random value
la x30, scratch # base address
sd x5, 0(x30) # store in memory
li x5, 0x00000000fffffffe # load another value into integer register
amoxor.d x8, x5, (x30) # perform operation

# Testcase cp_rs2_corners (Test source rs2 value = 0x100000000)
li x15, 0xdaf496eb16cef3d1 # load random value
la x21, scratch # base address
sd x15, 0(x21) # store in memory
li x15, 0x0000000100000000 # load another value into integer register
amoxor.d x12, x15, (x21) # perform operation

# Testcase cp_rs2_corners (Test source rs2 value = 0x100000001)
li x14, 0x6bc4ce8a439fb73e # load random value
la x10, scratch # base address
sd x14, 0(x10) # store in memory
li x14, 0x0000000100000001 # load another value into integer register
amoxor.d x3, x14, (x10) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x1)
li x1, 0xba86b813e9924a04 # load random value
la x1, scratch # base address
sd x1, 0(x1) # store in memory
amoxor.d x24, x1, (x1) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x2)
li x2, 0x79e21f38fbd5dc96 # load random value
la x2, scratch # base address
sd x2, 0(x2) # store in memory
amoxor.d x2, x2, (x2) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x3)
li x3, 0xc8c1017857312481 # load random value
la x3, scratch # base address
sd x3, 0(x3) # store in memory
amoxor.d x2, x3, (x3) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x4)
mv x5, x4 # switch signature pointer register to avoid conflict with test
li x4, 0xfd03226f37f85ba8 # load random value
la x4, scratch # base address
sd x4, 0(x4) # store in memory
amoxor.d x2, x4, (x4) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x5)
mv x6, x5 # switch signature pointer register to avoid conflict with test
li x5, 0x9952605f7a46f98a # load random value
la x5, scratch # base address
sd x5, 0(x5) # store in memory
amoxor.d x22, x5, (x5) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x6)
mv x7, x6 # switch signature pointer register to avoid conflict with test
li x6, 0x92cbaf10bd65b6a8 # load random value
la x6, scratch # base address
sd x6, 0(x6) # store in memory
amoxor.d x13, x6, (x6) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x7)
mv x4, x7 # switch signature pointer register to avoid conflict with test
li x7, 0x542def3b4f7a5f3b # load random value
la x7, scratch # base address
sd x7, 0(x7) # store in memory
amoxor.d x30, x7, (x7) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x8)
li x8, 0x6215ecf4323c803b # load random value
la x8, scratch # base address
sd x8, 0(x8) # store in memory
amoxor.d x12, x8, (x8) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x9)
li x9, 0x1252b625349d4eae # load random value
la x9, scratch # base address
sd x9, 0(x9) # store in memory
amoxor.d x5, x9, (x9) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x10)
li x10, 0x8eb2199a50319fd7 # load random value
la x10, scratch # base address
sd x10, 0(x10) # store in memory
amoxor.d x3, x10, (x10) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x11)
li x11, 0xcb1903d69d5ff835 # load random value
la x11, scratch # base address
sd x11, 0(x11) # store in memory
amoxor.d x16, x11, (x11) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x12)
li x12, 0x234d34020dd0b2dd # load random value
la x12, scratch # base address
sd x12, 0(x12) # store in memory
amoxor.d x5, x12, (x12) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x13)
li x13, 0x7759b88e12678293 # load random value
la x13, scratch # base address
sd x13, 0(x13) # store in memory
amoxor.d x12, x13, (x13) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x14)
li x14, 0x3fc1dcc283f231d8 # load random value
la x14, scratch # base address
sd x14, 0(x14) # store in memory
amoxor.d x18, x14, (x14) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x15)
li x15, 0x23ed7376994376d0 # load random value
la x15, scratch # base address
sd x15, 0(x15) # store in memory
amoxor.d x23, x15, (x15) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x16)
li x16, 0x6dd9cb18ff79d7fc # load random value
la x16, scratch # base address
sd x16, 0(x16) # store in memory
amoxor.d x7, x16, (x16) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x17)
li x17, 0xaedbc9e71013f856 # load random value
la x17, scratch # base address
sd x17, 0(x17) # store in memory
amoxor.d x3, x17, (x17) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x18)
li x18, 0x9476af4b85adfe94 # load random value
la x18, scratch # base address
sd x18, 0(x18) # store in memory
amoxor.d x7, x18, (x18) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x19)
li x19, 0xb248e6fcbbfa6739 # load random value
la x19, scratch # base address
sd x19, 0(x19) # store in memory
amoxor.d x22, x19, (x19) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x20)
li x20, 0x4408f20d80a29287 # load random value
la x20, scratch # base address
sd x20, 0(x20) # store in memory
amoxor.d x16, x20, (x20) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x21)
li x21, 0x5e613ac35d47522e # load random value
la x21, scratch # base address
sd x21, 0(x21) # store in memory
amoxor.d x3, x21, (x21) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x22)
li x22, 0xca8d49b66995c59a # load random value
la x22, scratch # base address
sd x22, 0(x22) # store in memory
amoxor.d x28, x22, (x22) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x23)
li x23, 0x916104f2f24b1f4e # load random value
la x23, scratch # base address
sd x23, 0(x23) # store in memory
amoxor.d x1, x23, (x23) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x24)
li x24, 0x5cfea93c77fff76b # load random value
la x24, scratch # base address
sd x24, 0(x24) # store in memory
amoxor.d x13, x24, (x24) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x25)
li x25, 0xd49a08072b719e84 # load random value
la x25, scratch # base address
sd x25, 0(x25) # store in memory
amoxor.d x24, x25, (x25) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x26)
li x26, 0x385e8b4732f51a1f # load random value
la x26, scratch # base address
sd x26, 0(x26) # store in memory
amoxor.d x8, x26, (x26) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x27)
li x27, 0x94fd3530586eb926 # load random value
la x27, scratch # base address
sd x27, 0(x27) # store in memory
amoxor.d x19, x27, (x27) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x28)
li x28, 0xd5db02aa0e8004e8 # load random value
la x28, scratch # base address
sd x28, 0(x28) # store in memory
amoxor.d x3, x28, (x28) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x29)
li x29, 0xc6d29bbc839f317b # load random value
la x29, scratch # base address
sd x29, 0(x29) # store in memory
amoxor.d x16, x29, (x29) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x30)
li x30, 0x3aed4ed39dd8d887 # load random value
la x30, scratch # base address
sd x30, 0(x30) # store in memory
amoxor.d x17, x30, (x30) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x31)
li x31, 0x6083c082fa3b1c42 # load random value
la x31, scratch # base address
sd x31, 0(x31) # store in memory
amoxor.d x20, x31, (x31) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x1)
li x24, 0xd5af725b5b99daf8 # load random value
la x1, scratch # base address
sd x24, 0(x1) # store in memory
li x24, 0x1420ef8374ddf8bd # load another value into integer register
amoxor.d x1, x24, (x1) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x2)
li x24, 0xf71054bf1d3dcbdf # load random value
la x2, scratch # base address
sd x24, 0(x2) # store in memory
li x24, 0x153c090790f358f6 # load another value into integer register
amoxor.d x2, x24, (x2) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x3)
li x3, 0x38db02f676c24910 # load random value
la x3, scratch # base address
sd x3, 0(x3) # store in memory
amoxor.d x3, x3, (x3) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x4)
mv x5, x4 # switch signature pointer register to avoid conflict with test
li x26, 0xc5eda117c1803940 # load random value
la x4, scratch # base address
sd x26, 0(x4) # store in memory
li x26, 0x9dcc1e68372c328b # load another value into integer register
amoxor.d x4, x26, (x4) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x5)
mv x6, x5 # switch signature pointer register to avoid conflict with test
li x20, 0x9c6aa5349bfaf625 # load random value
la x5, scratch # base address
sd x20, 0(x5) # store in memory
li x20, 0x988ee0906e96549a # load another value into integer register
amoxor.d x5, x20, (x5) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x6)
mv x7, x6 # switch signature pointer register to avoid conflict with test
li x9, 0xdc24279e3faef9ef # load random value
la x6, scratch # base address
sd x9, 0(x6) # store in memory
li x9, 0x4e85c8a783878d30 # load another value into integer register
amoxor.d x6, x9, (x6) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x7)
mv x4, x7 # switch signature pointer register to avoid conflict with test
li x20, 0xf71b92cd3eeae853 # load random value
la x7, scratch # base address
sd x20, 0(x7) # store in memory
li x20, 0xe7fa3f3cb514de7b # load another value into integer register
amoxor.d x7, x20, (x7) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x8)
li x13, 0x83c72e0ca19b8f4b # load random value
la x8, scratch # base address
sd x13, 0(x8) # store in memory
li x13, 0x4bb266aa47dab009 # load another value into integer register
amoxor.d x8, x13, (x8) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x9)
li x23, 0xa2b597a002aa1c9d # load random value
la x9, scratch # base address
sd x23, 0(x9) # store in memory
li x23, 0x8a9e8e9cf1fac0ad # load another value into integer register
amoxor.d x9, x23, (x9) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x10)
li x16, 0x830fa54a1faac06e # load random value
la x10, scratch # base address
sd x16, 0(x10) # store in memory
li x16, 0x6a9e1af995df583a # load another value into integer register
amoxor.d x10, x16, (x10) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x11)
li x31, 0xa4b4e60241def3bd # load random value
la x11, scratch # base address
sd x31, 0(x11) # store in memory
li x31, 0xb07d7b9d06a8e5a6 # load another value into integer register
amoxor.d x11, x31, (x11) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x12)
li x9, 0x8162250940a7505e # load random value
la x12, scratch # base address
sd x9, 0(x12) # store in memory
li x9, 0x47b1e4014e13956b # load another value into integer register
amoxor.d x12, x9, (x12) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x13)
li x9, 0x4b8f6266749b80a5 # load random value
la x13, scratch # base address
sd x9, 0(x13) # store in memory
li x9, 0x3b63b9c15afe57f7 # load another value into integer register
amoxor.d x13, x9, (x13) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x14)
li x19, 0x13407402c78d5598 # load random value
la x14, scratch # base address
sd x19, 0(x14) # store in memory
li x19, 0x0c86a85bdf70cca4 # load another value into integer register
amoxor.d x14, x19, (x14) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x15)
li x22, 0xf8b5e17e3b15bd93 # load random value
la x15, scratch # base address
sd x22, 0(x15) # store in memory
li x22, 0x7da987d8a5f0b955 # load another value into integer register
amoxor.d x15, x22, (x15) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x16)
li x16, 0x11a26665d04f709c # load random value
la x16, scratch # base address
sd x16, 0(x16) # store in memory
amoxor.d x16, x16, (x16) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x17)
li x26, 0x6f154686d548742c # load random value
la x17, scratch # base address
sd x26, 0(x17) # store in memory
li x26, 0x244b43b7671a9530 # load another value into integer register
amoxor.d x17, x26, (x17) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x18)
li x8, 0x0297d20763256ffc # load random value
la x18, scratch # base address
sd x8, 0(x18) # store in memory
li x8, 0x04a90394b56abf9e # load another value into integer register
amoxor.d x18, x8, (x18) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x19)
li x30, 0xe3f1b3bb4fdf1fd5 # load random value
la x19, scratch # base address
sd x30, 0(x19) # store in memory
li x30, 0x6e52176e897f3872 # load another value into integer register
amoxor.d x19, x30, (x19) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x20)
li x12, 0x766742eb8d206636 # load random value
la x20, scratch # base address
sd x12, 0(x20) # store in memory
li x12, 0x9036027cd4fb0129 # load another value into integer register
amoxor.d x20, x12, (x20) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x21)
li x9, 0x7a1c18238b4aacaf # load random value
la x21, scratch # base address
sd x9, 0(x21) # store in memory
li x9, 0xf09de17bbf04b796 # load another value into integer register
amoxor.d x21, x9, (x21) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x22)
li x31, 0x98ef105c85682d4b # load random value
la x22, scratch # base address
sd x31, 0(x22) # store in memory
li x31, 0xfe24aff15c313599 # load another value into integer register
amoxor.d x22, x31, (x22) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x23)
li x12, 0xde317df84f0cf5bd # load random value
la x23, scratch # base address
sd x12, 0(x23) # store in memory
li x12, 0x947cafb80d4b75ae # load another value into integer register
amoxor.d x23, x12, (x23) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x24)
li x25, 0xd99d9d1caad1a25a # load random value
la x24, scratch # base address
sd x25, 0(x24) # store in memory
li x25, 0x3cd1d7edfe627f51 # load another value into integer register
amoxor.d x24, x25, (x24) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x25)
li x23, 0xfe926e7e88923e7d # load random value
la x25, scratch # base address
sd x23, 0(x25) # store in memory
li x23, 0xdeb8ddb893824061 # load another value into integer register
amoxor.d x25, x23, (x25) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x26)
li x30, 0x355de525a4a5703b # load random value
la x26, scratch # base address
sd x30, 0(x26) # store in memory
li x30, 0x470e1d64ce4a0f79 # load another value into integer register
amoxor.d x26, x30, (x26) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x27)
li x10, 0x1fb3fe401f6fdbb6 # load random value
la x27, scratch # base address
sd x10, 0(x27) # store in memory
li x10, 0x4be648c5f7392e69 # load another value into integer register
amoxor.d x27, x10, (x27) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x28)
li x17, 0x3714100bf818efdc # load random value
la x28, scratch # base address
sd x17, 0(x28) # store in memory
li x17, 0x3fee6a4611348b19 # load another value into integer register
amoxor.d x28, x17, (x28) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x29)
li x25, 0xeaa1a5116fb2f41e # load random value
la x29, scratch # base address
sd x25, 0(x29) # store in memory
li x25, 0x1d510bd9990724a6 # load another value into integer register
amoxor.d x29, x25, (x29) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x30)
li x13, 0x10fbf7588c2e3035 # load random value
la x30, scratch # base address
sd x13, 0(x30) # store in memory
li x13, 0x3da2e95146ebc4f0 # load another value into integer register
amoxor.d x30, x13, (x30) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x31)
li x15, 0x141a50c7bfc16e04 # load random value
la x31, scratch # base address
sd x15, 0(x31) # store in memory
li x15, 0xb062e291394ff85d # load another value into integer register
amoxor.d x31, x15, (x31) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x0)
li x0, 0x845c0c1edc27eaeb # load random value
la x22, scratch # base address
sd x0, 0(x22) # store in memory
li x0, 0xf7c7fc1b43dc396c # load another value into integer register
amoxor.d x0, x0, (x22) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x1)
li x1, 0x5058c8730c1a3aef # load random value
la x28, scratch # base address
sd x1, 0(x28) # store in memory
li x1, 0x279028d0aa1bc27b # load another value into integer register
amoxor.d x1, x1, (x28) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x2)
li x2, 0x45cf148f8306216f # load random value
la x31, scratch # base address
sd x2, 0(x31) # store in memory
li x2, 0x93cfaa7ce29b6e8a # load another value into integer register
amoxor.d x2, x2, (x31) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x3)
li x3, 0xbeadf55692829abb # load random value
la x23, scratch # base address
sd x3, 0(x23) # store in memory
li x3, 0x3a8d7bdd0fe1b64d # load another value into integer register
amoxor.d x3, x3, (x23) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x4)
mv x5, x4 # switch signature pointer register to avoid conflict with test
li x4, 0x9cbc1933119326f5 # load random value
la x21, scratch # base address
sd x4, 0(x21) # store in memory
li x4, 0x9e23720825f4168c # load another value into integer register
amoxor.d x4, x4, (x21) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x5)
mv x6, x5 # switch signature pointer register to avoid conflict with test
li x5, 0xb3e74683ceb2ec27 # load random value
la x18, scratch # base address
sd x5, 0(x18) # store in memory
li x5, 0x6501ccbc84bdd49d # load another value into integer register
amoxor.d x5, x5, (x18) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x6)
mv x4, x6 # switch signature pointer register to avoid conflict with test
li x6, 0xb92c6faebabd61b0 # load random value
la x7, scratch # base address
sd x6, 0(x7) # store in memory
li x6, 0x35d20961a4e82f65 # load another value into integer register
amoxor.d x6, x6, (x7) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x7)
li x7, 0xa38b0e14a3706deb # load random value
la x16, scratch # base address
sd x7, 0(x16) # store in memory
li x7, 0xeac9d7d8f796cd39 # load another value into integer register
amoxor.d x7, x7, (x16) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x8)
li x8, 0xcaca3af11b8da1c9 # load random value
la x30, scratch # base address
sd x8, 0(x30) # store in memory
li x8, 0xa00797a0fc2ad283 # load another value into integer register
amoxor.d x8, x8, (x30) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x9)
li x9, 0x8ec7fd7222542ebb # load random value
la x23, scratch # base address
sd x9, 0(x23) # store in memory
li x9, 0x3befeb92c2f17314 # load another value into integer register
amoxor.d x9, x9, (x23) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x10)
li x10, 0x63f251ad8cf79f40 # load random value
la x31, scratch # base address
sd x10, 0(x31) # store in memory
li x10, 0x28f49c7b3a1f313d # load another value into integer register
amoxor.d x10, x10, (x31) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x11)
li x11, 0xe6c302613dc779ee # load random value
la x24, scratch # base address
sd x11, 0(x24) # store in memory
li x11, 0x4bcd442f56bbb6a7 # load another value into integer register
amoxor.d x11, x11, (x24) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x12)
li x12, 0x21d507e61b66e8a9 # load random value
la x10, scratch # base address
sd x12, 0(x10) # store in memory
li x12, 0x78c50b3994d5e5af # load another value into integer register
amoxor.d x12, x12, (x10) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x13)
li x13, 0x5af8d4072a9f96e9 # load random value
la x25, scratch # base address
sd x13, 0(x25) # store in memory
li x13, 0xccb2371c8c5bfeab # load another value into integer register
amoxor.d x13, x13, (x25) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x14)
li x14, 0x13b6f07c8079f7e3 # load random value
la x2, scratch # base address
sd x14, 0(x2) # store in memory
li x14, 0xfec7624f18c8fa35 # load another value into integer register
amoxor.d x14, x14, (x2) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x15)
li x15, 0x6b781254774fa40c # load random value
la x26, scratch # base address
sd x15, 0(x26) # store in memory
li x15, 0xfcc733445f00a849 # load another value into integer register
amoxor.d x15, x15, (x26) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x16)
li x16, 0xe6ac47904b586f54 # load random value
la x16, scratch # base address
sd x16, 0(x16) # store in memory
amoxor.d x16, x16, (x16) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x17)
li x17, 0x2cc2d20d4ac62acb # load random value
la x11, scratch # base address
sd x17, 0(x11) # store in memory
li x17, 0x4da33fb5967e772d # load another value into integer register
amoxor.d x17, x17, (x11) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x18)
li x18, 0x967c0bf78f5fd9ec # load random value
la x21, scratch # base address
sd x18, 0(x21) # store in memory
li x18, 0xa54d122389c43fac # load another value into integer register
amoxor.d x18, x18, (x21) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x19)
li x19, 0x41103d84576396af # load random value
la x23, scratch # base address
sd x19, 0(x23) # store in memory
li x19, 0xb4d122d72ac8e4c1 # load another value into integer register
amoxor.d x19, x19, (x23) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x20)
li x20, 0xa0ad928710cbf342 # load random value
la x16, scratch # base address
sd x20, 0(x16) # store in memory
li x20, 0xb0ba881a34ad93d4 # load another value into integer register
amoxor.d x20, x20, (x16) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x21)
li x21, 0xc6ac8624d30a7c63 # load random value
la x20, scratch # base address
sd x21, 0(x20) # store in memory
li x21, 0x4fd6d21e9be0445d # load another value into integer register
amoxor.d x21, x21, (x20) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x22)
li x22, 0x95829ff685c1875f # load random value
la x18, scratch # base address
sd x22, 0(x18) # store in memory
li x22, 0x85182f8ae435c96b # load another value into integer register
amoxor.d x22, x22, (x18) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x23)
li x23, 0x362f89b440aa99d8 # load random value
la x20, scratch # base address
sd x23, 0(x20) # store in memory
li x23, 0xfe5cf951c58cd746 # load another value into integer register
amoxor.d x23, x23, (x20) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x24)
li x24, 0x78ae352f74c0cba8 # load random value
la x17, scratch # base address
sd x24, 0(x17) # store in memory
li x24, 0x1c434f56eb46e8dc # load another value into integer register
amoxor.d x24, x24, (x17) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x25)
li x25, 0xc646cf8f342672e6 # load random value
la x3, scratch # base address
sd x25, 0(x3) # store in memory
li x25, 0x9f4e0e681a0a8d87 # load another value into integer register
amoxor.d x25, x25, (x3) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x26)
li x26, 0xa3563bffea558af6 # load random value
la x13, scratch # base address
sd x26, 0(x13) # store in memory
li x26, 0x4629eea126f8c36e # load another value into integer register
amoxor.d x26, x26, (x13) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x27)
li x27, 0x3dccf886ce2b7ff2 # load random value
la x8, scratch # base address
sd x27, 0(x8) # store in memory
li x27, 0x5bbc2949830d762e # load another value into integer register
amoxor.d x27, x27, (x8) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x28)
li x28, 0xd69b49af28e543dc # load random value
la x22, scratch # base address
sd x28, 0(x22) # store in memory
li x28, 0xcb4f88e0f085b4e5 # load another value into integer register
amoxor.d x28, x28, (x22) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x29)
li x29, 0x9c51e3dd239e6630 # load random value
la x24, scratch # base address
sd x29, 0(x24) # store in memory
li x29, 0xb46f3f68c78281a1 # load another value into integer register
amoxor.d x29, x29, (x24) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x30)
li x30, 0xac7ed72c01417568 # load random value
la x1, scratch # base address
sd x30, 0(x1) # store in memory
li x30, 0xc7bf9f07248ef082 # load another value into integer register
amoxor.d x30, x30, (x1) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x31)
li x31, 0xce91c7ca140e0f7e # load random value
la x26, scratch # base address
sd x31, 0(x26) # store in memory
li x31, 0xe313f6ca120045cf # load another value into integer register
amoxor.d x31, x31, (x26) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x1)
li x1, 0x3037f8cba927da60 # load random value
la x1, scratch # base address
sd x1, 0(x1) # store in memory
amoxor.d x1, x1, (x1) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x2)
li x2, 0x1ca1ea82086de2c8 # load random value
la x2, scratch # base address
sd x2, 0(x2) # store in memory
amoxor.d x2, x2, (x2) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x3)
li x3, 0x86dee85e7bd9bf9c # load random value
la x3, scratch # base address
sd x3, 0(x3) # store in memory
amoxor.d x3, x3, (x3) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x4)
mv x5, x4 # switch signature pointer register to avoid conflict with test
li x4, 0x72023fd79a7458c5 # load random value
la x4, scratch # base address
sd x4, 0(x4) # store in memory
amoxor.d x4, x4, (x4) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x5)
mv x6, x5 # switch signature pointer register to avoid conflict with test
li x5, 0x10cade3257a547b9 # load random value
la x5, scratch # base address
sd x5, 0(x5) # store in memory
amoxor.d x5, x5, (x5) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x6)
mv x7, x6 # switch signature pointer register to avoid conflict with test
li x6, 0xb236ff1f62d6af14 # load random value
la x6, scratch # base address
sd x6, 0(x6) # store in memory
amoxor.d x6, x6, (x6) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x7)
mv x4, x7 # switch signature pointer register to avoid conflict with test
li x7, 0x41b24b61fe118b43 # load random value
la x7, scratch # base address
sd x7, 0(x7) # store in memory
amoxor.d x7, x7, (x7) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x8)
li x8, 0xbed9536179db97ef # load random value
la x8, scratch # base address
sd x8, 0(x8) # store in memory
amoxor.d x8, x8, (x8) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x9)
li x9, 0x5fdb5dbb02f76f71 # load random value
la x9, scratch # base address
sd x9, 0(x9) # store in memory
amoxor.d x9, x9, (x9) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x10)
li x10, 0xddfbda233d714b8b # load random value
la x10, scratch # base address
sd x10, 0(x10) # store in memory
amoxor.d x10, x10, (x10) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x11)
li x11, 0xcb28ac51aa42b945 # load random value
la x11, scratch # base address
sd x11, 0(x11) # store in memory
amoxor.d x11, x11, (x11) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x12)
li x12, 0xe1e021f98e0dff1d # load random value
la x12, scratch # base address
sd x12, 0(x12) # store in memory
amoxor.d x12, x12, (x12) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x13)
li x13, 0x1534bd6b156b5422 # load random value
la x13, scratch # base address
sd x13, 0(x13) # store in memory
amoxor.d x13, x13, (x13) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x14)
li x14, 0x6304e1538e3f94dd # load random value
la x14, scratch # base address
sd x14, 0(x14) # store in memory
amoxor.d x14, x14, (x14) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x15)
li x15, 0xe48c28097817ebc1 # load random value
la x15, scratch # base address
sd x15, 0(x15) # store in memory
amoxor.d x15, x15, (x15) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x16)
li x16, 0xeed8bbc8f39311bf # load random value
la x16, scratch # base address
sd x16, 0(x16) # store in memory
amoxor.d x16, x16, (x16) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x17)
li x17, 0x7b25b3eb31b6b2e7 # load random value
la x17, scratch # base address
sd x17, 0(x17) # store in memory
amoxor.d x17, x17, (x17) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x18)
li x18, 0x26a6de9e814f23d2 # load random value
la x18, scratch # base address
sd x18, 0(x18) # store in memory
amoxor.d x18, x18, (x18) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x19)
li x19, 0xe51a099020a1b71b # load random value
la x19, scratch # base address
sd x19, 0(x19) # store in memory
amoxor.d x19, x19, (x19) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x20)
li x20, 0x05548cc9b1d1681d # load random value
la x20, scratch # base address
sd x20, 0(x20) # store in memory
amoxor.d x20, x20, (x20) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x21)
li x21, 0x7048dca02a7759a9 # load random value
la x21, scratch # base address
sd x21, 0(x21) # store in memory
amoxor.d x21, x21, (x21) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x22)
li x22, 0x341fb7410045c834 # load random value
la x22, scratch # base address
sd x22, 0(x22) # store in memory
amoxor.d x22, x22, (x22) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x23)
li x23, 0x4618f83422c59be4 # load random value
la x23, scratch # base address
sd x23, 0(x23) # store in memory
amoxor.d x23, x23, (x23) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x24)
li x24, 0xa4c82347b18b6a15 # load random value
la x24, scratch # base address
sd x24, 0(x24) # store in memory
amoxor.d x24, x24, (x24) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x25)
li x25, 0xa6ca6aaa391e592b # load random value
la x25, scratch # base address
sd x25, 0(x25) # store in memory
amoxor.d x25, x25, (x25) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x26)
li x26, 0x63ccdc9ff957a4e4 # load random value
la x26, scratch # base address
sd x26, 0(x26) # store in memory
amoxor.d x26, x26, (x26) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x27)
li x27, 0xed09c83aa0b7ef01 # load random value
la x27, scratch # base address
sd x27, 0(x27) # store in memory
amoxor.d x27, x27, (x27) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x28)
li x28, 0x5910cf75cd297063 # load random value
la x28, scratch # base address
sd x28, 0(x28) # store in memory
amoxor.d x28, x28, (x28) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x29)
li x29, 0xf16cef359aba2cdd # load random value
la x29, scratch # base address
sd x29, 0(x29) # store in memory
amoxor.d x29, x29, (x29) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x30)
li x30, 0xd87480b76d950c60 # load random value
la x30, scratch # base address
sd x30, 0(x30) # store in memory
amoxor.d x30, x30, (x30) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x31)
li x31, 0x51f734e88cb8ef9f # load random value
la x31, scratch # base address
sd x31, 0(x31) # store in memory
amoxor.d x31, x31, (x31) # perform operation

# Testcase cp_gpr/fpr_hazard nohaz test
la x27, scratch
add x1, x5, x18 # perform first operation
amoxor.d x24, x19, (x27) # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard nohaz test
la x19, scratch
add x17, x6, x31 # perform first operation
amoxor.d x8, x3, (x19) # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard nohaz test
la x25, scratch
add x24, x19, x13 # perform first operation
amoxor.d x29, x30, (x25) # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard raw test
la x31, scratch
add x25, x25, x0 # perform first operation
amoxor.d x25, x25, (x31) # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard raw test
la x2, scratch
add x2, x2, x0 # perform first operation
amoxor.d x2, x10, (x2) # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard raw test
la x16, scratch
add x21, x21, x0 # perform first operation
amoxor.d x21, x5, (x16) # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard waw test
la x13, scratch
add x25, x31, x11 # perform first operation
amoxor.d x25, x1, (x13) # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard waw test
la x21, scratch
add x3, x15, x19 # perform first operation
amoxor.d x3, x17, (x21) # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard waw test
la x28, scratch
add x27, x10, x22 # perform first operation
amoxor.d x27, x30, (x28) # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard war test
la x9, scratch
add x8, x16, x20 # perform first operation
amoxor.d x16, x30, (x9) # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard war test
la x13, scratch
add x24, x12, x19 # perform first operation
amoxor.d x19, x16, (x13) # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard war test
la x8, scratch
add x19, x28, x1 # perform first operation
amoxor.d x5, x18, (x8) # perform second (triggering) operation

#.EQU SIGSIZE,0


// ******************
// Tests from: WALLY-COV-amomin.w.S
// ******************


# initialize signature pointer
la x4, begin_signature

    
# Testcase cp_rs1 (Test source rs1 = x1)
li x31, 0xbca6d716b93e435b # load random value
la x1, scratch # base address
sd x31, 0(x1) # store in memory
li x31, 0xa49665c63107962c # load another value into integer register
amomin.w x8, x31, (x1) # perform operation

# Testcase cp_rs1 (Test source rs1 = x2)
li x5, 0x83f764b4fc59279f # load random value
la x2, scratch # base address
sd x5, 0(x2) # store in memory
li x5, 0x3c4cacd882f7f0e1 # load another value into integer register
amomin.w x25, x5, (x2) # perform operation

# Testcase cp_rs1 (Test source rs1 = x3)
li x21, 0xc6a66ec4de0e65db # load random value
la x3, scratch # base address
sd x21, 0(x3) # store in memory
li x21, 0xac28eebfa057d52a # load another value into integer register
amomin.w x19, x21, (x3) # perform operation

# Testcase cp_rs1 (Test source rs1 = x4)
mv x5, x4 # switch signature pointer register to avoid conflict with test
li x29, 0x7b9766bb07fde1ad # load random value
la x4, scratch # base address
sd x29, 0(x4) # store in memory
li x29, 0xf284945dda603281 # load another value into integer register
amomin.w x20, x29, (x4) # perform operation

# Testcase cp_rs1 (Test source rs1 = x5)
mv x6, x5 # switch signature pointer register to avoid conflict with test
li x7, 0xf2034f1e1b9508ef # load random value
la x5, scratch # base address
sd x7, 0(x5) # store in memory
li x7, 0x515aa69ad0d90922 # load another value into integer register
amomin.w x13, x7, (x5) # perform operation

# Testcase cp_rs1 (Test source rs1 = x6)
mv x7, x6 # switch signature pointer register to avoid conflict with test
li x5, 0xe04dbde157f64d75 # load random value
la x6, scratch # base address
sd x5, 0(x6) # store in memory
li x5, 0x0808fd0ecfd38dc6 # load another value into integer register
amomin.w x22, x5, (x6) # perform operation

# Testcase cp_rs1 (Test source rs1 = x7)
mv x4, x7 # switch signature pointer register to avoid conflict with test
li x15, 0xfd2fcafd346ec23e # load random value
la x7, scratch # base address
sd x15, 0(x7) # store in memory
li x15, 0xf31a0e1839868721 # load another value into integer register
amomin.w x3, x15, (x7) # perform operation

# Testcase cp_rs1 (Test source rs1 = x8)
li x25, 0xb3716b9bb159b058 # load random value
la x8, scratch # base address
sd x25, 0(x8) # store in memory
li x25, 0x2e55338f2cb1fdfd # load another value into integer register
amomin.w x22, x25, (x8) # perform operation

# Testcase cp_rs1 (Test source rs1 = x9)
li x25, 0x8d20d70670277169 # load random value
la x9, scratch # base address
sd x25, 0(x9) # store in memory
li x25, 0x80ddb1884857ba19 # load another value into integer register
amomin.w x26, x25, (x9) # perform operation

# Testcase cp_rs1 (Test source rs1 = x10)
li x3, 0x06e076cf695871f9 # load random value
la x10, scratch # base address
sd x3, 0(x10) # store in memory
li x3, 0xe987ee89b6559d8c # load another value into integer register
amomin.w x2, x3, (x10) # perform operation

# Testcase cp_rs1 (Test source rs1 = x11)
li x16, 0xf7cb94c1a1f82bf1 # load random value
la x11, scratch # base address
sd x16, 0(x11) # store in memory
li x16, 0x5d9803c8a242f9f6 # load another value into integer register
amomin.w x8, x16, (x11) # perform operation

# Testcase cp_rs1 (Test source rs1 = x12)
li x7, 0x98ed2898bc5c4c10 # load random value
la x12, scratch # base address
sd x7, 0(x12) # store in memory
li x7, 0xb94624db54df041d # load another value into integer register
amomin.w x16, x7, (x12) # perform operation

# Testcase cp_rs1 (Test source rs1 = x13)
li x25, 0x52b11d216ed16292 # load random value
la x13, scratch # base address
sd x25, 0(x13) # store in memory
li x25, 0xbfd4a8620a8a4363 # load another value into integer register
amomin.w x11, x25, (x13) # perform operation

# Testcase cp_rs1 (Test source rs1 = x14)
li x24, 0xec851724a2bdd4fe # load random value
la x14, scratch # base address
sd x24, 0(x14) # store in memory
li x24, 0xab29517d89546d1e # load another value into integer register
amomin.w x27, x24, (x14) # perform operation

# Testcase cp_rs1 (Test source rs1 = x15)
li x6, 0x0ebd043adffe03f6 # load random value
la x15, scratch # base address
sd x6, 0(x15) # store in memory
li x6, 0x70d16d5d0d1433d9 # load another value into integer register
amomin.w x11, x6, (x15) # perform operation

# Testcase cp_rs1 (Test source rs1 = x16)
li x1, 0x600dfb2bcce23f31 # load random value
la x16, scratch # base address
sd x1, 0(x16) # store in memory
li x1, 0x0897b692999fb0e8 # load another value into integer register
amomin.w x15, x1, (x16) # perform operation

# Testcase cp_rs1 (Test source rs1 = x17)
li x12, 0x7ca0763dfac06f5b # load random value
la x17, scratch # base address
sd x12, 0(x17) # store in memory
li x12, 0xea87aeb0566346d7 # load another value into integer register
amomin.w x13, x12, (x17) # perform operation

# Testcase cp_rs1 (Test source rs1 = x18)
li x1, 0x2340e6e146a9e6d5 # load random value
la x18, scratch # base address
sd x1, 0(x18) # store in memory
li x1, 0x292e7e1eab6a54bc # load another value into integer register
amomin.w x8, x1, (x18) # perform operation

# Testcase cp_rs1 (Test source rs1 = x19)
li x15, 0x87646e8469904e02 # load random value
la x19, scratch # base address
sd x15, 0(x19) # store in memory
li x15, 0xaff0e6045dff08ae # load another value into integer register
amomin.w x30, x15, (x19) # perform operation

# Testcase cp_rs1 (Test source rs1 = x20)
li x26, 0x2eae82f46b6e6f46 # load random value
la x20, scratch # base address
sd x26, 0(x20) # store in memory
li x26, 0x79f1c41aa9e9ec9c # load another value into integer register
amomin.w x5, x26, (x20) # perform operation

# Testcase cp_rs1 (Test source rs1 = x21)
li x25, 0xd249f91920c7b30d # load random value
la x21, scratch # base address
sd x25, 0(x21) # store in memory
li x25, 0xa9c1c97175851897 # load another value into integer register
amomin.w x29, x25, (x21) # perform operation

# Testcase cp_rs1 (Test source rs1 = x22)
li x7, 0xd77d1c0e03689ca9 # load random value
la x22, scratch # base address
sd x7, 0(x22) # store in memory
li x7, 0x912e89c0254b4f48 # load another value into integer register
amomin.w x30, x7, (x22) # perform operation

# Testcase cp_rs1 (Test source rs1 = x23)
li x24, 0x51a110be76efaf8b # load random value
la x23, scratch # base address
sd x24, 0(x23) # store in memory
li x24, 0xf3e526d6438ab855 # load another value into integer register
amomin.w x13, x24, (x23) # perform operation

# Testcase cp_rs1 (Test source rs1 = x24)
li x7, 0xc9bc8a18aa44c797 # load random value
la x24, scratch # base address
sd x7, 0(x24) # store in memory
li x7, 0x5dfd6ac6c1ec16a8 # load another value into integer register
amomin.w x19, x7, (x24) # perform operation

# Testcase cp_rs1 (Test source rs1 = x25)
li x21, 0x29a9a1023cb08a18 # load random value
la x25, scratch # base address
sd x21, 0(x25) # store in memory
li x21, 0xbfba5a07d40f8a2d # load another value into integer register
amomin.w x26, x21, (x25) # perform operation

# Testcase cp_rs1 (Test source rs1 = x26)
li x1, 0xa02f9d969090c140 # load random value
la x26, scratch # base address
sd x1, 0(x26) # store in memory
li x1, 0x7c839f03af3a769d # load another value into integer register
amomin.w x13, x1, (x26) # perform operation

# Testcase cp_rs1 (Test source rs1 = x27)
li x2, 0x19b0298a0d3c1ad9 # load random value
la x27, scratch # base address
sd x2, 0(x27) # store in memory
li x2, 0x6472779adac89e1e # load another value into integer register
amomin.w x18, x2, (x27) # perform operation

# Testcase cp_rs1 (Test source rs1 = x28)
li x25, 0x3d41b9009f5eb74b # load random value
la x28, scratch # base address
sd x25, 0(x28) # store in memory
li x25, 0xdb139096e0b1634c # load another value into integer register
amomin.w x18, x25, (x28) # perform operation

# Testcase cp_rs1 (Test source rs1 = x29)
li x22, 0x8f657df2e3851bda # load random value
la x29, scratch # base address
sd x22, 0(x29) # store in memory
li x22, 0x1ffe93d5386bf1ca # load another value into integer register
amomin.w x25, x22, (x29) # perform operation

# Testcase cp_rs1 (Test source rs1 = x30)
li x19, 0x74684ce3c6add10a # load random value
la x30, scratch # base address
sd x19, 0(x30) # store in memory
li x19, 0x4f39b1a040e20d79 # load another value into integer register
amomin.w x21, x19, (x30) # perform operation

# Testcase cp_rs1 (Test source rs1 = x31)
li x29, 0xd983de5838392647 # load random value
la x31, scratch # base address
sd x29, 0(x31) # store in memory
li x29, 0x702b14f6062e1465 # load another value into integer register
amomin.w x1, x29, (x31) # perform operation

# Testcase cp_rs2 (Test source rs2 = x0)
li x0, 0x03113ee96ae05f43 # load random value
la x7, scratch # base address
sd x0, 0(x7) # store in memory
li x0, 0xef96eb1bc8bd6e86 # load another value into integer register
amomin.w x21, x0, (x7) # perform operation

# Testcase cp_rs2 (Test source rs2 = x1)
li x1, 0x04f7ac5ea82dc288 # load random value
la x28, scratch # base address
sd x1, 0(x28) # store in memory
li x1, 0xebd6eadea1e7409c # load another value into integer register
amomin.w x18, x1, (x28) # perform operation

# Testcase cp_rs2 (Test source rs2 = x2)
li x2, 0x5bd6a7cc1705e72f # load random value
la x9, scratch # base address
sd x2, 0(x9) # store in memory
li x2, 0xa1cbf176b7afc25a # load another value into integer register
amomin.w x24, x2, (x9) # perform operation

# Testcase cp_rs2 (Test source rs2 = x3)
li x3, 0xbca55f9a0cbb10c7 # load random value
la x30, scratch # base address
sd x3, 0(x30) # store in memory
li x3, 0xe3fd815078903c4e # load another value into integer register
amomin.w x9, x3, (x30) # perform operation

# Testcase cp_rs2 (Test source rs2 = x4)
mv x5, x4 # switch signature pointer register to avoid conflict with test
li x4, 0x6ca0b0f02dd59c4c # load random value
la x2, scratch # base address
sd x4, 0(x2) # store in memory
li x4, 0xe1e331a5162836c0 # load another value into integer register
amomin.w x1, x4, (x2) # perform operation

# Testcase cp_rs2 (Test source rs2 = x5)
mv x7, x5 # switch signature pointer register to avoid conflict with test
li x5, 0x85bc64f9a684c66d # load random value
la x6, scratch # base address
sd x5, 0(x6) # store in memory
li x5, 0xcdb0747173b26955 # load another value into integer register
amomin.w x20, x5, (x6) # perform operation

# Testcase cp_rs2 (Test source rs2 = x6)
li x6, 0x321f5ad9df7b6912 # load random value
la x24, scratch # base address
sd x6, 0(x24) # store in memory
li x6, 0x517e5d7b5b88ae2a # load another value into integer register
amomin.w x29, x6, (x24) # perform operation

# Testcase cp_rs2 (Test source rs2 = x7)
mv x4, x7 # switch signature pointer register to avoid conflict with test
li x7, 0x125dd9b8e480fbef # load random value
la x5, scratch # base address
sd x7, 0(x5) # store in memory
li x7, 0xdd6bbdd12a0a06df # load another value into integer register
amomin.w x8, x7, (x5) # perform operation

# Testcase cp_rs2 (Test source rs2 = x8)
li x8, 0x471c72eb2899e7bc # load random value
la x11, scratch # base address
sd x8, 0(x11) # store in memory
li x8, 0x344312c1e6828a93 # load another value into integer register
amomin.w x29, x8, (x11) # perform operation

# Testcase cp_rs2 (Test source rs2 = x9)
li x9, 0x8b38ae7d0c5e1389 # load random value
la x11, scratch # base address
sd x9, 0(x11) # store in memory
li x9, 0xd6f44dd420cbec9d # load another value into integer register
amomin.w x3, x9, (x11) # perform operation

# Testcase cp_rs2 (Test source rs2 = x10)
li x10, 0x009757977af5a2c7 # load random value
la x6, scratch # base address
sd x10, 0(x6) # store in memory
li x10, 0x7382aa1714af0abe # load another value into integer register
amomin.w x27, x10, (x6) # perform operation

# Testcase cp_rs2 (Test source rs2 = x11)
li x11, 0x5dd72ad1ca15e8e1 # load random value
la x1, scratch # base address
sd x11, 0(x1) # store in memory
li x11, 0x37c776d0ab3f0c08 # load another value into integer register
amomin.w x9, x11, (x1) # perform operation

# Testcase cp_rs2 (Test source rs2 = x12)
li x12, 0xea7b7c7c60fb2f48 # load random value
la x29, scratch # base address
sd x12, 0(x29) # store in memory
li x12, 0x55e449aebcf72718 # load another value into integer register
amomin.w x14, x12, (x29) # perform operation

# Testcase cp_rs2 (Test source rs2 = x13)
li x13, 0xa141e4e14fa5e460 # load random value
la x23, scratch # base address
sd x13, 0(x23) # store in memory
li x13, 0xc2fd6e47d4f9b483 # load another value into integer register
amomin.w x31, x13, (x23) # perform operation

# Testcase cp_rs2 (Test source rs2 = x14)
li x14, 0xf0696797ba2edb2b # load random value
la x22, scratch # base address
sd x14, 0(x22) # store in memory
li x14, 0x68a9fa281ae16b57 # load another value into integer register
amomin.w x9, x14, (x22) # perform operation

# Testcase cp_rs2 (Test source rs2 = x15)
li x15, 0xc9fef9347d733a52 # load random value
la x9, scratch # base address
sd x15, 0(x9) # store in memory
li x15, 0x02a4d2f6e8350a84 # load another value into integer register
amomin.w x24, x15, (x9) # perform operation

# Testcase cp_rs2 (Test source rs2 = x16)
li x16, 0xab908c251d120b1d # load random value
la x12, scratch # base address
sd x16, 0(x12) # store in memory
li x16, 0x0c0496b36c7467f2 # load another value into integer register
amomin.w x7, x16, (x12) # perform operation

# Testcase cp_rs2 (Test source rs2 = x17)
li x17, 0xbc31badd7397475a # load random value
la x22, scratch # base address
sd x17, 0(x22) # store in memory
li x17, 0x514ab39560feca83 # load another value into integer register
amomin.w x31, x17, (x22) # perform operation

# Testcase cp_rs2 (Test source rs2 = x18)
li x18, 0xce6c6f8128e37b69 # load random value
la x14, scratch # base address
sd x18, 0(x14) # store in memory
li x18, 0xd4a55929ac7f96eb # load another value into integer register
amomin.w x1, x18, (x14) # perform operation

# Testcase cp_rs2 (Test source rs2 = x19)
li x19, 0x008d6b36ff977248 # load random value
la x9, scratch # base address
sd x19, 0(x9) # store in memory
li x19, 0x5743d0e31258d95f # load another value into integer register
amomin.w x27, x19, (x9) # perform operation

# Testcase cp_rs2 (Test source rs2 = x20)
li x20, 0xc83d28cb3e28bcb1 # load random value
la x3, scratch # base address
sd x20, 0(x3) # store in memory
li x20, 0x0a0b50f8212928cb # load another value into integer register
amomin.w x17, x20, (x3) # perform operation

# Testcase cp_rs2 (Test source rs2 = x21)
li x21, 0x5c3584bc5ffca42a # load random value
la x8, scratch # base address
sd x21, 0(x8) # store in memory
li x21, 0x311d8434487b4859 # load another value into integer register
amomin.w x23, x21, (x8) # perform operation

# Testcase cp_rs2 (Test source rs2 = x22)
li x22, 0x3bdbf02fa026ee92 # load random value
la x15, scratch # base address
sd x22, 0(x15) # store in memory
li x22, 0xa5052f5cc0481805 # load another value into integer register
amomin.w x5, x22, (x15) # perform operation

# Testcase cp_rs2 (Test source rs2 = x23)
li x23, 0x20f6476bf2ee7232 # load random value
la x6, scratch # base address
sd x23, 0(x6) # store in memory
li x23, 0x94e81f8c76bbede6 # load another value into integer register
amomin.w x25, x23, (x6) # perform operation

# Testcase cp_rs2 (Test source rs2 = x24)
li x24, 0x24df0295e0683986 # load random value
la x30, scratch # base address
sd x24, 0(x30) # store in memory
li x24, 0xe66cba92d9d2455c # load another value into integer register
amomin.w x10, x24, (x30) # perform operation

# Testcase cp_rs2 (Test source rs2 = x25)
li x25, 0xa0f562ac6282221b # load random value
la x23, scratch # base address
sd x25, 0(x23) # store in memory
li x25, 0x9d23a5eae96a23a4 # load another value into integer register
amomin.w x21, x25, (x23) # perform operation

# Testcase cp_rs2 (Test source rs2 = x26)
li x26, 0x8cdcc32c44572807 # load random value
la x30, scratch # base address
sd x26, 0(x30) # store in memory
li x26, 0xa8cbbf293970bc59 # load another value into integer register
amomin.w x10, x26, (x30) # perform operation

# Testcase cp_rs2 (Test source rs2 = x27)
li x27, 0x8de8d64d7d85a955 # load random value
la x24, scratch # base address
sd x27, 0(x24) # store in memory
li x27, 0x6932cac8d04a9e36 # load another value into integer register
amomin.w x12, x27, (x24) # perform operation

# Testcase cp_rs2 (Test source rs2 = x28)
li x28, 0x9593e0381a39795f # load random value
la x2, scratch # base address
sd x28, 0(x2) # store in memory
li x28, 0x5e065e4fffe8af2b # load another value into integer register
amomin.w x20, x28, (x2) # perform operation

# Testcase cp_rs2 (Test source rs2 = x29)
li x29, 0x1ac8dd447056b66d # load random value
la x9, scratch # base address
sd x29, 0(x9) # store in memory
li x29, 0xa28363e8a3fea2d9 # load another value into integer register
amomin.w x17, x29, (x9) # perform operation

# Testcase cp_rs2 (Test source rs2 = x30)
li x30, 0x0ae0cf72cc6e98d7 # load random value
la x19, scratch # base address
sd x30, 0(x19) # store in memory
li x30, 0x976b51e015320a55 # load another value into integer register
amomin.w x1, x30, (x19) # perform operation

# Testcase cp_rs2 (Test source rs2 = x31)
li x31, 0x43a804712ee5e8f3 # load random value
la x5, scratch # base address
sd x31, 0(x5) # store in memory
li x31, 0xef3e70233c806215 # load another value into integer register
amomin.w x18, x31, (x5) # perform operation

# Testcase cp_rd (Test destination rd = x0)
li x13, 0xd8cccc422f578f20 # load random value
la x21, scratch # base address
sd x13, 0(x21) # store in memory
li x13, 0xe05a18fd2193b7bf # load another value into integer register
amomin.w x0, x13, (x21) # perform operation

# Testcase cp_rd (Test destination rd = x1)
li x12, 0xce07d10d11ec864d # load random value
la x27, scratch # base address
sd x12, 0(x27) # store in memory
li x12, 0x15a9709efa55fba5 # load another value into integer register
amomin.w x1, x12, (x27) # perform operation

# Testcase cp_rd (Test destination rd = x2)
li x17, 0x29dcfd46d61678f8 # load random value
la x11, scratch # base address
sd x17, 0(x11) # store in memory
li x17, 0xec0abb1c9f48ae27 # load another value into integer register
amomin.w x2, x17, (x11) # perform operation

# Testcase cp_rd (Test destination rd = x3)
li x3, 0x30256813efb893b4 # load random value
la x31, scratch # base address
sd x3, 0(x31) # store in memory
li x3, 0x6cdc5e670e14c260 # load another value into integer register
amomin.w x3, x3, (x31) # perform operation

# Testcase cp_rd (Test destination rd = x4)
mv x5, x4 # switch signature pointer register to avoid conflict with test
li x13, 0x932fda30e2ab8dc0 # load random value
la x17, scratch # base address
sd x13, 0(x17) # store in memory
li x13, 0x8bd6fa4425deffd3 # load another value into integer register
amomin.w x4, x13, (x17) # perform operation

# Testcase cp_rd (Test destination rd = x5)
mv x6, x5 # switch signature pointer register to avoid conflict with test
li x28, 0xd6c7f83f76805033 # load random value
la x9, scratch # base address
sd x28, 0(x9) # store in memory
li x28, 0x618570a7a36a427f # load another value into integer register
amomin.w x5, x28, (x9) # perform operation

# Testcase cp_rd (Test destination rd = x6)
mv x7, x6 # switch signature pointer register to avoid conflict with test
li x13, 0x6a9558ba707554b4 # load random value
la x3, scratch # base address
sd x13, 0(x3) # store in memory
li x13, 0xf705b598bc1784e4 # load another value into integer register
amomin.w x6, x13, (x3) # perform operation

# Testcase cp_rd (Test destination rd = x7)
mv x4, x7 # switch signature pointer register to avoid conflict with test
li x5, 0x97f2604bebea66e5 # load random value
la x28, scratch # base address
sd x5, 0(x28) # store in memory
li x5, 0x84753a29658632da # load another value into integer register
amomin.w x7, x5, (x28) # perform operation

# Testcase cp_rd (Test destination rd = x8)
li x12, 0x4a4c1a533b9e94b7 # load random value
la x9, scratch # base address
sd x12, 0(x9) # store in memory
li x12, 0x19ccf397d4915b24 # load another value into integer register
amomin.w x8, x12, (x9) # perform operation

# Testcase cp_rd (Test destination rd = x9)
li x26, 0x65744b56ff13a97f # load random value
la x1, scratch # base address
sd x26, 0(x1) # store in memory
li x26, 0x24f2fedae2212d6d # load another value into integer register
amomin.w x9, x26, (x1) # perform operation

# Testcase cp_rd (Test destination rd = x10)
li x6, 0xf13e08d3fa7e11cd # load random value
la x14, scratch # base address
sd x6, 0(x14) # store in memory
li x6, 0xdeadf6467102785d # load another value into integer register
amomin.w x10, x6, (x14) # perform operation

# Testcase cp_rd (Test destination rd = x11)
li x7, 0x4d1a7e2b20c8dee5 # load random value
la x21, scratch # base address
sd x7, 0(x21) # store in memory
li x7, 0x6d09b8c013e14715 # load another value into integer register
amomin.w x11, x7, (x21) # perform operation

# Testcase cp_rd (Test destination rd = x12)
li x2, 0x7c37837fb4f4f973 # load random value
la x19, scratch # base address
sd x2, 0(x19) # store in memory
li x2, 0xaade609da366ff33 # load another value into integer register
amomin.w x12, x2, (x19) # perform operation

# Testcase cp_rd (Test destination rd = x13)
li x16, 0x2768ffac19ac60db # load random value
la x21, scratch # base address
sd x16, 0(x21) # store in memory
li x16, 0x029fcbe5c6e03310 # load another value into integer register
amomin.w x13, x16, (x21) # perform operation

# Testcase cp_rd (Test destination rd = x14)
li x27, 0x158874256081f5da # load random value
la x17, scratch # base address
sd x27, 0(x17) # store in memory
li x27, 0xfd7b3e1d6be04228 # load another value into integer register
amomin.w x14, x27, (x17) # perform operation

# Testcase cp_rd (Test destination rd = x15)
li x8, 0xbd3ebd23fb085d77 # load random value
la x2, scratch # base address
sd x8, 0(x2) # store in memory
li x8, 0xcba84ea4c6d2eadb # load another value into integer register
amomin.w x15, x8, (x2) # perform operation

# Testcase cp_rd (Test destination rd = x16)
li x6, 0xdea270d9eb241490 # load random value
la x8, scratch # base address
sd x6, 0(x8) # store in memory
li x6, 0x1b30d9007eceb675 # load another value into integer register
amomin.w x16, x6, (x8) # perform operation

# Testcase cp_rd (Test destination rd = x17)
li x22, 0x8d5e0560f07d4b60 # load random value
la x16, scratch # base address
sd x22, 0(x16) # store in memory
li x22, 0x155199084e8fbb12 # load another value into integer register
amomin.w x17, x22, (x16) # perform operation

# Testcase cp_rd (Test destination rd = x18)
li x19, 0x6126fee7a2fb5bfb # load random value
la x9, scratch # base address
sd x19, 0(x9) # store in memory
li x19, 0x142e176d8760c870 # load another value into integer register
amomin.w x18, x19, (x9) # perform operation

# Testcase cp_rd (Test destination rd = x19)
li x25, 0x3cb51064ac5fd5cc # load random value
la x16, scratch # base address
sd x25, 0(x16) # store in memory
li x25, 0x4f984396bb746c0e # load another value into integer register
amomin.w x19, x25, (x16) # perform operation

# Testcase cp_rd (Test destination rd = x20)
li x25, 0x6465216828fa3334 # load random value
la x2, scratch # base address
sd x25, 0(x2) # store in memory
li x25, 0x14eb39392e234483 # load another value into integer register
amomin.w x20, x25, (x2) # perform operation

# Testcase cp_rd (Test destination rd = x21)
li x22, 0x6422fe27c0610806 # load random value
la x8, scratch # base address
sd x22, 0(x8) # store in memory
li x22, 0xa95e1873a4f5cf05 # load another value into integer register
amomin.w x21, x22, (x8) # perform operation

# Testcase cp_rd (Test destination rd = x22)
li x26, 0x3a29902710ecc05f # load random value
la x12, scratch # base address
sd x26, 0(x12) # store in memory
li x26, 0x13e1047493360865 # load another value into integer register
amomin.w x22, x26, (x12) # perform operation

# Testcase cp_rd (Test destination rd = x23)
li x25, 0xa152c81296461f16 # load random value
la x5, scratch # base address
sd x25, 0(x5) # store in memory
li x25, 0x41b28c0b77b7a755 # load another value into integer register
amomin.w x23, x25, (x5) # perform operation

# Testcase cp_rd (Test destination rd = x24)
li x11, 0x7446c3680a38520b # load random value
la x22, scratch # base address
sd x11, 0(x22) # store in memory
li x11, 0x98965c4878ad9cf7 # load another value into integer register
amomin.w x24, x11, (x22) # perform operation

# Testcase cp_rd (Test destination rd = x25)
li x31, 0xe5c32be31ee96e38 # load random value
la x2, scratch # base address
sd x31, 0(x2) # store in memory
li x31, 0xaeaa9b1cf6c46a46 # load another value into integer register
amomin.w x25, x31, (x2) # perform operation

# Testcase cp_rd (Test destination rd = x26)
li x22, 0xffc8420858934a1d # load random value
la x14, scratch # base address
sd x22, 0(x14) # store in memory
li x22, 0xbaa8c2e8d5a78eb4 # load another value into integer register
amomin.w x26, x22, (x14) # perform operation

# Testcase cp_rd (Test destination rd = x27)
li x5, 0x3a14fd9d4086879e # load random value
la x25, scratch # base address
sd x5, 0(x25) # store in memory
li x5, 0x18dec138c58a572f # load another value into integer register
amomin.w x27, x5, (x25) # perform operation

# Testcase cp_rd (Test destination rd = x28)
li x13, 0xa6096f5aa630bcc0 # load random value
la x7, scratch # base address
sd x13, 0(x7) # store in memory
li x13, 0x51a6a14a88b15f53 # load another value into integer register
amomin.w x28, x13, (x7) # perform operation

# Testcase cp_rd (Test destination rd = x29)
li x12, 0x6f4975a0263f4727 # load random value
la x7, scratch # base address
sd x12, 0(x7) # store in memory
li x12, 0x20aa081b0ae37219 # load another value into integer register
amomin.w x29, x12, (x7) # perform operation

# Testcase cp_rd (Test destination rd = x30)
li x29, 0x9128348db10c8564 # load random value
la x21, scratch # base address
sd x29, 0(x21) # store in memory
li x29, 0x927b3b818bc95edf # load another value into integer register
amomin.w x30, x29, (x21) # perform operation

# Testcase cp_rd (Test destination rd = x31)
li x2, 0xeb139bae5c03fb85 # load random value
la x16, scratch # base address
sd x2, 0(x16) # store in memory
li x2, 0x09067be5a96cf306 # load another value into integer register
amomin.w x31, x2, (x16) # perform operation

# Testcase cp_rs2_corners (Test source rs2 value = 0x0)
li x3, 0x61241eff8daf63ff # load random value
la x9, scratch # base address
sd x3, 0(x9) # store in memory
li x3, 0x0000000000000000 # load another value into integer register
amomin.w x11, x3, (x9) # perform operation

# Testcase cp_rs2_corners (Test source rs2 value = 0x1)
li x30, 0x0605a8fa82b38042 # load random value
la x9, scratch # base address
sd x30, 0(x9) # store in memory
li x30, 0x0000000000000001 # load another value into integer register
amomin.w x11, x30, (x9) # perform operation

# Testcase cp_rs2_corners (Test source rs2 value = 0x2)
li x14, 0x237620285de6c13a # load random value
la x7, scratch # base address
sd x14, 0(x7) # store in memory
li x14, 0x0000000000000002 # load another value into integer register
amomin.w x28, x14, (x7) # perform operation

# Testcase cp_rs2_corners (Test source rs2 value = 0x8000000000000000)
li x11, 0xfc7373f4a52162d6 # load random value
la x27, scratch # base address
sd x11, 0(x27) # store in memory
li x11, 0x8000000000000000 # load another value into integer register
amomin.w x23, x11, (x27) # perform operation

# Testcase cp_rs2_corners (Test source rs2 value = 0x8000000000000001)
li x22, 0x84b4c569c3c60ffb # load random value
la x28, scratch # base address
sd x22, 0(x28) # store in memory
li x22, 0x8000000000000001 # load another value into integer register
amomin.w x25, x22, (x28) # perform operation

# Testcase cp_rs2_corners (Test source rs2 value = 0x7fffffffffffffff)
li x30, 0xfa8098c9f97ef359 # load random value
la x25, scratch # base address
sd x30, 0(x25) # store in memory
li x30, 0x7fffffffffffffff # load another value into integer register
amomin.w x29, x30, (x25) # perform operation

# Testcase cp_rs2_corners (Test source rs2 value = 0x7ffffffffffffffe)
li x25, 0xb661ae073a1c0978 # load random value
la x3, scratch # base address
sd x25, 0(x3) # store in memory
li x25, 0x7ffffffffffffffe # load another value into integer register
amomin.w x31, x25, (x3) # perform operation

# Testcase cp_rs2_corners (Test source rs2 value = 0xffffffffffffffff)
li x14, 0x874c8ef7447421f1 # load random value
la x22, scratch # base address
sd x14, 0(x22) # store in memory
li x14, 0xffffffffffffffff # load another value into integer register
amomin.w x30, x14, (x22) # perform operation

# Testcase cp_rs2_corners (Test source rs2 value = 0xfffffffffffffffe)
li x25, 0x9a36c8bddeef6ce8 # load random value
la x21, scratch # base address
sd x25, 0(x21) # store in memory
li x25, 0xfffffffffffffffe # load another value into integer register
amomin.w x15, x25, (x21) # perform operation

# Testcase cp_rs2_corners (Test source rs2 value = 0x5bbc887763ae86f2)
li x2, 0x3134414d6f67b125 # load random value
la x23, scratch # base address
sd x2, 0(x23) # store in memory
li x2, 0x5bbc887763ae86f2 # load another value into integer register
amomin.w x13, x2, (x23) # perform operation

# Testcase cp_rs2_corners (Test source rs2 value = 0xaaaaaaaaaaaaaaaa)
li x11, 0x55b9f5e801d808a4 # load random value
la x26, scratch # base address
sd x11, 0(x26) # store in memory
li x11, 0xaaaaaaaaaaaaaaaa # load another value into integer register
amomin.w x6, x11, (x26) # perform operation

# Testcase cp_rs2_corners (Test source rs2 value = 0x5555555555555555)
li x20, 0x6a9de97b65e072a0 # load random value
la x1, scratch # base address
sd x20, 0(x1) # store in memory
li x20, 0x5555555555555555 # load another value into integer register
amomin.w x7, x20, (x1) # perform operation

# Testcase cp_rs2_corners (Test source rs2 value = 0xffffffff)
li x13, 0x086796907746722a # load random value
la x5, scratch # base address
sd x13, 0(x5) # store in memory
li x13, 0x00000000ffffffff # load another value into integer register
amomin.w x22, x13, (x5) # perform operation

# Testcase cp_rs2_corners (Test source rs2 value = 0xfffffffe)
li x25, 0x568d6205ebc620d2 # load random value
la x10, scratch # base address
sd x25, 0(x10) # store in memory
li x25, 0x00000000fffffffe # load another value into integer register
amomin.w x31, x25, (x10) # perform operation

# Testcase cp_rs2_corners (Test source rs2 value = 0x100000000)
li x30, 0x0bbe2b53a69dcd75 # load random value
la x11, scratch # base address
sd x30, 0(x11) # store in memory
li x30, 0x0000000100000000 # load another value into integer register
amomin.w x2, x30, (x11) # perform operation

# Testcase cp_rs2_corners (Test source rs2 value = 0x100000001)
li x11, 0x8a1429b1546b3524 # load random value
la x31, scratch # base address
sd x11, 0(x31) # store in memory
li x11, 0x0000000100000001 # load another value into integer register
amomin.w x2, x11, (x31) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x1)
li x1, 0x9edba9a29c0b6601 # load random value
la x1, scratch # base address
sd x1, 0(x1) # store in memory
amomin.w x1, x1, (x1) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x2)
li x2, 0x31b61f28949a285c # load random value
la x2, scratch # base address
sd x2, 0(x2) # store in memory
amomin.w x14, x2, (x2) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x3)
li x3, 0x6363182a71548dc1 # load random value
la x3, scratch # base address
sd x3, 0(x3) # store in memory
amomin.w x18, x3, (x3) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x4)
mv x5, x4 # switch signature pointer register to avoid conflict with test
li x4, 0x402fa63c50d54e08 # load random value
la x4, scratch # base address
sd x4, 0(x4) # store in memory
amomin.w x21, x4, (x4) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x5)
mv x6, x5 # switch signature pointer register to avoid conflict with test
li x5, 0x79f98ba27578a1cc # load random value
la x5, scratch # base address
sd x5, 0(x5) # store in memory
amomin.w x19, x5, (x5) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x6)
mv x7, x6 # switch signature pointer register to avoid conflict with test
li x6, 0x2e252cf7e5d812e5 # load random value
la x6, scratch # base address
sd x6, 0(x6) # store in memory
amomin.w x18, x6, (x6) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x7)
mv x4, x7 # switch signature pointer register to avoid conflict with test
li x7, 0x7d2dafdb2078c12e # load random value
la x7, scratch # base address
sd x7, 0(x7) # store in memory
amomin.w x10, x7, (x7) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x8)
li x8, 0x3add9f38983190fa # load random value
la x8, scratch # base address
sd x8, 0(x8) # store in memory
amomin.w x2, x8, (x8) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x9)
li x9, 0x0dad0eebfb193667 # load random value
la x9, scratch # base address
sd x9, 0(x9) # store in memory
amomin.w x1, x9, (x9) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x10)
li x10, 0x56fd8f8857dd7f5f # load random value
la x10, scratch # base address
sd x10, 0(x10) # store in memory
amomin.w x22, x10, (x10) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x11)
li x11, 0x376450161b982f65 # load random value
la x11, scratch # base address
sd x11, 0(x11) # store in memory
amomin.w x17, x11, (x11) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x12)
li x12, 0xc080c1b7c701229f # load random value
la x12, scratch # base address
sd x12, 0(x12) # store in memory
amomin.w x9, x12, (x12) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x13)
li x13, 0x2dbb7f57e5642a51 # load random value
la x13, scratch # base address
sd x13, 0(x13) # store in memory
amomin.w x1, x13, (x13) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x14)
li x14, 0x3549ecd962569315 # load random value
la x14, scratch # base address
sd x14, 0(x14) # store in memory
amomin.w x20, x14, (x14) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x15)
li x15, 0xbdb477f13d1ae38f # load random value
la x15, scratch # base address
sd x15, 0(x15) # store in memory
amomin.w x20, x15, (x15) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x16)
li x16, 0x914863ba2443d4ca # load random value
la x16, scratch # base address
sd x16, 0(x16) # store in memory
amomin.w x17, x16, (x16) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x17)
li x17, 0x047e0f0b522ee6cc # load random value
la x17, scratch # base address
sd x17, 0(x17) # store in memory
amomin.w x18, x17, (x17) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x18)
li x18, 0xf1988298d8d5349e # load random value
la x18, scratch # base address
sd x18, 0(x18) # store in memory
amomin.w x29, x18, (x18) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x19)
li x19, 0x1743fd5f94caab83 # load random value
la x19, scratch # base address
sd x19, 0(x19) # store in memory
amomin.w x27, x19, (x19) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x20)
li x20, 0x83b25befe6fa18ef # load random value
la x20, scratch # base address
sd x20, 0(x20) # store in memory
amomin.w x10, x20, (x20) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x21)
li x21, 0x7510a05aa9244eef # load random value
la x21, scratch # base address
sd x21, 0(x21) # store in memory
amomin.w x6, x21, (x21) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x22)
li x22, 0xfc3d55940f2146b7 # load random value
la x22, scratch # base address
sd x22, 0(x22) # store in memory
amomin.w x26, x22, (x22) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x23)
li x23, 0x0008a8148e76d7a5 # load random value
la x23, scratch # base address
sd x23, 0(x23) # store in memory
amomin.w x12, x23, (x23) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x24)
li x24, 0x6ccf960c7097633f # load random value
la x24, scratch # base address
sd x24, 0(x24) # store in memory
amomin.w x27, x24, (x24) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x25)
li x25, 0xb6116c1d28e82f88 # load random value
la x25, scratch # base address
sd x25, 0(x25) # store in memory
amomin.w x8, x25, (x25) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x26)
li x26, 0x8565e22fe956cdea # load random value
la x26, scratch # base address
sd x26, 0(x26) # store in memory
amomin.w x1, x26, (x26) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x27)
li x27, 0x473b2d97db0de018 # load random value
la x27, scratch # base address
sd x27, 0(x27) # store in memory
amomin.w x14, x27, (x27) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x28)
li x28, 0x34c752573beee0af # load random value
la x28, scratch # base address
sd x28, 0(x28) # store in memory
amomin.w x7, x28, (x28) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x29)
li x29, 0x4cd19f6f1d101b62 # load random value
la x29, scratch # base address
sd x29, 0(x29) # store in memory
amomin.w x7, x29, (x29) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x30)
li x30, 0xe4d38669cf1aa2d9 # load random value
la x30, scratch # base address
sd x30, 0(x30) # store in memory
amomin.w x7, x30, (x30) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x31)
li x31, 0xabf368ba4b60123e # load random value
la x31, scratch # base address
sd x31, 0(x31) # store in memory
amomin.w x20, x31, (x31) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x1)
li x28, 0xc797fe96767528e5 # load random value
la x1, scratch # base address
sd x28, 0(x1) # store in memory
li x28, 0xee51ef0474420e6a # load another value into integer register
amomin.w x1, x28, (x1) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x2)
li x1, 0x9098cd2304e1ad97 # load random value
la x2, scratch # base address
sd x1, 0(x2) # store in memory
li x1, 0xe4866734b463baa1 # load another value into integer register
amomin.w x2, x1, (x2) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x3)
li x21, 0x767d913d00f20daa # load random value
la x3, scratch # base address
sd x21, 0(x3) # store in memory
li x21, 0xb4cddf9f0689708b # load another value into integer register
amomin.w x3, x21, (x3) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x4)
mv x5, x4 # switch signature pointer register to avoid conflict with test
li x25, 0x14f665921649d312 # load random value
la x4, scratch # base address
sd x25, 0(x4) # store in memory
li x25, 0x1cfd0d1c724b7f25 # load another value into integer register
amomin.w x4, x25, (x4) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x5)
mv x7, x5 # switch signature pointer register to avoid conflict with test
li x6, 0x3f3a91433eeb34a1 # load random value
la x5, scratch # base address
sd x6, 0(x5) # store in memory
li x6, 0xd3ac0f83e662c4e1 # load another value into integer register
amomin.w x5, x6, (x5) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x6)
li x19, 0x869a952dbf18b0e4 # load random value
la x6, scratch # base address
sd x19, 0(x6) # store in memory
li x19, 0xbed7e947bc08ce95 # load another value into integer register
amomin.w x6, x19, (x6) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x7)
mv x4, x7 # switch signature pointer register to avoid conflict with test
li x20, 0x0b73976bed0881df # load random value
la x7, scratch # base address
sd x20, 0(x7) # store in memory
li x20, 0x843cb2b15e5293dc # load another value into integer register
amomin.w x7, x20, (x7) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x8)
li x7, 0x7d65f00a3971eb51 # load random value
la x8, scratch # base address
sd x7, 0(x8) # store in memory
li x7, 0x646a78d03db08bda # load another value into integer register
amomin.w x8, x7, (x8) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x9)
li x29, 0x92127c8e5d2fb33d # load random value
la x9, scratch # base address
sd x29, 0(x9) # store in memory
li x29, 0x9b05d7c42c396338 # load another value into integer register
amomin.w x9, x29, (x9) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x10)
li x17, 0x0d23e657682c2113 # load random value
la x10, scratch # base address
sd x17, 0(x10) # store in memory
li x17, 0x036c911665569dad # load another value into integer register
amomin.w x10, x17, (x10) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x11)
li x21, 0x2a73c72503b7e47f # load random value
la x11, scratch # base address
sd x21, 0(x11) # store in memory
li x21, 0x6bf5cdc02cde98ce # load another value into integer register
amomin.w x11, x21, (x11) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x12)
li x5, 0x96b8e334f5c5e14a # load random value
la x12, scratch # base address
sd x5, 0(x12) # store in memory
li x5, 0xf91cb5931445ab8c # load another value into integer register
amomin.w x12, x5, (x12) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x13)
li x22, 0x2cb83ae29e09029d # load random value
la x13, scratch # base address
sd x22, 0(x13) # store in memory
li x22, 0xd5c0af9a59b28a82 # load another value into integer register
amomin.w x13, x22, (x13) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x14)
li x20, 0xc3272fb7d9441716 # load random value
la x14, scratch # base address
sd x20, 0(x14) # store in memory
li x20, 0x61570eaaf6e27317 # load another value into integer register
amomin.w x14, x20, (x14) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x15)
li x26, 0x4e0a739f972318c8 # load random value
la x15, scratch # base address
sd x26, 0(x15) # store in memory
li x26, 0x0ec8b4bfa799f147 # load another value into integer register
amomin.w x15, x26, (x15) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x16)
li x31, 0xac6439890db72d66 # load random value
la x16, scratch # base address
sd x31, 0(x16) # store in memory
li x31, 0xf1fe1e15d0cb4970 # load another value into integer register
amomin.w x16, x31, (x16) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x17)
li x16, 0x088b9b8dabe2c483 # load random value
la x17, scratch # base address
sd x16, 0(x17) # store in memory
li x16, 0xdded336aa6c78e97 # load another value into integer register
amomin.w x17, x16, (x17) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x18)
li x5, 0x06a0ea87cd6fc798 # load random value
la x18, scratch # base address
sd x5, 0(x18) # store in memory
li x5, 0x4f598fa4651cffbb # load another value into integer register
amomin.w x18, x5, (x18) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x19)
li x26, 0x559ed4d44d496a7b # load random value
la x19, scratch # base address
sd x26, 0(x19) # store in memory
li x26, 0x0ffedd7552981b36 # load another value into integer register
amomin.w x19, x26, (x19) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x20)
li x22, 0x103b96a1de3e528f # load random value
la x20, scratch # base address
sd x22, 0(x20) # store in memory
li x22, 0x8ee4547786c99a20 # load another value into integer register
amomin.w x20, x22, (x20) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x21)
li x7, 0x99a55563f7196e2c # load random value
la x21, scratch # base address
sd x7, 0(x21) # store in memory
li x7, 0x8682477e4dc0c0f0 # load another value into integer register
amomin.w x21, x7, (x21) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x22)
li x5, 0xe3a55d24ec3e70d2 # load random value
la x22, scratch # base address
sd x5, 0(x22) # store in memory
li x5, 0xd6e1f5f603e6e7fe # load another value into integer register
amomin.w x22, x5, (x22) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x23)
li x31, 0xe2427526a7b32781 # load random value
la x23, scratch # base address
sd x31, 0(x23) # store in memory
li x31, 0x3f51c3b33bda0f07 # load another value into integer register
amomin.w x23, x31, (x23) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x24)
li x27, 0x9a87d4f1f5a98116 # load random value
la x24, scratch # base address
sd x27, 0(x24) # store in memory
li x27, 0x5661e43d81d5161c # load another value into integer register
amomin.w x24, x27, (x24) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x25)
li x5, 0x7bb714249e1abf00 # load random value
la x25, scratch # base address
sd x5, 0(x25) # store in memory
li x5, 0xef6b24a2fa1d2aad # load another value into integer register
amomin.w x25, x5, (x25) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x26)
li x23, 0xec364ae7b77b57d9 # load random value
la x26, scratch # base address
sd x23, 0(x26) # store in memory
li x23, 0x2f5e51faaaafb429 # load another value into integer register
amomin.w x26, x23, (x26) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x27)
li x21, 0xe1524607e64ec10d # load random value
la x27, scratch # base address
sd x21, 0(x27) # store in memory
li x21, 0xca8c9ca85c8d584a # load another value into integer register
amomin.w x27, x21, (x27) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x28)
li x28, 0x0d94df91d1f683a4 # load random value
la x28, scratch # base address
sd x28, 0(x28) # store in memory
amomin.w x28, x28, (x28) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x29)
li x11, 0x5bc035d7835e882c # load random value
la x29, scratch # base address
sd x11, 0(x29) # store in memory
li x11, 0xee00c511710de4ee # load another value into integer register
amomin.w x29, x11, (x29) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x30)
li x20, 0x4808e6b9f5c5ec12 # load random value
la x30, scratch # base address
sd x20, 0(x30) # store in memory
li x20, 0xda12611267dccf3e # load another value into integer register
amomin.w x30, x20, (x30) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x31)
li x6, 0x1de5879d6ad52a4a # load random value
la x31, scratch # base address
sd x6, 0(x31) # store in memory
li x6, 0xfe53f0859c0b6cfe # load another value into integer register
amomin.w x31, x6, (x31) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x0)
li x0, 0xc393c8469f90f0c6 # load random value
la x8, scratch # base address
sd x0, 0(x8) # store in memory
li x0, 0xf68ac633bd8017c1 # load another value into integer register
amomin.w x0, x0, (x8) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x1)
li x1, 0xd102795882722ec0 # load random value
la x21, scratch # base address
sd x1, 0(x21) # store in memory
li x1, 0xc100d8bf9fc87db5 # load another value into integer register
amomin.w x1, x1, (x21) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x2)
li x2, 0x50c71ac57d693fe8 # load random value
la x3, scratch # base address
sd x2, 0(x3) # store in memory
li x2, 0xb904f27df4748d92 # load another value into integer register
amomin.w x2, x2, (x3) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x3)
li x3, 0xb5186729fccd21a7 # load random value
la x21, scratch # base address
sd x3, 0(x21) # store in memory
li x3, 0xf873835627044895 # load another value into integer register
amomin.w x3, x3, (x21) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x4)
mv x5, x4 # switch signature pointer register to avoid conflict with test
li x4, 0x3971236274b15b3a # load random value
la x12, scratch # base address
sd x4, 0(x12) # store in memory
li x4, 0xa7f2ea2807792772 # load another value into integer register
amomin.w x4, x4, (x12) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x5)
mv x6, x5 # switch signature pointer register to avoid conflict with test
li x5, 0xcd1cb5227d06503d # load random value
la x14, scratch # base address
sd x5, 0(x14) # store in memory
li x5, 0xa9939d9512f129f2 # load another value into integer register
amomin.w x5, x5, (x14) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x6)
mv x7, x6 # switch signature pointer register to avoid conflict with test
li x6, 0x1eb41b961b81a496 # load random value
la x15, scratch # base address
sd x6, 0(x15) # store in memory
li x6, 0x747cdf33a317d841 # load another value into integer register
amomin.w x6, x6, (x15) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x7)
mv x4, x7 # switch signature pointer register to avoid conflict with test
li x7, 0x857ec3c89b3cc261 # load random value
la x22, scratch # base address
sd x7, 0(x22) # store in memory
li x7, 0x1e88a75a826a6ad5 # load another value into integer register
amomin.w x7, x7, (x22) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x8)
li x8, 0x73e80869cf3aa475 # load random value
la x3, scratch # base address
sd x8, 0(x3) # store in memory
li x8, 0x48b529f1b672171e # load another value into integer register
amomin.w x8, x8, (x3) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x9)
li x9, 0x78e4a48ae69b9a25 # load random value
la x6, scratch # base address
sd x9, 0(x6) # store in memory
li x9, 0x7ed8b0eac19c92d7 # load another value into integer register
amomin.w x9, x9, (x6) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x10)
li x10, 0x28d3bf2c82f814e7 # load random value
la x1, scratch # base address
sd x10, 0(x1) # store in memory
li x10, 0x8ae446f28b58701c # load another value into integer register
amomin.w x10, x10, (x1) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x11)
li x11, 0x75b4d942eaa04fd0 # load random value
la x7, scratch # base address
sd x11, 0(x7) # store in memory
li x11, 0xf79f5900a41548b3 # load another value into integer register
amomin.w x11, x11, (x7) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x12)
li x12, 0x7700149a09a3a2b3 # load random value
la x6, scratch # base address
sd x12, 0(x6) # store in memory
li x12, 0x7f4e52a835dd2913 # load another value into integer register
amomin.w x12, x12, (x6) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x13)
li x13, 0x6a678f991ab1e3a2 # load random value
la x16, scratch # base address
sd x13, 0(x16) # store in memory
li x13, 0xdfbc576971eab0eb # load another value into integer register
amomin.w x13, x13, (x16) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x14)
li x14, 0xde4f9c81f5fd890c # load random value
la x30, scratch # base address
sd x14, 0(x30) # store in memory
li x14, 0xd33f2e8cabfad74f # load another value into integer register
amomin.w x14, x14, (x30) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x15)
li x15, 0x7ffbbf060305a361 # load random value
la x16, scratch # base address
sd x15, 0(x16) # store in memory
li x15, 0x4f480f12ad4dc0b8 # load another value into integer register
amomin.w x15, x15, (x16) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x16)
li x16, 0x18199541defb5c3e # load random value
la x3, scratch # base address
sd x16, 0(x3) # store in memory
li x16, 0xf56344cc75d7988a # load another value into integer register
amomin.w x16, x16, (x3) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x17)
li x17, 0x86391b4db5b995fc # load random value
la x10, scratch # base address
sd x17, 0(x10) # store in memory
li x17, 0x9ec00f5e18c2e857 # load another value into integer register
amomin.w x17, x17, (x10) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x18)
li x18, 0xca7ee836f762eeea # load random value
la x1, scratch # base address
sd x18, 0(x1) # store in memory
li x18, 0x471cc85880a19442 # load another value into integer register
amomin.w x18, x18, (x1) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x19)
li x19, 0xebbcbf3b62195e4d # load random value
la x16, scratch # base address
sd x19, 0(x16) # store in memory
li x19, 0x8493ecb2a92f7870 # load another value into integer register
amomin.w x19, x19, (x16) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x20)
li x20, 0x790a501f66b0e78f # load random value
la x18, scratch # base address
sd x20, 0(x18) # store in memory
li x20, 0x05720ea515b0c9d5 # load another value into integer register
amomin.w x20, x20, (x18) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x21)
li x21, 0x0c1ada3552216a00 # load random value
la x22, scratch # base address
sd x21, 0(x22) # store in memory
li x21, 0xb84dbd6e09676f74 # load another value into integer register
amomin.w x21, x21, (x22) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x22)
li x22, 0xcf31af15cf338dd1 # load random value
la x29, scratch # base address
sd x22, 0(x29) # store in memory
li x22, 0x4cb1a00539d3fe29 # load another value into integer register
amomin.w x22, x22, (x29) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x23)
li x23, 0x0ade1be420a52fda # load random value
la x2, scratch # base address
sd x23, 0(x2) # store in memory
li x23, 0x2c51af8162bcf991 # load another value into integer register
amomin.w x23, x23, (x2) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x24)
li x24, 0xe191bf71f25d4311 # load random value
la x21, scratch # base address
sd x24, 0(x21) # store in memory
li x24, 0xbd638563b23758af # load another value into integer register
amomin.w x24, x24, (x21) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x25)
li x25, 0x83e50fd89e441b86 # load random value
la x3, scratch # base address
sd x25, 0(x3) # store in memory
li x25, 0x470f20dd0e278c0c # load another value into integer register
amomin.w x25, x25, (x3) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x26)
li x26, 0xb5b24e3facd10bda # load random value
la x29, scratch # base address
sd x26, 0(x29) # store in memory
li x26, 0xf43f0dee3c2adcd0 # load another value into integer register
amomin.w x26, x26, (x29) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x27)
li x27, 0xbdb9727911ef2186 # load random value
la x11, scratch # base address
sd x27, 0(x11) # store in memory
li x27, 0x2c5d1b94b6a46ada # load another value into integer register
amomin.w x27, x27, (x11) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x28)
li x28, 0xf862ec8c95df2af1 # load random value
la x30, scratch # base address
sd x28, 0(x30) # store in memory
li x28, 0xd61665c1d691674b # load another value into integer register
amomin.w x28, x28, (x30) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x29)
li x29, 0x693ac1109ed5f07e # load random value
la x30, scratch # base address
sd x29, 0(x30) # store in memory
li x29, 0xc6fb255c05cf1c4e # load another value into integer register
amomin.w x29, x29, (x30) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x30)
li x30, 0x06fa77a9aa9cb943 # load random value
la x8, scratch # base address
sd x30, 0(x8) # store in memory
li x30, 0x4b73c30a3a1aa6c2 # load another value into integer register
amomin.w x30, x30, (x8) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x31)
li x31, 0x17327ed36c7719a2 # load random value
la x9, scratch # base address
sd x31, 0(x9) # store in memory
li x31, 0x37f2854bbd82c180 # load another value into integer register
amomin.w x31, x31, (x9) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x1)
li x1, 0x131ecec3a00ef513 # load random value
la x1, scratch # base address
sd x1, 0(x1) # store in memory
amomin.w x1, x1, (x1) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x2)
li x2, 0xc2d40744e116fd12 # load random value
la x2, scratch # base address
sd x2, 0(x2) # store in memory
amomin.w x2, x2, (x2) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x3)
li x3, 0xb13cb1f949f26c9b # load random value
la x3, scratch # base address
sd x3, 0(x3) # store in memory
amomin.w x3, x3, (x3) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x4)
mv x5, x4 # switch signature pointer register to avoid conflict with test
li x4, 0xbce5c3a9ff4bfda9 # load random value
la x4, scratch # base address
sd x4, 0(x4) # store in memory
amomin.w x4, x4, (x4) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x5)
mv x6, x5 # switch signature pointer register to avoid conflict with test
li x5, 0xda199ecc0b18576b # load random value
la x5, scratch # base address
sd x5, 0(x5) # store in memory
amomin.w x5, x5, (x5) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x6)
mv x7, x6 # switch signature pointer register to avoid conflict with test
li x6, 0x83b9d627858585a6 # load random value
la x6, scratch # base address
sd x6, 0(x6) # store in memory
amomin.w x6, x6, (x6) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x7)
mv x4, x7 # switch signature pointer register to avoid conflict with test
li x7, 0x7df5193f2d04aef6 # load random value
la x7, scratch # base address
sd x7, 0(x7) # store in memory
amomin.w x7, x7, (x7) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x8)
li x8, 0x395a809cc5bb7be3 # load random value
la x8, scratch # base address
sd x8, 0(x8) # store in memory
amomin.w x8, x8, (x8) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x9)
li x9, 0x7856643559e06230 # load random value
la x9, scratch # base address
sd x9, 0(x9) # store in memory
amomin.w x9, x9, (x9) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x10)
li x10, 0x68da902fae1bcdfe # load random value
la x10, scratch # base address
sd x10, 0(x10) # store in memory
amomin.w x10, x10, (x10) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x11)
li x11, 0xa3d0fcd5acd9f715 # load random value
la x11, scratch # base address
sd x11, 0(x11) # store in memory
amomin.w x11, x11, (x11) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x12)
li x12, 0x257f0dfb1832c349 # load random value
la x12, scratch # base address
sd x12, 0(x12) # store in memory
amomin.w x12, x12, (x12) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x13)
li x13, 0x5035f96912a5cbeb # load random value
la x13, scratch # base address
sd x13, 0(x13) # store in memory
amomin.w x13, x13, (x13) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x14)
li x14, 0xfb45488414922f31 # load random value
la x14, scratch # base address
sd x14, 0(x14) # store in memory
amomin.w x14, x14, (x14) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x15)
li x15, 0xe8302eae6dcd79ab # load random value
la x15, scratch # base address
sd x15, 0(x15) # store in memory
amomin.w x15, x15, (x15) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x16)
li x16, 0x0760ad580f404757 # load random value
la x16, scratch # base address
sd x16, 0(x16) # store in memory
amomin.w x16, x16, (x16) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x17)
li x17, 0x15882f7f78dd1aa8 # load random value
la x17, scratch # base address
sd x17, 0(x17) # store in memory
amomin.w x17, x17, (x17) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x18)
li x18, 0x06a88354dbbc8017 # load random value
la x18, scratch # base address
sd x18, 0(x18) # store in memory
amomin.w x18, x18, (x18) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x19)
li x19, 0xcec40307fd9df06e # load random value
la x19, scratch # base address
sd x19, 0(x19) # store in memory
amomin.w x19, x19, (x19) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x20)
li x20, 0x0c0a3d8f8fb1e41a # load random value
la x20, scratch # base address
sd x20, 0(x20) # store in memory
amomin.w x20, x20, (x20) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x21)
li x21, 0xfb074a8f3b429b48 # load random value
la x21, scratch # base address
sd x21, 0(x21) # store in memory
amomin.w x21, x21, (x21) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x22)
li x22, 0x0045658ac768da02 # load random value
la x22, scratch # base address
sd x22, 0(x22) # store in memory
amomin.w x22, x22, (x22) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x23)
li x23, 0x60ee262c9c0848a0 # load random value
la x23, scratch # base address
sd x23, 0(x23) # store in memory
amomin.w x23, x23, (x23) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x24)
li x24, 0xf9973b9afef27545 # load random value
la x24, scratch # base address
sd x24, 0(x24) # store in memory
amomin.w x24, x24, (x24) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x25)
li x25, 0x578465845097926a # load random value
la x25, scratch # base address
sd x25, 0(x25) # store in memory
amomin.w x25, x25, (x25) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x26)
li x26, 0x7dbedf8c8b695800 # load random value
la x26, scratch # base address
sd x26, 0(x26) # store in memory
amomin.w x26, x26, (x26) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x27)
li x27, 0x08688a5bb2807de8 # load random value
la x27, scratch # base address
sd x27, 0(x27) # store in memory
amomin.w x27, x27, (x27) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x28)
li x28, 0x0cba538a778c59ba # load random value
la x28, scratch # base address
sd x28, 0(x28) # store in memory
amomin.w x28, x28, (x28) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x29)
li x29, 0x1515141ea2eabde7 # load random value
la x29, scratch # base address
sd x29, 0(x29) # store in memory
amomin.w x29, x29, (x29) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x30)
li x30, 0xf09ccd931cc6e7c6 # load random value
la x30, scratch # base address
sd x30, 0(x30) # store in memory
amomin.w x30, x30, (x30) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x31)
li x31, 0x89c6103e8b432cb3 # load random value
la x31, scratch # base address
sd x31, 0(x31) # store in memory
amomin.w x31, x31, (x31) # perform operation

# Testcase cp_gpr/fpr_hazard nohaz test
la x2, scratch
add x19, x17, x12 # perform first operation
amomin.w x14, x13, (x2) # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard nohaz test
la x30, scratch
add x31, x6, x29 # perform first operation
amomin.w x7, x12, (x30) # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard nohaz test
la x14, scratch
add x2, x15, x1 # perform first operation
amomin.w x30, x27, (x14) # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard raw test
la x10, scratch
add x18, x18, x0 # perform first operation
amomin.w x5, x18, (x10) # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard raw test
la x11, scratch
add x11, x11, x0 # perform first operation
amomin.w x11, x20, (x11) # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard raw test
la x19, scratch
add x8, x8, x0 # perform first operation
amomin.w x8, x1, (x19) # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard waw test
la x26, scratch
add x8, x6, x30 # perform first operation
amomin.w x8, x17, (x26) # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard waw test
la x24, scratch
add x15, x20, x21 # perform first operation
amomin.w x15, x29, (x24) # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard waw test
la x22, scratch
add x15, x10, x24 # perform first operation
amomin.w x15, x12, (x22) # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard war test
la x17, scratch
add x7, x26, x21 # perform first operation
amomin.w x26, x10, (x17) # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard war test
la x19, scratch
add x18, x20, x6 # perform first operation
amomin.w x6, x12, (x19) # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard war test
la x6, scratch
add x21, x22, x31 # perform first operation
amomin.w x8, x14, (x6) # perform second (triggering) operation

#.EQU SIGSIZE,0


// ******************
// Tests from: WALLY-COV-amoswap.d.S
// ******************


# initialize signature pointer
la x4, begin_signature

    
# Testcase cp_rs1 (Test source rs1 = x1)
li x6, 0x55fbecc4d87409e4 # load random value
la x1, scratch # base address
sd x6, 0(x1) # store in memory
li x6, 0xb563fe4622d6594e # load another value into integer register
amoswap.d x28, x6, (x1) # perform operation

# Testcase cp_rs1 (Test source rs1 = x2)
li x19, 0x4a02a7339905695a # load random value
la x2, scratch # base address
sd x19, 0(x2) # store in memory
li x19, 0xfea7c6422f245027 # load another value into integer register
amoswap.d x31, x19, (x2) # perform operation

# Testcase cp_rs1 (Test source rs1 = x3)
li x24, 0xb9a6be13c25e58c1 # load random value
la x3, scratch # base address
sd x24, 0(x3) # store in memory
li x24, 0x13d98baa8beda5e3 # load another value into integer register
amoswap.d x15, x24, (x3) # perform operation

# Testcase cp_rs1 (Test source rs1 = x4)
mv x5, x4 # switch signature pointer register to avoid conflict with test
li x17, 0xed55d89e0908ed35 # load random value
la x4, scratch # base address
sd x17, 0(x4) # store in memory
li x17, 0xb5ce8c1b8188cf9a # load another value into integer register
amoswap.d x10, x17, (x4) # perform operation

# Testcase cp_rs1 (Test source rs1 = x5)
mv x6, x5 # switch signature pointer register to avoid conflict with test
li x16, 0xc101c8fc4aad8f84 # load random value
la x5, scratch # base address
sd x16, 0(x5) # store in memory
li x16, 0x10dfe45e8b1da48f # load another value into integer register
amoswap.d x21, x16, (x5) # perform operation

# Testcase cp_rs1 (Test source rs1 = x6)
mv x7, x6 # switch signature pointer register to avoid conflict with test
li x14, 0x623d21af4bcab583 # load random value
la x6, scratch # base address
sd x14, 0(x6) # store in memory
li x14, 0x78ef947d44839ca5 # load another value into integer register
amoswap.d x15, x14, (x6) # perform operation

# Testcase cp_rs1 (Test source rs1 = x7)
mv x4, x7 # switch signature pointer register to avoid conflict with test
li x13, 0x476e04a7d04ff434 # load random value
la x7, scratch # base address
sd x13, 0(x7) # store in memory
li x13, 0x34e6c536bbeca081 # load another value into integer register
amoswap.d x28, x13, (x7) # perform operation

# Testcase cp_rs1 (Test source rs1 = x8)
li x23, 0xd41c39e9c8545a4b # load random value
la x8, scratch # base address
sd x23, 0(x8) # store in memory
li x23, 0x172dd75e72b16a0c # load another value into integer register
amoswap.d x28, x23, (x8) # perform operation

# Testcase cp_rs1 (Test source rs1 = x9)
li x14, 0x261d81e4391c70d3 # load random value
la x9, scratch # base address
sd x14, 0(x9) # store in memory
li x14, 0xc03d82eff9f38e15 # load another value into integer register
amoswap.d x11, x14, (x9) # perform operation

# Testcase cp_rs1 (Test source rs1 = x10)
li x11, 0x90355ab94841ffbe # load random value
la x10, scratch # base address
sd x11, 0(x10) # store in memory
li x11, 0x10217ace8a3f666a # load another value into integer register
amoswap.d x16, x11, (x10) # perform operation

# Testcase cp_rs1 (Test source rs1 = x11)
li x9, 0x6a93003963414f4c # load random value
la x11, scratch # base address
sd x9, 0(x11) # store in memory
li x9, 0xacbe46cec385969b # load another value into integer register
amoswap.d x3, x9, (x11) # perform operation

# Testcase cp_rs1 (Test source rs1 = x12)
li x24, 0x60d159eab1e30da2 # load random value
la x12, scratch # base address
sd x24, 0(x12) # store in memory
li x24, 0x63824a3a2c42ad3d # load another value into integer register
amoswap.d x28, x24, (x12) # perform operation

# Testcase cp_rs1 (Test source rs1 = x13)
li x10, 0xc7334eedd59cd0ca # load random value
la x13, scratch # base address
sd x10, 0(x13) # store in memory
li x10, 0x24b956fd5f60db6e # load another value into integer register
amoswap.d x23, x10, (x13) # perform operation

# Testcase cp_rs1 (Test source rs1 = x14)
li x9, 0x6fe631aaa52b4885 # load random value
la x14, scratch # base address
sd x9, 0(x14) # store in memory
li x9, 0x8107123092fd1205 # load another value into integer register
amoswap.d x10, x9, (x14) # perform operation

# Testcase cp_rs1 (Test source rs1 = x15)
li x30, 0xd3f89f4b0fb2981f # load random value
la x15, scratch # base address
sd x30, 0(x15) # store in memory
li x30, 0x88011bea23e99998 # load another value into integer register
amoswap.d x3, x30, (x15) # perform operation

# Testcase cp_rs1 (Test source rs1 = x16)
li x1, 0xa16b4d3e00574220 # load random value
la x16, scratch # base address
sd x1, 0(x16) # store in memory
li x1, 0xe5508a08d6d358c1 # load another value into integer register
amoswap.d x8, x1, (x16) # perform operation

# Testcase cp_rs1 (Test source rs1 = x17)
li x29, 0xd9865575f3b096d3 # load random value
la x17, scratch # base address
sd x29, 0(x17) # store in memory
li x29, 0x3905d08af5e5da2e # load another value into integer register
amoswap.d x5, x29, (x17) # perform operation

# Testcase cp_rs1 (Test source rs1 = x18)
li x30, 0xc0fe895dd2f5680f # load random value
la x18, scratch # base address
sd x30, 0(x18) # store in memory
li x30, 0xe38a812e6033b6d1 # load another value into integer register
amoswap.d x31, x30, (x18) # perform operation

# Testcase cp_rs1 (Test source rs1 = x19)
li x16, 0x1aeb4ec703f50c7e # load random value
la x19, scratch # base address
sd x16, 0(x19) # store in memory
li x16, 0x750017d6c51eca3b # load another value into integer register
amoswap.d x17, x16, (x19) # perform operation

# Testcase cp_rs1 (Test source rs1 = x20)
li x3, 0x8217d04c995a048a # load random value
la x20, scratch # base address
sd x3, 0(x20) # store in memory
li x3, 0x398574132494b6eb # load another value into integer register
amoswap.d x28, x3, (x20) # perform operation

# Testcase cp_rs1 (Test source rs1 = x21)
li x14, 0xfe67d92c21c4f523 # load random value
la x21, scratch # base address
sd x14, 0(x21) # store in memory
li x14, 0xbffa849a64bd8e0d # load another value into integer register
amoswap.d x5, x14, (x21) # perform operation

# Testcase cp_rs1 (Test source rs1 = x22)
li x6, 0xd5adeb35739f6634 # load random value
la x22, scratch # base address
sd x6, 0(x22) # store in memory
li x6, 0xc65bd1724701f229 # load another value into integer register
amoswap.d x9, x6, (x22) # perform operation

# Testcase cp_rs1 (Test source rs1 = x23)
li x7, 0x40a7b7740183e3ac # load random value
la x23, scratch # base address
sd x7, 0(x23) # store in memory
li x7, 0xb63180fe7749aeee # load another value into integer register
amoswap.d x10, x7, (x23) # perform operation

# Testcase cp_rs1 (Test source rs1 = x24)
li x1, 0x2677caa1bd2e30c9 # load random value
la x24, scratch # base address
sd x1, 0(x24) # store in memory
li x1, 0x58d1fe74c73a0dba # load another value into integer register
amoswap.d x8, x1, (x24) # perform operation

# Testcase cp_rs1 (Test source rs1 = x25)
li x15, 0x09ad96a57334a951 # load random value
la x25, scratch # base address
sd x15, 0(x25) # store in memory
li x15, 0x1660684b5282a456 # load another value into integer register
amoswap.d x1, x15, (x25) # perform operation

# Testcase cp_rs1 (Test source rs1 = x26)
li x23, 0x978b699106650622 # load random value
la x26, scratch # base address
sd x23, 0(x26) # store in memory
li x23, 0x2d41a3d5474d6824 # load another value into integer register
amoswap.d x6, x23, (x26) # perform operation

# Testcase cp_rs1 (Test source rs1 = x27)
li x13, 0x56c2f4891eef23e3 # load random value
la x27, scratch # base address
sd x13, 0(x27) # store in memory
li x13, 0xdad98a8c67a52fb9 # load another value into integer register
amoswap.d x16, x13, (x27) # perform operation

# Testcase cp_rs1 (Test source rs1 = x28)
li x3, 0xb1b882b9621879e8 # load random value
la x28, scratch # base address
sd x3, 0(x28) # store in memory
li x3, 0xd6c766a8b3266cff # load another value into integer register
amoswap.d x9, x3, (x28) # perform operation

# Testcase cp_rs1 (Test source rs1 = x29)
li x18, 0x62b07203793ba0e9 # load random value
la x29, scratch # base address
sd x18, 0(x29) # store in memory
li x18, 0xb10117040ccd8b43 # load another value into integer register
amoswap.d x25, x18, (x29) # perform operation

# Testcase cp_rs1 (Test source rs1 = x30)
li x28, 0x9ffd446e2efbbfe0 # load random value
la x30, scratch # base address
sd x28, 0(x30) # store in memory
li x28, 0x1f95d9469c97b511 # load another value into integer register
amoswap.d x21, x28, (x30) # perform operation

# Testcase cp_rs1 (Test source rs1 = x31)
li x8, 0xafd7a93004033895 # load random value
la x31, scratch # base address
sd x8, 0(x31) # store in memory
li x8, 0xeb0a8ec45fb6a12c # load another value into integer register
amoswap.d x2, x8, (x31) # perform operation

# Testcase cp_rs2 (Test source rs2 = x0)
li x0, 0x6720c07d1c927c21 # load random value
la x2, scratch # base address
sd x0, 0(x2) # store in memory
li x0, 0x440abdd6b9cf6801 # load another value into integer register
amoswap.d x29, x0, (x2) # perform operation

# Testcase cp_rs2 (Test source rs2 = x1)
li x1, 0x757bfff55b9ab1c5 # load random value
la x13, scratch # base address
sd x1, 0(x13) # store in memory
li x1, 0x4363175932b9b954 # load another value into integer register
amoswap.d x6, x1, (x13) # perform operation

# Testcase cp_rs2 (Test source rs2 = x2)
li x2, 0x71901c0cf747a200 # load random value
la x7, scratch # base address
sd x2, 0(x7) # store in memory
li x2, 0x5f576cadb8eb09e9 # load another value into integer register
amoswap.d x11, x2, (x7) # perform operation

# Testcase cp_rs2 (Test source rs2 = x3)
li x3, 0xd96e515fd15288f4 # load random value
la x11, scratch # base address
sd x3, 0(x11) # store in memory
li x3, 0x31a0ef5aca7638cb # load another value into integer register
amoswap.d x15, x3, (x11) # perform operation

# Testcase cp_rs2 (Test source rs2 = x4)
mv x5, x4 # switch signature pointer register to avoid conflict with test
li x4, 0xcc79734cdff9a279 # load random value
la x10, scratch # base address
sd x4, 0(x10) # store in memory
li x4, 0x8cc469cb5c26b752 # load another value into integer register
amoswap.d x12, x4, (x10) # perform operation

# Testcase cp_rs2 (Test source rs2 = x5)
mv x6, x5 # switch signature pointer register to avoid conflict with test
li x5, 0xafb92e0ef014cbc1 # load random value
la x28, scratch # base address
sd x5, 0(x28) # store in memory
li x5, 0x76e8e83c203edd73 # load another value into integer register
amoswap.d x30, x5, (x28) # perform operation

# Testcase cp_rs2 (Test source rs2 = x6)
mv x7, x6 # switch signature pointer register to avoid conflict with test
li x6, 0x7a01ff66f6f54401 # load random value
la x23, scratch # base address
sd x6, 0(x23) # store in memory
li x6, 0xf7ba897c489ca1ff # load another value into integer register
amoswap.d x24, x6, (x23) # perform operation

# Testcase cp_rs2 (Test source rs2 = x7)
mv x4, x7 # switch signature pointer register to avoid conflict with test
li x7, 0xfd2668b2e21106b2 # load random value
la x3, scratch # base address
sd x7, 0(x3) # store in memory
li x7, 0xcc645417c3fa5a48 # load another value into integer register
amoswap.d x18, x7, (x3) # perform operation

# Testcase cp_rs2 (Test source rs2 = x8)
li x8, 0x8078a171b6f90988 # load random value
la x31, scratch # base address
sd x8, 0(x31) # store in memory
li x8, 0xc6cb2045ffbb42da # load another value into integer register
amoswap.d x28, x8, (x31) # perform operation

# Testcase cp_rs2 (Test source rs2 = x9)
li x9, 0x0e859147930e73c9 # load random value
la x7, scratch # base address
sd x9, 0(x7) # store in memory
li x9, 0x1c9feb93e0dd7024 # load another value into integer register
amoswap.d x1, x9, (x7) # perform operation

# Testcase cp_rs2 (Test source rs2 = x10)
li x10, 0x3b2c6326272f0c57 # load random value
la x11, scratch # base address
sd x10, 0(x11) # store in memory
li x10, 0xb3a8ce3c71c460cf # load another value into integer register
amoswap.d x2, x10, (x11) # perform operation

# Testcase cp_rs2 (Test source rs2 = x11)
li x11, 0x53003f4bc6129357 # load random value
la x3, scratch # base address
sd x11, 0(x3) # store in memory
li x11, 0xe8a977c42c3299a9 # load another value into integer register
amoswap.d x1, x11, (x3) # perform operation

# Testcase cp_rs2 (Test source rs2 = x12)
li x12, 0x16df034adbf7167e # load random value
la x8, scratch # base address
sd x12, 0(x8) # store in memory
li x12, 0x4c11d35a6408e3ed # load another value into integer register
amoswap.d x17, x12, (x8) # perform operation

# Testcase cp_rs2 (Test source rs2 = x13)
li x13, 0xe2f4c2e2e6944536 # load random value
la x24, scratch # base address
sd x13, 0(x24) # store in memory
li x13, 0x7abe8ef4db93e899 # load another value into integer register
amoswap.d x18, x13, (x24) # perform operation

# Testcase cp_rs2 (Test source rs2 = x14)
li x14, 0xa476bd137bd7d0b1 # load random value
la x24, scratch # base address
sd x14, 0(x24) # store in memory
li x14, 0x48d1ab633da154e7 # load another value into integer register
amoswap.d x31, x14, (x24) # perform operation

# Testcase cp_rs2 (Test source rs2 = x15)
li x15, 0x0ac55e381683301c # load random value
la x6, scratch # base address
sd x15, 0(x6) # store in memory
li x15, 0xc0ca4fd3dea35c79 # load another value into integer register
amoswap.d x23, x15, (x6) # perform operation

# Testcase cp_rs2 (Test source rs2 = x16)
li x16, 0x61a2a9578d316afb # load random value
la x25, scratch # base address
sd x16, 0(x25) # store in memory
li x16, 0x743a373c77eb8ab5 # load another value into integer register
amoswap.d x2, x16, (x25) # perform operation

# Testcase cp_rs2 (Test source rs2 = x17)
li x17, 0x6b595846a1dbfe96 # load random value
la x9, scratch # base address
sd x17, 0(x9) # store in memory
li x17, 0x074ca852ee6e21e3 # load another value into integer register
amoswap.d x16, x17, (x9) # perform operation

# Testcase cp_rs2 (Test source rs2 = x18)
li x18, 0x444a1dcd30f82b81 # load random value
la x20, scratch # base address
sd x18, 0(x20) # store in memory
li x18, 0x2012168b0540887f # load another value into integer register
amoswap.d x29, x18, (x20) # perform operation

# Testcase cp_rs2 (Test source rs2 = x19)
li x19, 0xc4aeacda4784a688 # load random value
la x9, scratch # base address
sd x19, 0(x9) # store in memory
li x19, 0xee9c7fa831d32b18 # load another value into integer register
amoswap.d x5, x19, (x9) # perform operation

# Testcase cp_rs2 (Test source rs2 = x20)
li x20, 0x7a303757286c51d4 # load random value
la x14, scratch # base address
sd x20, 0(x14) # store in memory
li x20, 0xf173936ccc07935e # load another value into integer register
amoswap.d x21, x20, (x14) # perform operation

# Testcase cp_rs2 (Test source rs2 = x21)
li x21, 0x0c9e2ca0b1777e06 # load random value
la x30, scratch # base address
sd x21, 0(x30) # store in memory
li x21, 0x769be368b5ba24a9 # load another value into integer register
amoswap.d x6, x21, (x30) # perform operation

# Testcase cp_rs2 (Test source rs2 = x22)
li x22, 0x09f4731fdcf544eb # load random value
la x19, scratch # base address
sd x22, 0(x19) # store in memory
li x22, 0x0abe58968057cd68 # load another value into integer register
amoswap.d x7, x22, (x19) # perform operation

# Testcase cp_rs2 (Test source rs2 = x23)
li x23, 0x0b399ba10c44ae78 # load random value
la x16, scratch # base address
sd x23, 0(x16) # store in memory
li x23, 0x95892934dc2f443c # load another value into integer register
amoswap.d x31, x23, (x16) # perform operation

# Testcase cp_rs2 (Test source rs2 = x24)
li x24, 0x8a3d5d68b6dd9080 # load random value
la x27, scratch # base address
sd x24, 0(x27) # store in memory
li x24, 0xd78e030ac2265eca # load another value into integer register
amoswap.d x3, x24, (x27) # perform operation

# Testcase cp_rs2 (Test source rs2 = x25)
li x25, 0xfe2f4de9b246feb1 # load random value
la x18, scratch # base address
sd x25, 0(x18) # store in memory
li x25, 0xf078fcdd1d5190b4 # load another value into integer register
amoswap.d x22, x25, (x18) # perform operation

# Testcase cp_rs2 (Test source rs2 = x26)
li x26, 0x7c0e35f8a0076e5e # load random value
la x20, scratch # base address
sd x26, 0(x20) # store in memory
li x26, 0x9d5657f8ce89aa1a # load another value into integer register
amoswap.d x30, x26, (x20) # perform operation

# Testcase cp_rs2 (Test source rs2 = x27)
li x27, 0xdf5448c2121b7288 # load random value
la x24, scratch # base address
sd x27, 0(x24) # store in memory
li x27, 0xa0f3fe475da2ddc0 # load another value into integer register
amoswap.d x9, x27, (x24) # perform operation

# Testcase cp_rs2 (Test source rs2 = x28)
li x28, 0x2c88bc07d3682187 # load random value
la x16, scratch # base address
sd x28, 0(x16) # store in memory
li x28, 0xfda0f3d3a8ba782a # load another value into integer register
amoswap.d x3, x28, (x16) # perform operation

# Testcase cp_rs2 (Test source rs2 = x29)
li x29, 0xff7dbcbd4b737ef7 # load random value
la x24, scratch # base address
sd x29, 0(x24) # store in memory
li x29, 0x23177a6359de11cf # load another value into integer register
amoswap.d x22, x29, (x24) # perform operation

# Testcase cp_rs2 (Test source rs2 = x30)
li x30, 0xb17fcc3d9e51b2a5 # load random value
la x23, scratch # base address
sd x30, 0(x23) # store in memory
li x30, 0x421e39fa3fc70354 # load another value into integer register
amoswap.d x16, x30, (x23) # perform operation

# Testcase cp_rs2 (Test source rs2 = x31)
li x31, 0x9fd6185b6b8537e4 # load random value
la x5, scratch # base address
sd x31, 0(x5) # store in memory
li x31, 0x5db7d20bad43af73 # load another value into integer register
amoswap.d x25, x31, (x5) # perform operation

# Testcase cp_rd (Test destination rd = x0)
li x18, 0x03fb945e62ebe9df # load random value
la x2, scratch # base address
sd x18, 0(x2) # store in memory
li x18, 0xd417dde7b4b203e2 # load another value into integer register
amoswap.d x0, x18, (x2) # perform operation

# Testcase cp_rd (Test destination rd = x1)
li x28, 0x8d82e2d1ba95d217 # load random value
la x9, scratch # base address
sd x28, 0(x9) # store in memory
li x28, 0x14a6e5ca74e1691b # load another value into integer register
amoswap.d x1, x28, (x9) # perform operation

# Testcase cp_rd (Test destination rd = x2)
li x1, 0xdd89aa897d94b0bc # load random value
la x20, scratch # base address
sd x1, 0(x20) # store in memory
li x1, 0x74c7e7c18fdafae9 # load another value into integer register
amoswap.d x2, x1, (x20) # perform operation

# Testcase cp_rd (Test destination rd = x3)
li x13, 0x28eb834fd8b9948f # load random value
la x30, scratch # base address
sd x13, 0(x30) # store in memory
li x13, 0x6f02c5f83794b177 # load another value into integer register
amoswap.d x3, x13, (x30) # perform operation

# Testcase cp_rd (Test destination rd = x4)
mv x5, x4 # switch signature pointer register to avoid conflict with test
li x21, 0x2e5023d405399e58 # load random value
la x16, scratch # base address
sd x21, 0(x16) # store in memory
li x21, 0x24d84e5917d8669f # load another value into integer register
amoswap.d x4, x21, (x16) # perform operation

# Testcase cp_rd (Test destination rd = x5)
mv x6, x5 # switch signature pointer register to avoid conflict with test
li x3, 0x3405e6fcb0989aaa # load random value
la x9, scratch # base address
sd x3, 0(x9) # store in memory
li x3, 0xf1f0d96480b6f4e8 # load another value into integer register
amoswap.d x5, x3, (x9) # perform operation

# Testcase cp_rd (Test destination rd = x6)
mv x7, x6 # switch signature pointer register to avoid conflict with test
li x1, 0x76386dc86735f4eb # load random value
la x12, scratch # base address
sd x1, 0(x12) # store in memory
li x1, 0x6fbb768a274f5496 # load another value into integer register
amoswap.d x6, x1, (x12) # perform operation

# Testcase cp_rd (Test destination rd = x7)
mv x4, x7 # switch signature pointer register to avoid conflict with test
li x1, 0xe40b24561008f5d8 # load random value
la x3, scratch # base address
sd x1, 0(x3) # store in memory
li x1, 0xf912a4cc0e716a59 # load another value into integer register
amoswap.d x7, x1, (x3) # perform operation

# Testcase cp_rd (Test destination rd = x8)
li x26, 0x6319b48e7e85b9f8 # load random value
la x24, scratch # base address
sd x26, 0(x24) # store in memory
li x26, 0xb3e8d1ab3286995b # load another value into integer register
amoswap.d x8, x26, (x24) # perform operation

# Testcase cp_rd (Test destination rd = x9)
li x9, 0xa102c2a60127763e # load random value
la x2, scratch # base address
sd x9, 0(x2) # store in memory
li x9, 0x9f15044c441f0631 # load another value into integer register
amoswap.d x9, x9, (x2) # perform operation

# Testcase cp_rd (Test destination rd = x10)
li x8, 0x8dfbfed77387ec64 # load random value
la x14, scratch # base address
sd x8, 0(x14) # store in memory
li x8, 0x46fe7c07d9f19dc3 # load another value into integer register
amoswap.d x10, x8, (x14) # perform operation

# Testcase cp_rd (Test destination rd = x11)
li x22, 0xbc23f39d9d162e7a # load random value
la x28, scratch # base address
sd x22, 0(x28) # store in memory
li x22, 0x5532364d5379da5a # load another value into integer register
amoswap.d x11, x22, (x28) # perform operation

# Testcase cp_rd (Test destination rd = x12)
li x2, 0x21853bfd9e8f125a # load random value
la x23, scratch # base address
sd x2, 0(x23) # store in memory
li x2, 0x8522f400ef2a2c29 # load another value into integer register
amoswap.d x12, x2, (x23) # perform operation

# Testcase cp_rd (Test destination rd = x13)
li x14, 0x21b61bf977beb6b8 # load random value
la x30, scratch # base address
sd x14, 0(x30) # store in memory
li x14, 0x8a820a995acdca69 # load another value into integer register
amoswap.d x13, x14, (x30) # perform operation

# Testcase cp_rd (Test destination rd = x14)
li x26, 0x2c630ec19714e160 # load random value
la x21, scratch # base address
sd x26, 0(x21) # store in memory
li x26, 0x6ae7ed7e44b51667 # load another value into integer register
amoswap.d x14, x26, (x21) # perform operation

# Testcase cp_rd (Test destination rd = x15)
li x23, 0xb2e3284ad611af27 # load random value
la x14, scratch # base address
sd x23, 0(x14) # store in memory
li x23, 0xbfb2b9b243a40234 # load another value into integer register
amoswap.d x15, x23, (x14) # perform operation

# Testcase cp_rd (Test destination rd = x16)
li x30, 0x505cf0aaad66659d # load random value
la x1, scratch # base address
sd x30, 0(x1) # store in memory
li x30, 0xbf17d5ea603e0955 # load another value into integer register
amoswap.d x16, x30, (x1) # perform operation

# Testcase cp_rd (Test destination rd = x17)
li x7, 0x089d982379a4fca2 # load random value
la x20, scratch # base address
sd x7, 0(x20) # store in memory
li x7, 0x9369004d149c6fb5 # load another value into integer register
amoswap.d x17, x7, (x20) # perform operation

# Testcase cp_rd (Test destination rd = x18)
li x7, 0x0c17e51310c53dd9 # load random value
la x11, scratch # base address
sd x7, 0(x11) # store in memory
li x7, 0x0c7faf63c49061ab # load another value into integer register
amoswap.d x18, x7, (x11) # perform operation

# Testcase cp_rd (Test destination rd = x19)
li x30, 0x9eb4778cd2365158 # load random value
la x21, scratch # base address
sd x30, 0(x21) # store in memory
li x30, 0xb5cef8a409ff8ab2 # load another value into integer register
amoswap.d x19, x30, (x21) # perform operation

# Testcase cp_rd (Test destination rd = x20)
li x12, 0xc2277c30f72b80fa # load random value
la x17, scratch # base address
sd x12, 0(x17) # store in memory
li x12, 0x55750eaec429e646 # load another value into integer register
amoswap.d x20, x12, (x17) # perform operation

# Testcase cp_rd (Test destination rd = x21)
li x14, 0x4704734f7aad5c94 # load random value
la x23, scratch # base address
sd x14, 0(x23) # store in memory
li x14, 0x3c3d529a264d6049 # load another value into integer register
amoswap.d x21, x14, (x23) # perform operation

# Testcase cp_rd (Test destination rd = x22)
li x8, 0xcd09e7ec4088a461 # load random value
la x18, scratch # base address
sd x8, 0(x18) # store in memory
li x8, 0x70d48393f2f2aabb # load another value into integer register
amoswap.d x22, x8, (x18) # perform operation

# Testcase cp_rd (Test destination rd = x23)
li x20, 0xbd7db1d1902a3eb7 # load random value
la x9, scratch # base address
sd x20, 0(x9) # store in memory
li x20, 0x52951a06890604f4 # load another value into integer register
amoswap.d x23, x20, (x9) # perform operation

# Testcase cp_rd (Test destination rd = x24)
li x31, 0x2bec62c6fbef7535 # load random value
la x8, scratch # base address
sd x31, 0(x8) # store in memory
li x31, 0x65d924dbe8276a55 # load another value into integer register
amoswap.d x24, x31, (x8) # perform operation

# Testcase cp_rd (Test destination rd = x25)
li x15, 0x828b17e18dcd5236 # load random value
la x13, scratch # base address
sd x15, 0(x13) # store in memory
li x15, 0xab147151e2200017 # load another value into integer register
amoswap.d x25, x15, (x13) # perform operation

# Testcase cp_rd (Test destination rd = x26)
li x15, 0x1cb460300b0c4c79 # load random value
la x30, scratch # base address
sd x15, 0(x30) # store in memory
li x15, 0xc7428d55aca267ec # load another value into integer register
amoswap.d x26, x15, (x30) # perform operation

# Testcase cp_rd (Test destination rd = x27)
li x9, 0xb35593d424a53f2b # load random value
la x24, scratch # base address
sd x9, 0(x24) # store in memory
li x9, 0x3c4ed908028baacb # load another value into integer register
amoswap.d x27, x9, (x24) # perform operation

# Testcase cp_rd (Test destination rd = x28)
li x14, 0x27b57f89e731e7ec # load random value
la x23, scratch # base address
sd x14, 0(x23) # store in memory
li x14, 0x26accf31aa534c28 # load another value into integer register
amoswap.d x28, x14, (x23) # perform operation

# Testcase cp_rd (Test destination rd = x29)
li x12, 0x061c81b6bf5a70bf # load random value
la x21, scratch # base address
sd x12, 0(x21) # store in memory
li x12, 0x4ab91772b55c074f # load another value into integer register
amoswap.d x29, x12, (x21) # perform operation

# Testcase cp_rd (Test destination rd = x30)
li x28, 0x0f2c6a31d5483a55 # load random value
la x3, scratch # base address
sd x28, 0(x3) # store in memory
li x28, 0xa7335e24a1e9ffb4 # load another value into integer register
amoswap.d x30, x28, (x3) # perform operation

# Testcase cp_rd (Test destination rd = x31)
li x6, 0x5e6830449e255714 # load random value
la x2, scratch # base address
sd x6, 0(x2) # store in memory
li x6, 0x00c07eaae8443100 # load another value into integer register
amoswap.d x31, x6, (x2) # perform operation

# Testcase cp_rs2_corners (Test source rs2 value = 0x0)
li x26, 0x71d5887dcae3c57d # load random value
la x25, scratch # base address
sd x26, 0(x25) # store in memory
li x26, 0x0000000000000000 # load another value into integer register
amoswap.d x9, x26, (x25) # perform operation

# Testcase cp_rs2_corners (Test source rs2 value = 0x1)
li x8, 0x3e2262f15d588cd7 # load random value
la x27, scratch # base address
sd x8, 0(x27) # store in memory
li x8, 0x0000000000000001 # load another value into integer register
amoswap.d x9, x8, (x27) # perform operation

# Testcase cp_rs2_corners (Test source rs2 value = 0x2)
li x30, 0x7d4d183655d2e6f3 # load random value
la x3, scratch # base address
sd x30, 0(x3) # store in memory
li x30, 0x0000000000000002 # load another value into integer register
amoswap.d x5, x30, (x3) # perform operation

# Testcase cp_rs2_corners (Test source rs2 value = 0x8000000000000000)
li x27, 0xd387c14b39eb6302 # load random value
la x26, scratch # base address
sd x27, 0(x26) # store in memory
li x27, 0x8000000000000000 # load another value into integer register
amoswap.d x21, x27, (x26) # perform operation

# Testcase cp_rs2_corners (Test source rs2 value = 0x8000000000000001)
li x27, 0x8b77354c1b1a351b # load random value
la x28, scratch # base address
sd x27, 0(x28) # store in memory
li x27, 0x8000000000000001 # load another value into integer register
amoswap.d x11, x27, (x28) # perform operation

# Testcase cp_rs2_corners (Test source rs2 value = 0x7fffffffffffffff)
li x26, 0x120767287a216047 # load random value
la x20, scratch # base address
sd x26, 0(x20) # store in memory
li x26, 0x7fffffffffffffff # load another value into integer register
amoswap.d x5, x26, (x20) # perform operation

# Testcase cp_rs2_corners (Test source rs2 value = 0x7ffffffffffffffe)
li x15, 0x88cc26e4a8698ac3 # load random value
la x28, scratch # base address
sd x15, 0(x28) # store in memory
li x15, 0x7ffffffffffffffe # load another value into integer register
amoswap.d x25, x15, (x28) # perform operation

# Testcase cp_rs2_corners (Test source rs2 value = 0xffffffffffffffff)
li x18, 0x9b78f09b3039b390 # load random value
la x5, scratch # base address
sd x18, 0(x5) # store in memory
li x18, 0xffffffffffffffff # load another value into integer register
amoswap.d x31, x18, (x5) # perform operation

# Testcase cp_rs2_corners (Test source rs2 value = 0xfffffffffffffffe)
li x17, 0xf189a45b8737254e # load random value
la x21, scratch # base address
sd x17, 0(x21) # store in memory
li x17, 0xfffffffffffffffe # load another value into integer register
amoswap.d x30, x17, (x21) # perform operation

# Testcase cp_rs2_corners (Test source rs2 value = 0x5bbc887763ae86f2)
li x18, 0x8e810bd4a6bd7495 # load random value
la x17, scratch # base address
sd x18, 0(x17) # store in memory
li x18, 0x5bbc887763ae86f2 # load another value into integer register
amoswap.d x22, x18, (x17) # perform operation

# Testcase cp_rs2_corners (Test source rs2 value = 0xaaaaaaaaaaaaaaaa)
li x16, 0x2cd2708ddac1dfeb # load random value
la x6, scratch # base address
sd x16, 0(x6) # store in memory
li x16, 0xaaaaaaaaaaaaaaaa # load another value into integer register
amoswap.d x14, x16, (x6) # perform operation

# Testcase cp_rs2_corners (Test source rs2 value = 0x5555555555555555)
li x12, 0x28bd5eacdf8ccfc7 # load random value
la x17, scratch # base address
sd x12, 0(x17) # store in memory
li x12, 0x5555555555555555 # load another value into integer register
amoswap.d x27, x12, (x17) # perform operation

# Testcase cp_rs2_corners (Test source rs2 value = 0xffffffff)
li x28, 0xbd864d84e4e84732 # load random value
la x2, scratch # base address
sd x28, 0(x2) # store in memory
li x28, 0x00000000ffffffff # load another value into integer register
amoswap.d x19, x28, (x2) # perform operation

# Testcase cp_rs2_corners (Test source rs2 value = 0xfffffffe)
li x19, 0x5fef062f2c24fbec # load random value
la x22, scratch # base address
sd x19, 0(x22) # store in memory
li x19, 0x00000000fffffffe # load another value into integer register
amoswap.d x17, x19, (x22) # perform operation

# Testcase cp_rs2_corners (Test source rs2 value = 0x100000000)
li x19, 0xea9f4971253805e0 # load random value
la x8, scratch # base address
sd x19, 0(x8) # store in memory
li x19, 0x0000000100000000 # load another value into integer register
amoswap.d x26, x19, (x8) # perform operation

# Testcase cp_rs2_corners (Test source rs2 value = 0x100000001)
li x28, 0xcf7d2a837f7b2006 # load random value
la x1, scratch # base address
sd x28, 0(x1) # store in memory
li x28, 0x0000000100000001 # load another value into integer register
amoswap.d x11, x28, (x1) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x1)
li x1, 0x0b94a59c3cae201f # load random value
la x1, scratch # base address
sd x1, 0(x1) # store in memory
amoswap.d x21, x1, (x1) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x2)
li x2, 0xe715d8d893eca07f # load random value
la x2, scratch # base address
sd x2, 0(x2) # store in memory
amoswap.d x9, x2, (x2) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x3)
li x3, 0x9d01b7b8f08528d3 # load random value
la x3, scratch # base address
sd x3, 0(x3) # store in memory
amoswap.d x5, x3, (x3) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x4)
mv x5, x4 # switch signature pointer register to avoid conflict with test
li x4, 0xfdfc6aa7627d8ae0 # load random value
la x4, scratch # base address
sd x4, 0(x4) # store in memory
amoswap.d x3, x4, (x4) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x5)
mv x6, x5 # switch signature pointer register to avoid conflict with test
li x5, 0xa6d0b9569221d2f8 # load random value
la x5, scratch # base address
sd x5, 0(x5) # store in memory
amoswap.d x24, x5, (x5) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x6)
mv x7, x6 # switch signature pointer register to avoid conflict with test
li x6, 0x3661a4004a539dea # load random value
la x6, scratch # base address
sd x6, 0(x6) # store in memory
amoswap.d x17, x6, (x6) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x7)
mv x4, x7 # switch signature pointer register to avoid conflict with test
li x7, 0x457b09f47615e6f0 # load random value
la x7, scratch # base address
sd x7, 0(x7) # store in memory
amoswap.d x27, x7, (x7) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x8)
li x8, 0x612900ed369a6823 # load random value
la x8, scratch # base address
sd x8, 0(x8) # store in memory
amoswap.d x6, x8, (x8) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x9)
li x9, 0xc20e82f942b8b7dc # load random value
la x9, scratch # base address
sd x9, 0(x9) # store in memory
amoswap.d x11, x9, (x9) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x10)
li x10, 0xb2ca5a6940e59d95 # load random value
la x10, scratch # base address
sd x10, 0(x10) # store in memory
amoswap.d x9, x10, (x10) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x11)
li x11, 0xa2fbea24b16a80c2 # load random value
la x11, scratch # base address
sd x11, 0(x11) # store in memory
amoswap.d x6, x11, (x11) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x12)
li x12, 0x4ef050afe45aefd9 # load random value
la x12, scratch # base address
sd x12, 0(x12) # store in memory
amoswap.d x25, x12, (x12) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x13)
li x13, 0x738ddba948b7244f # load random value
la x13, scratch # base address
sd x13, 0(x13) # store in memory
amoswap.d x23, x13, (x13) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x14)
li x14, 0xb1d519442e50b5d7 # load random value
la x14, scratch # base address
sd x14, 0(x14) # store in memory
amoswap.d x29, x14, (x14) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x15)
li x15, 0x53cdb13652417c6b # load random value
la x15, scratch # base address
sd x15, 0(x15) # store in memory
amoswap.d x7, x15, (x15) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x16)
li x16, 0x630e306da11c6273 # load random value
la x16, scratch # base address
sd x16, 0(x16) # store in memory
amoswap.d x20, x16, (x16) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x17)
li x17, 0x4079dbbec9c23a3c # load random value
la x17, scratch # base address
sd x17, 0(x17) # store in memory
amoswap.d x23, x17, (x17) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x18)
li x18, 0xa4c7e27a482fa914 # load random value
la x18, scratch # base address
sd x18, 0(x18) # store in memory
amoswap.d x3, x18, (x18) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x19)
li x19, 0x51686eaba9cb4dd2 # load random value
la x19, scratch # base address
sd x19, 0(x19) # store in memory
amoswap.d x18, x19, (x19) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x20)
li x20, 0xfb44dafca30226bf # load random value
la x20, scratch # base address
sd x20, 0(x20) # store in memory
amoswap.d x7, x20, (x20) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x21)
li x21, 0x8d7d9730420f562a # load random value
la x21, scratch # base address
sd x21, 0(x21) # store in memory
amoswap.d x7, x21, (x21) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x22)
li x22, 0x81384070a5b8a778 # load random value
la x22, scratch # base address
sd x22, 0(x22) # store in memory
amoswap.d x2, x22, (x22) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x23)
li x23, 0x8377917d1b333017 # load random value
la x23, scratch # base address
sd x23, 0(x23) # store in memory
amoswap.d x18, x23, (x23) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x24)
li x24, 0xf2c0021f93c6144b # load random value
la x24, scratch # base address
sd x24, 0(x24) # store in memory
amoswap.d x27, x24, (x24) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x25)
li x25, 0xe5150e802f6df759 # load random value
la x25, scratch # base address
sd x25, 0(x25) # store in memory
amoswap.d x30, x25, (x25) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x26)
li x26, 0x6009fb820e3ee73f # load random value
la x26, scratch # base address
sd x26, 0(x26) # store in memory
amoswap.d x26, x26, (x26) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x27)
li x27, 0x8262ccb2b6a1e244 # load random value
la x27, scratch # base address
sd x27, 0(x27) # store in memory
amoswap.d x11, x27, (x27) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x28)
li x28, 0x056fd6fc8e340bf4 # load random value
la x28, scratch # base address
sd x28, 0(x28) # store in memory
amoswap.d x7, x28, (x28) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x29)
li x29, 0xde947e5e3a3c8c92 # load random value
la x29, scratch # base address
sd x29, 0(x29) # store in memory
amoswap.d x16, x29, (x29) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x30)
li x30, 0x8e21deb4544a783f # load random value
la x30, scratch # base address
sd x30, 0(x30) # store in memory
amoswap.d x28, x30, (x30) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x31)
li x31, 0x7d52cb2f496077e0 # load random value
la x31, scratch # base address
sd x31, 0(x31) # store in memory
amoswap.d x2, x31, (x31) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x1)
li x1, 0xcc54910ce9b855cf # load random value
la x1, scratch # base address
sd x1, 0(x1) # store in memory
amoswap.d x1, x1, (x1) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x2)
li x2, 0x39245bf552903279 # load random value
la x2, scratch # base address
sd x2, 0(x2) # store in memory
amoswap.d x2, x2, (x2) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x3)
li x30, 0x412a0b2006d82240 # load random value
la x3, scratch # base address
sd x30, 0(x3) # store in memory
li x30, 0x1718e44a5038138e # load another value into integer register
amoswap.d x3, x30, (x3) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x4)
mv x5, x4 # switch signature pointer register to avoid conflict with test
li x16, 0x9d5de7d653dc1328 # load random value
la x4, scratch # base address
sd x16, 0(x4) # store in memory
li x16, 0x9cbc491df59ca4d4 # load another value into integer register
amoswap.d x4, x16, (x4) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x5)
mv x6, x5 # switch signature pointer register to avoid conflict with test
li x18, 0x7bf2208ef0f28764 # load random value
la x5, scratch # base address
sd x18, 0(x5) # store in memory
li x18, 0xb3e3fa950d580bc3 # load another value into integer register
amoswap.d x5, x18, (x5) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x6)
mv x7, x6 # switch signature pointer register to avoid conflict with test
li x11, 0x6ca1797f37d1921e # load random value
la x6, scratch # base address
sd x11, 0(x6) # store in memory
li x11, 0xb7cf80943499f8f2 # load another value into integer register
amoswap.d x6, x11, (x6) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x7)
mv x4, x7 # switch signature pointer register to avoid conflict with test
li x12, 0x4363d3e695ad0715 # load random value
la x7, scratch # base address
sd x12, 0(x7) # store in memory
li x12, 0x5b06dfc07c8352c1 # load another value into integer register
amoswap.d x7, x12, (x7) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x8)
li x2, 0x03285b5e4f5abe0c # load random value
la x8, scratch # base address
sd x2, 0(x8) # store in memory
li x2, 0xcd8cd45008339e56 # load another value into integer register
amoswap.d x8, x2, (x8) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x9)
li x5, 0xd2ebdda8251f2a6b # load random value
la x9, scratch # base address
sd x5, 0(x9) # store in memory
li x5, 0x1cabd39b3a2437a8 # load another value into integer register
amoswap.d x9, x5, (x9) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x10)
li x28, 0x5199479470aab91e # load random value
la x10, scratch # base address
sd x28, 0(x10) # store in memory
li x28, 0xd8657e953eb2dc34 # load another value into integer register
amoswap.d x10, x28, (x10) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x11)
li x10, 0xdaa2a39cd81fdab0 # load random value
la x11, scratch # base address
sd x10, 0(x11) # store in memory
li x10, 0xef8bbf657fe4f00e # load another value into integer register
amoswap.d x11, x10, (x11) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x12)
li x12, 0x351f30751e0317ad # load random value
la x12, scratch # base address
sd x12, 0(x12) # store in memory
amoswap.d x12, x12, (x12) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x13)
li x28, 0x6e6db788ae4d40f0 # load random value
la x13, scratch # base address
sd x28, 0(x13) # store in memory
li x28, 0xb3911aac98165ec1 # load another value into integer register
amoswap.d x13, x28, (x13) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x14)
li x3, 0xd47407cb5877b0e6 # load random value
la x14, scratch # base address
sd x3, 0(x14) # store in memory
li x3, 0xceab2c92c6661eb5 # load another value into integer register
amoswap.d x14, x3, (x14) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x15)
li x19, 0x714be62dc83b2587 # load random value
la x15, scratch # base address
sd x19, 0(x15) # store in memory
li x19, 0xb5603d01bf4a6d25 # load another value into integer register
amoswap.d x15, x19, (x15) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x16)
li x13, 0xc63559cfbad24340 # load random value
la x16, scratch # base address
sd x13, 0(x16) # store in memory
li x13, 0x1e20e2bec1ae3839 # load another value into integer register
amoswap.d x16, x13, (x16) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x17)
li x8, 0xf9051191dbf3cac2 # load random value
la x17, scratch # base address
sd x8, 0(x17) # store in memory
li x8, 0x8598f190e17b54f7 # load another value into integer register
amoswap.d x17, x8, (x17) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x18)
li x28, 0xd444307a07914380 # load random value
la x18, scratch # base address
sd x28, 0(x18) # store in memory
li x28, 0x96f0b45e37f5fdfb # load another value into integer register
amoswap.d x18, x28, (x18) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x19)
li x14, 0x4885a9669a627184 # load random value
la x19, scratch # base address
sd x14, 0(x19) # store in memory
li x14, 0x2a1f8479faa5787a # load another value into integer register
amoswap.d x19, x14, (x19) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x20)
li x31, 0x383ae60cf1a23ee7 # load random value
la x20, scratch # base address
sd x31, 0(x20) # store in memory
li x31, 0x32cfb36ffe81ee52 # load another value into integer register
amoswap.d x20, x31, (x20) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x21)
li x17, 0x110c0a0950f6b37f # load random value
la x21, scratch # base address
sd x17, 0(x21) # store in memory
li x17, 0x1d99a293b6ae02da # load another value into integer register
amoswap.d x21, x17, (x21) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x22)
li x27, 0x9b5cc67d9530fa12 # load random value
la x22, scratch # base address
sd x27, 0(x22) # store in memory
li x27, 0xe025e181d916b6f4 # load another value into integer register
amoswap.d x22, x27, (x22) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x23)
li x18, 0xd9cf616907e61887 # load random value
la x23, scratch # base address
sd x18, 0(x23) # store in memory
li x18, 0x5e4ae1a8873d1a07 # load another value into integer register
amoswap.d x23, x18, (x23) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x24)
li x8, 0x132bf2a65ed52b28 # load random value
la x24, scratch # base address
sd x8, 0(x24) # store in memory
li x8, 0x9a809cf089c55147 # load another value into integer register
amoswap.d x24, x8, (x24) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x25)
li x29, 0xf679129bf4d4e638 # load random value
la x25, scratch # base address
sd x29, 0(x25) # store in memory
li x29, 0x91d1ef737e7fe162 # load another value into integer register
amoswap.d x25, x29, (x25) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x26)
li x18, 0x9106349fa7c52f34 # load random value
la x26, scratch # base address
sd x18, 0(x26) # store in memory
li x18, 0xff0e5487fc853605 # load another value into integer register
amoswap.d x26, x18, (x26) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x27)
li x31, 0x43abfda4f74e67ae # load random value
la x27, scratch # base address
sd x31, 0(x27) # store in memory
li x31, 0xf4f584f13bd993d7 # load another value into integer register
amoswap.d x27, x31, (x27) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x28)
li x6, 0x086c189af5ce27c0 # load random value
la x28, scratch # base address
sd x6, 0(x28) # store in memory
li x6, 0x246087e7b0068a8b # load another value into integer register
amoswap.d x28, x6, (x28) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x29)
li x12, 0xe7e5196c9074e60f # load random value
la x29, scratch # base address
sd x12, 0(x29) # store in memory
li x12, 0xe69f3248da744208 # load another value into integer register
amoswap.d x29, x12, (x29) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x30)
li x7, 0x42700efbe4f405ed # load random value
la x30, scratch # base address
sd x7, 0(x30) # store in memory
li x7, 0xb0b3cae0877b3a35 # load another value into integer register
amoswap.d x30, x7, (x30) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x31)
li x9, 0x76591f5ff6fbbd35 # load random value
la x31, scratch # base address
sd x9, 0(x31) # store in memory
li x9, 0x7b4f3bc59cd36185 # load another value into integer register
amoswap.d x31, x9, (x31) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x0)
li x0, 0xdb33950bf12eb53f # load random value
la x10, scratch # base address
sd x0, 0(x10) # store in memory
li x0, 0xb089d29e7bf0f97e # load another value into integer register
amoswap.d x0, x0, (x10) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x1)
li x1, 0x408ead388552da58 # load random value
la x11, scratch # base address
sd x1, 0(x11) # store in memory
li x1, 0xf3f0629764809f6a # load another value into integer register
amoswap.d x1, x1, (x11) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x2)
li x2, 0x8c786af24fa227ef # load random value
la x26, scratch # base address
sd x2, 0(x26) # store in memory
li x2, 0x92bab55ad56b4851 # load another value into integer register
amoswap.d x2, x2, (x26) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x3)
li x3, 0xf40867247f6b89f3 # load random value
la x9, scratch # base address
sd x3, 0(x9) # store in memory
li x3, 0x073a68db9bb8345f # load another value into integer register
amoswap.d x3, x3, (x9) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x4)
mv x5, x4 # switch signature pointer register to avoid conflict with test
li x4, 0xbacf296da7c72f21 # load random value
la x18, scratch # base address
sd x4, 0(x18) # store in memory
li x4, 0x97f72324594ffdf0 # load another value into integer register
amoswap.d x4, x4, (x18) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x5)
mv x7, x5 # switch signature pointer register to avoid conflict with test
li x5, 0x8fae51cace707d0b # load random value
la x6, scratch # base address
sd x5, 0(x6) # store in memory
li x5, 0xee44dfa856e65a2d # load another value into integer register
amoswap.d x5, x5, (x6) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x6)
li x6, 0x95cfcecba9538e9a # load random value
la x4, scratch # base address
sd x6, 0(x4) # store in memory
li x6, 0x8c7aea7ff7ab166c # load another value into integer register
amoswap.d x6, x6, (x4) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x7)
mv x4, x7 # switch signature pointer register to avoid conflict with test
li x7, 0x2ea29f9deb2b9508 # load random value
la x18, scratch # base address
sd x7, 0(x18) # store in memory
li x7, 0xad352a3a711547b7 # load another value into integer register
amoswap.d x7, x7, (x18) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x8)
li x8, 0x2f0a2ca550478761 # load random value
la x21, scratch # base address
sd x8, 0(x21) # store in memory
li x8, 0xd04fcabdbeed5ae2 # load another value into integer register
amoswap.d x8, x8, (x21) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x9)
li x9, 0x14b38f63c6e389c5 # load random value
la x26, scratch # base address
sd x9, 0(x26) # store in memory
li x9, 0xb38d809bf2197891 # load another value into integer register
amoswap.d x9, x9, (x26) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x10)
li x10, 0x631391b916443f50 # load random value
la x27, scratch # base address
sd x10, 0(x27) # store in memory
li x10, 0xf90c25f04c5f824a # load another value into integer register
amoswap.d x10, x10, (x27) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x11)
li x11, 0x92c1cde992a234b8 # load random value
la x10, scratch # base address
sd x11, 0(x10) # store in memory
li x11, 0xc8b21eab7e9757c0 # load another value into integer register
amoswap.d x11, x11, (x10) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x12)
li x12, 0xa7f473b0dbc6d6c8 # load random value
la x25, scratch # base address
sd x12, 0(x25) # store in memory
li x12, 0xcfb34921be1706eb # load another value into integer register
amoswap.d x12, x12, (x25) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x13)
li x13, 0x216b688dcd4c5ef8 # load random value
la x30, scratch # base address
sd x13, 0(x30) # store in memory
li x13, 0x0628108d50fcdefb # load another value into integer register
amoswap.d x13, x13, (x30) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x14)
li x14, 0xa2aa2fa7a7bd3a88 # load random value
la x9, scratch # base address
sd x14, 0(x9) # store in memory
li x14, 0x3db8cd1845ac7d19 # load another value into integer register
amoswap.d x14, x14, (x9) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x15)
li x15, 0xd5fe8d714c2f8d12 # load random value
la x28, scratch # base address
sd x15, 0(x28) # store in memory
li x15, 0x3ec63f2977ad7996 # load another value into integer register
amoswap.d x15, x15, (x28) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x16)
li x16, 0xacca9535c76e015a # load random value
la x30, scratch # base address
sd x16, 0(x30) # store in memory
li x16, 0xb56a36bf7ad0e8ca # load another value into integer register
amoswap.d x16, x16, (x30) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x17)
li x17, 0x4f1b139f9836d9ff # load random value
la x31, scratch # base address
sd x17, 0(x31) # store in memory
li x17, 0x6b6b889fda5ad9fa # load another value into integer register
amoswap.d x17, x17, (x31) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x18)
li x18, 0x7585e4b4fc84944a # load random value
la x28, scratch # base address
sd x18, 0(x28) # store in memory
li x18, 0x864dbda819044fef # load another value into integer register
amoswap.d x18, x18, (x28) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x19)
li x19, 0x5433f19ada1ec95d # load random value
la x3, scratch # base address
sd x19, 0(x3) # store in memory
li x19, 0xc4e4974ee2833766 # load another value into integer register
amoswap.d x19, x19, (x3) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x20)
li x20, 0x2731a7063535731a # load random value
la x2, scratch # base address
sd x20, 0(x2) # store in memory
li x20, 0xaa00a520961daec6 # load another value into integer register
amoswap.d x20, x20, (x2) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x21)
li x21, 0xe0755f03880e4718 # load random value
la x9, scratch # base address
sd x21, 0(x9) # store in memory
li x21, 0x440e946ea615336d # load another value into integer register
amoswap.d x21, x21, (x9) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x22)
li x22, 0xe9196a97755a2ead # load random value
la x9, scratch # base address
sd x22, 0(x9) # store in memory
li x22, 0x8244762d5d2de57a # load another value into integer register
amoswap.d x22, x22, (x9) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x23)
li x23, 0x801c9a9c3ecfe837 # load random value
la x10, scratch # base address
sd x23, 0(x10) # store in memory
li x23, 0xfb937a3b7caae182 # load another value into integer register
amoswap.d x23, x23, (x10) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x24)
li x24, 0x71b23f41201b3cb3 # load random value
la x18, scratch # base address
sd x24, 0(x18) # store in memory
li x24, 0xc46c1c91b9398a06 # load another value into integer register
amoswap.d x24, x24, (x18) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x25)
li x25, 0xadc653be6e1b1b95 # load random value
la x26, scratch # base address
sd x25, 0(x26) # store in memory
li x25, 0x9415b9c942d8d220 # load another value into integer register
amoswap.d x25, x25, (x26) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x26)
li x26, 0xfefa63a1e2182515 # load random value
la x10, scratch # base address
sd x26, 0(x10) # store in memory
li x26, 0x8ee26d0a79acf291 # load another value into integer register
amoswap.d x26, x26, (x10) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x27)
li x27, 0x82d9c8660129fe34 # load random value
la x3, scratch # base address
sd x27, 0(x3) # store in memory
li x27, 0xd57a194ae2e55ac0 # load another value into integer register
amoswap.d x27, x27, (x3) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x28)
li x28, 0xc504ac1517e0e8d0 # load random value
la x5, scratch # base address
sd x28, 0(x5) # store in memory
li x28, 0x23bcbcd2900330ba # load another value into integer register
amoswap.d x28, x28, (x5) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x29)
li x29, 0x0a3e4074d6a22059 # load random value
la x12, scratch # base address
sd x29, 0(x12) # store in memory
li x29, 0xf1fcec6253d3c507 # load another value into integer register
amoswap.d x29, x29, (x12) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x30)
li x30, 0x8b2a7bdd13cce9e1 # load random value
la x14, scratch # base address
sd x30, 0(x14) # store in memory
li x30, 0x65390e7ce1c868a0 # load another value into integer register
amoswap.d x30, x30, (x14) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x31)
li x31, 0x591abad3fa903665 # load random value
la x14, scratch # base address
sd x31, 0(x14) # store in memory
li x31, 0x2e671627d97258d8 # load another value into integer register
amoswap.d x31, x31, (x14) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x1)
li x1, 0x1ad7f9a4f3da5f22 # load random value
la x1, scratch # base address
sd x1, 0(x1) # store in memory
amoswap.d x1, x1, (x1) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x2)
li x2, 0x268f505bd4c3c8b5 # load random value
la x2, scratch # base address
sd x2, 0(x2) # store in memory
amoswap.d x2, x2, (x2) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x3)
li x3, 0xcf2c2811a0e536f6 # load random value
la x3, scratch # base address
sd x3, 0(x3) # store in memory
amoswap.d x3, x3, (x3) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x4)
mv x5, x4 # switch signature pointer register to avoid conflict with test
li x4, 0xedaa49a5fac055d1 # load random value
la x4, scratch # base address
sd x4, 0(x4) # store in memory
amoswap.d x4, x4, (x4) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x5)
mv x6, x5 # switch signature pointer register to avoid conflict with test
li x5, 0x5ae87bccc8bad484 # load random value
la x5, scratch # base address
sd x5, 0(x5) # store in memory
amoswap.d x5, x5, (x5) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x6)
mv x7, x6 # switch signature pointer register to avoid conflict with test
li x6, 0xdea5b4b9f59022b3 # load random value
la x6, scratch # base address
sd x6, 0(x6) # store in memory
amoswap.d x6, x6, (x6) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x7)
mv x4, x7 # switch signature pointer register to avoid conflict with test
li x7, 0xc414eba96e46ffe4 # load random value
la x7, scratch # base address
sd x7, 0(x7) # store in memory
amoswap.d x7, x7, (x7) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x8)
li x8, 0x2b86b1f4f2ab8a3e # load random value
la x8, scratch # base address
sd x8, 0(x8) # store in memory
amoswap.d x8, x8, (x8) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x9)
li x9, 0x31251fecc44cfe74 # load random value
la x9, scratch # base address
sd x9, 0(x9) # store in memory
amoswap.d x9, x9, (x9) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x10)
li x10, 0x74bc1c64b29d946d # load random value
la x10, scratch # base address
sd x10, 0(x10) # store in memory
amoswap.d x10, x10, (x10) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x11)
li x11, 0xeea53c72a84a214b # load random value
la x11, scratch # base address
sd x11, 0(x11) # store in memory
amoswap.d x11, x11, (x11) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x12)
li x12, 0xdbc4114acfeb6f50 # load random value
la x12, scratch # base address
sd x12, 0(x12) # store in memory
amoswap.d x12, x12, (x12) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x13)
li x13, 0x40675c6674bc5551 # load random value
la x13, scratch # base address
sd x13, 0(x13) # store in memory
amoswap.d x13, x13, (x13) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x14)
li x14, 0x3682b4a7b21ef628 # load random value
la x14, scratch # base address
sd x14, 0(x14) # store in memory
amoswap.d x14, x14, (x14) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x15)
li x15, 0x3dab6a3fd8e8805b # load random value
la x15, scratch # base address
sd x15, 0(x15) # store in memory
amoswap.d x15, x15, (x15) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x16)
li x16, 0x27ba62b1fe85c002 # load random value
la x16, scratch # base address
sd x16, 0(x16) # store in memory
amoswap.d x16, x16, (x16) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x17)
li x17, 0xc7dd37b189f74dd2 # load random value
la x17, scratch # base address
sd x17, 0(x17) # store in memory
amoswap.d x17, x17, (x17) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x18)
li x18, 0x268e3a2b70970862 # load random value
la x18, scratch # base address
sd x18, 0(x18) # store in memory
amoswap.d x18, x18, (x18) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x19)
li x19, 0x85e2596d0c394678 # load random value
la x19, scratch # base address
sd x19, 0(x19) # store in memory
amoswap.d x19, x19, (x19) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x20)
li x20, 0xa410920d2242d754 # load random value
la x20, scratch # base address
sd x20, 0(x20) # store in memory
amoswap.d x20, x20, (x20) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x21)
li x21, 0xc20c38f60cab8308 # load random value
la x21, scratch # base address
sd x21, 0(x21) # store in memory
amoswap.d x21, x21, (x21) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x22)
li x22, 0x3fcd871b03aab92f # load random value
la x22, scratch # base address
sd x22, 0(x22) # store in memory
amoswap.d x22, x22, (x22) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x23)
li x23, 0x367080ff5b19eae7 # load random value
la x23, scratch # base address
sd x23, 0(x23) # store in memory
amoswap.d x23, x23, (x23) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x24)
li x24, 0x182d842e6b0af8f9 # load random value
la x24, scratch # base address
sd x24, 0(x24) # store in memory
amoswap.d x24, x24, (x24) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x25)
li x25, 0x3575c5afc1ba7bb1 # load random value
la x25, scratch # base address
sd x25, 0(x25) # store in memory
amoswap.d x25, x25, (x25) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x26)
li x26, 0xb64e27f897c70ed0 # load random value
la x26, scratch # base address
sd x26, 0(x26) # store in memory
amoswap.d x26, x26, (x26) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x27)
li x27, 0xba1b54a5895fdb24 # load random value
la x27, scratch # base address
sd x27, 0(x27) # store in memory
amoswap.d x27, x27, (x27) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x28)
li x28, 0x4663ec3e5b83a744 # load random value
la x28, scratch # base address
sd x28, 0(x28) # store in memory
amoswap.d x28, x28, (x28) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x29)
li x29, 0xfb60df1d67849da3 # load random value
la x29, scratch # base address
sd x29, 0(x29) # store in memory
amoswap.d x29, x29, (x29) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x30)
li x30, 0xcc13e3ed42fa6837 # load random value
la x30, scratch # base address
sd x30, 0(x30) # store in memory
amoswap.d x30, x30, (x30) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x31)
li x31, 0x1a0618cdaa840c5e # load random value
la x31, scratch # base address
sd x31, 0(x31) # store in memory
amoswap.d x31, x31, (x31) # perform operation

# Testcase cp_gpr/fpr_hazard nohaz test
la x26, scratch
add x7, x8, x15 # perform first operation
amoswap.d x23, x1, (x26) # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard nohaz test
la x12, scratch
add x3, x7, x9 # perform first operation
amoswap.d x27, x10, (x12) # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard nohaz test
la x31, scratch
add x13, x5, x9 # perform first operation
amoswap.d x22, x3, (x31) # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard raw test
la x22, scratch
add x19, x19, x0 # perform first operation
amoswap.d x10, x19, (x22) # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard raw test
la x23, scratch
add x23, x23, x0 # perform first operation
amoswap.d x2, x24, (x23) # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard raw test
la x10, scratch
add x17, x17, x0 # perform first operation
amoswap.d x17, x27, (x10) # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard waw test
la x20, scratch
add x29, x8, x12 # perform first operation
amoswap.d x29, x15, (x20) # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard waw test
la x7, scratch
add x2, x25, x23 # perform first operation
amoswap.d x2, x15, (x7) # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard waw test
la x15, scratch
add x9, x8, x10 # perform first operation
amoswap.d x9, x28, (x15) # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard war test
la x9, scratch
add x25, x27, x20 # perform first operation
amoswap.d x27, x22, (x9) # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard war test
la x12, scratch
add x1, x16, x17 # perform first operation
amoswap.d x17, x2, (x12) # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard war test
la x22, scratch
add x24, x7, x23 # perform first operation
amoswap.d x17, x3, (x22) # perform second (triggering) operation

#.EQU SIGSIZE,0


// ******************
// Tests from: WALLY-COV-amoadd.d.S
// ******************


# initialize signature pointer
la x4, begin_signature

    
# Testcase cp_rs1 (Test source rs1 = x1)
li x22, 0xd705c8542198e61e # load random value
la x1, scratch # base address
sd x22, 0(x1) # store in memory
li x22, 0x64a66ce3cf053f8f # load another value into integer register
amoadd.d x17, x22, (x1) # perform operation

# Testcase cp_rs1 (Test source rs1 = x2)
li x29, 0x44e464dcab8d98b9 # load random value
la x2, scratch # base address
sd x29, 0(x2) # store in memory
li x29, 0xefaeb24fad475394 # load another value into integer register
amoadd.d x22, x29, (x2) # perform operation

# Testcase cp_rs1 (Test source rs1 = x3)
li x1, 0x586fcdfbad046d0d # load random value
la x3, scratch # base address
sd x1, 0(x3) # store in memory
li x1, 0x3ab883b409218267 # load another value into integer register
amoadd.d x21, x1, (x3) # perform operation

# Testcase cp_rs1 (Test source rs1 = x4)
mv x5, x4 # switch signature pointer register to avoid conflict with test
li x6, 0x86ed88e30c01d3f6 # load random value
la x4, scratch # base address
sd x6, 0(x4) # store in memory
li x6, 0xc86f96cd38b9ff24 # load another value into integer register
amoadd.d x27, x6, (x4) # perform operation

# Testcase cp_rs1 (Test source rs1 = x5)
mv x6, x5 # switch signature pointer register to avoid conflict with test
li x3, 0xe18a2633e3a370e6 # load random value
la x5, scratch # base address
sd x3, 0(x5) # store in memory
li x3, 0x7e96b19ae16e7292 # load another value into integer register
amoadd.d x16, x3, (x5) # perform operation

# Testcase cp_rs1 (Test source rs1 = x6)
mv x4, x6 # switch signature pointer register to avoid conflict with test
li x29, 0xa051a6bed3f38395 # load random value
la x6, scratch # base address
sd x29, 0(x6) # store in memory
li x29, 0xa553cb08fb53d946 # load another value into integer register
amoadd.d x7, x29, (x6) # perform operation

# Testcase cp_rs1 (Test source rs1 = x7)
li x10, 0xade67dafe6cd1938 # load random value
la x7, scratch # base address
sd x10, 0(x7) # store in memory
li x10, 0x8378ace45da886d4 # load another value into integer register
amoadd.d x19, x10, (x7) # perform operation

# Testcase cp_rs1 (Test source rs1 = x8)
li x29, 0xc711c4a1abcb834a # load random value
la x8, scratch # base address
sd x29, 0(x8) # store in memory
li x29, 0xdfe8540cde88c591 # load another value into integer register
amoadd.d x28, x29, (x8) # perform operation

# Testcase cp_rs1 (Test source rs1 = x9)
li x13, 0x3f48e0968e71fca8 # load random value
la x9, scratch # base address
sd x13, 0(x9) # store in memory
li x13, 0x77befcaa72e46d4c # load another value into integer register
amoadd.d x16, x13, (x9) # perform operation

# Testcase cp_rs1 (Test source rs1 = x10)
li x29, 0xd8beb8cd9c11c3da # load random value
la x10, scratch # base address
sd x29, 0(x10) # store in memory
li x29, 0x148c0a9ca0eb575c # load another value into integer register
amoadd.d x9, x29, (x10) # perform operation

# Testcase cp_rs1 (Test source rs1 = x11)
li x23, 0xa4a42bcd4fbc8c9e # load random value
la x11, scratch # base address
sd x23, 0(x11) # store in memory
li x23, 0xc7fa79449337e857 # load another value into integer register
amoadd.d x3, x23, (x11) # perform operation

# Testcase cp_rs1 (Test source rs1 = x12)
li x13, 0xdb56697675817b44 # load random value
la x12, scratch # base address
sd x13, 0(x12) # store in memory
li x13, 0x6bcbe51a19d77d12 # load another value into integer register
amoadd.d x9, x13, (x12) # perform operation

# Testcase cp_rs1 (Test source rs1 = x13)
li x1, 0xe54e46d55d9e1cb0 # load random value
la x13, scratch # base address
sd x1, 0(x13) # store in memory
li x1, 0x835e4139314c1adc # load another value into integer register
amoadd.d x28, x1, (x13) # perform operation

# Testcase cp_rs1 (Test source rs1 = x14)
li x7, 0x6904267aa1b1f339 # load random value
la x14, scratch # base address
sd x7, 0(x14) # store in memory
li x7, 0xcf71069de41ce616 # load another value into integer register
amoadd.d x11, x7, (x14) # perform operation

# Testcase cp_rs1 (Test source rs1 = x15)
li x19, 0x36881cf562adc317 # load random value
la x15, scratch # base address
sd x19, 0(x15) # store in memory
li x19, 0xce87ede40d972c1a # load another value into integer register
amoadd.d x28, x19, (x15) # perform operation

# Testcase cp_rs1 (Test source rs1 = x16)
li x27, 0x907fb50a06688022 # load random value
la x16, scratch # base address
sd x27, 0(x16) # store in memory
li x27, 0xe47754db7c1819b4 # load another value into integer register
amoadd.d x7, x27, (x16) # perform operation

# Testcase cp_rs1 (Test source rs1 = x17)
li x30, 0xca200b11c3a801b3 # load random value
la x17, scratch # base address
sd x30, 0(x17) # store in memory
li x30, 0x7298be2082684a6d # load another value into integer register
amoadd.d x15, x30, (x17) # perform operation

# Testcase cp_rs1 (Test source rs1 = x18)
li x13, 0x41d576efd20c12ab # load random value
la x18, scratch # base address
sd x13, 0(x18) # store in memory
li x13, 0x05af8c49c32ae2d6 # load another value into integer register
amoadd.d x25, x13, (x18) # perform operation

# Testcase cp_rs1 (Test source rs1 = x19)
li x18, 0xeca42383acc1e7ae # load random value
la x19, scratch # base address
sd x18, 0(x19) # store in memory
li x18, 0x0828362b28896d31 # load another value into integer register
amoadd.d x24, x18, (x19) # perform operation

# Testcase cp_rs1 (Test source rs1 = x20)
li x1, 0x654c4c5cb927f608 # load random value
la x20, scratch # base address
sd x1, 0(x20) # store in memory
li x1, 0x8b0f1e1a3fc231c5 # load another value into integer register
amoadd.d x12, x1, (x20) # perform operation

# Testcase cp_rs1 (Test source rs1 = x21)
li x30, 0x610b478ce553ec40 # load random value
la x21, scratch # base address
sd x30, 0(x21) # store in memory
li x30, 0xbc7925d34fe92bc4 # load another value into integer register
amoadd.d x13, x30, (x21) # perform operation

# Testcase cp_rs1 (Test source rs1 = x22)
li x31, 0x7c427897f1a1d98b # load random value
la x22, scratch # base address
sd x31, 0(x22) # store in memory
li x31, 0x036a8ba212426c9e # load another value into integer register
amoadd.d x19, x31, (x22) # perform operation

# Testcase cp_rs1 (Test source rs1 = x23)
li x1, 0x635c646dadb9e3ae # load random value
la x23, scratch # base address
sd x1, 0(x23) # store in memory
li x1, 0x2be19afcf8b0db31 # load another value into integer register
amoadd.d x31, x1, (x23) # perform operation

# Testcase cp_rs1 (Test source rs1 = x24)
li x19, 0xe0c7c5968798f05c # load random value
la x24, scratch # base address
sd x19, 0(x24) # store in memory
li x19, 0xb74ca3a73ceaf480 # load another value into integer register
amoadd.d x3, x19, (x24) # perform operation

# Testcase cp_rs1 (Test source rs1 = x25)
li x12, 0x9525fa7bde56b38f # load random value
la x25, scratch # base address
sd x12, 0(x25) # store in memory
li x12, 0x69db865874a777fb # load another value into integer register
amoadd.d x3, x12, (x25) # perform operation

# Testcase cp_rs1 (Test source rs1 = x26)
li x30, 0x087c6deef79dbe32 # load random value
la x26, scratch # base address
sd x30, 0(x26) # store in memory
li x30, 0x8b6baf0783caecb6 # load another value into integer register
amoadd.d x27, x30, (x26) # perform operation

# Testcase cp_rs1 (Test source rs1 = x27)
li x3, 0xf6b353e9655aa3b9 # load random value
la x27, scratch # base address
sd x3, 0(x27) # store in memory
li x3, 0xc394d2aa793e049a # load another value into integer register
amoadd.d x8, x3, (x27) # perform operation

# Testcase cp_rs1 (Test source rs1 = x28)
li x18, 0xf4ce36fd7fdca2e9 # load random value
la x28, scratch # base address
sd x18, 0(x28) # store in memory
li x18, 0x643ba34bbf2f3026 # load another value into integer register
amoadd.d x27, x18, (x28) # perform operation

# Testcase cp_rs1 (Test source rs1 = x29)
li x1, 0x7af0a070ad62ce14 # load random value
la x29, scratch # base address
sd x1, 0(x29) # store in memory
li x1, 0x179afbce71b3efcb # load another value into integer register
amoadd.d x15, x1, (x29) # perform operation

# Testcase cp_rs1 (Test source rs1 = x30)
li x1, 0x8006ad28a333189e # load random value
la x30, scratch # base address
sd x1, 0(x30) # store in memory
li x1, 0xd901117e36da8b5f # load another value into integer register
amoadd.d x7, x1, (x30) # perform operation

# Testcase cp_rs1 (Test source rs1 = x31)
li x5, 0xaa57560b64ebf951 # load random value
la x31, scratch # base address
sd x5, 0(x31) # store in memory
li x5, 0xd6d301aeef57901e # load another value into integer register
amoadd.d x20, x5, (x31) # perform operation

# Testcase cp_rs2 (Test source rs2 = x0)
li x0, 0x967b6f90beebf815 # load random value
la x21, scratch # base address
sd x0, 0(x21) # store in memory
li x0, 0x71d7515fd8bba2e6 # load another value into integer register
amoadd.d x1, x0, (x21) # perform operation

# Testcase cp_rs2 (Test source rs2 = x1)
li x1, 0x4a35e507a35841e1 # load random value
la x18, scratch # base address
sd x1, 0(x18) # store in memory
li x1, 0x4484759a632d4408 # load another value into integer register
amoadd.d x13, x1, (x18) # perform operation

# Testcase cp_rs2 (Test source rs2 = x2)
li x2, 0x19be324020108fd1 # load random value
la x17, scratch # base address
sd x2, 0(x17) # store in memory
li x2, 0x1bbf03010b62bed4 # load another value into integer register
amoadd.d x24, x2, (x17) # perform operation

# Testcase cp_rs2 (Test source rs2 = x3)
li x3, 0x801194af6d5b0758 # load random value
la x15, scratch # base address
sd x3, 0(x15) # store in memory
li x3, 0x5be342baf1bdc607 # load another value into integer register
amoadd.d x29, x3, (x15) # perform operation

# Testcase cp_rs2 (Test source rs2 = x4)
mv x5, x4 # switch signature pointer register to avoid conflict with test
li x4, 0x052aa731ae994673 # load random value
la x18, scratch # base address
sd x4, 0(x18) # store in memory
li x4, 0x36655d3e1d17e935 # load another value into integer register
amoadd.d x9, x4, (x18) # perform operation

# Testcase cp_rs2 (Test source rs2 = x5)
mv x6, x5 # switch signature pointer register to avoid conflict with test
li x5, 0xd4166313d46fee90 # load random value
la x20, scratch # base address
sd x5, 0(x20) # store in memory
li x5, 0xc5dc5b0526aede69 # load another value into integer register
amoadd.d x30, x5, (x20) # perform operation

# Testcase cp_rs2 (Test source rs2 = x6)
mv x7, x6 # switch signature pointer register to avoid conflict with test
li x6, 0x7da9d3e3b2301eea # load random value
la x1, scratch # base address
sd x6, 0(x1) # store in memory
li x6, 0xe58b81b2610ab41e # load another value into integer register
amoadd.d x30, x6, (x1) # perform operation

# Testcase cp_rs2 (Test source rs2 = x7)
mv x4, x7 # switch signature pointer register to avoid conflict with test
li x7, 0x6ea65bf387df9c62 # load random value
la x24, scratch # base address
sd x7, 0(x24) # store in memory
li x7, 0x3f5481ac59f690a1 # load another value into integer register
amoadd.d x16, x7, (x24) # perform operation

# Testcase cp_rs2 (Test source rs2 = x8)
li x8, 0xe6a5f2c66a64ce5f # load random value
la x3, scratch # base address
sd x8, 0(x3) # store in memory
li x8, 0x2109e04526b8866f # load another value into integer register
amoadd.d x10, x8, (x3) # perform operation

# Testcase cp_rs2 (Test source rs2 = x9)
li x9, 0xd39f5153f4260151 # load random value
la x3, scratch # base address
sd x9, 0(x3) # store in memory
li x9, 0x243eca19496a0979 # load another value into integer register
amoadd.d x5, x9, (x3) # perform operation

# Testcase cp_rs2 (Test source rs2 = x10)
li x10, 0x0bd5b54e727cb8c1 # load random value
la x14, scratch # base address
sd x10, 0(x14) # store in memory
li x10, 0x5bb87d3737c8b90e # load another value into integer register
amoadd.d x28, x10, (x14) # perform operation

# Testcase cp_rs2 (Test source rs2 = x11)
li x11, 0x9f8c8034150a2df9 # load random value
la x25, scratch # base address
sd x11, 0(x25) # store in memory
li x11, 0xa36bf9be2b3fab43 # load another value into integer register
amoadd.d x5, x11, (x25) # perform operation

# Testcase cp_rs2 (Test source rs2 = x12)
li x12, 0x59424d89b1c45c47 # load random value
la x23, scratch # base address
sd x12, 0(x23) # store in memory
li x12, 0x0091be4a411fc276 # load another value into integer register
amoadd.d x21, x12, (x23) # perform operation

# Testcase cp_rs2 (Test source rs2 = x13)
li x13, 0xda5d42dcca84fe60 # load random value
la x31, scratch # base address
sd x13, 0(x31) # store in memory
li x13, 0xd16c67beea4f78b2 # load another value into integer register
amoadd.d x9, x13, (x31) # perform operation

# Testcase cp_rs2 (Test source rs2 = x14)
li x14, 0x0d5fe522d3e253b5 # load random value
la x17, scratch # base address
sd x14, 0(x17) # store in memory
li x14, 0x5ded0025c2d8914b # load another value into integer register
amoadd.d x11, x14, (x17) # perform operation

# Testcase cp_rs2 (Test source rs2 = x15)
li x15, 0x57545956669c944a # load random value
la x30, scratch # base address
sd x15, 0(x30) # store in memory
li x15, 0x0bcde2b36bc256af # load another value into integer register
amoadd.d x28, x15, (x30) # perform operation

# Testcase cp_rs2 (Test source rs2 = x16)
li x16, 0x5082e610173c44ff # load random value
la x10, scratch # base address
sd x16, 0(x10) # store in memory
li x16, 0x8f7269fc4f4ddc94 # load another value into integer register
amoadd.d x31, x16, (x10) # perform operation

# Testcase cp_rs2 (Test source rs2 = x17)
li x17, 0xf26df84e471940b0 # load random value
la x12, scratch # base address
sd x17, 0(x12) # store in memory
li x17, 0x00eeef1f2e304a48 # load another value into integer register
amoadd.d x11, x17, (x12) # perform operation

# Testcase cp_rs2 (Test source rs2 = x18)
li x18, 0xef1b55be99731828 # load random value
la x12, scratch # base address
sd x18, 0(x12) # store in memory
li x18, 0x27da64f3afa0bd79 # load another value into integer register
amoadd.d x5, x18, (x12) # perform operation

# Testcase cp_rs2 (Test source rs2 = x19)
li x19, 0x78f55b790e4daf22 # load random value
la x31, scratch # base address
sd x19, 0(x31) # store in memory
li x19, 0x045e952c7ee194a0 # load another value into integer register
amoadd.d x16, x19, (x31) # perform operation

# Testcase cp_rs2 (Test source rs2 = x20)
li x20, 0x422756960d10a770 # load random value
la x11, scratch # base address
sd x20, 0(x11) # store in memory
li x20, 0x8ededeed2c64aa06 # load another value into integer register
amoadd.d x28, x20, (x11) # perform operation

# Testcase cp_rs2 (Test source rs2 = x21)
li x21, 0xf062f69656adb442 # load random value
la x2, scratch # base address
sd x21, 0(x2) # store in memory
li x21, 0x229ebb87a00ce205 # load another value into integer register
amoadd.d x13, x21, (x2) # perform operation

# Testcase cp_rs2 (Test source rs2 = x22)
li x22, 0xebdbc38c203342dd # load random value
la x1, scratch # base address
sd x22, 0(x1) # store in memory
li x22, 0x5ead437023b66107 # load another value into integer register
amoadd.d x19, x22, (x1) # perform operation

# Testcase cp_rs2 (Test source rs2 = x23)
li x23, 0x96801f64e1d96f62 # load random value
la x14, scratch # base address
sd x23, 0(x14) # store in memory
li x23, 0x1af42ce754f4720c # load another value into integer register
amoadd.d x10, x23, (x14) # perform operation

# Testcase cp_rs2 (Test source rs2 = x24)
li x24, 0xb62fcbc4f8c233c2 # load random value
la x1, scratch # base address
sd x24, 0(x1) # store in memory
li x24, 0x946828c0694d2bba # load another value into integer register
amoadd.d x28, x24, (x1) # perform operation

# Testcase cp_rs2 (Test source rs2 = x25)
li x25, 0x5801b604c67a0127 # load random value
la x29, scratch # base address
sd x25, 0(x29) # store in memory
li x25, 0xbb61156f44f074e2 # load another value into integer register
amoadd.d x15, x25, (x29) # perform operation

# Testcase cp_rs2 (Test source rs2 = x26)
li x26, 0x3208d1676eaf14c3 # load random value
la x22, scratch # base address
sd x26, 0(x22) # store in memory
li x26, 0x67c580a7bd087f7c # load another value into integer register
amoadd.d x18, x26, (x22) # perform operation

# Testcase cp_rs2 (Test source rs2 = x27)
li x27, 0x20bfef4cc1e47c6d # load random value
la x6, scratch # base address
sd x27, 0(x6) # store in memory
li x27, 0x8ab852d2653875c5 # load another value into integer register
amoadd.d x14, x27, (x6) # perform operation

# Testcase cp_rs2 (Test source rs2 = x28)
li x28, 0xa45a0412c349c5e2 # load random value
la x6, scratch # base address
sd x28, 0(x6) # store in memory
li x28, 0x1d8a7991ed73b43e # load another value into integer register
amoadd.d x15, x28, (x6) # perform operation

# Testcase cp_rs2 (Test source rs2 = x29)
li x29, 0x1c48d47259b25201 # load random value
la x31, scratch # base address
sd x29, 0(x31) # store in memory
li x29, 0x3838b7518ca68283 # load another value into integer register
amoadd.d x8, x29, (x31) # perform operation

# Testcase cp_rs2 (Test source rs2 = x30)
li x30, 0x4ad2565100539ee9 # load random value
la x18, scratch # base address
sd x30, 0(x18) # store in memory
li x30, 0xc7eec732850d92dc # load another value into integer register
amoadd.d x17, x30, (x18) # perform operation

# Testcase cp_rs2 (Test source rs2 = x31)
li x31, 0xa38f2fb64854d469 # load random value
la x27, scratch # base address
sd x31, 0(x27) # store in memory
li x31, 0xe73660e100cabed3 # load another value into integer register
amoadd.d x24, x31, (x27) # perform operation

# Testcase cp_rd (Test destination rd = x0)
li x24, 0xf34a32c18f739b0c # load random value
la x3, scratch # base address
sd x24, 0(x3) # store in memory
li x24, 0x23518f9010fca13d # load another value into integer register
amoadd.d x0, x24, (x3) # perform operation

# Testcase cp_rd (Test destination rd = x1)
li x6, 0xa99e825ea8064732 # load random value
la x11, scratch # base address
sd x6, 0(x11) # store in memory
li x6, 0x5cb25a11cb81e630 # load another value into integer register
amoadd.d x1, x6, (x11) # perform operation

# Testcase cp_rd (Test destination rd = x2)
li x7, 0xd180ca288a4e6aa5 # load random value
la x9, scratch # base address
sd x7, 0(x9) # store in memory
li x7, 0x7531bf9607b1f1dc # load another value into integer register
amoadd.d x2, x7, (x9) # perform operation

# Testcase cp_rd (Test destination rd = x3)
li x22, 0x66e8ae9fba81673e # load random value
la x26, scratch # base address
sd x22, 0(x26) # store in memory
li x22, 0x347541c29c86a273 # load another value into integer register
amoadd.d x3, x22, (x26) # perform operation

# Testcase cp_rd (Test destination rd = x4)
mv x5, x4 # switch signature pointer register to avoid conflict with test
li x8, 0x8ef7c78ccc286874 # load random value
la x14, scratch # base address
sd x8, 0(x14) # store in memory
li x8, 0x4e638946d4223934 # load another value into integer register
amoadd.d x4, x8, (x14) # perform operation

# Testcase cp_rd (Test destination rd = x5)
mv x6, x5 # switch signature pointer register to avoid conflict with test
li x1, 0x70ff75b324be2799 # load random value
la x7, scratch # base address
sd x1, 0(x7) # store in memory
li x1, 0x5846ac973c065149 # load another value into integer register
amoadd.d x5, x1, (x7) # perform operation

# Testcase cp_rd (Test destination rd = x6)
mv x7, x6 # switch signature pointer register to avoid conflict with test
li x29, 0xc3ff3b12b7ff9175 # load random value
la x9, scratch # base address
sd x29, 0(x9) # store in memory
li x29, 0x740713ef37ba033e # load another value into integer register
amoadd.d x6, x29, (x9) # perform operation

# Testcase cp_rd (Test destination rd = x7)
mv x4, x7 # switch signature pointer register to avoid conflict with test
li x22, 0xdaaebdbea30b1634 # load random value
la x21, scratch # base address
sd x22, 0(x21) # store in memory
li x22, 0x3b419c8bb8a2a0e6 # load another value into integer register
amoadd.d x7, x22, (x21) # perform operation

# Testcase cp_rd (Test destination rd = x8)
li x24, 0x681ba5f86f4acde9 # load random value
la x11, scratch # base address
sd x24, 0(x11) # store in memory
li x24, 0x7266c5e8896834b5 # load another value into integer register
amoadd.d x8, x24, (x11) # perform operation

# Testcase cp_rd (Test destination rd = x9)
li x30, 0xcde987367b50e0d7 # load random value
la x19, scratch # base address
sd x30, 0(x19) # store in memory
li x30, 0x822dfb91c174abe4 # load another value into integer register
amoadd.d x9, x30, (x19) # perform operation

# Testcase cp_rd (Test destination rd = x10)
li x23, 0x07585a4147c14c66 # load random value
la x28, scratch # base address
sd x23, 0(x28) # store in memory
li x23, 0xe45dc8675468155f # load another value into integer register
amoadd.d x10, x23, (x28) # perform operation

# Testcase cp_rd (Test destination rd = x11)
li x22, 0xc59ffc94cf9bf649 # load random value
la x19, scratch # base address
sd x22, 0(x19) # store in memory
li x22, 0xf9f76cb46051795c # load another value into integer register
amoadd.d x11, x22, (x19) # perform operation

# Testcase cp_rd (Test destination rd = x12)
li x11, 0xfaf2953f45057fc8 # load random value
la x14, scratch # base address
sd x11, 0(x14) # store in memory
li x11, 0xe200fc361dd8153b # load another value into integer register
amoadd.d x12, x11, (x14) # perform operation

# Testcase cp_rd (Test destination rd = x13)
li x13, 0x195acedf896c8bfb # load random value
la x2, scratch # base address
sd x13, 0(x2) # store in memory
li x13, 0xbc016443c7b160fc # load another value into integer register
amoadd.d x13, x13, (x2) # perform operation

# Testcase cp_rd (Test destination rd = x14)
li x24, 0x677918757a5f44d5 # load random value
la x8, scratch # base address
sd x24, 0(x8) # store in memory
li x24, 0xff3215e8b079636d # load another value into integer register
amoadd.d x14, x24, (x8) # perform operation

# Testcase cp_rd (Test destination rd = x15)
li x25, 0x30f26d9022a2a17a # load random value
la x24, scratch # base address
sd x25, 0(x24) # store in memory
li x25, 0xea339202e6df7704 # load another value into integer register
amoadd.d x15, x25, (x24) # perform operation

# Testcase cp_rd (Test destination rd = x16)
li x10, 0xed72a51577c54b9e # load random value
la x29, scratch # base address
sd x10, 0(x29) # store in memory
li x10, 0xafb1356839cf5eef # load another value into integer register
amoadd.d x16, x10, (x29) # perform operation

# Testcase cp_rd (Test destination rd = x17)
li x27, 0xd0c7df1d12435642 # load random value
la x22, scratch # base address
sd x27, 0(x22) # store in memory
li x27, 0x72585696ec381ff5 # load another value into integer register
amoadd.d x17, x27, (x22) # perform operation

# Testcase cp_rd (Test destination rd = x18)
li x29, 0x4f45b777dfc53568 # load random value
la x13, scratch # base address
sd x29, 0(x13) # store in memory
li x29, 0x563bc7431cf6752d # load another value into integer register
amoadd.d x18, x29, (x13) # perform operation

# Testcase cp_rd (Test destination rd = x19)
li x31, 0xf3efa728ce5379ed # load random value
la x13, scratch # base address
sd x31, 0(x13) # store in memory
li x31, 0x502e4bd904874d59 # load another value into integer register
amoadd.d x19, x31, (x13) # perform operation

# Testcase cp_rd (Test destination rd = x20)
li x18, 0x8e9f4047dd140861 # load random value
la x5, scratch # base address
sd x18, 0(x5) # store in memory
li x18, 0x04a7b89dea5c4a34 # load another value into integer register
amoadd.d x20, x18, (x5) # perform operation

# Testcase cp_rd (Test destination rd = x21)
li x7, 0xf2ecd562758ff4ff # load random value
la x9, scratch # base address
sd x7, 0(x9) # store in memory
li x7, 0xa8d0de86349631aa # load another value into integer register
amoadd.d x21, x7, (x9) # perform operation

# Testcase cp_rd (Test destination rd = x22)
li x9, 0xc732b1a6d1fce4ab # load random value
la x12, scratch # base address
sd x9, 0(x12) # store in memory
li x9, 0x286f4e30d134e08a # load another value into integer register
amoadd.d x22, x9, (x12) # perform operation

# Testcase cp_rd (Test destination rd = x23)
li x19, 0x324400ebe18971bd # load random value
la x7, scratch # base address
sd x19, 0(x7) # store in memory
li x19, 0x34169c642022743b # load another value into integer register
amoadd.d x23, x19, (x7) # perform operation

# Testcase cp_rd (Test destination rd = x24)
li x9, 0x2b97931641e56908 # load random value
la x26, scratch # base address
sd x9, 0(x26) # store in memory
li x9, 0x4c82aabb6a8aad70 # load another value into integer register
amoadd.d x24, x9, (x26) # perform operation

# Testcase cp_rd (Test destination rd = x25)
li x17, 0x9097928e5ec4b8c1 # load random value
la x30, scratch # base address
sd x17, 0(x30) # store in memory
li x17, 0x08c97f4bf4c369fa # load another value into integer register
amoadd.d x25, x17, (x30) # perform operation

# Testcase cp_rd (Test destination rd = x26)
li x9, 0xb661bd50e910b94b # load random value
la x11, scratch # base address
sd x9, 0(x11) # store in memory
li x9, 0xdc1609820829da2f # load another value into integer register
amoadd.d x26, x9, (x11) # perform operation

# Testcase cp_rd (Test destination rd = x27)
li x22, 0x5ff48e74844c7453 # load random value
la x14, scratch # base address
sd x22, 0(x14) # store in memory
li x22, 0xc4d74976b7f9c191 # load another value into integer register
amoadd.d x27, x22, (x14) # perform operation

# Testcase cp_rd (Test destination rd = x28)
li x1, 0xfc66a13ba6768c60 # load random value
la x17, scratch # base address
sd x1, 0(x17) # store in memory
li x1, 0xeac6e09edb488478 # load another value into integer register
amoadd.d x28, x1, (x17) # perform operation

# Testcase cp_rd (Test destination rd = x29)
li x21, 0x7fcd19ffb937d03e # load random value
la x12, scratch # base address
sd x21, 0(x12) # store in memory
li x21, 0xa0a8f8c899f58501 # load another value into integer register
amoadd.d x29, x21, (x12) # perform operation

# Testcase cp_rd (Test destination rd = x30)
li x8, 0x899542ec443af848 # load random value
la x1, scratch # base address
sd x8, 0(x1) # store in memory
li x8, 0x1e69cd7468eddc2d # load another value into integer register
amoadd.d x30, x8, (x1) # perform operation

# Testcase cp_rd (Test destination rd = x31)
li x29, 0xe6ad7c43ef64e11a # load random value
la x20, scratch # base address
sd x29, 0(x20) # store in memory
li x29, 0x0e53e8bd0bd88a2f # load another value into integer register
amoadd.d x31, x29, (x20) # perform operation

# Testcase cp_rs2_corners (Test source rs2 value = 0x0)
li x8, 0x5de467735d1c9a70 # load random value
la x6, scratch # base address
sd x8, 0(x6) # store in memory
li x8, 0x0000000000000000 # load another value into integer register
amoadd.d x19, x8, (x6) # perform operation

# Testcase cp_rs2_corners (Test source rs2 value = 0x1)
li x14, 0xe97ca6621325a0fa # load random value
la x8, scratch # base address
sd x14, 0(x8) # store in memory
li x14, 0x0000000000000001 # load another value into integer register
amoadd.d x16, x14, (x8) # perform operation

# Testcase cp_rs2_corners (Test source rs2 value = 0x2)
li x9, 0x5fb7ce78c4c4aa06 # load random value
la x15, scratch # base address
sd x9, 0(x15) # store in memory
li x9, 0x0000000000000002 # load another value into integer register
amoadd.d x31, x9, (x15) # perform operation

# Testcase cp_rs2_corners (Test source rs2 value = 0x8000000000000000)
li x8, 0x5c203115af65e207 # load random value
la x9, scratch # base address
sd x8, 0(x9) # store in memory
li x8, 0x8000000000000000 # load another value into integer register
amoadd.d x20, x8, (x9) # perform operation

# Testcase cp_rs2_corners (Test source rs2 value = 0x8000000000000001)
li x28, 0x1dc2b899a0668b06 # load random value
la x17, scratch # base address
sd x28, 0(x17) # store in memory
li x28, 0x8000000000000001 # load another value into integer register
amoadd.d x20, x28, (x17) # perform operation

# Testcase cp_rs2_corners (Test source rs2 value = 0x7fffffffffffffff)
li x28, 0x6ff9943f1c6cfbb6 # load random value
la x22, scratch # base address
sd x28, 0(x22) # store in memory
li x28, 0x7fffffffffffffff # load another value into integer register
amoadd.d x3, x28, (x22) # perform operation

# Testcase cp_rs2_corners (Test source rs2 value = 0x7ffffffffffffffe)
li x19, 0xf1488f4ec4ee0032 # load random value
la x29, scratch # base address
sd x19, 0(x29) # store in memory
li x19, 0x7ffffffffffffffe # load another value into integer register
amoadd.d x18, x19, (x29) # perform operation

# Testcase cp_rs2_corners (Test source rs2 value = 0xffffffffffffffff)
li x12, 0xc963e35d9f91b1c6 # load random value
la x22, scratch # base address
sd x12, 0(x22) # store in memory
li x12, 0xffffffffffffffff # load another value into integer register
amoadd.d x9, x12, (x22) # perform operation

# Testcase cp_rs2_corners (Test source rs2 value = 0xfffffffffffffffe)
li x26, 0x5f4112700888d888 # load random value
la x23, scratch # base address
sd x26, 0(x23) # store in memory
li x26, 0xfffffffffffffffe # load another value into integer register
amoadd.d x5, x26, (x23) # perform operation

# Testcase cp_rs2_corners (Test source rs2 value = 0x5bbc887763ae86f2)
li x20, 0x09e9dbb067404149 # load random value
la x14, scratch # base address
sd x20, 0(x14) # store in memory
li x20, 0x5bbc887763ae86f2 # load another value into integer register
amoadd.d x19, x20, (x14) # perform operation

# Testcase cp_rs2_corners (Test source rs2 value = 0xaaaaaaaaaaaaaaaa)
li x20, 0x73782b3b4c65965b # load random value
la x19, scratch # base address
sd x20, 0(x19) # store in memory
li x20, 0xaaaaaaaaaaaaaaaa # load another value into integer register
amoadd.d x8, x20, (x19) # perform operation

# Testcase cp_rs2_corners (Test source rs2 value = 0x5555555555555555)
li x11, 0xcfa3f5d090787e02 # load random value
la x27, scratch # base address
sd x11, 0(x27) # store in memory
li x11, 0x5555555555555555 # load another value into integer register
amoadd.d x8, x11, (x27) # perform operation

# Testcase cp_rs2_corners (Test source rs2 value = 0xffffffff)
li x25, 0x78d6ac6b9efef8ed # load random value
la x10, scratch # base address
sd x25, 0(x10) # store in memory
li x25, 0x00000000ffffffff # load another value into integer register
amoadd.d x6, x25, (x10) # perform operation

# Testcase cp_rs2_corners (Test source rs2 value = 0xfffffffe)
li x22, 0xbe86a4c24a7021fb # load random value
la x11, scratch # base address
sd x22, 0(x11) # store in memory
li x22, 0x00000000fffffffe # load another value into integer register
amoadd.d x1, x22, (x11) # perform operation

# Testcase cp_rs2_corners (Test source rs2 value = 0x100000000)
li x14, 0xfa6ce53c478ba311 # load random value
la x19, scratch # base address
sd x14, 0(x19) # store in memory
li x14, 0x0000000100000000 # load another value into integer register
amoadd.d x25, x14, (x19) # perform operation

# Testcase cp_rs2_corners (Test source rs2 value = 0x100000001)
li x7, 0xcb44029d08f1676c # load random value
la x2, scratch # base address
sd x7, 0(x2) # store in memory
li x7, 0x0000000100000001 # load another value into integer register
amoadd.d x9, x7, (x2) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x1)
li x1, 0x31b21cb5285ce372 # load random value
la x1, scratch # base address
sd x1, 0(x1) # store in memory
amoadd.d x8, x1, (x1) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x2)
li x2, 0xfac07272af4480ba # load random value
la x2, scratch # base address
sd x2, 0(x2) # store in memory
amoadd.d x2, x2, (x2) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x3)
li x3, 0x710778d8d397dd00 # load random value
la x3, scratch # base address
sd x3, 0(x3) # store in memory
amoadd.d x21, x3, (x3) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x4)
mv x5, x4 # switch signature pointer register to avoid conflict with test
li x4, 0x9b6fcf05f03e9d30 # load random value
la x4, scratch # base address
sd x4, 0(x4) # store in memory
amoadd.d x26, x4, (x4) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x5)
mv x6, x5 # switch signature pointer register to avoid conflict with test
li x5, 0xb8cae6b9534aeead # load random value
la x5, scratch # base address
sd x5, 0(x5) # store in memory
amoadd.d x9, x5, (x5) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x6)
mv x7, x6 # switch signature pointer register to avoid conflict with test
li x6, 0x952cbddbd3658543 # load random value
la x6, scratch # base address
sd x6, 0(x6) # store in memory
amoadd.d x2, x6, (x6) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x7)
mv x4, x7 # switch signature pointer register to avoid conflict with test
li x7, 0x13d8deaf008a9da0 # load random value
la x7, scratch # base address
sd x7, 0(x7) # store in memory
amoadd.d x26, x7, (x7) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x8)
li x8, 0xb91e44365be05c0d # load random value
la x8, scratch # base address
sd x8, 0(x8) # store in memory
amoadd.d x18, x8, (x8) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x9)
li x9, 0x137c08484f04697c # load random value
la x9, scratch # base address
sd x9, 0(x9) # store in memory
amoadd.d x17, x9, (x9) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x10)
li x10, 0xa24f3a5253336e21 # load random value
la x10, scratch # base address
sd x10, 0(x10) # store in memory
amoadd.d x16, x10, (x10) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x11)
li x11, 0xf837fb501047994e # load random value
la x11, scratch # base address
sd x11, 0(x11) # store in memory
amoadd.d x27, x11, (x11) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x12)
li x12, 0x7b3b141552b356d2 # load random value
la x12, scratch # base address
sd x12, 0(x12) # store in memory
amoadd.d x13, x12, (x12) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x13)
li x13, 0x4e14ca5ec8378852 # load random value
la x13, scratch # base address
sd x13, 0(x13) # store in memory
amoadd.d x16, x13, (x13) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x14)
li x14, 0xe27a477362a3d5aa # load random value
la x14, scratch # base address
sd x14, 0(x14) # store in memory
amoadd.d x17, x14, (x14) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x15)
li x15, 0xaa4109cc5e457e82 # load random value
la x15, scratch # base address
sd x15, 0(x15) # store in memory
amoadd.d x17, x15, (x15) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x16)
li x16, 0x1ab3ae30417b067e # load random value
la x16, scratch # base address
sd x16, 0(x16) # store in memory
amoadd.d x20, x16, (x16) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x17)
li x17, 0x80bfa8205d8c0462 # load random value
la x17, scratch # base address
sd x17, 0(x17) # store in memory
amoadd.d x3, x17, (x17) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x18)
li x18, 0xf2fccfe6ad7e7f87 # load random value
la x18, scratch # base address
sd x18, 0(x18) # store in memory
amoadd.d x2, x18, (x18) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x19)
li x19, 0xf1dcc597dc1dfd15 # load random value
la x19, scratch # base address
sd x19, 0(x19) # store in memory
amoadd.d x9, x19, (x19) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x20)
li x20, 0xeea77fe12953605e # load random value
la x20, scratch # base address
sd x20, 0(x20) # store in memory
amoadd.d x11, x20, (x20) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x21)
li x21, 0xf6b8d7645773ee6d # load random value
la x21, scratch # base address
sd x21, 0(x21) # store in memory
amoadd.d x28, x21, (x21) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x22)
li x22, 0xfead62df931978f0 # load random value
la x22, scratch # base address
sd x22, 0(x22) # store in memory
amoadd.d x13, x22, (x22) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x23)
li x23, 0xf425027a736f34bd # load random value
la x23, scratch # base address
sd x23, 0(x23) # store in memory
amoadd.d x15, x23, (x23) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x24)
li x24, 0x64d83ab05a6f5546 # load random value
la x24, scratch # base address
sd x24, 0(x24) # store in memory
amoadd.d x9, x24, (x24) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x25)
li x25, 0xb2383cd8f2aa9384 # load random value
la x25, scratch # base address
sd x25, 0(x25) # store in memory
amoadd.d x17, x25, (x25) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x26)
li x26, 0xa189a99c8f72f304 # load random value
la x26, scratch # base address
sd x26, 0(x26) # store in memory
amoadd.d x2, x26, (x26) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x27)
li x27, 0x85ae09d8e8251704 # load random value
la x27, scratch # base address
sd x27, 0(x27) # store in memory
amoadd.d x13, x27, (x27) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x28)
li x28, 0x2047b4cc664d782e # load random value
la x28, scratch # base address
sd x28, 0(x28) # store in memory
amoadd.d x23, x28, (x28) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x29)
li x29, 0x6d0247657d67469a # load random value
la x29, scratch # base address
sd x29, 0(x29) # store in memory
amoadd.d x9, x29, (x29) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x30)
li x30, 0x421c8f1916c28412 # load random value
la x30, scratch # base address
sd x30, 0(x30) # store in memory
amoadd.d x16, x30, (x30) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x31)
li x31, 0x384df9902e1e042d # load random value
la x31, scratch # base address
sd x31, 0(x31) # store in memory
amoadd.d x7, x31, (x31) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x1)
li x11, 0xd6052e94ab4927db # load random value
la x1, scratch # base address
sd x11, 0(x1) # store in memory
li x11, 0x314616cb728a6f32 # load another value into integer register
amoadd.d x1, x11, (x1) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x2)
li x25, 0xf118fd9188a9783a # load random value
la x2, scratch # base address
sd x25, 0(x2) # store in memory
li x25, 0x2f1f6459a16d4b01 # load another value into integer register
amoadd.d x2, x25, (x2) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x3)
li x29, 0x84f9d103bdcb6b93 # load random value
la x3, scratch # base address
sd x29, 0(x3) # store in memory
li x29, 0x74a0a49ae226683a # load another value into integer register
amoadd.d x3, x29, (x3) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x4)
mv x5, x4 # switch signature pointer register to avoid conflict with test
li x25, 0x73e6dd0a39f6f199 # load random value
la x4, scratch # base address
sd x25, 0(x4) # store in memory
li x25, 0xa839dbe0a7747475 # load another value into integer register
amoadd.d x4, x25, (x4) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x5)
mv x6, x5 # switch signature pointer register to avoid conflict with test
li x23, 0x72fb9b0be4e5f41e # load random value
la x5, scratch # base address
sd x23, 0(x5) # store in memory
li x23, 0x2689e22cfd2c3778 # load another value into integer register
amoadd.d x5, x23, (x5) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x6)
mv x7, x6 # switch signature pointer register to avoid conflict with test
li x15, 0x86599205ea9236c5 # load random value
la x6, scratch # base address
sd x15, 0(x6) # store in memory
li x15, 0xe0c2877a931514a0 # load another value into integer register
amoadd.d x6, x15, (x6) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x7)
mv x4, x7 # switch signature pointer register to avoid conflict with test
li x29, 0x924311f59030a8a1 # load random value
la x7, scratch # base address
sd x29, 0(x7) # store in memory
li x29, 0xaa134077644d50ba # load another value into integer register
amoadd.d x7, x29, (x7) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x8)
li x28, 0xf978f3c58103bde8 # load random value
la x8, scratch # base address
sd x28, 0(x8) # store in memory
li x28, 0xaf6eb529c5cdb721 # load another value into integer register
amoadd.d x8, x28, (x8) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x9)
li x6, 0x108ea8cfabe9fedb # load random value
la x9, scratch # base address
sd x6, 0(x9) # store in memory
li x6, 0x4fb33e6975a7bd3a # load another value into integer register
amoadd.d x9, x6, (x9) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x10)
li x24, 0x82075f6c170d5275 # load random value
la x10, scratch # base address
sd x24, 0(x10) # store in memory
li x24, 0xd425ed1b1f76db5e # load another value into integer register
amoadd.d x10, x24, (x10) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x11)
li x1, 0xec20fc8bac6e3967 # load random value
la x11, scratch # base address
sd x1, 0(x11) # store in memory
li x1, 0x788f165132ac8856 # load another value into integer register
amoadd.d x11, x1, (x11) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x12)
li x17, 0x5b19994034045ba1 # load random value
la x12, scratch # base address
sd x17, 0(x12) # store in memory
li x17, 0xb496662b5683a3b6 # load another value into integer register
amoadd.d x12, x17, (x12) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x13)
li x5, 0x782c7a7b027ea1af # load random value
la x13, scratch # base address
sd x5, 0(x13) # store in memory
li x5, 0xf656c27afac41cdc # load another value into integer register
amoadd.d x13, x5, (x13) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x14)
li x17, 0x8825eeaf4a528f0a # load random value
la x14, scratch # base address
sd x17, 0(x14) # store in memory
li x17, 0x350a87a6ed6c1aec # load another value into integer register
amoadd.d x14, x17, (x14) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x15)
li x8, 0x4036b814e0edf047 # load random value
la x15, scratch # base address
sd x8, 0(x15) # store in memory
li x8, 0x7e5097bc5d28abe2 # load another value into integer register
amoadd.d x15, x8, (x15) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x16)
li x6, 0x9812ca728d5403c6 # load random value
la x16, scratch # base address
sd x6, 0(x16) # store in memory
li x6, 0xa942b830b69d64d7 # load another value into integer register
amoadd.d x16, x6, (x16) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x17)
li x27, 0x725090d304d67c8f # load random value
la x17, scratch # base address
sd x27, 0(x17) # store in memory
li x27, 0x831f2a74ee32d9bc # load another value into integer register
amoadd.d x17, x27, (x17) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x18)
li x1, 0xe97934f27ffd2c3c # load random value
la x18, scratch # base address
sd x1, 0(x18) # store in memory
li x1, 0x1a43fdeeb767339b # load another value into integer register
amoadd.d x18, x1, (x18) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x19)
li x13, 0x49c0f69489d3a276 # load random value
la x19, scratch # base address
sd x13, 0(x19) # store in memory
li x13, 0x7db73d6f77f703f6 # load another value into integer register
amoadd.d x19, x13, (x19) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x20)
li x5, 0x7d414fdf59aaf238 # load random value
la x20, scratch # base address
sd x5, 0(x20) # store in memory
li x5, 0x408717aef862483c # load another value into integer register
amoadd.d x20, x5, (x20) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x21)
li x19, 0xe6ebe6aaa4a925ce # load random value
la x21, scratch # base address
sd x19, 0(x21) # store in memory
li x19, 0x58c7a9a44e04de67 # load another value into integer register
amoadd.d x21, x19, (x21) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x22)
li x7, 0x0aad311f80e73439 # load random value
la x22, scratch # base address
sd x7, 0(x22) # store in memory
li x7, 0xbcd933af4d6a83e2 # load another value into integer register
amoadd.d x22, x7, (x22) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x23)
li x3, 0xfd68d5a33b4c57db # load random value
la x23, scratch # base address
sd x3, 0(x23) # store in memory
li x3, 0xa0ad8f28f430ca46 # load another value into integer register
amoadd.d x23, x3, (x23) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x24)
li x28, 0xb1a8b9ae244acf91 # load random value
la x24, scratch # base address
sd x28, 0(x24) # store in memory
li x28, 0xa9dfa430d35f3569 # load another value into integer register
amoadd.d x24, x28, (x24) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x25)
li x15, 0x8bf304dba5d55762 # load random value
la x25, scratch # base address
sd x15, 0(x25) # store in memory
li x15, 0x66e463eda6b1c2dc # load another value into integer register
amoadd.d x25, x15, (x25) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x26)
li x7, 0xa85619765a7e055b # load random value
la x26, scratch # base address
sd x7, 0(x26) # store in memory
li x7, 0x997881c47af31d26 # load another value into integer register
amoadd.d x26, x7, (x26) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x27)
li x1, 0x0033d0e2f854fbd8 # load random value
la x27, scratch # base address
sd x1, 0(x27) # store in memory
li x1, 0x438f6dd50c7e6f47 # load another value into integer register
amoadd.d x27, x1, (x27) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x28)
li x19, 0xd7280835c28d2983 # load random value
la x28, scratch # base address
sd x19, 0(x28) # store in memory
li x19, 0x2d1934e15f0194f5 # load another value into integer register
amoadd.d x28, x19, (x28) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x29)
li x20, 0x3b027bee3903e562 # load random value
la x29, scratch # base address
sd x20, 0(x29) # store in memory
li x20, 0xca4ae75e7338c061 # load another value into integer register
amoadd.d x29, x20, (x29) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x30)
li x25, 0xd46f1f483a8d2f4c # load random value
la x30, scratch # base address
sd x25, 0(x30) # store in memory
li x25, 0x12b5ebbaf5bdb04a # load another value into integer register
amoadd.d x30, x25, (x30) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x31)
li x24, 0x8f5be1b231fbfa8e # load random value
la x31, scratch # base address
sd x24, 0(x31) # store in memory
li x24, 0xc8b7e4152504dc43 # load another value into integer register
amoadd.d x31, x24, (x31) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x0)
li x0, 0xf16cfb127c2b5473 # load random value
la x1, scratch # base address
sd x0, 0(x1) # store in memory
li x0, 0xe0577774088a48b1 # load another value into integer register
amoadd.d x0, x0, (x1) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x1)
li x1, 0xe10e66b52f8dd991 # load random value
la x1, scratch # base address
sd x1, 0(x1) # store in memory
amoadd.d x1, x1, (x1) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x2)
li x2, 0xdc5be72beadca44b # load random value
la x16, scratch # base address
sd x2, 0(x16) # store in memory
li x2, 0xc947b23321cbc1b6 # load another value into integer register
amoadd.d x2, x2, (x16) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x3)
li x3, 0xb60f95c9bd424df5 # load random value
la x13, scratch # base address
sd x3, 0(x13) # store in memory
li x3, 0xdfa62054eb0387df # load another value into integer register
amoadd.d x3, x3, (x13) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x4)
mv x5, x4 # switch signature pointer register to avoid conflict with test
li x4, 0xdfdfe41fcc7a5de8 # load random value
la x14, scratch # base address
sd x4, 0(x14) # store in memory
li x4, 0xf4a64e46a8d08a1b # load another value into integer register
amoadd.d x4, x4, (x14) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x5)
mv x6, x5 # switch signature pointer register to avoid conflict with test
li x5, 0x40281aa2f4bb79f4 # load random value
la x12, scratch # base address
sd x5, 0(x12) # store in memory
li x5, 0x74aa48bb61db510d # load another value into integer register
amoadd.d x5, x5, (x12) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x6)
mv x7, x6 # switch signature pointer register to avoid conflict with test
li x6, 0x8e350728a2e55e92 # load random value
la x29, scratch # base address
sd x6, 0(x29) # store in memory
li x6, 0xba4b3b68f9f1f70c # load another value into integer register
amoadd.d x6, x6, (x29) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x7)
mv x4, x7 # switch signature pointer register to avoid conflict with test
li x7, 0xdb0b5547bbda7290 # load random value
la x12, scratch # base address
sd x7, 0(x12) # store in memory
li x7, 0x1ebb459a0af3723a # load another value into integer register
amoadd.d x7, x7, (x12) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x8)
li x8, 0x6bffb86a5855f503 # load random value
la x20, scratch # base address
sd x8, 0(x20) # store in memory
li x8, 0xa086140d52cd47ab # load another value into integer register
amoadd.d x8, x8, (x20) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x9)
li x9, 0x476b98ee7aec0e88 # load random value
la x3, scratch # base address
sd x9, 0(x3) # store in memory
li x9, 0x27775763513a510f # load another value into integer register
amoadd.d x9, x9, (x3) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x10)
li x10, 0x904d120670ba5eac # load random value
la x12, scratch # base address
sd x10, 0(x12) # store in memory
li x10, 0xddce76162ff9375e # load another value into integer register
amoadd.d x10, x10, (x12) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x11)
li x11, 0x3085729cf2f5fc1d # load random value
la x10, scratch # base address
sd x11, 0(x10) # store in memory
li x11, 0x861bd2e092b7c889 # load another value into integer register
amoadd.d x11, x11, (x10) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x12)
li x12, 0xd53884e03c908685 # load random value
la x31, scratch # base address
sd x12, 0(x31) # store in memory
li x12, 0xd9acff0cdb2b36cd # load another value into integer register
amoadd.d x12, x12, (x31) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x13)
li x13, 0x3e99028bfecab6b3 # load random value
la x23, scratch # base address
sd x13, 0(x23) # store in memory
li x13, 0xecdad7f300ce5508 # load another value into integer register
amoadd.d x13, x13, (x23) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x14)
li x14, 0x71e064291bb3e05a # load random value
la x11, scratch # base address
sd x14, 0(x11) # store in memory
li x14, 0x611c8c0046bff204 # load another value into integer register
amoadd.d x14, x14, (x11) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x15)
li x15, 0x4727dfa8d2b2914d # load random value
la x16, scratch # base address
sd x15, 0(x16) # store in memory
li x15, 0x2e28660b530b9099 # load another value into integer register
amoadd.d x15, x15, (x16) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x16)
li x16, 0xb802997388fa4ac6 # load random value
la x3, scratch # base address
sd x16, 0(x3) # store in memory
li x16, 0xe53cb0d01e94ac70 # load another value into integer register
amoadd.d x16, x16, (x3) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x17)
li x17, 0xd732e43902d2e2a9 # load random value
la x3, scratch # base address
sd x17, 0(x3) # store in memory
li x17, 0x5e5291853c5bc7f9 # load another value into integer register
amoadd.d x17, x17, (x3) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x18)
li x18, 0xaf714dc722c52c85 # load random value
la x31, scratch # base address
sd x18, 0(x31) # store in memory
li x18, 0x586d3531f7409609 # load another value into integer register
amoadd.d x18, x18, (x31) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x19)
li x19, 0x32edd3b8a07c3840 # load random value
la x25, scratch # base address
sd x19, 0(x25) # store in memory
li x19, 0x8bd56d84f0c1f408 # load another value into integer register
amoadd.d x19, x19, (x25) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x20)
li x20, 0x995e79c4761332f5 # load random value
la x25, scratch # base address
sd x20, 0(x25) # store in memory
li x20, 0x5e4510406256a003 # load another value into integer register
amoadd.d x20, x20, (x25) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x21)
li x21, 0x7bfb8f57bd631856 # load random value
la x10, scratch # base address
sd x21, 0(x10) # store in memory
li x21, 0x0e7608a60b99c298 # load another value into integer register
amoadd.d x21, x21, (x10) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x22)
li x22, 0x0d0cda2ea9e641b2 # load random value
la x8, scratch # base address
sd x22, 0(x8) # store in memory
li x22, 0x9befdbf1f7594115 # load another value into integer register
amoadd.d x22, x22, (x8) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x23)
li x23, 0xc5a686d3a14ba91f # load random value
la x30, scratch # base address
sd x23, 0(x30) # store in memory
li x23, 0x99d7eb89928e180d # load another value into integer register
amoadd.d x23, x23, (x30) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x24)
li x24, 0x8aa76c1399e4a74a # load random value
la x2, scratch # base address
sd x24, 0(x2) # store in memory
li x24, 0x0ba730c57d9c315a # load another value into integer register
amoadd.d x24, x24, (x2) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x25)
li x25, 0x1769b73033f640b6 # load random value
la x11, scratch # base address
sd x25, 0(x11) # store in memory
li x25, 0x364c8d5a55487680 # load another value into integer register
amoadd.d x25, x25, (x11) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x26)
li x26, 0xd7784448434d46dd # load random value
la x23, scratch # base address
sd x26, 0(x23) # store in memory
li x26, 0xc6207ae4b0f16f37 # load another value into integer register
amoadd.d x26, x26, (x23) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x27)
li x27, 0x41e217c4fc6c2f5c # load random value
la x2, scratch # base address
sd x27, 0(x2) # store in memory
li x27, 0x9fceb382379a8ff5 # load another value into integer register
amoadd.d x27, x27, (x2) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x28)
li x28, 0x41e9ad1c92f3bfbd # load random value
la x16, scratch # base address
sd x28, 0(x16) # store in memory
li x28, 0x5d68fb47c821bf5a # load another value into integer register
amoadd.d x28, x28, (x16) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x29)
li x29, 0x83211d35f9e3cf1d # load random value
la x5, scratch # base address
sd x29, 0(x5) # store in memory
li x29, 0x37382e9cd8c2abf3 # load another value into integer register
amoadd.d x29, x29, (x5) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x30)
li x30, 0xeaa8f4e45b815072 # load random value
la x6, scratch # base address
sd x30, 0(x6) # store in memory
li x30, 0xc6371723345650a8 # load another value into integer register
amoadd.d x30, x30, (x6) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x31)
li x31, 0x30bfcd874a4cd88d # load random value
la x5, scratch # base address
sd x31, 0(x5) # store in memory
li x31, 0x00aef1dc9b3bb2dd # load another value into integer register
amoadd.d x31, x31, (x5) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x1)
li x1, 0x652a4403023a3bbd # load random value
la x1, scratch # base address
sd x1, 0(x1) # store in memory
amoadd.d x1, x1, (x1) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x2)
li x2, 0x4c317f0978374366 # load random value
la x2, scratch # base address
sd x2, 0(x2) # store in memory
amoadd.d x2, x2, (x2) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x3)
li x3, 0x37bb43d3a4c363ab # load random value
la x3, scratch # base address
sd x3, 0(x3) # store in memory
amoadd.d x3, x3, (x3) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x4)
mv x5, x4 # switch signature pointer register to avoid conflict with test
li x4, 0xd3c8c06d2f0d1d8e # load random value
la x4, scratch # base address
sd x4, 0(x4) # store in memory
amoadd.d x4, x4, (x4) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x5)
mv x6, x5 # switch signature pointer register to avoid conflict with test
li x5, 0xb589900736704b12 # load random value
la x5, scratch # base address
sd x5, 0(x5) # store in memory
amoadd.d x5, x5, (x5) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x6)
mv x7, x6 # switch signature pointer register to avoid conflict with test
li x6, 0x50faa1b9625547ef # load random value
la x6, scratch # base address
sd x6, 0(x6) # store in memory
amoadd.d x6, x6, (x6) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x7)
mv x4, x7 # switch signature pointer register to avoid conflict with test
li x7, 0x28309f62412c71bf # load random value
la x7, scratch # base address
sd x7, 0(x7) # store in memory
amoadd.d x7, x7, (x7) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x8)
li x8, 0x46a4a38d5c58c52a # load random value
la x8, scratch # base address
sd x8, 0(x8) # store in memory
amoadd.d x8, x8, (x8) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x9)
li x9, 0xa117a680a5c95d38 # load random value
la x9, scratch # base address
sd x9, 0(x9) # store in memory
amoadd.d x9, x9, (x9) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x10)
li x10, 0xb50c9d96672c54ea # load random value
la x10, scratch # base address
sd x10, 0(x10) # store in memory
amoadd.d x10, x10, (x10) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x11)
li x11, 0xc1ee7b5cb140e5ef # load random value
la x11, scratch # base address
sd x11, 0(x11) # store in memory
amoadd.d x11, x11, (x11) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x12)
li x12, 0x6446e8613a8228f4 # load random value
la x12, scratch # base address
sd x12, 0(x12) # store in memory
amoadd.d x12, x12, (x12) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x13)
li x13, 0x3073f09451462e7a # load random value
la x13, scratch # base address
sd x13, 0(x13) # store in memory
amoadd.d x13, x13, (x13) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x14)
li x14, 0x8495556090693c93 # load random value
la x14, scratch # base address
sd x14, 0(x14) # store in memory
amoadd.d x14, x14, (x14) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x15)
li x15, 0x63f2da916aa88e16 # load random value
la x15, scratch # base address
sd x15, 0(x15) # store in memory
amoadd.d x15, x15, (x15) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x16)
li x16, 0x879a9602f7e660d2 # load random value
la x16, scratch # base address
sd x16, 0(x16) # store in memory
amoadd.d x16, x16, (x16) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x17)
li x17, 0x65b60b508123eac4 # load random value
la x17, scratch # base address
sd x17, 0(x17) # store in memory
amoadd.d x17, x17, (x17) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x18)
li x18, 0x7223bedb0518c7cc # load random value
la x18, scratch # base address
sd x18, 0(x18) # store in memory
amoadd.d x18, x18, (x18) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x19)
li x19, 0xdcfb0924e369084c # load random value
la x19, scratch # base address
sd x19, 0(x19) # store in memory
amoadd.d x19, x19, (x19) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x20)
li x20, 0x89ce5e362f20bd83 # load random value
la x20, scratch # base address
sd x20, 0(x20) # store in memory
amoadd.d x20, x20, (x20) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x21)
li x21, 0x293466022f8bd963 # load random value
la x21, scratch # base address
sd x21, 0(x21) # store in memory
amoadd.d x21, x21, (x21) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x22)
li x22, 0x0aadaf3b6df4f3bf # load random value
la x22, scratch # base address
sd x22, 0(x22) # store in memory
amoadd.d x22, x22, (x22) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x23)
li x23, 0x3589b6afdcf6647f # load random value
la x23, scratch # base address
sd x23, 0(x23) # store in memory
amoadd.d x23, x23, (x23) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x24)
li x24, 0x7e239589e42a178f # load random value
la x24, scratch # base address
sd x24, 0(x24) # store in memory
amoadd.d x24, x24, (x24) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x25)
li x25, 0x694acd807aff465a # load random value
la x25, scratch # base address
sd x25, 0(x25) # store in memory
amoadd.d x25, x25, (x25) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x26)
li x26, 0xc727d75a7cfdd41b # load random value
la x26, scratch # base address
sd x26, 0(x26) # store in memory
amoadd.d x26, x26, (x26) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x27)
li x27, 0x4748d09f6e0c0480 # load random value
la x27, scratch # base address
sd x27, 0(x27) # store in memory
amoadd.d x27, x27, (x27) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x28)
li x28, 0xea2728739b747c10 # load random value
la x28, scratch # base address
sd x28, 0(x28) # store in memory
amoadd.d x28, x28, (x28) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x29)
li x29, 0xefc244f9a1ab1c6f # load random value
la x29, scratch # base address
sd x29, 0(x29) # store in memory
amoadd.d x29, x29, (x29) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x30)
li x30, 0xfa5ac7ec5cfac2d7 # load random value
la x30, scratch # base address
sd x30, 0(x30) # store in memory
amoadd.d x30, x30, (x30) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x31)
li x31, 0x9c32b60e790ae878 # load random value
la x31, scratch # base address
sd x31, 0(x31) # store in memory
amoadd.d x31, x31, (x31) # perform operation

# Testcase cp_gpr/fpr_hazard nohaz test
la x8, scratch
add x21, x25, x31 # perform first operation
amoadd.d x10, x17, (x8) # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard nohaz test
la x17, scratch
add x7, x15, x24 # perform first operation
amoadd.d x13, x25, (x17) # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard nohaz test
la x5, scratch
add x6, x25, x3 # perform first operation
amoadd.d x30, x18, (x5) # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard raw test
la x25, scratch
add x8, x8, x0 # perform first operation
amoadd.d x2, x8, (x25) # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard raw test
la x5, scratch
add x5, x5, x0 # perform first operation
amoadd.d x2, x3, (x5) # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard raw test
la x7, scratch
add x26, x26, x0 # perform first operation
amoadd.d x28, x19, (x7) # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard waw test
la x1, scratch
add x13, x23, x15 # perform first operation
amoadd.d x13, x5, (x1) # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard waw test
la x8, scratch
add x23, x11, x22 # perform first operation
amoadd.d x23, x16, (x8) # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard waw test
la x10, scratch
add x14, x21, x17 # perform first operation
amoadd.d x14, x16, (x10) # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard war test
la x31, scratch
add x23, x26, x17 # perform first operation
amoadd.d x26, x28, (x31) # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard war test
la x29, scratch
add x12, x8, x6 # perform first operation
amoadd.d x6, x24, (x29) # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard war test
la x10, scratch
add x22, x2, x8 # perform first operation
amoadd.d x3, x19, (x10) # perform second (triggering) operation

#.EQU SIGSIZE,0


// ******************
// Tests from: WALLY-COV-amoswap.w.S
// ******************


# initialize signature pointer
la x4, begin_signature

    
# Testcase cp_rs1 (Test source rs1 = x1)
li x24, 0xfd394a8169a8f6b5 # load random value
la x1, scratch # base address
sd x24, 0(x1) # store in memory
li x24, 0x6e5fa331768beaa0 # load another value into integer register
amoswap.w x11, x24, (x1) # perform operation

# Testcase cp_rs1 (Test source rs1 = x2)
li x19, 0x3856594e933054eb # load random value
la x2, scratch # base address
sd x19, 0(x2) # store in memory
li x19, 0x2dbd849442f9f9b3 # load another value into integer register
amoswap.w x24, x19, (x2) # perform operation

# Testcase cp_rs1 (Test source rs1 = x3)
li x2, 0x89c90cd1d230be1e # load random value
la x3, scratch # base address
sd x2, 0(x3) # store in memory
li x2, 0xcb476f00f70e8e3b # load another value into integer register
amoswap.w x27, x2, (x3) # perform operation

# Testcase cp_rs1 (Test source rs1 = x4)
mv x5, x4 # switch signature pointer register to avoid conflict with test
li x31, 0x79899694ab1143f0 # load random value
la x4, scratch # base address
sd x31, 0(x4) # store in memory
li x31, 0xb869166ce707270a # load another value into integer register
amoswap.w x16, x31, (x4) # perform operation

# Testcase cp_rs1 (Test source rs1 = x5)
mv x6, x5 # switch signature pointer register to avoid conflict with test
li x15, 0x342d5a10bc78dabe # load random value
la x5, scratch # base address
sd x15, 0(x5) # store in memory
li x15, 0x2649d5a6b87a112c # load another value into integer register
amoswap.w x30, x15, (x5) # perform operation

# Testcase cp_rs1 (Test source rs1 = x6)
mv x7, x6 # switch signature pointer register to avoid conflict with test
li x29, 0x196e24c0fa8fb218 # load random value
la x6, scratch # base address
sd x29, 0(x6) # store in memory
li x29, 0x84ed38308937e8b5 # load another value into integer register
amoswap.w x28, x29, (x6) # perform operation

# Testcase cp_rs1 (Test source rs1 = x7)
mv x4, x7 # switch signature pointer register to avoid conflict with test
li x18, 0xf85c4483117b571d # load random value
la x7, scratch # base address
sd x18, 0(x7) # store in memory
li x18, 0xfdfab33e007a3838 # load another value into integer register
amoswap.w x28, x18, (x7) # perform operation

# Testcase cp_rs1 (Test source rs1 = x8)
li x19, 0xfb95a21b5c2f9a21 # load random value
la x8, scratch # base address
sd x19, 0(x8) # store in memory
li x19, 0x7331e7a95c4d99a1 # load another value into integer register
amoswap.w x10, x19, (x8) # perform operation

# Testcase cp_rs1 (Test source rs1 = x9)
li x13, 0x0d775717039a9efa # load random value
la x9, scratch # base address
sd x13, 0(x9) # store in memory
li x13, 0x124b09ce7660896d # load another value into integer register
amoswap.w x21, x13, (x9) # perform operation

# Testcase cp_rs1 (Test source rs1 = x10)
li x22, 0xaee7d8794b71d00d # load random value
la x10, scratch # base address
sd x22, 0(x10) # store in memory
li x22, 0xec28aafe14cd0ce3 # load another value into integer register
amoswap.w x20, x22, (x10) # perform operation

# Testcase cp_rs1 (Test source rs1 = x11)
li x19, 0x01aadb536b32f7a8 # load random value
la x11, scratch # base address
sd x19, 0(x11) # store in memory
li x19, 0x1205fcd9709521e1 # load another value into integer register
amoswap.w x21, x19, (x11) # perform operation

# Testcase cp_rs1 (Test source rs1 = x12)
li x23, 0x43d63ed41808e49f # load random value
la x12, scratch # base address
sd x23, 0(x12) # store in memory
li x23, 0x1f8ee248993ccb4c # load another value into integer register
amoswap.w x27, x23, (x12) # perform operation

# Testcase cp_rs1 (Test source rs1 = x13)
li x31, 0xf6019dd7e87d41cb # load random value
la x13, scratch # base address
sd x31, 0(x13) # store in memory
li x31, 0x50dbda3e5d27851d # load another value into integer register
amoswap.w x24, x31, (x13) # perform operation

# Testcase cp_rs1 (Test source rs1 = x14)
li x3, 0x05ddce2df5c2b0f8 # load random value
la x14, scratch # base address
sd x3, 0(x14) # store in memory
li x3, 0xdb4120282a3fe4c2 # load another value into integer register
amoswap.w x2, x3, (x14) # perform operation

# Testcase cp_rs1 (Test source rs1 = x15)
li x6, 0x437225c6ed667bfc # load random value
la x15, scratch # base address
sd x6, 0(x15) # store in memory
li x6, 0xf15a18e54805f6a8 # load another value into integer register
amoswap.w x30, x6, (x15) # perform operation

# Testcase cp_rs1 (Test source rs1 = x16)
li x5, 0xa7af676e2aa4376f # load random value
la x16, scratch # base address
sd x5, 0(x16) # store in memory
li x5, 0x3af5a1d9e8b08ca9 # load another value into integer register
amoswap.w x29, x5, (x16) # perform operation

# Testcase cp_rs1 (Test source rs1 = x17)
li x13, 0xd9d03b6a6e3dcc7a # load random value
la x17, scratch # base address
sd x13, 0(x17) # store in memory
li x13, 0xd1c58658f7b019da # load another value into integer register
amoswap.w x30, x13, (x17) # perform operation

# Testcase cp_rs1 (Test source rs1 = x18)
li x11, 0x846ce9f91129bbea # load random value
la x18, scratch # base address
sd x11, 0(x18) # store in memory
li x11, 0xf157fe49f26b7eaa # load another value into integer register
amoswap.w x13, x11, (x18) # perform operation

# Testcase cp_rs1 (Test source rs1 = x19)
li x24, 0x88ed7c9dfc130e10 # load random value
la x19, scratch # base address
sd x24, 0(x19) # store in memory
li x24, 0x06020d7d9e24f9f1 # load another value into integer register
amoswap.w x21, x24, (x19) # perform operation

# Testcase cp_rs1 (Test source rs1 = x20)
li x25, 0xd621610f07adcd00 # load random value
la x20, scratch # base address
sd x25, 0(x20) # store in memory
li x25, 0x94c40c0d95bb91b4 # load another value into integer register
amoswap.w x21, x25, (x20) # perform operation

# Testcase cp_rs1 (Test source rs1 = x21)
li x12, 0x80a829e262be483e # load random value
la x21, scratch # base address
sd x12, 0(x21) # store in memory
li x12, 0x18c75fa68b42d681 # load another value into integer register
amoswap.w x6, x12, (x21) # perform operation

# Testcase cp_rs1 (Test source rs1 = x22)
li x20, 0x5dfe497f45c017dc # load random value
la x22, scratch # base address
sd x20, 0(x22) # store in memory
li x20, 0xf30912c19efbf005 # load another value into integer register
amoswap.w x28, x20, (x22) # perform operation

# Testcase cp_rs1 (Test source rs1 = x23)
li x9, 0x4b22b9901cc736e8 # load random value
la x23, scratch # base address
sd x9, 0(x23) # store in memory
li x9, 0x33f128751d1cb5e8 # load another value into integer register
amoswap.w x19, x9, (x23) # perform operation

# Testcase cp_rs1 (Test source rs1 = x24)
li x14, 0x571c31db143e76e8 # load random value
la x24, scratch # base address
sd x14, 0(x24) # store in memory
li x14, 0x0197050200f64466 # load another value into integer register
amoswap.w x16, x14, (x24) # perform operation

# Testcase cp_rs1 (Test source rs1 = x25)
li x16, 0x384e73183d2c8fd4 # load random value
la x25, scratch # base address
sd x16, 0(x25) # store in memory
li x16, 0x17240c0533a10c45 # load another value into integer register
amoswap.w x6, x16, (x25) # perform operation

# Testcase cp_rs1 (Test source rs1 = x26)
li x17, 0x57b3e4857b832bca # load random value
la x26, scratch # base address
sd x17, 0(x26) # store in memory
li x17, 0x83cd2fe8b625139b # load another value into integer register
amoswap.w x13, x17, (x26) # perform operation

# Testcase cp_rs1 (Test source rs1 = x27)
li x6, 0xe24830c19302a7c4 # load random value
la x27, scratch # base address
sd x6, 0(x27) # store in memory
li x6, 0xaa1a4e92b2e0ab80 # load another value into integer register
amoswap.w x28, x6, (x27) # perform operation

# Testcase cp_rs1 (Test source rs1 = x28)
li x1, 0xa21996d549219066 # load random value
la x28, scratch # base address
sd x1, 0(x28) # store in memory
li x1, 0x1b77a55fc0e6b519 # load another value into integer register
amoswap.w x26, x1, (x28) # perform operation

# Testcase cp_rs1 (Test source rs1 = x29)
li x26, 0x36a90289e2a91ab4 # load random value
la x29, scratch # base address
sd x26, 0(x29) # store in memory
li x26, 0x65d2a51cc5cf120c # load another value into integer register
amoswap.w x10, x26, (x29) # perform operation

# Testcase cp_rs1 (Test source rs1 = x30)
li x9, 0xf7a181814333dd73 # load random value
la x30, scratch # base address
sd x9, 0(x30) # store in memory
li x9, 0x08ef355c9d5a464e # load another value into integer register
amoswap.w x16, x9, (x30) # perform operation

# Testcase cp_rs1 (Test source rs1 = x31)
li x21, 0xe854f12264ae3da1 # load random value
la x31, scratch # base address
sd x21, 0(x31) # store in memory
li x21, 0x02bd73cecc4fd0d6 # load another value into integer register
amoswap.w x8, x21, (x31) # perform operation

# Testcase cp_rs2 (Test source rs2 = x0)
li x0, 0xb7d53d06b7536c6c # load random value
la x9, scratch # base address
sd x0, 0(x9) # store in memory
li x0, 0x48c0c5f4adf6ac4c # load another value into integer register
amoswap.w x26, x0, (x9) # perform operation

# Testcase cp_rs2 (Test source rs2 = x1)
li x1, 0x7bc4717967672469 # load random value
la x17, scratch # base address
sd x1, 0(x17) # store in memory
li x1, 0xcdb1b9ec918c6836 # load another value into integer register
amoswap.w x14, x1, (x17) # perform operation

# Testcase cp_rs2 (Test source rs2 = x2)
li x2, 0x8bf6435b08d9d221 # load random value
la x25, scratch # base address
sd x2, 0(x25) # store in memory
li x2, 0xd60e43a7ffd33ab9 # load another value into integer register
amoswap.w x3, x2, (x25) # perform operation

# Testcase cp_rs2 (Test source rs2 = x3)
li x3, 0x0c09cc001b00ef41 # load random value
la x26, scratch # base address
sd x3, 0(x26) # store in memory
li x3, 0xa3a7a3286dd1e944 # load another value into integer register
amoswap.w x10, x3, (x26) # perform operation

# Testcase cp_rs2 (Test source rs2 = x4)
mv x5, x4 # switch signature pointer register to avoid conflict with test
li x4, 0xba900f6a39abe170 # load random value
la x7, scratch # base address
sd x4, 0(x7) # store in memory
li x4, 0x4dbd0794912f8cd5 # load another value into integer register
amoswap.w x21, x4, (x7) # perform operation

# Testcase cp_rs2 (Test source rs2 = x5)
mv x7, x5 # switch signature pointer register to avoid conflict with test
li x5, 0xe4be96b162696d98 # load random value
la x27, scratch # base address
sd x5, 0(x27) # store in memory
li x5, 0x57627a7bc944fe36 # load another value into integer register
amoswap.w x6, x5, (x27) # perform operation

# Testcase cp_rs2 (Test source rs2 = x6)
li x6, 0x01cfcc3fa36bd941 # load random value
la x25, scratch # base address
sd x6, 0(x25) # store in memory
li x6, 0xd31f2520dcfae7ea # load another value into integer register
amoswap.w x12, x6, (x25) # perform operation

# Testcase cp_rs2 (Test source rs2 = x7)
mv x4, x7 # switch signature pointer register to avoid conflict with test
li x7, 0xe00f26b1fba3d3e6 # load random value
la x14, scratch # base address
sd x7, 0(x14) # store in memory
li x7, 0x3c85269fc374f4c7 # load another value into integer register
amoswap.w x27, x7, (x14) # perform operation

# Testcase cp_rs2 (Test source rs2 = x8)
li x8, 0x87d498df6f8ec3aa # load random value
la x18, scratch # base address
sd x8, 0(x18) # store in memory
li x8, 0x6f62524151e66845 # load another value into integer register
amoswap.w x3, x8, (x18) # perform operation

# Testcase cp_rs2 (Test source rs2 = x9)
li x9, 0xf9b742bf37d08db5 # load random value
la x26, scratch # base address
sd x9, 0(x26) # store in memory
li x9, 0xc8bb4f7709678ac1 # load another value into integer register
amoswap.w x25, x9, (x26) # perform operation

# Testcase cp_rs2 (Test source rs2 = x10)
li x10, 0x456c98fef2b02e3c # load random value
la x30, scratch # base address
sd x10, 0(x30) # store in memory
li x10, 0x60064c6160c62fde # load another value into integer register
amoswap.w x21, x10, (x30) # perform operation

# Testcase cp_rs2 (Test source rs2 = x11)
li x11, 0x277c6f2dc32c59a1 # load random value
la x14, scratch # base address
sd x11, 0(x14) # store in memory
li x11, 0xf47c2865bca5adba # load another value into integer register
amoswap.w x7, x11, (x14) # perform operation

# Testcase cp_rs2 (Test source rs2 = x12)
li x12, 0xb06eecbd2e26422f # load random value
la x22, scratch # base address
sd x12, 0(x22) # store in memory
li x12, 0x4803df2ea9242697 # load another value into integer register
amoswap.w x27, x12, (x22) # perform operation

# Testcase cp_rs2 (Test source rs2 = x13)
li x13, 0x411aa8a84475eb14 # load random value
la x28, scratch # base address
sd x13, 0(x28) # store in memory
li x13, 0x63b8c94e300b0b0c # load another value into integer register
amoswap.w x9, x13, (x28) # perform operation

# Testcase cp_rs2 (Test source rs2 = x14)
li x14, 0xfd1cfefc9d2bcf83 # load random value
la x2, scratch # base address
sd x14, 0(x2) # store in memory
li x14, 0x5cd1811300bb4293 # load another value into integer register
amoswap.w x16, x14, (x2) # perform operation

# Testcase cp_rs2 (Test source rs2 = x15)
li x15, 0xf2e0f014523fd8ad # load random value
la x20, scratch # base address
sd x15, 0(x20) # store in memory
li x15, 0x79ddacd1a0725350 # load another value into integer register
amoswap.w x18, x15, (x20) # perform operation

# Testcase cp_rs2 (Test source rs2 = x16)
li x16, 0x3c450d5b54afcb53 # load random value
la x8, scratch # base address
sd x16, 0(x8) # store in memory
li x16, 0x6578040dcfaed7cd # load another value into integer register
amoswap.w x25, x16, (x8) # perform operation

# Testcase cp_rs2 (Test source rs2 = x17)
li x17, 0x0e66200939019433 # load random value
la x8, scratch # base address
sd x17, 0(x8) # store in memory
li x17, 0x1c07ba3788216d4e # load another value into integer register
amoswap.w x29, x17, (x8) # perform operation

# Testcase cp_rs2 (Test source rs2 = x18)
li x18, 0x983f4b279463eff2 # load random value
la x6, scratch # base address
sd x18, 0(x6) # store in memory
li x18, 0x79c0b39b798ea47d # load another value into integer register
amoswap.w x29, x18, (x6) # perform operation

# Testcase cp_rs2 (Test source rs2 = x19)
li x19, 0x435ec9f7bc86ff39 # load random value
la x16, scratch # base address
sd x19, 0(x16) # store in memory
li x19, 0xf449c801a1b34587 # load another value into integer register
amoswap.w x17, x19, (x16) # perform operation

# Testcase cp_rs2 (Test source rs2 = x20)
li x20, 0x4d68a52e42003e02 # load random value
la x29, scratch # base address
sd x20, 0(x29) # store in memory
li x20, 0x5831ffd8ed0a187e # load another value into integer register
amoswap.w x9, x20, (x29) # perform operation

# Testcase cp_rs2 (Test source rs2 = x21)
li x21, 0x999252682f0ac7d8 # load random value
la x18, scratch # base address
sd x21, 0(x18) # store in memory
li x21, 0xdd4430d455315c94 # load another value into integer register
amoswap.w x26, x21, (x18) # perform operation

# Testcase cp_rs2 (Test source rs2 = x22)
li x22, 0xc5c83c6e28a95bdc # load random value
la x19, scratch # base address
sd x22, 0(x19) # store in memory
li x22, 0xd59559d9ecdcd859 # load another value into integer register
amoswap.w x27, x22, (x19) # perform operation

# Testcase cp_rs2 (Test source rs2 = x23)
li x23, 0x85ae64e8d4e5ee36 # load random value
la x16, scratch # base address
sd x23, 0(x16) # store in memory
li x23, 0x40d9657b0a747bf5 # load another value into integer register
amoswap.w x14, x23, (x16) # perform operation

# Testcase cp_rs2 (Test source rs2 = x24)
li x24, 0x6cdc88d1bc430e9a # load random value
la x5, scratch # base address
sd x24, 0(x5) # store in memory
li x24, 0x3d2779dcb7d0e67f # load another value into integer register
amoswap.w x6, x24, (x5) # perform operation

# Testcase cp_rs2 (Test source rs2 = x25)
li x25, 0xb257583783639c94 # load random value
la x9, scratch # base address
sd x25, 0(x9) # store in memory
li x25, 0x4831725dfacfae79 # load another value into integer register
amoswap.w x29, x25, (x9) # perform operation

# Testcase cp_rs2 (Test source rs2 = x26)
li x26, 0xccb400839d2691d4 # load random value
la x18, scratch # base address
sd x26, 0(x18) # store in memory
li x26, 0x44d61964e2d77500 # load another value into integer register
amoswap.w x30, x26, (x18) # perform operation

# Testcase cp_rs2 (Test source rs2 = x27)
li x27, 0x78a6353e201ebefe # load random value
la x9, scratch # base address
sd x27, 0(x9) # store in memory
li x27, 0x811b85ec700b6629 # load another value into integer register
amoswap.w x25, x27, (x9) # perform operation

# Testcase cp_rs2 (Test source rs2 = x28)
li x28, 0x38dc5fc37fb5668a # load random value
la x3, scratch # base address
sd x28, 0(x3) # store in memory
li x28, 0x9fa46ed52a689799 # load another value into integer register
amoswap.w x9, x28, (x3) # perform operation

# Testcase cp_rs2 (Test source rs2 = x29)
li x29, 0xa98b6d6299959987 # load random value
la x14, scratch # base address
sd x29, 0(x14) # store in memory
li x29, 0xf24d8f5729d27ae5 # load another value into integer register
amoswap.w x1, x29, (x14) # perform operation

# Testcase cp_rs2 (Test source rs2 = x30)
li x30, 0xdd2375d745ab6e29 # load random value
la x19, scratch # base address
sd x30, 0(x19) # store in memory
li x30, 0x80c9262c5f05b952 # load another value into integer register
amoswap.w x26, x30, (x19) # perform operation

# Testcase cp_rs2 (Test source rs2 = x31)
li x31, 0x7ea8b9dc279716eb # load random value
la x12, scratch # base address
sd x31, 0(x12) # store in memory
li x31, 0x3433d89f8ecad8fb # load another value into integer register
amoswap.w x22, x31, (x12) # perform operation

# Testcase cp_rd (Test destination rd = x0)
li x17, 0x18f226ba45aa3621 # load random value
la x28, scratch # base address
sd x17, 0(x28) # store in memory
li x17, 0xe4aca7d9523fa6a9 # load another value into integer register
amoswap.w x0, x17, (x28) # perform operation

# Testcase cp_rd (Test destination rd = x1)
li x31, 0xf82d0a6354d4a7b0 # load random value
la x5, scratch # base address
sd x31, 0(x5) # store in memory
li x31, 0x01d29f32f6ae3c12 # load another value into integer register
amoswap.w x1, x31, (x5) # perform operation

# Testcase cp_rd (Test destination rd = x2)
li x30, 0xb443a0bdce517ac1 # load random value
la x21, scratch # base address
sd x30, 0(x21) # store in memory
li x30, 0xb28b7b1a5935e36c # load another value into integer register
amoswap.w x2, x30, (x21) # perform operation

# Testcase cp_rd (Test destination rd = x3)
li x20, 0x819e9108cac960a6 # load random value
la x27, scratch # base address
sd x20, 0(x27) # store in memory
li x20, 0xd891602fdcf51f78 # load another value into integer register
amoswap.w x3, x20, (x27) # perform operation

# Testcase cp_rd (Test destination rd = x4)
mv x5, x4 # switch signature pointer register to avoid conflict with test
li x1, 0x6d519e22963412d1 # load random value
la x29, scratch # base address
sd x1, 0(x29) # store in memory
li x1, 0xdfbb02846378659c # load another value into integer register
amoswap.w x4, x1, (x29) # perform operation

# Testcase cp_rd (Test destination rd = x5)
mv x6, x5 # switch signature pointer register to avoid conflict with test
li x3, 0x7f2550be49061c68 # load random value
la x13, scratch # base address
sd x3, 0(x13) # store in memory
li x3, 0xe4f0e4218e8a9e4c # load another value into integer register
amoswap.w x5, x3, (x13) # perform operation

# Testcase cp_rd (Test destination rd = x6)
mv x4, x6 # switch signature pointer register to avoid conflict with test
li x7, 0x87e32284365dff7f # load random value
la x15, scratch # base address
sd x7, 0(x15) # store in memory
li x7, 0xc1b0e9cd27dd4200 # load another value into integer register
amoswap.w x6, x7, (x15) # perform operation

# Testcase cp_rd (Test destination rd = x7)
li x18, 0xbbc8a31b4c6ec467 # load random value
la x27, scratch # base address
sd x18, 0(x27) # store in memory
li x18, 0x2e33c8ff035699fe # load another value into integer register
amoswap.w x7, x18, (x27) # perform operation

# Testcase cp_rd (Test destination rd = x8)
li x10, 0x30ce7a8f0511f78a # load random value
la x16, scratch # base address
sd x10, 0(x16) # store in memory
li x10, 0x4dc6e9cfb4ba6870 # load another value into integer register
amoswap.w x8, x10, (x16) # perform operation

# Testcase cp_rd (Test destination rd = x9)
li x22, 0xcf796824bee03049 # load random value
la x28, scratch # base address
sd x22, 0(x28) # store in memory
li x22, 0xacad216735a9d5c8 # load another value into integer register
amoswap.w x9, x22, (x28) # perform operation

# Testcase cp_rd (Test destination rd = x10)
li x7, 0x191e9c0c7bc0ceb0 # load random value
la x5, scratch # base address
sd x7, 0(x5) # store in memory
li x7, 0x9181ecc00b874e8e # load another value into integer register
amoswap.w x10, x7, (x5) # perform operation

# Testcase cp_rd (Test destination rd = x11)
li x7, 0xc26ddb9e3f465dcf # load random value
la x15, scratch # base address
sd x7, 0(x15) # store in memory
li x7, 0xe900b45e591246dd # load another value into integer register
amoswap.w x11, x7, (x15) # perform operation

# Testcase cp_rd (Test destination rd = x12)
li x21, 0x2459ef0b3ae5acb7 # load random value
la x30, scratch # base address
sd x21, 0(x30) # store in memory
li x21, 0x724fff74108fc2b4 # load another value into integer register
amoswap.w x12, x21, (x30) # perform operation

# Testcase cp_rd (Test destination rd = x13)
li x29, 0x894531b9d2ed09be # load random value
la x31, scratch # base address
sd x29, 0(x31) # store in memory
li x29, 0x3784a6b317bcf5cc # load another value into integer register
amoswap.w x13, x29, (x31) # perform operation

# Testcase cp_rd (Test destination rd = x14)
li x16, 0xdeec8911bd852157 # load random value
la x31, scratch # base address
sd x16, 0(x31) # store in memory
li x16, 0x8a0a66520be6d5c7 # load another value into integer register
amoswap.w x14, x16, (x31) # perform operation

# Testcase cp_rd (Test destination rd = x15)
li x27, 0xc39ee2e9f228827b # load random value
la x7, scratch # base address
sd x27, 0(x7) # store in memory
li x27, 0xe9c330ad8eb7b6ae # load another value into integer register
amoswap.w x15, x27, (x7) # perform operation

# Testcase cp_rd (Test destination rd = x16)
li x18, 0x23ffda376b2e3ef3 # load random value
la x30, scratch # base address
sd x18, 0(x30) # store in memory
li x18, 0x35d4ec6ffe6c6b06 # load another value into integer register
amoswap.w x16, x18, (x30) # perform operation

# Testcase cp_rd (Test destination rd = x17)
li x23, 0x3119431e380e3172 # load random value
la x15, scratch # base address
sd x23, 0(x15) # store in memory
li x23, 0x61fd31b118960e5e # load another value into integer register
amoswap.w x17, x23, (x15) # perform operation

# Testcase cp_rd (Test destination rd = x18)
li x22, 0x786d39e86c52d393 # load random value
la x8, scratch # base address
sd x22, 0(x8) # store in memory
li x22, 0x543aec7dab8036ce # load another value into integer register
amoswap.w x18, x22, (x8) # perform operation

# Testcase cp_rd (Test destination rd = x19)
li x6, 0xc4a3584ca1db3df8 # load random value
la x1, scratch # base address
sd x6, 0(x1) # store in memory
li x6, 0x42cf2d094859ee35 # load another value into integer register
amoswap.w x19, x6, (x1) # perform operation

# Testcase cp_rd (Test destination rd = x20)
li x22, 0xd9adf2614cdcb954 # load random value
la x7, scratch # base address
sd x22, 0(x7) # store in memory
li x22, 0x041cdcc629da98b2 # load another value into integer register
amoswap.w x20, x22, (x7) # perform operation

# Testcase cp_rd (Test destination rd = x21)
li x28, 0x70ca7d1307ac0b26 # load random value
la x19, scratch # base address
sd x28, 0(x19) # store in memory
li x28, 0x8b874259076a9df3 # load another value into integer register
amoswap.w x21, x28, (x19) # perform operation

# Testcase cp_rd (Test destination rd = x22)
li x14, 0x1ba90e66d65a557c # load random value
la x19, scratch # base address
sd x14, 0(x19) # store in memory
li x14, 0x93b3419c14d24071 # load another value into integer register
amoswap.w x22, x14, (x19) # perform operation

# Testcase cp_rd (Test destination rd = x23)
li x23, 0x8d27c4f731b9a50a # load random value
la x5, scratch # base address
sd x23, 0(x5) # store in memory
li x23, 0x72261b1fd7977b48 # load another value into integer register
amoswap.w x23, x23, (x5) # perform operation

# Testcase cp_rd (Test destination rd = x24)
li x16, 0x79bd474d62fbd799 # load random value
la x11, scratch # base address
sd x16, 0(x11) # store in memory
li x16, 0x8a68101f22b1f8ee # load another value into integer register
amoswap.w x24, x16, (x11) # perform operation

# Testcase cp_rd (Test destination rd = x25)
li x18, 0xc19c9e33b93e4106 # load random value
la x21, scratch # base address
sd x18, 0(x21) # store in memory
li x18, 0x6c49d4657b84155c # load another value into integer register
amoswap.w x25, x18, (x21) # perform operation

# Testcase cp_rd (Test destination rd = x26)
li x8, 0x535cce7a3afca2a0 # load random value
la x7, scratch # base address
sd x8, 0(x7) # store in memory
li x8, 0x41ebb76a5cea7585 # load another value into integer register
amoswap.w x26, x8, (x7) # perform operation

# Testcase cp_rd (Test destination rd = x27)
li x17, 0x358efbb594abdc99 # load random value
la x22, scratch # base address
sd x17, 0(x22) # store in memory
li x17, 0x10066e4a9082562c # load another value into integer register
amoswap.w x27, x17, (x22) # perform operation

# Testcase cp_rd (Test destination rd = x28)
li x5, 0x6ca976b73c92c82d # load random value
la x18, scratch # base address
sd x5, 0(x18) # store in memory
li x5, 0xa18bd512f8eb91e3 # load another value into integer register
amoswap.w x28, x5, (x18) # perform operation

# Testcase cp_rd (Test destination rd = x29)
li x5, 0xebdec2df7096b068 # load random value
la x13, scratch # base address
sd x5, 0(x13) # store in memory
li x5, 0x84b0f8d8af36f3b4 # load another value into integer register
amoswap.w x29, x5, (x13) # perform operation

# Testcase cp_rd (Test destination rd = x30)
li x26, 0xd7d2fc14195e20e4 # load random value
la x8, scratch # base address
sd x26, 0(x8) # store in memory
li x26, 0x1ecc17f443cfd8f0 # load another value into integer register
amoswap.w x30, x26, (x8) # perform operation

# Testcase cp_rd (Test destination rd = x31)
li x8, 0xe6f284054b63e8b1 # load random value
la x9, scratch # base address
sd x8, 0(x9) # store in memory
li x8, 0x1bcc6959fc8e4d9d # load another value into integer register
amoswap.w x31, x8, (x9) # perform operation

# Testcase cp_rs2_corners (Test source rs2 value = 0x0)
li x12, 0x1294b590dadd1dcc # load random value
la x28, scratch # base address
sd x12, 0(x28) # store in memory
li x12, 0x0000000000000000 # load another value into integer register
amoswap.w x14, x12, (x28) # perform operation

# Testcase cp_rs2_corners (Test source rs2 value = 0x1)
li x16, 0xd9a04f91aa159ddc # load random value
la x26, scratch # base address
sd x16, 0(x26) # store in memory
li x16, 0x0000000000000001 # load another value into integer register
amoswap.w x10, x16, (x26) # perform operation

# Testcase cp_rs2_corners (Test source rs2 value = 0x2)
li x6, 0xa16c1c18b5b2f631 # load random value
la x13, scratch # base address
sd x6, 0(x13) # store in memory
li x6, 0x0000000000000002 # load another value into integer register
amoswap.w x20, x6, (x13) # perform operation

# Testcase cp_rs2_corners (Test source rs2 value = 0x8000000000000000)
li x22, 0xe5421f5f51ce2d0a # load random value
la x12, scratch # base address
sd x22, 0(x12) # store in memory
li x22, 0x8000000000000000 # load another value into integer register
amoswap.w x7, x22, (x12) # perform operation

# Testcase cp_rs2_corners (Test source rs2 value = 0x8000000000000001)
li x7, 0x6684c25e6040f353 # load random value
la x8, scratch # base address
sd x7, 0(x8) # store in memory
li x7, 0x8000000000000001 # load another value into integer register
amoswap.w x12, x7, (x8) # perform operation

# Testcase cp_rs2_corners (Test source rs2 value = 0x7fffffffffffffff)
li x25, 0xf4189b2cad7c9f9c # load random value
la x26, scratch # base address
sd x25, 0(x26) # store in memory
li x25, 0x7fffffffffffffff # load another value into integer register
amoswap.w x29, x25, (x26) # perform operation

# Testcase cp_rs2_corners (Test source rs2 value = 0x7ffffffffffffffe)
li x11, 0x26aa50fcb7be4e88 # load random value
la x12, scratch # base address
sd x11, 0(x12) # store in memory
li x11, 0x7ffffffffffffffe # load another value into integer register
amoswap.w x21, x11, (x12) # perform operation

# Testcase cp_rs2_corners (Test source rs2 value = 0xffffffffffffffff)
li x18, 0x1546bacb59ac768e # load random value
la x15, scratch # base address
sd x18, 0(x15) # store in memory
li x18, 0xffffffffffffffff # load another value into integer register
amoswap.w x14, x18, (x15) # perform operation

# Testcase cp_rs2_corners (Test source rs2 value = 0xfffffffffffffffe)
li x16, 0x7d05b3562a30545a # load random value
la x18, scratch # base address
sd x16, 0(x18) # store in memory
li x16, 0xfffffffffffffffe # load another value into integer register
amoswap.w x3, x16, (x18) # perform operation

# Testcase cp_rs2_corners (Test source rs2 value = 0x5bbc887763ae86f2)
li x12, 0x8ef457d9eb3f3dd0 # load random value
la x2, scratch # base address
sd x12, 0(x2) # store in memory
li x12, 0x5bbc887763ae86f2 # load another value into integer register
amoswap.w x19, x12, (x2) # perform operation

# Testcase cp_rs2_corners (Test source rs2 value = 0xaaaaaaaaaaaaaaaa)
li x12, 0xabcc5ca52c5a1fba # load random value
la x21, scratch # base address
sd x12, 0(x21) # store in memory
li x12, 0xaaaaaaaaaaaaaaaa # load another value into integer register
amoswap.w x5, x12, (x21) # perform operation

# Testcase cp_rs2_corners (Test source rs2 value = 0x5555555555555555)
li x19, 0xdd60215abf5c5100 # load random value
la x27, scratch # base address
sd x19, 0(x27) # store in memory
li x19, 0x5555555555555555 # load another value into integer register
amoswap.w x7, x19, (x27) # perform operation

# Testcase cp_rs2_corners (Test source rs2 value = 0xffffffff)
li x2, 0x971aa7a451e10b21 # load random value
la x14, scratch # base address
sd x2, 0(x14) # store in memory
li x2, 0x00000000ffffffff # load another value into integer register
amoswap.w x27, x2, (x14) # perform operation

# Testcase cp_rs2_corners (Test source rs2 value = 0xfffffffe)
li x23, 0xed60396d26102a21 # load random value
la x26, scratch # base address
sd x23, 0(x26) # store in memory
li x23, 0x00000000fffffffe # load another value into integer register
amoswap.w x31, x23, (x26) # perform operation

# Testcase cp_rs2_corners (Test source rs2 value = 0x100000000)
li x17, 0x59f984672e598d0d # load random value
la x8, scratch # base address
sd x17, 0(x8) # store in memory
li x17, 0x0000000100000000 # load another value into integer register
amoswap.w x20, x17, (x8) # perform operation

# Testcase cp_rs2_corners (Test source rs2 value = 0x100000001)
li x2, 0x0b74824e3b9c9021 # load random value
la x22, scratch # base address
sd x2, 0(x22) # store in memory
li x2, 0x0000000100000001 # load another value into integer register
amoswap.w x24, x2, (x22) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x1)
li x1, 0xe79fe7da3659b6aa # load random value
la x1, scratch # base address
sd x1, 0(x1) # store in memory
amoswap.w x1, x1, (x1) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x2)
li x2, 0x377b5115f72703cb # load random value
la x2, scratch # base address
sd x2, 0(x2) # store in memory
amoswap.w x7, x2, (x2) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x3)
li x3, 0xb762ba3c8c25c916 # load random value
la x3, scratch # base address
sd x3, 0(x3) # store in memory
amoswap.w x18, x3, (x3) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x4)
mv x5, x4 # switch signature pointer register to avoid conflict with test
li x4, 0xa88e641a4887f8a5 # load random value
la x4, scratch # base address
sd x4, 0(x4) # store in memory
amoswap.w x28, x4, (x4) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x5)
mv x6, x5 # switch signature pointer register to avoid conflict with test
li x5, 0xf28ba73bd3f5ee5a # load random value
la x5, scratch # base address
sd x5, 0(x5) # store in memory
amoswap.w x7, x5, (x5) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x6)
mv x7, x6 # switch signature pointer register to avoid conflict with test
li x6, 0x1546c208aa9a3714 # load random value
la x6, scratch # base address
sd x6, 0(x6) # store in memory
amoswap.w x15, x6, (x6) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x7)
mv x4, x7 # switch signature pointer register to avoid conflict with test
li x7, 0xdf9bb8b31745ecb8 # load random value
la x7, scratch # base address
sd x7, 0(x7) # store in memory
amoswap.w x15, x7, (x7) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x8)
li x8, 0x1b3c20e15d2cfd8f # load random value
la x8, scratch # base address
sd x8, 0(x8) # store in memory
amoswap.w x20, x8, (x8) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x9)
li x9, 0x25b4dbe2218ee52b # load random value
la x9, scratch # base address
sd x9, 0(x9) # store in memory
amoswap.w x6, x9, (x9) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x10)
li x10, 0x79af41c1b9e84bf3 # load random value
la x10, scratch # base address
sd x10, 0(x10) # store in memory
amoswap.w x16, x10, (x10) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x11)
li x11, 0xc3fa7a6bfc5a6d88 # load random value
la x11, scratch # base address
sd x11, 0(x11) # store in memory
amoswap.w x31, x11, (x11) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x12)
li x12, 0x3a8d8d57dfcd7df5 # load random value
la x12, scratch # base address
sd x12, 0(x12) # store in memory
amoswap.w x1, x12, (x12) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x13)
li x13, 0x42b4c425a1768ab5 # load random value
la x13, scratch # base address
sd x13, 0(x13) # store in memory
amoswap.w x29, x13, (x13) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x14)
li x14, 0x5e4f1b97b20dce01 # load random value
la x14, scratch # base address
sd x14, 0(x14) # store in memory
amoswap.w x16, x14, (x14) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x15)
li x15, 0x8472d258d652513f # load random value
la x15, scratch # base address
sd x15, 0(x15) # store in memory
amoswap.w x21, x15, (x15) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x16)
li x16, 0xdf0da8452f73d307 # load random value
la x16, scratch # base address
sd x16, 0(x16) # store in memory
amoswap.w x25, x16, (x16) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x17)
li x17, 0x1191693b7c34a9a4 # load random value
la x17, scratch # base address
sd x17, 0(x17) # store in memory
amoswap.w x19, x17, (x17) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x18)
li x18, 0xc2c20184567c96e1 # load random value
la x18, scratch # base address
sd x18, 0(x18) # store in memory
amoswap.w x21, x18, (x18) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x19)
li x19, 0x13fe49adaecf5492 # load random value
la x19, scratch # base address
sd x19, 0(x19) # store in memory
amoswap.w x10, x19, (x19) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x20)
li x20, 0xa3b716a56d27d4d7 # load random value
la x20, scratch # base address
sd x20, 0(x20) # store in memory
amoswap.w x2, x20, (x20) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x21)
li x21, 0xa7a32c6af6ee6cb0 # load random value
la x21, scratch # base address
sd x21, 0(x21) # store in memory
amoswap.w x20, x21, (x21) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x22)
li x22, 0x40163b32d0be81b4 # load random value
la x22, scratch # base address
sd x22, 0(x22) # store in memory
amoswap.w x27, x22, (x22) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x23)
li x23, 0x856e72b054cae567 # load random value
la x23, scratch # base address
sd x23, 0(x23) # store in memory
amoswap.w x27, x23, (x23) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x24)
li x24, 0x9a9c3acecab9179d # load random value
la x24, scratch # base address
sd x24, 0(x24) # store in memory
amoswap.w x21, x24, (x24) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x25)
li x25, 0x5ad99eb19e7a4350 # load random value
la x25, scratch # base address
sd x25, 0(x25) # store in memory
amoswap.w x24, x25, (x25) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x26)
li x26, 0x86ca472ca2d3ff78 # load random value
la x26, scratch # base address
sd x26, 0(x26) # store in memory
amoswap.w x3, x26, (x26) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x27)
li x27, 0x1c3278b1f05b092a # load random value
la x27, scratch # base address
sd x27, 0(x27) # store in memory
amoswap.w x9, x27, (x27) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x28)
li x28, 0x7f3bc10c6bc60c5d # load random value
la x28, scratch # base address
sd x28, 0(x28) # store in memory
amoswap.w x5, x28, (x28) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x29)
li x29, 0x61dc9f1c6dc9419e # load random value
la x29, scratch # base address
sd x29, 0(x29) # store in memory
amoswap.w x17, x29, (x29) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x30)
li x30, 0x67d2d1645f6e18b0 # load random value
la x30, scratch # base address
sd x30, 0(x30) # store in memory
amoswap.w x12, x30, (x30) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x31)
li x31, 0xc87501c55a96d437 # load random value
la x31, scratch # base address
sd x31, 0(x31) # store in memory
amoswap.w x26, x31, (x31) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x1)
li x13, 0x34f03f273a204622 # load random value
la x1, scratch # base address
sd x13, 0(x1) # store in memory
li x13, 0x6e2052e9d504392f # load another value into integer register
amoswap.w x1, x13, (x1) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x2)
li x5, 0x71d545916b197d69 # load random value
la x2, scratch # base address
sd x5, 0(x2) # store in memory
li x5, 0x5d88f8d489a14d4b # load another value into integer register
amoswap.w x2, x5, (x2) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x3)
li x18, 0x3c1d6582c507ad92 # load random value
la x3, scratch # base address
sd x18, 0(x3) # store in memory
li x18, 0xe3bb67749e5d2a54 # load another value into integer register
amoswap.w x3, x18, (x3) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x4)
mv x5, x4 # switch signature pointer register to avoid conflict with test
li x11, 0x63727a3e2e27c260 # load random value
la x4, scratch # base address
sd x11, 0(x4) # store in memory
li x11, 0x7b67fdd2665fc5e5 # load another value into integer register
amoswap.w x4, x11, (x4) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x5)
mv x6, x5 # switch signature pointer register to avoid conflict with test
li x21, 0xed3d110f1741fad3 # load random value
la x5, scratch # base address
sd x21, 0(x5) # store in memory
li x21, 0xc59ce8217c00a070 # load another value into integer register
amoswap.w x5, x21, (x5) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x6)
mv x7, x6 # switch signature pointer register to avoid conflict with test
li x4, 0x4eee4c8e34f3371c # load random value
la x6, scratch # base address
sd x4, 0(x6) # store in memory
li x4, 0x2e0398ba720d6388 # load another value into integer register
amoswap.w x6, x4, (x6) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x7)
mv x4, x7 # switch signature pointer register to avoid conflict with test
li x28, 0x82af29837b3d3153 # load random value
la x7, scratch # base address
sd x28, 0(x7) # store in memory
li x28, 0x976e2ec46749f4f4 # load another value into integer register
amoswap.w x7, x28, (x7) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x8)
li x17, 0x47da34b5b839c1c1 # load random value
la x8, scratch # base address
sd x17, 0(x8) # store in memory
li x17, 0xf2a5ff109619c91d # load another value into integer register
amoswap.w x8, x17, (x8) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x9)
li x12, 0x35f7d39ba5d5275a # load random value
la x9, scratch # base address
sd x12, 0(x9) # store in memory
li x12, 0x26a432db90b9a81d # load another value into integer register
amoswap.w x9, x12, (x9) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x10)
li x19, 0x4fe81f8785727bf7 # load random value
la x10, scratch # base address
sd x19, 0(x10) # store in memory
li x19, 0x262c90b0e2e6b9fc # load another value into integer register
amoswap.w x10, x19, (x10) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x11)
li x30, 0x0e7b6f013b113eb0 # load random value
la x11, scratch # base address
sd x30, 0(x11) # store in memory
li x30, 0x542914c49b46d803 # load another value into integer register
amoswap.w x11, x30, (x11) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x12)
li x23, 0xc91b98393d28579e # load random value
la x12, scratch # base address
sd x23, 0(x12) # store in memory
li x23, 0x91896233de7197c5 # load another value into integer register
amoswap.w x12, x23, (x12) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x13)
li x31, 0x8bc7f3bcee04432e # load random value
la x13, scratch # base address
sd x31, 0(x13) # store in memory
li x31, 0xc67608d4c7679323 # load another value into integer register
amoswap.w x13, x31, (x13) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x14)
li x30, 0x7dfbe872aa38e5f4 # load random value
la x14, scratch # base address
sd x30, 0(x14) # store in memory
li x30, 0x391a0af4561ef7fb # load another value into integer register
amoswap.w x14, x30, (x14) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x15)
li x2, 0x09982a610e100d48 # load random value
la x15, scratch # base address
sd x2, 0(x15) # store in memory
li x2, 0x1a99cbfb6ab90bbc # load another value into integer register
amoswap.w x15, x2, (x15) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x16)
li x30, 0x7d0a1dd49e72647b # load random value
la x16, scratch # base address
sd x30, 0(x16) # store in memory
li x30, 0xa0ec5e943f2177a3 # load another value into integer register
amoswap.w x16, x30, (x16) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x17)
li x31, 0xeec899be4d1c2f29 # load random value
la x17, scratch # base address
sd x31, 0(x17) # store in memory
li x31, 0xe93b4b220017f33b # load another value into integer register
amoswap.w x17, x31, (x17) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x18)
li x19, 0xcb97c2afc9d408ec # load random value
la x18, scratch # base address
sd x19, 0(x18) # store in memory
li x19, 0x5f59c9a4c662b74b # load another value into integer register
amoswap.w x18, x19, (x18) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x19)
li x8, 0xb189f7e270fac3b8 # load random value
la x19, scratch # base address
sd x8, 0(x19) # store in memory
li x8, 0xe90327efab1312d3 # load another value into integer register
amoswap.w x19, x8, (x19) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x20)
li x13, 0x8b23f61ffed221d4 # load random value
la x20, scratch # base address
sd x13, 0(x20) # store in memory
li x13, 0x4ae76c0a4a27a3a8 # load another value into integer register
amoswap.w x20, x13, (x20) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x21)
li x24, 0xf85a9531ac0190f4 # load random value
la x21, scratch # base address
sd x24, 0(x21) # store in memory
li x24, 0xb24a5619c4b31fff # load another value into integer register
amoswap.w x21, x24, (x21) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x22)
li x23, 0xd38239032d358f1b # load random value
la x22, scratch # base address
sd x23, 0(x22) # store in memory
li x23, 0x6897840721e2d085 # load another value into integer register
amoswap.w x22, x23, (x22) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x23)
li x8, 0xbbaa6773b6baa529 # load random value
la x23, scratch # base address
sd x8, 0(x23) # store in memory
li x8, 0x8b4ef850341d3e7b # load another value into integer register
amoswap.w x23, x8, (x23) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x24)
li x12, 0x9c8c239c9e2e7d63 # load random value
la x24, scratch # base address
sd x12, 0(x24) # store in memory
li x12, 0x941249d200f5fca6 # load another value into integer register
amoswap.w x24, x12, (x24) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x25)
li x11, 0xe07f8a8a889220cd # load random value
la x25, scratch # base address
sd x11, 0(x25) # store in memory
li x11, 0x245d21bcd321536b # load another value into integer register
amoswap.w x25, x11, (x25) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x26)
li x1, 0x25068fed19ec055d # load random value
la x26, scratch # base address
sd x1, 0(x26) # store in memory
li x1, 0xf0b75f3b2967ad24 # load another value into integer register
amoswap.w x26, x1, (x26) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x27)
li x1, 0x6e9656ff643984fe # load random value
la x27, scratch # base address
sd x1, 0(x27) # store in memory
li x1, 0x011ebe1ae85b7418 # load another value into integer register
amoswap.w x27, x1, (x27) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x28)
li x10, 0x3104b8254f6f74e1 # load random value
la x28, scratch # base address
sd x10, 0(x28) # store in memory
li x10, 0x22de269438ee8f04 # load another value into integer register
amoswap.w x28, x10, (x28) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x29)
li x14, 0xf8c2b5941b1d0bfc # load random value
la x29, scratch # base address
sd x14, 0(x29) # store in memory
li x14, 0x2a6e0819a4256422 # load another value into integer register
amoswap.w x29, x14, (x29) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x30)
li x21, 0x0056ecb76971bd23 # load random value
la x30, scratch # base address
sd x21, 0(x30) # store in memory
li x21, 0xff85a68cca1b6c27 # load another value into integer register
amoswap.w x30, x21, (x30) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x31)
li x29, 0x02bd66cdf9082d55 # load random value
la x31, scratch # base address
sd x29, 0(x31) # store in memory
li x29, 0x779a3354f9a7ff41 # load another value into integer register
amoswap.w x31, x29, (x31) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x0)
li x0, 0x40865f5783c36797 # load random value
la x15, scratch # base address
sd x0, 0(x15) # store in memory
li x0, 0x04672793a6136071 # load another value into integer register
amoswap.w x0, x0, (x15) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x1)
li x1, 0x59b66f1ad5f3c1bd # load random value
la x16, scratch # base address
sd x1, 0(x16) # store in memory
li x1, 0x9a9a3e8a196d420a # load another value into integer register
amoswap.w x1, x1, (x16) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x2)
li x2, 0x7a1cb64d432eca16 # load random value
la x15, scratch # base address
sd x2, 0(x15) # store in memory
li x2, 0x6aa277234781e16c # load another value into integer register
amoswap.w x2, x2, (x15) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x3)
li x3, 0x98e93afb3699d6e7 # load random value
la x20, scratch # base address
sd x3, 0(x20) # store in memory
li x3, 0x0bafeba7adc9a2e2 # load another value into integer register
amoswap.w x3, x3, (x20) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x4)
mv x5, x4 # switch signature pointer register to avoid conflict with test
li x4, 0xae2d8b4038705e49 # load random value
la x27, scratch # base address
sd x4, 0(x27) # store in memory
li x4, 0xf401e24233e4a1ec # load another value into integer register
amoswap.w x4, x4, (x27) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x5)
mv x6, x5 # switch signature pointer register to avoid conflict with test
li x5, 0xe95fae3692c8c73b # load random value
la x21, scratch # base address
sd x5, 0(x21) # store in memory
li x5, 0xa740b064491dc670 # load another value into integer register
amoswap.w x5, x5, (x21) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x6)
mv x7, x6 # switch signature pointer register to avoid conflict with test
li x6, 0x5cbd823399cab8e7 # load random value
la x20, scratch # base address
sd x6, 0(x20) # store in memory
li x6, 0x268cd8285a1175b1 # load another value into integer register
amoswap.w x6, x6, (x20) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x7)
mv x4, x7 # switch signature pointer register to avoid conflict with test
li x7, 0x05727811a72ff8a8 # load random value
la x11, scratch # base address
sd x7, 0(x11) # store in memory
li x7, 0x55b38375847e0881 # load another value into integer register
amoswap.w x7, x7, (x11) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x8)
li x8, 0x13b7ee895f4e58de # load random value
la x8, scratch # base address
sd x8, 0(x8) # store in memory
amoswap.w x8, x8, (x8) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x9)
li x9, 0x5d71449ca7d4ec7c # load random value
la x16, scratch # base address
sd x9, 0(x16) # store in memory
li x9, 0xa1a7f32ba75d05eb # load another value into integer register
amoswap.w x9, x9, (x16) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x10)
li x10, 0x4d43f7691229e58b # load random value
la x18, scratch # base address
sd x10, 0(x18) # store in memory
li x10, 0xf925e1c5785c5e4f # load another value into integer register
amoswap.w x10, x10, (x18) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x11)
li x11, 0xabbd5c47c819d533 # load random value
la x5, scratch # base address
sd x11, 0(x5) # store in memory
li x11, 0x5dcae0270ece5429 # load another value into integer register
amoswap.w x11, x11, (x5) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x12)
li x12, 0xf75546d2ab087aec # load random value
la x3, scratch # base address
sd x12, 0(x3) # store in memory
li x12, 0xa2a94ed987ab05ee # load another value into integer register
amoswap.w x12, x12, (x3) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x13)
li x13, 0xefa42aefdb9e8f84 # load random value
la x26, scratch # base address
sd x13, 0(x26) # store in memory
li x13, 0x78c0cd1b3f6ac7b8 # load another value into integer register
amoswap.w x13, x13, (x26) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x14)
li x14, 0x11c20f003cb195ea # load random value
la x8, scratch # base address
sd x14, 0(x8) # store in memory
li x14, 0x5bf579aa0d6c2f20 # load another value into integer register
amoswap.w x14, x14, (x8) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x15)
li x15, 0x3270bb759d15c74d # load random value
la x12, scratch # base address
sd x15, 0(x12) # store in memory
li x15, 0x18b0ae28045bb961 # load another value into integer register
amoswap.w x15, x15, (x12) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x16)
li x16, 0x0b6242d75ed7f6bd # load random value
la x19, scratch # base address
sd x16, 0(x19) # store in memory
li x16, 0x8aab4f1a958088f0 # load another value into integer register
amoswap.w x16, x16, (x19) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x17)
li x17, 0x400447999d784735 # load random value
la x27, scratch # base address
sd x17, 0(x27) # store in memory
li x17, 0x78594b906632f2ee # load another value into integer register
amoswap.w x17, x17, (x27) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x18)
li x18, 0x5d02c5ad32487086 # load random value
la x21, scratch # base address
sd x18, 0(x21) # store in memory
li x18, 0x7cfe7908f5bdd30b # load another value into integer register
amoswap.w x18, x18, (x21) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x19)
li x19, 0x861f5a1445ba799c # load random value
la x3, scratch # base address
sd x19, 0(x3) # store in memory
li x19, 0x66dcad930a3a8898 # load another value into integer register
amoswap.w x19, x19, (x3) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x20)
li x20, 0x5f035c691727276c # load random value
la x13, scratch # base address
sd x20, 0(x13) # store in memory
li x20, 0xa625292d0d65f274 # load another value into integer register
amoswap.w x20, x20, (x13) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x21)
li x21, 0x23d0fd2f8a6fcaeb # load random value
la x25, scratch # base address
sd x21, 0(x25) # store in memory
li x21, 0xe5f51d79dd99f0bb # load another value into integer register
amoswap.w x21, x21, (x25) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x22)
li x22, 0x28c6d5c6f1d57a05 # load random value
la x22, scratch # base address
sd x22, 0(x22) # store in memory
amoswap.w x22, x22, (x22) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x23)
li x23, 0x0ef18b01696d1a6e # load random value
la x14, scratch # base address
sd x23, 0(x14) # store in memory
li x23, 0xc4d78c54bd4bda88 # load another value into integer register
amoswap.w x23, x23, (x14) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x24)
li x24, 0xe7e3ba5f8084086c # load random value
la x2, scratch # base address
sd x24, 0(x2) # store in memory
li x24, 0x49a04db7acdd328e # load another value into integer register
amoswap.w x24, x24, (x2) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x25)
li x25, 0xc228ed0a93269114 # load random value
la x15, scratch # base address
sd x25, 0(x15) # store in memory
li x25, 0x12301e5463786245 # load another value into integer register
amoswap.w x25, x25, (x15) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x26)
li x26, 0x46e92216cee2bffd # load random value
la x24, scratch # base address
sd x26, 0(x24) # store in memory
li x26, 0x58ddbb13f82d13db # load another value into integer register
amoswap.w x26, x26, (x24) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x27)
li x27, 0x32731dd95ada62cb # load random value
la x5, scratch # base address
sd x27, 0(x5) # store in memory
li x27, 0x0a2c34389561e819 # load another value into integer register
amoswap.w x27, x27, (x5) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x28)
li x28, 0x0d4029fba7e1332a # load random value
la x28, scratch # base address
sd x28, 0(x28) # store in memory
amoswap.w x28, x28, (x28) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x29)
li x29, 0x4d80e81de3ad2dc2 # load random value
la x24, scratch # base address
sd x29, 0(x24) # store in memory
li x29, 0xd0835eba56910fce # load another value into integer register
amoswap.w x29, x29, (x24) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x30)
li x30, 0x012cfc18abe9b8da # load random value
la x15, scratch # base address
sd x30, 0(x15) # store in memory
li x30, 0xfc082851621b33bb # load another value into integer register
amoswap.w x30, x30, (x15) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x31)
li x31, 0x15157b308c3f9dd9 # load random value
la x31, scratch # base address
sd x31, 0(x31) # store in memory
amoswap.w x31, x31, (x31) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x1)
li x1, 0x6073f003a761eb4a # load random value
la x1, scratch # base address
sd x1, 0(x1) # store in memory
amoswap.w x1, x1, (x1) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x2)
li x2, 0x0868ead20c5274cb # load random value
la x2, scratch # base address
sd x2, 0(x2) # store in memory
amoswap.w x2, x2, (x2) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x3)
li x3, 0xefae0e6073332951 # load random value
la x3, scratch # base address
sd x3, 0(x3) # store in memory
amoswap.w x3, x3, (x3) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x4)
mv x5, x4 # switch signature pointer register to avoid conflict with test
li x4, 0xc8c1d50eabaa97a8 # load random value
la x4, scratch # base address
sd x4, 0(x4) # store in memory
amoswap.w x4, x4, (x4) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x5)
mv x6, x5 # switch signature pointer register to avoid conflict with test
li x5, 0x42d452e8fcc7368c # load random value
la x5, scratch # base address
sd x5, 0(x5) # store in memory
amoswap.w x5, x5, (x5) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x6)
mv x7, x6 # switch signature pointer register to avoid conflict with test
li x6, 0x0b48b8b994d10e78 # load random value
la x6, scratch # base address
sd x6, 0(x6) # store in memory
amoswap.w x6, x6, (x6) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x7)
mv x4, x7 # switch signature pointer register to avoid conflict with test
li x7, 0x72564df0f60863eb # load random value
la x7, scratch # base address
sd x7, 0(x7) # store in memory
amoswap.w x7, x7, (x7) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x8)
li x8, 0xa685066b59736602 # load random value
la x8, scratch # base address
sd x8, 0(x8) # store in memory
amoswap.w x8, x8, (x8) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x9)
li x9, 0xd3d4fcd80c18769a # load random value
la x9, scratch # base address
sd x9, 0(x9) # store in memory
amoswap.w x9, x9, (x9) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x10)
li x10, 0x5fb19a90bc1d8796 # load random value
la x10, scratch # base address
sd x10, 0(x10) # store in memory
amoswap.w x10, x10, (x10) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x11)
li x11, 0xb3a1dbe09ab0cea2 # load random value
la x11, scratch # base address
sd x11, 0(x11) # store in memory
amoswap.w x11, x11, (x11) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x12)
li x12, 0xb6b25f1b4eac737c # load random value
la x12, scratch # base address
sd x12, 0(x12) # store in memory
amoswap.w x12, x12, (x12) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x13)
li x13, 0x64df1050b470612f # load random value
la x13, scratch # base address
sd x13, 0(x13) # store in memory
amoswap.w x13, x13, (x13) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x14)
li x14, 0x2ab6c2c52fe471e1 # load random value
la x14, scratch # base address
sd x14, 0(x14) # store in memory
amoswap.w x14, x14, (x14) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x15)
li x15, 0xe194a5a806c441ec # load random value
la x15, scratch # base address
sd x15, 0(x15) # store in memory
amoswap.w x15, x15, (x15) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x16)
li x16, 0x0f75216efb583742 # load random value
la x16, scratch # base address
sd x16, 0(x16) # store in memory
amoswap.w x16, x16, (x16) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x17)
li x17, 0x288cac81c7d361d7 # load random value
la x17, scratch # base address
sd x17, 0(x17) # store in memory
amoswap.w x17, x17, (x17) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x18)
li x18, 0xff416be7524a5dbc # load random value
la x18, scratch # base address
sd x18, 0(x18) # store in memory
amoswap.w x18, x18, (x18) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x19)
li x19, 0x98d1d94c155b8c52 # load random value
la x19, scratch # base address
sd x19, 0(x19) # store in memory
amoswap.w x19, x19, (x19) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x20)
li x20, 0xc1a7408a9fa92983 # load random value
la x20, scratch # base address
sd x20, 0(x20) # store in memory
amoswap.w x20, x20, (x20) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x21)
li x21, 0xf1241069d5a58f06 # load random value
la x21, scratch # base address
sd x21, 0(x21) # store in memory
amoswap.w x21, x21, (x21) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x22)
li x22, 0x42208b078af1ecb1 # load random value
la x22, scratch # base address
sd x22, 0(x22) # store in memory
amoswap.w x22, x22, (x22) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x23)
li x23, 0x6349e10d55e1c650 # load random value
la x23, scratch # base address
sd x23, 0(x23) # store in memory
amoswap.w x23, x23, (x23) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x24)
li x24, 0x2704baf377da76d0 # load random value
la x24, scratch # base address
sd x24, 0(x24) # store in memory
amoswap.w x24, x24, (x24) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x25)
li x25, 0x27f5e88c9b52cc83 # load random value
la x25, scratch # base address
sd x25, 0(x25) # store in memory
amoswap.w x25, x25, (x25) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x26)
li x26, 0xf6ce92977cecdd4e # load random value
la x26, scratch # base address
sd x26, 0(x26) # store in memory
amoswap.w x26, x26, (x26) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x27)
li x27, 0xe6f622ad4ed9f0ca # load random value
la x27, scratch # base address
sd x27, 0(x27) # store in memory
amoswap.w x27, x27, (x27) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x28)
li x28, 0x281e8d3e66f96dc7 # load random value
la x28, scratch # base address
sd x28, 0(x28) # store in memory
amoswap.w x28, x28, (x28) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x29)
li x29, 0x2b357cbdfb0ec779 # load random value
la x29, scratch # base address
sd x29, 0(x29) # store in memory
amoswap.w x29, x29, (x29) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x30)
li x30, 0x2ae870bd7ea7be08 # load random value
la x30, scratch # base address
sd x30, 0(x30) # store in memory
amoswap.w x30, x30, (x30) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x31)
li x31, 0x9fd6db6b23ce40fe # load random value
la x31, scratch # base address
sd x31, 0(x31) # store in memory
amoswap.w x31, x31, (x31) # perform operation

# Testcase cp_gpr/fpr_hazard nohaz test
la x30, scratch
add x1, x6, x12 # perform first operation
amoswap.w x26, x22, (x30) # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard nohaz test
la x22, scratch
add x5, x29, x9 # perform first operation
amoswap.w x17, x18, (x22) # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard nohaz test
la x30, scratch
add x5, x2, x23 # perform first operation
amoswap.w x20, x14, (x30) # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard raw test
la x31, scratch
add x22, x22, x0 # perform first operation
amoswap.w x14, x22, (x31) # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard raw test
la x31, scratch
add x31, x31, x0 # perform first operation
amoswap.w x31, x7, (x31) # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard raw test
la x1, scratch
add x30, x30, x0 # perform first operation
amoswap.w x25, x8, (x1) # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard waw test
la x28, scratch
add x12, x13, x24 # perform first operation
amoswap.w x12, x8, (x28) # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard waw test
la x8, scratch
add x5, x3, x29 # perform first operation
amoswap.w x5, x25, (x8) # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard waw test
la x25, scratch
add x2, x5, x26 # perform first operation
amoswap.w x2, x14, (x25) # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard war test
la x11, scratch
add x17, x29, x30 # perform first operation
amoswap.w x29, x24, (x11) # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard war test
la x1, scratch
add x12, x29, x13 # perform first operation
amoswap.w x13, x25, (x1) # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard war test
la x1, scratch
add x25, x24, x3 # perform first operation
amoswap.w x2, x19, (x1) # perform second (triggering) operation

#.EQU SIGSIZE,0


// ******************
// Tests from: WALLY-COV-amominu.w.S
// ******************


# initialize signature pointer
la x4, begin_signature

    
# Testcase cp_rs1 (Test source rs1 = x1)
li x9, 0x8b88fd65f742131e # load random value
la x1, scratch # base address
sd x9, 0(x1) # store in memory
li x9, 0x80a010871b4305ff # load another value into integer register
amominu.w x3, x9, (x1) # perform operation

# Testcase cp_rs1 (Test source rs1 = x2)
li x12, 0xa0cb7a8b7640abd3 # load random value
la x2, scratch # base address
sd x12, 0(x2) # store in memory
li x12, 0x7e175f816e0b9ea6 # load another value into integer register
amominu.w x3, x12, (x2) # perform operation

# Testcase cp_rs1 (Test source rs1 = x3)
li x8, 0xcfcaf5b8160fc2d4 # load random value
la x3, scratch # base address
sd x8, 0(x3) # store in memory
li x8, 0x1eff2308ab5f9529 # load another value into integer register
amominu.w x23, x8, (x3) # perform operation

# Testcase cp_rs1 (Test source rs1 = x4)
mv x5, x4 # switch signature pointer register to avoid conflict with test
li x27, 0x68cce2762fef5cd8 # load random value
la x4, scratch # base address
sd x27, 0(x4) # store in memory
li x27, 0xdc1620b1b0753a3a # load another value into integer register
amominu.w x13, x27, (x4) # perform operation

# Testcase cp_rs1 (Test source rs1 = x5)
mv x6, x5 # switch signature pointer register to avoid conflict with test
li x28, 0x9c02026ea51c8db5 # load random value
la x5, scratch # base address
sd x28, 0(x5) # store in memory
li x28, 0x8398a0d168337b58 # load another value into integer register
amominu.w x22, x28, (x5) # perform operation

# Testcase cp_rs1 (Test source rs1 = x6)
mv x7, x6 # switch signature pointer register to avoid conflict with test
li x9, 0x2cdcb20fc52a0090 # load random value
la x6, scratch # base address
sd x9, 0(x6) # store in memory
li x9, 0x4940e760fd62655d # load another value into integer register
amominu.w x2, x9, (x6) # perform operation

# Testcase cp_rs1 (Test source rs1 = x7)
mv x4, x7 # switch signature pointer register to avoid conflict with test
li x11, 0x6932efdd1f9e2298 # load random value
la x7, scratch # base address
sd x11, 0(x7) # store in memory
li x11, 0xa9c164788c5050e9 # load another value into integer register
amominu.w x12, x11, (x7) # perform operation

# Testcase cp_rs1 (Test source rs1 = x8)
li x12, 0x068d7abccf57989e # load random value
la x8, scratch # base address
sd x12, 0(x8) # store in memory
li x12, 0x4685fa878f5cb1d9 # load another value into integer register
amominu.w x5, x12, (x8) # perform operation

# Testcase cp_rs1 (Test source rs1 = x9)
li x24, 0x5a49373f3e5c488f # load random value
la x9, scratch # base address
sd x24, 0(x9) # store in memory
li x24, 0x4bd31dd6b0a41cde # load another value into integer register
amominu.w x18, x24, (x9) # perform operation

# Testcase cp_rs1 (Test source rs1 = x10)
li x1, 0x5e71c981b30990aa # load random value
la x10, scratch # base address
sd x1, 0(x10) # store in memory
li x1, 0x7174e81de0c5ba14 # load another value into integer register
amominu.w x29, x1, (x10) # perform operation

# Testcase cp_rs1 (Test source rs1 = x11)
li x19, 0xbee16f8fe77f7c37 # load random value
la x11, scratch # base address
sd x19, 0(x11) # store in memory
li x19, 0xff9721b129a6c476 # load another value into integer register
amominu.w x28, x19, (x11) # perform operation

# Testcase cp_rs1 (Test source rs1 = x12)
li x31, 0x1db1f38deaf20e35 # load random value
la x12, scratch # base address
sd x31, 0(x12) # store in memory
li x31, 0x561558e7d6ae879c # load another value into integer register
amominu.w x5, x31, (x12) # perform operation

# Testcase cp_rs1 (Test source rs1 = x13)
li x28, 0x92b532895ba4f51f # load random value
la x13, scratch # base address
sd x28, 0(x13) # store in memory
li x28, 0x9a1582479169f79c # load another value into integer register
amominu.w x5, x28, (x13) # perform operation

# Testcase cp_rs1 (Test source rs1 = x14)
li x28, 0x4a16b8012b6d5578 # load random value
la x14, scratch # base address
sd x28, 0(x14) # store in memory
li x28, 0xc027fbb7898c456f # load another value into integer register
amominu.w x25, x28, (x14) # perform operation

# Testcase cp_rs1 (Test source rs1 = x15)
li x20, 0xc9fca54ac97e5fc8 # load random value
la x15, scratch # base address
sd x20, 0(x15) # store in memory
li x20, 0x38ddb1c42cd66130 # load another value into integer register
amominu.w x12, x20, (x15) # perform operation

# Testcase cp_rs1 (Test source rs1 = x16)
li x22, 0x4e6de0c82cf2215a # load random value
la x16, scratch # base address
sd x22, 0(x16) # store in memory
li x22, 0xdeb6c6f0b59c077a # load another value into integer register
amominu.w x8, x22, (x16) # perform operation

# Testcase cp_rs1 (Test source rs1 = x17)
li x7, 0xa0d11cd772c1ba5a # load random value
la x17, scratch # base address
sd x7, 0(x17) # store in memory
li x7, 0x58a8cfd6ffaa0047 # load another value into integer register
amominu.w x6, x7, (x17) # perform operation

# Testcase cp_rs1 (Test source rs1 = x18)
li x8, 0x636cb6ebaf5aab39 # load random value
la x18, scratch # base address
sd x8, 0(x18) # store in memory
li x8, 0x223f20d53c7d1aa5 # load another value into integer register
amominu.w x9, x8, (x18) # perform operation

# Testcase cp_rs1 (Test source rs1 = x19)
li x14, 0xec6a793f5d241596 # load random value
la x19, scratch # base address
sd x14, 0(x19) # store in memory
li x14, 0xd4efb9656e2350d0 # load another value into integer register
amominu.w x27, x14, (x19) # perform operation

# Testcase cp_rs1 (Test source rs1 = x20)
li x30, 0xd8ec905bb36e9248 # load random value
la x20, scratch # base address
sd x30, 0(x20) # store in memory
li x30, 0x71378d01fa2bbaf1 # load another value into integer register
amominu.w x16, x30, (x20) # perform operation

# Testcase cp_rs1 (Test source rs1 = x21)
li x16, 0x59541c62ff4d2e3b # load random value
la x21, scratch # base address
sd x16, 0(x21) # store in memory
li x16, 0x7e8bbd00a8fd7ef4 # load another value into integer register
amominu.w x30, x16, (x21) # perform operation

# Testcase cp_rs1 (Test source rs1 = x22)
li x20, 0x8db167b7f06e5f68 # load random value
la x22, scratch # base address
sd x20, 0(x22) # store in memory
li x20, 0x92d72325876ea728 # load another value into integer register
amominu.w x13, x20, (x22) # perform operation

# Testcase cp_rs1 (Test source rs1 = x23)
li x30, 0xfdfc8fef6f99a273 # load random value
la x23, scratch # base address
sd x30, 0(x23) # store in memory
li x30, 0xfe417b72400d360f # load another value into integer register
amominu.w x2, x30, (x23) # perform operation

# Testcase cp_rs1 (Test source rs1 = x24)
li x6, 0xa8c97995f708ab89 # load random value
la x24, scratch # base address
sd x6, 0(x24) # store in memory
li x6, 0xfca98309f9b5624d # load another value into integer register
amominu.w x25, x6, (x24) # perform operation

# Testcase cp_rs1 (Test source rs1 = x25)
li x17, 0xba4c47bb0aac492d # load random value
la x25, scratch # base address
sd x17, 0(x25) # store in memory
li x17, 0x4b687364580c540e # load another value into integer register
amominu.w x28, x17, (x25) # perform operation

# Testcase cp_rs1 (Test source rs1 = x26)
li x21, 0x58c305d3d84aff20 # load random value
la x26, scratch # base address
sd x21, 0(x26) # store in memory
li x21, 0xb29d5acceb02d155 # load another value into integer register
amominu.w x3, x21, (x26) # perform operation

# Testcase cp_rs1 (Test source rs1 = x27)
li x26, 0xe5e7a284ae0d7013 # load random value
la x27, scratch # base address
sd x26, 0(x27) # store in memory
li x26, 0x0d78825423441adc # load another value into integer register
amominu.w x28, x26, (x27) # perform operation

# Testcase cp_rs1 (Test source rs1 = x28)
li x27, 0xb7e84ae93ac08e09 # load random value
la x28, scratch # base address
sd x27, 0(x28) # store in memory
li x27, 0xcb7f36fbce82d696 # load another value into integer register
amominu.w x11, x27, (x28) # perform operation

# Testcase cp_rs1 (Test source rs1 = x29)
li x16, 0xc1417cf242b4a47e # load random value
la x29, scratch # base address
sd x16, 0(x29) # store in memory
li x16, 0xa0a36ed5a594b699 # load another value into integer register
amominu.w x7, x16, (x29) # perform operation

# Testcase cp_rs1 (Test source rs1 = x30)
li x28, 0xab9007b3a6f685f7 # load random value
la x30, scratch # base address
sd x28, 0(x30) # store in memory
li x28, 0x2d171d8f8da2042a # load another value into integer register
amominu.w x7, x28, (x30) # perform operation

# Testcase cp_rs1 (Test source rs1 = x31)
li x23, 0x5778e021e3c03887 # load random value
la x31, scratch # base address
sd x23, 0(x31) # store in memory
li x23, 0x588a1d0269bfb6be # load another value into integer register
amominu.w x21, x23, (x31) # perform operation

# Testcase cp_rs2 (Test source rs2 = x0)
li x0, 0xcfac620bfc1eab84 # load random value
la x7, scratch # base address
sd x0, 0(x7) # store in memory
li x0, 0xd416e0c71b26ad13 # load another value into integer register
amominu.w x23, x0, (x7) # perform operation

# Testcase cp_rs2 (Test source rs2 = x1)
li x1, 0x43b3f948530f0dfe # load random value
la x11, scratch # base address
sd x1, 0(x11) # store in memory
li x1, 0xc02693026c5359b0 # load another value into integer register
amominu.w x9, x1, (x11) # perform operation

# Testcase cp_rs2 (Test source rs2 = x2)
li x2, 0xac89d1a0e2a0881d # load random value
la x12, scratch # base address
sd x2, 0(x12) # store in memory
li x2, 0x3a8e245ad8243730 # load another value into integer register
amominu.w x26, x2, (x12) # perform operation

# Testcase cp_rs2 (Test source rs2 = x3)
li x3, 0xa7f34371a891c755 # load random value
la x5, scratch # base address
sd x3, 0(x5) # store in memory
li x3, 0x30654bb2fc14aa6c # load another value into integer register
amominu.w x18, x3, (x5) # perform operation

# Testcase cp_rs2 (Test source rs2 = x4)
mv x5, x4 # switch signature pointer register to avoid conflict with test
li x4, 0x0606f6033049ddb1 # load random value
la x9, scratch # base address
sd x4, 0(x9) # store in memory
li x4, 0xad1fa6383183133d # load another value into integer register
amominu.w x6, x4, (x9) # perform operation

# Testcase cp_rs2 (Test source rs2 = x5)
mv x6, x5 # switch signature pointer register to avoid conflict with test
li x5, 0x24f3d6b6e68fb596 # load random value
la x14, scratch # base address
sd x5, 0(x14) # store in memory
li x5, 0x849917252c0ca61e # load another value into integer register
amominu.w x13, x5, (x14) # perform operation

# Testcase cp_rs2 (Test source rs2 = x6)
mv x7, x6 # switch signature pointer register to avoid conflict with test
li x6, 0x5820e11153dce553 # load random value
la x25, scratch # base address
sd x6, 0(x25) # store in memory
li x6, 0x86f79ef9a38a5482 # load another value into integer register
amominu.w x20, x6, (x25) # perform operation

# Testcase cp_rs2 (Test source rs2 = x7)
mv x4, x7 # switch signature pointer register to avoid conflict with test
li x7, 0xec5a8a417bb124ce # load random value
la x17, scratch # base address
sd x7, 0(x17) # store in memory
li x7, 0x00cf5dc796c8970b # load another value into integer register
amominu.w x16, x7, (x17) # perform operation

# Testcase cp_rs2 (Test source rs2 = x8)
li x8, 0x7b7d4011ba3d4929 # load random value
la x2, scratch # base address
sd x8, 0(x2) # store in memory
li x8, 0xf2d6f49c4ccc42c6 # load another value into integer register
amominu.w x14, x8, (x2) # perform operation

# Testcase cp_rs2 (Test source rs2 = x9)
li x9, 0x79fe15023baa0dab # load random value
la x11, scratch # base address
sd x9, 0(x11) # store in memory
li x9, 0xd8c648f22998b204 # load another value into integer register
amominu.w x17, x9, (x11) # perform operation

# Testcase cp_rs2 (Test source rs2 = x10)
li x10, 0xf1908cc8c8fbdcc1 # load random value
la x19, scratch # base address
sd x10, 0(x19) # store in memory
li x10, 0x3b71a551f02c1731 # load another value into integer register
amominu.w x29, x10, (x19) # perform operation

# Testcase cp_rs2 (Test source rs2 = x11)
li x11, 0xbfd6f57fee5c455a # load random value
la x14, scratch # base address
sd x11, 0(x14) # store in memory
li x11, 0xeabc35f74e2defc4 # load another value into integer register
amominu.w x25, x11, (x14) # perform operation

# Testcase cp_rs2 (Test source rs2 = x12)
li x12, 0x4f767496861a78d5 # load random value
la x30, scratch # base address
sd x12, 0(x30) # store in memory
li x12, 0xa3199f41a81840cb # load another value into integer register
amominu.w x18, x12, (x30) # perform operation

# Testcase cp_rs2 (Test source rs2 = x13)
li x13, 0xf3c1d3bff129cd99 # load random value
la x17, scratch # base address
sd x13, 0(x17) # store in memory
li x13, 0x021b0feffe3880a4 # load another value into integer register
amominu.w x14, x13, (x17) # perform operation

# Testcase cp_rs2 (Test source rs2 = x14)
li x14, 0xe4b3807a30543aca # load random value
la x24, scratch # base address
sd x14, 0(x24) # store in memory
li x14, 0x40f884fea036fd60 # load another value into integer register
amominu.w x15, x14, (x24) # perform operation

# Testcase cp_rs2 (Test source rs2 = x15)
li x15, 0xbbafddc9c306acfe # load random value
la x13, scratch # base address
sd x15, 0(x13) # store in memory
li x15, 0x813b9294ec05eb01 # load another value into integer register
amominu.w x6, x15, (x13) # perform operation

# Testcase cp_rs2 (Test source rs2 = x16)
li x16, 0x94078bde1f9df527 # load random value
la x10, scratch # base address
sd x16, 0(x10) # store in memory
li x16, 0xbea3f8f87d7a63ff # load another value into integer register
amominu.w x9, x16, (x10) # perform operation

# Testcase cp_rs2 (Test source rs2 = x17)
li x17, 0x7f8fb80e3f447860 # load random value
la x22, scratch # base address
sd x17, 0(x22) # store in memory
li x17, 0xc43afa4c7134272b # load another value into integer register
amominu.w x21, x17, (x22) # perform operation

# Testcase cp_rs2 (Test source rs2 = x18)
li x18, 0x7c58cfd804bf059a # load random value
la x12, scratch # base address
sd x18, 0(x12) # store in memory
li x18, 0x5e30472c1b4f3f09 # load another value into integer register
amominu.w x23, x18, (x12) # perform operation

# Testcase cp_rs2 (Test source rs2 = x19)
li x19, 0x5303ea777b0f31df # load random value
la x25, scratch # base address
sd x19, 0(x25) # store in memory
li x19, 0x93ca2841e0e1c309 # load another value into integer register
amominu.w x14, x19, (x25) # perform operation

# Testcase cp_rs2 (Test source rs2 = x20)
li x20, 0x820f36d2fd43ad4a # load random value
la x18, scratch # base address
sd x20, 0(x18) # store in memory
li x20, 0x0c85c2a844572056 # load another value into integer register
amominu.w x2, x20, (x18) # perform operation

# Testcase cp_rs2 (Test source rs2 = x21)
li x21, 0x3418f926f06779fb # load random value
la x8, scratch # base address
sd x21, 0(x8) # store in memory
li x21, 0xb38436471a059158 # load another value into integer register
amominu.w x16, x21, (x8) # perform operation

# Testcase cp_rs2 (Test source rs2 = x22)
li x22, 0x15cb281ae4edcec9 # load random value
la x24, scratch # base address
sd x22, 0(x24) # store in memory
li x22, 0x0c844bdef795b4c3 # load another value into integer register
amominu.w x5, x22, (x24) # perform operation

# Testcase cp_rs2 (Test source rs2 = x23)
li x23, 0x3eb77063cc288e66 # load random value
la x26, scratch # base address
sd x23, 0(x26) # store in memory
li x23, 0x5fff0e4e4ced7ff9 # load another value into integer register
amominu.w x28, x23, (x26) # perform operation

# Testcase cp_rs2 (Test source rs2 = x24)
li x24, 0x81feb55ee3e0e65c # load random value
la x13, scratch # base address
sd x24, 0(x13) # store in memory
li x24, 0x8c17592c45f0f8cf # load another value into integer register
amominu.w x19, x24, (x13) # perform operation

# Testcase cp_rs2 (Test source rs2 = x25)
li x25, 0x54a7191dc87f9b4b # load random value
la x12, scratch # base address
sd x25, 0(x12) # store in memory
li x25, 0x5f5800147358999c # load another value into integer register
amominu.w x30, x25, (x12) # perform operation

# Testcase cp_rs2 (Test source rs2 = x26)
li x26, 0xb38519fb7eebf999 # load random value
la x13, scratch # base address
sd x26, 0(x13) # store in memory
li x26, 0x0626109c619b355b # load another value into integer register
amominu.w x16, x26, (x13) # perform operation

# Testcase cp_rs2 (Test source rs2 = x27)
li x27, 0xc66af06a3a15479f # load random value
la x9, scratch # base address
sd x27, 0(x9) # store in memory
li x27, 0x42ed6efb33765b37 # load another value into integer register
amominu.w x24, x27, (x9) # perform operation

# Testcase cp_rs2 (Test source rs2 = x28)
li x28, 0xcf6532c1cbf1ac27 # load random value
la x20, scratch # base address
sd x28, 0(x20) # store in memory
li x28, 0x1573838e85408d2e # load another value into integer register
amominu.w x6, x28, (x20) # perform operation

# Testcase cp_rs2 (Test source rs2 = x29)
li x29, 0x6015e6668e376358 # load random value
la x6, scratch # base address
sd x29, 0(x6) # store in memory
li x29, 0xfdd76a8ba322d67f # load another value into integer register
amominu.w x18, x29, (x6) # perform operation

# Testcase cp_rs2 (Test source rs2 = x30)
li x30, 0x5504e2703db2da2a # load random value
la x23, scratch # base address
sd x30, 0(x23) # store in memory
li x30, 0x12e6bfcbe84dbf35 # load another value into integer register
amominu.w x5, x30, (x23) # perform operation

# Testcase cp_rs2 (Test source rs2 = x31)
li x31, 0xb4e736e9696b041c # load random value
la x6, scratch # base address
sd x31, 0(x6) # store in memory
li x31, 0x2e9e7803f405b4a9 # load another value into integer register
amominu.w x28, x31, (x6) # perform operation

# Testcase cp_rd (Test destination rd = x0)
li x6, 0x65f8cba5f2dea4c6 # load random value
la x16, scratch # base address
sd x6, 0(x16) # store in memory
li x6, 0x7f274bc71d12cd01 # load another value into integer register
amominu.w x0, x6, (x16) # perform operation

# Testcase cp_rd (Test destination rd = x1)
li x14, 0xdec3689849cf508c # load random value
la x7, scratch # base address
sd x14, 0(x7) # store in memory
li x14, 0xf1e5230695d982cf # load another value into integer register
amominu.w x1, x14, (x7) # perform operation

# Testcase cp_rd (Test destination rd = x2)
li x31, 0x79b0b7f62a0c2e14 # load random value
la x12, scratch # base address
sd x31, 0(x12) # store in memory
li x31, 0xacd298f2bcb5f69e # load another value into integer register
amominu.w x2, x31, (x12) # perform operation

# Testcase cp_rd (Test destination rd = x3)
li x21, 0xe1ec4d3329a389b1 # load random value
la x20, scratch # base address
sd x21, 0(x20) # store in memory
li x21, 0x3036c95483b57b9c # load another value into integer register
amominu.w x3, x21, (x20) # perform operation

# Testcase cp_rd (Test destination rd = x4)
mv x5, x4 # switch signature pointer register to avoid conflict with test
li x1, 0x2b44705d0abdfe00 # load random value
la x28, scratch # base address
sd x1, 0(x28) # store in memory
li x1, 0x62911046eda1ade0 # load another value into integer register
amominu.w x4, x1, (x28) # perform operation

# Testcase cp_rd (Test destination rd = x5)
mv x6, x5 # switch signature pointer register to avoid conflict with test
li x16, 0x4fe852835a694890 # load random value
la x22, scratch # base address
sd x16, 0(x22) # store in memory
li x16, 0x73893afc8b4eb3f8 # load another value into integer register
amominu.w x5, x16, (x22) # perform operation

# Testcase cp_rd (Test destination rd = x6)
mv x7, x6 # switch signature pointer register to avoid conflict with test
li x5, 0xe11e373217783982 # load random value
la x21, scratch # base address
sd x5, 0(x21) # store in memory
li x5, 0x1458375493804e8d # load another value into integer register
amominu.w x6, x5, (x21) # perform operation

# Testcase cp_rd (Test destination rd = x7)
mv x4, x7 # switch signature pointer register to avoid conflict with test
li x27, 0x70f4d89a7ba03dff # load random value
la x18, scratch # base address
sd x27, 0(x18) # store in memory
li x27, 0x7f0d9e5e1d35ac0e # load another value into integer register
amominu.w x7, x27, (x18) # perform operation

# Testcase cp_rd (Test destination rd = x8)
li x26, 0x7ebff794a14c089b # load random value
la x31, scratch # base address
sd x26, 0(x31) # store in memory
li x26, 0xbf37a6a61b0c8dea # load another value into integer register
amominu.w x8, x26, (x31) # perform operation

# Testcase cp_rd (Test destination rd = x9)
li x5, 0x0001aa1fe2247cee # load random value
la x27, scratch # base address
sd x5, 0(x27) # store in memory
li x5, 0xbc17d918a628de97 # load another value into integer register
amominu.w x9, x5, (x27) # perform operation

# Testcase cp_rd (Test destination rd = x10)
li x28, 0xe7596bdf0799657c # load random value
la x7, scratch # base address
sd x28, 0(x7) # store in memory
li x28, 0x6bd7682589eca5b6 # load another value into integer register
amominu.w x10, x28, (x7) # perform operation

# Testcase cp_rd (Test destination rd = x11)
li x5, 0x9a95c26a233131fe # load random value
la x3, scratch # base address
sd x5, 0(x3) # store in memory
li x5, 0xfc3711564f76bd74 # load another value into integer register
amominu.w x11, x5, (x3) # perform operation

# Testcase cp_rd (Test destination rd = x12)
li x10, 0xd1f1785206731649 # load random value
la x28, scratch # base address
sd x10, 0(x28) # store in memory
li x10, 0x7f779a48b7d15ab3 # load another value into integer register
amominu.w x12, x10, (x28) # perform operation

# Testcase cp_rd (Test destination rd = x13)
li x16, 0xb02b37ef8d6437a9 # load random value
la x25, scratch # base address
sd x16, 0(x25) # store in memory
li x16, 0xbb7cf95e9841a2e0 # load another value into integer register
amominu.w x13, x16, (x25) # perform operation

# Testcase cp_rd (Test destination rd = x14)
li x10, 0x3499dd4e176ae687 # load random value
la x13, scratch # base address
sd x10, 0(x13) # store in memory
li x10, 0xa00c98f366b5717f # load another value into integer register
amominu.w x14, x10, (x13) # perform operation

# Testcase cp_rd (Test destination rd = x15)
li x31, 0x9f625f3addf65e71 # load random value
la x6, scratch # base address
sd x31, 0(x6) # store in memory
li x31, 0xef4df9621ed43984 # load another value into integer register
amominu.w x15, x31, (x6) # perform operation

# Testcase cp_rd (Test destination rd = x16)
li x5, 0x9d07c211aea6c0df # load random value
la x21, scratch # base address
sd x5, 0(x21) # store in memory
li x5, 0x88bfcd41227251fa # load another value into integer register
amominu.w x16, x5, (x21) # perform operation

# Testcase cp_rd (Test destination rd = x17)
li x23, 0xcf09a11bc312ced3 # load random value
la x29, scratch # base address
sd x23, 0(x29) # store in memory
li x23, 0xf115948711ec81ae # load another value into integer register
amominu.w x17, x23, (x29) # perform operation

# Testcase cp_rd (Test destination rd = x18)
li x20, 0x9e2a744ec9c325c9 # load random value
la x25, scratch # base address
sd x20, 0(x25) # store in memory
li x20, 0x8ff2950a62e3da4d # load another value into integer register
amominu.w x18, x20, (x25) # perform operation

# Testcase cp_rd (Test destination rd = x19)
li x11, 0x0a6e5e57064893a5 # load random value
la x6, scratch # base address
sd x11, 0(x6) # store in memory
li x11, 0xebdd928b3f67f170 # load another value into integer register
amominu.w x19, x11, (x6) # perform operation

# Testcase cp_rd (Test destination rd = x20)
li x21, 0xa23c3eb57f474c11 # load random value
la x31, scratch # base address
sd x21, 0(x31) # store in memory
li x21, 0x9706baecf68e9808 # load another value into integer register
amominu.w x20, x21, (x31) # perform operation

# Testcase cp_rd (Test destination rd = x21)
li x14, 0x435df582d5522d26 # load random value
la x25, scratch # base address
sd x14, 0(x25) # store in memory
li x14, 0x95f7ee45d1bdb3f1 # load another value into integer register
amominu.w x21, x14, (x25) # perform operation

# Testcase cp_rd (Test destination rd = x22)
li x30, 0xdc7ac5079317a974 # load random value
la x5, scratch # base address
sd x30, 0(x5) # store in memory
li x30, 0x60b63d089e597051 # load another value into integer register
amominu.w x22, x30, (x5) # perform operation

# Testcase cp_rd (Test destination rd = x23)
li x20, 0x85f2f260a5d07c49 # load random value
la x5, scratch # base address
sd x20, 0(x5) # store in memory
li x20, 0x8d4e3998a2293581 # load another value into integer register
amominu.w x23, x20, (x5) # perform operation

# Testcase cp_rd (Test destination rd = x24)
li x28, 0x26605053ac1c179d # load random value
la x11, scratch # base address
sd x28, 0(x11) # store in memory
li x28, 0x87f94d7f07a2944b # load another value into integer register
amominu.w x24, x28, (x11) # perform operation

# Testcase cp_rd (Test destination rd = x25)
li x10, 0x607198071800fcce # load random value
la x18, scratch # base address
sd x10, 0(x18) # store in memory
li x10, 0x80541be9116dc852 # load another value into integer register
amominu.w x25, x10, (x18) # perform operation

# Testcase cp_rd (Test destination rd = x26)
li x18, 0x56172bb6bafbe498 # load random value
la x26, scratch # base address
sd x18, 0(x26) # store in memory
li x18, 0x7f481af38f748dea # load another value into integer register
amominu.w x26, x18, (x26) # perform operation

# Testcase cp_rd (Test destination rd = x27)
li x5, 0x89002e29e637d1b9 # load random value
la x8, scratch # base address
sd x5, 0(x8) # store in memory
li x5, 0xd92174f986ea51d7 # load another value into integer register
amominu.w x27, x5, (x8) # perform operation

# Testcase cp_rd (Test destination rd = x28)
li x23, 0x487180135391969c # load random value
la x27, scratch # base address
sd x23, 0(x27) # store in memory
li x23, 0x7b495bdfd1754610 # load another value into integer register
amominu.w x28, x23, (x27) # perform operation

# Testcase cp_rd (Test destination rd = x29)
li x17, 0x830423285b7df8ea # load random value
la x28, scratch # base address
sd x17, 0(x28) # store in memory
li x17, 0x32e4d08d3d75dd81 # load another value into integer register
amominu.w x29, x17, (x28) # perform operation

# Testcase cp_rd (Test destination rd = x30)
li x29, 0xc8b05144dd85a86d # load random value
la x7, scratch # base address
sd x29, 0(x7) # store in memory
li x29, 0xd77d06ab40fe0a86 # load another value into integer register
amominu.w x30, x29, (x7) # perform operation

# Testcase cp_rd (Test destination rd = x31)
li x31, 0xe7133731c9757c10 # load random value
la x25, scratch # base address
sd x31, 0(x25) # store in memory
li x31, 0xcec90daa5fff25e7 # load another value into integer register
amominu.w x31, x31, (x25) # perform operation

# Testcase cp_rs2_corners (Test source rs2 value = 0x0)
li x24, 0xa65977c73650ffbe # load random value
la x3, scratch # base address
sd x24, 0(x3) # store in memory
li x24, 0x0000000000000000 # load another value into integer register
amominu.w x17, x24, (x3) # perform operation

# Testcase cp_rs2_corners (Test source rs2 value = 0x1)
li x13, 0x6bcf1fceb80ec085 # load random value
la x25, scratch # base address
sd x13, 0(x25) # store in memory
li x13, 0x0000000000000001 # load another value into integer register
amominu.w x19, x13, (x25) # perform operation

# Testcase cp_rs2_corners (Test source rs2 value = 0x2)
li x26, 0x0407abea83ce86a3 # load random value
la x3, scratch # base address
sd x26, 0(x3) # store in memory
li x26, 0x0000000000000002 # load another value into integer register
amominu.w x17, x26, (x3) # perform operation

# Testcase cp_rs2_corners (Test source rs2 value = 0x8000000000000000)
li x12, 0x4d35cdd30f15f649 # load random value
la x31, scratch # base address
sd x12, 0(x31) # store in memory
li x12, 0x8000000000000000 # load another value into integer register
amominu.w x13, x12, (x31) # perform operation

# Testcase cp_rs2_corners (Test source rs2 value = 0x8000000000000001)
li x21, 0x6471055edaef856d # load random value
la x25, scratch # base address
sd x21, 0(x25) # store in memory
li x21, 0x8000000000000001 # load another value into integer register
amominu.w x12, x21, (x25) # perform operation

# Testcase cp_rs2_corners (Test source rs2 value = 0x7fffffffffffffff)
li x21, 0x36061293ed73bac0 # load random value
la x3, scratch # base address
sd x21, 0(x3) # store in memory
li x21, 0x7fffffffffffffff # load another value into integer register
amominu.w x5, x21, (x3) # perform operation

# Testcase cp_rs2_corners (Test source rs2 value = 0x7ffffffffffffffe)
li x8, 0xfbcf31ae521012eb # load random value
la x25, scratch # base address
sd x8, 0(x25) # store in memory
li x8, 0x7ffffffffffffffe # load another value into integer register
amominu.w x31, x8, (x25) # perform operation

# Testcase cp_rs2_corners (Test source rs2 value = 0xffffffffffffffff)
li x20, 0x5020ed6a3c2c31e6 # load random value
la x26, scratch # base address
sd x20, 0(x26) # store in memory
li x20, 0xffffffffffffffff # load another value into integer register
amominu.w x21, x20, (x26) # perform operation

# Testcase cp_rs2_corners (Test source rs2 value = 0xfffffffffffffffe)
li x18, 0x12b3d9b74ffde2ed # load random value
la x21, scratch # base address
sd x18, 0(x21) # store in memory
li x18, 0xfffffffffffffffe # load another value into integer register
amominu.w x16, x18, (x21) # perform operation

# Testcase cp_rs2_corners (Test source rs2 value = 0x5bbc887763ae86f2)
li x21, 0xff607c4586f59b06 # load random value
la x2, scratch # base address
sd x21, 0(x2) # store in memory
li x21, 0x5bbc887763ae86f2 # load another value into integer register
amominu.w x13, x21, (x2) # perform operation

# Testcase cp_rs2_corners (Test source rs2 value = 0xaaaaaaaaaaaaaaaa)
li x13, 0x028af65fdff50f27 # load random value
la x11, scratch # base address
sd x13, 0(x11) # store in memory
li x13, 0xaaaaaaaaaaaaaaaa # load another value into integer register
amominu.w x20, x13, (x11) # perform operation

# Testcase cp_rs2_corners (Test source rs2 value = 0x5555555555555555)
li x24, 0xad36f3117f8d5ea8 # load random value
la x12, scratch # base address
sd x24, 0(x12) # store in memory
li x24, 0x5555555555555555 # load another value into integer register
amominu.w x14, x24, (x12) # perform operation

# Testcase cp_rs2_corners (Test source rs2 value = 0xffffffff)
li x12, 0x6ee194a939a53657 # load random value
la x1, scratch # base address
sd x12, 0(x1) # store in memory
li x12, 0x00000000ffffffff # load another value into integer register
amominu.w x30, x12, (x1) # perform operation

# Testcase cp_rs2_corners (Test source rs2 value = 0xfffffffe)
li x7, 0x6422f3b3ec010320 # load random value
la x18, scratch # base address
sd x7, 0(x18) # store in memory
li x7, 0x00000000fffffffe # load another value into integer register
amominu.w x14, x7, (x18) # perform operation

# Testcase cp_rs2_corners (Test source rs2 value = 0x100000000)
li x12, 0xb4d32d8670fa0f4e # load random value
la x9, scratch # base address
sd x12, 0(x9) # store in memory
li x12, 0x0000000100000000 # load another value into integer register
amominu.w x7, x12, (x9) # perform operation

# Testcase cp_rs2_corners (Test source rs2 value = 0x100000001)
li x24, 0xf5696b3de415f78b # load random value
la x1, scratch # base address
sd x24, 0(x1) # store in memory
li x24, 0x0000000100000001 # load another value into integer register
amominu.w x26, x24, (x1) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x1)
li x1, 0x0e6c1ea23554fd0b # load random value
la x1, scratch # base address
sd x1, 0(x1) # store in memory
amominu.w x2, x1, (x1) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x2)
li x2, 0xac57bb14dcf5dff3 # load random value
la x2, scratch # base address
sd x2, 0(x2) # store in memory
amominu.w x1, x2, (x2) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x3)
li x3, 0x8be1486ea4a943aa # load random value
la x3, scratch # base address
sd x3, 0(x3) # store in memory
amominu.w x31, x3, (x3) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x4)
mv x5, x4 # switch signature pointer register to avoid conflict with test
li x4, 0xbb06e3b499b82891 # load random value
la x4, scratch # base address
sd x4, 0(x4) # store in memory
amominu.w x15, x4, (x4) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x5)
mv x6, x5 # switch signature pointer register to avoid conflict with test
li x5, 0x9d0f7cf5ab015160 # load random value
la x5, scratch # base address
sd x5, 0(x5) # store in memory
amominu.w x9, x5, (x5) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x6)
mv x7, x6 # switch signature pointer register to avoid conflict with test
li x6, 0x514902e5b867a489 # load random value
la x6, scratch # base address
sd x6, 0(x6) # store in memory
amominu.w x3, x6, (x6) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x7)
mv x4, x7 # switch signature pointer register to avoid conflict with test
li x7, 0x55e348e2350cfd44 # load random value
la x7, scratch # base address
sd x7, 0(x7) # store in memory
amominu.w x14, x7, (x7) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x8)
li x8, 0x50ce23d71c60aa93 # load random value
la x8, scratch # base address
sd x8, 0(x8) # store in memory
amominu.w x29, x8, (x8) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x9)
li x9, 0x29cede7da0f3d86f # load random value
la x9, scratch # base address
sd x9, 0(x9) # store in memory
amominu.w x21, x9, (x9) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x10)
li x10, 0x8559b1925240fdb2 # load random value
la x10, scratch # base address
sd x10, 0(x10) # store in memory
amominu.w x18, x10, (x10) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x11)
li x11, 0x0cde7bc632d2e45f # load random value
la x11, scratch # base address
sd x11, 0(x11) # store in memory
amominu.w x30, x11, (x11) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x12)
li x12, 0x72d92a4d5fc538c3 # load random value
la x12, scratch # base address
sd x12, 0(x12) # store in memory
amominu.w x27, x12, (x12) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x13)
li x13, 0x7df4c2c06d76a762 # load random value
la x13, scratch # base address
sd x13, 0(x13) # store in memory
amominu.w x20, x13, (x13) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x14)
li x14, 0xf5c92b5a2e6629d1 # load random value
la x14, scratch # base address
sd x14, 0(x14) # store in memory
amominu.w x7, x14, (x14) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x15)
li x15, 0x344255df428436d3 # load random value
la x15, scratch # base address
sd x15, 0(x15) # store in memory
amominu.w x1, x15, (x15) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x16)
li x16, 0xc6b2cb66ec721f91 # load random value
la x16, scratch # base address
sd x16, 0(x16) # store in memory
amominu.w x12, x16, (x16) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x17)
li x17, 0xfeaf2588063d5d7a # load random value
la x17, scratch # base address
sd x17, 0(x17) # store in memory
amominu.w x24, x17, (x17) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x18)
li x18, 0xc6b342c27a065dcd # load random value
la x18, scratch # base address
sd x18, 0(x18) # store in memory
amominu.w x16, x18, (x18) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x19)
li x19, 0xcabc179b9c36bc4e # load random value
la x19, scratch # base address
sd x19, 0(x19) # store in memory
amominu.w x20, x19, (x19) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x20)
li x20, 0xa77ddf9923f38800 # load random value
la x20, scratch # base address
sd x20, 0(x20) # store in memory
amominu.w x5, x20, (x20) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x21)
li x21, 0x80e25e291808f304 # load random value
la x21, scratch # base address
sd x21, 0(x21) # store in memory
amominu.w x19, x21, (x21) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x22)
li x22, 0x117a26c2542a5083 # load random value
la x22, scratch # base address
sd x22, 0(x22) # store in memory
amominu.w x6, x22, (x22) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x23)
li x23, 0xe9e992aee6690fd7 # load random value
la x23, scratch # base address
sd x23, 0(x23) # store in memory
amominu.w x17, x23, (x23) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x24)
li x24, 0x6b12c368d3766d74 # load random value
la x24, scratch # base address
sd x24, 0(x24) # store in memory
amominu.w x29, x24, (x24) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x25)
li x25, 0xa120289b548ab11f # load random value
la x25, scratch # base address
sd x25, 0(x25) # store in memory
amominu.w x10, x25, (x25) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x26)
li x26, 0x6fba615ac47f146f # load random value
la x26, scratch # base address
sd x26, 0(x26) # store in memory
amominu.w x24, x26, (x26) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x27)
li x27, 0x9ef538eb29f1a124 # load random value
la x27, scratch # base address
sd x27, 0(x27) # store in memory
amominu.w x29, x27, (x27) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x28)
li x28, 0x99d2c742f82cc24f # load random value
la x28, scratch # base address
sd x28, 0(x28) # store in memory
amominu.w x19, x28, (x28) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x29)
li x29, 0xb9fdaafd3bf116b0 # load random value
la x29, scratch # base address
sd x29, 0(x29) # store in memory
amominu.w x7, x29, (x29) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x30)
li x30, 0xfc0a7cfc2d2baf67 # load random value
la x30, scratch # base address
sd x30, 0(x30) # store in memory
amominu.w x24, x30, (x30) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x31)
li x31, 0x0dd82619112034a7 # load random value
la x31, scratch # base address
sd x31, 0(x31) # store in memory
amominu.w x18, x31, (x31) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x1)
li x12, 0xeec5eb59a05dc27a # load random value
la x1, scratch # base address
sd x12, 0(x1) # store in memory
li x12, 0xf4a4f7b466d37950 # load another value into integer register
amominu.w x1, x12, (x1) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x2)
li x21, 0x4910ca7aa7c9b8a8 # load random value
la x2, scratch # base address
sd x21, 0(x2) # store in memory
li x21, 0x4df277dcb8839dfd # load another value into integer register
amominu.w x2, x21, (x2) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x3)
li x29, 0x304425ead2aca588 # load random value
la x3, scratch # base address
sd x29, 0(x3) # store in memory
li x29, 0xeedb9ce6cbf828f9 # load another value into integer register
amominu.w x3, x29, (x3) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x4)
mv x5, x4 # switch signature pointer register to avoid conflict with test
li x21, 0xf969eee826b8db48 # load random value
la x4, scratch # base address
sd x21, 0(x4) # store in memory
li x21, 0x12508cd2fee3274b # load another value into integer register
amominu.w x4, x21, (x4) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x5)
mv x6, x5 # switch signature pointer register to avoid conflict with test
li x9, 0x097d3ac05fd3a868 # load random value
la x5, scratch # base address
sd x9, 0(x5) # store in memory
li x9, 0x8f3e5d4ca6a12e2a # load another value into integer register
amominu.w x5, x9, (x5) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x6)
mv x7, x6 # switch signature pointer register to avoid conflict with test
li x27, 0xc268475fceebe5df # load random value
la x6, scratch # base address
sd x27, 0(x6) # store in memory
li x27, 0x1bb0ffe146409d7f # load another value into integer register
amominu.w x6, x27, (x6) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x7)
mv x4, x7 # switch signature pointer register to avoid conflict with test
li x11, 0xdd4950f33441c767 # load random value
la x7, scratch # base address
sd x11, 0(x7) # store in memory
li x11, 0xa75e6907e94153dd # load another value into integer register
amominu.w x7, x11, (x7) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x8)
li x27, 0x72247a00200b54a7 # load random value
la x8, scratch # base address
sd x27, 0(x8) # store in memory
li x27, 0xecc50d4064974ab4 # load another value into integer register
amominu.w x8, x27, (x8) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x9)
li x24, 0xaadad2b9214075c5 # load random value
la x9, scratch # base address
sd x24, 0(x9) # store in memory
li x24, 0x69f294b025b1f61b # load another value into integer register
amominu.w x9, x24, (x9) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x10)
li x9, 0x43be1e13c49c8296 # load random value
la x10, scratch # base address
sd x9, 0(x10) # store in memory
li x9, 0x114b206361892dc6 # load another value into integer register
amominu.w x10, x9, (x10) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x11)
li x26, 0x2b1ed5b93f6e8950 # load random value
la x11, scratch # base address
sd x26, 0(x11) # store in memory
li x26, 0x0d99b1e28c69f45f # load another value into integer register
amominu.w x11, x26, (x11) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x12)
li x14, 0x9a17b274cec9dde2 # load random value
la x12, scratch # base address
sd x14, 0(x12) # store in memory
li x14, 0x0a51ba497b96104c # load another value into integer register
amominu.w x12, x14, (x12) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x13)
li x10, 0x630615b08c615c05 # load random value
la x13, scratch # base address
sd x10, 0(x13) # store in memory
li x10, 0x52bb49436b7005a5 # load another value into integer register
amominu.w x13, x10, (x13) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x14)
li x17, 0x0c2ef1d4b15687fd # load random value
la x14, scratch # base address
sd x17, 0(x14) # store in memory
li x17, 0xaa972b13b757199d # load another value into integer register
amominu.w x14, x17, (x14) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x15)
li x22, 0x1334b9e06637d541 # load random value
la x15, scratch # base address
sd x22, 0(x15) # store in memory
li x22, 0xb1ffa2d93563d969 # load another value into integer register
amominu.w x15, x22, (x15) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x16)
li x19, 0x465fbfbda8984ba1 # load random value
la x16, scratch # base address
sd x19, 0(x16) # store in memory
li x19, 0x781c101f7d8b4162 # load another value into integer register
amominu.w x16, x19, (x16) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x17)
li x12, 0x394f25e0c9aaba45 # load random value
la x17, scratch # base address
sd x12, 0(x17) # store in memory
li x12, 0xe40735bfa53d13b5 # load another value into integer register
amominu.w x17, x12, (x17) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x18)
li x16, 0x45081cc2c7af27d7 # load random value
la x18, scratch # base address
sd x16, 0(x18) # store in memory
li x16, 0xd0a94af5c8eec779 # load another value into integer register
amominu.w x18, x16, (x18) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x19)
li x11, 0x8e3898f393f881b5 # load random value
la x19, scratch # base address
sd x11, 0(x19) # store in memory
li x11, 0x076b6005e7579bb9 # load another value into integer register
amominu.w x19, x11, (x19) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x20)
li x7, 0x7902845d6b296dcd # load random value
la x20, scratch # base address
sd x7, 0(x20) # store in memory
li x7, 0x2edfe26fe38f8bbd # load another value into integer register
amominu.w x20, x7, (x20) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x21)
li x19, 0xe92331aa70dae254 # load random value
la x21, scratch # base address
sd x19, 0(x21) # store in memory
li x19, 0xa120876fea62d9fc # load another value into integer register
amominu.w x21, x19, (x21) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x22)
li x12, 0xcedf82ae757dde52 # load random value
la x22, scratch # base address
sd x12, 0(x22) # store in memory
li x12, 0x3af166ba9b9824ee # load another value into integer register
amominu.w x22, x12, (x22) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x23)
li x9, 0x1c23334d4bfbd399 # load random value
la x23, scratch # base address
sd x9, 0(x23) # store in memory
li x9, 0x1913ccc74b0c58a1 # load another value into integer register
amominu.w x23, x9, (x23) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x24)
li x24, 0xb95dd4fc669ba72d # load random value
la x24, scratch # base address
sd x24, 0(x24) # store in memory
amominu.w x24, x24, (x24) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x25)
li x18, 0x9e3a8f4b7a49b060 # load random value
la x25, scratch # base address
sd x18, 0(x25) # store in memory
li x18, 0x4ec69c3a240934b6 # load another value into integer register
amominu.w x25, x18, (x25) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x26)
li x7, 0xf72f93572c9ab0d1 # load random value
la x26, scratch # base address
sd x7, 0(x26) # store in memory
li x7, 0x35b98ef6ae7852f0 # load another value into integer register
amominu.w x26, x7, (x26) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x27)
li x27, 0xc750635125908325 # load random value
la x27, scratch # base address
sd x27, 0(x27) # store in memory
amominu.w x27, x27, (x27) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x28)
li x9, 0xfaa005c65fc917c9 # load random value
la x28, scratch # base address
sd x9, 0(x28) # store in memory
li x9, 0x8909bb04f6dd39fb # load another value into integer register
amominu.w x28, x9, (x28) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x29)
li x1, 0xed4a9d30fe02ee90 # load random value
la x29, scratch # base address
sd x1, 0(x29) # store in memory
li x1, 0xb4d9bd6e4e0b4970 # load another value into integer register
amominu.w x29, x1, (x29) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x30)
li x19, 0x2886ac546c2622c1 # load random value
la x30, scratch # base address
sd x19, 0(x30) # store in memory
li x19, 0xcab3aaaea4b365bf # load another value into integer register
amominu.w x30, x19, (x30) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x31)
li x2, 0xa371c2ff4c030f4a # load random value
la x31, scratch # base address
sd x2, 0(x31) # store in memory
li x2, 0xdcb521b8ea90846d # load another value into integer register
amominu.w x31, x2, (x31) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x0)
li x0, 0xf30ba3fe1e5e2e3f # load random value
la x11, scratch # base address
sd x0, 0(x11) # store in memory
li x0, 0xd89e869fb1173f7e # load another value into integer register
amominu.w x0, x0, (x11) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x1)
li x1, 0xc09725e46edbb80d # load random value
la x13, scratch # base address
sd x1, 0(x13) # store in memory
li x1, 0x940e6d2c0e276d4f # load another value into integer register
amominu.w x1, x1, (x13) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x2)
li x2, 0xb5335894f1e4145c # load random value
la x8, scratch # base address
sd x2, 0(x8) # store in memory
li x2, 0x33e014191f54fa03 # load another value into integer register
amominu.w x2, x2, (x8) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x3)
li x3, 0xe816af45d519bd98 # load random value
la x29, scratch # base address
sd x3, 0(x29) # store in memory
li x3, 0xbb2ace0d6543e949 # load another value into integer register
amominu.w x3, x3, (x29) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x4)
mv x5, x4 # switch signature pointer register to avoid conflict with test
li x4, 0xe625bbc76e9478d9 # load random value
la x27, scratch # base address
sd x4, 0(x27) # store in memory
li x4, 0xcd796cbc7bd791a1 # load another value into integer register
amominu.w x4, x4, (x27) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x5)
mv x6, x5 # switch signature pointer register to avoid conflict with test
li x5, 0x35fd9ea73e2fd714 # load random value
la x8, scratch # base address
sd x5, 0(x8) # store in memory
li x5, 0xe82e36d515542df1 # load another value into integer register
amominu.w x5, x5, (x8) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x6)
mv x7, x6 # switch signature pointer register to avoid conflict with test
li x6, 0x9a795181cc296780 # load random value
la x5, scratch # base address
sd x6, 0(x5) # store in memory
li x6, 0xb55bac28d4e012ae # load another value into integer register
amominu.w x6, x6, (x5) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x7)
mv x4, x7 # switch signature pointer register to avoid conflict with test
li x7, 0x27e7253882036efc # load random value
la x1, scratch # base address
sd x7, 0(x1) # store in memory
li x7, 0x3577e5feff50541c # load another value into integer register
amominu.w x7, x7, (x1) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x8)
li x8, 0x9dfd04ac12ba865c # load random value
la x29, scratch # base address
sd x8, 0(x29) # store in memory
li x8, 0xd404bbb6b2a23db7 # load another value into integer register
amominu.w x8, x8, (x29) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x9)
li x9, 0x8fbbfb7fc0453f04 # load random value
la x2, scratch # base address
sd x9, 0(x2) # store in memory
li x9, 0x93f2e6d5cb88ec76 # load another value into integer register
amominu.w x9, x9, (x2) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x10)
li x10, 0x60bef32be2fa6206 # load random value
la x15, scratch # base address
sd x10, 0(x15) # store in memory
li x10, 0xc7fe020fa996e462 # load another value into integer register
amominu.w x10, x10, (x15) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x11)
li x11, 0xd4760441c34ab73a # load random value
la x19, scratch # base address
sd x11, 0(x19) # store in memory
li x11, 0x2cf97302fb27b559 # load another value into integer register
amominu.w x11, x11, (x19) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x12)
li x12, 0x806fe64ef6709243 # load random value
la x12, scratch # base address
sd x12, 0(x12) # store in memory
amominu.w x12, x12, (x12) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x13)
li x13, 0x9c6f5b7d2a77196f # load random value
la x29, scratch # base address
sd x13, 0(x29) # store in memory
li x13, 0x31d2fe85b41affef # load another value into integer register
amominu.w x13, x13, (x29) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x14)
li x14, 0x8dd3020555082b2c # load random value
la x19, scratch # base address
sd x14, 0(x19) # store in memory
li x14, 0xbc457ba46e1c4a3d # load another value into integer register
amominu.w x14, x14, (x19) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x15)
li x15, 0x0aa954d7b081e7e6 # load random value
la x22, scratch # base address
sd x15, 0(x22) # store in memory
li x15, 0x0f54cdb3082cf04d # load another value into integer register
amominu.w x15, x15, (x22) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x16)
li x16, 0xef69acd74f30d75b # load random value
la x8, scratch # base address
sd x16, 0(x8) # store in memory
li x16, 0x51738f86d3755b8b # load another value into integer register
amominu.w x16, x16, (x8) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x17)
li x17, 0xe049db1c5586c93e # load random value
la x12, scratch # base address
sd x17, 0(x12) # store in memory
li x17, 0xfbf961db0ff842b1 # load another value into integer register
amominu.w x17, x17, (x12) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x18)
li x18, 0x98e1b62168716d80 # load random value
la x24, scratch # base address
sd x18, 0(x24) # store in memory
li x18, 0x4b92adbea5ad97be # load another value into integer register
amominu.w x18, x18, (x24) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x19)
li x19, 0x0855492914dad9df # load random value
la x30, scratch # base address
sd x19, 0(x30) # store in memory
li x19, 0x2f36484749851a9b # load another value into integer register
amominu.w x19, x19, (x30) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x20)
li x20, 0x20db359bea9b79a6 # load random value
la x2, scratch # base address
sd x20, 0(x2) # store in memory
li x20, 0xa76c0704599dc32d # load another value into integer register
amominu.w x20, x20, (x2) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x21)
li x21, 0x098d468b92f5782c # load random value
la x19, scratch # base address
sd x21, 0(x19) # store in memory
li x21, 0x1d4a42c21a9c7d9a # load another value into integer register
amominu.w x21, x21, (x19) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x22)
li x22, 0x68cc0c7295a6e660 # load random value
la x10, scratch # base address
sd x22, 0(x10) # store in memory
li x22, 0xfb5011ce6f6e6bc4 # load another value into integer register
amominu.w x22, x22, (x10) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x23)
li x23, 0x844c1c69f4b772a2 # load random value
la x29, scratch # base address
sd x23, 0(x29) # store in memory
li x23, 0xfa6bb5bc1c0b7932 # load another value into integer register
amominu.w x23, x23, (x29) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x24)
li x24, 0x11655ff3b37161f9 # load random value
la x12, scratch # base address
sd x24, 0(x12) # store in memory
li x24, 0x01ad05961d770f3d # load another value into integer register
amominu.w x24, x24, (x12) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x25)
li x25, 0xe6d7775f95f13f98 # load random value
la x28, scratch # base address
sd x25, 0(x28) # store in memory
li x25, 0x3c5c59031de32afe # load another value into integer register
amominu.w x25, x25, (x28) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x26)
li x26, 0x9c1d7080a7cec867 # load random value
la x12, scratch # base address
sd x26, 0(x12) # store in memory
li x26, 0x96f9acfae665759a # load another value into integer register
amominu.w x26, x26, (x12) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x27)
li x27, 0x38b657bcf94e5dfd # load random value
la x19, scratch # base address
sd x27, 0(x19) # store in memory
li x27, 0x6953220890f3cbc5 # load another value into integer register
amominu.w x27, x27, (x19) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x28)
li x28, 0x1cd467a297ea969a # load random value
la x20, scratch # base address
sd x28, 0(x20) # store in memory
li x28, 0x1d82d32f6c05e3d3 # load another value into integer register
amominu.w x28, x28, (x20) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x29)
li x29, 0x67550972d159b835 # load random value
la x8, scratch # base address
sd x29, 0(x8) # store in memory
li x29, 0x1af6bf7b4f1a6411 # load another value into integer register
amominu.w x29, x29, (x8) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x30)
li x30, 0x43a925be1dbc42c4 # load random value
la x14, scratch # base address
sd x30, 0(x14) # store in memory
li x30, 0x8efc870b6442d4c1 # load another value into integer register
amominu.w x30, x30, (x14) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x31)
li x31, 0x7bc04d60a5075ecd # load random value
la x7, scratch # base address
sd x31, 0(x7) # store in memory
li x31, 0x0c5ca68659682269 # load another value into integer register
amominu.w x31, x31, (x7) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x1)
li x1, 0x735fbae9e3fdfd51 # load random value
la x1, scratch # base address
sd x1, 0(x1) # store in memory
amominu.w x1, x1, (x1) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x2)
li x2, 0x71cdf0506793dddc # load random value
la x2, scratch # base address
sd x2, 0(x2) # store in memory
amominu.w x2, x2, (x2) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x3)
li x3, 0x621ea8fb5909ade2 # load random value
la x3, scratch # base address
sd x3, 0(x3) # store in memory
amominu.w x3, x3, (x3) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x4)
mv x5, x4 # switch signature pointer register to avoid conflict with test
li x4, 0x6d8f804e75639436 # load random value
la x4, scratch # base address
sd x4, 0(x4) # store in memory
amominu.w x4, x4, (x4) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x5)
mv x6, x5 # switch signature pointer register to avoid conflict with test
li x5, 0x502789f2d54d30ba # load random value
la x5, scratch # base address
sd x5, 0(x5) # store in memory
amominu.w x5, x5, (x5) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x6)
mv x7, x6 # switch signature pointer register to avoid conflict with test
li x6, 0x682ae1769a4aa4d6 # load random value
la x6, scratch # base address
sd x6, 0(x6) # store in memory
amominu.w x6, x6, (x6) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x7)
mv x4, x7 # switch signature pointer register to avoid conflict with test
li x7, 0x9374e81af33e9797 # load random value
la x7, scratch # base address
sd x7, 0(x7) # store in memory
amominu.w x7, x7, (x7) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x8)
li x8, 0x3097bfd219631ef8 # load random value
la x8, scratch # base address
sd x8, 0(x8) # store in memory
amominu.w x8, x8, (x8) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x9)
li x9, 0xdbfa65b233b9069a # load random value
la x9, scratch # base address
sd x9, 0(x9) # store in memory
amominu.w x9, x9, (x9) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x10)
li x10, 0x5386e8e627429449 # load random value
la x10, scratch # base address
sd x10, 0(x10) # store in memory
amominu.w x10, x10, (x10) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x11)
li x11, 0x2fdaed400f2b4d01 # load random value
la x11, scratch # base address
sd x11, 0(x11) # store in memory
amominu.w x11, x11, (x11) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x12)
li x12, 0xb44faa4aa8f9a112 # load random value
la x12, scratch # base address
sd x12, 0(x12) # store in memory
amominu.w x12, x12, (x12) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x13)
li x13, 0x5296050f5b0e0927 # load random value
la x13, scratch # base address
sd x13, 0(x13) # store in memory
amominu.w x13, x13, (x13) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x14)
li x14, 0xe3d9f20972acdd48 # load random value
la x14, scratch # base address
sd x14, 0(x14) # store in memory
amominu.w x14, x14, (x14) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x15)
li x15, 0x3d5d86fac610bf3e # load random value
la x15, scratch # base address
sd x15, 0(x15) # store in memory
amominu.w x15, x15, (x15) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x16)
li x16, 0x28fc6572f9535352 # load random value
la x16, scratch # base address
sd x16, 0(x16) # store in memory
amominu.w x16, x16, (x16) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x17)
li x17, 0x5b117037fb6a0a18 # load random value
la x17, scratch # base address
sd x17, 0(x17) # store in memory
amominu.w x17, x17, (x17) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x18)
li x18, 0x2fc760d3df86d2c8 # load random value
la x18, scratch # base address
sd x18, 0(x18) # store in memory
amominu.w x18, x18, (x18) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x19)
li x19, 0xc28eecf6e3539e4d # load random value
la x19, scratch # base address
sd x19, 0(x19) # store in memory
amominu.w x19, x19, (x19) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x20)
li x20, 0x21cd5919b27a9fa2 # load random value
la x20, scratch # base address
sd x20, 0(x20) # store in memory
amominu.w x20, x20, (x20) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x21)
li x21, 0xf280fe319486aeb5 # load random value
la x21, scratch # base address
sd x21, 0(x21) # store in memory
amominu.w x21, x21, (x21) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x22)
li x22, 0x5dffff0390ce35f5 # load random value
la x22, scratch # base address
sd x22, 0(x22) # store in memory
amominu.w x22, x22, (x22) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x23)
li x23, 0x30d2ae290a266989 # load random value
la x23, scratch # base address
sd x23, 0(x23) # store in memory
amominu.w x23, x23, (x23) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x24)
li x24, 0x2a78056f6752e649 # load random value
la x24, scratch # base address
sd x24, 0(x24) # store in memory
amominu.w x24, x24, (x24) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x25)
li x25, 0x644be7218d133dc3 # load random value
la x25, scratch # base address
sd x25, 0(x25) # store in memory
amominu.w x25, x25, (x25) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x26)
li x26, 0xde21a5fa62350e21 # load random value
la x26, scratch # base address
sd x26, 0(x26) # store in memory
amominu.w x26, x26, (x26) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x27)
li x27, 0x7ea05c04302539d8 # load random value
la x27, scratch # base address
sd x27, 0(x27) # store in memory
amominu.w x27, x27, (x27) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x28)
li x28, 0x56c1f28014837b3c # load random value
la x28, scratch # base address
sd x28, 0(x28) # store in memory
amominu.w x28, x28, (x28) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x29)
li x29, 0x15661e60e8d09af8 # load random value
la x29, scratch # base address
sd x29, 0(x29) # store in memory
amominu.w x29, x29, (x29) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x30)
li x30, 0x994689fa984f7bd8 # load random value
la x30, scratch # base address
sd x30, 0(x30) # store in memory
amominu.w x30, x30, (x30) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x31)
li x31, 0xa5e1efcb8f3823e8 # load random value
la x31, scratch # base address
sd x31, 0(x31) # store in memory
amominu.w x31, x31, (x31) # perform operation

# Testcase cp_gpr/fpr_hazard nohaz test
la x12, scratch
add x22, x18, x5 # perform first operation
amominu.w x3, x7, (x12) # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard nohaz test
la x1, scratch
add x7, x5, x14 # perform first operation
amominu.w x28, x11, (x1) # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard nohaz test
la x30, scratch
add x6, x20, x19 # perform first operation
amominu.w x15, x7, (x30) # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard raw test
la x20, scratch
add x13, x13, x0 # perform first operation
amominu.w x11, x13, (x20) # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard raw test
la x28, scratch
add x28, x28, x0 # perform first operation
amominu.w x24, x9, (x28) # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard raw test
la x7, scratch
add x27, x27, x0 # perform first operation
amominu.w x27, x20, (x7) # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard waw test
la x23, scratch
add x11, x8, x22 # perform first operation
amominu.w x11, x18, (x23) # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard waw test
la x10, scratch
add x5, x20, x3 # perform first operation
amominu.w x5, x19, (x10) # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard waw test
la x8, scratch
add x6, x31, x16 # perform first operation
amominu.w x6, x15, (x8) # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard war test
la x10, scratch
add x29, x19, x3 # perform first operation
amominu.w x19, x30, (x10) # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard war test
la x30, scratch
add x18, x22, x12 # perform first operation
amominu.w x12, x16, (x30) # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard war test
la x12, scratch
add x11, x22, x15 # perform first operation
amominu.w x9, x21, (x12) # perform second (triggering) operation

#.EQU SIGSIZE,0


// ******************
// Tests from: WALLY-COV-amoadd.w.S
// ******************


# initialize signature pointer
la x4, begin_signature

    
# Testcase cp_rs1 (Test source rs1 = x1)
li x9, 0x27c54e272733e6f2 # load random value
la x1, scratch # base address
sd x9, 0(x1) # store in memory
li x9, 0x65f0301030e986a1 # load another value into integer register
amoadd.w x2, x9, (x1) # perform operation

# Testcase cp_rs1 (Test source rs1 = x2)
li x22, 0x4913f6a5847f83ca # load random value
la x2, scratch # base address
sd x22, 0(x2) # store in memory
li x22, 0x1e2f5a55feb3638d # load another value into integer register
amoadd.w x5, x22, (x2) # perform operation

# Testcase cp_rs1 (Test source rs1 = x3)
li x24, 0xfc2fc58edfdfb133 # load random value
la x3, scratch # base address
sd x24, 0(x3) # store in memory
li x24, 0x24f929b23210f764 # load another value into integer register
amoadd.w x21, x24, (x3) # perform operation

# Testcase cp_rs1 (Test source rs1 = x4)
mv x5, x4 # switch signature pointer register to avoid conflict with test
li x14, 0x387fdae1a9347f21 # load random value
la x4, scratch # base address
sd x14, 0(x4) # store in memory
li x14, 0x17b532621f98bdeb # load another value into integer register
amoadd.w x23, x14, (x4) # perform operation

# Testcase cp_rs1 (Test source rs1 = x5)
mv x6, x5 # switch signature pointer register to avoid conflict with test
li x28, 0x8d7ab03ce2c30576 # load random value
la x5, scratch # base address
sd x28, 0(x5) # store in memory
li x28, 0x65422f49a838449e # load another value into integer register
amoadd.w x9, x28, (x5) # perform operation

# Testcase cp_rs1 (Test source rs1 = x6)
mv x7, x6 # switch signature pointer register to avoid conflict with test
li x13, 0x40af7d61509e6204 # load random value
la x6, scratch # base address
sd x13, 0(x6) # store in memory
li x13, 0x3e39fa75f23512a4 # load another value into integer register
amoadd.w x21, x13, (x6) # perform operation

# Testcase cp_rs1 (Test source rs1 = x7)
mv x4, x7 # switch signature pointer register to avoid conflict with test
li x23, 0x06dce95bb51ae8d0 # load random value
la x7, scratch # base address
sd x23, 0(x7) # store in memory
li x23, 0x788b4bd684e97293 # load another value into integer register
amoadd.w x27, x23, (x7) # perform operation

# Testcase cp_rs1 (Test source rs1 = x8)
li x13, 0x64d732fa90d06fab # load random value
la x8, scratch # base address
sd x13, 0(x8) # store in memory
li x13, 0xc61b7b6f3da710e5 # load another value into integer register
amoadd.w x21, x13, (x8) # perform operation

# Testcase cp_rs1 (Test source rs1 = x9)
li x1, 0x81e8e08786bff1a2 # load random value
la x9, scratch # base address
sd x1, 0(x9) # store in memory
li x1, 0x35aad9c58aca8c5a # load another value into integer register
amoadd.w x24, x1, (x9) # perform operation

# Testcase cp_rs1 (Test source rs1 = x10)
li x12, 0x6a0a5f84b94617ae # load random value
la x10, scratch # base address
sd x12, 0(x10) # store in memory
li x12, 0x9c752daf604791fb # load another value into integer register
amoadd.w x16, x12, (x10) # perform operation

# Testcase cp_rs1 (Test source rs1 = x11)
li x17, 0x256eb7e839fd68c4 # load random value
la x11, scratch # base address
sd x17, 0(x11) # store in memory
li x17, 0x731045c95806594e # load another value into integer register
amoadd.w x26, x17, (x11) # perform operation

# Testcase cp_rs1 (Test source rs1 = x12)
li x17, 0x8269540d2be5a71f # load random value
la x12, scratch # base address
sd x17, 0(x12) # store in memory
li x17, 0xca9c2214d05f523d # load another value into integer register
amoadd.w x27, x17, (x12) # perform operation

# Testcase cp_rs1 (Test source rs1 = x13)
li x12, 0xb34c8aa57ff5211f # load random value
la x13, scratch # base address
sd x12, 0(x13) # store in memory
li x12, 0xaa6ec4c720694df7 # load another value into integer register
amoadd.w x29, x12, (x13) # perform operation

# Testcase cp_rs1 (Test source rs1 = x14)
li x10, 0xe329049fb77ae7fd # load random value
la x14, scratch # base address
sd x10, 0(x14) # store in memory
li x10, 0x52e87bc5e8ffe79d # load another value into integer register
amoadd.w x20, x10, (x14) # perform operation

# Testcase cp_rs1 (Test source rs1 = x15)
li x19, 0x902fc284655c360f # load random value
la x15, scratch # base address
sd x19, 0(x15) # store in memory
li x19, 0x18a7b1d98a9a8c54 # load another value into integer register
amoadd.w x16, x19, (x15) # perform operation

# Testcase cp_rs1 (Test source rs1 = x16)
li x15, 0x104cc35f5a5b9d51 # load random value
la x16, scratch # base address
sd x15, 0(x16) # store in memory
li x15, 0x712033ac3f82f954 # load another value into integer register
amoadd.w x27, x15, (x16) # perform operation

# Testcase cp_rs1 (Test source rs1 = x17)
li x21, 0x6d4e57ecab6bab2a # load random value
la x17, scratch # base address
sd x21, 0(x17) # store in memory
li x21, 0xdd71ebf261842df7 # load another value into integer register
amoadd.w x29, x21, (x17) # perform operation

# Testcase cp_rs1 (Test source rs1 = x18)
li x26, 0x5476582bcf8e22d4 # load random value
la x18, scratch # base address
sd x26, 0(x18) # store in memory
li x26, 0x8c9a118eb3c68ec4 # load another value into integer register
amoadd.w x20, x26, (x18) # perform operation

# Testcase cp_rs1 (Test source rs1 = x19)
li x9, 0x947a054c6f706d46 # load random value
la x19, scratch # base address
sd x9, 0(x19) # store in memory
li x9, 0xc57800c837cc8376 # load another value into integer register
amoadd.w x21, x9, (x19) # perform operation

# Testcase cp_rs1 (Test source rs1 = x20)
li x31, 0x9f527da863e6af00 # load random value
la x20, scratch # base address
sd x31, 0(x20) # store in memory
li x31, 0xd92c5c2e02cda117 # load another value into integer register
amoadd.w x26, x31, (x20) # perform operation

# Testcase cp_rs1 (Test source rs1 = x21)
li x17, 0x617fc72029932bca # load random value
la x21, scratch # base address
sd x17, 0(x21) # store in memory
li x17, 0x1f7c9158b200ab66 # load another value into integer register
amoadd.w x12, x17, (x21) # perform operation

# Testcase cp_rs1 (Test source rs1 = x22)
li x2, 0x62e8ba0f59fb2ad4 # load random value
la x22, scratch # base address
sd x2, 0(x22) # store in memory
li x2, 0x8d88c5a4da786030 # load another value into integer register
amoadd.w x1, x2, (x22) # perform operation

# Testcase cp_rs1 (Test source rs1 = x23)
li x11, 0x8b86b38f52e17c5e # load random value
la x23, scratch # base address
sd x11, 0(x23) # store in memory
li x11, 0xb47d4bb7efe5d747 # load another value into integer register
amoadd.w x30, x11, (x23) # perform operation

# Testcase cp_rs1 (Test source rs1 = x24)
li x12, 0x7ad32f85cccf9e18 # load random value
la x24, scratch # base address
sd x12, 0(x24) # store in memory
li x12, 0x27fe2a02650323e6 # load another value into integer register
amoadd.w x6, x12, (x24) # perform operation

# Testcase cp_rs1 (Test source rs1 = x25)
li x22, 0x23571d05a847beb0 # load random value
la x25, scratch # base address
sd x22, 0(x25) # store in memory
li x22, 0x18252e1902043e8d # load another value into integer register
amoadd.w x18, x22, (x25) # perform operation

# Testcase cp_rs1 (Test source rs1 = x26)
li x20, 0x91c6954790c2005c # load random value
la x26, scratch # base address
sd x20, 0(x26) # store in memory
li x20, 0x9c80b8c4bf9558a4 # load another value into integer register
amoadd.w x30, x20, (x26) # perform operation

# Testcase cp_rs1 (Test source rs1 = x27)
li x2, 0x8ca09cf9e411781a # load random value
la x27, scratch # base address
sd x2, 0(x27) # store in memory
li x2, 0xe41b2c4527288f81 # load another value into integer register
amoadd.w x17, x2, (x27) # perform operation

# Testcase cp_rs1 (Test source rs1 = x28)
li x1, 0x451c08aab3007f91 # load random value
la x28, scratch # base address
sd x1, 0(x28) # store in memory
li x1, 0x77d2c52f7b3f77dd # load another value into integer register
amoadd.w x27, x1, (x28) # perform operation

# Testcase cp_rs1 (Test source rs1 = x29)
li x7, 0xae05a45d01e28c6a # load random value
la x29, scratch # base address
sd x7, 0(x29) # store in memory
li x7, 0x8fe124a2c9874a47 # load another value into integer register
amoadd.w x5, x7, (x29) # perform operation

# Testcase cp_rs1 (Test source rs1 = x30)
li x24, 0x2cf85a7eda229e49 # load random value
la x30, scratch # base address
sd x24, 0(x30) # store in memory
li x24, 0x1dffbf8647408ca6 # load another value into integer register
amoadd.w x3, x24, (x30) # perform operation

# Testcase cp_rs1 (Test source rs1 = x31)
li x9, 0x371f3f259b6f56a8 # load random value
la x31, scratch # base address
sd x9, 0(x31) # store in memory
li x9, 0x3511caa6de80aedb # load another value into integer register
amoadd.w x14, x9, (x31) # perform operation

# Testcase cp_rs2 (Test source rs2 = x0)
li x0, 0x733a33ca984a8ae7 # load random value
la x3, scratch # base address
sd x0, 0(x3) # store in memory
li x0, 0x74978a86b210660f # load another value into integer register
amoadd.w x5, x0, (x3) # perform operation

# Testcase cp_rs2 (Test source rs2 = x1)
li x1, 0xa9e13c7932e05104 # load random value
la x30, scratch # base address
sd x1, 0(x30) # store in memory
li x1, 0xe1fab96b118284f1 # load another value into integer register
amoadd.w x5, x1, (x30) # perform operation

# Testcase cp_rs2 (Test source rs2 = x2)
li x2, 0x180cd70eebf2de4c # load random value
la x6, scratch # base address
sd x2, 0(x6) # store in memory
li x2, 0x44dcb6532878e67e # load another value into integer register
amoadd.w x10, x2, (x6) # perform operation

# Testcase cp_rs2 (Test source rs2 = x3)
li x3, 0x64052cfdbd9d5a8b # load random value
la x28, scratch # base address
sd x3, 0(x28) # store in memory
li x3, 0x76b07bd8e502d0c8 # load another value into integer register
amoadd.w x11, x3, (x28) # perform operation

# Testcase cp_rs2 (Test source rs2 = x4)
mv x5, x4 # switch signature pointer register to avoid conflict with test
li x4, 0xe341f26663c178d6 # load random value
la x1, scratch # base address
sd x4, 0(x1) # store in memory
li x4, 0xee30a278d97d46ca # load another value into integer register
amoadd.w x6, x4, (x1) # perform operation

# Testcase cp_rs2 (Test source rs2 = x5)
mv x6, x5 # switch signature pointer register to avoid conflict with test
li x5, 0x462339f0be588439 # load random value
la x20, scratch # base address
sd x5, 0(x20) # store in memory
li x5, 0xd8c342e3bcfe2969 # load another value into integer register
amoadd.w x14, x5, (x20) # perform operation

# Testcase cp_rs2 (Test source rs2 = x6)
mv x4, x6 # switch signature pointer register to avoid conflict with test
li x6, 0x5c3035dabdec684a # load random value
la x7, scratch # base address
sd x6, 0(x7) # store in memory
li x6, 0xd29da7901b30922a # load another value into integer register
amoadd.w x27, x6, (x7) # perform operation

# Testcase cp_rs2 (Test source rs2 = x7)
li x7, 0xa9ffccf9dec9a039 # load random value
la x10, scratch # base address
sd x7, 0(x10) # store in memory
li x7, 0xb7512cf4a8d3a0e9 # load another value into integer register
amoadd.w x16, x7, (x10) # perform operation

# Testcase cp_rs2 (Test source rs2 = x8)
li x8, 0x9f7b595cef203354 # load random value
la x30, scratch # base address
sd x8, 0(x30) # store in memory
li x8, 0xbc6f069202b9c4a6 # load another value into integer register
amoadd.w x21, x8, (x30) # perform operation

# Testcase cp_rs2 (Test source rs2 = x9)
li x9, 0x5ee72d838d010452 # load random value
la x24, scratch # base address
sd x9, 0(x24) # store in memory
li x9, 0x2a227556124425fc # load another value into integer register
amoadd.w x2, x9, (x24) # perform operation

# Testcase cp_rs2 (Test source rs2 = x10)
li x10, 0x045dccf429883e28 # load random value
la x30, scratch # base address
sd x10, 0(x30) # store in memory
li x10, 0x18a6e555a404c93e # load another value into integer register
amoadd.w x23, x10, (x30) # perform operation

# Testcase cp_rs2 (Test source rs2 = x11)
li x11, 0x8bec3aca03e5befd # load random value
la x7, scratch # base address
sd x11, 0(x7) # store in memory
li x11, 0x5e1f902981211933 # load another value into integer register
amoadd.w x18, x11, (x7) # perform operation

# Testcase cp_rs2 (Test source rs2 = x12)
li x12, 0xeec17e26521739a1 # load random value
la x2, scratch # base address
sd x12, 0(x2) # store in memory
li x12, 0xe62084bbbcc25b80 # load another value into integer register
amoadd.w x9, x12, (x2) # perform operation

# Testcase cp_rs2 (Test source rs2 = x13)
li x13, 0xa05edfa5a4e7c716 # load random value
la x21, scratch # base address
sd x13, 0(x21) # store in memory
li x13, 0x4c43030a44330732 # load another value into integer register
amoadd.w x28, x13, (x21) # perform operation

# Testcase cp_rs2 (Test source rs2 = x14)
li x14, 0x53d6eb88d0706614 # load random value
la x29, scratch # base address
sd x14, 0(x29) # store in memory
li x14, 0xbc1e7d81ad222b88 # load another value into integer register
amoadd.w x5, x14, (x29) # perform operation

# Testcase cp_rs2 (Test source rs2 = x15)
li x15, 0x0227c24114fcd3f4 # load random value
la x14, scratch # base address
sd x15, 0(x14) # store in memory
li x15, 0x3718da7d917997ef # load another value into integer register
amoadd.w x29, x15, (x14) # perform operation

# Testcase cp_rs2 (Test source rs2 = x16)
li x16, 0x54705be69359477c # load random value
la x1, scratch # base address
sd x16, 0(x1) # store in memory
li x16, 0x1d071ede523f9817 # load another value into integer register
amoadd.w x14, x16, (x1) # perform operation

# Testcase cp_rs2 (Test source rs2 = x17)
li x17, 0xe15342d5781a7c19 # load random value
la x14, scratch # base address
sd x17, 0(x14) # store in memory
li x17, 0x31d0a5c132b17530 # load another value into integer register
amoadd.w x9, x17, (x14) # perform operation

# Testcase cp_rs2 (Test source rs2 = x18)
li x18, 0x25336db7a4f09fa5 # load random value
la x24, scratch # base address
sd x18, 0(x24) # store in memory
li x18, 0x954fd661f5ac62c8 # load another value into integer register
amoadd.w x21, x18, (x24) # perform operation

# Testcase cp_rs2 (Test source rs2 = x19)
li x19, 0x2530746a546fa9c5 # load random value
la x13, scratch # base address
sd x19, 0(x13) # store in memory
li x19, 0x3701311d8371f602 # load another value into integer register
amoadd.w x25, x19, (x13) # perform operation

# Testcase cp_rs2 (Test source rs2 = x20)
li x20, 0x5fe3c922f9c3bd7d # load random value
la x1, scratch # base address
sd x20, 0(x1) # store in memory
li x20, 0x5d9f59e8647de5ef # load another value into integer register
amoadd.w x25, x20, (x1) # perform operation

# Testcase cp_rs2 (Test source rs2 = x21)
li x21, 0xa09da5fbe1b609c8 # load random value
la x10, scratch # base address
sd x21, 0(x10) # store in memory
li x21, 0x8d8b51a078c5997f # load another value into integer register
amoadd.w x25, x21, (x10) # perform operation

# Testcase cp_rs2 (Test source rs2 = x22)
li x22, 0x8ba518627229dc00 # load random value
la x21, scratch # base address
sd x22, 0(x21) # store in memory
li x22, 0x8c0b9960b50742c2 # load another value into integer register
amoadd.w x25, x22, (x21) # perform operation

# Testcase cp_rs2 (Test source rs2 = x23)
li x23, 0x71edf37ed62ea8e4 # load random value
la x31, scratch # base address
sd x23, 0(x31) # store in memory
li x23, 0xa63b3b523bbdaa5e # load another value into integer register
amoadd.w x6, x23, (x31) # perform operation

# Testcase cp_rs2 (Test source rs2 = x24)
li x24, 0x499cce352701f5de # load random value
la x1, scratch # base address
sd x24, 0(x1) # store in memory
li x24, 0xd250912990409455 # load another value into integer register
amoadd.w x6, x24, (x1) # perform operation

# Testcase cp_rs2 (Test source rs2 = x25)
li x25, 0x5dac6fefd06fecf9 # load random value
la x18, scratch # base address
sd x25, 0(x18) # store in memory
li x25, 0x37e030b2db8272f1 # load another value into integer register
amoadd.w x17, x25, (x18) # perform operation

# Testcase cp_rs2 (Test source rs2 = x26)
li x26, 0x4cd762e2dc8af2f8 # load random value
la x18, scratch # base address
sd x26, 0(x18) # store in memory
li x26, 0x563df600fe520cee # load another value into integer register
amoadd.w x30, x26, (x18) # perform operation

# Testcase cp_rs2 (Test source rs2 = x27)
li x27, 0x8ab0b43d0e4edc7d # load random value
la x17, scratch # base address
sd x27, 0(x17) # store in memory
li x27, 0x66dd536d3791b869 # load another value into integer register
amoadd.w x18, x27, (x17) # perform operation

# Testcase cp_rs2 (Test source rs2 = x28)
li x28, 0xd8889438645b971e # load random value
la x22, scratch # base address
sd x28, 0(x22) # store in memory
li x28, 0x8ce2e5a2e041ec63 # load another value into integer register
amoadd.w x21, x28, (x22) # perform operation

# Testcase cp_rs2 (Test source rs2 = x29)
li x29, 0xc0323e183d761de8 # load random value
la x18, scratch # base address
sd x29, 0(x18) # store in memory
li x29, 0x01c74e75d0dbbd97 # load another value into integer register
amoadd.w x6, x29, (x18) # perform operation

# Testcase cp_rs2 (Test source rs2 = x30)
li x30, 0x2383459e79fa354c # load random value
la x28, scratch # base address
sd x30, 0(x28) # store in memory
li x30, 0x503412cf58928277 # load another value into integer register
amoadd.w x17, x30, (x28) # perform operation

# Testcase cp_rs2 (Test source rs2 = x31)
li x31, 0x9791272918b304ab # load random value
la x15, scratch # base address
sd x31, 0(x15) # store in memory
li x31, 0xdb69d086df3f3f55 # load another value into integer register
amoadd.w x22, x31, (x15) # perform operation

# Testcase cp_rd (Test destination rd = x0)
li x17, 0x6eb1be6e76807570 # load random value
la x1, scratch # base address
sd x17, 0(x1) # store in memory
li x17, 0x40fff97c1fd9df9c # load another value into integer register
amoadd.w x0, x17, (x1) # perform operation

# Testcase cp_rd (Test destination rd = x1)
li x1, 0x787af770dade4f0b # load random value
la x25, scratch # base address
sd x1, 0(x25) # store in memory
li x1, 0x280ccf9cc2a1dac3 # load another value into integer register
amoadd.w x1, x1, (x25) # perform operation

# Testcase cp_rd (Test destination rd = x2)
li x15, 0xbcfa2ae96ca3bc76 # load random value
la x3, scratch # base address
sd x15, 0(x3) # store in memory
li x15, 0x84e6f53fc77e68e3 # load another value into integer register
amoadd.w x2, x15, (x3) # perform operation

# Testcase cp_rd (Test destination rd = x3)
li x21, 0x351309d6d466d606 # load random value
la x27, scratch # base address
sd x21, 0(x27) # store in memory
li x21, 0xfedab801f3352e6a # load another value into integer register
amoadd.w x3, x21, (x27) # perform operation

# Testcase cp_rd (Test destination rd = x4)
mv x5, x4 # switch signature pointer register to avoid conflict with test
li x27, 0xf95a1d522351975f # load random value
la x22, scratch # base address
sd x27, 0(x22) # store in memory
li x27, 0x3b95bc70f13b0e9b # load another value into integer register
amoadd.w x4, x27, (x22) # perform operation

# Testcase cp_rd (Test destination rd = x5)
mv x6, x5 # switch signature pointer register to avoid conflict with test
li x25, 0x536b0516f5fcf233 # load random value
la x21, scratch # base address
sd x25, 0(x21) # store in memory
li x25, 0x4b4ab09a568900b9 # load another value into integer register
amoadd.w x5, x25, (x21) # perform operation

# Testcase cp_rd (Test destination rd = x6)
mv x7, x6 # switch signature pointer register to avoid conflict with test
li x12, 0xef47cea4a08ab0a4 # load random value
la x11, scratch # base address
sd x12, 0(x11) # store in memory
li x12, 0x1b9b3e89be3ff60e # load another value into integer register
amoadd.w x6, x12, (x11) # perform operation

# Testcase cp_rd (Test destination rd = x7)
mv x4, x7 # switch signature pointer register to avoid conflict with test
li x22, 0x4b334650f923c381 # load random value
la x18, scratch # base address
sd x22, 0(x18) # store in memory
li x22, 0x780704e317e17874 # load another value into integer register
amoadd.w x7, x22, (x18) # perform operation

# Testcase cp_rd (Test destination rd = x8)
li x7, 0x08dd314ab743f087 # load random value
la x26, scratch # base address
sd x7, 0(x26) # store in memory
li x7, 0xae6fc17d499d11d7 # load another value into integer register
amoadd.w x8, x7, (x26) # perform operation

# Testcase cp_rd (Test destination rd = x9)
li x20, 0x5645903774f15ae2 # load random value
la x12, scratch # base address
sd x20, 0(x12) # store in memory
li x20, 0x615fcf1e28e208d0 # load another value into integer register
amoadd.w x9, x20, (x12) # perform operation

# Testcase cp_rd (Test destination rd = x10)
li x21, 0x775fcdc2f45147c5 # load random value
la x14, scratch # base address
sd x21, 0(x14) # store in memory
li x21, 0xed131c01fedbe909 # load another value into integer register
amoadd.w x10, x21, (x14) # perform operation

# Testcase cp_rd (Test destination rd = x11)
li x7, 0x78d7ab2cd6dd849a # load random value
la x12, scratch # base address
sd x7, 0(x12) # store in memory
li x7, 0xc817727356e97ba9 # load another value into integer register
amoadd.w x11, x7, (x12) # perform operation

# Testcase cp_rd (Test destination rd = x12)
li x21, 0x7e7ad816997fc460 # load random value
la x17, scratch # base address
sd x21, 0(x17) # store in memory
li x21, 0x2f3982eec81640fd # load another value into integer register
amoadd.w x12, x21, (x17) # perform operation

# Testcase cp_rd (Test destination rd = x13)
li x30, 0xbefbf8feb21852c5 # load random value
la x12, scratch # base address
sd x30, 0(x12) # store in memory
li x30, 0x69506d04e0dcf2d7 # load another value into integer register
amoadd.w x13, x30, (x12) # perform operation

# Testcase cp_rd (Test destination rd = x14)
li x23, 0x167de61480ad681c # load random value
la x13, scratch # base address
sd x23, 0(x13) # store in memory
li x23, 0xd82edcdc78ecc01b # load another value into integer register
amoadd.w x14, x23, (x13) # perform operation

# Testcase cp_rd (Test destination rd = x15)
li x3, 0x4ca2136fd9470e7d # load random value
la x7, scratch # base address
sd x3, 0(x7) # store in memory
li x3, 0x0b2cb4963e42b93b # load another value into integer register
amoadd.w x15, x3, (x7) # perform operation

# Testcase cp_rd (Test destination rd = x16)
li x21, 0xaab6be6ad9baf2af # load random value
la x15, scratch # base address
sd x21, 0(x15) # store in memory
li x21, 0xb5087976a8954c53 # load another value into integer register
amoadd.w x16, x21, (x15) # perform operation

# Testcase cp_rd (Test destination rd = x17)
li x20, 0x862d9f05d0324002 # load random value
la x21, scratch # base address
sd x20, 0(x21) # store in memory
li x20, 0xee22771b537f29c8 # load another value into integer register
amoadd.w x17, x20, (x21) # perform operation

# Testcase cp_rd (Test destination rd = x18)
li x2, 0x63927ef7785df1ed # load random value
la x10, scratch # base address
sd x2, 0(x10) # store in memory
li x2, 0xcdd77a592bf64fc9 # load another value into integer register
amoadd.w x18, x2, (x10) # perform operation

# Testcase cp_rd (Test destination rd = x19)
li x31, 0xc5aba8bde802879e # load random value
la x8, scratch # base address
sd x31, 0(x8) # store in memory
li x31, 0x5a8be7fe2f13e705 # load another value into integer register
amoadd.w x19, x31, (x8) # perform operation

# Testcase cp_rd (Test destination rd = x20)
li x7, 0x82f0df23231c3e79 # load random value
la x12, scratch # base address
sd x7, 0(x12) # store in memory
li x7, 0x8ccf093694c3ea80 # load another value into integer register
amoadd.w x20, x7, (x12) # perform operation

# Testcase cp_rd (Test destination rd = x21)
li x12, 0xb00b9bf6a7e06a96 # load random value
la x15, scratch # base address
sd x12, 0(x15) # store in memory
li x12, 0xcb4f4f4260aa502f # load another value into integer register
amoadd.w x21, x12, (x15) # perform operation

# Testcase cp_rd (Test destination rd = x22)
li x17, 0x16dbf4dfcd753ce5 # load random value
la x14, scratch # base address
sd x17, 0(x14) # store in memory
li x17, 0xab4773af51006da9 # load another value into integer register
amoadd.w x22, x17, (x14) # perform operation

# Testcase cp_rd (Test destination rd = x23)
li x15, 0x78068191f8ead415 # load random value
la x18, scratch # base address
sd x15, 0(x18) # store in memory
li x15, 0x15f66259dfea5a59 # load another value into integer register
amoadd.w x23, x15, (x18) # perform operation

# Testcase cp_rd (Test destination rd = x24)
li x26, 0xbfef5525f03793d5 # load random value
la x3, scratch # base address
sd x26, 0(x3) # store in memory
li x26, 0xb42d152611776a01 # load another value into integer register
amoadd.w x24, x26, (x3) # perform operation

# Testcase cp_rd (Test destination rd = x25)
li x7, 0xaee71becf093334b # load random value
la x9, scratch # base address
sd x7, 0(x9) # store in memory
li x7, 0xd0e89056161e05be # load another value into integer register
amoadd.w x25, x7, (x9) # perform operation

# Testcase cp_rd (Test destination rd = x26)
li x14, 0x6505a2c43f542f40 # load random value
la x9, scratch # base address
sd x14, 0(x9) # store in memory
li x14, 0x00ab5ea8d56c8edd # load another value into integer register
amoadd.w x26, x14, (x9) # perform operation

# Testcase cp_rd (Test destination rd = x27)
li x1, 0x205b083f72bea581 # load random value
la x28, scratch # base address
sd x1, 0(x28) # store in memory
li x1, 0x1ad81e0daec19dec # load another value into integer register
amoadd.w x27, x1, (x28) # perform operation

# Testcase cp_rd (Test destination rd = x28)
li x2, 0x20046694e6bc46d1 # load random value
la x29, scratch # base address
sd x2, 0(x29) # store in memory
li x2, 0x64233566361351eb # load another value into integer register
amoadd.w x28, x2, (x29) # perform operation

# Testcase cp_rd (Test destination rd = x29)
li x11, 0x490ce06d50d28e6e # load random value
la x27, scratch # base address
sd x11, 0(x27) # store in memory
li x11, 0xc50bad4f9e6b2428 # load another value into integer register
amoadd.w x29, x11, (x27) # perform operation

# Testcase cp_rd (Test destination rd = x30)
li x9, 0x4b9cc1ee7c9607cc # load random value
la x6, scratch # base address
sd x9, 0(x6) # store in memory
li x9, 0xcfdc5d264da89bc7 # load another value into integer register
amoadd.w x30, x9, (x6) # perform operation

# Testcase cp_rd (Test destination rd = x31)
li x25, 0x22ad14f729738729 # load random value
la x6, scratch # base address
sd x25, 0(x6) # store in memory
li x25, 0xe6614e73f2f42611 # load another value into integer register
amoadd.w x31, x25, (x6) # perform operation

# Testcase cp_rs2_corners (Test source rs2 value = 0x0)
li x27, 0x52e9feec34832f41 # load random value
la x2, scratch # base address
sd x27, 0(x2) # store in memory
li x27, 0x0000000000000000 # load another value into integer register
amoadd.w x25, x27, (x2) # perform operation

# Testcase cp_rs2_corners (Test source rs2 value = 0x1)
li x26, 0xd9d9c13a18fb4a35 # load random value
la x25, scratch # base address
sd x26, 0(x25) # store in memory
li x26, 0x0000000000000001 # load another value into integer register
amoadd.w x24, x26, (x25) # perform operation

# Testcase cp_rs2_corners (Test source rs2 value = 0x2)
li x29, 0x0c1cae8dee45847d # load random value
la x11, scratch # base address
sd x29, 0(x11) # store in memory
li x29, 0x0000000000000002 # load another value into integer register
amoadd.w x14, x29, (x11) # perform operation

# Testcase cp_rs2_corners (Test source rs2 value = 0x8000000000000000)
li x23, 0x8e286376d91ab127 # load random value
la x20, scratch # base address
sd x23, 0(x20) # store in memory
li x23, 0x8000000000000000 # load another value into integer register
amoadd.w x7, x23, (x20) # perform operation

# Testcase cp_rs2_corners (Test source rs2 value = 0x8000000000000001)
li x12, 0x41b0550554db632d # load random value
la x17, scratch # base address
sd x12, 0(x17) # store in memory
li x12, 0x8000000000000001 # load another value into integer register
amoadd.w x8, x12, (x17) # perform operation

# Testcase cp_rs2_corners (Test source rs2 value = 0x7fffffffffffffff)
li x30, 0x84c9ad7befd55268 # load random value
la x24, scratch # base address
sd x30, 0(x24) # store in memory
li x30, 0x7fffffffffffffff # load another value into integer register
amoadd.w x17, x30, (x24) # perform operation

# Testcase cp_rs2_corners (Test source rs2 value = 0x7ffffffffffffffe)
li x23, 0xdb9464f118d4a74b # load random value
la x10, scratch # base address
sd x23, 0(x10) # store in memory
li x23, 0x7ffffffffffffffe # load another value into integer register
amoadd.w x17, x23, (x10) # perform operation

# Testcase cp_rs2_corners (Test source rs2 value = 0xffffffffffffffff)
li x16, 0x598b40a3abc8cbd2 # load random value
la x5, scratch # base address
sd x16, 0(x5) # store in memory
li x16, 0xffffffffffffffff # load another value into integer register
amoadd.w x12, x16, (x5) # perform operation

# Testcase cp_rs2_corners (Test source rs2 value = 0xfffffffffffffffe)
li x21, 0x98a61787940671f7 # load random value
la x25, scratch # base address
sd x21, 0(x25) # store in memory
li x21, 0xfffffffffffffffe # load another value into integer register
amoadd.w x13, x21, (x25) # perform operation

# Testcase cp_rs2_corners (Test source rs2 value = 0x5bbc887763ae86f2)
li x15, 0x4ff9dc93d3b49069 # load random value
la x17, scratch # base address
sd x15, 0(x17) # store in memory
li x15, 0x5bbc887763ae86f2 # load another value into integer register
amoadd.w x18, x15, (x17) # perform operation

# Testcase cp_rs2_corners (Test source rs2 value = 0xaaaaaaaaaaaaaaaa)
li x31, 0xe23128385777a35a # load random value
la x20, scratch # base address
sd x31, 0(x20) # store in memory
li x31, 0xaaaaaaaaaaaaaaaa # load another value into integer register
amoadd.w x16, x31, (x20) # perform operation

# Testcase cp_rs2_corners (Test source rs2 value = 0x5555555555555555)
li x21, 0x67135f5da6f323a2 # load random value
la x29, scratch # base address
sd x21, 0(x29) # store in memory
li x21, 0x5555555555555555 # load another value into integer register
amoadd.w x1, x21, (x29) # perform operation

# Testcase cp_rs2_corners (Test source rs2 value = 0xffffffff)
li x24, 0xe7b7927e4643c24c # load random value
la x23, scratch # base address
sd x24, 0(x23) # store in memory
li x24, 0x00000000ffffffff # load another value into integer register
amoadd.w x26, x24, (x23) # perform operation

# Testcase cp_rs2_corners (Test source rs2 value = 0xfffffffe)
li x15, 0xb636b75db0b2b0f7 # load random value
la x25, scratch # base address
sd x15, 0(x25) # store in memory
li x15, 0x00000000fffffffe # load another value into integer register
amoadd.w x13, x15, (x25) # perform operation

# Testcase cp_rs2_corners (Test source rs2 value = 0x100000000)
li x20, 0x688b97538ddc0fd1 # load random value
la x23, scratch # base address
sd x20, 0(x23) # store in memory
li x20, 0x0000000100000000 # load another value into integer register
amoadd.w x21, x20, (x23) # perform operation

# Testcase cp_rs2_corners (Test source rs2 value = 0x100000001)
li x31, 0xfdd904ce12af44b0 # load random value
la x7, scratch # base address
sd x31, 0(x7) # store in memory
li x31, 0x0000000100000001 # load another value into integer register
amoadd.w x10, x31, (x7) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x1)
li x1, 0xd347681325d9e503 # load random value
la x1, scratch # base address
sd x1, 0(x1) # store in memory
amoadd.w x19, x1, (x1) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x2)
li x2, 0xd442680f1c0d0579 # load random value
la x2, scratch # base address
sd x2, 0(x2) # store in memory
amoadd.w x21, x2, (x2) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x3)
li x3, 0x7be2f54533193360 # load random value
la x3, scratch # base address
sd x3, 0(x3) # store in memory
amoadd.w x21, x3, (x3) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x4)
mv x5, x4 # switch signature pointer register to avoid conflict with test
li x4, 0x4be1de2ef94543c5 # load random value
la x4, scratch # base address
sd x4, 0(x4) # store in memory
amoadd.w x1, x4, (x4) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x5)
mv x6, x5 # switch signature pointer register to avoid conflict with test
li x5, 0x635340b02feb6c29 # load random value
la x5, scratch # base address
sd x5, 0(x5) # store in memory
amoadd.w x17, x5, (x5) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x6)
mv x7, x6 # switch signature pointer register to avoid conflict with test
li x6, 0x9d522d6783842484 # load random value
la x6, scratch # base address
sd x6, 0(x6) # store in memory
amoadd.w x4, x6, (x6) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x7)
mv x4, x7 # switch signature pointer register to avoid conflict with test
li x7, 0x958e0b8d94ec38b8 # load random value
la x7, scratch # base address
sd x7, 0(x7) # store in memory
amoadd.w x10, x7, (x7) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x8)
li x8, 0x51987bbea9deea34 # load random value
la x8, scratch # base address
sd x8, 0(x8) # store in memory
amoadd.w x14, x8, (x8) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x9)
li x9, 0x5e88584fb293ed5b # load random value
la x9, scratch # base address
sd x9, 0(x9) # store in memory
amoadd.w x7, x9, (x9) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x10)
li x10, 0xc73a8dfdffacb939 # load random value
la x10, scratch # base address
sd x10, 0(x10) # store in memory
amoadd.w x1, x10, (x10) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x11)
li x11, 0xf8347f562918b8ec # load random value
la x11, scratch # base address
sd x11, 0(x11) # store in memory
amoadd.w x7, x11, (x11) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x12)
li x12, 0x1ff35ec8e4162e9b # load random value
la x12, scratch # base address
sd x12, 0(x12) # store in memory
amoadd.w x18, x12, (x12) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x13)
li x13, 0x86b2bcf0d9d5429a # load random value
la x13, scratch # base address
sd x13, 0(x13) # store in memory
amoadd.w x18, x13, (x13) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x14)
li x14, 0x04a72fe00bf78184 # load random value
la x14, scratch # base address
sd x14, 0(x14) # store in memory
amoadd.w x15, x14, (x14) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x15)
li x15, 0xa166a6bd5b18e046 # load random value
la x15, scratch # base address
sd x15, 0(x15) # store in memory
amoadd.w x2, x15, (x15) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x16)
li x16, 0xf77b0d4164b574e3 # load random value
la x16, scratch # base address
sd x16, 0(x16) # store in memory
amoadd.w x2, x16, (x16) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x17)
li x17, 0x9ac0da0e45a9c133 # load random value
la x17, scratch # base address
sd x17, 0(x17) # store in memory
amoadd.w x11, x17, (x17) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x18)
li x18, 0x11f03b1254355110 # load random value
la x18, scratch # base address
sd x18, 0(x18) # store in memory
amoadd.w x19, x18, (x18) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x19)
li x19, 0xefc70cb7c3490a04 # load random value
la x19, scratch # base address
sd x19, 0(x19) # store in memory
amoadd.w x15, x19, (x19) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x20)
li x20, 0xe74a46c4fb0607bb # load random value
la x20, scratch # base address
sd x20, 0(x20) # store in memory
amoadd.w x15, x20, (x20) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x21)
li x21, 0xa7f8b7c4c2afceee # load random value
la x21, scratch # base address
sd x21, 0(x21) # store in memory
amoadd.w x28, x21, (x21) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x22)
li x22, 0x17fb62052d79b1d1 # load random value
la x22, scratch # base address
sd x22, 0(x22) # store in memory
amoadd.w x17, x22, (x22) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x23)
li x23, 0x3f238c19a64b51ad # load random value
la x23, scratch # base address
sd x23, 0(x23) # store in memory
amoadd.w x11, x23, (x23) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x24)
li x24, 0x71478e5608590773 # load random value
la x24, scratch # base address
sd x24, 0(x24) # store in memory
amoadd.w x29, x24, (x24) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x25)
li x25, 0x77c1084c411ed926 # load random value
la x25, scratch # base address
sd x25, 0(x25) # store in memory
amoadd.w x12, x25, (x25) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x26)
li x26, 0x0d1b5e384936122d # load random value
la x26, scratch # base address
sd x26, 0(x26) # store in memory
amoadd.w x12, x26, (x26) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x27)
li x27, 0xdac7e504190a2b21 # load random value
la x27, scratch # base address
sd x27, 0(x27) # store in memory
amoadd.w x12, x27, (x27) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x28)
li x28, 0x16475cca15d92d75 # load random value
la x28, scratch # base address
sd x28, 0(x28) # store in memory
amoadd.w x26, x28, (x28) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x29)
li x29, 0x8ec6e9f0f2f3bf1c # load random value
la x29, scratch # base address
sd x29, 0(x29) # store in memory
amoadd.w x28, x29, (x29) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x30)
li x30, 0x683c3fd3c6cc009c # load random value
la x30, scratch # base address
sd x30, 0(x30) # store in memory
amoadd.w x24, x30, (x30) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x31)
li x31, 0x5f736e9dfd9fe0eb # load random value
la x31, scratch # base address
sd x31, 0(x31) # store in memory
amoadd.w x26, x31, (x31) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x1)
li x6, 0x01b388872ef906d7 # load random value
la x1, scratch # base address
sd x6, 0(x1) # store in memory
li x6, 0x47d7bd5756136e60 # load another value into integer register
amoadd.w x1, x6, (x1) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x2)
li x28, 0x12215e37a17f3ecf # load random value
la x2, scratch # base address
sd x28, 0(x2) # store in memory
li x28, 0x27c32d8df7b88d61 # load another value into integer register
amoadd.w x2, x28, (x2) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x3)
li x29, 0x6da8542b47c6b4e5 # load random value
la x3, scratch # base address
sd x29, 0(x3) # store in memory
li x29, 0x67ab0b04c79583f4 # load another value into integer register
amoadd.w x3, x29, (x3) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x4)
mv x5, x4 # switch signature pointer register to avoid conflict with test
li x6, 0xbc5f022b4867c28e # load random value
la x4, scratch # base address
sd x6, 0(x4) # store in memory
li x6, 0xd2c4780d79aaf044 # load another value into integer register
amoadd.w x4, x6, (x4) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x5)
mv x6, x5 # switch signature pointer register to avoid conflict with test
li x25, 0x8c2d1ef5674d2cb0 # load random value
la x5, scratch # base address
sd x25, 0(x5) # store in memory
li x25, 0x42ebbb39b85edbf2 # load another value into integer register
amoadd.w x5, x25, (x5) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x6)
mv x7, x6 # switch signature pointer register to avoid conflict with test
li x8, 0xffb8a9fb25b116b4 # load random value
la x6, scratch # base address
sd x8, 0(x6) # store in memory
li x8, 0x25117b183ca94a37 # load another value into integer register
amoadd.w x6, x8, (x6) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x7)
mv x4, x7 # switch signature pointer register to avoid conflict with test
li x17, 0x0bbafb36b284b0df # load random value
la x7, scratch # base address
sd x17, 0(x7) # store in memory
li x17, 0xc1c9bde8b8e275e9 # load another value into integer register
amoadd.w x7, x17, (x7) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x8)
li x26, 0x0e76d0c214075623 # load random value
la x8, scratch # base address
sd x26, 0(x8) # store in memory
li x26, 0x3e41f4055a566e1c # load another value into integer register
amoadd.w x8, x26, (x8) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x9)
li x24, 0x31bdca9539686d95 # load random value
la x9, scratch # base address
sd x24, 0(x9) # store in memory
li x24, 0x848619d85ba63535 # load another value into integer register
amoadd.w x9, x24, (x9) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x10)
li x3, 0x29b7b252eaf47d19 # load random value
la x10, scratch # base address
sd x3, 0(x10) # store in memory
li x3, 0xc543423c7ea646a9 # load another value into integer register
amoadd.w x10, x3, (x10) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x11)
li x26, 0x1b6ff5ee6f822397 # load random value
la x11, scratch # base address
sd x26, 0(x11) # store in memory
li x26, 0x091788848067d0e8 # load another value into integer register
amoadd.w x11, x26, (x11) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x12)
li x29, 0xbdb485e1184aec31 # load random value
la x12, scratch # base address
sd x29, 0(x12) # store in memory
li x29, 0x98f8d84149151680 # load another value into integer register
amoadd.w x12, x29, (x12) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x13)
li x26, 0x131bc1950159cb93 # load random value
la x13, scratch # base address
sd x26, 0(x13) # store in memory
li x26, 0x85d3587dfc87776b # load another value into integer register
amoadd.w x13, x26, (x13) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x14)
li x22, 0x51b0a0c64a839db9 # load random value
la x14, scratch # base address
sd x22, 0(x14) # store in memory
li x22, 0x3e6b2fdda70bc226 # load another value into integer register
amoadd.w x14, x22, (x14) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x15)
li x26, 0xab76abfb5721c008 # load random value
la x15, scratch # base address
sd x26, 0(x15) # store in memory
li x26, 0xfd88b778105b4a39 # load another value into integer register
amoadd.w x15, x26, (x15) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x16)
li x22, 0x2ff73913d9e4f5d3 # load random value
la x16, scratch # base address
sd x22, 0(x16) # store in memory
li x22, 0xf3dcfbaf74a9ebe4 # load another value into integer register
amoadd.w x16, x22, (x16) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x17)
li x5, 0x2923d1d1628e47d0 # load random value
la x17, scratch # base address
sd x5, 0(x17) # store in memory
li x5, 0x038afca2bf484b85 # load another value into integer register
amoadd.w x17, x5, (x17) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x18)
li x24, 0xde40d5501b682ed3 # load random value
la x18, scratch # base address
sd x24, 0(x18) # store in memory
li x24, 0x1f404cf40e64f763 # load another value into integer register
amoadd.w x18, x24, (x18) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x19)
li x16, 0x458e9b0e1244c34d # load random value
la x19, scratch # base address
sd x16, 0(x19) # store in memory
li x16, 0x1572e92e40c57d7d # load another value into integer register
amoadd.w x19, x16, (x19) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x20)
li x8, 0x1639686cb9f63399 # load random value
la x20, scratch # base address
sd x8, 0(x20) # store in memory
li x8, 0xacf42082d036c96b # load another value into integer register
amoadd.w x20, x8, (x20) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x21)
li x16, 0xa053db92437ccc0e # load random value
la x21, scratch # base address
sd x16, 0(x21) # store in memory
li x16, 0x1bd7e5f27190d51d # load another value into integer register
amoadd.w x21, x16, (x21) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x22)
li x5, 0xe49451df0913daed # load random value
la x22, scratch # base address
sd x5, 0(x22) # store in memory
li x5, 0xb07e9c041e56ea2b # load another value into integer register
amoadd.w x22, x5, (x22) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x23)
li x3, 0x28d8c4608a9aaa96 # load random value
la x23, scratch # base address
sd x3, 0(x23) # store in memory
li x3, 0x2a88851c44c01608 # load another value into integer register
amoadd.w x23, x3, (x23) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x24)
li x19, 0xd512409d02ae5c24 # load random value
la x24, scratch # base address
sd x19, 0(x24) # store in memory
li x19, 0x39a001688d528e45 # load another value into integer register
amoadd.w x24, x19, (x24) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x25)
li x13, 0x7c77bef7b86f2a87 # load random value
la x25, scratch # base address
sd x13, 0(x25) # store in memory
li x13, 0x9616920f26d10fbc # load another value into integer register
amoadd.w x25, x13, (x25) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x26)
li x14, 0x19731495e774825e # load random value
la x26, scratch # base address
sd x14, 0(x26) # store in memory
li x14, 0xe46f06699865470f # load another value into integer register
amoadd.w x26, x14, (x26) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x27)
li x26, 0xbbea842dacbfc002 # load random value
la x27, scratch # base address
sd x26, 0(x27) # store in memory
li x26, 0x56d4633575d3fffa # load another value into integer register
amoadd.w x27, x26, (x27) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x28)
li x11, 0xd944bdaa4feb94de # load random value
la x28, scratch # base address
sd x11, 0(x28) # store in memory
li x11, 0x68a6176e951fb3b5 # load another value into integer register
amoadd.w x28, x11, (x28) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x29)
li x22, 0x6e6b260273db98e6 # load random value
la x29, scratch # base address
sd x22, 0(x29) # store in memory
li x22, 0x0d17c87b72032746 # load another value into integer register
amoadd.w x29, x22, (x29) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x30)
li x23, 0xa86bac2d3d63da11 # load random value
la x30, scratch # base address
sd x23, 0(x30) # store in memory
li x23, 0xe3f644a936b45432 # load another value into integer register
amoadd.w x30, x23, (x30) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x31)
li x1, 0xa2881f114d2d957d # load random value
la x31, scratch # base address
sd x1, 0(x31) # store in memory
li x1, 0x4dde3c3a9e14a381 # load another value into integer register
amoadd.w x31, x1, (x31) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x0)
li x0, 0xd34e83f0c1d02dd3 # load random value
la x13, scratch # base address
sd x0, 0(x13) # store in memory
li x0, 0xd0000b37046528ff # load another value into integer register
amoadd.w x0, x0, (x13) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x1)
li x1, 0x8b441c648ec51676 # load random value
la x13, scratch # base address
sd x1, 0(x13) # store in memory
li x1, 0x37e8ff7f18bf03ac # load another value into integer register
amoadd.w x1, x1, (x13) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x2)
li x2, 0xbcd5b9c83668e6e2 # load random value
la x5, scratch # base address
sd x2, 0(x5) # store in memory
li x2, 0x579e4acf3c2fafe4 # load another value into integer register
amoadd.w x2, x2, (x5) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x3)
li x3, 0x9c5cfce5a8af049a # load random value
la x22, scratch # base address
sd x3, 0(x22) # store in memory
li x3, 0x1b8adc6e8cd15277 # load another value into integer register
amoadd.w x3, x3, (x22) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x4)
mv x5, x4 # switch signature pointer register to avoid conflict with test
li x4, 0x36f8939513085fb8 # load random value
la x6, scratch # base address
sd x4, 0(x6) # store in memory
li x4, 0x21066d1a246dacc0 # load another value into integer register
amoadd.w x4, x4, (x6) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x5)
mv x7, x5 # switch signature pointer register to avoid conflict with test
li x5, 0xb380cbeaffe303d1 # load random value
la x6, scratch # base address
sd x5, 0(x6) # store in memory
li x5, 0x3dbb2c8c47732981 # load another value into integer register
amoadd.w x5, x5, (x6) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x6)
li x6, 0x84b5625ec24dfa1c # load random value
la x9, scratch # base address
sd x6, 0(x9) # store in memory
li x6, 0xb796df0cce1fadce # load another value into integer register
amoadd.w x6, x6, (x9) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x7)
mv x4, x7 # switch signature pointer register to avoid conflict with test
li x7, 0xc1e1a363d119d485 # load random value
la x9, scratch # base address
sd x7, 0(x9) # store in memory
li x7, 0xc4c42770b1cc3b71 # load another value into integer register
amoadd.w x7, x7, (x9) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x8)
li x8, 0xa67835f59bc20673 # load random value
la x14, scratch # base address
sd x8, 0(x14) # store in memory
li x8, 0x03334b1e4416cec7 # load another value into integer register
amoadd.w x8, x8, (x14) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x9)
li x9, 0x5a5401c537cf866b # load random value
la x6, scratch # base address
sd x9, 0(x6) # store in memory
li x9, 0xc7d7de2ded13a76c # load another value into integer register
amoadd.w x9, x9, (x6) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x10)
li x10, 0xc60f72d5d3bc1a00 # load random value
la x17, scratch # base address
sd x10, 0(x17) # store in memory
li x10, 0x037baada5d424163 # load another value into integer register
amoadd.w x10, x10, (x17) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x11)
li x11, 0xec22980c2c4974ed # load random value
la x1, scratch # base address
sd x11, 0(x1) # store in memory
li x11, 0x38fd1e4655c592ea # load another value into integer register
amoadd.w x11, x11, (x1) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x12)
li x12, 0x661850fbfa7451c1 # load random value
la x15, scratch # base address
sd x12, 0(x15) # store in memory
li x12, 0xec8619c48a5c4cee # load another value into integer register
amoadd.w x12, x12, (x15) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x13)
li x13, 0x5d2eca9fdbbabd51 # load random value
la x10, scratch # base address
sd x13, 0(x10) # store in memory
li x13, 0xeff5dd6110036905 # load another value into integer register
amoadd.w x13, x13, (x10) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x14)
li x14, 0x5f59451cf769992b # load random value
la x2, scratch # base address
sd x14, 0(x2) # store in memory
li x14, 0xeeeb218ed2611bf8 # load another value into integer register
amoadd.w x14, x14, (x2) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x15)
li x15, 0x7849482aeeaaeff4 # load random value
la x19, scratch # base address
sd x15, 0(x19) # store in memory
li x15, 0x6375d2cd00ef84eb # load another value into integer register
amoadd.w x15, x15, (x19) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x16)
li x16, 0x3fd5d1036390562f # load random value
la x24, scratch # base address
sd x16, 0(x24) # store in memory
li x16, 0x464178326fc3fecb # load another value into integer register
amoadd.w x16, x16, (x24) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x17)
li x17, 0x11ba5c0f7d4db005 # load random value
la x9, scratch # base address
sd x17, 0(x9) # store in memory
li x17, 0xc879f3c04a42dad7 # load another value into integer register
amoadd.w x17, x17, (x9) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x18)
li x18, 0x9f5f55190ecb594c # load random value
la x9, scratch # base address
sd x18, 0(x9) # store in memory
li x18, 0x24270f6104866e9f # load another value into integer register
amoadd.w x18, x18, (x9) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x19)
li x19, 0x8bd75f0545e40f39 # load random value
la x26, scratch # base address
sd x19, 0(x26) # store in memory
li x19, 0x78f56bef1bb64291 # load another value into integer register
amoadd.w x19, x19, (x26) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x20)
li x20, 0x496d1183c00678c6 # load random value
la x8, scratch # base address
sd x20, 0(x8) # store in memory
li x20, 0x7dc5976adf538f18 # load another value into integer register
amoadd.w x20, x20, (x8) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x21)
li x21, 0xb7b589279261daa3 # load random value
la x16, scratch # base address
sd x21, 0(x16) # store in memory
li x21, 0x95caf4344e43ee8a # load another value into integer register
amoadd.w x21, x21, (x16) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x22)
li x22, 0x07fffd8c82e5767f # load random value
la x5, scratch # base address
sd x22, 0(x5) # store in memory
li x22, 0x8bf033d7baa23a58 # load another value into integer register
amoadd.w x22, x22, (x5) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x23)
li x23, 0x5bd7b26d127465a0 # load random value
la x3, scratch # base address
sd x23, 0(x3) # store in memory
li x23, 0xd20631e3a005114e # load another value into integer register
amoadd.w x23, x23, (x3) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x24)
li x24, 0x55e41e71bd128a73 # load random value
la x27, scratch # base address
sd x24, 0(x27) # store in memory
li x24, 0x73dc11ccd85b0436 # load another value into integer register
amoadd.w x24, x24, (x27) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x25)
li x25, 0x98ceccb758771dfe # load random value
la x16, scratch # base address
sd x25, 0(x16) # store in memory
li x25, 0x44dcde8e11bfb689 # load another value into integer register
amoadd.w x25, x25, (x16) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x26)
li x26, 0x8fefa4cc4e6068c9 # load random value
la x31, scratch # base address
sd x26, 0(x31) # store in memory
li x26, 0x692055f531e06393 # load another value into integer register
amoadd.w x26, x26, (x31) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x27)
li x27, 0xd54ad102edc3af41 # load random value
la x28, scratch # base address
sd x27, 0(x28) # store in memory
li x27, 0x3430ac28043767c3 # load another value into integer register
amoadd.w x27, x27, (x28) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x28)
li x28, 0x26514d703e4a8193 # load random value
la x16, scratch # base address
sd x28, 0(x16) # store in memory
li x28, 0x2c81a1f6d87d83ab # load another value into integer register
amoadd.w x28, x28, (x16) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x29)
li x29, 0xad6194364acf8d19 # load random value
la x7, scratch # base address
sd x29, 0(x7) # store in memory
li x29, 0xf722e5a1e525bfce # load another value into integer register
amoadd.w x29, x29, (x7) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x30)
li x30, 0xd320cf922329011f # load random value
la x24, scratch # base address
sd x30, 0(x24) # store in memory
li x30, 0x1b3e4e873dbeac09 # load another value into integer register
amoadd.w x30, x30, (x24) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x31)
li x31, 0x10005f490f946d20 # load random value
la x14, scratch # base address
sd x31, 0(x14) # store in memory
li x31, 0x0b501dbfba5f5b4f # load another value into integer register
amoadd.w x31, x31, (x14) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x1)
li x1, 0xda3a33b6c82edb14 # load random value
la x1, scratch # base address
sd x1, 0(x1) # store in memory
amoadd.w x1, x1, (x1) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x2)
li x2, 0x8ca7bcb926d0baf8 # load random value
la x2, scratch # base address
sd x2, 0(x2) # store in memory
amoadd.w x2, x2, (x2) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x3)
li x3, 0xa3bf9929eb3900a8 # load random value
la x3, scratch # base address
sd x3, 0(x3) # store in memory
amoadd.w x3, x3, (x3) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x4)
mv x5, x4 # switch signature pointer register to avoid conflict with test
li x4, 0xb86b2d163b352897 # load random value
la x4, scratch # base address
sd x4, 0(x4) # store in memory
amoadd.w x4, x4, (x4) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x5)
mv x6, x5 # switch signature pointer register to avoid conflict with test
li x5, 0x37a4d9600728156c # load random value
la x5, scratch # base address
sd x5, 0(x5) # store in memory
amoadd.w x5, x5, (x5) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x6)
mv x7, x6 # switch signature pointer register to avoid conflict with test
li x6, 0x4d42b5b4b0674bb5 # load random value
la x6, scratch # base address
sd x6, 0(x6) # store in memory
amoadd.w x6, x6, (x6) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x7)
mv x4, x7 # switch signature pointer register to avoid conflict with test
li x7, 0x6ca59245124e555f # load random value
la x7, scratch # base address
sd x7, 0(x7) # store in memory
amoadd.w x7, x7, (x7) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x8)
li x8, 0xe9abb26495a857eb # load random value
la x8, scratch # base address
sd x8, 0(x8) # store in memory
amoadd.w x8, x8, (x8) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x9)
li x9, 0x6c4df3c2a79f8985 # load random value
la x9, scratch # base address
sd x9, 0(x9) # store in memory
amoadd.w x9, x9, (x9) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x10)
li x10, 0x1680b4ebb3bbe495 # load random value
la x10, scratch # base address
sd x10, 0(x10) # store in memory
amoadd.w x10, x10, (x10) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x11)
li x11, 0x5c63925ffcdefc2d # load random value
la x11, scratch # base address
sd x11, 0(x11) # store in memory
amoadd.w x11, x11, (x11) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x12)
li x12, 0xf42d57c3fa37f37d # load random value
la x12, scratch # base address
sd x12, 0(x12) # store in memory
amoadd.w x12, x12, (x12) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x13)
li x13, 0x62b30de1698476ed # load random value
la x13, scratch # base address
sd x13, 0(x13) # store in memory
amoadd.w x13, x13, (x13) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x14)
li x14, 0xb874fac0e0278bf7 # load random value
la x14, scratch # base address
sd x14, 0(x14) # store in memory
amoadd.w x14, x14, (x14) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x15)
li x15, 0xb166e8af83062b0b # load random value
la x15, scratch # base address
sd x15, 0(x15) # store in memory
amoadd.w x15, x15, (x15) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x16)
li x16, 0x807c4deea52f59ac # load random value
la x16, scratch # base address
sd x16, 0(x16) # store in memory
amoadd.w x16, x16, (x16) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x17)
li x17, 0x5ee2b59ef965b5ed # load random value
la x17, scratch # base address
sd x17, 0(x17) # store in memory
amoadd.w x17, x17, (x17) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x18)
li x18, 0x7a647a6a2377d317 # load random value
la x18, scratch # base address
sd x18, 0(x18) # store in memory
amoadd.w x18, x18, (x18) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x19)
li x19, 0x94b87452aef65464 # load random value
la x19, scratch # base address
sd x19, 0(x19) # store in memory
amoadd.w x19, x19, (x19) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x20)
li x20, 0xfc5e13477d924e47 # load random value
la x20, scratch # base address
sd x20, 0(x20) # store in memory
amoadd.w x20, x20, (x20) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x21)
li x21, 0x7b1d3f784808dca6 # load random value
la x21, scratch # base address
sd x21, 0(x21) # store in memory
amoadd.w x21, x21, (x21) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x22)
li x22, 0xf0b65389a7674232 # load random value
la x22, scratch # base address
sd x22, 0(x22) # store in memory
amoadd.w x22, x22, (x22) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x23)
li x23, 0xc233764360280d3c # load random value
la x23, scratch # base address
sd x23, 0(x23) # store in memory
amoadd.w x23, x23, (x23) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x24)
li x24, 0xf09b13ae9fbef51e # load random value
la x24, scratch # base address
sd x24, 0(x24) # store in memory
amoadd.w x24, x24, (x24) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x25)
li x25, 0x988687a9d1b07412 # load random value
la x25, scratch # base address
sd x25, 0(x25) # store in memory
amoadd.w x25, x25, (x25) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x26)
li x26, 0x02439237e6285a55 # load random value
la x26, scratch # base address
sd x26, 0(x26) # store in memory
amoadd.w x26, x26, (x26) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x27)
li x27, 0xd9728152b7058616 # load random value
la x27, scratch # base address
sd x27, 0(x27) # store in memory
amoadd.w x27, x27, (x27) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x28)
li x28, 0x3beb84d34169bacc # load random value
la x28, scratch # base address
sd x28, 0(x28) # store in memory
amoadd.w x28, x28, (x28) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x29)
li x29, 0xb94e10ae132a29f7 # load random value
la x29, scratch # base address
sd x29, 0(x29) # store in memory
amoadd.w x29, x29, (x29) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x30)
li x30, 0x5455dccef8f94cf8 # load random value
la x30, scratch # base address
sd x30, 0(x30) # store in memory
amoadd.w x30, x30, (x30) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x31)
li x31, 0xc152f05cc88dc642 # load random value
la x31, scratch # base address
sd x31, 0(x31) # store in memory
amoadd.w x31, x31, (x31) # perform operation

# Testcase cp_gpr/fpr_hazard nohaz test
la x12, scratch
add x7, x6, x21 # perform first operation
amoadd.w x23, x10, (x12) # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard nohaz test
la x11, scratch
add x5, x23, x20 # perform first operation
amoadd.w x22, x3, (x11) # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard nohaz test
la x18, scratch
add x6, x23, x24 # perform first operation
amoadd.w x3, x8, (x18) # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard raw test
la x13, scratch
add x2, x2, x0 # perform first operation
amoadd.w x12, x2, (x13) # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard raw test
la x6, scratch
add x6, x6, x0 # perform first operation
amoadd.w x20, x29, (x6) # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard raw test
la x17, scratch
add x27, x27, x0 # perform first operation
amoadd.w x9, x2, (x17) # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard waw test
la x5, scratch
add x16, x2, x8 # perform first operation
amoadd.w x16, x6, (x5) # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard waw test
la x9, scratch
add x3, x15, x24 # perform first operation
amoadd.w x3, x16, (x9) # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard waw test
la x26, scratch
add x11, x17, x14 # perform first operation
amoadd.w x11, x31, (x26) # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard war test
la x22, scratch
add x15, x6, x10 # perform first operation
amoadd.w x6, x7, (x22) # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard war test
la x26, scratch
add x27, x5, x29 # perform first operation
amoadd.w x29, x13, (x26) # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard war test
la x31, scratch
add x19, x5, x21 # perform first operation
amoadd.w x9, x27, (x31) # perform second (triggering) operation

#.EQU SIGSIZE,0


// ******************
// Tests from: WALLY-COV-amomaxu.d.S
// ******************


# initialize signature pointer
la x4, begin_signature

    
# Testcase cp_rs1 (Test source rs1 = x1)
li x3, 0xea23a23ab0e0dec1 # load random value
la x1, scratch # base address
sd x3, 0(x1) # store in memory
li x3, 0x536ea41ad0311672 # load another value into integer register
amomaxu.d x13, x3, (x1) # perform operation

# Testcase cp_rs1 (Test source rs1 = x2)
li x12, 0xe857e65930b82634 # load random value
la x2, scratch # base address
sd x12, 0(x2) # store in memory
li x12, 0x0e979b7c40e7c806 # load another value into integer register
amomaxu.d x3, x12, (x2) # perform operation

# Testcase cp_rs1 (Test source rs1 = x3)
li x8, 0xff87fb7e4b3008bf # load random value
la x3, scratch # base address
sd x8, 0(x3) # store in memory
li x8, 0xf26cf0571e778441 # load another value into integer register
amomaxu.d x29, x8, (x3) # perform operation

# Testcase cp_rs1 (Test source rs1 = x4)
mv x5, x4 # switch signature pointer register to avoid conflict with test
li x26, 0x319caecbca5c836a # load random value
la x4, scratch # base address
sd x26, 0(x4) # store in memory
li x26, 0x02f0a253df375e7f # load another value into integer register
amomaxu.d x11, x26, (x4) # perform operation

# Testcase cp_rs1 (Test source rs1 = x5)
mv x6, x5 # switch signature pointer register to avoid conflict with test
li x9, 0xb27d0abe031b97c4 # load random value
la x5, scratch # base address
sd x9, 0(x5) # store in memory
li x9, 0xcbdcd6641dad6116 # load another value into integer register
amomaxu.d x7, x9, (x5) # perform operation

# Testcase cp_rs1 (Test source rs1 = x6)
mv x7, x6 # switch signature pointer register to avoid conflict with test
li x20, 0xafc1cfba061d740e # load random value
la x6, scratch # base address
sd x20, 0(x6) # store in memory
li x20, 0xfb5468be0d34d951 # load another value into integer register
amomaxu.d x16, x20, (x6) # perform operation

# Testcase cp_rs1 (Test source rs1 = x7)
mv x4, x7 # switch signature pointer register to avoid conflict with test
li x26, 0xc95eb40c42848447 # load random value
la x7, scratch # base address
sd x26, 0(x7) # store in memory
li x26, 0xf48d58b16f3ecd4c # load another value into integer register
amomaxu.d x29, x26, (x7) # perform operation

# Testcase cp_rs1 (Test source rs1 = x8)
li x11, 0xb6a4980cac6a2bd8 # load random value
la x8, scratch # base address
sd x11, 0(x8) # store in memory
li x11, 0xd56c24710215ebad # load another value into integer register
amomaxu.d x5, x11, (x8) # perform operation

# Testcase cp_rs1 (Test source rs1 = x9)
li x2, 0x292463321c96da21 # load random value
la x9, scratch # base address
sd x2, 0(x9) # store in memory
li x2, 0x542744178d0f7442 # load another value into integer register
amomaxu.d x13, x2, (x9) # perform operation

# Testcase cp_rs1 (Test source rs1 = x10)
li x13, 0xbff3b4ea7f78b2c3 # load random value
la x10, scratch # base address
sd x13, 0(x10) # store in memory
li x13, 0x2a8dcb996a7f7a17 # load another value into integer register
amomaxu.d x11, x13, (x10) # perform operation

# Testcase cp_rs1 (Test source rs1 = x11)
li x23, 0xb3944765c8de0836 # load random value
la x11, scratch # base address
sd x23, 0(x11) # store in memory
li x23, 0x12160305ba38b9a0 # load another value into integer register
amomaxu.d x12, x23, (x11) # perform operation

# Testcase cp_rs1 (Test source rs1 = x12)
li x30, 0xd9d937e8e6f5ff02 # load random value
la x12, scratch # base address
sd x30, 0(x12) # store in memory
li x30, 0x937c173e5d2bf542 # load another value into integer register
amomaxu.d x6, x30, (x12) # perform operation

# Testcase cp_rs1 (Test source rs1 = x13)
li x15, 0x0b7ae1d22c903052 # load random value
la x13, scratch # base address
sd x15, 0(x13) # store in memory
li x15, 0x7f66fd0067c9c937 # load another value into integer register
amomaxu.d x27, x15, (x13) # perform operation

# Testcase cp_rs1 (Test source rs1 = x14)
li x30, 0xcea1b5959a657270 # load random value
la x14, scratch # base address
sd x30, 0(x14) # store in memory
li x30, 0x40a744b2a3220896 # load another value into integer register
amomaxu.d x1, x30, (x14) # perform operation

# Testcase cp_rs1 (Test source rs1 = x15)
li x14, 0x88d48db50ccb9605 # load random value
la x15, scratch # base address
sd x14, 0(x15) # store in memory
li x14, 0x9f632e0057e9a259 # load another value into integer register
amomaxu.d x28, x14, (x15) # perform operation

# Testcase cp_rs1 (Test source rs1 = x16)
li x26, 0xb5c87ac60a15e6c4 # load random value
la x16, scratch # base address
sd x26, 0(x16) # store in memory
li x26, 0xbf2ab690681ad464 # load another value into integer register
amomaxu.d x6, x26, (x16) # perform operation

# Testcase cp_rs1 (Test source rs1 = x17)
li x3, 0xae6516f91aaa6c7c # load random value
la x17, scratch # base address
sd x3, 0(x17) # store in memory
li x3, 0x6c5770062b98afa8 # load another value into integer register
amomaxu.d x18, x3, (x17) # perform operation

# Testcase cp_rs1 (Test source rs1 = x18)
li x16, 0x628ee7c9f7610eb9 # load random value
la x18, scratch # base address
sd x16, 0(x18) # store in memory
li x16, 0x663325076a60a75d # load another value into integer register
amomaxu.d x29, x16, (x18) # perform operation

# Testcase cp_rs1 (Test source rs1 = x19)
li x8, 0xe6213aecb8da3aa7 # load random value
la x19, scratch # base address
sd x8, 0(x19) # store in memory
li x8, 0x29799a46d95d7d69 # load another value into integer register
amomaxu.d x12, x8, (x19) # perform operation

# Testcase cp_rs1 (Test source rs1 = x20)
li x23, 0x9f5efddd0497cad6 # load random value
la x20, scratch # base address
sd x23, 0(x20) # store in memory
li x23, 0x360138087f1f71c0 # load another value into integer register
amomaxu.d x15, x23, (x20) # perform operation

# Testcase cp_rs1 (Test source rs1 = x21)
li x25, 0x1d68ba530cce5eb9 # load random value
la x21, scratch # base address
sd x25, 0(x21) # store in memory
li x25, 0x562e66b64d5d1fa3 # load another value into integer register
amomaxu.d x26, x25, (x21) # perform operation

# Testcase cp_rs1 (Test source rs1 = x22)
li x11, 0x297e624e096e4199 # load random value
la x22, scratch # base address
sd x11, 0(x22) # store in memory
li x11, 0xc3081d567db2f165 # load another value into integer register
amomaxu.d x31, x11, (x22) # perform operation

# Testcase cp_rs1 (Test source rs1 = x23)
li x14, 0xf7dc30379e5747c8 # load random value
la x23, scratch # base address
sd x14, 0(x23) # store in memory
li x14, 0x9030562fd7870933 # load another value into integer register
amomaxu.d x8, x14, (x23) # perform operation

# Testcase cp_rs1 (Test source rs1 = x24)
li x18, 0xdb2e39cc48d589cd # load random value
la x24, scratch # base address
sd x18, 0(x24) # store in memory
li x18, 0x331bab45b76a8893 # load another value into integer register
amomaxu.d x22, x18, (x24) # perform operation

# Testcase cp_rs1 (Test source rs1 = x25)
li x29, 0x959458492fa01bf3 # load random value
la x25, scratch # base address
sd x29, 0(x25) # store in memory
li x29, 0x1182e51ee0f03567 # load another value into integer register
amomaxu.d x24, x29, (x25) # perform operation

# Testcase cp_rs1 (Test source rs1 = x26)
li x20, 0xc89fd85194e73824 # load random value
la x26, scratch # base address
sd x20, 0(x26) # store in memory
li x20, 0xe4481da0760624ef # load another value into integer register
amomaxu.d x1, x20, (x26) # perform operation

# Testcase cp_rs1 (Test source rs1 = x27)
li x6, 0x43a59fcabba6b827 # load random value
la x27, scratch # base address
sd x6, 0(x27) # store in memory
li x6, 0x4d7e501df099715b # load another value into integer register
amomaxu.d x1, x6, (x27) # perform operation

# Testcase cp_rs1 (Test source rs1 = x28)
li x7, 0xe9c04c42575abfad # load random value
la x28, scratch # base address
sd x7, 0(x28) # store in memory
li x7, 0xe60559a6e99d5511 # load another value into integer register
amomaxu.d x8, x7, (x28) # perform operation

# Testcase cp_rs1 (Test source rs1 = x29)
li x14, 0x02522ce58b114219 # load random value
la x29, scratch # base address
sd x14, 0(x29) # store in memory
li x14, 0xb4b5b5a067c266dc # load another value into integer register
amomaxu.d x24, x14, (x29) # perform operation

# Testcase cp_rs1 (Test source rs1 = x30)
li x27, 0xd93da40e85c2e0e8 # load random value
la x30, scratch # base address
sd x27, 0(x30) # store in memory
li x27, 0xb64cea97076a9aff # load another value into integer register
amomaxu.d x9, x27, (x30) # perform operation

# Testcase cp_rs1 (Test source rs1 = x31)
li x12, 0xccab5bb6e1dff158 # load random value
la x31, scratch # base address
sd x12, 0(x31) # store in memory
li x12, 0x0623a1fe3d12752c # load another value into integer register
amomaxu.d x7, x12, (x31) # perform operation

# Testcase cp_rs2 (Test source rs2 = x0)
li x0, 0xeede753ae68cf31d # load random value
la x25, scratch # base address
sd x0, 0(x25) # store in memory
li x0, 0x4fd9f2dac819bf64 # load another value into integer register
amomaxu.d x24, x0, (x25) # perform operation

# Testcase cp_rs2 (Test source rs2 = x1)
li x1, 0xee6966d8d204b442 # load random value
la x15, scratch # base address
sd x1, 0(x15) # store in memory
li x1, 0xa5a3bddc83c6d0ee # load another value into integer register
amomaxu.d x8, x1, (x15) # perform operation

# Testcase cp_rs2 (Test source rs2 = x2)
li x2, 0xfaf4406d102ffe05 # load random value
la x22, scratch # base address
sd x2, 0(x22) # store in memory
li x2, 0xd1ab987725be49ac # load another value into integer register
amomaxu.d x12, x2, (x22) # perform operation

# Testcase cp_rs2 (Test source rs2 = x3)
li x3, 0x0dda78b976b15782 # load random value
la x27, scratch # base address
sd x3, 0(x27) # store in memory
li x3, 0xabde6266232dce00 # load another value into integer register
amomaxu.d x20, x3, (x27) # perform operation

# Testcase cp_rs2 (Test source rs2 = x4)
mv x5, x4 # switch signature pointer register to avoid conflict with test
li x4, 0xa9de78389f050d98 # load random value
la x10, scratch # base address
sd x4, 0(x10) # store in memory
li x4, 0xbab3324689ca1649 # load another value into integer register
amomaxu.d x17, x4, (x10) # perform operation

# Testcase cp_rs2 (Test source rs2 = x5)
mv x6, x5 # switch signature pointer register to avoid conflict with test
li x5, 0x5ea6b4b3c4125d84 # load random value
la x25, scratch # base address
sd x5, 0(x25) # store in memory
li x5, 0x6046fa7f585a0325 # load another value into integer register
amomaxu.d x16, x5, (x25) # perform operation

# Testcase cp_rs2 (Test source rs2 = x6)
mv x7, x6 # switch signature pointer register to avoid conflict with test
li x6, 0xd217363eee498a7c # load random value
la x10, scratch # base address
sd x6, 0(x10) # store in memory
li x6, 0xe9fd0fd24d5bed7a # load another value into integer register
amomaxu.d x17, x6, (x10) # perform operation

# Testcase cp_rs2 (Test source rs2 = x7)
mv x4, x7 # switch signature pointer register to avoid conflict with test
li x7, 0xa062011be1cb0b3c # load random value
la x3, scratch # base address
sd x7, 0(x3) # store in memory
li x7, 0xafa9c784c5a47eb1 # load another value into integer register
amomaxu.d x22, x7, (x3) # perform operation

# Testcase cp_rs2 (Test source rs2 = x8)
li x8, 0x0532789eb19355ea # load random value
la x31, scratch # base address
sd x8, 0(x31) # store in memory
li x8, 0x7e56bd7abc7dad16 # load another value into integer register
amomaxu.d x19, x8, (x31) # perform operation

# Testcase cp_rs2 (Test source rs2 = x9)
li x9, 0x363305fac890e09a # load random value
la x29, scratch # base address
sd x9, 0(x29) # store in memory
li x9, 0xa9c4339e437435da # load another value into integer register
amomaxu.d x13, x9, (x29) # perform operation

# Testcase cp_rs2 (Test source rs2 = x10)
li x10, 0x1548a7f6c1a0285f # load random value
la x15, scratch # base address
sd x10, 0(x15) # store in memory
li x10, 0x4830406804b5837f # load another value into integer register
amomaxu.d x23, x10, (x15) # perform operation

# Testcase cp_rs2 (Test source rs2 = x11)
li x11, 0x421ad35ce4d22a82 # load random value
la x19, scratch # base address
sd x11, 0(x19) # store in memory
li x11, 0x1d6c380611cfaba9 # load another value into integer register
amomaxu.d x1, x11, (x19) # perform operation

# Testcase cp_rs2 (Test source rs2 = x12)
li x12, 0xbd97867c1b8fcd34 # load random value
la x29, scratch # base address
sd x12, 0(x29) # store in memory
li x12, 0x869db2b808d1cf8c # load another value into integer register
amomaxu.d x10, x12, (x29) # perform operation

# Testcase cp_rs2 (Test source rs2 = x13)
li x13, 0x636619b5588cbce8 # load random value
la x19, scratch # base address
sd x13, 0(x19) # store in memory
li x13, 0x183983ec2a253829 # load another value into integer register
amomaxu.d x10, x13, (x19) # perform operation

# Testcase cp_rs2 (Test source rs2 = x14)
li x14, 0x7c7ed7a2350c86cd # load random value
la x8, scratch # base address
sd x14, 0(x8) # store in memory
li x14, 0x401aa9520fc0cacf # load another value into integer register
amomaxu.d x27, x14, (x8) # perform operation

# Testcase cp_rs2 (Test source rs2 = x15)
li x15, 0x342d37b70fe1a6c5 # load random value
la x6, scratch # base address
sd x15, 0(x6) # store in memory
li x15, 0x7ade65c93c6f383b # load another value into integer register
amomaxu.d x30, x15, (x6) # perform operation

# Testcase cp_rs2 (Test source rs2 = x16)
li x16, 0x3f39c18a777554da # load random value
la x26, scratch # base address
sd x16, 0(x26) # store in memory
li x16, 0x5d10f75482a37556 # load another value into integer register
amomaxu.d x5, x16, (x26) # perform operation

# Testcase cp_rs2 (Test source rs2 = x17)
li x17, 0xf98c3f4c57abce07 # load random value
la x18, scratch # base address
sd x17, 0(x18) # store in memory
li x17, 0x75fbc0b1bbbb2b3a # load another value into integer register
amomaxu.d x2, x17, (x18) # perform operation

# Testcase cp_rs2 (Test source rs2 = x18)
li x18, 0xb0bfc88dd11bda14 # load random value
la x7, scratch # base address
sd x18, 0(x7) # store in memory
li x18, 0x55f8a6ac194f1ce4 # load another value into integer register
amomaxu.d x29, x18, (x7) # perform operation

# Testcase cp_rs2 (Test source rs2 = x19)
li x19, 0xbd12dd930a914e19 # load random value
la x20, scratch # base address
sd x19, 0(x20) # store in memory
li x19, 0x59820a90a061f275 # load another value into integer register
amomaxu.d x17, x19, (x20) # perform operation

# Testcase cp_rs2 (Test source rs2 = x20)
li x20, 0xc215ae871a055c0d # load random value
la x19, scratch # base address
sd x20, 0(x19) # store in memory
li x20, 0x4ee57b819880259b # load another value into integer register
amomaxu.d x28, x20, (x19) # perform operation

# Testcase cp_rs2 (Test source rs2 = x21)
li x21, 0x645064398663a1ad # load random value
la x20, scratch # base address
sd x21, 0(x20) # store in memory
li x21, 0xb8470459afe34f60 # load another value into integer register
amomaxu.d x5, x21, (x20) # perform operation

# Testcase cp_rs2 (Test source rs2 = x22)
li x22, 0xf8e4619a224cae1f # load random value
la x31, scratch # base address
sd x22, 0(x31) # store in memory
li x22, 0x59103c60ce4c1e69 # load another value into integer register
amomaxu.d x23, x22, (x31) # perform operation

# Testcase cp_rs2 (Test source rs2 = x23)
li x23, 0x2f590c99340c684f # load random value
la x31, scratch # base address
sd x23, 0(x31) # store in memory
li x23, 0xd40e69ac82939e45 # load another value into integer register
amomaxu.d x22, x23, (x31) # perform operation

# Testcase cp_rs2 (Test source rs2 = x24)
li x24, 0x2e7e4359f40f5b87 # load random value
la x10, scratch # base address
sd x24, 0(x10) # store in memory
li x24, 0x8c0ca854fa339a7f # load another value into integer register
amomaxu.d x6, x24, (x10) # perform operation

# Testcase cp_rs2 (Test source rs2 = x25)
li x25, 0xee1917ad9a74d282 # load random value
la x31, scratch # base address
sd x25, 0(x31) # store in memory
li x25, 0x96ff02fcb0b22ae8 # load another value into integer register
amomaxu.d x30, x25, (x31) # perform operation

# Testcase cp_rs2 (Test source rs2 = x26)
li x26, 0x342febd7f008a4e8 # load random value
la x2, scratch # base address
sd x26, 0(x2) # store in memory
li x26, 0xf532afc96b8fab25 # load another value into integer register
amomaxu.d x24, x26, (x2) # perform operation

# Testcase cp_rs2 (Test source rs2 = x27)
li x27, 0xf56c05bbba86b38d # load random value
la x10, scratch # base address
sd x27, 0(x10) # store in memory
li x27, 0xdc8c7ebc844109db # load another value into integer register
amomaxu.d x17, x27, (x10) # perform operation

# Testcase cp_rs2 (Test source rs2 = x28)
li x28, 0xef68f08edb6c06d5 # load random value
la x17, scratch # base address
sd x28, 0(x17) # store in memory
li x28, 0x6c34d73d227a7769 # load another value into integer register
amomaxu.d x12, x28, (x17) # perform operation

# Testcase cp_rs2 (Test source rs2 = x29)
li x29, 0xc7c9a1eac4d31089 # load random value
la x23, scratch # base address
sd x29, 0(x23) # store in memory
li x29, 0x52550fce4d3d45a1 # load another value into integer register
amomaxu.d x25, x29, (x23) # perform operation

# Testcase cp_rs2 (Test source rs2 = x30)
li x30, 0x2ca82c4d5669282b # load random value
la x8, scratch # base address
sd x30, 0(x8) # store in memory
li x30, 0xb4f95f5ff33d147d # load another value into integer register
amomaxu.d x24, x30, (x8) # perform operation

# Testcase cp_rs2 (Test source rs2 = x31)
li x31, 0xbb7516b9cd2e6aeb # load random value
la x21, scratch # base address
sd x31, 0(x21) # store in memory
li x31, 0x88d75f6643230aa0 # load another value into integer register
amomaxu.d x9, x31, (x21) # perform operation

# Testcase cp_rd (Test destination rd = x0)
li x21, 0x79fdc84e35d389bf # load random value
la x22, scratch # base address
sd x21, 0(x22) # store in memory
li x21, 0x832ca35fe0253de0 # load another value into integer register
amomaxu.d x0, x21, (x22) # perform operation

# Testcase cp_rd (Test destination rd = x1)
li x14, 0x2d273b696cbf7a4f # load random value
la x8, scratch # base address
sd x14, 0(x8) # store in memory
li x14, 0xd98d51d64b212f0a # load another value into integer register
amomaxu.d x1, x14, (x8) # perform operation

# Testcase cp_rd (Test destination rd = x2)
li x12, 0x4dfeeb06c73cd4b5 # load random value
la x24, scratch # base address
sd x12, 0(x24) # store in memory
li x12, 0xa269d68ea03aa671 # load another value into integer register
amomaxu.d x2, x12, (x24) # perform operation

# Testcase cp_rd (Test destination rd = x3)
li x3, 0xb3fcf2726787df9e # load random value
la x15, scratch # base address
sd x3, 0(x15) # store in memory
li x3, 0x5e887f3f14f17ab8 # load another value into integer register
amomaxu.d x3, x3, (x15) # perform operation

# Testcase cp_rd (Test destination rd = x4)
mv x5, x4 # switch signature pointer register to avoid conflict with test
li x7, 0x13e26e013f386789 # load random value
la x22, scratch # base address
sd x7, 0(x22) # store in memory
li x7, 0xf6b41a6d268d7f92 # load another value into integer register
amomaxu.d x4, x7, (x22) # perform operation

# Testcase cp_rd (Test destination rd = x5)
mv x6, x5 # switch signature pointer register to avoid conflict with test
li x30, 0x8c171e666407fb3e # load random value
la x2, scratch # base address
sd x30, 0(x2) # store in memory
li x30, 0xba3a3897acc557f7 # load another value into integer register
amomaxu.d x5, x30, (x2) # perform operation

# Testcase cp_rd (Test destination rd = x6)
mv x7, x6 # switch signature pointer register to avoid conflict with test
li x9, 0x93255141c0bb5ece # load random value
la x25, scratch # base address
sd x9, 0(x25) # store in memory
li x9, 0x44717a52863e3a77 # load another value into integer register
amomaxu.d x6, x9, (x25) # perform operation

# Testcase cp_rd (Test destination rd = x7)
mv x4, x7 # switch signature pointer register to avoid conflict with test
li x30, 0x7bf2d9a41505bf74 # load random value
la x20, scratch # base address
sd x30, 0(x20) # store in memory
li x30, 0x62ffc0f3ec15a5d9 # load another value into integer register
amomaxu.d x7, x30, (x20) # perform operation

# Testcase cp_rd (Test destination rd = x8)
li x23, 0xf43693b0a96cd557 # load random value
la x1, scratch # base address
sd x23, 0(x1) # store in memory
li x23, 0xc019a0569299e9fb # load another value into integer register
amomaxu.d x8, x23, (x1) # perform operation

# Testcase cp_rd (Test destination rd = x9)
li x22, 0xd539187dc1242cbc # load random value
la x18, scratch # base address
sd x22, 0(x18) # store in memory
li x22, 0x8007f28837265e60 # load another value into integer register
amomaxu.d x9, x22, (x18) # perform operation

# Testcase cp_rd (Test destination rd = x10)
li x15, 0x60a70e4d1095c0f2 # load random value
la x1, scratch # base address
sd x15, 0(x1) # store in memory
li x15, 0xc485a76349d537d9 # load another value into integer register
amomaxu.d x10, x15, (x1) # perform operation

# Testcase cp_rd (Test destination rd = x11)
li x7, 0x2d9786fa06d94801 # load random value
la x9, scratch # base address
sd x7, 0(x9) # store in memory
li x7, 0xbbb1197d4bd26169 # load another value into integer register
amomaxu.d x11, x7, (x9) # perform operation

# Testcase cp_rd (Test destination rd = x12)
li x8, 0x6adfb2a42a9a11c6 # load random value
la x9, scratch # base address
sd x8, 0(x9) # store in memory
li x8, 0xbf245bb0e223f2af # load another value into integer register
amomaxu.d x12, x8, (x9) # perform operation

# Testcase cp_rd (Test destination rd = x13)
li x27, 0xe7cc55061d693618 # load random value
la x29, scratch # base address
sd x27, 0(x29) # store in memory
li x27, 0x3b251efdc07c3633 # load another value into integer register
amomaxu.d x13, x27, (x29) # perform operation

# Testcase cp_rd (Test destination rd = x14)
li x24, 0x938c34b02ae88ad9 # load random value
la x7, scratch # base address
sd x24, 0(x7) # store in memory
li x24, 0x68a8357aa030bdfc # load another value into integer register
amomaxu.d x14, x24, (x7) # perform operation

# Testcase cp_rd (Test destination rd = x15)
li x12, 0xaed40164735d144d # load random value
la x21, scratch # base address
sd x12, 0(x21) # store in memory
li x12, 0x06d2ff88e7c7d4d4 # load another value into integer register
amomaxu.d x15, x12, (x21) # perform operation

# Testcase cp_rd (Test destination rd = x16)
li x26, 0x9078e2fb2614d24c # load random value
la x5, scratch # base address
sd x26, 0(x5) # store in memory
li x26, 0x2d99da219d9e5047 # load another value into integer register
amomaxu.d x16, x26, (x5) # perform operation

# Testcase cp_rd (Test destination rd = x17)
li x5, 0xba59957a6ceaf677 # load random value
la x25, scratch # base address
sd x5, 0(x25) # store in memory
li x5, 0x6ab906cf0eb6b56a # load another value into integer register
amomaxu.d x17, x5, (x25) # perform operation

# Testcase cp_rd (Test destination rd = x18)
li x7, 0x9ee867fe1d912438 # load random value
la x3, scratch # base address
sd x7, 0(x3) # store in memory
li x7, 0x04017aab6e65703f # load another value into integer register
amomaxu.d x18, x7, (x3) # perform operation

# Testcase cp_rd (Test destination rd = x19)
li x16, 0x6509fce808168076 # load random value
la x30, scratch # base address
sd x16, 0(x30) # store in memory
li x16, 0xdd169da339c91df4 # load another value into integer register
amomaxu.d x19, x16, (x30) # perform operation

# Testcase cp_rd (Test destination rd = x20)
li x31, 0xceafe9308e12bd6f # load random value
la x2, scratch # base address
sd x31, 0(x2) # store in memory
li x31, 0x0ac914306a7efd3b # load another value into integer register
amomaxu.d x20, x31, (x2) # perform operation

# Testcase cp_rd (Test destination rd = x21)
li x10, 0x40298c9df1f5e060 # load random value
la x25, scratch # base address
sd x10, 0(x25) # store in memory
li x10, 0x2a17c9030ec5ed19 # load another value into integer register
amomaxu.d x21, x10, (x25) # perform operation

# Testcase cp_rd (Test destination rd = x22)
li x16, 0x660c8d1198eda87e # load random value
la x8, scratch # base address
sd x16, 0(x8) # store in memory
li x16, 0xf216592b63591404 # load another value into integer register
amomaxu.d x22, x16, (x8) # perform operation

# Testcase cp_rd (Test destination rd = x23)
li x11, 0x7820b4a508e3de92 # load random value
la x25, scratch # base address
sd x11, 0(x25) # store in memory
li x11, 0x42e473bc2f24a6a0 # load another value into integer register
amomaxu.d x23, x11, (x25) # perform operation

# Testcase cp_rd (Test destination rd = x24)
li x5, 0x315f84dfc7c5aae2 # load random value
la x27, scratch # base address
sd x5, 0(x27) # store in memory
li x5, 0x7174eec266ebc1de # load another value into integer register
amomaxu.d x24, x5, (x27) # perform operation

# Testcase cp_rd (Test destination rd = x25)
li x5, 0x65d29cbcec5d2ead # load random value
la x1, scratch # base address
sd x5, 0(x1) # store in memory
li x5, 0x8d21fca76fece3b6 # load another value into integer register
amomaxu.d x25, x5, (x1) # perform operation

# Testcase cp_rd (Test destination rd = x26)
li x10, 0x0ced1cb4cce53eb7 # load random value
la x30, scratch # base address
sd x10, 0(x30) # store in memory
li x10, 0x875e88cd6b68aef4 # load another value into integer register
amomaxu.d x26, x10, (x30) # perform operation

# Testcase cp_rd (Test destination rd = x27)
li x15, 0x390e2a44b43ed18a # load random value
la x22, scratch # base address
sd x15, 0(x22) # store in memory
li x15, 0xa5358e1cbcb4a95e # load another value into integer register
amomaxu.d x27, x15, (x22) # perform operation

# Testcase cp_rd (Test destination rd = x28)
li x29, 0x425c6a5bbb95bf1d # load random value
la x15, scratch # base address
sd x29, 0(x15) # store in memory
li x29, 0xfa0f9b4269c25c23 # load another value into integer register
amomaxu.d x28, x29, (x15) # perform operation

# Testcase cp_rd (Test destination rd = x29)
li x13, 0xfd24a2afc0d9c829 # load random value
la x11, scratch # base address
sd x13, 0(x11) # store in memory
li x13, 0x70c1cf9ce15fcf26 # load another value into integer register
amomaxu.d x29, x13, (x11) # perform operation

# Testcase cp_rd (Test destination rd = x30)
li x23, 0x463fbf7c2c139878 # load random value
la x15, scratch # base address
sd x23, 0(x15) # store in memory
li x23, 0xa999e7ceb6393d13 # load another value into integer register
amomaxu.d x30, x23, (x15) # perform operation

# Testcase cp_rd (Test destination rd = x31)
li x28, 0x7fb1eb005261e9a5 # load random value
la x17, scratch # base address
sd x28, 0(x17) # store in memory
li x28, 0x09f2834792888c3e # load another value into integer register
amomaxu.d x31, x28, (x17) # perform operation

# Testcase cp_rs2_corners (Test source rs2 value = 0x0)
li x20, 0x885651d69ef2b572 # load random value
la x28, scratch # base address
sd x20, 0(x28) # store in memory
li x20, 0x0000000000000000 # load another value into integer register
amomaxu.d x9, x20, (x28) # perform operation

# Testcase cp_rs2_corners (Test source rs2 value = 0x1)
li x8, 0x0809d9605befbc05 # load random value
la x6, scratch # base address
sd x8, 0(x6) # store in memory
li x8, 0x0000000000000001 # load another value into integer register
amomaxu.d x24, x8, (x6) # perform operation

# Testcase cp_rs2_corners (Test source rs2 value = 0x2)
li x15, 0x6bc426368aff0b4d # load random value
la x7, scratch # base address
sd x15, 0(x7) # store in memory
li x15, 0x0000000000000002 # load another value into integer register
amomaxu.d x2, x15, (x7) # perform operation

# Testcase cp_rs2_corners (Test source rs2 value = 0x8000000000000000)
li x17, 0xd2ecdc627a971aac # load random value
la x28, scratch # base address
sd x17, 0(x28) # store in memory
li x17, 0x8000000000000000 # load another value into integer register
amomaxu.d x5, x17, (x28) # perform operation

# Testcase cp_rs2_corners (Test source rs2 value = 0x8000000000000001)
li x29, 0x593244d51f556a0f # load random value
la x6, scratch # base address
sd x29, 0(x6) # store in memory
li x29, 0x8000000000000001 # load another value into integer register
amomaxu.d x24, x29, (x6) # perform operation

# Testcase cp_rs2_corners (Test source rs2 value = 0x7fffffffffffffff)
li x1, 0xc85386fc91edf673 # load random value
la x19, scratch # base address
sd x1, 0(x19) # store in memory
li x1, 0x7fffffffffffffff # load another value into integer register
amomaxu.d x25, x1, (x19) # perform operation

# Testcase cp_rs2_corners (Test source rs2 value = 0x7ffffffffffffffe)
li x31, 0x2359d98378994873 # load random value
la x1, scratch # base address
sd x31, 0(x1) # store in memory
li x31, 0x7ffffffffffffffe # load another value into integer register
amomaxu.d x30, x31, (x1) # perform operation

# Testcase cp_rs2_corners (Test source rs2 value = 0xffffffffffffffff)
li x7, 0xd4ef2e5b5c690dac # load random value
la x14, scratch # base address
sd x7, 0(x14) # store in memory
li x7, 0xffffffffffffffff # load another value into integer register
amomaxu.d x1, x7, (x14) # perform operation

# Testcase cp_rs2_corners (Test source rs2 value = 0xfffffffffffffffe)
li x11, 0xd453d6461fd88a9d # load random value
la x27, scratch # base address
sd x11, 0(x27) # store in memory
li x11, 0xfffffffffffffffe # load another value into integer register
amomaxu.d x28, x11, (x27) # perform operation

# Testcase cp_rs2_corners (Test source rs2 value = 0x5bbc887763ae86f2)
li x15, 0x69014928bdabb125 # load random value
la x5, scratch # base address
sd x15, 0(x5) # store in memory
li x15, 0x5bbc887763ae86f2 # load another value into integer register
amomaxu.d x19, x15, (x5) # perform operation

# Testcase cp_rs2_corners (Test source rs2 value = 0xaaaaaaaaaaaaaaaa)
li x21, 0x4e7dae61d41ca4e6 # load random value
la x26, scratch # base address
sd x21, 0(x26) # store in memory
li x21, 0xaaaaaaaaaaaaaaaa # load another value into integer register
amomaxu.d x24, x21, (x26) # perform operation

# Testcase cp_rs2_corners (Test source rs2 value = 0x5555555555555555)
li x1, 0x49337bd4b3e4f73f # load random value
la x19, scratch # base address
sd x1, 0(x19) # store in memory
li x1, 0x5555555555555555 # load another value into integer register
amomaxu.d x11, x1, (x19) # perform operation

# Testcase cp_rs2_corners (Test source rs2 value = 0xffffffff)
li x1, 0xf48f2caa144a65bc # load random value
la x24, scratch # base address
sd x1, 0(x24) # store in memory
li x1, 0x00000000ffffffff # load another value into integer register
amomaxu.d x18, x1, (x24) # perform operation

# Testcase cp_rs2_corners (Test source rs2 value = 0xfffffffe)
li x22, 0xa298d94007238be5 # load random value
la x14, scratch # base address
sd x22, 0(x14) # store in memory
li x22, 0x00000000fffffffe # load another value into integer register
amomaxu.d x6, x22, (x14) # perform operation

# Testcase cp_rs2_corners (Test source rs2 value = 0x100000000)
li x10, 0xde0217aa6b89f83e # load random value
la x1, scratch # base address
sd x10, 0(x1) # store in memory
li x10, 0x0000000100000000 # load another value into integer register
amomaxu.d x9, x10, (x1) # perform operation

# Testcase cp_rs2_corners (Test source rs2 value = 0x100000001)
li x3, 0xc467bf909e42bce6 # load random value
la x31, scratch # base address
sd x3, 0(x31) # store in memory
li x3, 0x0000000100000001 # load another value into integer register
amomaxu.d x15, x3, (x31) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x1)
li x1, 0xb069855e846450c2 # load random value
la x1, scratch # base address
sd x1, 0(x1) # store in memory
amomaxu.d x10, x1, (x1) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x2)
li x2, 0x7de8b7c00dabe185 # load random value
la x2, scratch # base address
sd x2, 0(x2) # store in memory
amomaxu.d x24, x2, (x2) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x3)
li x3, 0x771f7c90ca7edbc1 # load random value
la x3, scratch # base address
sd x3, 0(x3) # store in memory
amomaxu.d x26, x3, (x3) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x4)
mv x5, x4 # switch signature pointer register to avoid conflict with test
li x4, 0xeb055a90f0e4b65a # load random value
la x4, scratch # base address
sd x4, 0(x4) # store in memory
amomaxu.d x18, x4, (x4) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x5)
mv x6, x5 # switch signature pointer register to avoid conflict with test
li x5, 0x02e08871a24f4958 # load random value
la x5, scratch # base address
sd x5, 0(x5) # store in memory
amomaxu.d x31, x5, (x5) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x6)
mv x7, x6 # switch signature pointer register to avoid conflict with test
li x6, 0x3f7cb054ea461797 # load random value
la x6, scratch # base address
sd x6, 0(x6) # store in memory
amomaxu.d x29, x6, (x6) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x7)
mv x4, x7 # switch signature pointer register to avoid conflict with test
li x7, 0x3d99bb2e59f185d5 # load random value
la x7, scratch # base address
sd x7, 0(x7) # store in memory
amomaxu.d x14, x7, (x7) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x8)
li x8, 0x5300b2c2e7f4fdfc # load random value
la x8, scratch # base address
sd x8, 0(x8) # store in memory
amomaxu.d x3, x8, (x8) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x9)
li x9, 0xc5ade34afd312662 # load random value
la x9, scratch # base address
sd x9, 0(x9) # store in memory
amomaxu.d x24, x9, (x9) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x10)
li x10, 0xd5e658a4d147efff # load random value
la x10, scratch # base address
sd x10, 0(x10) # store in memory
amomaxu.d x6, x10, (x10) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x11)
li x11, 0x705a82ca813fee1e # load random value
la x11, scratch # base address
sd x11, 0(x11) # store in memory
amomaxu.d x1, x11, (x11) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x12)
li x12, 0x5f6b6f23a4eca559 # load random value
la x12, scratch # base address
sd x12, 0(x12) # store in memory
amomaxu.d x6, x12, (x12) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x13)
li x13, 0xa580787c98f8b7a8 # load random value
la x13, scratch # base address
sd x13, 0(x13) # store in memory
amomaxu.d x14, x13, (x13) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x14)
li x14, 0x6430c8ae2b316e8a # load random value
la x14, scratch # base address
sd x14, 0(x14) # store in memory
amomaxu.d x13, x14, (x14) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x15)
li x15, 0xe4476addc7894b2b # load random value
la x15, scratch # base address
sd x15, 0(x15) # store in memory
amomaxu.d x11, x15, (x15) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x16)
li x16, 0x4c070cc853dfef81 # load random value
la x16, scratch # base address
sd x16, 0(x16) # store in memory
amomaxu.d x24, x16, (x16) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x17)
li x17, 0x6b7bd5c2810e4942 # load random value
la x17, scratch # base address
sd x17, 0(x17) # store in memory
amomaxu.d x26, x17, (x17) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x18)
li x18, 0x8dbf244bd6db1957 # load random value
la x18, scratch # base address
sd x18, 0(x18) # store in memory
amomaxu.d x6, x18, (x18) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x19)
li x19, 0x1b7810a48dc98566 # load random value
la x19, scratch # base address
sd x19, 0(x19) # store in memory
amomaxu.d x24, x19, (x19) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x20)
li x20, 0x8d5b253965d0b9d0 # load random value
la x20, scratch # base address
sd x20, 0(x20) # store in memory
amomaxu.d x18, x20, (x20) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x21)
li x21, 0x4cf1e1f7d3e4af5c # load random value
la x21, scratch # base address
sd x21, 0(x21) # store in memory
amomaxu.d x14, x21, (x21) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x22)
li x22, 0xf5e4bf646752081f # load random value
la x22, scratch # base address
sd x22, 0(x22) # store in memory
amomaxu.d x19, x22, (x22) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x23)
li x23, 0x1413c8fc73ff0c4b # load random value
la x23, scratch # base address
sd x23, 0(x23) # store in memory
amomaxu.d x21, x23, (x23) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x24)
li x24, 0x3a08054083777937 # load random value
la x24, scratch # base address
sd x24, 0(x24) # store in memory
amomaxu.d x20, x24, (x24) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x25)
li x25, 0xeebdec894f707def # load random value
la x25, scratch # base address
sd x25, 0(x25) # store in memory
amomaxu.d x7, x25, (x25) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x26)
li x26, 0x6cef16f803b10b5d # load random value
la x26, scratch # base address
sd x26, 0(x26) # store in memory
amomaxu.d x18, x26, (x26) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x27)
li x27, 0x69f3299ebdcbedac # load random value
la x27, scratch # base address
sd x27, 0(x27) # store in memory
amomaxu.d x20, x27, (x27) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x28)
li x28, 0xec2e1c177260a652 # load random value
la x28, scratch # base address
sd x28, 0(x28) # store in memory
amomaxu.d x25, x28, (x28) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x29)
li x29, 0x8893dca0116e1538 # load random value
la x29, scratch # base address
sd x29, 0(x29) # store in memory
amomaxu.d x29, x29, (x29) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x30)
li x30, 0x9bb43a5bc0861525 # load random value
la x30, scratch # base address
sd x30, 0(x30) # store in memory
amomaxu.d x24, x30, (x30) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x31)
li x31, 0x8a07b136eaf67919 # load random value
la x31, scratch # base address
sd x31, 0(x31) # store in memory
amomaxu.d x22, x31, (x31) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x1)
li x5, 0xcbd3a0a30c311f46 # load random value
la x1, scratch # base address
sd x5, 0(x1) # store in memory
li x5, 0x06dce0e3a7d33922 # load another value into integer register
amomaxu.d x1, x5, (x1) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x2)
li x10, 0x3633e84fd97e135f # load random value
la x2, scratch # base address
sd x10, 0(x2) # store in memory
li x10, 0xbc5aa45efda9cca4 # load another value into integer register
amomaxu.d x2, x10, (x2) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x3)
li x5, 0x03990b49bccde4d0 # load random value
la x3, scratch # base address
sd x5, 0(x3) # store in memory
li x5, 0xb56f19ff5aa47402 # load another value into integer register
amomaxu.d x3, x5, (x3) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x4)
mv x5, x4 # switch signature pointer register to avoid conflict with test
li x11, 0x9f7bd80a8aae996b # load random value
la x4, scratch # base address
sd x11, 0(x4) # store in memory
li x11, 0xf34763673f6a9252 # load another value into integer register
amomaxu.d x4, x11, (x4) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x5)
mv x6, x5 # switch signature pointer register to avoid conflict with test
li x26, 0x46f9cdf6b3086aac # load random value
la x5, scratch # base address
sd x26, 0(x5) # store in memory
li x26, 0xc59651d167b4bf5f # load another value into integer register
amomaxu.d x5, x26, (x5) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x6)
mv x7, x6 # switch signature pointer register to avoid conflict with test
li x26, 0x4b9014a72f1601fa # load random value
la x6, scratch # base address
sd x26, 0(x6) # store in memory
li x26, 0x4a8f64f9acc910dc # load another value into integer register
amomaxu.d x6, x26, (x6) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x7)
mv x4, x7 # switch signature pointer register to avoid conflict with test
li x6, 0x6bf76e887a25f9e9 # load random value
la x7, scratch # base address
sd x6, 0(x7) # store in memory
li x6, 0xf50efff077ff59ef # load another value into integer register
amomaxu.d x7, x6, (x7) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x8)
li x12, 0xe5e8b5a7a8cbead0 # load random value
la x8, scratch # base address
sd x12, 0(x8) # store in memory
li x12, 0x53c329960fd8754a # load another value into integer register
amomaxu.d x8, x12, (x8) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x9)
li x12, 0x22667441e91db127 # load random value
la x9, scratch # base address
sd x12, 0(x9) # store in memory
li x12, 0x8d201df8008222e5 # load another value into integer register
amomaxu.d x9, x12, (x9) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x10)
li x22, 0x2f59f0d4d48c1cae # load random value
la x10, scratch # base address
sd x22, 0(x10) # store in memory
li x22, 0xb2ee6560f863c005 # load another value into integer register
amomaxu.d x10, x22, (x10) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x11)
li x20, 0xfd32fef78afe3198 # load random value
la x11, scratch # base address
sd x20, 0(x11) # store in memory
li x20, 0xd5e19713d947b2a9 # load another value into integer register
amomaxu.d x11, x20, (x11) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x12)
li x6, 0x9f66cc11129fc67e # load random value
la x12, scratch # base address
sd x6, 0(x12) # store in memory
li x6, 0x1214ba7db972d2c9 # load another value into integer register
amomaxu.d x12, x6, (x12) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x13)
li x25, 0x6370b7f5eb30144c # load random value
la x13, scratch # base address
sd x25, 0(x13) # store in memory
li x25, 0x549ea062a55a96fc # load another value into integer register
amomaxu.d x13, x25, (x13) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x14)
li x28, 0x0767a3c1a45d61cd # load random value
la x14, scratch # base address
sd x28, 0(x14) # store in memory
li x28, 0x2ad9a6c332f67aad # load another value into integer register
amomaxu.d x14, x28, (x14) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x15)
li x15, 0x81179854d1afd6fc # load random value
la x15, scratch # base address
sd x15, 0(x15) # store in memory
amomaxu.d x15, x15, (x15) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x16)
li x6, 0xb647692ca498c95d # load random value
la x16, scratch # base address
sd x6, 0(x16) # store in memory
li x6, 0x15291187db65f2ff # load another value into integer register
amomaxu.d x16, x6, (x16) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x17)
li x27, 0xf4e05418188f3bb0 # load random value
la x17, scratch # base address
sd x27, 0(x17) # store in memory
li x27, 0x746640def7a04e9b # load another value into integer register
amomaxu.d x17, x27, (x17) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x18)
li x24, 0x423da6f1f73de88c # load random value
la x18, scratch # base address
sd x24, 0(x18) # store in memory
li x24, 0x595814e83d7c306d # load another value into integer register
amomaxu.d x18, x24, (x18) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x19)
li x10, 0xe4b5a4af9a3b47f8 # load random value
la x19, scratch # base address
sd x10, 0(x19) # store in memory
li x10, 0xc5fd6794e36a4e4b # load another value into integer register
amomaxu.d x19, x10, (x19) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x20)
li x29, 0x134a26beadfa9289 # load random value
la x20, scratch # base address
sd x29, 0(x20) # store in memory
li x29, 0x796e7c7521ecc14e # load another value into integer register
amomaxu.d x20, x29, (x20) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x21)
li x11, 0x610bdc06fa027e03 # load random value
la x21, scratch # base address
sd x11, 0(x21) # store in memory
li x11, 0x9a281b085203dd6c # load another value into integer register
amomaxu.d x21, x11, (x21) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x22)
li x17, 0xff62d6334eb4511e # load random value
la x22, scratch # base address
sd x17, 0(x22) # store in memory
li x17, 0xe2f26b2ec581d41b # load another value into integer register
amomaxu.d x22, x17, (x22) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x23)
li x8, 0xaacb6b2e87d0c54f # load random value
la x23, scratch # base address
sd x8, 0(x23) # store in memory
li x8, 0x4d4823e56e4ecf96 # load another value into integer register
amomaxu.d x23, x8, (x23) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x24)
li x28, 0x0711802a7de448d3 # load random value
la x24, scratch # base address
sd x28, 0(x24) # store in memory
li x28, 0xe0221ed77ec751c7 # load another value into integer register
amomaxu.d x24, x28, (x24) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x25)
li x15, 0xd7c47b0edfb832c0 # load random value
la x25, scratch # base address
sd x15, 0(x25) # store in memory
li x15, 0xe6d05e5614456a0a # load another value into integer register
amomaxu.d x25, x15, (x25) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x26)
li x30, 0xc52ae1a854838f85 # load random value
la x26, scratch # base address
sd x30, 0(x26) # store in memory
li x30, 0xabd456a0f586f8f1 # load another value into integer register
amomaxu.d x26, x30, (x26) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x27)
li x7, 0x97fd3cd26fda65c1 # load random value
la x27, scratch # base address
sd x7, 0(x27) # store in memory
li x7, 0x0f7b24c02ea38bef # load another value into integer register
amomaxu.d x27, x7, (x27) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x28)
li x23, 0x39b3e2bf6059290c # load random value
la x28, scratch # base address
sd x23, 0(x28) # store in memory
li x23, 0x3d5d984997d55820 # load another value into integer register
amomaxu.d x28, x23, (x28) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x29)
li x27, 0x50b297fa4665bb93 # load random value
la x29, scratch # base address
sd x27, 0(x29) # store in memory
li x27, 0xc976691d537fe632 # load another value into integer register
amomaxu.d x29, x27, (x29) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x30)
li x14, 0x67ac4f9d7cce4db9 # load random value
la x30, scratch # base address
sd x14, 0(x30) # store in memory
li x14, 0xa2becfa94136df0e # load another value into integer register
amomaxu.d x30, x14, (x30) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x31)
li x15, 0x34f0190ed24e856e # load random value
la x31, scratch # base address
sd x15, 0(x31) # store in memory
li x15, 0xba1f30de56b89450 # load another value into integer register
amomaxu.d x31, x15, (x31) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x0)
li x0, 0x9fb7d2860bb920f7 # load random value
la x1, scratch # base address
sd x0, 0(x1) # store in memory
li x0, 0x716234107fa495a8 # load another value into integer register
amomaxu.d x0, x0, (x1) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x1)
li x1, 0x00a2770f5e043157 # load random value
la x6, scratch # base address
sd x1, 0(x6) # store in memory
li x1, 0x555e4e60b9f72484 # load another value into integer register
amomaxu.d x1, x1, (x6) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x2)
li x2, 0xabbbb12c9483d01c # load random value
la x28, scratch # base address
sd x2, 0(x28) # store in memory
li x2, 0xe0be1198c6044ab2 # load another value into integer register
amomaxu.d x2, x2, (x28) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x3)
li x3, 0x1ad8d2a0729cee31 # load random value
la x16, scratch # base address
sd x3, 0(x16) # store in memory
li x3, 0x7d9599779d85c4f7 # load another value into integer register
amomaxu.d x3, x3, (x16) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x4)
mv x5, x4 # switch signature pointer register to avoid conflict with test
li x4, 0x48ed949d389ddd93 # load random value
la x19, scratch # base address
sd x4, 0(x19) # store in memory
li x4, 0xc1c9ef1bb741faf1 # load another value into integer register
amomaxu.d x4, x4, (x19) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x5)
mv x6, x5 # switch signature pointer register to avoid conflict with test
li x5, 0x987f55bc52e6e512 # load random value
la x26, scratch # base address
sd x5, 0(x26) # store in memory
li x5, 0x2597cfa64d19a032 # load another value into integer register
amomaxu.d x5, x5, (x26) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x6)
mv x7, x6 # switch signature pointer register to avoid conflict with test
li x6, 0xda69c3be0bfd5211 # load random value
la x29, scratch # base address
sd x6, 0(x29) # store in memory
li x6, 0x2ddcee1599edc2a0 # load another value into integer register
amomaxu.d x6, x6, (x29) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x7)
mv x4, x7 # switch signature pointer register to avoid conflict with test
li x7, 0xa882b2ccd81338e3 # load random value
la x14, scratch # base address
sd x7, 0(x14) # store in memory
li x7, 0x977fceb74334e82f # load another value into integer register
amomaxu.d x7, x7, (x14) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x8)
li x8, 0xf5b44e03ee62fee1 # load random value
la x13, scratch # base address
sd x8, 0(x13) # store in memory
li x8, 0x9842191a45407263 # load another value into integer register
amomaxu.d x8, x8, (x13) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x9)
li x9, 0xde6e48fcd2722a01 # load random value
la x18, scratch # base address
sd x9, 0(x18) # store in memory
li x9, 0xdd695885ee4ffa30 # load another value into integer register
amomaxu.d x9, x9, (x18) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x10)
li x10, 0xd82df7c0c5c125bc # load random value
la x2, scratch # base address
sd x10, 0(x2) # store in memory
li x10, 0x234e2512a75fcdaf # load another value into integer register
amomaxu.d x10, x10, (x2) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x11)
li x11, 0x8430f5e829c6ddcc # load random value
la x11, scratch # base address
sd x11, 0(x11) # store in memory
amomaxu.d x11, x11, (x11) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x12)
li x12, 0x66eb58feafe24ee6 # load random value
la x12, scratch # base address
sd x12, 0(x12) # store in memory
amomaxu.d x12, x12, (x12) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x13)
li x13, 0x8da2b18a671bee9e # load random value
la x30, scratch # base address
sd x13, 0(x30) # store in memory
li x13, 0x9c18d5f353604fa0 # load another value into integer register
amomaxu.d x13, x13, (x30) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x14)
li x14, 0xefbc06f998b493ca # load random value
la x28, scratch # base address
sd x14, 0(x28) # store in memory
li x14, 0x641c502cac3e85d6 # load another value into integer register
amomaxu.d x14, x14, (x28) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x15)
li x15, 0x2770307f6ff6279d # load random value
la x6, scratch # base address
sd x15, 0(x6) # store in memory
li x15, 0xc69d363e578268e8 # load another value into integer register
amomaxu.d x15, x15, (x6) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x16)
li x16, 0x29a47c512b361786 # load random value
la x10, scratch # base address
sd x16, 0(x10) # store in memory
li x16, 0x24eaf20b214cd08d # load another value into integer register
amomaxu.d x16, x16, (x10) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x17)
li x17, 0x6715dafc8bead89a # load random value
la x3, scratch # base address
sd x17, 0(x3) # store in memory
li x17, 0x7cd93f90307ef21b # load another value into integer register
amomaxu.d x17, x17, (x3) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x18)
li x18, 0x318213e0c4ae2d50 # load random value
la x27, scratch # base address
sd x18, 0(x27) # store in memory
li x18, 0xb2ee3e78b9d3cf73 # load another value into integer register
amomaxu.d x18, x18, (x27) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x19)
li x19, 0x9761a127543f76bf # load random value
la x19, scratch # base address
sd x19, 0(x19) # store in memory
amomaxu.d x19, x19, (x19) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x20)
li x20, 0xba2e9284b735e9eb # load random value
la x2, scratch # base address
sd x20, 0(x2) # store in memory
li x20, 0x8bb536133254cb26 # load another value into integer register
amomaxu.d x20, x20, (x2) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x21)
li x21, 0x3af9a0ff06be29f1 # load random value
la x18, scratch # base address
sd x21, 0(x18) # store in memory
li x21, 0x9b53259fc2475530 # load another value into integer register
amomaxu.d x21, x21, (x18) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x22)
li x22, 0x481d337e73de457e # load random value
la x13, scratch # base address
sd x22, 0(x13) # store in memory
li x22, 0x0541fb7de91017a9 # load another value into integer register
amomaxu.d x22, x22, (x13) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x23)
li x23, 0xcc277e061bdedd4e # load random value
la x15, scratch # base address
sd x23, 0(x15) # store in memory
li x23, 0x5a8733ec22fc1dee # load another value into integer register
amomaxu.d x23, x23, (x15) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x24)
li x24, 0x93878850baa38bf4 # load random value
la x8, scratch # base address
sd x24, 0(x8) # store in memory
li x24, 0x93bfb8273bb0c851 # load another value into integer register
amomaxu.d x24, x24, (x8) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x25)
li x25, 0x01a3f5cc0987cd1c # load random value
la x6, scratch # base address
sd x25, 0(x6) # store in memory
li x25, 0xdc5ea7ade581a771 # load another value into integer register
amomaxu.d x25, x25, (x6) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x26)
li x26, 0x779c0dbda0922eb0 # load random value
la x1, scratch # base address
sd x26, 0(x1) # store in memory
li x26, 0x3a82072140e741e7 # load another value into integer register
amomaxu.d x26, x26, (x1) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x27)
li x27, 0xa0c4fc6910d826ca # load random value
la x8, scratch # base address
sd x27, 0(x8) # store in memory
li x27, 0xb44b2a4af4b6cd42 # load another value into integer register
amomaxu.d x27, x27, (x8) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x28)
li x28, 0xcde223128686ee0a # load random value
la x26, scratch # base address
sd x28, 0(x26) # store in memory
li x28, 0xb0ba770ecbf285a6 # load another value into integer register
amomaxu.d x28, x28, (x26) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x29)
li x29, 0xea0608a2f56a4fe7 # load random value
la x2, scratch # base address
sd x29, 0(x2) # store in memory
li x29, 0x482f8d4dbaeedba3 # load another value into integer register
amomaxu.d x29, x29, (x2) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x30)
li x30, 0x8c3c5fcb750a5a46 # load random value
la x3, scratch # base address
sd x30, 0(x3) # store in memory
li x30, 0xbeed2ccd3076be0c # load another value into integer register
amomaxu.d x30, x30, (x3) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x31)
li x31, 0x70ac91fa8e2be2e0 # load random value
la x21, scratch # base address
sd x31, 0(x21) # store in memory
li x31, 0x969fe574ccadd90e # load another value into integer register
amomaxu.d x31, x31, (x21) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x1)
li x1, 0x2bdd15467ad94a68 # load random value
la x1, scratch # base address
sd x1, 0(x1) # store in memory
amomaxu.d x1, x1, (x1) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x2)
li x2, 0x95120ec470398e75 # load random value
la x2, scratch # base address
sd x2, 0(x2) # store in memory
amomaxu.d x2, x2, (x2) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x3)
li x3, 0x811ee89ecae0089b # load random value
la x3, scratch # base address
sd x3, 0(x3) # store in memory
amomaxu.d x3, x3, (x3) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x4)
mv x5, x4 # switch signature pointer register to avoid conflict with test
li x4, 0x608883ef647497d1 # load random value
la x4, scratch # base address
sd x4, 0(x4) # store in memory
amomaxu.d x4, x4, (x4) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x5)
mv x6, x5 # switch signature pointer register to avoid conflict with test
li x5, 0x14d64293e3fdeaa5 # load random value
la x5, scratch # base address
sd x5, 0(x5) # store in memory
amomaxu.d x5, x5, (x5) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x6)
mv x7, x6 # switch signature pointer register to avoid conflict with test
li x6, 0x97dda2c878888d2b # load random value
la x6, scratch # base address
sd x6, 0(x6) # store in memory
amomaxu.d x6, x6, (x6) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x7)
mv x4, x7 # switch signature pointer register to avoid conflict with test
li x7, 0xddd3f654f7881ec4 # load random value
la x7, scratch # base address
sd x7, 0(x7) # store in memory
amomaxu.d x7, x7, (x7) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x8)
li x8, 0xdc7e54f107b69143 # load random value
la x8, scratch # base address
sd x8, 0(x8) # store in memory
amomaxu.d x8, x8, (x8) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x9)
li x9, 0x0621313353dc58ee # load random value
la x9, scratch # base address
sd x9, 0(x9) # store in memory
amomaxu.d x9, x9, (x9) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x10)
li x10, 0x96a066fa88d8102c # load random value
la x10, scratch # base address
sd x10, 0(x10) # store in memory
amomaxu.d x10, x10, (x10) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x11)
li x11, 0x6e8f45ae8e4c1b98 # load random value
la x11, scratch # base address
sd x11, 0(x11) # store in memory
amomaxu.d x11, x11, (x11) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x12)
li x12, 0x33761b86b5915b1a # load random value
la x12, scratch # base address
sd x12, 0(x12) # store in memory
amomaxu.d x12, x12, (x12) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x13)
li x13, 0x4173ec55b5786228 # load random value
la x13, scratch # base address
sd x13, 0(x13) # store in memory
amomaxu.d x13, x13, (x13) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x14)
li x14, 0xeb5cfe07da7041a8 # load random value
la x14, scratch # base address
sd x14, 0(x14) # store in memory
amomaxu.d x14, x14, (x14) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x15)
li x15, 0xe87a16e82d01bfa8 # load random value
la x15, scratch # base address
sd x15, 0(x15) # store in memory
amomaxu.d x15, x15, (x15) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x16)
li x16, 0xa05e756fae85cfb0 # load random value
la x16, scratch # base address
sd x16, 0(x16) # store in memory
amomaxu.d x16, x16, (x16) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x17)
li x17, 0xe080ae6608398622 # load random value
la x17, scratch # base address
sd x17, 0(x17) # store in memory
amomaxu.d x17, x17, (x17) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x18)
li x18, 0xdad0d80cebb2a6d0 # load random value
la x18, scratch # base address
sd x18, 0(x18) # store in memory
amomaxu.d x18, x18, (x18) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x19)
li x19, 0x3970e131b566339c # load random value
la x19, scratch # base address
sd x19, 0(x19) # store in memory
amomaxu.d x19, x19, (x19) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x20)
li x20, 0x7f463cea3e7dc3ea # load random value
la x20, scratch # base address
sd x20, 0(x20) # store in memory
amomaxu.d x20, x20, (x20) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x21)
li x21, 0x7c432e488bb5440b # load random value
la x21, scratch # base address
sd x21, 0(x21) # store in memory
amomaxu.d x21, x21, (x21) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x22)
li x22, 0xe8f1bd75def2e4b7 # load random value
la x22, scratch # base address
sd x22, 0(x22) # store in memory
amomaxu.d x22, x22, (x22) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x23)
li x23, 0x83221cb0bc44a94d # load random value
la x23, scratch # base address
sd x23, 0(x23) # store in memory
amomaxu.d x23, x23, (x23) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x24)
li x24, 0xea8c6846d7dac116 # load random value
la x24, scratch # base address
sd x24, 0(x24) # store in memory
amomaxu.d x24, x24, (x24) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x25)
li x25, 0xd2261a709020e21c # load random value
la x25, scratch # base address
sd x25, 0(x25) # store in memory
amomaxu.d x25, x25, (x25) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x26)
li x26, 0x57fcce37d227efae # load random value
la x26, scratch # base address
sd x26, 0(x26) # store in memory
amomaxu.d x26, x26, (x26) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x27)
li x27, 0x1afc2e1887134a9f # load random value
la x27, scratch # base address
sd x27, 0(x27) # store in memory
amomaxu.d x27, x27, (x27) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x28)
li x28, 0xf4ba6fb8bb751353 # load random value
la x28, scratch # base address
sd x28, 0(x28) # store in memory
amomaxu.d x28, x28, (x28) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x29)
li x29, 0xfead6b964b982e8a # load random value
la x29, scratch # base address
sd x29, 0(x29) # store in memory
amomaxu.d x29, x29, (x29) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x30)
li x30, 0xc91d486fb33fce00 # load random value
la x30, scratch # base address
sd x30, 0(x30) # store in memory
amomaxu.d x30, x30, (x30) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x31)
li x31, 0x8cf9f1b2e7cf1abd # load random value
la x31, scratch # base address
sd x31, 0(x31) # store in memory
amomaxu.d x31, x31, (x31) # perform operation

# Testcase cp_gpr/fpr_hazard nohaz test
la x6, scratch
add x14, x8, x5 # perform first operation
amomaxu.d x9, x10, (x6) # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard nohaz test
la x17, scratch
add x24, x6, x27 # perform first operation
amomaxu.d x30, x1, (x17) # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard nohaz test
la x24, scratch
add x14, x11, x21 # perform first operation
amomaxu.d x7, x26, (x24) # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard raw test
la x13, scratch
add x9, x9, x0 # perform first operation
amomaxu.d x9, x9, (x13) # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard raw test
la x12, scratch
add x12, x12, x0 # perform first operation
amomaxu.d x12, x5, (x12) # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard raw test
la x26, scratch
add x15, x15, x0 # perform first operation
amomaxu.d x7, x24, (x26) # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard waw test
la x27, scratch
add x24, x8, x14 # perform first operation
amomaxu.d x24, x1, (x27) # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard waw test
la x29, scratch
add x7, x19, x25 # perform first operation
amomaxu.d x7, x24, (x29) # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard waw test
la x8, scratch
add x27, x6, x16 # perform first operation
amomaxu.d x27, x1, (x8) # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard war test
la x19, scratch
add x17, x14, x1 # perform first operation
amomaxu.d x14, x31, (x19) # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard war test
la x14, scratch
add x3, x8, x28 # perform first operation
amomaxu.d x28, x1, (x14) # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard war test
la x16, scratch
add x14, x13, x27 # perform first operation
amomaxu.d x26, x24, (x16) # perform second (triggering) operation

#.EQU SIGSIZE,0


// ******************
// Tests from: WALLY-COV-amomax.d.S
// ******************


# initialize signature pointer
la x4, begin_signature

    
# Testcase cp_rs1 (Test source rs1 = x1)
li x22, 0x99f936f8472695ce # load random value
la x1, scratch # base address
sd x22, 0(x1) # store in memory
li x22, 0x2c30e02adee985f3 # load another value into integer register
amomax.d x9, x22, (x1) # perform operation

# Testcase cp_rs1 (Test source rs1 = x2)
li x31, 0x9bbf75c1d520a51f # load random value
la x2, scratch # base address
sd x31, 0(x2) # store in memory
li x31, 0xdff182ed5424f9eb # load another value into integer register
amomax.d x28, x31, (x2) # perform operation

# Testcase cp_rs1 (Test source rs1 = x3)
li x16, 0x06851f2290104cc1 # load random value
la x3, scratch # base address
sd x16, 0(x3) # store in memory
li x16, 0x875ffcf095fa1ec6 # load another value into integer register
amomax.d x31, x16, (x3) # perform operation

# Testcase cp_rs1 (Test source rs1 = x4)
mv x5, x4 # switch signature pointer register to avoid conflict with test
li x6, 0xe7d1b24e982b8f11 # load random value
la x4, scratch # base address
sd x6, 0(x4) # store in memory
li x6, 0x501891e01e174e24 # load another value into integer register
amomax.d x11, x6, (x4) # perform operation

# Testcase cp_rs1 (Test source rs1 = x5)
mv x6, x5 # switch signature pointer register to avoid conflict with test
li x15, 0x03ff177d8f456dc2 # load random value
la x5, scratch # base address
sd x15, 0(x5) # store in memory
li x15, 0xa8685bcf67d8aec8 # load another value into integer register
amomax.d x9, x15, (x5) # perform operation

# Testcase cp_rs1 (Test source rs1 = x6)
mv x7, x6 # switch signature pointer register to avoid conflict with test
li x30, 0xd1a6b7eaf26f393c # load random value
la x6, scratch # base address
sd x30, 0(x6) # store in memory
li x30, 0xdd8a356bcf205790 # load another value into integer register
amomax.d x9, x30, (x6) # perform operation

# Testcase cp_rs1 (Test source rs1 = x7)
mv x4, x7 # switch signature pointer register to avoid conflict with test
li x22, 0xf1bc78cac18c45c2 # load random value
la x7, scratch # base address
sd x22, 0(x7) # store in memory
li x22, 0x6e67feef30a3d224 # load another value into integer register
amomax.d x13, x22, (x7) # perform operation

# Testcase cp_rs1 (Test source rs1 = x8)
li x22, 0xf1902709d9044896 # load random value
la x8, scratch # base address
sd x22, 0(x8) # store in memory
li x22, 0xc07d54e3880dd7e6 # load another value into integer register
amomax.d x15, x22, (x8) # perform operation

# Testcase cp_rs1 (Test source rs1 = x9)
li x3, 0xb3810e54fede66e7 # load random value
la x9, scratch # base address
sd x3, 0(x9) # store in memory
li x3, 0x48278dde21a296b0 # load another value into integer register
amomax.d x6, x3, (x9) # perform operation

# Testcase cp_rs1 (Test source rs1 = x10)
li x13, 0xe0228e807a0a4325 # load random value
la x10, scratch # base address
sd x13, 0(x10) # store in memory
li x13, 0x8d1751cd8db1c142 # load another value into integer register
amomax.d x12, x13, (x10) # perform operation

# Testcase cp_rs1 (Test source rs1 = x11)
li x31, 0x85d34268a1e8dda3 # load random value
la x11, scratch # base address
sd x31, 0(x11) # store in memory
li x31, 0x7d0af20f18b4dc40 # load another value into integer register
amomax.d x20, x31, (x11) # perform operation

# Testcase cp_rs1 (Test source rs1 = x12)
li x14, 0x9d991316c553baa7 # load random value
la x12, scratch # base address
sd x14, 0(x12) # store in memory
li x14, 0xef1be1e1284cf108 # load another value into integer register
amomax.d x1, x14, (x12) # perform operation

# Testcase cp_rs1 (Test source rs1 = x13)
li x12, 0x02310bb5c842b32d # load random value
la x13, scratch # base address
sd x12, 0(x13) # store in memory
li x12, 0x94ac44afbd691a60 # load another value into integer register
amomax.d x24, x12, (x13) # perform operation

# Testcase cp_rs1 (Test source rs1 = x14)
li x2, 0xb7a4315b9498e5c3 # load random value
la x14, scratch # base address
sd x2, 0(x14) # store in memory
li x2, 0x89f5687f456c44e2 # load another value into integer register
amomax.d x20, x2, (x14) # perform operation

# Testcase cp_rs1 (Test source rs1 = x15)
li x28, 0xbc03e826706d51d4 # load random value
la x15, scratch # base address
sd x28, 0(x15) # store in memory
li x28, 0x47d14f6073a20878 # load another value into integer register
amomax.d x31, x28, (x15) # perform operation

# Testcase cp_rs1 (Test source rs1 = x16)
li x28, 0x3b9ae4e8b79e8c90 # load random value
la x16, scratch # base address
sd x28, 0(x16) # store in memory
li x28, 0x55e89d66d1d881e9 # load another value into integer register
amomax.d x18, x28, (x16) # perform operation

# Testcase cp_rs1 (Test source rs1 = x17)
li x22, 0x592562788b71e09d # load random value
la x17, scratch # base address
sd x22, 0(x17) # store in memory
li x22, 0xdc223abc06e9393b # load another value into integer register
amomax.d x29, x22, (x17) # perform operation

# Testcase cp_rs1 (Test source rs1 = x18)
li x10, 0xff27ff1e5600a967 # load random value
la x18, scratch # base address
sd x10, 0(x18) # store in memory
li x10, 0x441c5d5b2a5d7777 # load another value into integer register
amomax.d x27, x10, (x18) # perform operation

# Testcase cp_rs1 (Test source rs1 = x19)
li x27, 0x8bca981a6f23e9a0 # load random value
la x19, scratch # base address
sd x27, 0(x19) # store in memory
li x27, 0xaa300b59c0c2b559 # load another value into integer register
amomax.d x30, x27, (x19) # perform operation

# Testcase cp_rs1 (Test source rs1 = x20)
li x14, 0xe0902ed1fbfbefe5 # load random value
la x20, scratch # base address
sd x14, 0(x20) # store in memory
li x14, 0x4e6fcbb47a73c933 # load another value into integer register
amomax.d x6, x14, (x20) # perform operation

# Testcase cp_rs1 (Test source rs1 = x21)
li x8, 0x102cd506a8d990d3 # load random value
la x21, scratch # base address
sd x8, 0(x21) # store in memory
li x8, 0x0409d37de4245235 # load another value into integer register
amomax.d x14, x8, (x21) # perform operation

# Testcase cp_rs1 (Test source rs1 = x22)
li x26, 0x4fdf1fa7b599a901 # load random value
la x22, scratch # base address
sd x26, 0(x22) # store in memory
li x26, 0x2b042559dda178bf # load another value into integer register
amomax.d x5, x26, (x22) # perform operation

# Testcase cp_rs1 (Test source rs1 = x23)
li x28, 0x7494908534a9fbf6 # load random value
la x23, scratch # base address
sd x28, 0(x23) # store in memory
li x28, 0x9a8ea13c87157384 # load another value into integer register
amomax.d x9, x28, (x23) # perform operation

# Testcase cp_rs1 (Test source rs1 = x24)
li x2, 0x81e86679dbe82782 # load random value
la x24, scratch # base address
sd x2, 0(x24) # store in memory
li x2, 0x6daba609c2015006 # load another value into integer register
amomax.d x28, x2, (x24) # perform operation

# Testcase cp_rs1 (Test source rs1 = x25)
li x1, 0x6a2f9e6ca67a8c38 # load random value
la x25, scratch # base address
sd x1, 0(x25) # store in memory
li x1, 0x7780ace9bcc876c7 # load another value into integer register
amomax.d x14, x1, (x25) # perform operation

# Testcase cp_rs1 (Test source rs1 = x26)
li x18, 0xbc1b2a681e78818e # load random value
la x26, scratch # base address
sd x18, 0(x26) # store in memory
li x18, 0x5ae69d8dcaf6dd1c # load another value into integer register
amomax.d x31, x18, (x26) # perform operation

# Testcase cp_rs1 (Test source rs1 = x27)
li x14, 0x4ee0846420fbf50d # load random value
la x27, scratch # base address
sd x14, 0(x27) # store in memory
li x14, 0x36cfd58b1d075e35 # load another value into integer register
amomax.d x5, x14, (x27) # perform operation

# Testcase cp_rs1 (Test source rs1 = x28)
li x12, 0x4207b20365eb2972 # load random value
la x28, scratch # base address
sd x12, 0(x28) # store in memory
li x12, 0x698f7b209be97313 # load another value into integer register
amomax.d x18, x12, (x28) # perform operation

# Testcase cp_rs1 (Test source rs1 = x29)
li x25, 0x1bda469e7ab3538d # load random value
la x29, scratch # base address
sd x25, 0(x29) # store in memory
li x25, 0x1eef4ce40a49c072 # load another value into integer register
amomax.d x14, x25, (x29) # perform operation

# Testcase cp_rs1 (Test source rs1 = x30)
li x28, 0x2b39232f633764a4 # load random value
la x30, scratch # base address
sd x28, 0(x30) # store in memory
li x28, 0x4ceeee7569d941e9 # load another value into integer register
amomax.d x5, x28, (x30) # perform operation

# Testcase cp_rs1 (Test source rs1 = x31)
li x14, 0xd9b049f77e9434fc # load random value
la x31, scratch # base address
sd x14, 0(x31) # store in memory
li x14, 0x91b4aee6b11007b0 # load another value into integer register
amomax.d x28, x14, (x31) # perform operation

# Testcase cp_rs2 (Test source rs2 = x0)
li x0, 0x3f57c4648bbb296a # load random value
la x2, scratch # base address
sd x0, 0(x2) # store in memory
li x0, 0x4a210f4572238a8b # load another value into integer register
amomax.d x21, x0, (x2) # perform operation

# Testcase cp_rs2 (Test source rs2 = x1)
li x1, 0x9a4a36817caed7c3 # load random value
la x24, scratch # base address
sd x1, 0(x24) # store in memory
li x1, 0xebd76d7690a5a81f # load another value into integer register
amomax.d x3, x1, (x24) # perform operation

# Testcase cp_rs2 (Test source rs2 = x2)
li x2, 0x93d954bacabd8540 # load random value
la x26, scratch # base address
sd x2, 0(x26) # store in memory
li x2, 0x8648c17e4de101fa # load another value into integer register
amomax.d x10, x2, (x26) # perform operation

# Testcase cp_rs2 (Test source rs2 = x3)
li x3, 0x73f8a6061aa96afb # load random value
la x7, scratch # base address
sd x3, 0(x7) # store in memory
li x3, 0xcf6f0c761da35d0e # load another value into integer register
amomax.d x15, x3, (x7) # perform operation

# Testcase cp_rs2 (Test source rs2 = x4)
mv x5, x4 # switch signature pointer register to avoid conflict with test
li x4, 0x9b5102edca4e3ebf # load random value
la x20, scratch # base address
sd x4, 0(x20) # store in memory
li x4, 0x5af93c3c93ff9141 # load another value into integer register
amomax.d x27, x4, (x20) # perform operation

# Testcase cp_rs2 (Test source rs2 = x5)
mv x6, x5 # switch signature pointer register to avoid conflict with test
li x5, 0x87d082ce021f8d6b # load random value
la x31, scratch # base address
sd x5, 0(x31) # store in memory
li x5, 0x8199c287177d73ff # load another value into integer register
amomax.d x19, x5, (x31) # perform operation

# Testcase cp_rs2 (Test source rs2 = x6)
mv x7, x6 # switch signature pointer register to avoid conflict with test
li x6, 0x82f42343cda7e040 # load random value
la x16, scratch # base address
sd x6, 0(x16) # store in memory
li x6, 0x7f3ce2b4b66c15c9 # load another value into integer register
amomax.d x9, x6, (x16) # perform operation

# Testcase cp_rs2 (Test source rs2 = x7)
mv x4, x7 # switch signature pointer register to avoid conflict with test
li x7, 0xdcca6a4c63be13af # load random value
la x22, scratch # base address
sd x7, 0(x22) # store in memory
li x7, 0x0fef35f0c6230f11 # load another value into integer register
amomax.d x6, x7, (x22) # perform operation

# Testcase cp_rs2 (Test source rs2 = x8)
li x8, 0x51701256e3e8b0ce # load random value
la x7, scratch # base address
sd x8, 0(x7) # store in memory
li x8, 0x62846d047597eabf # load another value into integer register
amomax.d x15, x8, (x7) # perform operation

# Testcase cp_rs2 (Test source rs2 = x9)
li x9, 0x979322addaac064c # load random value
la x11, scratch # base address
sd x9, 0(x11) # store in memory
li x9, 0xa4ce0ffc397e8545 # load another value into integer register
amomax.d x5, x9, (x11) # perform operation

# Testcase cp_rs2 (Test source rs2 = x10)
li x10, 0x7c1b2ffeb45b2d32 # load random value
la x27, scratch # base address
sd x10, 0(x27) # store in memory
li x10, 0x12babaa2f0c16474 # load another value into integer register
amomax.d x3, x10, (x27) # perform operation

# Testcase cp_rs2 (Test source rs2 = x11)
li x11, 0xc7d399f24d80f15a # load random value
la x17, scratch # base address
sd x11, 0(x17) # store in memory
li x11, 0xbc56e166019b042c # load another value into integer register
amomax.d x5, x11, (x17) # perform operation

# Testcase cp_rs2 (Test source rs2 = x12)
li x12, 0x534b38ab501099dd # load random value
la x31, scratch # base address
sd x12, 0(x31) # store in memory
li x12, 0xe19f4137a1de8c31 # load another value into integer register
amomax.d x22, x12, (x31) # perform operation

# Testcase cp_rs2 (Test source rs2 = x13)
li x13, 0x8aba338b77908369 # load random value
la x17, scratch # base address
sd x13, 0(x17) # store in memory
li x13, 0xed9354616d459d3a # load another value into integer register
amomax.d x19, x13, (x17) # perform operation

# Testcase cp_rs2 (Test source rs2 = x14)
li x14, 0x6972ff55f18e5612 # load random value
la x3, scratch # base address
sd x14, 0(x3) # store in memory
li x14, 0x050070361c904b68 # load another value into integer register
amomax.d x11, x14, (x3) # perform operation

# Testcase cp_rs2 (Test source rs2 = x15)
li x15, 0xaf504dfe0c42b07a # load random value
la x23, scratch # base address
sd x15, 0(x23) # store in memory
li x15, 0x917d232673d2a63d # load another value into integer register
amomax.d x29, x15, (x23) # perform operation

# Testcase cp_rs2 (Test source rs2 = x16)
li x16, 0x44efabce717bf493 # load random value
la x29, scratch # base address
sd x16, 0(x29) # store in memory
li x16, 0xd824a130a0e51119 # load another value into integer register
amomax.d x31, x16, (x29) # perform operation

# Testcase cp_rs2 (Test source rs2 = x17)
li x17, 0x7dd772341075b82b # load random value
la x23, scratch # base address
sd x17, 0(x23) # store in memory
li x17, 0xb89432315721ae2f # load another value into integer register
amomax.d x20, x17, (x23) # perform operation

# Testcase cp_rs2 (Test source rs2 = x18)
li x18, 0xab8cb31f71c3f425 # load random value
la x15, scratch # base address
sd x18, 0(x15) # store in memory
li x18, 0xf9dec4f0a9f286b8 # load another value into integer register
amomax.d x2, x18, (x15) # perform operation

# Testcase cp_rs2 (Test source rs2 = x19)
li x19, 0x171d29aab05951b7 # load random value
la x8, scratch # base address
sd x19, 0(x8) # store in memory
li x19, 0x6092be503d037687 # load another value into integer register
amomax.d x17, x19, (x8) # perform operation

# Testcase cp_rs2 (Test source rs2 = x20)
li x20, 0xacf842fadedcac6f # load random value
la x12, scratch # base address
sd x20, 0(x12) # store in memory
li x20, 0x21c2fffc71f29bf1 # load another value into integer register
amomax.d x15, x20, (x12) # perform operation

# Testcase cp_rs2 (Test source rs2 = x21)
li x21, 0x2225020cb02a5bc3 # load random value
la x9, scratch # base address
sd x21, 0(x9) # store in memory
li x21, 0xe1bcc6fa5f697046 # load another value into integer register
amomax.d x11, x21, (x9) # perform operation

# Testcase cp_rs2 (Test source rs2 = x22)
li x22, 0xc47aa789717e082d # load random value
la x1, scratch # base address
sd x22, 0(x1) # store in memory
li x22, 0xa0d8e5639416cef8 # load another value into integer register
amomax.d x17, x22, (x1) # perform operation

# Testcase cp_rs2 (Test source rs2 = x23)
li x23, 0xa978df7764afd76a # load random value
la x10, scratch # base address
sd x23, 0(x10) # store in memory
li x23, 0xb0934546613ddf9f # load another value into integer register
amomax.d x2, x23, (x10) # perform operation

# Testcase cp_rs2 (Test source rs2 = x24)
li x24, 0x4cb616abb516ba36 # load random value
la x6, scratch # base address
sd x24, 0(x6) # store in memory
li x24, 0xa220db971de228b0 # load another value into integer register
amomax.d x28, x24, (x6) # perform operation

# Testcase cp_rs2 (Test source rs2 = x25)
li x25, 0xbf542dce43158e19 # load random value
la x11, scratch # base address
sd x25, 0(x11) # store in memory
li x25, 0x1575de60ffb2c639 # load another value into integer register
amomax.d x13, x25, (x11) # perform operation

# Testcase cp_rs2 (Test source rs2 = x26)
li x26, 0xe890fae4bd181e46 # load random value
la x29, scratch # base address
sd x26, 0(x29) # store in memory
li x26, 0xb4a10e21c255e709 # load another value into integer register
amomax.d x18, x26, (x29) # perform operation

# Testcase cp_rs2 (Test source rs2 = x27)
li x27, 0xd53edc300eea8e2c # load random value
la x21, scratch # base address
sd x27, 0(x21) # store in memory
li x27, 0x6ed577739574401c # load another value into integer register
amomax.d x11, x27, (x21) # perform operation

# Testcase cp_rs2 (Test source rs2 = x28)
li x28, 0x8b3b77f8e16f519d # load random value
la x18, scratch # base address
sd x28, 0(x18) # store in memory
li x28, 0xe960350412b30adc # load another value into integer register
amomax.d x1, x28, (x18) # perform operation

# Testcase cp_rs2 (Test source rs2 = x29)
li x29, 0xd9beb3220827a93f # load random value
la x7, scratch # base address
sd x29, 0(x7) # store in memory
li x29, 0x01c9de1fc026f50f # load another value into integer register
amomax.d x6, x29, (x7) # perform operation

# Testcase cp_rs2 (Test source rs2 = x30)
li x30, 0x32afb7b9897a362a # load random value
la x21, scratch # base address
sd x30, 0(x21) # store in memory
li x30, 0x61cbf0f35cf80ba6 # load another value into integer register
amomax.d x29, x30, (x21) # perform operation

# Testcase cp_rs2 (Test source rs2 = x31)
li x31, 0xe5935cc03c3eb7f3 # load random value
la x3, scratch # base address
sd x31, 0(x3) # store in memory
li x31, 0x01da2b607d24919b # load another value into integer register
amomax.d x22, x31, (x3) # perform operation

# Testcase cp_rd (Test destination rd = x0)
li x15, 0x5b1c92593f692ddf # load random value
la x29, scratch # base address
sd x15, 0(x29) # store in memory
li x15, 0x16f0ce67b814348b # load another value into integer register
amomax.d x0, x15, (x29) # perform operation

# Testcase cp_rd (Test destination rd = x1)
li x20, 0x04557f8dc76af9ac # load random value
la x17, scratch # base address
sd x20, 0(x17) # store in memory
li x20, 0x09e382a425f8a4eb # load another value into integer register
amomax.d x1, x20, (x17) # perform operation

# Testcase cp_rd (Test destination rd = x2)
li x9, 0x6bbd8865e6cc0063 # load random value
la x30, scratch # base address
sd x9, 0(x30) # store in memory
li x9, 0x7358254539071a60 # load another value into integer register
amomax.d x2, x9, (x30) # perform operation

# Testcase cp_rd (Test destination rd = x3)
li x31, 0x9af7c7105bebee6f # load random value
la x28, scratch # base address
sd x31, 0(x28) # store in memory
li x31, 0xfb0ce38ed85a2ce9 # load another value into integer register
amomax.d x3, x31, (x28) # perform operation

# Testcase cp_rd (Test destination rd = x4)
mv x5, x4 # switch signature pointer register to avoid conflict with test
li x26, 0x6c3ea3c89d96c66c # load random value
la x1, scratch # base address
sd x26, 0(x1) # store in memory
li x26, 0xf0bee4f8988f42e0 # load another value into integer register
amomax.d x4, x26, (x1) # perform operation

# Testcase cp_rd (Test destination rd = x5)
mv x6, x5 # switch signature pointer register to avoid conflict with test
li x8, 0x9e347b34ec85e1ff # load random value
la x22, scratch # base address
sd x8, 0(x22) # store in memory
li x8, 0xfdbf1fb3a7515cef # load another value into integer register
amomax.d x5, x8, (x22) # perform operation

# Testcase cp_rd (Test destination rd = x6)
mv x7, x6 # switch signature pointer register to avoid conflict with test
li x23, 0x5491a828352b0f29 # load random value
la x12, scratch # base address
sd x23, 0(x12) # store in memory
li x23, 0x7e528777f80549c8 # load another value into integer register
amomax.d x6, x23, (x12) # perform operation

# Testcase cp_rd (Test destination rd = x7)
mv x4, x7 # switch signature pointer register to avoid conflict with test
li x9, 0x00f7c34d8bc6d7c1 # load random value
la x11, scratch # base address
sd x9, 0(x11) # store in memory
li x9, 0x9301b1558126db82 # load another value into integer register
amomax.d x7, x9, (x11) # perform operation

# Testcase cp_rd (Test destination rd = x8)
li x24, 0xfe7aa808a6911165 # load random value
la x9, scratch # base address
sd x24, 0(x9) # store in memory
li x24, 0x2ad0c0f5f96a7028 # load another value into integer register
amomax.d x8, x24, (x9) # perform operation

# Testcase cp_rd (Test destination rd = x9)
li x2, 0x679f56e1bc49bae5 # load random value
la x29, scratch # base address
sd x2, 0(x29) # store in memory
li x2, 0xc9bfb92a918b94d5 # load another value into integer register
amomax.d x9, x2, (x29) # perform operation

# Testcase cp_rd (Test destination rd = x10)
li x13, 0x02b81100c4dda632 # load random value
la x29, scratch # base address
sd x13, 0(x29) # store in memory
li x13, 0x2ec3f308c232fbfa # load another value into integer register
amomax.d x10, x13, (x29) # perform operation

# Testcase cp_rd (Test destination rd = x11)
li x8, 0xbcce62ce487d627b # load random value
la x3, scratch # base address
sd x8, 0(x3) # store in memory
li x8, 0x56b077b061f6f017 # load another value into integer register
amomax.d x11, x8, (x3) # perform operation

# Testcase cp_rd (Test destination rd = x12)
li x25, 0xa37e75b42736e880 # load random value
la x6, scratch # base address
sd x25, 0(x6) # store in memory
li x25, 0x742d53d703874cfb # load another value into integer register
amomax.d x12, x25, (x6) # perform operation

# Testcase cp_rd (Test destination rd = x13)
li x16, 0xd7d1b25d32487183 # load random value
la x20, scratch # base address
sd x16, 0(x20) # store in memory
li x16, 0x04114ba074b8005d # load another value into integer register
amomax.d x13, x16, (x20) # perform operation

# Testcase cp_rd (Test destination rd = x14)
li x15, 0x77fd1f07c0d98c75 # load random value
la x28, scratch # base address
sd x15, 0(x28) # store in memory
li x15, 0xe1de8249b1dbae1e # load another value into integer register
amomax.d x14, x15, (x28) # perform operation

# Testcase cp_rd (Test destination rd = x15)
li x31, 0x64fc43b2d75f8537 # load random value
la x18, scratch # base address
sd x31, 0(x18) # store in memory
li x31, 0x49f0190f112eb56b # load another value into integer register
amomax.d x15, x31, (x18) # perform operation

# Testcase cp_rd (Test destination rd = x16)
li x26, 0x2b04bebb313157cc # load random value
la x22, scratch # base address
sd x26, 0(x22) # store in memory
li x26, 0x0384a90ef7fab9d2 # load another value into integer register
amomax.d x16, x26, (x22) # perform operation

# Testcase cp_rd (Test destination rd = x17)
li x16, 0x471c67370322c2fb # load random value
la x6, scratch # base address
sd x16, 0(x6) # store in memory
li x16, 0x316bc0974810bd2c # load another value into integer register
amomax.d x17, x16, (x6) # perform operation

# Testcase cp_rd (Test destination rd = x18)
li x24, 0x852d1ba9046879ab # load random value
la x14, scratch # base address
sd x24, 0(x14) # store in memory
li x24, 0x725c363578315fa6 # load another value into integer register
amomax.d x18, x24, (x14) # perform operation

# Testcase cp_rd (Test destination rd = x19)
li x11, 0x3060744ae9fc857a # load random value
la x25, scratch # base address
sd x11, 0(x25) # store in memory
li x11, 0x35d16087b8e02a07 # load another value into integer register
amomax.d x19, x11, (x25) # perform operation

# Testcase cp_rd (Test destination rd = x20)
li x20, 0xa999e6e3562a8bb5 # load random value
la x19, scratch # base address
sd x20, 0(x19) # store in memory
li x20, 0x6a73997d9bca8d0b # load another value into integer register
amomax.d x20, x20, (x19) # perform operation

# Testcase cp_rd (Test destination rd = x21)
li x21, 0xc19e0d2babd784a2 # load random value
la x11, scratch # base address
sd x21, 0(x11) # store in memory
li x21, 0x422bd16835a4e5bf # load another value into integer register
amomax.d x21, x21, (x11) # perform operation

# Testcase cp_rd (Test destination rd = x22)
li x26, 0x0dce550982ec87be # load random value
la x8, scratch # base address
sd x26, 0(x8) # store in memory
li x26, 0x6db9d232cf2c26e6 # load another value into integer register
amomax.d x22, x26, (x8) # perform operation

# Testcase cp_rd (Test destination rd = x23)
li x16, 0x0d89770172c352c7 # load random value
la x1, scratch # base address
sd x16, 0(x1) # store in memory
li x16, 0xc62e1a6839aeedf9 # load another value into integer register
amomax.d x23, x16, (x1) # perform operation

# Testcase cp_rd (Test destination rd = x24)
li x30, 0x3045abc776c09e1d # load random value
la x29, scratch # base address
sd x30, 0(x29) # store in memory
li x30, 0xdab84bc4cdfe6c3d # load another value into integer register
amomax.d x24, x30, (x29) # perform operation

# Testcase cp_rd (Test destination rd = x25)
li x22, 0x85790c8ce3bff94f # load random value
la x29, scratch # base address
sd x22, 0(x29) # store in memory
li x22, 0xbdfd5add1a81543b # load another value into integer register
amomax.d x25, x22, (x29) # perform operation

# Testcase cp_rd (Test destination rd = x26)
li x22, 0x868d2b34293095fa # load random value
la x14, scratch # base address
sd x22, 0(x14) # store in memory
li x22, 0xa0beb8c9af38eb16 # load another value into integer register
amomax.d x26, x22, (x14) # perform operation

# Testcase cp_rd (Test destination rd = x27)
li x22, 0x9996b63e50565c88 # load random value
la x8, scratch # base address
sd x22, 0(x8) # store in memory
li x22, 0x63d63b37f4ab7f6d # load another value into integer register
amomax.d x27, x22, (x8) # perform operation

# Testcase cp_rd (Test destination rd = x28)
li x28, 0xdffe2375e9f03601 # load random value
la x2, scratch # base address
sd x28, 0(x2) # store in memory
li x28, 0x6a05e2439687fe16 # load another value into integer register
amomax.d x28, x28, (x2) # perform operation

# Testcase cp_rd (Test destination rd = x29)
li x19, 0xe4f9e55d4264029f # load random value
la x6, scratch # base address
sd x19, 0(x6) # store in memory
li x19, 0x747b4a1921f2485e # load another value into integer register
amomax.d x29, x19, (x6) # perform operation

# Testcase cp_rd (Test destination rd = x30)
li x29, 0xad0bd019d045d14b # load random value
la x7, scratch # base address
sd x29, 0(x7) # store in memory
li x29, 0x6867301ddc85f74e # load another value into integer register
amomax.d x30, x29, (x7) # perform operation

# Testcase cp_rd (Test destination rd = x31)
li x16, 0x3bbc0c26f454a797 # load random value
la x10, scratch # base address
sd x16, 0(x10) # store in memory
li x16, 0x48b5583c2fa84070 # load another value into integer register
amomax.d x31, x16, (x10) # perform operation

# Testcase cp_rs2_corners (Test source rs2 value = 0x0)
li x24, 0xd984c192a1594150 # load random value
la x14, scratch # base address
sd x24, 0(x14) # store in memory
li x24, 0x0000000000000000 # load another value into integer register
amomax.d x21, x24, (x14) # perform operation

# Testcase cp_rs2_corners (Test source rs2 value = 0x1)
li x16, 0x0596f063d5f3737d # load random value
la x24, scratch # base address
sd x16, 0(x24) # store in memory
li x16, 0x0000000000000001 # load another value into integer register
amomax.d x11, x16, (x24) # perform operation

# Testcase cp_rs2_corners (Test source rs2 value = 0x2)
li x1, 0x00405762bc8936c9 # load random value
la x17, scratch # base address
sd x1, 0(x17) # store in memory
li x1, 0x0000000000000002 # load another value into integer register
amomax.d x22, x1, (x17) # perform operation

# Testcase cp_rs2_corners (Test source rs2 value = 0x8000000000000000)
li x6, 0x1cc6ddfd2aa4a291 # load random value
la x10, scratch # base address
sd x6, 0(x10) # store in memory
li x6, 0x8000000000000000 # load another value into integer register
amomax.d x27, x6, (x10) # perform operation

# Testcase cp_rs2_corners (Test source rs2 value = 0x8000000000000001)
li x6, 0xe0a4dae43366a41d # load random value
la x17, scratch # base address
sd x6, 0(x17) # store in memory
li x6, 0x8000000000000001 # load another value into integer register
amomax.d x14, x6, (x17) # perform operation

# Testcase cp_rs2_corners (Test source rs2 value = 0x7fffffffffffffff)
li x20, 0x91f60cf822e2e532 # load random value
la x25, scratch # base address
sd x20, 0(x25) # store in memory
li x20, 0x7fffffffffffffff # load another value into integer register
amomax.d x23, x20, (x25) # perform operation

# Testcase cp_rs2_corners (Test source rs2 value = 0x7ffffffffffffffe)
li x17, 0x036e5a1cbae0282b # load random value
la x1, scratch # base address
sd x17, 0(x1) # store in memory
li x17, 0x7ffffffffffffffe # load another value into integer register
amomax.d x12, x17, (x1) # perform operation

# Testcase cp_rs2_corners (Test source rs2 value = 0xffffffffffffffff)
li x20, 0xb075c9430a6fd215 # load random value
la x12, scratch # base address
sd x20, 0(x12) # store in memory
li x20, 0xffffffffffffffff # load another value into integer register
amomax.d x24, x20, (x12) # perform operation

# Testcase cp_rs2_corners (Test source rs2 value = 0xfffffffffffffffe)
li x15, 0xd9d8bf43aa43edf0 # load random value
la x14, scratch # base address
sd x15, 0(x14) # store in memory
li x15, 0xfffffffffffffffe # load another value into integer register
amomax.d x24, x15, (x14) # perform operation

# Testcase cp_rs2_corners (Test source rs2 value = 0x5bbc887763ae86f2)
li x6, 0xc26b1feddb8b43a1 # load random value
la x5, scratch # base address
sd x6, 0(x5) # store in memory
li x6, 0x5bbc887763ae86f2 # load another value into integer register
amomax.d x3, x6, (x5) # perform operation

# Testcase cp_rs2_corners (Test source rs2 value = 0xaaaaaaaaaaaaaaaa)
li x29, 0x3cda450db81f59d6 # load random value
la x5, scratch # base address
sd x29, 0(x5) # store in memory
li x29, 0xaaaaaaaaaaaaaaaa # load another value into integer register
amomax.d x11, x29, (x5) # perform operation

# Testcase cp_rs2_corners (Test source rs2 value = 0x5555555555555555)
li x7, 0x0fb3f7555a991f07 # load random value
la x14, scratch # base address
sd x7, 0(x14) # store in memory
li x7, 0x5555555555555555 # load another value into integer register
amomax.d x27, x7, (x14) # perform operation

# Testcase cp_rs2_corners (Test source rs2 value = 0xffffffff)
li x13, 0x7918f865e2760dbb # load random value
la x6, scratch # base address
sd x13, 0(x6) # store in memory
li x13, 0x00000000ffffffff # load another value into integer register
amomax.d x3, x13, (x6) # perform operation

# Testcase cp_rs2_corners (Test source rs2 value = 0xfffffffe)
li x19, 0x3f738efe6b52c67b # load random value
la x12, scratch # base address
sd x19, 0(x12) # store in memory
li x19, 0x00000000fffffffe # load another value into integer register
amomax.d x14, x19, (x12) # perform operation

# Testcase cp_rs2_corners (Test source rs2 value = 0x100000000)
li x25, 0x10ec6aeaaec19a5b # load random value
la x14, scratch # base address
sd x25, 0(x14) # store in memory
li x25, 0x0000000100000000 # load another value into integer register
amomax.d x23, x25, (x14) # perform operation

# Testcase cp_rs2_corners (Test source rs2 value = 0x100000001)
li x17, 0x3ab6c1879cba5129 # load random value
la x25, scratch # base address
sd x17, 0(x25) # store in memory
li x17, 0x0000000100000001 # load another value into integer register
amomax.d x11, x17, (x25) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x1)
li x1, 0x7f62a6750617b561 # load random value
la x1, scratch # base address
sd x1, 0(x1) # store in memory
amomax.d x1, x1, (x1) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x2)
li x2, 0xc04bebe617155979 # load random value
la x2, scratch # base address
sd x2, 0(x2) # store in memory
amomax.d x9, x2, (x2) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x3)
li x3, 0x5b5670863cc029e5 # load random value
la x3, scratch # base address
sd x3, 0(x3) # store in memory
amomax.d x20, x3, (x3) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x4)
mv x5, x4 # switch signature pointer register to avoid conflict with test
li x4, 0x01e72f3bcd024c57 # load random value
la x4, scratch # base address
sd x4, 0(x4) # store in memory
amomax.d x6, x4, (x4) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x5)
mv x6, x5 # switch signature pointer register to avoid conflict with test
li x5, 0xb1bdec588e1b2f7b # load random value
la x5, scratch # base address
sd x5, 0(x5) # store in memory
amomax.d x23, x5, (x5) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x6)
mv x7, x6 # switch signature pointer register to avoid conflict with test
li x6, 0x464e88aac093a5da # load random value
la x6, scratch # base address
sd x6, 0(x6) # store in memory
amomax.d x11, x6, (x6) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x7)
mv x4, x7 # switch signature pointer register to avoid conflict with test
li x7, 0x1b07492fa57efabd # load random value
la x7, scratch # base address
sd x7, 0(x7) # store in memory
amomax.d x20, x7, (x7) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x8)
li x8, 0x20053e937e500410 # load random value
la x8, scratch # base address
sd x8, 0(x8) # store in memory
amomax.d x15, x8, (x8) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x9)
li x9, 0x3128b44e85bbd943 # load random value
la x9, scratch # base address
sd x9, 0(x9) # store in memory
amomax.d x29, x9, (x9) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x10)
li x10, 0x4e4affc6a9b08b08 # load random value
la x10, scratch # base address
sd x10, 0(x10) # store in memory
amomax.d x18, x10, (x10) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x11)
li x11, 0x65ebab1314d8a5d7 # load random value
la x11, scratch # base address
sd x11, 0(x11) # store in memory
amomax.d x6, x11, (x11) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x12)
li x12, 0x6c2c971a5c0327c8 # load random value
la x12, scratch # base address
sd x12, 0(x12) # store in memory
amomax.d x30, x12, (x12) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x13)
li x13, 0xfb678825fa14e9a7 # load random value
la x13, scratch # base address
sd x13, 0(x13) # store in memory
amomax.d x18, x13, (x13) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x14)
li x14, 0xf249031e5647ca8a # load random value
la x14, scratch # base address
sd x14, 0(x14) # store in memory
amomax.d x27, x14, (x14) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x15)
li x15, 0x2e08455b2aecea33 # load random value
la x15, scratch # base address
sd x15, 0(x15) # store in memory
amomax.d x8, x15, (x15) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x16)
li x16, 0x953d185de24adbff # load random value
la x16, scratch # base address
sd x16, 0(x16) # store in memory
amomax.d x6, x16, (x16) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x17)
li x17, 0x67389ce7876e52b9 # load random value
la x17, scratch # base address
sd x17, 0(x17) # store in memory
amomax.d x2, x17, (x17) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x18)
li x18, 0x618de14bbeaadfb6 # load random value
la x18, scratch # base address
sd x18, 0(x18) # store in memory
amomax.d x23, x18, (x18) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x19)
li x19, 0xefe201c9463b0896 # load random value
la x19, scratch # base address
sd x19, 0(x19) # store in memory
amomax.d x30, x19, (x19) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x20)
li x20, 0x19d57df58dca7394 # load random value
la x20, scratch # base address
sd x20, 0(x20) # store in memory
amomax.d x22, x20, (x20) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x21)
li x21, 0x7ce029d445783180 # load random value
la x21, scratch # base address
sd x21, 0(x21) # store in memory
amomax.d x10, x21, (x21) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x22)
li x22, 0x5c5251a07d1bdcc2 # load random value
la x22, scratch # base address
sd x22, 0(x22) # store in memory
amomax.d x17, x22, (x22) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x23)
li x23, 0x2f76b8b914a9c2dc # load random value
la x23, scratch # base address
sd x23, 0(x23) # store in memory
amomax.d x8, x23, (x23) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x24)
li x24, 0xb9dde6d94f35ca87 # load random value
la x24, scratch # base address
sd x24, 0(x24) # store in memory
amomax.d x16, x24, (x24) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x25)
li x25, 0xe06602eb7fb48e68 # load random value
la x25, scratch # base address
sd x25, 0(x25) # store in memory
amomax.d x5, x25, (x25) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x26)
li x26, 0xb0aeacdbea170ea6 # load random value
la x26, scratch # base address
sd x26, 0(x26) # store in memory
amomax.d x26, x26, (x26) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x27)
li x27, 0x723c07fb71c36f61 # load random value
la x27, scratch # base address
sd x27, 0(x27) # store in memory
amomax.d x14, x27, (x27) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x28)
li x28, 0x74bac6fc049967cb # load random value
la x28, scratch # base address
sd x28, 0(x28) # store in memory
amomax.d x8, x28, (x28) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x29)
li x29, 0x104c22741c4d04b6 # load random value
la x29, scratch # base address
sd x29, 0(x29) # store in memory
amomax.d x17, x29, (x29) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x30)
li x30, 0x2afb8d4cf2527389 # load random value
la x30, scratch # base address
sd x30, 0(x30) # store in memory
amomax.d x3, x30, (x30) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x31)
li x31, 0x02802c777c55618c # load random value
la x31, scratch # base address
sd x31, 0(x31) # store in memory
amomax.d x20, x31, (x31) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x1)
li x30, 0x67af85e074745777 # load random value
la x1, scratch # base address
sd x30, 0(x1) # store in memory
li x30, 0x9735846411d502f0 # load another value into integer register
amomax.d x1, x30, (x1) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x2)
li x16, 0x467398135c310086 # load random value
la x2, scratch # base address
sd x16, 0(x2) # store in memory
li x16, 0x93486d156b0dbe25 # load another value into integer register
amomax.d x2, x16, (x2) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x3)
li x10, 0x7af4a6e079f32c45 # load random value
la x3, scratch # base address
sd x10, 0(x3) # store in memory
li x10, 0x484da801e1094c54 # load another value into integer register
amomax.d x3, x10, (x3) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x4)
mv x5, x4 # switch signature pointer register to avoid conflict with test
li x31, 0x7d8ee7fed97165cf # load random value
la x4, scratch # base address
sd x31, 0(x4) # store in memory
li x31, 0xb6cdf7ad3b7eb149 # load another value into integer register
amomax.d x4, x31, (x4) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x5)
mv x6, x5 # switch signature pointer register to avoid conflict with test
li x11, 0xb869c0b7dceaa237 # load random value
la x5, scratch # base address
sd x11, 0(x5) # store in memory
li x11, 0x8fde2493b8a2a831 # load another value into integer register
amomax.d x5, x11, (x5) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x6)
mv x7, x6 # switch signature pointer register to avoid conflict with test
li x13, 0xb3fa5f6485bf2b39 # load random value
la x6, scratch # base address
sd x13, 0(x6) # store in memory
li x13, 0xecbd74cb6d65d4c5 # load another value into integer register
amomax.d x6, x13, (x6) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x7)
mv x4, x7 # switch signature pointer register to avoid conflict with test
li x22, 0x46d1111a66789cb9 # load random value
la x7, scratch # base address
sd x22, 0(x7) # store in memory
li x22, 0x05c531ef7d46c80d # load another value into integer register
amomax.d x7, x22, (x7) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x8)
li x1, 0x1645436f150633c6 # load random value
la x8, scratch # base address
sd x1, 0(x8) # store in memory
li x1, 0xfee1c18ad1100778 # load another value into integer register
amomax.d x8, x1, (x8) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x9)
li x13, 0x68f6fe7383841226 # load random value
la x9, scratch # base address
sd x13, 0(x9) # store in memory
li x13, 0x94dadfa9b47f2a1f # load another value into integer register
amomax.d x9, x13, (x9) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x10)
li x29, 0xf4a17ebdf83b864b # load random value
la x10, scratch # base address
sd x29, 0(x10) # store in memory
li x29, 0xbd7a6dd4255245e7 # load another value into integer register
amomax.d x10, x29, (x10) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x11)
li x16, 0x97598c45b473b9db # load random value
la x11, scratch # base address
sd x16, 0(x11) # store in memory
li x16, 0x8d733aced3c829dc # load another value into integer register
amomax.d x11, x16, (x11) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x12)
li x20, 0x073223c8eced1582 # load random value
la x12, scratch # base address
sd x20, 0(x12) # store in memory
li x20, 0xf11be940875cda8b # load another value into integer register
amomax.d x12, x20, (x12) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x13)
li x8, 0x05355d2ba4b1a99a # load random value
la x13, scratch # base address
sd x8, 0(x13) # store in memory
li x8, 0x32feae5a931ea03b # load another value into integer register
amomax.d x13, x8, (x13) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x14)
li x9, 0xad29c32dcd3e88bd # load random value
la x14, scratch # base address
sd x9, 0(x14) # store in memory
li x9, 0x8e5ac7ac000b1a71 # load another value into integer register
amomax.d x14, x9, (x14) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x15)
li x20, 0xdf36274b9cc739ad # load random value
la x15, scratch # base address
sd x20, 0(x15) # store in memory
li x20, 0xcd1a50b0c40fd91c # load another value into integer register
amomax.d x15, x20, (x15) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x16)
li x17, 0x7ac953d1eb755000 # load random value
la x16, scratch # base address
sd x17, 0(x16) # store in memory
li x17, 0xdeca78ccfa083e34 # load another value into integer register
amomax.d x16, x17, (x16) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x17)
li x1, 0x2f43f1952842e78b # load random value
la x17, scratch # base address
sd x1, 0(x17) # store in memory
li x1, 0x963b8c79ee2c9d0c # load another value into integer register
amomax.d x17, x1, (x17) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x18)
li x8, 0xaab621353e4a5da5 # load random value
la x18, scratch # base address
sd x8, 0(x18) # store in memory
li x8, 0x75482ab79688d03e # load another value into integer register
amomax.d x18, x8, (x18) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x19)
li x1, 0x29ac5e6842e549e2 # load random value
la x19, scratch # base address
sd x1, 0(x19) # store in memory
li x1, 0x379a7eb936d0ff4e # load another value into integer register
amomax.d x19, x1, (x19) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x20)
li x21, 0xd89a0509adfdd553 # load random value
la x20, scratch # base address
sd x21, 0(x20) # store in memory
li x21, 0x28dad75e3a8c6dec # load another value into integer register
amomax.d x20, x21, (x20) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x21)
li x30, 0x725c795a38b309c9 # load random value
la x21, scratch # base address
sd x30, 0(x21) # store in memory
li x30, 0xca076332b3ebc61e # load another value into integer register
amomax.d x21, x30, (x21) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x22)
li x30, 0x598b36adfdc7c112 # load random value
la x22, scratch # base address
sd x30, 0(x22) # store in memory
li x30, 0xcc2214e4db5faba6 # load another value into integer register
amomax.d x22, x30, (x22) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x23)
li x5, 0x90b145a36aedb9bb # load random value
la x23, scratch # base address
sd x5, 0(x23) # store in memory
li x5, 0xb3daade62c655416 # load another value into integer register
amomax.d x23, x5, (x23) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x24)
li x14, 0xc9a48f4405adce59 # load random value
la x24, scratch # base address
sd x14, 0(x24) # store in memory
li x14, 0xd16a92b4bef6e15e # load another value into integer register
amomax.d x24, x14, (x24) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x25)
li x15, 0x3fcbd5168908f224 # load random value
la x25, scratch # base address
sd x15, 0(x25) # store in memory
li x15, 0xf41f843464db5b56 # load another value into integer register
amomax.d x25, x15, (x25) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x26)
li x22, 0x151b8d47f8a45b4b # load random value
la x26, scratch # base address
sd x22, 0(x26) # store in memory
li x22, 0xbaef76d22bc28a48 # load another value into integer register
amomax.d x26, x22, (x26) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x27)
li x11, 0x87f5d28596fe3317 # load random value
la x27, scratch # base address
sd x11, 0(x27) # store in memory
li x11, 0xf4852a64b939720b # load another value into integer register
amomax.d x27, x11, (x27) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x28)
li x18, 0x73ae49d812ae953a # load random value
la x28, scratch # base address
sd x18, 0(x28) # store in memory
li x18, 0x377a07ccc6560197 # load another value into integer register
amomax.d x28, x18, (x28) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x29)
li x27, 0x497ef9c2374ef398 # load random value
la x29, scratch # base address
sd x27, 0(x29) # store in memory
li x27, 0xa35e2f64a96668ae # load another value into integer register
amomax.d x29, x27, (x29) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x30)
li x8, 0xef0bd25bdcd6225a # load random value
la x30, scratch # base address
sd x8, 0(x30) # store in memory
li x8, 0x9b7dd892bf117eb7 # load another value into integer register
amomax.d x30, x8, (x30) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x31)
li x21, 0x5d6cd36ab433a028 # load random value
la x31, scratch # base address
sd x21, 0(x31) # store in memory
li x21, 0x677fe15ed7294308 # load another value into integer register
amomax.d x31, x21, (x31) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x0)
li x0, 0xb262683f8b729de4 # load random value
la x18, scratch # base address
sd x0, 0(x18) # store in memory
li x0, 0x2563f72d61a06ba7 # load another value into integer register
amomax.d x0, x0, (x18) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x1)
li x1, 0xfae5262283bf6409 # load random value
la x3, scratch # base address
sd x1, 0(x3) # store in memory
li x1, 0xc0fd18352d926434 # load another value into integer register
amomax.d x1, x1, (x3) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x2)
li x2, 0x11c277f84049c253 # load random value
la x21, scratch # base address
sd x2, 0(x21) # store in memory
li x2, 0x87501e992dcfb660 # load another value into integer register
amomax.d x2, x2, (x21) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x3)
li x3, 0x307d1772b63d8f54 # load random value
la x16, scratch # base address
sd x3, 0(x16) # store in memory
li x3, 0x64f84d640c833896 # load another value into integer register
amomax.d x3, x3, (x16) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x4)
mv x5, x4 # switch signature pointer register to avoid conflict with test
li x4, 0xdf0c04553add7d1f # load random value
la x23, scratch # base address
sd x4, 0(x23) # store in memory
li x4, 0xa9541dec31d3d373 # load another value into integer register
amomax.d x4, x4, (x23) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x5)
mv x6, x5 # switch signature pointer register to avoid conflict with test
li x5, 0x7d9ea032ec297a05 # load random value
la x12, scratch # base address
sd x5, 0(x12) # store in memory
li x5, 0xecbae920b5f9aa88 # load another value into integer register
amomax.d x5, x5, (x12) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x6)
mv x7, x6 # switch signature pointer register to avoid conflict with test
li x6, 0xa4d52753b2365d8f # load random value
la x9, scratch # base address
sd x6, 0(x9) # store in memory
li x6, 0x7c7b7ea0267660b0 # load another value into integer register
amomax.d x6, x6, (x9) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x7)
mv x4, x7 # switch signature pointer register to avoid conflict with test
li x7, 0xe9e07b40796949c7 # load random value
la x19, scratch # base address
sd x7, 0(x19) # store in memory
li x7, 0xf2fb883ab5add902 # load another value into integer register
amomax.d x7, x7, (x19) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x8)
li x8, 0xdc35f12df3ffcaf6 # load random value
la x10, scratch # base address
sd x8, 0(x10) # store in memory
li x8, 0x71b59ec0869a5092 # load another value into integer register
amomax.d x8, x8, (x10) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x9)
li x9, 0x660cd44210583a90 # load random value
la x14, scratch # base address
sd x9, 0(x14) # store in memory
li x9, 0x0d0472ad3a48f0b2 # load another value into integer register
amomax.d x9, x9, (x14) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x10)
li x10, 0x36114180c2666522 # load random value
la x6, scratch # base address
sd x10, 0(x6) # store in memory
li x10, 0x9d3da4468b265354 # load another value into integer register
amomax.d x10, x10, (x6) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x11)
li x11, 0x86b2488c2997c723 # load random value
la x6, scratch # base address
sd x11, 0(x6) # store in memory
li x11, 0x16b20d841d1ad218 # load another value into integer register
amomax.d x11, x11, (x6) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x12)
li x12, 0x7f8b608b88483aa4 # load random value
la x29, scratch # base address
sd x12, 0(x29) # store in memory
li x12, 0x34c551a3e7b53eba # load another value into integer register
amomax.d x12, x12, (x29) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x13)
li x13, 0xb8ee2dea449d0cce # load random value
la x26, scratch # base address
sd x13, 0(x26) # store in memory
li x13, 0x8c4be3d0916dd417 # load another value into integer register
amomax.d x13, x13, (x26) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x14)
li x14, 0x43512980d88da537 # load random value
la x2, scratch # base address
sd x14, 0(x2) # store in memory
li x14, 0x2e44424332cb789c # load another value into integer register
amomax.d x14, x14, (x2) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x15)
li x15, 0x56d49810a116ca1a # load random value
la x15, scratch # base address
sd x15, 0(x15) # store in memory
amomax.d x15, x15, (x15) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x16)
li x16, 0xa7e1c41411880c2a # load random value
la x11, scratch # base address
sd x16, 0(x11) # store in memory
li x16, 0x319bab1135d63073 # load another value into integer register
amomax.d x16, x16, (x11) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x17)
li x17, 0xbff5fd22f54d1445 # load random value
la x25, scratch # base address
sd x17, 0(x25) # store in memory
li x17, 0x2f8fa5219ce317a1 # load another value into integer register
amomax.d x17, x17, (x25) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x18)
li x18, 0xcf0f6a40d05606ac # load random value
la x31, scratch # base address
sd x18, 0(x31) # store in memory
li x18, 0x39784ac68149b9db # load another value into integer register
amomax.d x18, x18, (x31) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x19)
li x19, 0x2a9319533722cb6e # load random value
la x20, scratch # base address
sd x19, 0(x20) # store in memory
li x19, 0x42cbb0b8ce54b266 # load another value into integer register
amomax.d x19, x19, (x20) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x20)
li x20, 0xe030b9b7601c465a # load random value
la x13, scratch # base address
sd x20, 0(x13) # store in memory
li x20, 0x4c4238809e8e1c82 # load another value into integer register
amomax.d x20, x20, (x13) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x21)
li x21, 0x601d37e89c052d90 # load random value
la x15, scratch # base address
sd x21, 0(x15) # store in memory
li x21, 0x8a7eb1f958e302cf # load another value into integer register
amomax.d x21, x21, (x15) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x22)
li x22, 0x6827c4792c44144a # load random value
la x28, scratch # base address
sd x22, 0(x28) # store in memory
li x22, 0x35ff9fa707f325e3 # load another value into integer register
amomax.d x22, x22, (x28) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x23)
li x23, 0xff560b7c96ced13c # load random value
la x13, scratch # base address
sd x23, 0(x13) # store in memory
li x23, 0x83ca5c0e480537db # load another value into integer register
amomax.d x23, x23, (x13) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x24)
li x24, 0x5abfae0f0b6660de # load random value
la x15, scratch # base address
sd x24, 0(x15) # store in memory
li x24, 0xe5d288d60b45ddec # load another value into integer register
amomax.d x24, x24, (x15) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x25)
li x25, 0x599373f981435c9f # load random value
la x14, scratch # base address
sd x25, 0(x14) # store in memory
li x25, 0xab432092857490cb # load another value into integer register
amomax.d x25, x25, (x14) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x26)
li x26, 0x554b0e79ef8b0ce8 # load random value
la x15, scratch # base address
sd x26, 0(x15) # store in memory
li x26, 0x56b839cb563b6104 # load another value into integer register
amomax.d x26, x26, (x15) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x27)
li x27, 0xa8cdc9086d33c739 # load random value
la x13, scratch # base address
sd x27, 0(x13) # store in memory
li x27, 0xdf93a6e3a023f39c # load another value into integer register
amomax.d x27, x27, (x13) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x28)
li x28, 0x08cca39335e77234 # load random value
la x8, scratch # base address
sd x28, 0(x8) # store in memory
li x28, 0x05c2d4f3f36c5201 # load another value into integer register
amomax.d x28, x28, (x8) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x29)
li x29, 0x5e7b3566a6d85631 # load random value
la x27, scratch # base address
sd x29, 0(x27) # store in memory
li x29, 0x32695b2a0b0c7808 # load another value into integer register
amomax.d x29, x29, (x27) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x30)
li x30, 0xaa5abeabd6d7326d # load random value
la x27, scratch # base address
sd x30, 0(x27) # store in memory
li x30, 0xcbad4c1de01dbdfa # load another value into integer register
amomax.d x30, x30, (x27) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x31)
li x31, 0x8cae520cedc3836c # load random value
la x10, scratch # base address
sd x31, 0(x10) # store in memory
li x31, 0x1480daa8ed8ee01e # load another value into integer register
amomax.d x31, x31, (x10) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x1)
li x1, 0x9727d7f08c657851 # load random value
la x1, scratch # base address
sd x1, 0(x1) # store in memory
amomax.d x1, x1, (x1) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x2)
li x2, 0xf78542d8fc7da69e # load random value
la x2, scratch # base address
sd x2, 0(x2) # store in memory
amomax.d x2, x2, (x2) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x3)
li x3, 0x13130b3d5a78fb58 # load random value
la x3, scratch # base address
sd x3, 0(x3) # store in memory
amomax.d x3, x3, (x3) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x4)
mv x5, x4 # switch signature pointer register to avoid conflict with test
li x4, 0x8fb53504a5f6bca9 # load random value
la x4, scratch # base address
sd x4, 0(x4) # store in memory
amomax.d x4, x4, (x4) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x5)
mv x6, x5 # switch signature pointer register to avoid conflict with test
li x5, 0x729a6bee3b3a019f # load random value
la x5, scratch # base address
sd x5, 0(x5) # store in memory
amomax.d x5, x5, (x5) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x6)
mv x7, x6 # switch signature pointer register to avoid conflict with test
li x6, 0x7f5c3c7668e7ea25 # load random value
la x6, scratch # base address
sd x6, 0(x6) # store in memory
amomax.d x6, x6, (x6) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x7)
mv x4, x7 # switch signature pointer register to avoid conflict with test
li x7, 0xf90141e994ef2f3a # load random value
la x7, scratch # base address
sd x7, 0(x7) # store in memory
amomax.d x7, x7, (x7) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x8)
li x8, 0x1201217abdb684be # load random value
la x8, scratch # base address
sd x8, 0(x8) # store in memory
amomax.d x8, x8, (x8) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x9)
li x9, 0x066db3215c8e1b2c # load random value
la x9, scratch # base address
sd x9, 0(x9) # store in memory
amomax.d x9, x9, (x9) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x10)
li x10, 0x27f24a6ad1d7673d # load random value
la x10, scratch # base address
sd x10, 0(x10) # store in memory
amomax.d x10, x10, (x10) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x11)
li x11, 0x49231fbae8ab462c # load random value
la x11, scratch # base address
sd x11, 0(x11) # store in memory
amomax.d x11, x11, (x11) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x12)
li x12, 0xcaf75d241556a5ab # load random value
la x12, scratch # base address
sd x12, 0(x12) # store in memory
amomax.d x12, x12, (x12) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x13)
li x13, 0x1f89c23d099cc4c6 # load random value
la x13, scratch # base address
sd x13, 0(x13) # store in memory
amomax.d x13, x13, (x13) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x14)
li x14, 0xdb3505b6b731a658 # load random value
la x14, scratch # base address
sd x14, 0(x14) # store in memory
amomax.d x14, x14, (x14) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x15)
li x15, 0x58031824a4df7aad # load random value
la x15, scratch # base address
sd x15, 0(x15) # store in memory
amomax.d x15, x15, (x15) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x16)
li x16, 0x12975e938a87f9d6 # load random value
la x16, scratch # base address
sd x16, 0(x16) # store in memory
amomax.d x16, x16, (x16) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x17)
li x17, 0x73624a319ba067e4 # load random value
la x17, scratch # base address
sd x17, 0(x17) # store in memory
amomax.d x17, x17, (x17) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x18)
li x18, 0x423c5e54c9060319 # load random value
la x18, scratch # base address
sd x18, 0(x18) # store in memory
amomax.d x18, x18, (x18) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x19)
li x19, 0x8e9ece76a0ede146 # load random value
la x19, scratch # base address
sd x19, 0(x19) # store in memory
amomax.d x19, x19, (x19) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x20)
li x20, 0x6eba2b2bf3c73753 # load random value
la x20, scratch # base address
sd x20, 0(x20) # store in memory
amomax.d x20, x20, (x20) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x21)
li x21, 0x48e65ecb5ac71b09 # load random value
la x21, scratch # base address
sd x21, 0(x21) # store in memory
amomax.d x21, x21, (x21) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x22)
li x22, 0xd0406441b98f2b62 # load random value
la x22, scratch # base address
sd x22, 0(x22) # store in memory
amomax.d x22, x22, (x22) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x23)
li x23, 0x5111b95e1772475c # load random value
la x23, scratch # base address
sd x23, 0(x23) # store in memory
amomax.d x23, x23, (x23) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x24)
li x24, 0xff012fa9575dfdc2 # load random value
la x24, scratch # base address
sd x24, 0(x24) # store in memory
amomax.d x24, x24, (x24) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x25)
li x25, 0x8e9fa2e5ecbcd751 # load random value
la x25, scratch # base address
sd x25, 0(x25) # store in memory
amomax.d x25, x25, (x25) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x26)
li x26, 0xe85d9d8258e695fd # load random value
la x26, scratch # base address
sd x26, 0(x26) # store in memory
amomax.d x26, x26, (x26) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x27)
li x27, 0x5e607fad468cd497 # load random value
la x27, scratch # base address
sd x27, 0(x27) # store in memory
amomax.d x27, x27, (x27) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x28)
li x28, 0xa7c2b80f765f4928 # load random value
la x28, scratch # base address
sd x28, 0(x28) # store in memory
amomax.d x28, x28, (x28) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x29)
li x29, 0x4c05fcfb3683370f # load random value
la x29, scratch # base address
sd x29, 0(x29) # store in memory
amomax.d x29, x29, (x29) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x30)
li x30, 0xd1cf73a42aa16370 # load random value
la x30, scratch # base address
sd x30, 0(x30) # store in memory
amomax.d x30, x30, (x30) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x31)
li x31, 0x099795e3d9b97732 # load random value
la x31, scratch # base address
sd x31, 0(x31) # store in memory
amomax.d x31, x31, (x31) # perform operation

# Testcase cp_gpr/fpr_hazard nohaz test
la x13, scratch
add x19, x1, x20 # perform first operation
amomax.d x14, x3, (x13) # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard nohaz test
la x10, scratch
add x9, x24, x23 # perform first operation
amomax.d x15, x7, (x10) # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard nohaz test
la x5, scratch
add x17, x28, x6 # perform first operation
amomax.d x16, x13, (x5) # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard raw test
la x7, scratch
add x5, x5, x0 # perform first operation
amomax.d x25, x5, (x7) # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard raw test
la x18, scratch
add x18, x18, x0 # perform first operation
amomax.d x7, x12, (x18) # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard raw test
la x14, scratch
add x17, x17, x0 # perform first operation
amomax.d x2, x11, (x14) # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard waw test
la x9, scratch
add x14, x25, x30 # perform first operation
amomax.d x14, x3, (x9) # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard waw test
la x18, scratch
add x9, x3, x15 # perform first operation
amomax.d x9, x21, (x18) # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard waw test
la x24, scratch
add x26, x5, x22 # perform first operation
amomax.d x26, x31, (x24) # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard war test
la x10, scratch
add x19, x5, x27 # perform first operation
amomax.d x5, x22, (x10) # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard war test
la x31, scratch
add x16, x19, x17 # perform first operation
amomax.d x17, x10, (x31) # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard war test
la x20, scratch
add x21, x15, x25 # perform first operation
amomax.d x18, x22, (x20) # perform second (triggering) operation

#.EQU SIGSIZE,0


// ******************
// Tests from: WALLY-COV-amoxor.w.S
// ******************


# initialize signature pointer
la x4, begin_signature

    
# Testcase cp_rs1 (Test source rs1 = x1)
li x18, 0xf7b4ac2f717e7f2d # load random value
la x1, scratch # base address
sd x18, 0(x1) # store in memory
li x18, 0xf575ad6bd78e2787 # load another value into integer register
amoxor.w x19, x18, (x1) # perform operation

# Testcase cp_rs1 (Test source rs1 = x2)
li x12, 0xd994056023066ea1 # load random value
la x2, scratch # base address
sd x12, 0(x2) # store in memory
li x12, 0x63c5a46536b73dfc # load another value into integer register
amoxor.w x13, x12, (x2) # perform operation

# Testcase cp_rs1 (Test source rs1 = x3)
li x25, 0x0862b76b7841ad59 # load random value
la x3, scratch # base address
sd x25, 0(x3) # store in memory
li x25, 0x4793785dd00ab127 # load another value into integer register
amoxor.w x8, x25, (x3) # perform operation

# Testcase cp_rs1 (Test source rs1 = x4)
mv x5, x4 # switch signature pointer register to avoid conflict with test
li x10, 0x80792bf11e895a39 # load random value
la x4, scratch # base address
sd x10, 0(x4) # store in memory
li x10, 0x6d933b606b0d9363 # load another value into integer register
amoxor.w x24, x10, (x4) # perform operation

# Testcase cp_rs1 (Test source rs1 = x5)
mv x6, x5 # switch signature pointer register to avoid conflict with test
li x2, 0xc68f7e3f581b6e0a # load random value
la x5, scratch # base address
sd x2, 0(x5) # store in memory
li x2, 0x6a9bbe1489ba88ba # load another value into integer register
amoxor.w x13, x2, (x5) # perform operation

# Testcase cp_rs1 (Test source rs1 = x6)
mv x7, x6 # switch signature pointer register to avoid conflict with test
li x25, 0x7cd3069ee9d0b13a # load random value
la x6, scratch # base address
sd x25, 0(x6) # store in memory
li x25, 0x11b60bc933bb4c19 # load another value into integer register
amoxor.w x15, x25, (x6) # perform operation

# Testcase cp_rs1 (Test source rs1 = x7)
mv x4, x7 # switch signature pointer register to avoid conflict with test
li x2, 0x9f68248afe14f657 # load random value
la x7, scratch # base address
sd x2, 0(x7) # store in memory
li x2, 0x944a16dccf49f596 # load another value into integer register
amoxor.w x5, x2, (x7) # perform operation

# Testcase cp_rs1 (Test source rs1 = x8)
li x10, 0x9007420cb9b873b0 # load random value
la x8, scratch # base address
sd x10, 0(x8) # store in memory
li x10, 0x28f3476c470bb130 # load another value into integer register
amoxor.w x26, x10, (x8) # perform operation

# Testcase cp_rs1 (Test source rs1 = x9)
li x12, 0x10c64fcc9222290c # load random value
la x9, scratch # base address
sd x12, 0(x9) # store in memory
li x12, 0x08ecdc856a3cb2d0 # load another value into integer register
amoxor.w x5, x12, (x9) # perform operation

# Testcase cp_rs1 (Test source rs1 = x10)
li x30, 0x62b91c621d133dd5 # load random value
la x10, scratch # base address
sd x30, 0(x10) # store in memory
li x30, 0x4b7c48649caa7146 # load another value into integer register
amoxor.w x11, x30, (x10) # perform operation

# Testcase cp_rs1 (Test source rs1 = x11)
li x7, 0x59c66d5dc6a3cbc0 # load random value
la x11, scratch # base address
sd x7, 0(x11) # store in memory
li x7, 0x8d218d4c68ecf107 # load another value into integer register
amoxor.w x15, x7, (x11) # perform operation

# Testcase cp_rs1 (Test source rs1 = x12)
li x21, 0x9b6d29908af9726b # load random value
la x12, scratch # base address
sd x21, 0(x12) # store in memory
li x21, 0xab55dfa41376f381 # load another value into integer register
amoxor.w x25, x21, (x12) # perform operation

# Testcase cp_rs1 (Test source rs1 = x13)
li x21, 0x59d6d8f6aceee020 # load random value
la x13, scratch # base address
sd x21, 0(x13) # store in memory
li x21, 0xadc12473067b31f0 # load another value into integer register
amoxor.w x12, x21, (x13) # perform operation

# Testcase cp_rs1 (Test source rs1 = x14)
li x27, 0x888772f4f2c5bc4d # load random value
la x14, scratch # base address
sd x27, 0(x14) # store in memory
li x27, 0x8b14be50021bf187 # load another value into integer register
amoxor.w x1, x27, (x14) # perform operation

# Testcase cp_rs1 (Test source rs1 = x15)
li x31, 0x963c5b8dda1d4363 # load random value
la x15, scratch # base address
sd x31, 0(x15) # store in memory
li x31, 0x46cefa962d77cd54 # load another value into integer register
amoxor.w x17, x31, (x15) # perform operation

# Testcase cp_rs1 (Test source rs1 = x16)
li x28, 0x1ad387c60989995a # load random value
la x16, scratch # base address
sd x28, 0(x16) # store in memory
li x28, 0x6203a672fbeccf21 # load another value into integer register
amoxor.w x31, x28, (x16) # perform operation

# Testcase cp_rs1 (Test source rs1 = x17)
li x7, 0xa55f5adf164841c5 # load random value
la x17, scratch # base address
sd x7, 0(x17) # store in memory
li x7, 0x286e4acaa89c63a7 # load another value into integer register
amoxor.w x14, x7, (x17) # perform operation

# Testcase cp_rs1 (Test source rs1 = x18)
li x12, 0xd7dbfc586ff6d18f # load random value
la x18, scratch # base address
sd x12, 0(x18) # store in memory
li x12, 0xe0ceb205791cb375 # load another value into integer register
amoxor.w x3, x12, (x18) # perform operation

# Testcase cp_rs1 (Test source rs1 = x19)
li x22, 0x95d9725aeb54e563 # load random value
la x19, scratch # base address
sd x22, 0(x19) # store in memory
li x22, 0x44d9c30abafee7ae # load another value into integer register
amoxor.w x31, x22, (x19) # perform operation

# Testcase cp_rs1 (Test source rs1 = x20)
li x11, 0xca7e3a784e399985 # load random value
la x20, scratch # base address
sd x11, 0(x20) # store in memory
li x11, 0xe808b812f363b5a7 # load another value into integer register
amoxor.w x27, x11, (x20) # perform operation

# Testcase cp_rs1 (Test source rs1 = x21)
li x7, 0x7362609a6e53e4b4 # load random value
la x21, scratch # base address
sd x7, 0(x21) # store in memory
li x7, 0x0db4a9e6aaaed889 # load another value into integer register
amoxor.w x14, x7, (x21) # perform operation

# Testcase cp_rs1 (Test source rs1 = x22)
li x19, 0x807f54d833888e44 # load random value
la x22, scratch # base address
sd x19, 0(x22) # store in memory
li x19, 0xf1cd7fba1ec006b7 # load another value into integer register
amoxor.w x31, x19, (x22) # perform operation

# Testcase cp_rs1 (Test source rs1 = x23)
li x10, 0xb8b844a157ef5fcf # load random value
la x23, scratch # base address
sd x10, 0(x23) # store in memory
li x10, 0x9a39b50445f5a650 # load another value into integer register
amoxor.w x1, x10, (x23) # perform operation

# Testcase cp_rs1 (Test source rs1 = x24)
li x15, 0x6571015ef0397e4f # load random value
la x24, scratch # base address
sd x15, 0(x24) # store in memory
li x15, 0x96bd1648ee383f7e # load another value into integer register
amoxor.w x25, x15, (x24) # perform operation

# Testcase cp_rs1 (Test source rs1 = x25)
li x8, 0x3d591175d595cde1 # load random value
la x25, scratch # base address
sd x8, 0(x25) # store in memory
li x8, 0x3ba2c60e43f07b30 # load another value into integer register
amoxor.w x2, x8, (x25) # perform operation

# Testcase cp_rs1 (Test source rs1 = x26)
li x31, 0x2e63a35cceadbeb9 # load random value
la x26, scratch # base address
sd x31, 0(x26) # store in memory
li x31, 0x5872633026ba2a18 # load another value into integer register
amoxor.w x7, x31, (x26) # perform operation

# Testcase cp_rs1 (Test source rs1 = x27)
li x10, 0xe5d18510d2dddb18 # load random value
la x27, scratch # base address
sd x10, 0(x27) # store in memory
li x10, 0xf40d44819bd8546d # load another value into integer register
amoxor.w x29, x10, (x27) # perform operation

# Testcase cp_rs1 (Test source rs1 = x28)
li x10, 0x12e662044dc2b7ab # load random value
la x28, scratch # base address
sd x10, 0(x28) # store in memory
li x10, 0x107d1fb3398680d5 # load another value into integer register
amoxor.w x3, x10, (x28) # perform operation

# Testcase cp_rs1 (Test source rs1 = x29)
li x24, 0x5f36fc118a9159b2 # load random value
la x29, scratch # base address
sd x24, 0(x29) # store in memory
li x24, 0x962cf70f2fc34ff0 # load another value into integer register
amoxor.w x17, x24, (x29) # perform operation

# Testcase cp_rs1 (Test source rs1 = x30)
li x20, 0x22f42fe94b7dfd53 # load random value
la x30, scratch # base address
sd x20, 0(x30) # store in memory
li x20, 0xfd5d51f2391f5a95 # load another value into integer register
amoxor.w x13, x20, (x30) # perform operation

# Testcase cp_rs1 (Test source rs1 = x31)
li x22, 0x292ba954ffdd03d0 # load random value
la x31, scratch # base address
sd x22, 0(x31) # store in memory
li x22, 0x33c1da2206e98b1e # load another value into integer register
amoxor.w x24, x22, (x31) # perform operation

# Testcase cp_rs2 (Test source rs2 = x0)
li x0, 0xce73c2a89ef16bfd # load random value
la x17, scratch # base address
sd x0, 0(x17) # store in memory
li x0, 0x0ebc837abce1171e # load another value into integer register
amoxor.w x14, x0, (x17) # perform operation

# Testcase cp_rs2 (Test source rs2 = x1)
li x1, 0x9e6388659b57dbc9 # load random value
la x24, scratch # base address
sd x1, 0(x24) # store in memory
li x1, 0x4e059b50246d7f34 # load another value into integer register
amoxor.w x6, x1, (x24) # perform operation

# Testcase cp_rs2 (Test source rs2 = x2)
li x2, 0x4e30830f3709c6ae # load random value
la x16, scratch # base address
sd x2, 0(x16) # store in memory
li x2, 0x4b9181492ba76410 # load another value into integer register
amoxor.w x22, x2, (x16) # perform operation

# Testcase cp_rs2 (Test source rs2 = x3)
li x3, 0xd7fb5b17812d7e5a # load random value
la x9, scratch # base address
sd x3, 0(x9) # store in memory
li x3, 0x6e4505e657e9a691 # load another value into integer register
amoxor.w x5, x3, (x9) # perform operation

# Testcase cp_rs2 (Test source rs2 = x4)
mv x5, x4 # switch signature pointer register to avoid conflict with test
li x4, 0x9168ff820f5aaca3 # load random value
la x8, scratch # base address
sd x4, 0(x8) # store in memory
li x4, 0xcbce1f4b201dea83 # load another value into integer register
amoxor.w x19, x4, (x8) # perform operation

# Testcase cp_rs2 (Test source rs2 = x5)
mv x6, x5 # switch signature pointer register to avoid conflict with test
li x5, 0xf52536df69b35932 # load random value
la x15, scratch # base address
sd x5, 0(x15) # store in memory
li x5, 0x44917a80222513bb # load another value into integer register
amoxor.w x1, x5, (x15) # perform operation

# Testcase cp_rs2 (Test source rs2 = x6)
mv x7, x6 # switch signature pointer register to avoid conflict with test
li x6, 0x900310724019c173 # load random value
la x17, scratch # base address
sd x6, 0(x17) # store in memory
li x6, 0x9e77e58f7925a84d # load another value into integer register
amoxor.w x25, x6, (x17) # perform operation

# Testcase cp_rs2 (Test source rs2 = x7)
mv x4, x7 # switch signature pointer register to avoid conflict with test
li x7, 0x664efdd5b4f3069b # load random value
la x21, scratch # base address
sd x7, 0(x21) # store in memory
li x7, 0x7ec06c6e3562c0f9 # load another value into integer register
amoxor.w x14, x7, (x21) # perform operation

# Testcase cp_rs2 (Test source rs2 = x8)
li x8, 0x4c0d4b88774c5a91 # load random value
la x16, scratch # base address
sd x8, 0(x16) # store in memory
li x8, 0x01d77c7c7e69f656 # load another value into integer register
amoxor.w x2, x8, (x16) # perform operation

# Testcase cp_rs2 (Test source rs2 = x9)
li x9, 0x280f36a1fee7587f # load random value
la x29, scratch # base address
sd x9, 0(x29) # store in memory
li x9, 0x662c76863c72f9cf # load another value into integer register
amoxor.w x18, x9, (x29) # perform operation

# Testcase cp_rs2 (Test source rs2 = x10)
li x10, 0xe90bf527f12b4c4d # load random value
la x1, scratch # base address
sd x10, 0(x1) # store in memory
li x10, 0x10376618e3251a6e # load another value into integer register
amoxor.w x19, x10, (x1) # perform operation

# Testcase cp_rs2 (Test source rs2 = x11)
li x11, 0x915bc443e70b4896 # load random value
la x9, scratch # base address
sd x11, 0(x9) # store in memory
li x11, 0x287b5a913c9ce5aa # load another value into integer register
amoxor.w x30, x11, (x9) # perform operation

# Testcase cp_rs2 (Test source rs2 = x12)
li x12, 0xe4576f03bcbafe78 # load random value
la x10, scratch # base address
sd x12, 0(x10) # store in memory
li x12, 0x0eb8697ee470a241 # load another value into integer register
amoxor.w x3, x12, (x10) # perform operation

# Testcase cp_rs2 (Test source rs2 = x13)
li x13, 0x03c64c7432d7830e # load random value
la x31, scratch # base address
sd x13, 0(x31) # store in memory
li x13, 0x598fd39c9b878c10 # load another value into integer register
amoxor.w x29, x13, (x31) # perform operation

# Testcase cp_rs2 (Test source rs2 = x14)
li x14, 0x60b5a5c19dc6d17b # load random value
la x28, scratch # base address
sd x14, 0(x28) # store in memory
li x14, 0xa0f58c5a525e7872 # load another value into integer register
amoxor.w x26, x14, (x28) # perform operation

# Testcase cp_rs2 (Test source rs2 = x15)
li x15, 0x71d526cb1bef0e60 # load random value
la x24, scratch # base address
sd x15, 0(x24) # store in memory
li x15, 0x7f75c524b3cc2e09 # load another value into integer register
amoxor.w x27, x15, (x24) # perform operation

# Testcase cp_rs2 (Test source rs2 = x16)
li x16, 0xc1af29711616376f # load random value
la x2, scratch # base address
sd x16, 0(x2) # store in memory
li x16, 0xf57e78c9f825c92d # load another value into integer register
amoxor.w x20, x16, (x2) # perform operation

# Testcase cp_rs2 (Test source rs2 = x17)
li x17, 0x134892f1ac77773c # load random value
la x7, scratch # base address
sd x17, 0(x7) # store in memory
li x17, 0x126586ac04f3c524 # load another value into integer register
amoxor.w x14, x17, (x7) # perform operation

# Testcase cp_rs2 (Test source rs2 = x18)
li x18, 0x7959096156da4d71 # load random value
la x19, scratch # base address
sd x18, 0(x19) # store in memory
li x18, 0x8ccb804af1036af3 # load another value into integer register
amoxor.w x14, x18, (x19) # perform operation

# Testcase cp_rs2 (Test source rs2 = x19)
li x19, 0x936d386156ee8dbc # load random value
la x16, scratch # base address
sd x19, 0(x16) # store in memory
li x19, 0xc9d56e7039af7741 # load another value into integer register
amoxor.w x15, x19, (x16) # perform operation

# Testcase cp_rs2 (Test source rs2 = x20)
li x20, 0x3b72f8f9652215cf # load random value
la x17, scratch # base address
sd x20, 0(x17) # store in memory
li x20, 0x544ae152919cb6d2 # load another value into integer register
amoxor.w x23, x20, (x17) # perform operation

# Testcase cp_rs2 (Test source rs2 = x21)
li x21, 0x62dde418d69b8709 # load random value
la x22, scratch # base address
sd x21, 0(x22) # store in memory
li x21, 0x706cc2e2ae35ef8f # load another value into integer register
amoxor.w x18, x21, (x22) # perform operation

# Testcase cp_rs2 (Test source rs2 = x22)
li x22, 0x30e986b5be5522a2 # load random value
la x5, scratch # base address
sd x22, 0(x5) # store in memory
li x22, 0xe3c193928bf9a99a # load another value into integer register
amoxor.w x15, x22, (x5) # perform operation

# Testcase cp_rs2 (Test source rs2 = x23)
li x23, 0x704abf4dd3f7493a # load random value
la x22, scratch # base address
sd x23, 0(x22) # store in memory
li x23, 0xa65af06d0862cccd # load another value into integer register
amoxor.w x25, x23, (x22) # perform operation

# Testcase cp_rs2 (Test source rs2 = x24)
li x24, 0xc34a63ef2295be02 # load random value
la x16, scratch # base address
sd x24, 0(x16) # store in memory
li x24, 0xf22168accfdc59e3 # load another value into integer register
amoxor.w x30, x24, (x16) # perform operation

# Testcase cp_rs2 (Test source rs2 = x25)
li x25, 0xf1e57c05d78e7a36 # load random value
la x13, scratch # base address
sd x25, 0(x13) # store in memory
li x25, 0x720198c61589a8ab # load another value into integer register
amoxor.w x1, x25, (x13) # perform operation

# Testcase cp_rs2 (Test source rs2 = x26)
li x26, 0xa4f0e900ece454db # load random value
la x10, scratch # base address
sd x26, 0(x10) # store in memory
li x26, 0xe7e453355af99319 # load another value into integer register
amoxor.w x15, x26, (x10) # perform operation

# Testcase cp_rs2 (Test source rs2 = x27)
li x27, 0xac657cd213a56628 # load random value
la x13, scratch # base address
sd x27, 0(x13) # store in memory
li x27, 0xf099d8ff69f17dda # load another value into integer register
amoxor.w x12, x27, (x13) # perform operation

# Testcase cp_rs2 (Test source rs2 = x28)
li x28, 0xb2f9b57dea00232b # load random value
la x16, scratch # base address
sd x28, 0(x16) # store in memory
li x28, 0x9124462e69f37927 # load another value into integer register
amoxor.w x29, x28, (x16) # perform operation

# Testcase cp_rs2 (Test source rs2 = x29)
li x29, 0xfb6ffda07f41101a # load random value
la x15, scratch # base address
sd x29, 0(x15) # store in memory
li x29, 0x2d694d42ec408c45 # load another value into integer register
amoxor.w x30, x29, (x15) # perform operation

# Testcase cp_rs2 (Test source rs2 = x30)
li x30, 0xf8ab9cee53d00bc4 # load random value
la x22, scratch # base address
sd x30, 0(x22) # store in memory
li x30, 0xe4f163eb365a7da9 # load another value into integer register
amoxor.w x12, x30, (x22) # perform operation

# Testcase cp_rs2 (Test source rs2 = x31)
li x31, 0xf331cff524068db8 # load random value
la x16, scratch # base address
sd x31, 0(x16) # store in memory
li x31, 0x1175d06ac46a0508 # load another value into integer register
amoxor.w x21, x31, (x16) # perform operation

# Testcase cp_rd (Test destination rd = x0)
li x9, 0x3024428a0b31b480 # load random value
la x24, scratch # base address
sd x9, 0(x24) # store in memory
li x9, 0xbff57e2c4fc127e7 # load another value into integer register
amoxor.w x0, x9, (x24) # perform operation

# Testcase cp_rd (Test destination rd = x1)
li x27, 0x00fdd7829f0eaa90 # load random value
la x18, scratch # base address
sd x27, 0(x18) # store in memory
li x27, 0x8d1504ad66f61b93 # load another value into integer register
amoxor.w x1, x27, (x18) # perform operation

# Testcase cp_rd (Test destination rd = x2)
li x28, 0xde36ffea75a0a521 # load random value
la x22, scratch # base address
sd x28, 0(x22) # store in memory
li x28, 0x7e892bad2ae6839c # load another value into integer register
amoxor.w x2, x28, (x22) # perform operation

# Testcase cp_rd (Test destination rd = x3)
li x1, 0xe2ca9f01f29bb98a # load random value
la x20, scratch # base address
sd x1, 0(x20) # store in memory
li x1, 0xe3fd88bb40cd821e # load another value into integer register
amoxor.w x3, x1, (x20) # perform operation

# Testcase cp_rd (Test destination rd = x4)
mv x5, x4 # switch signature pointer register to avoid conflict with test
li x26, 0xc57e7fac8c52f991 # load random value
la x13, scratch # base address
sd x26, 0(x13) # store in memory
li x26, 0x97ade9b3594afe42 # load another value into integer register
amoxor.w x4, x26, (x13) # perform operation

# Testcase cp_rd (Test destination rd = x5)
mv x6, x5 # switch signature pointer register to avoid conflict with test
li x7, 0xbeabf37446ed3324 # load random value
la x28, scratch # base address
sd x7, 0(x28) # store in memory
li x7, 0xfc06faa735172634 # load another value into integer register
amoxor.w x5, x7, (x28) # perform operation

# Testcase cp_rd (Test destination rd = x6)
mv x7, x6 # switch signature pointer register to avoid conflict with test
li x18, 0x055b03938e1f2926 # load random value
la x9, scratch # base address
sd x18, 0(x9) # store in memory
li x18, 0x3f4732a711ec905e # load another value into integer register
amoxor.w x6, x18, (x9) # perform operation

# Testcase cp_rd (Test destination rd = x7)
mv x4, x7 # switch signature pointer register to avoid conflict with test
li x16, 0x78d5dd6e3e34f93d # load random value
la x15, scratch # base address
sd x16, 0(x15) # store in memory
li x16, 0x3a207096fbddbd4f # load another value into integer register
amoxor.w x7, x16, (x15) # perform operation

# Testcase cp_rd (Test destination rd = x8)
li x9, 0xa25868dfe412d0bd # load random value
la x11, scratch # base address
sd x9, 0(x11) # store in memory
li x9, 0x1962b06f038ca1a2 # load another value into integer register
amoxor.w x8, x9, (x11) # perform operation

# Testcase cp_rd (Test destination rd = x9)
li x12, 0x70da70b44633e224 # load random value
la x10, scratch # base address
sd x12, 0(x10) # store in memory
li x12, 0x7ad30c243727b62c # load another value into integer register
amoxor.w x9, x12, (x10) # perform operation

# Testcase cp_rd (Test destination rd = x10)
li x3, 0x8035f77e032db1a8 # load random value
la x22, scratch # base address
sd x3, 0(x22) # store in memory
li x3, 0x425ae3aadf8e2f2d # load another value into integer register
amoxor.w x10, x3, (x22) # perform operation

# Testcase cp_rd (Test destination rd = x11)
li x5, 0xa2378cc7c3206319 # load random value
la x14, scratch # base address
sd x5, 0(x14) # store in memory
li x5, 0x1aa9ada5a1d1260c # load another value into integer register
amoxor.w x11, x5, (x14) # perform operation

# Testcase cp_rd (Test destination rd = x12)
li x24, 0x52aaf86d62ede10b # load random value
la x28, scratch # base address
sd x24, 0(x28) # store in memory
li x24, 0x7ba0f29d88fc6596 # load another value into integer register
amoxor.w x12, x24, (x28) # perform operation

# Testcase cp_rd (Test destination rd = x13)
li x14, 0x1732cfbaadf86f76 # load random value
la x24, scratch # base address
sd x14, 0(x24) # store in memory
li x14, 0x5cb1ba59272c3ecf # load another value into integer register
amoxor.w x13, x14, (x24) # perform operation

# Testcase cp_rd (Test destination rd = x14)
li x20, 0x29f7faf5e8c47861 # load random value
la x11, scratch # base address
sd x20, 0(x11) # store in memory
li x20, 0xdb5ad86959fc3358 # load another value into integer register
amoxor.w x14, x20, (x11) # perform operation

# Testcase cp_rd (Test destination rd = x15)
li x19, 0x6a6d0f788e07e5f6 # load random value
la x29, scratch # base address
sd x19, 0(x29) # store in memory
li x19, 0x8999c8120aa1b7dc # load another value into integer register
amoxor.w x15, x19, (x29) # perform operation

# Testcase cp_rd (Test destination rd = x16)
li x14, 0xbf8e420348a8f4fe # load random value
la x24, scratch # base address
sd x14, 0(x24) # store in memory
li x14, 0x57319348dbbecd40 # load another value into integer register
amoxor.w x16, x14, (x24) # perform operation

# Testcase cp_rd (Test destination rd = x17)
li x21, 0x17e23a053695506e # load random value
la x19, scratch # base address
sd x21, 0(x19) # store in memory
li x21, 0x527779c9093d690b # load another value into integer register
amoxor.w x17, x21, (x19) # perform operation

# Testcase cp_rd (Test destination rd = x18)
li x18, 0xc44fc1badaf4266c # load random value
la x15, scratch # base address
sd x18, 0(x15) # store in memory
li x18, 0x5a4dc2183391f1a5 # load another value into integer register
amoxor.w x18, x18, (x15) # perform operation

# Testcase cp_rd (Test destination rd = x19)
li x11, 0x7f2ae472a6a682c0 # load random value
la x14, scratch # base address
sd x11, 0(x14) # store in memory
li x11, 0x32497656fb70c999 # load another value into integer register
amoxor.w x19, x11, (x14) # perform operation

# Testcase cp_rd (Test destination rd = x20)
li x26, 0xdce475735d46bc83 # load random value
la x18, scratch # base address
sd x26, 0(x18) # store in memory
li x26, 0x74256833690bd243 # load another value into integer register
amoxor.w x20, x26, (x18) # perform operation

# Testcase cp_rd (Test destination rd = x21)
li x16, 0xbafc6099f373e606 # load random value
la x21, scratch # base address
sd x16, 0(x21) # store in memory
li x16, 0xace5f1895e478306 # load another value into integer register
amoxor.w x21, x16, (x21) # perform operation

# Testcase cp_rd (Test destination rd = x22)
li x18, 0xcc7fb41d450b5255 # load random value
la x22, scratch # base address
sd x18, 0(x22) # store in memory
li x18, 0x6fb8bcdcaf8ad8d2 # load another value into integer register
amoxor.w x22, x18, (x22) # perform operation

# Testcase cp_rd (Test destination rd = x23)
li x18, 0xd786a0fe0e39ca51 # load random value
la x9, scratch # base address
sd x18, 0(x9) # store in memory
li x18, 0x099ca6bc98bf904d # load another value into integer register
amoxor.w x23, x18, (x9) # perform operation

# Testcase cp_rd (Test destination rd = x24)
li x6, 0x1fe99b5c73d6f3e6 # load random value
la x1, scratch # base address
sd x6, 0(x1) # store in memory
li x6, 0x9b2ec3441bacb753 # load another value into integer register
amoxor.w x24, x6, (x1) # perform operation

# Testcase cp_rd (Test destination rd = x25)
li x7, 0x66a6938108542853 # load random value
la x23, scratch # base address
sd x7, 0(x23) # store in memory
li x7, 0x4e929f9413a0b28b # load another value into integer register
amoxor.w x25, x7, (x23) # perform operation

# Testcase cp_rd (Test destination rd = x26)
li x6, 0x7c57b168fc2d36cb # load random value
la x14, scratch # base address
sd x6, 0(x14) # store in memory
li x6, 0xcacd9964fd60d827 # load another value into integer register
amoxor.w x26, x6, (x14) # perform operation

# Testcase cp_rd (Test destination rd = x27)
li x22, 0x03949404eb46d72e # load random value
la x25, scratch # base address
sd x22, 0(x25) # store in memory
li x22, 0x8506d05b73ff2777 # load another value into integer register
amoxor.w x27, x22, (x25) # perform operation

# Testcase cp_rd (Test destination rd = x28)
li x28, 0x14d0cb4ed1a80a4c # load random value
la x14, scratch # base address
sd x28, 0(x14) # store in memory
li x28, 0xed3808164507f873 # load another value into integer register
amoxor.w x28, x28, (x14) # perform operation

# Testcase cp_rd (Test destination rd = x29)
li x1, 0xef9eb808a8f40ab3 # load random value
la x18, scratch # base address
sd x1, 0(x18) # store in memory
li x1, 0xdd5a7e9aca1f4cb7 # load another value into integer register
amoxor.w x29, x1, (x18) # perform operation

# Testcase cp_rd (Test destination rd = x30)
li x20, 0x765519d832c6a3be # load random value
la x11, scratch # base address
sd x20, 0(x11) # store in memory
li x20, 0x1af3958fbd3790a7 # load another value into integer register
amoxor.w x30, x20, (x11) # perform operation

# Testcase cp_rd (Test destination rd = x31)
li x15, 0xe2f19749c1aa70fc # load random value
la x14, scratch # base address
sd x15, 0(x14) # store in memory
li x15, 0x7e8670eb684b60de # load another value into integer register
amoxor.w x31, x15, (x14) # perform operation

# Testcase cp_rs2_corners (Test source rs2 value = 0x0)
li x20, 0xfbeb9e8e46a90f83 # load random value
la x28, scratch # base address
sd x20, 0(x28) # store in memory
li x20, 0x0000000000000000 # load another value into integer register
amoxor.w x22, x20, (x28) # perform operation

# Testcase cp_rs2_corners (Test source rs2 value = 0x1)
li x20, 0x7a7d5347d164c604 # load random value
la x24, scratch # base address
sd x20, 0(x24) # store in memory
li x20, 0x0000000000000001 # load another value into integer register
amoxor.w x14, x20, (x24) # perform operation

# Testcase cp_rs2_corners (Test source rs2 value = 0x2)
li x14, 0x63ee636455000138 # load random value
la x17, scratch # base address
sd x14, 0(x17) # store in memory
li x14, 0x0000000000000002 # load another value into integer register
amoxor.w x12, x14, (x17) # perform operation

# Testcase cp_rs2_corners (Test source rs2 value = 0x8000000000000000)
li x26, 0xd054ff037e8703d1 # load random value
la x19, scratch # base address
sd x26, 0(x19) # store in memory
li x26, 0x8000000000000000 # load another value into integer register
amoxor.w x5, x26, (x19) # perform operation

# Testcase cp_rs2_corners (Test source rs2 value = 0x8000000000000001)
li x29, 0x67689470e1cc5091 # load random value
la x25, scratch # base address
sd x29, 0(x25) # store in memory
li x29, 0x8000000000000001 # load another value into integer register
amoxor.w x1, x29, (x25) # perform operation

# Testcase cp_rs2_corners (Test source rs2 value = 0x7fffffffffffffff)
li x27, 0x29c27fc619213883 # load random value
la x8, scratch # base address
sd x27, 0(x8) # store in memory
li x27, 0x7fffffffffffffff # load another value into integer register
amoxor.w x26, x27, (x8) # perform operation

# Testcase cp_rs2_corners (Test source rs2 value = 0x7ffffffffffffffe)
li x19, 0xb4fac9973dffb502 # load random value
la x5, scratch # base address
sd x19, 0(x5) # store in memory
li x19, 0x7ffffffffffffffe # load another value into integer register
amoxor.w x20, x19, (x5) # perform operation

# Testcase cp_rs2_corners (Test source rs2 value = 0xffffffffffffffff)
li x8, 0xbabdb0f4cc12f83c # load random value
la x22, scratch # base address
sd x8, 0(x22) # store in memory
li x8, 0xffffffffffffffff # load another value into integer register
amoxor.w x5, x8, (x22) # perform operation

# Testcase cp_rs2_corners (Test source rs2 value = 0xfffffffffffffffe)
li x9, 0xf970eccfde5d9d0d # load random value
la x31, scratch # base address
sd x9, 0(x31) # store in memory
li x9, 0xfffffffffffffffe # load another value into integer register
amoxor.w x20, x9, (x31) # perform operation

# Testcase cp_rs2_corners (Test source rs2 value = 0x5bbc887763ae86f2)
li x15, 0x9f867d4a455cd16f # load random value
la x31, scratch # base address
sd x15, 0(x31) # store in memory
li x15, 0x5bbc887763ae86f2 # load another value into integer register
amoxor.w x5, x15, (x31) # perform operation

# Testcase cp_rs2_corners (Test source rs2 value = 0xaaaaaaaaaaaaaaaa)
li x28, 0x9a87a6db80b4ea17 # load random value
la x9, scratch # base address
sd x28, 0(x9) # store in memory
li x28, 0xaaaaaaaaaaaaaaaa # load another value into integer register
amoxor.w x8, x28, (x9) # perform operation

# Testcase cp_rs2_corners (Test source rs2 value = 0x5555555555555555)
li x24, 0x167c4651c47694ab # load random value
la x29, scratch # base address
sd x24, 0(x29) # store in memory
li x24, 0x5555555555555555 # load another value into integer register
amoxor.w x13, x24, (x29) # perform operation

# Testcase cp_rs2_corners (Test source rs2 value = 0xffffffff)
li x21, 0x28838eaf4f3ccd73 # load random value
la x7, scratch # base address
sd x21, 0(x7) # store in memory
li x21, 0x00000000ffffffff # load another value into integer register
amoxor.w x14, x21, (x7) # perform operation

# Testcase cp_rs2_corners (Test source rs2 value = 0xfffffffe)
li x18, 0x2891e6d1a0563e4f # load random value
la x1, scratch # base address
sd x18, 0(x1) # store in memory
li x18, 0x00000000fffffffe # load another value into integer register
amoxor.w x16, x18, (x1) # perform operation

# Testcase cp_rs2_corners (Test source rs2 value = 0x100000000)
li x20, 0x5526c94467776ff7 # load random value
la x30, scratch # base address
sd x20, 0(x30) # store in memory
li x20, 0x0000000100000000 # load another value into integer register
amoxor.w x11, x20, (x30) # perform operation

# Testcase cp_rs2_corners (Test source rs2 value = 0x100000001)
li x5, 0x3e3a986dab32dbe4 # load random value
la x25, scratch # base address
sd x5, 0(x25) # store in memory
li x5, 0x0000000100000001 # load another value into integer register
amoxor.w x6, x5, (x25) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x1)
li x1, 0x69d0d74151f115af # load random value
la x1, scratch # base address
sd x1, 0(x1) # store in memory
amoxor.w x12, x1, (x1) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x2)
li x2, 0xbb8be040ccdbd1d8 # load random value
la x2, scratch # base address
sd x2, 0(x2) # store in memory
amoxor.w x14, x2, (x2) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x3)
li x3, 0x53e4f8aa7bfa67e1 # load random value
la x3, scratch # base address
sd x3, 0(x3) # store in memory
amoxor.w x14, x3, (x3) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x4)
mv x5, x4 # switch signature pointer register to avoid conflict with test
li x4, 0x8b086f6e8467ce63 # load random value
la x4, scratch # base address
sd x4, 0(x4) # store in memory
amoxor.w x26, x4, (x4) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x5)
mv x6, x5 # switch signature pointer register to avoid conflict with test
li x5, 0xacf9407fe8a96f76 # load random value
la x5, scratch # base address
sd x5, 0(x5) # store in memory
amoxor.w x3, x5, (x5) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x6)
mv x7, x6 # switch signature pointer register to avoid conflict with test
li x6, 0xc262a9317626633f # load random value
la x6, scratch # base address
sd x6, 0(x6) # store in memory
amoxor.w x9, x6, (x6) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x7)
mv x4, x7 # switch signature pointer register to avoid conflict with test
li x7, 0x9dce875c17dd0db6 # load random value
la x7, scratch # base address
sd x7, 0(x7) # store in memory
amoxor.w x13, x7, (x7) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x8)
li x8, 0x2a08ca4bb7efaaa5 # load random value
la x8, scratch # base address
sd x8, 0(x8) # store in memory
amoxor.w x10, x8, (x8) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x9)
li x9, 0x04795f8797d2fd67 # load random value
la x9, scratch # base address
sd x9, 0(x9) # store in memory
amoxor.w x5, x9, (x9) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x10)
li x10, 0xb444187714d3f88f # load random value
la x10, scratch # base address
sd x10, 0(x10) # store in memory
amoxor.w x19, x10, (x10) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x11)
li x11, 0x0326db28403a58ea # load random value
la x11, scratch # base address
sd x11, 0(x11) # store in memory
amoxor.w x31, x11, (x11) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x12)
li x12, 0x2520c7273ce1285c # load random value
la x12, scratch # base address
sd x12, 0(x12) # store in memory
amoxor.w x22, x12, (x12) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x13)
li x13, 0x619a669acaa1cf72 # load random value
la x13, scratch # base address
sd x13, 0(x13) # store in memory
amoxor.w x10, x13, (x13) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x14)
li x14, 0x5d34a9951c1639fd # load random value
la x14, scratch # base address
sd x14, 0(x14) # store in memory
amoxor.w x25, x14, (x14) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x15)
li x15, 0x7a0ea6791bf68b5d # load random value
la x15, scratch # base address
sd x15, 0(x15) # store in memory
amoxor.w x26, x15, (x15) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x16)
li x16, 0x8ecf07dcbaf267d1 # load random value
la x16, scratch # base address
sd x16, 0(x16) # store in memory
amoxor.w x22, x16, (x16) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x17)
li x17, 0xd3b588b984849652 # load random value
la x17, scratch # base address
sd x17, 0(x17) # store in memory
amoxor.w x11, x17, (x17) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x18)
li x18, 0x7391509cfb0a8813 # load random value
la x18, scratch # base address
sd x18, 0(x18) # store in memory
amoxor.w x15, x18, (x18) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x19)
li x19, 0xb9248cf3996a74fe # load random value
la x19, scratch # base address
sd x19, 0(x19) # store in memory
amoxor.w x26, x19, (x19) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x20)
li x20, 0x3ef93495f544886f # load random value
la x20, scratch # base address
sd x20, 0(x20) # store in memory
amoxor.w x18, x20, (x20) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x21)
li x21, 0xdf7320c17abc0bce # load random value
la x21, scratch # base address
sd x21, 0(x21) # store in memory
amoxor.w x7, x21, (x21) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x22)
li x22, 0xdd6974dd6794113d # load random value
la x22, scratch # base address
sd x22, 0(x22) # store in memory
amoxor.w x21, x22, (x22) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x23)
li x23, 0x57005ff0d5f3ef50 # load random value
la x23, scratch # base address
sd x23, 0(x23) # store in memory
amoxor.w x1, x23, (x23) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x24)
li x24, 0xc08c2a6b5730fe3c # load random value
la x24, scratch # base address
sd x24, 0(x24) # store in memory
amoxor.w x19, x24, (x24) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x25)
li x25, 0xcd9be8ab24ea8d19 # load random value
la x25, scratch # base address
sd x25, 0(x25) # store in memory
amoxor.w x20, x25, (x25) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x26)
li x26, 0xa53866b9a8a6c2d0 # load random value
la x26, scratch # base address
sd x26, 0(x26) # store in memory
amoxor.w x22, x26, (x26) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x27)
li x27, 0x90573b7f0453a530 # load random value
la x27, scratch # base address
sd x27, 0(x27) # store in memory
amoxor.w x11, x27, (x27) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x28)
li x28, 0x0a35a4932bfd8e60 # load random value
la x28, scratch # base address
sd x28, 0(x28) # store in memory
amoxor.w x25, x28, (x28) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x29)
li x29, 0xc663b7d45e4bdd24 # load random value
la x29, scratch # base address
sd x29, 0(x29) # store in memory
amoxor.w x25, x29, (x29) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x30)
li x30, 0x910a787c07036f3b # load random value
la x30, scratch # base address
sd x30, 0(x30) # store in memory
amoxor.w x21, x30, (x30) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x31)
li x31, 0xe0d0e8a7ee81e3e1 # load random value
la x31, scratch # base address
sd x31, 0(x31) # store in memory
amoxor.w x22, x31, (x31) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x1)
li x26, 0x1e562a59890537b3 # load random value
la x1, scratch # base address
sd x26, 0(x1) # store in memory
li x26, 0x2d603cb246a9872c # load another value into integer register
amoxor.w x1, x26, (x1) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x2)
li x16, 0x35dcfbb4e9d53f6a # load random value
la x2, scratch # base address
sd x16, 0(x2) # store in memory
li x16, 0x7fd70a0750499769 # load another value into integer register
amoxor.w x2, x16, (x2) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x3)
li x28, 0x9d215bd31cc71e21 # load random value
la x3, scratch # base address
sd x28, 0(x3) # store in memory
li x28, 0xe7d593e8e0230908 # load another value into integer register
amoxor.w x3, x28, (x3) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x4)
mv x5, x4 # switch signature pointer register to avoid conflict with test
li x19, 0xb67b325dbdc3cce1 # load random value
la x4, scratch # base address
sd x19, 0(x4) # store in memory
li x19, 0xfcf390cbd6935c03 # load another value into integer register
amoxor.w x4, x19, (x4) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x5)
mv x6, x5 # switch signature pointer register to avoid conflict with test
li x10, 0xe7c744588d66982a # load random value
la x5, scratch # base address
sd x10, 0(x5) # store in memory
li x10, 0xd5ef21716648daab # load another value into integer register
amoxor.w x5, x10, (x5) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x6)
mv x7, x6 # switch signature pointer register to avoid conflict with test
li x15, 0x3aa08facfb63703a # load random value
la x6, scratch # base address
sd x15, 0(x6) # store in memory
li x15, 0x35d07c166cd840e6 # load another value into integer register
amoxor.w x6, x15, (x6) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x7)
mv x4, x7 # switch signature pointer register to avoid conflict with test
li x29, 0xbfdd5647bcc3169b # load random value
la x7, scratch # base address
sd x29, 0(x7) # store in memory
li x29, 0xf34c80319967d206 # load another value into integer register
amoxor.w x7, x29, (x7) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x8)
li x10, 0xf21526620dd2e67f # load random value
la x8, scratch # base address
sd x10, 0(x8) # store in memory
li x10, 0x5dc726f18a673674 # load another value into integer register
amoxor.w x8, x10, (x8) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x9)
li x9, 0x66b309692ab35744 # load random value
la x9, scratch # base address
sd x9, 0(x9) # store in memory
amoxor.w x9, x9, (x9) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x10)
li x28, 0x984a4fba7befe99e # load random value
la x10, scratch # base address
sd x28, 0(x10) # store in memory
li x28, 0x380a3d7b9a6869f2 # load another value into integer register
amoxor.w x10, x28, (x10) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x11)
li x13, 0x7f816898e69a8deb # load random value
la x11, scratch # base address
sd x13, 0(x11) # store in memory
li x13, 0x41339157217c23e1 # load another value into integer register
amoxor.w x11, x13, (x11) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x12)
li x20, 0x08748be93035c79b # load random value
la x12, scratch # base address
sd x20, 0(x12) # store in memory
li x20, 0x9966750ce09c6dab # load another value into integer register
amoxor.w x12, x20, (x12) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x13)
li x6, 0xb280599d9b8385d4 # load random value
la x13, scratch # base address
sd x6, 0(x13) # store in memory
li x6, 0xfde8b572f9bfa4ce # load another value into integer register
amoxor.w x13, x6, (x13) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x14)
li x19, 0xec49a09737852271 # load random value
la x14, scratch # base address
sd x19, 0(x14) # store in memory
li x19, 0xfe30c529016e5051 # load another value into integer register
amoxor.w x14, x19, (x14) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x15)
li x5, 0x6d67942c2d9f631a # load random value
la x15, scratch # base address
sd x5, 0(x15) # store in memory
li x5, 0xc2b44a7ab54ce484 # load another value into integer register
amoxor.w x15, x5, (x15) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x16)
li x3, 0x88b6edcbb6e25775 # load random value
la x16, scratch # base address
sd x3, 0(x16) # store in memory
li x3, 0x13326e17b1da4b55 # load another value into integer register
amoxor.w x16, x3, (x16) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x17)
li x21, 0xa7a61d3a3211f52a # load random value
la x17, scratch # base address
sd x21, 0(x17) # store in memory
li x21, 0x7b6b5f2ab4345791 # load another value into integer register
amoxor.w x17, x21, (x17) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x18)
li x29, 0x4b5dc65098d6f2d6 # load random value
la x18, scratch # base address
sd x29, 0(x18) # store in memory
li x29, 0xbdde28cb79ada82a # load another value into integer register
amoxor.w x18, x29, (x18) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x19)
li x25, 0x4ddeed280ebbebd6 # load random value
la x19, scratch # base address
sd x25, 0(x19) # store in memory
li x25, 0xadfd6337a494130d # load another value into integer register
amoxor.w x19, x25, (x19) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x20)
li x8, 0xe06afc2cb4a51706 # load random value
la x20, scratch # base address
sd x8, 0(x20) # store in memory
li x8, 0x56bb86b020cb861b # load another value into integer register
amoxor.w x20, x8, (x20) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x21)
li x29, 0xf16e95520f42ba1d # load random value
la x21, scratch # base address
sd x29, 0(x21) # store in memory
li x29, 0xb813d075aeae62fe # load another value into integer register
amoxor.w x21, x29, (x21) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x22)
li x26, 0x4d28e07667465277 # load random value
la x22, scratch # base address
sd x26, 0(x22) # store in memory
li x26, 0x7198b4b771f9d500 # load another value into integer register
amoxor.w x22, x26, (x22) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x23)
li x26, 0x6c40f46e4ef5d9b9 # load random value
la x23, scratch # base address
sd x26, 0(x23) # store in memory
li x26, 0x718271cea17abae8 # load another value into integer register
amoxor.w x23, x26, (x23) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x24)
li x31, 0xeb89ac0272f7e2b8 # load random value
la x24, scratch # base address
sd x31, 0(x24) # store in memory
li x31, 0x436d0116c98ef00c # load another value into integer register
amoxor.w x24, x31, (x24) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x25)
li x12, 0xefb1d6a284e7d553 # load random value
la x25, scratch # base address
sd x12, 0(x25) # store in memory
li x12, 0xf0c504d30bb2a22d # load another value into integer register
amoxor.w x25, x12, (x25) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x26)
li x25, 0xce3620265ce0c377 # load random value
la x26, scratch # base address
sd x25, 0(x26) # store in memory
li x25, 0xf48759013877a3ea # load another value into integer register
amoxor.w x26, x25, (x26) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x27)
li x27, 0xc68ce50fd1c38c30 # load random value
la x27, scratch # base address
sd x27, 0(x27) # store in memory
amoxor.w x27, x27, (x27) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x28)
li x26, 0xb65f8ef9a58cd608 # load random value
la x28, scratch # base address
sd x26, 0(x28) # store in memory
li x26, 0xb4f4fdeb9d345cc1 # load another value into integer register
amoxor.w x28, x26, (x28) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x29)
li x23, 0x55c10f46564a6084 # load random value
la x29, scratch # base address
sd x23, 0(x29) # store in memory
li x23, 0xe76db00802ae76ef # load another value into integer register
amoxor.w x29, x23, (x29) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x30)
li x12, 0x9cb882053b3e0f80 # load random value
la x30, scratch # base address
sd x12, 0(x30) # store in memory
li x12, 0x7f34ef764cb332f8 # load another value into integer register
amoxor.w x30, x12, (x30) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x31)
li x21, 0x492e537f0088ae4c # load random value
la x31, scratch # base address
sd x21, 0(x31) # store in memory
li x21, 0x74317875b0e4ffe9 # load another value into integer register
amoxor.w x31, x21, (x31) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x0)
li x0, 0x714ee3775fc546a6 # load random value
la x26, scratch # base address
sd x0, 0(x26) # store in memory
li x0, 0x9e4abbcd3d827009 # load another value into integer register
amoxor.w x0, x0, (x26) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x1)
li x1, 0x05c30183d7256065 # load random value
la x28, scratch # base address
sd x1, 0(x28) # store in memory
li x1, 0x8a14ac4314a642d5 # load another value into integer register
amoxor.w x1, x1, (x28) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x2)
li x2, 0x300526fcfb56fa16 # load random value
la x25, scratch # base address
sd x2, 0(x25) # store in memory
li x2, 0xafd9899c794c0fef # load another value into integer register
amoxor.w x2, x2, (x25) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x3)
li x3, 0x120b0d25fda6931f # load random value
la x16, scratch # base address
sd x3, 0(x16) # store in memory
li x3, 0xadb5756cdd5767fd # load another value into integer register
amoxor.w x3, x3, (x16) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x4)
mv x5, x4 # switch signature pointer register to avoid conflict with test
li x4, 0x7caeed80717edb18 # load random value
la x21, scratch # base address
sd x4, 0(x21) # store in memory
li x4, 0x1b69623b57958546 # load another value into integer register
amoxor.w x4, x4, (x21) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x5)
mv x6, x5 # switch signature pointer register to avoid conflict with test
li x5, 0x382e0ba3c2f8be18 # load random value
la x23, scratch # base address
sd x5, 0(x23) # store in memory
li x5, 0x8a7ff37724e0afa1 # load another value into integer register
amoxor.w x5, x5, (x23) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x6)
mv x7, x6 # switch signature pointer register to avoid conflict with test
li x6, 0x7bb2da75e3465b48 # load random value
la x31, scratch # base address
sd x6, 0(x31) # store in memory
li x6, 0x375fe9be08182cd8 # load another value into integer register
amoxor.w x6, x6, (x31) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x7)
mv x4, x7 # switch signature pointer register to avoid conflict with test
li x7, 0x3636c19819971f55 # load random value
la x25, scratch # base address
sd x7, 0(x25) # store in memory
li x7, 0xc500edb15984202b # load another value into integer register
amoxor.w x7, x7, (x25) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x8)
li x8, 0xee1f7ded445af83a # load random value
la x20, scratch # base address
sd x8, 0(x20) # store in memory
li x8, 0xc19a7e085e34584f # load another value into integer register
amoxor.w x8, x8, (x20) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x9)
li x9, 0x8d64fa227a52bab5 # load random value
la x29, scratch # base address
sd x9, 0(x29) # store in memory
li x9, 0x05953b29ebbc3b00 # load another value into integer register
amoxor.w x9, x9, (x29) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x10)
li x10, 0x11c63571642294fc # load random value
la x9, scratch # base address
sd x10, 0(x9) # store in memory
li x10, 0xa3638337a36b657e # load another value into integer register
amoxor.w x10, x10, (x9) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x11)
li x11, 0x5e07f4928a36dd6a # load random value
la x26, scratch # base address
sd x11, 0(x26) # store in memory
li x11, 0xa869241983953237 # load another value into integer register
amoxor.w x11, x11, (x26) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x12)
li x12, 0x1f22b20f473f08d4 # load random value
la x7, scratch # base address
sd x12, 0(x7) # store in memory
li x12, 0xbc4609da55067ced # load another value into integer register
amoxor.w x12, x12, (x7) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x13)
li x13, 0xb5752b7491cace3c # load random value
la x21, scratch # base address
sd x13, 0(x21) # store in memory
li x13, 0xb78535139349001a # load another value into integer register
amoxor.w x13, x13, (x21) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x14)
li x14, 0x01a3a6cdf54be5bc # load random value
la x16, scratch # base address
sd x14, 0(x16) # store in memory
li x14, 0x77d5a761afa084b9 # load another value into integer register
amoxor.w x14, x14, (x16) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x15)
li x15, 0x5bc9b0008b62957c # load random value
la x26, scratch # base address
sd x15, 0(x26) # store in memory
li x15, 0x23dd69451d3c573e # load another value into integer register
amoxor.w x15, x15, (x26) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x16)
li x16, 0x7e133e0ba8db18d9 # load random value
la x6, scratch # base address
sd x16, 0(x6) # store in memory
li x16, 0x361aae74507cfe03 # load another value into integer register
amoxor.w x16, x16, (x6) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x17)
li x17, 0x22f7a4ab143e0d7b # load random value
la x16, scratch # base address
sd x17, 0(x16) # store in memory
li x17, 0x85782befb5370e84 # load another value into integer register
amoxor.w x17, x17, (x16) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x18)
li x18, 0xc6fac049a08ece7f # load random value
la x20, scratch # base address
sd x18, 0(x20) # store in memory
li x18, 0x6ca070c3e6fb7836 # load another value into integer register
amoxor.w x18, x18, (x20) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x19)
li x19, 0x5fd7d87b670598a9 # load random value
la x9, scratch # base address
sd x19, 0(x9) # store in memory
li x19, 0x7a031cee0bff753b # load another value into integer register
amoxor.w x19, x19, (x9) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x20)
li x20, 0x41bfb9f5cdff9dda # load random value
la x31, scratch # base address
sd x20, 0(x31) # store in memory
li x20, 0xa8ff192a18637698 # load another value into integer register
amoxor.w x20, x20, (x31) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x21)
li x21, 0x039137fba03f14f9 # load random value
la x3, scratch # base address
sd x21, 0(x3) # store in memory
li x21, 0x307d923fcb38e019 # load another value into integer register
amoxor.w x21, x21, (x3) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x22)
li x22, 0xea3c1616aaa78b5e # load random value
la x25, scratch # base address
sd x22, 0(x25) # store in memory
li x22, 0xee69bd6002d5632a # load another value into integer register
amoxor.w x22, x22, (x25) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x23)
li x23, 0x899f2aa3b84ab1ee # load random value
la x29, scratch # base address
sd x23, 0(x29) # store in memory
li x23, 0x0edffeea53749883 # load another value into integer register
amoxor.w x23, x23, (x29) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x24)
li x24, 0xac68cb11a6cae00d # load random value
la x20, scratch # base address
sd x24, 0(x20) # store in memory
li x24, 0x2d4e6b19838fc19b # load another value into integer register
amoxor.w x24, x24, (x20) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x25)
li x25, 0x48d626b3180b916e # load random value
la x28, scratch # base address
sd x25, 0(x28) # store in memory
li x25, 0x3e2cac9c8f09b8b1 # load another value into integer register
amoxor.w x25, x25, (x28) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x26)
li x26, 0xbe8eb06a808d2e52 # load random value
la x8, scratch # base address
sd x26, 0(x8) # store in memory
li x26, 0x8629ceb2c3644e97 # load another value into integer register
amoxor.w x26, x26, (x8) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x27)
li x27, 0x41dc1d2df9227709 # load random value
la x15, scratch # base address
sd x27, 0(x15) # store in memory
li x27, 0x79b132db43d0bf85 # load another value into integer register
amoxor.w x27, x27, (x15) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x28)
li x28, 0x5507f1741b77eada # load random value
la x26, scratch # base address
sd x28, 0(x26) # store in memory
li x28, 0x3742a52cb86ed60f # load another value into integer register
amoxor.w x28, x28, (x26) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x29)
li x29, 0xa6518e37305555db # load random value
la x9, scratch # base address
sd x29, 0(x9) # store in memory
li x29, 0x517bd08b504b0fe8 # load another value into integer register
amoxor.w x29, x29, (x9) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x30)
li x30, 0xb47324fa2479bc69 # load random value
la x31, scratch # base address
sd x30, 0(x31) # store in memory
li x30, 0xfcdafb243ae7c3cb # load another value into integer register
amoxor.w x30, x30, (x31) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x31)
li x31, 0x16770a502e880217 # load random value
la x9, scratch # base address
sd x31, 0(x9) # store in memory
li x31, 0x270c9e079edd08fa # load another value into integer register
amoxor.w x31, x31, (x9) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x1)
li x1, 0x2ae5d2b72b2ab029 # load random value
la x1, scratch # base address
sd x1, 0(x1) # store in memory
amoxor.w x1, x1, (x1) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x2)
li x2, 0x7cce235caa5767d6 # load random value
la x2, scratch # base address
sd x2, 0(x2) # store in memory
amoxor.w x2, x2, (x2) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x3)
li x3, 0x435a227727bb5e40 # load random value
la x3, scratch # base address
sd x3, 0(x3) # store in memory
amoxor.w x3, x3, (x3) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x4)
mv x5, x4 # switch signature pointer register to avoid conflict with test
li x4, 0x122a8946f2d10da8 # load random value
la x4, scratch # base address
sd x4, 0(x4) # store in memory
amoxor.w x4, x4, (x4) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x5)
mv x6, x5 # switch signature pointer register to avoid conflict with test
li x5, 0x926afde3c6d77929 # load random value
la x5, scratch # base address
sd x5, 0(x5) # store in memory
amoxor.w x5, x5, (x5) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x6)
mv x7, x6 # switch signature pointer register to avoid conflict with test
li x6, 0xe768079a498ab5b0 # load random value
la x6, scratch # base address
sd x6, 0(x6) # store in memory
amoxor.w x6, x6, (x6) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x7)
mv x4, x7 # switch signature pointer register to avoid conflict with test
li x7, 0x8ae36bdff0f3ab7d # load random value
la x7, scratch # base address
sd x7, 0(x7) # store in memory
amoxor.w x7, x7, (x7) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x8)
li x8, 0xb1ee1245bb373493 # load random value
la x8, scratch # base address
sd x8, 0(x8) # store in memory
amoxor.w x8, x8, (x8) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x9)
li x9, 0x7f383c4aaf4ec002 # load random value
la x9, scratch # base address
sd x9, 0(x9) # store in memory
amoxor.w x9, x9, (x9) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x10)
li x10, 0x39a4db8e7a2a082a # load random value
la x10, scratch # base address
sd x10, 0(x10) # store in memory
amoxor.w x10, x10, (x10) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x11)
li x11, 0x1fd82119d75258d7 # load random value
la x11, scratch # base address
sd x11, 0(x11) # store in memory
amoxor.w x11, x11, (x11) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x12)
li x12, 0xa4008dd1dc344e50 # load random value
la x12, scratch # base address
sd x12, 0(x12) # store in memory
amoxor.w x12, x12, (x12) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x13)
li x13, 0xcf0f728f266c9f31 # load random value
la x13, scratch # base address
sd x13, 0(x13) # store in memory
amoxor.w x13, x13, (x13) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x14)
li x14, 0xae069167ca9467f3 # load random value
la x14, scratch # base address
sd x14, 0(x14) # store in memory
amoxor.w x14, x14, (x14) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x15)
li x15, 0xb0cc7998f89b6101 # load random value
la x15, scratch # base address
sd x15, 0(x15) # store in memory
amoxor.w x15, x15, (x15) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x16)
li x16, 0x0e9ce693449967c0 # load random value
la x16, scratch # base address
sd x16, 0(x16) # store in memory
amoxor.w x16, x16, (x16) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x17)
li x17, 0xafea13520775594f # load random value
la x17, scratch # base address
sd x17, 0(x17) # store in memory
amoxor.w x17, x17, (x17) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x18)
li x18, 0x148302971a9458ba # load random value
la x18, scratch # base address
sd x18, 0(x18) # store in memory
amoxor.w x18, x18, (x18) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x19)
li x19, 0x8ca69f947f5b4102 # load random value
la x19, scratch # base address
sd x19, 0(x19) # store in memory
amoxor.w x19, x19, (x19) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x20)
li x20, 0xfb1980a654ba1d57 # load random value
la x20, scratch # base address
sd x20, 0(x20) # store in memory
amoxor.w x20, x20, (x20) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x21)
li x21, 0x1c6ef9a2241d1f55 # load random value
la x21, scratch # base address
sd x21, 0(x21) # store in memory
amoxor.w x21, x21, (x21) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x22)
li x22, 0xead0411ae4d0aecc # load random value
la x22, scratch # base address
sd x22, 0(x22) # store in memory
amoxor.w x22, x22, (x22) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x23)
li x23, 0x279a75f23eb73451 # load random value
la x23, scratch # base address
sd x23, 0(x23) # store in memory
amoxor.w x23, x23, (x23) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x24)
li x24, 0x3712d0e4329cec06 # load random value
la x24, scratch # base address
sd x24, 0(x24) # store in memory
amoxor.w x24, x24, (x24) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x25)
li x25, 0x68430bf0d14b493c # load random value
la x25, scratch # base address
sd x25, 0(x25) # store in memory
amoxor.w x25, x25, (x25) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x26)
li x26, 0x30339abc132fb6ff # load random value
la x26, scratch # base address
sd x26, 0(x26) # store in memory
amoxor.w x26, x26, (x26) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x27)
li x27, 0x89ce7bb3a7e5bbfc # load random value
la x27, scratch # base address
sd x27, 0(x27) # store in memory
amoxor.w x27, x27, (x27) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x28)
li x28, 0xdb9d4bd1fb9ffee4 # load random value
la x28, scratch # base address
sd x28, 0(x28) # store in memory
amoxor.w x28, x28, (x28) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x29)
li x29, 0xb38d995078361293 # load random value
la x29, scratch # base address
sd x29, 0(x29) # store in memory
amoxor.w x29, x29, (x29) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x30)
li x30, 0xc9208820c9ab7211 # load random value
la x30, scratch # base address
sd x30, 0(x30) # store in memory
amoxor.w x30, x30, (x30) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x31)
li x31, 0x61031f33cd5d2cde # load random value
la x31, scratch # base address
sd x31, 0(x31) # store in memory
amoxor.w x31, x31, (x31) # perform operation

# Testcase cp_gpr/fpr_hazard nohaz test
la x9, scratch
add x31, x17, x27 # perform first operation
amoxor.w x14, x22, (x9) # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard nohaz test
la x30, scratch
add x10, x27, x26 # perform first operation
amoxor.w x28, x2, (x30) # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard nohaz test
la x13, scratch
add x24, x22, x30 # perform first operation
amoxor.w x27, x29, (x13) # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard raw test
la x12, scratch
add x24, x24, x0 # perform first operation
amoxor.w x24, x24, (x12) # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard raw test
la x22, scratch
add x14, x14, x0 # perform first operation
amoxor.w x14, x12, (x22) # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard raw test
la x16, scratch
add x19, x19, x0 # perform first operation
amoxor.w x18, x19, (x16) # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard waw test
la x23, scratch
add x10, x18, x22 # perform first operation
amoxor.w x10, x31, (x23) # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard waw test
la x15, scratch
add x21, x13, x20 # perform first operation
amoxor.w x21, x16, (x15) # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard waw test
la x31, scratch
add x12, x25, x15 # perform first operation
amoxor.w x12, x11, (x31) # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard war test
la x23, scratch
add x18, x19, x1 # perform first operation
amoxor.w x19, x31, (x23) # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard war test
la x16, scratch
add x12, x21, x8 # perform first operation
amoxor.w x8, x28, (x16) # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard war test
la x17, scratch
add x10, x2, x11 # perform first operation
amoxor.w x14, x25, (x17) # perform second (triggering) operation

#.EQU SIGSIZE,0


// ******************
// Tests from: WALLY-COV-amoor.w.S
// ******************


# initialize signature pointer
la x4, begin_signature

    
# Testcase cp_rs1 (Test source rs1 = x1)
li x13, 0x7b9bcbe4404be8a8 # load random value
la x1, scratch # base address
sd x13, 0(x1) # store in memory
li x13, 0x43b916c2ff886494 # load another value into integer register
amoor.w x6, x13, (x1) # perform operation

# Testcase cp_rs1 (Test source rs1 = x2)
li x3, 0xa1ce8c4b759bef3a # load random value
la x2, scratch # base address
sd x3, 0(x2) # store in memory
li x3, 0x2d2677ccca6383b3 # load another value into integer register
amoor.w x19, x3, (x2) # perform operation

# Testcase cp_rs1 (Test source rs1 = x3)
li x9, 0x14a3bcbf9cebfff0 # load random value
la x3, scratch # base address
sd x9, 0(x3) # store in memory
li x9, 0x8a8d1fee90be12c9 # load another value into integer register
amoor.w x24, x9, (x3) # perform operation

# Testcase cp_rs1 (Test source rs1 = x4)
mv x5, x4 # switch signature pointer register to avoid conflict with test
li x27, 0x1c6bb8e110e0e4d5 # load random value
la x4, scratch # base address
sd x27, 0(x4) # store in memory
li x27, 0x41ad4c0dd210847d # load another value into integer register
amoor.w x3, x27, (x4) # perform operation

# Testcase cp_rs1 (Test source rs1 = x5)
mv x7, x5 # switch signature pointer register to avoid conflict with test
li x27, 0xa490bd043339bfb5 # load random value
la x5, scratch # base address
sd x27, 0(x5) # store in memory
li x27, 0x7073a0d56ca2324f # load another value into integer register
amoor.w x6, x27, (x5) # perform operation

# Testcase cp_rs1 (Test source rs1 = x6)
li x17, 0x668f203cc24d142a # load random value
la x6, scratch # base address
sd x17, 0(x6) # store in memory
li x17, 0xee455fab480b29e2 # load another value into integer register
amoor.w x14, x17, (x6) # perform operation

# Testcase cp_rs1 (Test source rs1 = x7)
mv x4, x7 # switch signature pointer register to avoid conflict with test
li x27, 0xde4c28c60933e978 # load random value
la x7, scratch # base address
sd x27, 0(x7) # store in memory
li x27, 0x768e5812590cea83 # load another value into integer register
amoor.w x18, x27, (x7) # perform operation

# Testcase cp_rs1 (Test source rs1 = x8)
li x19, 0x5be934095495ecb0 # load random value
la x8, scratch # base address
sd x19, 0(x8) # store in memory
li x19, 0xa7ed6bac4330e90d # load another value into integer register
amoor.w x23, x19, (x8) # perform operation

# Testcase cp_rs1 (Test source rs1 = x9)
li x1, 0xe33e66869643ab15 # load random value
la x9, scratch # base address
sd x1, 0(x9) # store in memory
li x1, 0x9ab5f29ce5898864 # load another value into integer register
amoor.w x15, x1, (x9) # perform operation

# Testcase cp_rs1 (Test source rs1 = x10)
li x9, 0x26df1e00e265974a # load random value
la x10, scratch # base address
sd x9, 0(x10) # store in memory
li x9, 0x8b6b34ac25d81208 # load another value into integer register
amoor.w x31, x9, (x10) # perform operation

# Testcase cp_rs1 (Test source rs1 = x11)
li x20, 0xd184bbefb4a9e40e # load random value
la x11, scratch # base address
sd x20, 0(x11) # store in memory
li x20, 0x2998b058c5f391bc # load another value into integer register
amoor.w x15, x20, (x11) # perform operation

# Testcase cp_rs1 (Test source rs1 = x12)
li x31, 0x1d3a65cfd557c94f # load random value
la x12, scratch # base address
sd x31, 0(x12) # store in memory
li x31, 0x3343b025aea3ae16 # load another value into integer register
amoor.w x2, x31, (x12) # perform operation

# Testcase cp_rs1 (Test source rs1 = x13)
li x7, 0xceba33e6d1ebc645 # load random value
la x13, scratch # base address
sd x7, 0(x13) # store in memory
li x7, 0xd2dd608d1e9e42cd # load another value into integer register
amoor.w x17, x7, (x13) # perform operation

# Testcase cp_rs1 (Test source rs1 = x14)
li x17, 0x754a0c41d8e47192 # load random value
la x14, scratch # base address
sd x17, 0(x14) # store in memory
li x17, 0x086868aa36fc119c # load another value into integer register
amoor.w x8, x17, (x14) # perform operation

# Testcase cp_rs1 (Test source rs1 = x15)
li x10, 0xecbc4cd95f966bbd # load random value
la x15, scratch # base address
sd x10, 0(x15) # store in memory
li x10, 0x9168c86ba0fc107b # load another value into integer register
amoor.w x17, x10, (x15) # perform operation

# Testcase cp_rs1 (Test source rs1 = x16)
li x6, 0xab720d8bfc091ea0 # load random value
la x16, scratch # base address
sd x6, 0(x16) # store in memory
li x6, 0x88cd005a38ec7560 # load another value into integer register
amoor.w x25, x6, (x16) # perform operation

# Testcase cp_rs1 (Test source rs1 = x17)
li x31, 0xc0786a2aa06a4c59 # load random value
la x17, scratch # base address
sd x31, 0(x17) # store in memory
li x31, 0x83a25d63b0026e18 # load another value into integer register
amoor.w x8, x31, (x17) # perform operation

# Testcase cp_rs1 (Test source rs1 = x18)
li x16, 0x6d5497ef79cf3279 # load random value
la x18, scratch # base address
sd x16, 0(x18) # store in memory
li x16, 0x1ba0c0b72679edc1 # load another value into integer register
amoor.w x31, x16, (x18) # perform operation

# Testcase cp_rs1 (Test source rs1 = x19)
li x1, 0xdc64615b84c78c41 # load random value
la x19, scratch # base address
sd x1, 0(x19) # store in memory
li x1, 0x23d3532b00981526 # load another value into integer register
amoor.w x17, x1, (x19) # perform operation

# Testcase cp_rs1 (Test source rs1 = x20)
li x22, 0x5352d85ac31b9a9a # load random value
la x20, scratch # base address
sd x22, 0(x20) # store in memory
li x22, 0x13ab6a37f31cb8a4 # load another value into integer register
amoor.w x23, x22, (x20) # perform operation

# Testcase cp_rs1 (Test source rs1 = x21)
li x30, 0x8f413761f62f2845 # load random value
la x21, scratch # base address
sd x30, 0(x21) # store in memory
li x30, 0x532bb3dba4511035 # load another value into integer register
amoor.w x27, x30, (x21) # perform operation

# Testcase cp_rs1 (Test source rs1 = x22)
li x1, 0x406fa56579986081 # load random value
la x22, scratch # base address
sd x1, 0(x22) # store in memory
li x1, 0x2933d6643240f527 # load another value into integer register
amoor.w x30, x1, (x22) # perform operation

# Testcase cp_rs1 (Test source rs1 = x23)
li x31, 0x76bdc86409666978 # load random value
la x23, scratch # base address
sd x31, 0(x23) # store in memory
li x31, 0x38f6ee926d69d548 # load another value into integer register
amoor.w x2, x31, (x23) # perform operation

# Testcase cp_rs1 (Test source rs1 = x24)
li x1, 0x3fab304301f286d2 # load random value
la x24, scratch # base address
sd x1, 0(x24) # store in memory
li x1, 0xb19863346db81182 # load another value into integer register
amoor.w x12, x1, (x24) # perform operation

# Testcase cp_rs1 (Test source rs1 = x25)
li x6, 0x54515b8a93ebb15b # load random value
la x25, scratch # base address
sd x6, 0(x25) # store in memory
li x6, 0xbc2966ebbbdb1122 # load another value into integer register
amoor.w x9, x6, (x25) # perform operation

# Testcase cp_rs1 (Test source rs1 = x26)
li x11, 0xb19e9d9688080e00 # load random value
la x26, scratch # base address
sd x11, 0(x26) # store in memory
li x11, 0x0e1533313a5e64e2 # load another value into integer register
amoor.w x5, x11, (x26) # perform operation

# Testcase cp_rs1 (Test source rs1 = x27)
li x21, 0x3144fa821b7480e6 # load random value
la x27, scratch # base address
sd x21, 0(x27) # store in memory
li x21, 0xd4191c5aea9ee41a # load another value into integer register
amoor.w x8, x21, (x27) # perform operation

# Testcase cp_rs1 (Test source rs1 = x28)
li x16, 0x0d6ba53d80a5c63e # load random value
la x28, scratch # base address
sd x16, 0(x28) # store in memory
li x16, 0x5a2956a0fd31e096 # load another value into integer register
amoor.w x11, x16, (x28) # perform operation

# Testcase cp_rs1 (Test source rs1 = x29)
li x27, 0x9983e839345e0e40 # load random value
la x29, scratch # base address
sd x27, 0(x29) # store in memory
li x27, 0x20252ed00cf453ce # load another value into integer register
amoor.w x21, x27, (x29) # perform operation

# Testcase cp_rs1 (Test source rs1 = x30)
li x29, 0x14965afd884097ba # load random value
la x30, scratch # base address
sd x29, 0(x30) # store in memory
li x29, 0xe6912ad47843b95e # load another value into integer register
amoor.w x16, x29, (x30) # perform operation

# Testcase cp_rs1 (Test source rs1 = x31)
li x3, 0xd2b2646812cf75c9 # load random value
la x31, scratch # base address
sd x3, 0(x31) # store in memory
li x3, 0xbc4b9149412efb70 # load another value into integer register
amoor.w x5, x3, (x31) # perform operation

# Testcase cp_rs2 (Test source rs2 = x0)
li x0, 0x8ca064244cea6569 # load random value
la x30, scratch # base address
sd x0, 0(x30) # store in memory
li x0, 0xd11f055a3d06fee6 # load another value into integer register
amoor.w x5, x0, (x30) # perform operation

# Testcase cp_rs2 (Test source rs2 = x1)
li x1, 0x2362a01ee9f11725 # load random value
la x17, scratch # base address
sd x1, 0(x17) # store in memory
li x1, 0xa12b3d3c56a59ecf # load another value into integer register
amoor.w x27, x1, (x17) # perform operation

# Testcase cp_rs2 (Test source rs2 = x2)
li x2, 0x3adc3394f4552991 # load random value
la x23, scratch # base address
sd x2, 0(x23) # store in memory
li x2, 0xc9562a27c9fa07d5 # load another value into integer register
amoor.w x5, x2, (x23) # perform operation

# Testcase cp_rs2 (Test source rs2 = x3)
li x3, 0x4ee80a1b91f9729c # load random value
la x24, scratch # base address
sd x3, 0(x24) # store in memory
li x3, 0x4bc4a297e71ea3ad # load another value into integer register
amoor.w x16, x3, (x24) # perform operation

# Testcase cp_rs2 (Test source rs2 = x4)
mv x5, x4 # switch signature pointer register to avoid conflict with test
li x4, 0x7e10696218cbc65c # load random value
la x1, scratch # base address
sd x4, 0(x1) # store in memory
li x4, 0xff9878da29e0f07a # load another value into integer register
amoor.w x9, x4, (x1) # perform operation

# Testcase cp_rs2 (Test source rs2 = x5)
mv x7, x5 # switch signature pointer register to avoid conflict with test
li x5, 0x8e2c46029febdea1 # load random value
la x6, scratch # base address
sd x5, 0(x6) # store in memory
li x5, 0xd7319802181a753a # load another value into integer register
amoor.w x26, x5, (x6) # perform operation

# Testcase cp_rs2 (Test source rs2 = x6)
li x6, 0xe7eb1663375a2075 # load random value
la x31, scratch # base address
sd x6, 0(x31) # store in memory
li x6, 0xe4ef7d8377c69c39 # load another value into integer register
amoor.w x27, x6, (x31) # perform operation

# Testcase cp_rs2 (Test source rs2 = x7)
mv x4, x7 # switch signature pointer register to avoid conflict with test
li x7, 0x644dd3179743b580 # load random value
la x14, scratch # base address
sd x7, 0(x14) # store in memory
li x7, 0x977ad5155ba29510 # load another value into integer register
amoor.w x15, x7, (x14) # perform operation

# Testcase cp_rs2 (Test source rs2 = x8)
li x8, 0x753d7ec13c8dc516 # load random value
la x13, scratch # base address
sd x8, 0(x13) # store in memory
li x8, 0xd4d599a417c93a97 # load another value into integer register
amoor.w x12, x8, (x13) # perform operation

# Testcase cp_rs2 (Test source rs2 = x9)
li x9, 0x087f2b936ca86543 # load random value
la x17, scratch # base address
sd x9, 0(x17) # store in memory
li x9, 0x1b8fd2149106efeb # load another value into integer register
amoor.w x15, x9, (x17) # perform operation

# Testcase cp_rs2 (Test source rs2 = x10)
li x10, 0x1e9fd6202a21e2f1 # load random value
la x21, scratch # base address
sd x10, 0(x21) # store in memory
li x10, 0xb00270054a9c6988 # load another value into integer register
amoor.w x23, x10, (x21) # perform operation

# Testcase cp_rs2 (Test source rs2 = x11)
li x11, 0xab065c75a298f52b # load random value
la x22, scratch # base address
sd x11, 0(x22) # store in memory
li x11, 0x50205eccbf55dbda # load another value into integer register
amoor.w x18, x11, (x22) # perform operation

# Testcase cp_rs2 (Test source rs2 = x12)
li x12, 0x7713cd3b615f6424 # load random value
la x18, scratch # base address
sd x12, 0(x18) # store in memory
li x12, 0xc26af8b52277f6c2 # load another value into integer register
amoor.w x30, x12, (x18) # perform operation

# Testcase cp_rs2 (Test source rs2 = x13)
li x13, 0x0044d38586501388 # load random value
la x26, scratch # base address
sd x13, 0(x26) # store in memory
li x13, 0xd7cdec7eef2ed55e # load another value into integer register
amoor.w x5, x13, (x26) # perform operation

# Testcase cp_rs2 (Test source rs2 = x14)
li x14, 0xc8a2e7bd26e556fd # load random value
la x5, scratch # base address
sd x14, 0(x5) # store in memory
li x14, 0xb36195ef991bbad8 # load another value into integer register
amoor.w x18, x14, (x5) # perform operation

# Testcase cp_rs2 (Test source rs2 = x15)
li x15, 0x0e124820e4715707 # load random value
la x16, scratch # base address
sd x15, 0(x16) # store in memory
li x15, 0xd5dd66e32b8751d0 # load another value into integer register
amoor.w x8, x15, (x16) # perform operation

# Testcase cp_rs2 (Test source rs2 = x16)
li x16, 0xde5e5acee306844a # load random value
la x7, scratch # base address
sd x16, 0(x7) # store in memory
li x16, 0x27745631ec05d3d2 # load another value into integer register
amoor.w x3, x16, (x7) # perform operation

# Testcase cp_rs2 (Test source rs2 = x17)
li x17, 0x77f9c8adbb64a077 # load random value
la x13, scratch # base address
sd x17, 0(x13) # store in memory
li x17, 0xe93bc7ea55e548c0 # load another value into integer register
amoor.w x15, x17, (x13) # perform operation

# Testcase cp_rs2 (Test source rs2 = x18)
li x18, 0x5d63457fc3cc4274 # load random value
la x20, scratch # base address
sd x18, 0(x20) # store in memory
li x18, 0xdd708beae8fc9902 # load another value into integer register
amoor.w x29, x18, (x20) # perform operation

# Testcase cp_rs2 (Test source rs2 = x19)
li x19, 0x171ac655ddfa3976 # load random value
la x8, scratch # base address
sd x19, 0(x8) # store in memory
li x19, 0xf860714f8582d61a # load another value into integer register
amoor.w x25, x19, (x8) # perform operation

# Testcase cp_rs2 (Test source rs2 = x20)
li x20, 0x820ec186b32dae0e # load random value
la x7, scratch # base address
sd x20, 0(x7) # store in memory
li x20, 0x11341d8ba65ae5e6 # load another value into integer register
amoor.w x13, x20, (x7) # perform operation

# Testcase cp_rs2 (Test source rs2 = x21)
li x21, 0x162a6e6ed0311d97 # load random value
la x2, scratch # base address
sd x21, 0(x2) # store in memory
li x21, 0x97d07837502dceb5 # load another value into integer register
amoor.w x20, x21, (x2) # perform operation

# Testcase cp_rs2 (Test source rs2 = x22)
li x22, 0xb68bce1565519f97 # load random value
la x2, scratch # base address
sd x22, 0(x2) # store in memory
li x22, 0x5d4e1ba116b27e73 # load another value into integer register
amoor.w x6, x22, (x2) # perform operation

# Testcase cp_rs2 (Test source rs2 = x23)
li x23, 0x7b2b7ece6ee4574a # load random value
la x7, scratch # base address
sd x23, 0(x7) # store in memory
li x23, 0x225ba6d145fbda49 # load another value into integer register
amoor.w x11, x23, (x7) # perform operation

# Testcase cp_rs2 (Test source rs2 = x24)
li x24, 0x44414a1fe9bacd48 # load random value
la x14, scratch # base address
sd x24, 0(x14) # store in memory
li x24, 0x9c078dab2b500f09 # load another value into integer register
amoor.w x9, x24, (x14) # perform operation

# Testcase cp_rs2 (Test source rs2 = x25)
li x25, 0x4e0b3d65fe3c8b00 # load random value
la x21, scratch # base address
sd x25, 0(x21) # store in memory
li x25, 0xc26272d499f21646 # load another value into integer register
amoor.w x5, x25, (x21) # perform operation

# Testcase cp_rs2 (Test source rs2 = x26)
li x26, 0x3550a851ec42ce8f # load random value
la x6, scratch # base address
sd x26, 0(x6) # store in memory
li x26, 0x1d94f28bdaaa370f # load another value into integer register
amoor.w x31, x26, (x6) # perform operation

# Testcase cp_rs2 (Test source rs2 = x27)
li x27, 0x04a4983d2024992b # load random value
la x2, scratch # base address
sd x27, 0(x2) # store in memory
li x27, 0x2d9adf45f37a6e18 # load another value into integer register
amoor.w x24, x27, (x2) # perform operation

# Testcase cp_rs2 (Test source rs2 = x28)
li x28, 0xf8838ca600bb6f55 # load random value
la x14, scratch # base address
sd x28, 0(x14) # store in memory
li x28, 0xd8395ba75a4cf3dc # load another value into integer register
amoor.w x2, x28, (x14) # perform operation

# Testcase cp_rs2 (Test source rs2 = x29)
li x29, 0xcf2ecd28e3d0cfbe # load random value
la x16, scratch # base address
sd x29, 0(x16) # store in memory
li x29, 0x12b1faea1c779886 # load another value into integer register
amoor.w x30, x29, (x16) # perform operation

# Testcase cp_rs2 (Test source rs2 = x30)
li x30, 0xa1c114c1108a6a22 # load random value
la x31, scratch # base address
sd x30, 0(x31) # store in memory
li x30, 0x1a1ef8c71fdb1a66 # load another value into integer register
amoor.w x19, x30, (x31) # perform operation

# Testcase cp_rs2 (Test source rs2 = x31)
li x31, 0xa990ed7a9741d132 # load random value
la x5, scratch # base address
sd x31, 0(x5) # store in memory
li x31, 0x5f3a62743c931d53 # load another value into integer register
amoor.w x9, x31, (x5) # perform operation

# Testcase cp_rd (Test destination rd = x0)
li x23, 0xb0a1285ed7094d61 # load random value
la x7, scratch # base address
sd x23, 0(x7) # store in memory
li x23, 0x67df5e76e237450b # load another value into integer register
amoor.w x0, x23, (x7) # perform operation

# Testcase cp_rd (Test destination rd = x1)
li x20, 0x827f74ae43a28e72 # load random value
la x26, scratch # base address
sd x20, 0(x26) # store in memory
li x20, 0xd30e7613ed4855a7 # load another value into integer register
amoor.w x1, x20, (x26) # perform operation

# Testcase cp_rd (Test destination rd = x2)
li x8, 0x1f49966371e598c6 # load random value
la x30, scratch # base address
sd x8, 0(x30) # store in memory
li x8, 0x618d66a56a041272 # load another value into integer register
amoor.w x2, x8, (x30) # perform operation

# Testcase cp_rd (Test destination rd = x3)
li x22, 0x541489c1a3f9af04 # load random value
la x7, scratch # base address
sd x22, 0(x7) # store in memory
li x22, 0x432848b67d2f7038 # load another value into integer register
amoor.w x3, x22, (x7) # perform operation

# Testcase cp_rd (Test destination rd = x4)
mv x5, x4 # switch signature pointer register to avoid conflict with test
li x31, 0xa4cf98af80325eef # load random value
la x22, scratch # base address
sd x31, 0(x22) # store in memory
li x31, 0xacfe6d2c6c5f698e # load another value into integer register
amoor.w x4, x31, (x22) # perform operation

# Testcase cp_rd (Test destination rd = x5)
mv x6, x5 # switch signature pointer register to avoid conflict with test
li x2, 0xc5d4e392bb145f44 # load random value
la x13, scratch # base address
sd x2, 0(x13) # store in memory
li x2, 0xb3b0d87cb338e49b # load another value into integer register
amoor.w x5, x2, (x13) # perform operation

# Testcase cp_rd (Test destination rd = x6)
mv x7, x6 # switch signature pointer register to avoid conflict with test
li x17, 0xe149bb0125a2c69d # load random value
la x3, scratch # base address
sd x17, 0(x3) # store in memory
li x17, 0xcb222497ca07073c # load another value into integer register
amoor.w x6, x17, (x3) # perform operation

# Testcase cp_rd (Test destination rd = x7)
mv x4, x7 # switch signature pointer register to avoid conflict with test
li x23, 0x767e5c6f64805b2a # load random value
la x30, scratch # base address
sd x23, 0(x30) # store in memory
li x23, 0x67d6d720c6b7e266 # load another value into integer register
amoor.w x7, x23, (x30) # perform operation

# Testcase cp_rd (Test destination rd = x8)
li x18, 0xe780757596027ecc # load random value
la x5, scratch # base address
sd x18, 0(x5) # store in memory
li x18, 0x1aca1062129974f7 # load another value into integer register
amoor.w x8, x18, (x5) # perform operation

# Testcase cp_rd (Test destination rd = x9)
li x7, 0xa7126ae4e64a9147 # load random value
la x21, scratch # base address
sd x7, 0(x21) # store in memory
li x7, 0x7cbff9d41185e6b1 # load another value into integer register
amoor.w x9, x7, (x21) # perform operation

# Testcase cp_rd (Test destination rd = x10)
li x8, 0x5463f01f4b25f067 # load random value
la x16, scratch # base address
sd x8, 0(x16) # store in memory
li x8, 0xe556b166606aa5b6 # load another value into integer register
amoor.w x10, x8, (x16) # perform operation

# Testcase cp_rd (Test destination rd = x11)
li x3, 0x3ad5cf0ad2046253 # load random value
la x23, scratch # base address
sd x3, 0(x23) # store in memory
li x3, 0xdc039f032fbd35c1 # load another value into integer register
amoor.w x11, x3, (x23) # perform operation

# Testcase cp_rd (Test destination rd = x12)
li x18, 0xf7c056406c15b521 # load random value
la x2, scratch # base address
sd x18, 0(x2) # store in memory
li x18, 0xe2fe48d011209453 # load another value into integer register
amoor.w x12, x18, (x2) # perform operation

# Testcase cp_rd (Test destination rd = x13)
li x20, 0xf9efd4b9fb5e53b5 # load random value
la x24, scratch # base address
sd x20, 0(x24) # store in memory
li x20, 0x03526462fa4d27bf # load another value into integer register
amoor.w x13, x20, (x24) # perform operation

# Testcase cp_rd (Test destination rd = x14)
li x2, 0x864b7175ac5c0203 # load random value
la x12, scratch # base address
sd x2, 0(x12) # store in memory
li x2, 0x5430d6bfb6fc2dfa # load another value into integer register
amoor.w x14, x2, (x12) # perform operation

# Testcase cp_rd (Test destination rd = x15)
li x8, 0x0438f0b29a3b102a # load random value
la x9, scratch # base address
sd x8, 0(x9) # store in memory
li x8, 0xaad563cc8357b3db # load another value into integer register
amoor.w x15, x8, (x9) # perform operation

# Testcase cp_rd (Test destination rd = x16)
li x27, 0xf7feb743fb06c900 # load random value
la x31, scratch # base address
sd x27, 0(x31) # store in memory
li x27, 0x4f72b6aa0eca442e # load another value into integer register
amoor.w x16, x27, (x31) # perform operation

# Testcase cp_rd (Test destination rd = x17)
li x6, 0x9df0637e74d41c80 # load random value
la x12, scratch # base address
sd x6, 0(x12) # store in memory
li x6, 0x2bcd54736e9c2164 # load another value into integer register
amoor.w x17, x6, (x12) # perform operation

# Testcase cp_rd (Test destination rd = x18)
li x30, 0x266d7c3bf6d2953c # load random value
la x28, scratch # base address
sd x30, 0(x28) # store in memory
li x30, 0xfefba01ed68286c1 # load another value into integer register
amoor.w x18, x30, (x28) # perform operation

# Testcase cp_rd (Test destination rd = x19)
li x21, 0xa3cf791c26500985 # load random value
la x10, scratch # base address
sd x21, 0(x10) # store in memory
li x21, 0x303d62260b9541f0 # load another value into integer register
amoor.w x19, x21, (x10) # perform operation

# Testcase cp_rd (Test destination rd = x20)
li x3, 0x03d275f77cb0b66b # load random value
la x1, scratch # base address
sd x3, 0(x1) # store in memory
li x3, 0x73e74d07baf5c140 # load another value into integer register
amoor.w x20, x3, (x1) # perform operation

# Testcase cp_rd (Test destination rd = x21)
li x10, 0x7d5d57030a496c44 # load random value
la x21, scratch # base address
sd x10, 0(x21) # store in memory
li x10, 0x37fa6e6550bba6a2 # load another value into integer register
amoor.w x21, x10, (x21) # perform operation

# Testcase cp_rd (Test destination rd = x22)
li x25, 0xa640f05a9dfb9d24 # load random value
la x1, scratch # base address
sd x25, 0(x1) # store in memory
li x25, 0x308bf0c4c992815c # load another value into integer register
amoor.w x22, x25, (x1) # perform operation

# Testcase cp_rd (Test destination rd = x23)
li x24, 0x47d1c21c67a944cf # load random value
la x8, scratch # base address
sd x24, 0(x8) # store in memory
li x24, 0x32c65eb391d460ef # load another value into integer register
amoor.w x23, x24, (x8) # perform operation

# Testcase cp_rd (Test destination rd = x24)
li x13, 0xeda9148b1475950d # load random value
la x6, scratch # base address
sd x13, 0(x6) # store in memory
li x13, 0x77d28ddbb72f409a # load another value into integer register
amoor.w x24, x13, (x6) # perform operation

# Testcase cp_rd (Test destination rd = x25)
li x22, 0xb1de6159c11b4273 # load random value
la x9, scratch # base address
sd x22, 0(x9) # store in memory
li x22, 0xc51f0d8db7c9e38b # load another value into integer register
amoor.w x25, x22, (x9) # perform operation

# Testcase cp_rd (Test destination rd = x26)
li x19, 0x48b957dedd683da7 # load random value
la x22, scratch # base address
sd x19, 0(x22) # store in memory
li x19, 0x9b7827eb0a0b2167 # load another value into integer register
amoor.w x26, x19, (x22) # perform operation

# Testcase cp_rd (Test destination rd = x27)
li x25, 0x2529e38c1180fd1a # load random value
la x9, scratch # base address
sd x25, 0(x9) # store in memory
li x25, 0x5dbfb36c840c29d5 # load another value into integer register
amoor.w x27, x25, (x9) # perform operation

# Testcase cp_rd (Test destination rd = x28)
li x28, 0x747db6c58f258a5c # load random value
la x20, scratch # base address
sd x28, 0(x20) # store in memory
li x28, 0xfdd353f211fdd9c8 # load another value into integer register
amoor.w x28, x28, (x20) # perform operation

# Testcase cp_rd (Test destination rd = x29)
li x30, 0xf9118b92b0e054ad # load random value
la x25, scratch # base address
sd x30, 0(x25) # store in memory
li x30, 0x1eefc961561795b7 # load another value into integer register
amoor.w x29, x30, (x25) # perform operation

# Testcase cp_rd (Test destination rd = x30)
li x1, 0x60cfe30401aadb5f # load random value
la x26, scratch # base address
sd x1, 0(x26) # store in memory
li x1, 0x04711ae5472fda1d # load another value into integer register
amoor.w x30, x1, (x26) # perform operation

# Testcase cp_rd (Test destination rd = x31)
li x27, 0xf4e15806d7ac9a93 # load random value
la x16, scratch # base address
sd x27, 0(x16) # store in memory
li x27, 0xa807b81ca30eeff7 # load another value into integer register
amoor.w x31, x27, (x16) # perform operation

# Testcase cp_rs2_corners (Test source rs2 value = 0x0)
li x9, 0x8fc92ca971a8d219 # load random value
la x29, scratch # base address
sd x9, 0(x29) # store in memory
li x9, 0x0000000000000000 # load another value into integer register
amoor.w x22, x9, (x29) # perform operation

# Testcase cp_rs2_corners (Test source rs2 value = 0x1)
li x29, 0xcdd3eefbda7a4db1 # load random value
la x11, scratch # base address
sd x29, 0(x11) # store in memory
li x29, 0x0000000000000001 # load another value into integer register
amoor.w x9, x29, (x11) # perform operation

# Testcase cp_rs2_corners (Test source rs2 value = 0x2)
li x18, 0xb8ac28c0a16a812c # load random value
la x8, scratch # base address
sd x18, 0(x8) # store in memory
li x18, 0x0000000000000002 # load another value into integer register
amoor.w x12, x18, (x8) # perform operation

# Testcase cp_rs2_corners (Test source rs2 value = 0x8000000000000000)
li x6, 0xdc335cd7ede220d6 # load random value
la x29, scratch # base address
sd x6, 0(x29) # store in memory
li x6, 0x8000000000000000 # load another value into integer register
amoor.w x21, x6, (x29) # perform operation

# Testcase cp_rs2_corners (Test source rs2 value = 0x8000000000000001)
li x7, 0x77f7f5c1e5f4d04a # load random value
la x25, scratch # base address
sd x7, 0(x25) # store in memory
li x7, 0x8000000000000001 # load another value into integer register
amoor.w x11, x7, (x25) # perform operation

# Testcase cp_rs2_corners (Test source rs2 value = 0x7fffffffffffffff)
li x18, 0x842fbdebe06f7379 # load random value
la x9, scratch # base address
sd x18, 0(x9) # store in memory
li x18, 0x7fffffffffffffff # load another value into integer register
amoor.w x24, x18, (x9) # perform operation

# Testcase cp_rs2_corners (Test source rs2 value = 0x7ffffffffffffffe)
li x20, 0xec43313cc0897f74 # load random value
la x24, scratch # base address
sd x20, 0(x24) # store in memory
li x20, 0x7ffffffffffffffe # load another value into integer register
amoor.w x9, x20, (x24) # perform operation

# Testcase cp_rs2_corners (Test source rs2 value = 0xffffffffffffffff)
li x15, 0x3d8209c9e85846b6 # load random value
la x13, scratch # base address
sd x15, 0(x13) # store in memory
li x15, 0xffffffffffffffff # load another value into integer register
amoor.w x29, x15, (x13) # perform operation

# Testcase cp_rs2_corners (Test source rs2 value = 0xfffffffffffffffe)
li x8, 0xa983e992f29a4d71 # load random value
la x12, scratch # base address
sd x8, 0(x12) # store in memory
li x8, 0xfffffffffffffffe # load another value into integer register
amoor.w x2, x8, (x12) # perform operation

# Testcase cp_rs2_corners (Test source rs2 value = 0x5bbc887763ae86f2)
li x3, 0x029b15e32db9199b # load random value
la x16, scratch # base address
sd x3, 0(x16) # store in memory
li x3, 0x5bbc887763ae86f2 # load another value into integer register
amoor.w x10, x3, (x16) # perform operation

# Testcase cp_rs2_corners (Test source rs2 value = 0xaaaaaaaaaaaaaaaa)
li x24, 0x24887cf97ea4450a # load random value
la x8, scratch # base address
sd x24, 0(x8) # store in memory
li x24, 0xaaaaaaaaaaaaaaaa # load another value into integer register
amoor.w x28, x24, (x8) # perform operation

# Testcase cp_rs2_corners (Test source rs2 value = 0x5555555555555555)
li x18, 0x803b2b8a8eeb8016 # load random value
la x31, scratch # base address
sd x18, 0(x31) # store in memory
li x18, 0x5555555555555555 # load another value into integer register
amoor.w x14, x18, (x31) # perform operation

# Testcase cp_rs2_corners (Test source rs2 value = 0xffffffff)
li x28, 0x0d41b32b787e674a # load random value
la x9, scratch # base address
sd x28, 0(x9) # store in memory
li x28, 0x00000000ffffffff # load another value into integer register
amoor.w x25, x28, (x9) # perform operation

# Testcase cp_rs2_corners (Test source rs2 value = 0xfffffffe)
li x23, 0x5703f90a34265bec # load random value
la x3, scratch # base address
sd x23, 0(x3) # store in memory
li x23, 0x00000000fffffffe # load another value into integer register
amoor.w x13, x23, (x3) # perform operation

# Testcase cp_rs2_corners (Test source rs2 value = 0x100000000)
li x25, 0x22994e2bebb17e7f # load random value
la x8, scratch # base address
sd x25, 0(x8) # store in memory
li x25, 0x0000000100000000 # load another value into integer register
amoor.w x31, x25, (x8) # perform operation

# Testcase cp_rs2_corners (Test source rs2 value = 0x100000001)
li x18, 0x965a5ea632782755 # load random value
la x14, scratch # base address
sd x18, 0(x14) # store in memory
li x18, 0x0000000100000001 # load another value into integer register
amoor.w x25, x18, (x14) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x1)
li x1, 0x5463ecc35fa15a36 # load random value
la x1, scratch # base address
sd x1, 0(x1) # store in memory
amoor.w x27, x1, (x1) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x2)
li x2, 0x9561c28a501c1420 # load random value
la x2, scratch # base address
sd x2, 0(x2) # store in memory
amoor.w x27, x2, (x2) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x3)
li x3, 0xf994ee5ededf2054 # load random value
la x3, scratch # base address
sd x3, 0(x3) # store in memory
amoor.w x19, x3, (x3) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x4)
mv x5, x4 # switch signature pointer register to avoid conflict with test
li x4, 0xfbd437110e0dc03d # load random value
la x4, scratch # base address
sd x4, 0(x4) # store in memory
amoor.w x6, x4, (x4) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x5)
mv x6, x5 # switch signature pointer register to avoid conflict with test
li x5, 0x2590b6a2566ce6ed # load random value
la x5, scratch # base address
sd x5, 0(x5) # store in memory
amoor.w x1, x5, (x5) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x6)
mv x7, x6 # switch signature pointer register to avoid conflict with test
li x6, 0x754640b6574dfbe8 # load random value
la x6, scratch # base address
sd x6, 0(x6) # store in memory
amoor.w x18, x6, (x6) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x7)
mv x4, x7 # switch signature pointer register to avoid conflict with test
li x7, 0xc6a15f0eb13ca20b # load random value
la x7, scratch # base address
sd x7, 0(x7) # store in memory
amoor.w x5, x7, (x7) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x8)
li x8, 0x9b2420786df077f5 # load random value
la x8, scratch # base address
sd x8, 0(x8) # store in memory
amoor.w x5, x8, (x8) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x9)
li x9, 0xf9b8a09d652a66fe # load random value
la x9, scratch # base address
sd x9, 0(x9) # store in memory
amoor.w x27, x9, (x9) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x10)
li x10, 0x615fdad843af93ef # load random value
la x10, scratch # base address
sd x10, 0(x10) # store in memory
amoor.w x29, x10, (x10) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x11)
li x11, 0x297c87d458effd01 # load random value
la x11, scratch # base address
sd x11, 0(x11) # store in memory
amoor.w x2, x11, (x11) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x12)
li x12, 0xd4340f15f99deeb2 # load random value
la x12, scratch # base address
sd x12, 0(x12) # store in memory
amoor.w x31, x12, (x12) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x13)
li x13, 0x022c973127702227 # load random value
la x13, scratch # base address
sd x13, 0(x13) # store in memory
amoor.w x1, x13, (x13) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x14)
li x14, 0xae3e5ed33a830eb8 # load random value
la x14, scratch # base address
sd x14, 0(x14) # store in memory
amoor.w x1, x14, (x14) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x15)
li x15, 0xf38af4ef6cf4772e # load random value
la x15, scratch # base address
sd x15, 0(x15) # store in memory
amoor.w x24, x15, (x15) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x16)
li x16, 0x48b41fbeb528d094 # load random value
la x16, scratch # base address
sd x16, 0(x16) # store in memory
amoor.w x12, x16, (x16) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x17)
li x17, 0x46f863fd24a79352 # load random value
la x17, scratch # base address
sd x17, 0(x17) # store in memory
amoor.w x31, x17, (x17) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x18)
li x18, 0x05b9fa47b1693957 # load random value
la x18, scratch # base address
sd x18, 0(x18) # store in memory
amoor.w x6, x18, (x18) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x19)
li x19, 0x31ca4aea68564b44 # load random value
la x19, scratch # base address
sd x19, 0(x19) # store in memory
amoor.w x2, x19, (x19) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x20)
li x20, 0x2c9a68214f5c42de # load random value
la x20, scratch # base address
sd x20, 0(x20) # store in memory
amoor.w x28, x20, (x20) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x21)
li x21, 0x99993587f455b803 # load random value
la x21, scratch # base address
sd x21, 0(x21) # store in memory
amoor.w x16, x21, (x21) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x22)
li x22, 0xea25c26df77e1edb # load random value
la x22, scratch # base address
sd x22, 0(x22) # store in memory
amoor.w x9, x22, (x22) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x23)
li x23, 0xddbc39ed5fcac0c7 # load random value
la x23, scratch # base address
sd x23, 0(x23) # store in memory
amoor.w x20, x23, (x23) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x24)
li x24, 0x141d58fede8e9656 # load random value
la x24, scratch # base address
sd x24, 0(x24) # store in memory
amoor.w x8, x24, (x24) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x25)
li x25, 0xe1ba02021aa52fdc # load random value
la x25, scratch # base address
sd x25, 0(x25) # store in memory
amoor.w x23, x25, (x25) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x26)
li x26, 0x7091db0db6ab3581 # load random value
la x26, scratch # base address
sd x26, 0(x26) # store in memory
amoor.w x28, x26, (x26) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x27)
li x27, 0x24fe43fc1d13fab5 # load random value
la x27, scratch # base address
sd x27, 0(x27) # store in memory
amoor.w x29, x27, (x27) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x28)
li x28, 0x37daac72d3e603c2 # load random value
la x28, scratch # base address
sd x28, 0(x28) # store in memory
amoor.w x23, x28, (x28) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x29)
li x29, 0xe0c6fd24c80d4616 # load random value
la x29, scratch # base address
sd x29, 0(x29) # store in memory
amoor.w x8, x29, (x29) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x30)
li x30, 0x786a29cc8fbf2b5a # load random value
la x30, scratch # base address
sd x30, 0(x30) # store in memory
amoor.w x17, x30, (x30) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x31)
li x31, 0x825bb02ebca09a67 # load random value
la x31, scratch # base address
sd x31, 0(x31) # store in memory
amoor.w x24, x31, (x31) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x1)
li x28, 0xc7b03fdc886c9441 # load random value
la x1, scratch # base address
sd x28, 0(x1) # store in memory
li x28, 0x3c3855ce30f2ca92 # load another value into integer register
amoor.w x1, x28, (x1) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x2)
li x27, 0x87e13e3769fd51a3 # load random value
la x2, scratch # base address
sd x27, 0(x2) # store in memory
li x27, 0xf92d44df97f0048e # load another value into integer register
amoor.w x2, x27, (x2) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x3)
li x10, 0x849b4560ac7f6fb3 # load random value
la x3, scratch # base address
sd x10, 0(x3) # store in memory
li x10, 0xa709ae07c22c0380 # load another value into integer register
amoor.w x3, x10, (x3) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x4)
mv x5, x4 # switch signature pointer register to avoid conflict with test
li x20, 0x0645b2b5ad435b40 # load random value
la x4, scratch # base address
sd x20, 0(x4) # store in memory
li x20, 0x0269a3dcdac3876d # load another value into integer register
amoor.w x4, x20, (x4) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x5)
mv x6, x5 # switch signature pointer register to avoid conflict with test
li x22, 0x688ef37a4448e18a # load random value
la x5, scratch # base address
sd x22, 0(x5) # store in memory
li x22, 0x47d07be1ae785000 # load another value into integer register
amoor.w x5, x22, (x5) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x6)
mv x7, x6 # switch signature pointer register to avoid conflict with test
li x26, 0xe9e98ec71e12d552 # load random value
la x6, scratch # base address
sd x26, 0(x6) # store in memory
li x26, 0x56d3e6ad10e38071 # load another value into integer register
amoor.w x6, x26, (x6) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x7)
mv x4, x7 # switch signature pointer register to avoid conflict with test
li x29, 0xe98243acfc3f83d0 # load random value
la x7, scratch # base address
sd x29, 0(x7) # store in memory
li x29, 0xeabd70000cb29e2c # load another value into integer register
amoor.w x7, x29, (x7) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x8)
li x5, 0x038196aa0bdcaf53 # load random value
la x8, scratch # base address
sd x5, 0(x8) # store in memory
li x5, 0xa5a72963cb06f634 # load another value into integer register
amoor.w x8, x5, (x8) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x9)
li x29, 0x20d2a0a7ba635f01 # load random value
la x9, scratch # base address
sd x29, 0(x9) # store in memory
li x29, 0xec75344bb2f56459 # load another value into integer register
amoor.w x9, x29, (x9) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x10)
li x12, 0x31383e10cf874c00 # load random value
la x10, scratch # base address
sd x12, 0(x10) # store in memory
li x12, 0x5eae30a56ce0d84a # load another value into integer register
amoor.w x10, x12, (x10) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x11)
li x19, 0xcf1c59484a290cc6 # load random value
la x11, scratch # base address
sd x19, 0(x11) # store in memory
li x19, 0xa01196e4dfd2c332 # load another value into integer register
amoor.w x11, x19, (x11) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x12)
li x22, 0x63d4806129946c29 # load random value
la x12, scratch # base address
sd x22, 0(x12) # store in memory
li x22, 0xb391035a91b339f7 # load another value into integer register
amoor.w x12, x22, (x12) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x13)
li x23, 0x86270348ae706d06 # load random value
la x13, scratch # base address
sd x23, 0(x13) # store in memory
li x23, 0x0995ed932482e668 # load another value into integer register
amoor.w x13, x23, (x13) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x14)
li x25, 0x1087791c26c4817b # load random value
la x14, scratch # base address
sd x25, 0(x14) # store in memory
li x25, 0xc1b68d830aed78ff # load another value into integer register
amoor.w x14, x25, (x14) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x15)
li x17, 0x60d65658edaf506a # load random value
la x15, scratch # base address
sd x17, 0(x15) # store in memory
li x17, 0x47e734d1450bc084 # load another value into integer register
amoor.w x15, x17, (x15) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x16)
li x23, 0x02dc06987b9ee5bb # load random value
la x16, scratch # base address
sd x23, 0(x16) # store in memory
li x23, 0xc99eb2f8b0cd9129 # load another value into integer register
amoor.w x16, x23, (x16) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x17)
li x3, 0xcbf97dcb93296399 # load random value
la x17, scratch # base address
sd x3, 0(x17) # store in memory
li x3, 0x735de3edb9bd4844 # load another value into integer register
amoor.w x17, x3, (x17) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x18)
li x12, 0xa293d1cff54f1a56 # load random value
la x18, scratch # base address
sd x12, 0(x18) # store in memory
li x12, 0x0e8fcc0fb2b0ba5c # load another value into integer register
amoor.w x18, x12, (x18) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x19)
li x21, 0xde3609dfba815cbe # load random value
la x19, scratch # base address
sd x21, 0(x19) # store in memory
li x21, 0x650edcce7e0c5692 # load another value into integer register
amoor.w x19, x21, (x19) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x20)
li x12, 0x0466951c1f9da0c1 # load random value
la x20, scratch # base address
sd x12, 0(x20) # store in memory
li x12, 0x6ee162a759cbde48 # load another value into integer register
amoor.w x20, x12, (x20) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x21)
li x13, 0xc4b872469ed1adf6 # load random value
la x21, scratch # base address
sd x13, 0(x21) # store in memory
li x13, 0xa635e25c4d18061a # load another value into integer register
amoor.w x21, x13, (x21) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x22)
li x26, 0xadd0048a18aab789 # load random value
la x22, scratch # base address
sd x26, 0(x22) # store in memory
li x26, 0xc1b0eece4c07d9f8 # load another value into integer register
amoor.w x22, x26, (x22) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x23)
li x7, 0x9e7b0026feb0587f # load random value
la x23, scratch # base address
sd x7, 0(x23) # store in memory
li x7, 0x0e5923d3ad805001 # load another value into integer register
amoor.w x23, x7, (x23) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x24)
li x10, 0x8439cdb5e864769b # load random value
la x24, scratch # base address
sd x10, 0(x24) # store in memory
li x10, 0xe42170fa64e8f69f # load another value into integer register
amoor.w x24, x10, (x24) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x25)
li x26, 0x8806711d7a8d362f # load random value
la x25, scratch # base address
sd x26, 0(x25) # store in memory
li x26, 0x4f1e780ec69ebaae # load another value into integer register
amoor.w x25, x26, (x25) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x26)
li x12, 0x45b5f3e011210ccf # load random value
la x26, scratch # base address
sd x12, 0(x26) # store in memory
li x12, 0x5fd7294b83a90eb8 # load another value into integer register
amoor.w x26, x12, (x26) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x27)
li x16, 0x91c850b564bcc0e7 # load random value
la x27, scratch # base address
sd x16, 0(x27) # store in memory
li x16, 0x92c760d7e33c98f5 # load another value into integer register
amoor.w x27, x16, (x27) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x28)
li x17, 0x531b9ae5b05388d4 # load random value
la x28, scratch # base address
sd x17, 0(x28) # store in memory
li x17, 0xff4abd5887119003 # load another value into integer register
amoor.w x28, x17, (x28) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x29)
li x24, 0x98eea87ea45329d5 # load random value
la x29, scratch # base address
sd x24, 0(x29) # store in memory
li x24, 0xfe576f37a038cae5 # load another value into integer register
amoor.w x29, x24, (x29) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x30)
li x31, 0x0e353ea0acce5690 # load random value
la x30, scratch # base address
sd x31, 0(x30) # store in memory
li x31, 0xba569b22bb319e2c # load another value into integer register
amoor.w x30, x31, (x30) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x31)
li x5, 0x37303df365c877d9 # load random value
la x31, scratch # base address
sd x5, 0(x31) # store in memory
li x5, 0xbc9fd4ffdb00eee4 # load another value into integer register
amoor.w x31, x5, (x31) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x0)
li x0, 0xf5124c3ac0a40160 # load random value
la x26, scratch # base address
sd x0, 0(x26) # store in memory
li x0, 0x53696757ac59715f # load another value into integer register
amoor.w x0, x0, (x26) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x1)
li x1, 0x88abbde8aec729c7 # load random value
la x22, scratch # base address
sd x1, 0(x22) # store in memory
li x1, 0x1be423a1aa74ac72 # load another value into integer register
amoor.w x1, x1, (x22) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x2)
li x2, 0xf15b4f0bb572a55e # load random value
la x19, scratch # base address
sd x2, 0(x19) # store in memory
li x2, 0x565951382abedb99 # load another value into integer register
amoor.w x2, x2, (x19) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x3)
li x3, 0x64609894868b126d # load random value
la x6, scratch # base address
sd x3, 0(x6) # store in memory
li x3, 0xef4f0145ced3597b # load another value into integer register
amoor.w x3, x3, (x6) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x4)
mv x5, x4 # switch signature pointer register to avoid conflict with test
li x4, 0xfad19824f112d6f8 # load random value
la x13, scratch # base address
sd x4, 0(x13) # store in memory
li x4, 0x824578def629dad6 # load another value into integer register
amoor.w x4, x4, (x13) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x5)
mv x6, x5 # switch signature pointer register to avoid conflict with test
li x5, 0xe9b9117b75733f02 # load random value
la x29, scratch # base address
sd x5, 0(x29) # store in memory
li x5, 0x520e62b6534dba49 # load another value into integer register
amoor.w x5, x5, (x29) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x6)
mv x7, x6 # switch signature pointer register to avoid conflict with test
li x6, 0x06378e911529a0b7 # load random value
la x17, scratch # base address
sd x6, 0(x17) # store in memory
li x6, 0xf37ea3745ba34ce7 # load another value into integer register
amoor.w x6, x6, (x17) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x7)
mv x4, x7 # switch signature pointer register to avoid conflict with test
li x7, 0x0751672e795f607b # load random value
la x27, scratch # base address
sd x7, 0(x27) # store in memory
li x7, 0x23ecf49aa4041f44 # load another value into integer register
amoor.w x7, x7, (x27) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x8)
li x8, 0x94932ca90090a433 # load random value
la x5, scratch # base address
sd x8, 0(x5) # store in memory
li x8, 0xbd561c75dfed0b5c # load another value into integer register
amoor.w x8, x8, (x5) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x9)
li x9, 0x68b580882c4e054b # load random value
la x9, scratch # base address
sd x9, 0(x9) # store in memory
amoor.w x9, x9, (x9) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x10)
li x10, 0x2709e6722b8f2c74 # load random value
la x2, scratch # base address
sd x10, 0(x2) # store in memory
li x10, 0x57f44be4969f68c3 # load another value into integer register
amoor.w x10, x10, (x2) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x11)
li x11, 0xebd4b903b102d816 # load random value
la x5, scratch # base address
sd x11, 0(x5) # store in memory
li x11, 0x916d28dbbe8c3c08 # load another value into integer register
amoor.w x11, x11, (x5) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x12)
li x12, 0x6eeccb559002f5b9 # load random value
la x10, scratch # base address
sd x12, 0(x10) # store in memory
li x12, 0x6d95b5192386e1f0 # load another value into integer register
amoor.w x12, x12, (x10) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x13)
li x13, 0xde452162ca48a99f # load random value
la x20, scratch # base address
sd x13, 0(x20) # store in memory
li x13, 0xd46171b006c42275 # load another value into integer register
amoor.w x13, x13, (x20) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x14)
li x14, 0xe71f10637869584c # load random value
la x14, scratch # base address
sd x14, 0(x14) # store in memory
amoor.w x14, x14, (x14) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x15)
li x15, 0x7e8867a77e002b54 # load random value
la x1, scratch # base address
sd x15, 0(x1) # store in memory
li x15, 0x11a404a5c90a9646 # load another value into integer register
amoor.w x15, x15, (x1) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x16)
li x16, 0x2b29563441ce940c # load random value
la x11, scratch # base address
sd x16, 0(x11) # store in memory
li x16, 0xe9172925b75c5f3d # load another value into integer register
amoor.w x16, x16, (x11) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x17)
li x17, 0x028a6709ff24877b # load random value
la x23, scratch # base address
sd x17, 0(x23) # store in memory
li x17, 0x45231b276cbebf92 # load another value into integer register
amoor.w x17, x17, (x23) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x18)
li x18, 0x7577a35ae144d6ff # load random value
la x7, scratch # base address
sd x18, 0(x7) # store in memory
li x18, 0x65c1ddbc0654a4de # load another value into integer register
amoor.w x18, x18, (x7) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x19)
li x19, 0x14c7bb8ae166d600 # load random value
la x2, scratch # base address
sd x19, 0(x2) # store in memory
li x19, 0x611b1b4e18e3a6df # load another value into integer register
amoor.w x19, x19, (x2) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x20)
li x20, 0x6505e476aec5a05a # load random value
la x14, scratch # base address
sd x20, 0(x14) # store in memory
li x20, 0xf429912a4d13e848 # load another value into integer register
amoor.w x20, x20, (x14) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x21)
li x21, 0xf80ee77fe9a454b2 # load random value
la x8, scratch # base address
sd x21, 0(x8) # store in memory
li x21, 0xce4b2777fa01dbc3 # load another value into integer register
amoor.w x21, x21, (x8) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x22)
li x22, 0x0ea544e80466ea92 # load random value
la x2, scratch # base address
sd x22, 0(x2) # store in memory
li x22, 0x4276d92169de9219 # load another value into integer register
amoor.w x22, x22, (x2) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x23)
li x23, 0x2aae490315a2005d # load random value
la x17, scratch # base address
sd x23, 0(x17) # store in memory
li x23, 0x0a33282552536ba8 # load another value into integer register
amoor.w x23, x23, (x17) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x24)
li x24, 0x82c1330e1dbee7f3 # load random value
la x13, scratch # base address
sd x24, 0(x13) # store in memory
li x24, 0xe0a894c8e76111c2 # load another value into integer register
amoor.w x24, x24, (x13) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x25)
li x25, 0x9eda5a1e7b01d61d # load random value
la x18, scratch # base address
sd x25, 0(x18) # store in memory
li x25, 0xf1f20c001a77f88b # load another value into integer register
amoor.w x25, x25, (x18) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x26)
li x26, 0xc82b5de35fdb3888 # load random value
la x6, scratch # base address
sd x26, 0(x6) # store in memory
li x26, 0x9e57bb0154919537 # load another value into integer register
amoor.w x26, x26, (x6) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x27)
li x27, 0xd8eda2bbad2b9515 # load random value
la x7, scratch # base address
sd x27, 0(x7) # store in memory
li x27, 0xf8587c2eba561457 # load another value into integer register
amoor.w x27, x27, (x7) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x28)
li x28, 0xd309c07a8a163203 # load random value
la x14, scratch # base address
sd x28, 0(x14) # store in memory
li x28, 0x23f544b957f0a816 # load another value into integer register
amoor.w x28, x28, (x14) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x29)
li x29, 0xa0780fc9426f17ad # load random value
la x14, scratch # base address
sd x29, 0(x14) # store in memory
li x29, 0x5f18ee69f93f3d4d # load another value into integer register
amoor.w x29, x29, (x14) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x30)
li x30, 0x5bc67f6c13bc9c6d # load random value
la x8, scratch # base address
sd x30, 0(x8) # store in memory
li x30, 0x2a74b4fe2fef1adf # load another value into integer register
amoor.w x30, x30, (x8) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x31)
li x31, 0x7d1d0b5e29dc83cb # load random value
la x26, scratch # base address
sd x31, 0(x26) # store in memory
li x31, 0x09011a815ea0d008 # load another value into integer register
amoor.w x31, x31, (x26) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x1)
li x1, 0x7d811fa3670c380e # load random value
la x1, scratch # base address
sd x1, 0(x1) # store in memory
amoor.w x1, x1, (x1) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x2)
li x2, 0x8a03bb2918e5ced2 # load random value
la x2, scratch # base address
sd x2, 0(x2) # store in memory
amoor.w x2, x2, (x2) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x3)
li x3, 0x05124bcbfdbbc366 # load random value
la x3, scratch # base address
sd x3, 0(x3) # store in memory
amoor.w x3, x3, (x3) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x4)
mv x5, x4 # switch signature pointer register to avoid conflict with test
li x4, 0xd19982aa6937c33f # load random value
la x4, scratch # base address
sd x4, 0(x4) # store in memory
amoor.w x4, x4, (x4) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x5)
mv x6, x5 # switch signature pointer register to avoid conflict with test
li x5, 0x75bf3a2f65404b6b # load random value
la x5, scratch # base address
sd x5, 0(x5) # store in memory
amoor.w x5, x5, (x5) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x6)
mv x7, x6 # switch signature pointer register to avoid conflict with test
li x6, 0x505f2a75dece7176 # load random value
la x6, scratch # base address
sd x6, 0(x6) # store in memory
amoor.w x6, x6, (x6) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x7)
mv x4, x7 # switch signature pointer register to avoid conflict with test
li x7, 0x384ddb67cc073481 # load random value
la x7, scratch # base address
sd x7, 0(x7) # store in memory
amoor.w x7, x7, (x7) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x8)
li x8, 0xe82389ad5187fbb5 # load random value
la x8, scratch # base address
sd x8, 0(x8) # store in memory
amoor.w x8, x8, (x8) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x9)
li x9, 0x6882e360c7b1642d # load random value
la x9, scratch # base address
sd x9, 0(x9) # store in memory
amoor.w x9, x9, (x9) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x10)
li x10, 0x274f6c8a60df45c7 # load random value
la x10, scratch # base address
sd x10, 0(x10) # store in memory
amoor.w x10, x10, (x10) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x11)
li x11, 0xf9fc8777e8e9bb06 # load random value
la x11, scratch # base address
sd x11, 0(x11) # store in memory
amoor.w x11, x11, (x11) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x12)
li x12, 0x5d86b2661d657a51 # load random value
la x12, scratch # base address
sd x12, 0(x12) # store in memory
amoor.w x12, x12, (x12) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x13)
li x13, 0x536a706cf052d041 # load random value
la x13, scratch # base address
sd x13, 0(x13) # store in memory
amoor.w x13, x13, (x13) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x14)
li x14, 0xd48e58b7e1762a7b # load random value
la x14, scratch # base address
sd x14, 0(x14) # store in memory
amoor.w x14, x14, (x14) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x15)
li x15, 0x8e79f88bdf6af311 # load random value
la x15, scratch # base address
sd x15, 0(x15) # store in memory
amoor.w x15, x15, (x15) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x16)
li x16, 0xc46a51b65dcf7a19 # load random value
la x16, scratch # base address
sd x16, 0(x16) # store in memory
amoor.w x16, x16, (x16) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x17)
li x17, 0xed5db871dae37732 # load random value
la x17, scratch # base address
sd x17, 0(x17) # store in memory
amoor.w x17, x17, (x17) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x18)
li x18, 0x2f568bd2215aa971 # load random value
la x18, scratch # base address
sd x18, 0(x18) # store in memory
amoor.w x18, x18, (x18) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x19)
li x19, 0x9e38d29a4e5438a0 # load random value
la x19, scratch # base address
sd x19, 0(x19) # store in memory
amoor.w x19, x19, (x19) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x20)
li x20, 0x3f14a9737c6a666c # load random value
la x20, scratch # base address
sd x20, 0(x20) # store in memory
amoor.w x20, x20, (x20) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x21)
li x21, 0x33a217c50b3ccb88 # load random value
la x21, scratch # base address
sd x21, 0(x21) # store in memory
amoor.w x21, x21, (x21) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x22)
li x22, 0xdf8e44472e1afc48 # load random value
la x22, scratch # base address
sd x22, 0(x22) # store in memory
amoor.w x22, x22, (x22) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x23)
li x23, 0x9f5d776f86b3082e # load random value
la x23, scratch # base address
sd x23, 0(x23) # store in memory
amoor.w x23, x23, (x23) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x24)
li x24, 0x85656b8a73f7cce7 # load random value
la x24, scratch # base address
sd x24, 0(x24) # store in memory
amoor.w x24, x24, (x24) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x25)
li x25, 0xd55bcf8047f3101c # load random value
la x25, scratch # base address
sd x25, 0(x25) # store in memory
amoor.w x25, x25, (x25) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x26)
li x26, 0xc4513d7a7b66d9e9 # load random value
la x26, scratch # base address
sd x26, 0(x26) # store in memory
amoor.w x26, x26, (x26) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x27)
li x27, 0x1a1a38e5ee26f2a6 # load random value
la x27, scratch # base address
sd x27, 0(x27) # store in memory
amoor.w x27, x27, (x27) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x28)
li x28, 0x062d2b18a4e10e0b # load random value
la x28, scratch # base address
sd x28, 0(x28) # store in memory
amoor.w x28, x28, (x28) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x29)
li x29, 0xd8a8e4b43976badd # load random value
la x29, scratch # base address
sd x29, 0(x29) # store in memory
amoor.w x29, x29, (x29) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x30)
li x30, 0x196d7ce53409fdcf # load random value
la x30, scratch # base address
sd x30, 0(x30) # store in memory
amoor.w x30, x30, (x30) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x31)
li x31, 0x7c5b282fd3b501cf # load random value
la x31, scratch # base address
sd x31, 0(x31) # store in memory
amoor.w x31, x31, (x31) # perform operation

# Testcase cp_gpr/fpr_hazard nohaz test
la x17, scratch
add x20, x19, x1 # perform first operation
amoor.w x29, x9, (x17) # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard nohaz test
la x31, scratch
add x1, x13, x19 # perform first operation
amoor.w x30, x9, (x31) # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard nohaz test
la x17, scratch
add x11, x2, x23 # perform first operation
amoor.w x29, x8, (x17) # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard raw test
la x10, scratch
add x21, x21, x0 # perform first operation
amoor.w x24, x21, (x10) # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard raw test
la x8, scratch
add x8, x8, x0 # perform first operation
amoor.w x1, x30, (x8) # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard raw test
la x31, scratch
add x20, x20, x0 # perform first operation
amoor.w x29, x15, (x31) # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard waw test
la x30, scratch
add x27, x21, x8 # perform first operation
amoor.w x27, x11, (x30) # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard waw test
la x15, scratch
add x24, x31, x12 # perform first operation
amoor.w x24, x8, (x15) # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard waw test
la x10, scratch
add x19, x25, x21 # perform first operation
amoor.w x19, x22, (x10) # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard war test
la x1, scratch
add x27, x6, x3 # perform first operation
amoor.w x6, x16, (x1) # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard war test
la x8, scratch
add x16, x21, x1 # perform first operation
amoor.w x1, x20, (x8) # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard war test
la x28, scratch
add x19, x25, x11 # perform first operation
amoor.w x30, x13, (x28) # perform second (triggering) operation

#.EQU SIGSIZE,0


// ******************
// Tests from: WALLY-COV-amomaxu.w.S
// ******************


# initialize signature pointer
la x4, begin_signature

    
# Testcase cp_rs1 (Test source rs1 = x1)
li x13, 0x69c7478be32ce3d3 # load random value
la x1, scratch # base address
sd x13, 0(x1) # store in memory
li x13, 0xf0b47132845fe900 # load another value into integer register
amomaxu.w x22, x13, (x1) # perform operation

# Testcase cp_rs1 (Test source rs1 = x2)
li x22, 0x3181f77b9af33266 # load random value
la x2, scratch # base address
sd x22, 0(x2) # store in memory
li x22, 0x1375734baa42a849 # load another value into integer register
amomaxu.w x9, x22, (x2) # perform operation

# Testcase cp_rs1 (Test source rs1 = x3)
li x30, 0x1822570bf36a28c2 # load random value
la x3, scratch # base address
sd x30, 0(x3) # store in memory
li x30, 0x0a684722ecb4dac4 # load another value into integer register
amomaxu.w x26, x30, (x3) # perform operation

# Testcase cp_rs1 (Test source rs1 = x4)
mv x5, x4 # switch signature pointer register to avoid conflict with test
li x13, 0xa6d2dbc4a9f90298 # load random value
la x4, scratch # base address
sd x13, 0(x4) # store in memory
li x13, 0x8029866568627522 # load another value into integer register
amomaxu.w x3, x13, (x4) # perform operation

# Testcase cp_rs1 (Test source rs1 = x5)
mv x6, x5 # switch signature pointer register to avoid conflict with test
li x31, 0x249426d073fec44a # load random value
la x5, scratch # base address
sd x31, 0(x5) # store in memory
li x31, 0xcafb904cb6ec28ca # load another value into integer register
amomaxu.w x19, x31, (x5) # perform operation

# Testcase cp_rs1 (Test source rs1 = x6)
mv x7, x6 # switch signature pointer register to avoid conflict with test
li x4, 0x2fb4afe569d7d2a7 # load random value
la x6, scratch # base address
sd x4, 0(x6) # store in memory
li x4, 0x5b2799047510b45a # load another value into integer register
amomaxu.w x12, x4, (x6) # perform operation

# Testcase cp_rs1 (Test source rs1 = x7)
mv x4, x7 # switch signature pointer register to avoid conflict with test
li x2, 0x311f7b07449c5b0b # load random value
la x7, scratch # base address
sd x2, 0(x7) # store in memory
li x2, 0x47e7c5b04d799b0b # load another value into integer register
amomaxu.w x20, x2, (x7) # perform operation

# Testcase cp_rs1 (Test source rs1 = x8)
li x7, 0xe1ba8712c20edb38 # load random value
la x8, scratch # base address
sd x7, 0(x8) # store in memory
li x7, 0x95ad66e8ac3c4d21 # load another value into integer register
amomaxu.w x16, x7, (x8) # perform operation

# Testcase cp_rs1 (Test source rs1 = x9)
li x18, 0xd65b5cb4ba6bc2ce # load random value
la x9, scratch # base address
sd x18, 0(x9) # store in memory
li x18, 0xfd942cfd0ecf64c0 # load another value into integer register
amomaxu.w x20, x18, (x9) # perform operation

# Testcase cp_rs1 (Test source rs1 = x10)
li x7, 0xa73bcef1ee45d23e # load random value
la x10, scratch # base address
sd x7, 0(x10) # store in memory
li x7, 0x6ae482036e23efaa # load another value into integer register
amomaxu.w x24, x7, (x10) # perform operation

# Testcase cp_rs1 (Test source rs1 = x11)
li x26, 0x545ad06d0b957644 # load random value
la x11, scratch # base address
sd x26, 0(x11) # store in memory
li x26, 0x25309153fb8f0d0c # load another value into integer register
amomaxu.w x8, x26, (x11) # perform operation

# Testcase cp_rs1 (Test source rs1 = x12)
li x20, 0x6541b39ceec8db96 # load random value
la x12, scratch # base address
sd x20, 0(x12) # store in memory
li x20, 0x5da56078d2dfeb8c # load another value into integer register
amomaxu.w x21, x20, (x12) # perform operation

# Testcase cp_rs1 (Test source rs1 = x13)
li x15, 0xaf965ae00d541c60 # load random value
la x13, scratch # base address
sd x15, 0(x13) # store in memory
li x15, 0xdb28f3ce17d4b59d # load another value into integer register
amomaxu.w x26, x15, (x13) # perform operation

# Testcase cp_rs1 (Test source rs1 = x14)
li x12, 0x89022f1717f9b7f0 # load random value
la x14, scratch # base address
sd x12, 0(x14) # store in memory
li x12, 0x35c141d943458a60 # load another value into integer register
amomaxu.w x27, x12, (x14) # perform operation

# Testcase cp_rs1 (Test source rs1 = x15)
li x21, 0x0537db930fa41d0b # load random value
la x15, scratch # base address
sd x21, 0(x15) # store in memory
li x21, 0xe6276cd08affa9a9 # load another value into integer register
amomaxu.w x17, x21, (x15) # perform operation

# Testcase cp_rs1 (Test source rs1 = x16)
li x1, 0x0000297a3ffdb8bd # load random value
la x16, scratch # base address
sd x1, 0(x16) # store in memory
li x1, 0x891f8ab1bb959bd0 # load another value into integer register
amomaxu.w x31, x1, (x16) # perform operation

# Testcase cp_rs1 (Test source rs1 = x17)
li x6, 0x632d075a2f2b334d # load random value
la x17, scratch # base address
sd x6, 0(x17) # store in memory
li x6, 0x7ccd19badb74fd9a # load another value into integer register
amomaxu.w x12, x6, (x17) # perform operation

# Testcase cp_rs1 (Test source rs1 = x18)
li x1, 0x4e6dcb055084fe22 # load random value
la x18, scratch # base address
sd x1, 0(x18) # store in memory
li x1, 0xc62690ac8347bf10 # load another value into integer register
amomaxu.w x20, x1, (x18) # perform operation

# Testcase cp_rs1 (Test source rs1 = x19)
li x17, 0xe52f204636011cad # load random value
la x19, scratch # base address
sd x17, 0(x19) # store in memory
li x17, 0x9fe1a1fc75e0d9d1 # load another value into integer register
amomaxu.w x7, x17, (x19) # perform operation

# Testcase cp_rs1 (Test source rs1 = x20)
li x23, 0x6f3158018dafaef6 # load random value
la x20, scratch # base address
sd x23, 0(x20) # store in memory
li x23, 0xfe03b9d2e6124e7d # load another value into integer register
amomaxu.w x5, x23, (x20) # perform operation

# Testcase cp_rs1 (Test source rs1 = x21)
li x2, 0xe7fde46bec4276fd # load random value
la x21, scratch # base address
sd x2, 0(x21) # store in memory
li x2, 0x3f201a5f7e3f1d33 # load another value into integer register
amomaxu.w x9, x2, (x21) # perform operation

# Testcase cp_rs1 (Test source rs1 = x22)
li x31, 0x0f3c9a592c51329c # load random value
la x22, scratch # base address
sd x31, 0(x22) # store in memory
li x31, 0xc6bdbd7038d2591d # load another value into integer register
amomaxu.w x21, x31, (x22) # perform operation

# Testcase cp_rs1 (Test source rs1 = x23)
li x19, 0xcfa0f5258f363e08 # load random value
la x23, scratch # base address
sd x19, 0(x23) # store in memory
li x19, 0x13ff7f6382b4cb98 # load another value into integer register
amomaxu.w x17, x19, (x23) # perform operation

# Testcase cp_rs1 (Test source rs1 = x24)
li x22, 0xe425cf3dd8977a50 # load random value
la x24, scratch # base address
sd x22, 0(x24) # store in memory
li x22, 0xb3868fd0d74379f2 # load another value into integer register
amomaxu.w x26, x22, (x24) # perform operation

# Testcase cp_rs1 (Test source rs1 = x25)
li x20, 0xa89cfebb60724b8d # load random value
la x25, scratch # base address
sd x20, 0(x25) # store in memory
li x20, 0x8aa9383464f185c3 # load another value into integer register
amomaxu.w x27, x20, (x25) # perform operation

# Testcase cp_rs1 (Test source rs1 = x26)
li x24, 0xa5205756b08f301d # load random value
la x26, scratch # base address
sd x24, 0(x26) # store in memory
li x24, 0xe91503a311c96947 # load another value into integer register
amomaxu.w x25, x24, (x26) # perform operation

# Testcase cp_rs1 (Test source rs1 = x27)
li x14, 0x097cc83f06a68fc4 # load random value
la x27, scratch # base address
sd x14, 0(x27) # store in memory
li x14, 0x164147887193dd18 # load another value into integer register
amomaxu.w x30, x14, (x27) # perform operation

# Testcase cp_rs1 (Test source rs1 = x28)
li x30, 0xa1c6f916eb6d6918 # load random value
la x28, scratch # base address
sd x30, 0(x28) # store in memory
li x30, 0x60ab742f238fca93 # load another value into integer register
amomaxu.w x10, x30, (x28) # perform operation

# Testcase cp_rs1 (Test source rs1 = x29)
li x20, 0x9b457d93e8df6e39 # load random value
la x29, scratch # base address
sd x20, 0(x29) # store in memory
li x20, 0x246b9d7ff57be7cc # load another value into integer register
amomaxu.w x6, x20, (x29) # perform operation

# Testcase cp_rs1 (Test source rs1 = x30)
li x24, 0x48d07d4d77d2d211 # load random value
la x30, scratch # base address
sd x24, 0(x30) # store in memory
li x24, 0xb207b3f94318c4e1 # load another value into integer register
amomaxu.w x31, x24, (x30) # perform operation

# Testcase cp_rs1 (Test source rs1 = x31)
li x28, 0x49586ddd6f20f4ef # load random value
la x31, scratch # base address
sd x28, 0(x31) # store in memory
li x28, 0x586d741b1c2518fd # load another value into integer register
amomaxu.w x30, x28, (x31) # perform operation

# Testcase cp_rs2 (Test source rs2 = x0)
li x0, 0xc5849216f49df085 # load random value
la x11, scratch # base address
sd x0, 0(x11) # store in memory
li x0, 0x1bda33834ff45ed8 # load another value into integer register
amomaxu.w x5, x0, (x11) # perform operation

# Testcase cp_rs2 (Test source rs2 = x1)
li x1, 0xc3293d799dcaa57c # load random value
la x7, scratch # base address
sd x1, 0(x7) # store in memory
li x1, 0x199f6d4ac6ab2d73 # load another value into integer register
amomaxu.w x12, x1, (x7) # perform operation

# Testcase cp_rs2 (Test source rs2 = x2)
li x2, 0xef078cf510f7d554 # load random value
la x12, scratch # base address
sd x2, 0(x12) # store in memory
li x2, 0xffd7e57843cb11a1 # load another value into integer register
amomaxu.w x24, x2, (x12) # perform operation

# Testcase cp_rs2 (Test source rs2 = x3)
li x3, 0x0b85c61c97180bb6 # load random value
la x12, scratch # base address
sd x3, 0(x12) # store in memory
li x3, 0x89c3eaafe73fe6a8 # load another value into integer register
amomaxu.w x31, x3, (x12) # perform operation

# Testcase cp_rs2 (Test source rs2 = x4)
mv x5, x4 # switch signature pointer register to avoid conflict with test
li x4, 0x8312ead3551545dd # load random value
la x13, scratch # base address
sd x4, 0(x13) # store in memory
li x4, 0x45580bc3db50b98b # load another value into integer register
amomaxu.w x31, x4, (x13) # perform operation

# Testcase cp_rs2 (Test source rs2 = x5)
mv x6, x5 # switch signature pointer register to avoid conflict with test
li x5, 0xe79c99e33c67570f # load random value
la x1, scratch # base address
sd x5, 0(x1) # store in memory
li x5, 0x009e96d42960ccee # load another value into integer register
amomaxu.w x21, x5, (x1) # perform operation

# Testcase cp_rs2 (Test source rs2 = x6)
mv x7, x6 # switch signature pointer register to avoid conflict with test
li x6, 0x6f884b8cfe7650fc # load random value
la x24, scratch # base address
sd x6, 0(x24) # store in memory
li x6, 0xaf0a9a6a2d927d2e # load another value into integer register
amomaxu.w x17, x6, (x24) # perform operation

# Testcase cp_rs2 (Test source rs2 = x7)
mv x4, x7 # switch signature pointer register to avoid conflict with test
li x7, 0x81b2686f8a8e0e13 # load random value
la x15, scratch # base address
sd x7, 0(x15) # store in memory
li x7, 0x77a06ff6e04b2440 # load another value into integer register
amomaxu.w x30, x7, (x15) # perform operation

# Testcase cp_rs2 (Test source rs2 = x8)
li x8, 0x4ee8c412288de591 # load random value
la x27, scratch # base address
sd x8, 0(x27) # store in memory
li x8, 0x2ef78ccc91e20b41 # load another value into integer register
amomaxu.w x25, x8, (x27) # perform operation

# Testcase cp_rs2 (Test source rs2 = x9)
li x9, 0x8e3d4573b2a0d7d0 # load random value
la x22, scratch # base address
sd x9, 0(x22) # store in memory
li x9, 0xd5ab1fa478932d53 # load another value into integer register
amomaxu.w x29, x9, (x22) # perform operation

# Testcase cp_rs2 (Test source rs2 = x10)
li x10, 0xd60d31f417a99417 # load random value
la x8, scratch # base address
sd x10, 0(x8) # store in memory
li x10, 0xb69ebad087f4a3e4 # load another value into integer register
amomaxu.w x30, x10, (x8) # perform operation

# Testcase cp_rs2 (Test source rs2 = x11)
li x11, 0x7b02c74bbb1f3be6 # load random value
la x20, scratch # base address
sd x11, 0(x20) # store in memory
li x11, 0xd79c8746984da748 # load another value into integer register
amomaxu.w x29, x11, (x20) # perform operation

# Testcase cp_rs2 (Test source rs2 = x12)
li x12, 0x6d153f4a416ea8db # load random value
la x24, scratch # base address
sd x12, 0(x24) # store in memory
li x12, 0x22fda4288daa169f # load another value into integer register
amomaxu.w x1, x12, (x24) # perform operation

# Testcase cp_rs2 (Test source rs2 = x13)
li x13, 0xa131aeea10d09504 # load random value
la x21, scratch # base address
sd x13, 0(x21) # store in memory
li x13, 0x9fc4e7de63121d5f # load another value into integer register
amomaxu.w x17, x13, (x21) # perform operation

# Testcase cp_rs2 (Test source rs2 = x14)
li x14, 0x7d12e6f25114289d # load random value
la x8, scratch # base address
sd x14, 0(x8) # store in memory
li x14, 0xac192a0e9f32fe27 # load another value into integer register
amomaxu.w x20, x14, (x8) # perform operation

# Testcase cp_rs2 (Test source rs2 = x15)
li x15, 0xcc013f36979cc8d8 # load random value
la x28, scratch # base address
sd x15, 0(x28) # store in memory
li x15, 0x161f5a305c20ebf3 # load another value into integer register
amomaxu.w x31, x15, (x28) # perform operation

# Testcase cp_rs2 (Test source rs2 = x16)
li x16, 0x990cd381bc0161c3 # load random value
la x5, scratch # base address
sd x16, 0(x5) # store in memory
li x16, 0x54403c42c4ec1ab8 # load another value into integer register
amomaxu.w x9, x16, (x5) # perform operation

# Testcase cp_rs2 (Test source rs2 = x17)
li x17, 0x0e6729f899f15df6 # load random value
la x13, scratch # base address
sd x17, 0(x13) # store in memory
li x17, 0xf673bd0c502c6efc # load another value into integer register
amomaxu.w x18, x17, (x13) # perform operation

# Testcase cp_rs2 (Test source rs2 = x18)
li x18, 0x88066ea559217bcd # load random value
la x22, scratch # base address
sd x18, 0(x22) # store in memory
li x18, 0xc47ec8ffa01fd9f5 # load another value into integer register
amomaxu.w x21, x18, (x22) # perform operation

# Testcase cp_rs2 (Test source rs2 = x19)
li x19, 0x5d422487dc19ca82 # load random value
la x18, scratch # base address
sd x19, 0(x18) # store in memory
li x19, 0x8166d69081148a91 # load another value into integer register
amomaxu.w x30, x19, (x18) # perform operation

# Testcase cp_rs2 (Test source rs2 = x20)
li x20, 0x219ee4c1695adee7 # load random value
la x22, scratch # base address
sd x20, 0(x22) # store in memory
li x20, 0x8ac270562df95ebf # load another value into integer register
amomaxu.w x5, x20, (x22) # perform operation

# Testcase cp_rs2 (Test source rs2 = x21)
li x21, 0x839678b58b3b9ed9 # load random value
la x18, scratch # base address
sd x21, 0(x18) # store in memory
li x21, 0x6b0f56699fcc6150 # load another value into integer register
amomaxu.w x12, x21, (x18) # perform operation

# Testcase cp_rs2 (Test source rs2 = x22)
li x22, 0x935d54db8f386f68 # load random value
la x2, scratch # base address
sd x22, 0(x2) # store in memory
li x22, 0x3c3b26461969ee0a # load another value into integer register
amomaxu.w x28, x22, (x2) # perform operation

# Testcase cp_rs2 (Test source rs2 = x23)
li x23, 0xe9d5c6ed3652f7c4 # load random value
la x25, scratch # base address
sd x23, 0(x25) # store in memory
li x23, 0x70236d07751cc764 # load another value into integer register
amomaxu.w x17, x23, (x25) # perform operation

# Testcase cp_rs2 (Test source rs2 = x24)
li x24, 0xc09c2fce8e1b3ef6 # load random value
la x5, scratch # base address
sd x24, 0(x5) # store in memory
li x24, 0xf41eb67399f933e8 # load another value into integer register
amomaxu.w x21, x24, (x5) # perform operation

# Testcase cp_rs2 (Test source rs2 = x25)
li x25, 0x2b022fc74ceb8165 # load random value
la x1, scratch # base address
sd x25, 0(x1) # store in memory
li x25, 0x440b9b7fdc3268c6 # load another value into integer register
amomaxu.w x8, x25, (x1) # perform operation

# Testcase cp_rs2 (Test source rs2 = x26)
li x26, 0x451358a81751569c # load random value
la x28, scratch # base address
sd x26, 0(x28) # store in memory
li x26, 0xec5884ec41c275d6 # load another value into integer register
amomaxu.w x29, x26, (x28) # perform operation

# Testcase cp_rs2 (Test source rs2 = x27)
li x27, 0x874a3a12167139bd # load random value
la x31, scratch # base address
sd x27, 0(x31) # store in memory
li x27, 0x21b9b3f727f7d194 # load another value into integer register
amomaxu.w x21, x27, (x31) # perform operation

# Testcase cp_rs2 (Test source rs2 = x28)
li x28, 0x5f72ed68afa8d6fa # load random value
la x22, scratch # base address
sd x28, 0(x22) # store in memory
li x28, 0xfe98bc117f8aabf3 # load another value into integer register
amomaxu.w x16, x28, (x22) # perform operation

# Testcase cp_rs2 (Test source rs2 = x29)
li x29, 0x53c1b321b5c1feee # load random value
la x21, scratch # base address
sd x29, 0(x21) # store in memory
li x29, 0x03515acfc18c48fb # load another value into integer register
amomaxu.w x24, x29, (x21) # perform operation

# Testcase cp_rs2 (Test source rs2 = x30)
li x30, 0xf87c23a0b6059de6 # load random value
la x19, scratch # base address
sd x30, 0(x19) # store in memory
li x30, 0xd47c9799e04bb24a # load another value into integer register
amomaxu.w x14, x30, (x19) # perform operation

# Testcase cp_rs2 (Test source rs2 = x31)
li x31, 0x1387260e773e14b9 # load random value
la x7, scratch # base address
sd x31, 0(x7) # store in memory
li x31, 0xaa739cfc93837a3d # load another value into integer register
amomaxu.w x28, x31, (x7) # perform operation

# Testcase cp_rd (Test destination rd = x0)
li x8, 0xc68e04a422d2d4e8 # load random value
la x25, scratch # base address
sd x8, 0(x25) # store in memory
li x8, 0x4e5cae7db1ce76e8 # load another value into integer register
amomaxu.w x0, x8, (x25) # perform operation

# Testcase cp_rd (Test destination rd = x1)
li x31, 0xa56c171302303af3 # load random value
la x16, scratch # base address
sd x31, 0(x16) # store in memory
li x31, 0xc058eae619bc562f # load another value into integer register
amomaxu.w x1, x31, (x16) # perform operation

# Testcase cp_rd (Test destination rd = x2)
li x1, 0x990dd7d1784b4a77 # load random value
la x21, scratch # base address
sd x1, 0(x21) # store in memory
li x1, 0x0ca97da2c9569fd4 # load another value into integer register
amomaxu.w x2, x1, (x21) # perform operation

# Testcase cp_rd (Test destination rd = x3)
li x25, 0xbd923a5b5daca6a0 # load random value
la x5, scratch # base address
sd x25, 0(x5) # store in memory
li x25, 0xf9a1bddf7209f554 # load another value into integer register
amomaxu.w x3, x25, (x5) # perform operation

# Testcase cp_rd (Test destination rd = x4)
mv x5, x4 # switch signature pointer register to avoid conflict with test
li x2, 0xe764f5de94a110a9 # load random value
la x10, scratch # base address
sd x2, 0(x10) # store in memory
li x2, 0xa926fd1275c2930f # load another value into integer register
amomaxu.w x4, x2, (x10) # perform operation

# Testcase cp_rd (Test destination rd = x5)
mv x6, x5 # switch signature pointer register to avoid conflict with test
li x29, 0xf9161d619f45f146 # load random value
la x31, scratch # base address
sd x29, 0(x31) # store in memory
li x29, 0xcbc95308b6cd0a4a # load another value into integer register
amomaxu.w x5, x29, (x31) # perform operation

# Testcase cp_rd (Test destination rd = x6)
mv x7, x6 # switch signature pointer register to avoid conflict with test
li x30, 0xe0efc1f1215c371a # load random value
la x5, scratch # base address
sd x30, 0(x5) # store in memory
li x30, 0xa5400d7be99562c0 # load another value into integer register
amomaxu.w x6, x30, (x5) # perform operation

# Testcase cp_rd (Test destination rd = x7)
mv x4, x7 # switch signature pointer register to avoid conflict with test
li x11, 0x993dee50d6a808c2 # load random value
la x20, scratch # base address
sd x11, 0(x20) # store in memory
li x11, 0xb595f251fe69dc5c # load another value into integer register
amomaxu.w x7, x11, (x20) # perform operation

# Testcase cp_rd (Test destination rd = x8)
li x14, 0x028a2351239608c2 # load random value
la x22, scratch # base address
sd x14, 0(x22) # store in memory
li x14, 0xc864db8e66b26972 # load another value into integer register
amomaxu.w x8, x14, (x22) # perform operation

# Testcase cp_rd (Test destination rd = x9)
li x8, 0x8ad70eb5a99c4a42 # load random value
la x11, scratch # base address
sd x8, 0(x11) # store in memory
li x8, 0x0e02c7195dc48777 # load another value into integer register
amomaxu.w x9, x8, (x11) # perform operation

# Testcase cp_rd (Test destination rd = x10)
li x14, 0xc647a39dc7ab6975 # load random value
la x19, scratch # base address
sd x14, 0(x19) # store in memory
li x14, 0x1abdc6df3d2ada13 # load another value into integer register
amomaxu.w x10, x14, (x19) # perform operation

# Testcase cp_rd (Test destination rd = x11)
li x3, 0x95b001cd18bfdcaf # load random value
la x13, scratch # base address
sd x3, 0(x13) # store in memory
li x3, 0xbc9a61c9f3e0b828 # load another value into integer register
amomaxu.w x11, x3, (x13) # perform operation

# Testcase cp_rd (Test destination rd = x12)
li x23, 0x7b3741fe9ece2d46 # load random value
la x8, scratch # base address
sd x23, 0(x8) # store in memory
li x23, 0xc3f32be758519193 # load another value into integer register
amomaxu.w x12, x23, (x8) # perform operation

# Testcase cp_rd (Test destination rd = x13)
li x9, 0xad7ea1a16774f068 # load random value
la x12, scratch # base address
sd x9, 0(x12) # store in memory
li x9, 0xe09fc5914d37e293 # load another value into integer register
amomaxu.w x13, x9, (x12) # perform operation

# Testcase cp_rd (Test destination rd = x14)
li x1, 0x5381cdc1cfdb2409 # load random value
la x25, scratch # base address
sd x1, 0(x25) # store in memory
li x1, 0xf7b56ca425072e92 # load another value into integer register
amomaxu.w x14, x1, (x25) # perform operation

# Testcase cp_rd (Test destination rd = x15)
li x27, 0xd7015f34ee4fff42 # load random value
la x21, scratch # base address
sd x27, 0(x21) # store in memory
li x27, 0xfda1defc09e5735b # load another value into integer register
amomaxu.w x15, x27, (x21) # perform operation

# Testcase cp_rd (Test destination rd = x16)
li x12, 0x0011df3f8ea55d3b # load random value
la x2, scratch # base address
sd x12, 0(x2) # store in memory
li x12, 0xd8531011b5a8ee0a # load another value into integer register
amomaxu.w x16, x12, (x2) # perform operation

# Testcase cp_rd (Test destination rd = x17)
li x7, 0x412de24e94071337 # load random value
la x20, scratch # base address
sd x7, 0(x20) # store in memory
li x7, 0x3bd82fd5f6df4092 # load another value into integer register
amomaxu.w x17, x7, (x20) # perform operation

# Testcase cp_rd (Test destination rd = x18)
li x9, 0xa58056dd1bbf2853 # load random value
la x28, scratch # base address
sd x9, 0(x28) # store in memory
li x9, 0xa95a33e7a58b6685 # load another value into integer register
amomaxu.w x18, x9, (x28) # perform operation

# Testcase cp_rd (Test destination rd = x19)
li x5, 0x8def6641c9e6bafc # load random value
la x18, scratch # base address
sd x5, 0(x18) # store in memory
li x5, 0x8faa33bcec12b754 # load another value into integer register
amomaxu.w x19, x5, (x18) # perform operation

# Testcase cp_rd (Test destination rd = x20)
li x30, 0x4cf320a064961540 # load random value
la x7, scratch # base address
sd x30, 0(x7) # store in memory
li x30, 0x37c3d24c575f2af0 # load another value into integer register
amomaxu.w x20, x30, (x7) # perform operation

# Testcase cp_rd (Test destination rd = x21)
li x9, 0x3aa02c2aa3e24986 # load random value
la x12, scratch # base address
sd x9, 0(x12) # store in memory
li x9, 0x540e122038cb49a4 # load another value into integer register
amomaxu.w x21, x9, (x12) # perform operation

# Testcase cp_rd (Test destination rd = x22)
li x20, 0x416447ba60bd77e8 # load random value
la x25, scratch # base address
sd x20, 0(x25) # store in memory
li x20, 0x8559fbdb6a11654b # load another value into integer register
amomaxu.w x22, x20, (x25) # perform operation

# Testcase cp_rd (Test destination rd = x23)
li x20, 0xc81cba3272ffdaff # load random value
la x24, scratch # base address
sd x20, 0(x24) # store in memory
li x20, 0xa0124c33bd459f4c # load another value into integer register
amomaxu.w x23, x20, (x24) # perform operation

# Testcase cp_rd (Test destination rd = x24)
li x7, 0x1fda3373fad06ca6 # load random value
la x13, scratch # base address
sd x7, 0(x13) # store in memory
li x7, 0xadb221aa3a214507 # load another value into integer register
amomaxu.w x24, x7, (x13) # perform operation

# Testcase cp_rd (Test destination rd = x25)
li x20, 0x38188032f0cbc17e # load random value
la x7, scratch # base address
sd x20, 0(x7) # store in memory
li x20, 0x0867b8194f1d97ca # load another value into integer register
amomaxu.w x25, x20, (x7) # perform operation

# Testcase cp_rd (Test destination rd = x26)
li x18, 0x455de59f271d7108 # load random value
la x6, scratch # base address
sd x18, 0(x6) # store in memory
li x18, 0x8a0d3af46a79bc39 # load another value into integer register
amomaxu.w x26, x18, (x6) # perform operation

# Testcase cp_rd (Test destination rd = x27)
li x19, 0x4ebbc1cf4b721ca2 # load random value
la x29, scratch # base address
sd x19, 0(x29) # store in memory
li x19, 0x3e3facbe81b60fe6 # load another value into integer register
amomaxu.w x27, x19, (x29) # perform operation

# Testcase cp_rd (Test destination rd = x28)
li x7, 0x0fb65cb2b6435565 # load random value
la x21, scratch # base address
sd x7, 0(x21) # store in memory
li x7, 0xcc2ff17858ff0287 # load another value into integer register
amomaxu.w x28, x7, (x21) # perform operation

# Testcase cp_rd (Test destination rd = x29)
li x23, 0xcb45e029a4d00edb # load random value
la x2, scratch # base address
sd x23, 0(x2) # store in memory
li x23, 0xe7472f6a4bf0370e # load another value into integer register
amomaxu.w x29, x23, (x2) # perform operation

# Testcase cp_rd (Test destination rd = x30)
li x31, 0x81fb35ea502c1c54 # load random value
la x5, scratch # base address
sd x31, 0(x5) # store in memory
li x31, 0x662e1b6936c05a46 # load another value into integer register
amomaxu.w x30, x31, (x5) # perform operation

# Testcase cp_rd (Test destination rd = x31)
li x6, 0xb0e57ff048701686 # load random value
la x26, scratch # base address
sd x6, 0(x26) # store in memory
li x6, 0xed8727184b4f3f6b # load another value into integer register
amomaxu.w x31, x6, (x26) # perform operation

# Testcase cp_rs2_corners (Test source rs2 value = 0x0)
li x20, 0x5bba77d3e5192a24 # load random value
la x18, scratch # base address
sd x20, 0(x18) # store in memory
li x20, 0x0000000000000000 # load another value into integer register
amomaxu.w x29, x20, (x18) # perform operation

# Testcase cp_rs2_corners (Test source rs2 value = 0x1)
li x18, 0x4a33f6e128802e67 # load random value
la x23, scratch # base address
sd x18, 0(x23) # store in memory
li x18, 0x0000000000000001 # load another value into integer register
amomaxu.w x1, x18, (x23) # perform operation

# Testcase cp_rs2_corners (Test source rs2 value = 0x2)
li x17, 0x9a023f6bf6f93e9c # load random value
la x18, scratch # base address
sd x17, 0(x18) # store in memory
li x17, 0x0000000000000002 # load another value into integer register
amomaxu.w x21, x17, (x18) # perform operation

# Testcase cp_rs2_corners (Test source rs2 value = 0x8000000000000000)
li x22, 0xcf02fa77de5864b3 # load random value
la x15, scratch # base address
sd x22, 0(x15) # store in memory
li x22, 0x8000000000000000 # load another value into integer register
amomaxu.w x1, x22, (x15) # perform operation

# Testcase cp_rs2_corners (Test source rs2 value = 0x8000000000000001)
li x3, 0xff5c3c49c3906e08 # load random value
la x31, scratch # base address
sd x3, 0(x31) # store in memory
li x3, 0x8000000000000001 # load another value into integer register
amomaxu.w x18, x3, (x31) # perform operation

# Testcase cp_rs2_corners (Test source rs2 value = 0x7fffffffffffffff)
li x16, 0xa067041e31667f6b # load random value
la x29, scratch # base address
sd x16, 0(x29) # store in memory
li x16, 0x7fffffffffffffff # load another value into integer register
amomaxu.w x8, x16, (x29) # perform operation

# Testcase cp_rs2_corners (Test source rs2 value = 0x7ffffffffffffffe)
li x20, 0xef9726c18e7289d8 # load random value
la x22, scratch # base address
sd x20, 0(x22) # store in memory
li x20, 0x7ffffffffffffffe # load another value into integer register
amomaxu.w x15, x20, (x22) # perform operation

# Testcase cp_rs2_corners (Test source rs2 value = 0xffffffffffffffff)
li x22, 0x732cc1fe2e5a531f # load random value
la x18, scratch # base address
sd x22, 0(x18) # store in memory
li x22, 0xffffffffffffffff # load another value into integer register
amomaxu.w x7, x22, (x18) # perform operation

# Testcase cp_rs2_corners (Test source rs2 value = 0xfffffffffffffffe)
li x27, 0x014b5224467a6df2 # load random value
la x12, scratch # base address
sd x27, 0(x12) # store in memory
li x27, 0xfffffffffffffffe # load another value into integer register
amomaxu.w x6, x27, (x12) # perform operation

# Testcase cp_rs2_corners (Test source rs2 value = 0x5bbc887763ae86f2)
li x3, 0xc409c5ad73ffbdcc # load random value
la x17, scratch # base address
sd x3, 0(x17) # store in memory
li x3, 0x5bbc887763ae86f2 # load another value into integer register
amomaxu.w x2, x3, (x17) # perform operation

# Testcase cp_rs2_corners (Test source rs2 value = 0xaaaaaaaaaaaaaaaa)
li x14, 0xfa9af245de8fac63 # load random value
la x20, scratch # base address
sd x14, 0(x20) # store in memory
li x14, 0xaaaaaaaaaaaaaaaa # load another value into integer register
amomaxu.w x3, x14, (x20) # perform operation

# Testcase cp_rs2_corners (Test source rs2 value = 0x5555555555555555)
li x12, 0xfe8cf62d3e56443d # load random value
la x23, scratch # base address
sd x12, 0(x23) # store in memory
li x12, 0x5555555555555555 # load another value into integer register
amomaxu.w x15, x12, (x23) # perform operation

# Testcase cp_rs2_corners (Test source rs2 value = 0xffffffff)
li x21, 0xe02cc726c4212ac0 # load random value
la x2, scratch # base address
sd x21, 0(x2) # store in memory
li x21, 0x00000000ffffffff # load another value into integer register
amomaxu.w x22, x21, (x2) # perform operation

# Testcase cp_rs2_corners (Test source rs2 value = 0xfffffffe)
li x18, 0xce7b870d23e279eb # load random value
la x5, scratch # base address
sd x18, 0(x5) # store in memory
li x18, 0x00000000fffffffe # load another value into integer register
amomaxu.w x14, x18, (x5) # perform operation

# Testcase cp_rs2_corners (Test source rs2 value = 0x100000000)
li x27, 0xd3c0e231beb9cd4e # load random value
la x15, scratch # base address
sd x27, 0(x15) # store in memory
li x27, 0x0000000100000000 # load another value into integer register
amomaxu.w x12, x27, (x15) # perform operation

# Testcase cp_rs2_corners (Test source rs2 value = 0x100000001)
li x24, 0xafd29e4b91f71832 # load random value
la x21, scratch # base address
sd x24, 0(x21) # store in memory
li x24, 0x0000000100000001 # load another value into integer register
amomaxu.w x12, x24, (x21) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x1)
li x1, 0x223575fbc791e40a # load random value
la x1, scratch # base address
sd x1, 0(x1) # store in memory
amomaxu.w x11, x1, (x1) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x2)
li x2, 0xd33f828723c16715 # load random value
la x2, scratch # base address
sd x2, 0(x2) # store in memory
amomaxu.w x20, x2, (x2) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x3)
li x3, 0xc07168f55ad88e86 # load random value
la x3, scratch # base address
sd x3, 0(x3) # store in memory
amomaxu.w x20, x3, (x3) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x4)
mv x5, x4 # switch signature pointer register to avoid conflict with test
li x4, 0xf1411e6bdaf76dca # load random value
la x4, scratch # base address
sd x4, 0(x4) # store in memory
amomaxu.w x25, x4, (x4) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x5)
mv x7, x5 # switch signature pointer register to avoid conflict with test
li x5, 0xb066d6468fc30720 # load random value
la x5, scratch # base address
sd x5, 0(x5) # store in memory
amomaxu.w x6, x5, (x5) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x6)
li x6, 0xa566ba6c0f4e885c # load random value
la x6, scratch # base address
sd x6, 0(x6) # store in memory
amomaxu.w x16, x6, (x6) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x7)
mv x4, x7 # switch signature pointer register to avoid conflict with test
li x7, 0x53fedab063684e67 # load random value
la x7, scratch # base address
sd x7, 0(x7) # store in memory
amomaxu.w x18, x7, (x7) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x8)
li x8, 0x0286a64e94c5c23b # load random value
la x8, scratch # base address
sd x8, 0(x8) # store in memory
amomaxu.w x30, x8, (x8) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x9)
li x9, 0x7fd23819ab88cd79 # load random value
la x9, scratch # base address
sd x9, 0(x9) # store in memory
amomaxu.w x10, x9, (x9) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x10)
li x10, 0xf7825498a7d0b9ed # load random value
la x10, scratch # base address
sd x10, 0(x10) # store in memory
amomaxu.w x21, x10, (x10) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x11)
li x11, 0xa802c69ab4ecc74a # load random value
la x11, scratch # base address
sd x11, 0(x11) # store in memory
amomaxu.w x27, x11, (x11) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x12)
li x12, 0x855342c4705a4b79 # load random value
la x12, scratch # base address
sd x12, 0(x12) # store in memory
amomaxu.w x24, x12, (x12) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x13)
li x13, 0x0ecb923bc92a77ae # load random value
la x13, scratch # base address
sd x13, 0(x13) # store in memory
amomaxu.w x22, x13, (x13) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x14)
li x14, 0x33592e7d271b6f88 # load random value
la x14, scratch # base address
sd x14, 0(x14) # store in memory
amomaxu.w x27, x14, (x14) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x15)
li x15, 0xfae29ea6f7ca008b # load random value
la x15, scratch # base address
sd x15, 0(x15) # store in memory
amomaxu.w x7, x15, (x15) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x16)
li x16, 0x6fe9f1c5cba621b7 # load random value
la x16, scratch # base address
sd x16, 0(x16) # store in memory
amomaxu.w x30, x16, (x16) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x17)
li x17, 0xd3374e865071878c # load random value
la x17, scratch # base address
sd x17, 0(x17) # store in memory
amomaxu.w x7, x17, (x17) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x18)
li x18, 0x53f0023534e5c219 # load random value
la x18, scratch # base address
sd x18, 0(x18) # store in memory
amomaxu.w x6, x18, (x18) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x19)
li x19, 0x70fd763771ee2c2a # load random value
la x19, scratch # base address
sd x19, 0(x19) # store in memory
amomaxu.w x14, x19, (x19) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x20)
li x20, 0x1c9601cea1d0043c # load random value
la x20, scratch # base address
sd x20, 0(x20) # store in memory
amomaxu.w x31, x20, (x20) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x21)
li x21, 0xb5a117f6e49c4f99 # load random value
la x21, scratch # base address
sd x21, 0(x21) # store in memory
amomaxu.w x6, x21, (x21) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x22)
li x22, 0xf06fd40d531adb0c # load random value
la x22, scratch # base address
sd x22, 0(x22) # store in memory
amomaxu.w x1, x22, (x22) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x23)
li x23, 0x5251f1f7cfaa159b # load random value
la x23, scratch # base address
sd x23, 0(x23) # store in memory
amomaxu.w x17, x23, (x23) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x24)
li x24, 0xd188fd34d6cdb06e # load random value
la x24, scratch # base address
sd x24, 0(x24) # store in memory
amomaxu.w x7, x24, (x24) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x25)
li x25, 0xf3665b273863ab24 # load random value
la x25, scratch # base address
sd x25, 0(x25) # store in memory
amomaxu.w x24, x25, (x25) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x26)
li x26, 0x97279fe22388be8f # load random value
la x26, scratch # base address
sd x26, 0(x26) # store in memory
amomaxu.w x20, x26, (x26) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x27)
li x27, 0xfbc8df9b149a7c55 # load random value
la x27, scratch # base address
sd x27, 0(x27) # store in memory
amomaxu.w x31, x27, (x27) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x28)
li x28, 0x0148fc0357fce130 # load random value
la x28, scratch # base address
sd x28, 0(x28) # store in memory
amomaxu.w x12, x28, (x28) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x29)
li x29, 0xf2f0f53bd8f1ecb6 # load random value
la x29, scratch # base address
sd x29, 0(x29) # store in memory
amomaxu.w x3, x29, (x29) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x30)
li x30, 0x65949596bbe7a1cc # load random value
la x30, scratch # base address
sd x30, 0(x30) # store in memory
amomaxu.w x5, x30, (x30) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x31)
li x31, 0x29bd0e50e7a11c59 # load random value
la x31, scratch # base address
sd x31, 0(x31) # store in memory
amomaxu.w x25, x31, (x31) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x1)
li x24, 0x2ab6de8cd126f38c # load random value
la x1, scratch # base address
sd x24, 0(x1) # store in memory
li x24, 0xfc9b39c1c8ee329a # load another value into integer register
amomaxu.w x1, x24, (x1) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x2)
li x12, 0x28ce3771e56645e8 # load random value
la x2, scratch # base address
sd x12, 0(x2) # store in memory
li x12, 0x5d45a533e49283fd # load another value into integer register
amomaxu.w x2, x12, (x2) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x3)
li x1, 0xe4f00f54833e0fd8 # load random value
la x3, scratch # base address
sd x1, 0(x3) # store in memory
li x1, 0xb9272d4afb5cf76b # load another value into integer register
amomaxu.w x3, x1, (x3) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x4)
mv x5, x4 # switch signature pointer register to avoid conflict with test
li x23, 0xda1e846624406ddd # load random value
la x4, scratch # base address
sd x23, 0(x4) # store in memory
li x23, 0x35ec6dcdf31f3833 # load another value into integer register
amomaxu.w x4, x23, (x4) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x5)
mv x6, x5 # switch signature pointer register to avoid conflict with test
li x21, 0x21683679968fa773 # load random value
la x5, scratch # base address
sd x21, 0(x5) # store in memory
li x21, 0xa6fc87615fe56ab5 # load another value into integer register
amomaxu.w x5, x21, (x5) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x6)
mv x7, x6 # switch signature pointer register to avoid conflict with test
li x22, 0x541b5b53e5acd79b # load random value
la x6, scratch # base address
sd x22, 0(x6) # store in memory
li x22, 0x4ab9fc3192888ec7 # load another value into integer register
amomaxu.w x6, x22, (x6) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x7)
mv x4, x7 # switch signature pointer register to avoid conflict with test
li x16, 0x3a121141d35f421a # load random value
la x7, scratch # base address
sd x16, 0(x7) # store in memory
li x16, 0x87e99fc12a875c3b # load another value into integer register
amomaxu.w x7, x16, (x7) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x8)
li x23, 0x623541bb183a6bdb # load random value
la x8, scratch # base address
sd x23, 0(x8) # store in memory
li x23, 0x85aabc25a642f6c1 # load another value into integer register
amomaxu.w x8, x23, (x8) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x9)
li x3, 0xa422813b127d4be7 # load random value
la x9, scratch # base address
sd x3, 0(x9) # store in memory
li x3, 0x49a7095b3354beaa # load another value into integer register
amomaxu.w x9, x3, (x9) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x10)
li x9, 0x7481eac82a737bc7 # load random value
la x10, scratch # base address
sd x9, 0(x10) # store in memory
li x9, 0x8d065dbc1782f65b # load another value into integer register
amomaxu.w x10, x9, (x10) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x11)
li x13, 0x7c1816aad2e622c6 # load random value
la x11, scratch # base address
sd x13, 0(x11) # store in memory
li x13, 0x4052162ff6a2c399 # load another value into integer register
amomaxu.w x11, x13, (x11) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x12)
li x10, 0x8c207248cb0bf792 # load random value
la x12, scratch # base address
sd x10, 0(x12) # store in memory
li x10, 0x6683927a8bf90223 # load another value into integer register
amomaxu.w x12, x10, (x12) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x13)
li x26, 0x9e704d3ec1646235 # load random value
la x13, scratch # base address
sd x26, 0(x13) # store in memory
li x26, 0xb52933109daf9bef # load another value into integer register
amomaxu.w x13, x26, (x13) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x14)
li x8, 0xaf5491d6aa8b09f7 # load random value
la x14, scratch # base address
sd x8, 0(x14) # store in memory
li x8, 0xe602472c084225db # load another value into integer register
amomaxu.w x14, x8, (x14) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x15)
li x5, 0x31fc3044d0a560f5 # load random value
la x15, scratch # base address
sd x5, 0(x15) # store in memory
li x5, 0x6af0bcfcd820d7b8 # load another value into integer register
amomaxu.w x15, x5, (x15) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x16)
li x17, 0x1944e3a67cc30959 # load random value
la x16, scratch # base address
sd x17, 0(x16) # store in memory
li x17, 0xde99c1a1d1a2d090 # load another value into integer register
amomaxu.w x16, x17, (x16) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x17)
li x11, 0x7d3513541d983928 # load random value
la x17, scratch # base address
sd x11, 0(x17) # store in memory
li x11, 0x1a28b60889a64d8b # load another value into integer register
amomaxu.w x17, x11, (x17) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x18)
li x23, 0xb39695178c9b9db9 # load random value
la x18, scratch # base address
sd x23, 0(x18) # store in memory
li x23, 0x2503f68f5adf6864 # load another value into integer register
amomaxu.w x18, x23, (x18) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x19)
li x19, 0x80c05178120a65af # load random value
la x19, scratch # base address
sd x19, 0(x19) # store in memory
amomaxu.w x19, x19, (x19) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x20)
li x15, 0x6bcdc2d583aad6e0 # load random value
la x20, scratch # base address
sd x15, 0(x20) # store in memory
li x15, 0x4884fd037f82f7ca # load another value into integer register
amomaxu.w x20, x15, (x20) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x21)
li x1, 0xaa73450485e48e02 # load random value
la x21, scratch # base address
sd x1, 0(x21) # store in memory
li x1, 0x6b344a7dbf72fca2 # load another value into integer register
amomaxu.w x21, x1, (x21) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x22)
li x6, 0xea0ab137ede8927e # load random value
la x22, scratch # base address
sd x6, 0(x22) # store in memory
li x6, 0xb1f06df5195c1113 # load another value into integer register
amomaxu.w x22, x6, (x22) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x23)
li x14, 0x7fe77899560b0f65 # load random value
la x23, scratch # base address
sd x14, 0(x23) # store in memory
li x14, 0xc63aa7d678116980 # load another value into integer register
amomaxu.w x23, x14, (x23) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x24)
li x12, 0x3b88a46459ad00cf # load random value
la x24, scratch # base address
sd x12, 0(x24) # store in memory
li x12, 0xd01b2507159b509b # load another value into integer register
amomaxu.w x24, x12, (x24) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x25)
li x3, 0x468f2721c91524df # load random value
la x25, scratch # base address
sd x3, 0(x25) # store in memory
li x3, 0xa84c7e614cd99ac7 # load another value into integer register
amomaxu.w x25, x3, (x25) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x26)
li x2, 0x089b9bf7913d0717 # load random value
la x26, scratch # base address
sd x2, 0(x26) # store in memory
li x2, 0xba80f04974175c7a # load another value into integer register
amomaxu.w x26, x2, (x26) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x27)
li x28, 0x6ef71b18c36f48af # load random value
la x27, scratch # base address
sd x28, 0(x27) # store in memory
li x28, 0x31b08a9da05cacbe # load another value into integer register
amomaxu.w x27, x28, (x27) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x28)
li x28, 0x078a7aa44f2c776e # load random value
la x28, scratch # base address
sd x28, 0(x28) # store in memory
amomaxu.w x28, x28, (x28) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x29)
li x28, 0xea7565864b119245 # load random value
la x29, scratch # base address
sd x28, 0(x29) # store in memory
li x28, 0xc239a2fd64a50869 # load another value into integer register
amomaxu.w x29, x28, (x29) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x30)
li x29, 0x6727a8e48c63a9f5 # load random value
la x30, scratch # base address
sd x29, 0(x30) # store in memory
li x29, 0x64c6847e5bc0e28b # load another value into integer register
amomaxu.w x30, x29, (x30) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x31)
li x12, 0xca2dafb95eaddc38 # load random value
la x31, scratch # base address
sd x12, 0(x31) # store in memory
li x12, 0xf49e73d203c1fd5e # load another value into integer register
amomaxu.w x31, x12, (x31) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x0)
li x0, 0x3d88a248093e09a2 # load random value
la x15, scratch # base address
sd x0, 0(x15) # store in memory
li x0, 0x2684f2ed8c7a2824 # load another value into integer register
amomaxu.w x0, x0, (x15) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x1)
li x1, 0x31b72347e9b1ccb5 # load random value
la x17, scratch # base address
sd x1, 0(x17) # store in memory
li x1, 0x608c62c38d317f1a # load another value into integer register
amomaxu.w x1, x1, (x17) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x2)
li x2, 0x810cc88fba2dc23e # load random value
la x1, scratch # base address
sd x2, 0(x1) # store in memory
li x2, 0xd76048fd9cf37076 # load another value into integer register
amomaxu.w x2, x2, (x1) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x3)
li x3, 0x744339b29de8aae1 # load random value
la x31, scratch # base address
sd x3, 0(x31) # store in memory
li x3, 0xd1d37a2a90d6fde2 # load another value into integer register
amomaxu.w x3, x3, (x31) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x4)
mv x5, x4 # switch signature pointer register to avoid conflict with test
li x4, 0x9308d917d9687664 # load random value
la x12, scratch # base address
sd x4, 0(x12) # store in memory
li x4, 0x7e4752f9f280f2a8 # load another value into integer register
amomaxu.w x4, x4, (x12) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x5)
mv x6, x5 # switch signature pointer register to avoid conflict with test
li x5, 0x4d807f2133e36816 # load random value
la x3, scratch # base address
sd x5, 0(x3) # store in memory
li x5, 0xa30255cdc9b98126 # load another value into integer register
amomaxu.w x5, x5, (x3) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x6)
mv x7, x6 # switch signature pointer register to avoid conflict with test
li x6, 0xec8543587c51221a # load random value
la x31, scratch # base address
sd x6, 0(x31) # store in memory
li x6, 0x505aff787b9da835 # load another value into integer register
amomaxu.w x6, x6, (x31) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x7)
mv x4, x7 # switch signature pointer register to avoid conflict with test
li x7, 0xba6c5b852d2385bb # load random value
la x17, scratch # base address
sd x7, 0(x17) # store in memory
li x7, 0x58733d9c1293eb2c # load another value into integer register
amomaxu.w x7, x7, (x17) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x8)
li x8, 0xa3a026035ac8559f # load random value
la x18, scratch # base address
sd x8, 0(x18) # store in memory
li x8, 0xfadcdf7f6e6b76ad # load another value into integer register
amomaxu.w x8, x8, (x18) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x9)
li x9, 0x9c2fee7d8611eb4a # load random value
la x29, scratch # base address
sd x9, 0(x29) # store in memory
li x9, 0x338dc7d9defe7d15 # load another value into integer register
amomaxu.w x9, x9, (x29) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x10)
li x10, 0x13f77645133c50a0 # load random value
la x15, scratch # base address
sd x10, 0(x15) # store in memory
li x10, 0xc03b43f6d8ab6021 # load another value into integer register
amomaxu.w x10, x10, (x15) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x11)
li x11, 0xdd80f6891d6960a1 # load random value
la x14, scratch # base address
sd x11, 0(x14) # store in memory
li x11, 0x6dca9f2cfb4ad782 # load another value into integer register
amomaxu.w x11, x11, (x14) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x12)
li x12, 0x14ff92610bce938e # load random value
la x7, scratch # base address
sd x12, 0(x7) # store in memory
li x12, 0xbd7e09ac0c885ffd # load another value into integer register
amomaxu.w x12, x12, (x7) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x13)
li x13, 0x7b8be9cbbb3b3c0b # load random value
la x15, scratch # base address
sd x13, 0(x15) # store in memory
li x13, 0x010bcada77f5756d # load another value into integer register
amomaxu.w x13, x13, (x15) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x14)
li x14, 0xe8c7d8eabfa34fe7 # load random value
la x26, scratch # base address
sd x14, 0(x26) # store in memory
li x14, 0xddacb4e8b06d60df # load another value into integer register
amomaxu.w x14, x14, (x26) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x15)
li x15, 0x8aff0ad6fa72fbe4 # load random value
la x8, scratch # base address
sd x15, 0(x8) # store in memory
li x15, 0xbbedbd5bbdf1262e # load another value into integer register
amomaxu.w x15, x15, (x8) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x16)
li x16, 0x9289979f4cde62cd # load random value
la x26, scratch # base address
sd x16, 0(x26) # store in memory
li x16, 0x1c1bb935a35408f1 # load another value into integer register
amomaxu.w x16, x16, (x26) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x17)
li x17, 0x06e8a33366c6d44a # load random value
la x17, scratch # base address
sd x17, 0(x17) # store in memory
amomaxu.w x17, x17, (x17) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x18)
li x18, 0xc3b3915b22d90697 # load random value
la x2, scratch # base address
sd x18, 0(x2) # store in memory
li x18, 0x73a7e8b3657e39cf # load another value into integer register
amomaxu.w x18, x18, (x2) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x19)
li x19, 0x8f5fbd62dae7fcb4 # load random value
la x22, scratch # base address
sd x19, 0(x22) # store in memory
li x19, 0x73aae88ab021fb46 # load another value into integer register
amomaxu.w x19, x19, (x22) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x20)
li x20, 0x20d20f601fef2384 # load random value
la x20, scratch # base address
sd x20, 0(x20) # store in memory
amomaxu.w x20, x20, (x20) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x21)
li x21, 0xf86679c521789110 # load random value
la x14, scratch # base address
sd x21, 0(x14) # store in memory
li x21, 0x29573178d5ad13c2 # load another value into integer register
amomaxu.w x21, x21, (x14) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x22)
li x22, 0x3f31c7466a6c1aad # load random value
la x5, scratch # base address
sd x22, 0(x5) # store in memory
li x22, 0xcbc2850453fa770e # load another value into integer register
amomaxu.w x22, x22, (x5) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x23)
li x23, 0xba05e509c66b4c47 # load random value
la x27, scratch # base address
sd x23, 0(x27) # store in memory
li x23, 0x3242b48855fcab59 # load another value into integer register
amomaxu.w x23, x23, (x27) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x24)
li x24, 0x6b704b45b9097d35 # load random value
la x30, scratch # base address
sd x24, 0(x30) # store in memory
li x24, 0xc720f4901e7a4c62 # load another value into integer register
amomaxu.w x24, x24, (x30) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x25)
li x25, 0x93415dfd1dc3309c # load random value
la x20, scratch # base address
sd x25, 0(x20) # store in memory
li x25, 0x86dfaf6b09fcc7cc # load another value into integer register
amomaxu.w x25, x25, (x20) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x26)
li x26, 0xdd15c1128456ddb3 # load random value
la x24, scratch # base address
sd x26, 0(x24) # store in memory
li x26, 0x770a7fc7b8d79245 # load another value into integer register
amomaxu.w x26, x26, (x24) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x27)
li x27, 0xb074c7fd0d13f709 # load random value
la x3, scratch # base address
sd x27, 0(x3) # store in memory
li x27, 0xea6bb8059fb2816e # load another value into integer register
amomaxu.w x27, x27, (x3) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x28)
li x28, 0x67b565af3e8e1135 # load random value
la x29, scratch # base address
sd x28, 0(x29) # store in memory
li x28, 0xc4d86738f2a9e716 # load another value into integer register
amomaxu.w x28, x28, (x29) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x29)
li x29, 0x23c9b71bf9722a5e # load random value
la x8, scratch # base address
sd x29, 0(x8) # store in memory
li x29, 0x374a3c4186de3ee6 # load another value into integer register
amomaxu.w x29, x29, (x8) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x30)
li x30, 0x9e1c3b71ff7840c7 # load random value
la x23, scratch # base address
sd x30, 0(x23) # store in memory
li x30, 0x86feb93920cbbbc3 # load another value into integer register
amomaxu.w x30, x30, (x23) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x31)
li x31, 0x4fa8b23fd01da7e5 # load random value
la x20, scratch # base address
sd x31, 0(x20) # store in memory
li x31, 0xe62bffecba50af2c # load another value into integer register
amomaxu.w x31, x31, (x20) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x1)
li x1, 0xdaaf34e9b8941c48 # load random value
la x1, scratch # base address
sd x1, 0(x1) # store in memory
amomaxu.w x1, x1, (x1) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x2)
li x2, 0x79f6dc272e4e7768 # load random value
la x2, scratch # base address
sd x2, 0(x2) # store in memory
amomaxu.w x2, x2, (x2) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x3)
li x3, 0x6056773bae261a69 # load random value
la x3, scratch # base address
sd x3, 0(x3) # store in memory
amomaxu.w x3, x3, (x3) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x4)
mv x5, x4 # switch signature pointer register to avoid conflict with test
li x4, 0x03ab32d33aead346 # load random value
la x4, scratch # base address
sd x4, 0(x4) # store in memory
amomaxu.w x4, x4, (x4) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x5)
mv x6, x5 # switch signature pointer register to avoid conflict with test
li x5, 0x3f69158a72fff274 # load random value
la x5, scratch # base address
sd x5, 0(x5) # store in memory
amomaxu.w x5, x5, (x5) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x6)
mv x7, x6 # switch signature pointer register to avoid conflict with test
li x6, 0x9c13dd98751583db # load random value
la x6, scratch # base address
sd x6, 0(x6) # store in memory
amomaxu.w x6, x6, (x6) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x7)
mv x4, x7 # switch signature pointer register to avoid conflict with test
li x7, 0x0b30b5a015b7c588 # load random value
la x7, scratch # base address
sd x7, 0(x7) # store in memory
amomaxu.w x7, x7, (x7) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x8)
li x8, 0xbc1efcf436818e66 # load random value
la x8, scratch # base address
sd x8, 0(x8) # store in memory
amomaxu.w x8, x8, (x8) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x9)
li x9, 0x118990e7186a036a # load random value
la x9, scratch # base address
sd x9, 0(x9) # store in memory
amomaxu.w x9, x9, (x9) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x10)
li x10, 0x5c02cbf611bad680 # load random value
la x10, scratch # base address
sd x10, 0(x10) # store in memory
amomaxu.w x10, x10, (x10) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x11)
li x11, 0xb8a3323fe3e1ac76 # load random value
la x11, scratch # base address
sd x11, 0(x11) # store in memory
amomaxu.w x11, x11, (x11) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x12)
li x12, 0x8576ebb91da48fb7 # load random value
la x12, scratch # base address
sd x12, 0(x12) # store in memory
amomaxu.w x12, x12, (x12) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x13)
li x13, 0x3b47cba137131979 # load random value
la x13, scratch # base address
sd x13, 0(x13) # store in memory
amomaxu.w x13, x13, (x13) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x14)
li x14, 0xb9738b568fcdccfd # load random value
la x14, scratch # base address
sd x14, 0(x14) # store in memory
amomaxu.w x14, x14, (x14) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x15)
li x15, 0x7054275ab726d30c # load random value
la x15, scratch # base address
sd x15, 0(x15) # store in memory
amomaxu.w x15, x15, (x15) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x16)
li x16, 0x593240d476f44749 # load random value
la x16, scratch # base address
sd x16, 0(x16) # store in memory
amomaxu.w x16, x16, (x16) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x17)
li x17, 0x3e69ee2075a73ea9 # load random value
la x17, scratch # base address
sd x17, 0(x17) # store in memory
amomaxu.w x17, x17, (x17) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x18)
li x18, 0x01ff09e5cc3f0de1 # load random value
la x18, scratch # base address
sd x18, 0(x18) # store in memory
amomaxu.w x18, x18, (x18) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x19)
li x19, 0x7cb27370e5d34b6b # load random value
la x19, scratch # base address
sd x19, 0(x19) # store in memory
amomaxu.w x19, x19, (x19) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x20)
li x20, 0x49841e1e58a179f1 # load random value
la x20, scratch # base address
sd x20, 0(x20) # store in memory
amomaxu.w x20, x20, (x20) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x21)
li x21, 0x38ab9c9c58c85b99 # load random value
la x21, scratch # base address
sd x21, 0(x21) # store in memory
amomaxu.w x21, x21, (x21) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x22)
li x22, 0x8474fad96e2baf1c # load random value
la x22, scratch # base address
sd x22, 0(x22) # store in memory
amomaxu.w x22, x22, (x22) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x23)
li x23, 0xbd5b3cd581b00119 # load random value
la x23, scratch # base address
sd x23, 0(x23) # store in memory
amomaxu.w x23, x23, (x23) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x24)
li x24, 0x2f35ce0aa2828b02 # load random value
la x24, scratch # base address
sd x24, 0(x24) # store in memory
amomaxu.w x24, x24, (x24) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x25)
li x25, 0x0e09b9fc31441ab6 # load random value
la x25, scratch # base address
sd x25, 0(x25) # store in memory
amomaxu.w x25, x25, (x25) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x26)
li x26, 0x8c20df66d82b9379 # load random value
la x26, scratch # base address
sd x26, 0(x26) # store in memory
amomaxu.w x26, x26, (x26) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x27)
li x27, 0xc205e1965ca6db1e # load random value
la x27, scratch # base address
sd x27, 0(x27) # store in memory
amomaxu.w x27, x27, (x27) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x28)
li x28, 0x2a1c42b9cec1d44b # load random value
la x28, scratch # base address
sd x28, 0(x28) # store in memory
amomaxu.w x28, x28, (x28) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x29)
li x29, 0x5cd1300295c70b95 # load random value
la x29, scratch # base address
sd x29, 0(x29) # store in memory
amomaxu.w x29, x29, (x29) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x30)
li x30, 0x683884bd6c2b6adf # load random value
la x30, scratch # base address
sd x30, 0(x30) # store in memory
amomaxu.w x30, x30, (x30) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x31)
li x31, 0x2609d649c2d3af2c # load random value
la x31, scratch # base address
sd x31, 0(x31) # store in memory
amomaxu.w x31, x31, (x31) # perform operation

# Testcase cp_gpr/fpr_hazard nohaz test
la x25, scratch
add x22, x20, x26 # perform first operation
amomaxu.w x16, x14, (x25) # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard nohaz test
la x1, scratch
add x8, x18, x10 # perform first operation
amomaxu.w x9, x6, (x1) # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard nohaz test
la x7, scratch
add x2, x25, x31 # perform first operation
amomaxu.w x17, x22, (x7) # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard raw test
la x28, scratch
add x2, x2, x0 # perform first operation
amomaxu.w x1, x2, (x28) # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard raw test
la x25, scratch
add x25, x25, x0 # perform first operation
amomaxu.w x12, x16, (x25) # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard raw test
la x13, scratch
add x18, x18, x0 # perform first operation
amomaxu.w x18, x31, (x13) # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard waw test
la x29, scratch
add x19, x10, x14 # perform first operation
amomaxu.w x19, x11, (x29) # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard waw test
la x21, scratch
add x3, x6, x25 # perform first operation
amomaxu.w x3, x2, (x21) # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard waw test
la x2, scratch
add x22, x15, x24 # perform first operation
amomaxu.w x22, x5, (x2) # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard war test
la x13, scratch
add x22, x10, x20 # perform first operation
amomaxu.w x10, x21, (x13) # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard war test
la x31, scratch
add x8, x18, x16 # perform first operation
amomaxu.w x16, x25, (x31) # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard war test
la x28, scratch
add x2, x3, x19 # perform first operation
amomaxu.w x29, x22, (x28) # perform second (triggering) operation

#.EQU SIGSIZE,0


// ******************
// Tests from: WALLY-COV-amoand.w.S
// ******************


# initialize signature pointer
la x4, begin_signature

    
# Testcase cp_rs1 (Test source rs1 = x1)
li x15, 0xd239692e887f47e2 # load random value
la x1, scratch # base address
sd x15, 0(x1) # store in memory
li x15, 0x96b2b06776a5ca12 # load another value into integer register
amoand.w x8, x15, (x1) # perform operation

# Testcase cp_rs1 (Test source rs1 = x2)
li x17, 0xe17ceda361af0372 # load random value
la x2, scratch # base address
sd x17, 0(x2) # store in memory
li x17, 0x7aa741f8bf053d2a # load another value into integer register
amoand.w x23, x17, (x2) # perform operation

# Testcase cp_rs1 (Test source rs1 = x3)
li x1, 0x1e089c1bcdecb4c8 # load random value
la x3, scratch # base address
sd x1, 0(x3) # store in memory
li x1, 0x786a4fc5712dcb41 # load another value into integer register
amoand.w x10, x1, (x3) # perform operation

# Testcase cp_rs1 (Test source rs1 = x4)
mv x5, x4 # switch signature pointer register to avoid conflict with test
li x29, 0x23241ec2ce2b5fc2 # load random value
la x4, scratch # base address
sd x29, 0(x4) # store in memory
li x29, 0x1e6b0afa3c5b8d5c # load another value into integer register
amoand.w x13, x29, (x4) # perform operation

# Testcase cp_rs1 (Test source rs1 = x5)
mv x6, x5 # switch signature pointer register to avoid conflict with test
li x18, 0x7cdd3b9d7178ff41 # load random value
la x5, scratch # base address
sd x18, 0(x5) # store in memory
li x18, 0x55afe5b7e81ee083 # load another value into integer register
amoand.w x11, x18, (x5) # perform operation

# Testcase cp_rs1 (Test source rs1 = x6)
mv x4, x6 # switch signature pointer register to avoid conflict with test
li x8, 0x179308af42847620 # load random value
la x6, scratch # base address
sd x8, 0(x6) # store in memory
li x8, 0x08df635bb51f42ba # load another value into integer register
amoand.w x7, x8, (x6) # perform operation

# Testcase cp_rs1 (Test source rs1 = x7)
li x27, 0xf04dd7a79c749ee7 # load random value
la x7, scratch # base address
sd x27, 0(x7) # store in memory
li x27, 0xd6fcc37988946274 # load another value into integer register
amoand.w x13, x27, (x7) # perform operation

# Testcase cp_rs1 (Test source rs1 = x8)
li x27, 0x2c8a959a1fd62472 # load random value
la x8, scratch # base address
sd x27, 0(x8) # store in memory
li x27, 0x19949228eb312f49 # load another value into integer register
amoand.w x12, x27, (x8) # perform operation

# Testcase cp_rs1 (Test source rs1 = x9)
li x29, 0x459b5dfc2fb43002 # load random value
la x9, scratch # base address
sd x29, 0(x9) # store in memory
li x29, 0xda713e7c215e2e1d # load another value into integer register
amoand.w x18, x29, (x9) # perform operation

# Testcase cp_rs1 (Test source rs1 = x10)
li x7, 0x61ca3190d3231877 # load random value
la x10, scratch # base address
sd x7, 0(x10) # store in memory
li x7, 0xcb2bd34d29792a4c # load another value into integer register
amoand.w x15, x7, (x10) # perform operation

# Testcase cp_rs1 (Test source rs1 = x11)
li x13, 0xb5ae0e904d077721 # load random value
la x11, scratch # base address
sd x13, 0(x11) # store in memory
li x13, 0x5aea95bef530bc16 # load another value into integer register
amoand.w x28, x13, (x11) # perform operation

# Testcase cp_rs1 (Test source rs1 = x12)
li x27, 0xc9904161fba8dcd6 # load random value
la x12, scratch # base address
sd x27, 0(x12) # store in memory
li x27, 0x2d26cae0935270ee # load another value into integer register
amoand.w x2, x27, (x12) # perform operation

# Testcase cp_rs1 (Test source rs1 = x13)
li x3, 0x752af198a1aa7fae # load random value
la x13, scratch # base address
sd x3, 0(x13) # store in memory
li x3, 0xde121f886a92d8d0 # load another value into integer register
amoand.w x1, x3, (x13) # perform operation

# Testcase cp_rs1 (Test source rs1 = x14)
li x6, 0xa40cd143cb6707a1 # load random value
la x14, scratch # base address
sd x6, 0(x14) # store in memory
li x6, 0xfb6e517ab9e69de6 # load another value into integer register
amoand.w x31, x6, (x14) # perform operation

# Testcase cp_rs1 (Test source rs1 = x15)
li x17, 0x1d3c28389dd1caf7 # load random value
la x15, scratch # base address
sd x17, 0(x15) # store in memory
li x17, 0xc3557318a2c9cb4e # load another value into integer register
amoand.w x9, x17, (x15) # perform operation

# Testcase cp_rs1 (Test source rs1 = x16)
li x25, 0x41f4c6c62e6dcfb9 # load random value
la x16, scratch # base address
sd x25, 0(x16) # store in memory
li x25, 0x193627f60c899a74 # load another value into integer register
amoand.w x22, x25, (x16) # perform operation

# Testcase cp_rs1 (Test source rs1 = x17)
li x18, 0x9800e4300cce2d9e # load random value
la x17, scratch # base address
sd x18, 0(x17) # store in memory
li x18, 0x30a43c84e0b7d0cc # load another value into integer register
amoand.w x26, x18, (x17) # perform operation

# Testcase cp_rs1 (Test source rs1 = x18)
li x13, 0x278b54da8dfe6bfa # load random value
la x18, scratch # base address
sd x13, 0(x18) # store in memory
li x13, 0xccb8b350570544ab # load another value into integer register
amoand.w x10, x13, (x18) # perform operation

# Testcase cp_rs1 (Test source rs1 = x19)
li x28, 0xa3a4a8e45c3ef565 # load random value
la x19, scratch # base address
sd x28, 0(x19) # store in memory
li x28, 0x47bfa2fff676e651 # load another value into integer register
amoand.w x29, x28, (x19) # perform operation

# Testcase cp_rs1 (Test source rs1 = x20)
li x2, 0x63dc496267c5bd17 # load random value
la x20, scratch # base address
sd x2, 0(x20) # store in memory
li x2, 0x060b9d334042f99e # load another value into integer register
amoand.w x23, x2, (x20) # perform operation

# Testcase cp_rs1 (Test source rs1 = x21)
li x23, 0xbfc91f8df72cfc98 # load random value
la x21, scratch # base address
sd x23, 0(x21) # store in memory
li x23, 0xd8b384e6f29a1ebb # load another value into integer register
amoand.w x7, x23, (x21) # perform operation

# Testcase cp_rs1 (Test source rs1 = x22)
li x5, 0x6f5716c8c62559a0 # load random value
la x22, scratch # base address
sd x5, 0(x22) # store in memory
li x5, 0x6a755719f37f5cb6 # load another value into integer register
amoand.w x27, x5, (x22) # perform operation

# Testcase cp_rs1 (Test source rs1 = x23)
li x12, 0x900222129b5dceee # load random value
la x23, scratch # base address
sd x12, 0(x23) # store in memory
li x12, 0x1916001d2440230a # load another value into integer register
amoand.w x26, x12, (x23) # perform operation

# Testcase cp_rs1 (Test source rs1 = x24)
li x3, 0x33d34c8c330974c6 # load random value
la x24, scratch # base address
sd x3, 0(x24) # store in memory
li x3, 0x5598eee9356af0f3 # load another value into integer register
amoand.w x10, x3, (x24) # perform operation

# Testcase cp_rs1 (Test source rs1 = x25)
li x27, 0xb748d74037e284d1 # load random value
la x25, scratch # base address
sd x27, 0(x25) # store in memory
li x27, 0x679790aea0d245c5 # load another value into integer register
amoand.w x31, x27, (x25) # perform operation

# Testcase cp_rs1 (Test source rs1 = x26)
li x19, 0x42571e1c07fb89fd # load random value
la x26, scratch # base address
sd x19, 0(x26) # store in memory
li x19, 0x3a741c44dfe8f42f # load another value into integer register
amoand.w x3, x19, (x26) # perform operation

# Testcase cp_rs1 (Test source rs1 = x27)
li x11, 0xc1a4a6d9b7766b1e # load random value
la x27, scratch # base address
sd x11, 0(x27) # store in memory
li x11, 0x6330727c4aecefd0 # load another value into integer register
amoand.w x15, x11, (x27) # perform operation

# Testcase cp_rs1 (Test source rs1 = x28)
li x17, 0x2d55b467dd07feac # load random value
la x28, scratch # base address
sd x17, 0(x28) # store in memory
li x17, 0xb69d7aa90ebaa367 # load another value into integer register
amoand.w x29, x17, (x28) # perform operation

# Testcase cp_rs1 (Test source rs1 = x29)
li x30, 0xfaff1b973c06f8ec # load random value
la x29, scratch # base address
sd x30, 0(x29) # store in memory
li x30, 0x9c817d7dd4e4a9b7 # load another value into integer register
amoand.w x22, x30, (x29) # perform operation

# Testcase cp_rs1 (Test source rs1 = x30)
li x3, 0xdc9e1fccd459d978 # load random value
la x30, scratch # base address
sd x3, 0(x30) # store in memory
li x3, 0x60eea1b4db96f46d # load another value into integer register
amoand.w x25, x3, (x30) # perform operation

# Testcase cp_rs1 (Test source rs1 = x31)
li x26, 0x39bc82ace707b527 # load random value
la x31, scratch # base address
sd x26, 0(x31) # store in memory
li x26, 0x5863256ad2a06bac # load another value into integer register
amoand.w x15, x26, (x31) # perform operation

# Testcase cp_rs2 (Test source rs2 = x0)
li x0, 0x0063fb2bd58270ac # load random value
la x25, scratch # base address
sd x0, 0(x25) # store in memory
li x0, 0x3aa8ccfa518ca512 # load another value into integer register
amoand.w x2, x0, (x25) # perform operation

# Testcase cp_rs2 (Test source rs2 = x1)
li x1, 0xc1bc5044fa88f320 # load random value
la x9, scratch # base address
sd x1, 0(x9) # store in memory
li x1, 0x5093a2ccaf25a8a8 # load another value into integer register
amoand.w x24, x1, (x9) # perform operation

# Testcase cp_rs2 (Test source rs2 = x2)
li x2, 0xd06ee736ab382c7a # load random value
la x17, scratch # base address
sd x2, 0(x17) # store in memory
li x2, 0x8b6761007b20c0a6 # load another value into integer register
amoand.w x10, x2, (x17) # perform operation

# Testcase cp_rs2 (Test source rs2 = x3)
li x3, 0xc43e7af7a6e0b0a8 # load random value
la x17, scratch # base address
sd x3, 0(x17) # store in memory
li x3, 0xe36151a9232f38ae # load another value into integer register
amoand.w x29, x3, (x17) # perform operation

# Testcase cp_rs2 (Test source rs2 = x4)
mv x5, x4 # switch signature pointer register to avoid conflict with test
li x4, 0xcc23aae4fce47693 # load random value
la x29, scratch # base address
sd x4, 0(x29) # store in memory
li x4, 0x5250fc6823f7085e # load another value into integer register
amoand.w x14, x4, (x29) # perform operation

# Testcase cp_rs2 (Test source rs2 = x5)
mv x6, x5 # switch signature pointer register to avoid conflict with test
li x5, 0x324ad015e77e14bc # load random value
la x17, scratch # base address
sd x5, 0(x17) # store in memory
li x5, 0x879c46fd7f054ee6 # load another value into integer register
amoand.w x28, x5, (x17) # perform operation

# Testcase cp_rs2 (Test source rs2 = x6)
mv x7, x6 # switch signature pointer register to avoid conflict with test
li x6, 0x2b5a0059dc6f5ac6 # load random value
la x28, scratch # base address
sd x6, 0(x28) # store in memory
li x6, 0xde8a0584f4c58069 # load another value into integer register
amoand.w x30, x6, (x28) # perform operation

# Testcase cp_rs2 (Test source rs2 = x7)
mv x4, x7 # switch signature pointer register to avoid conflict with test
li x7, 0x821e99fe08963fb5 # load random value
la x5, scratch # base address
sd x7, 0(x5) # store in memory
li x7, 0xfcf859cbf5fb1437 # load another value into integer register
amoand.w x3, x7, (x5) # perform operation

# Testcase cp_rs2 (Test source rs2 = x8)
li x8, 0x70ffba752df842ea # load random value
la x19, scratch # base address
sd x8, 0(x19) # store in memory
li x8, 0x233fb021464f46d9 # load another value into integer register
amoand.w x2, x8, (x19) # perform operation

# Testcase cp_rs2 (Test source rs2 = x9)
li x9, 0x9551935e2fd1a872 # load random value
la x23, scratch # base address
sd x9, 0(x23) # store in memory
li x9, 0x8b01c65b593dae29 # load another value into integer register
amoand.w x7, x9, (x23) # perform operation

# Testcase cp_rs2 (Test source rs2 = x10)
li x10, 0xf31645d14791de4a # load random value
la x13, scratch # base address
sd x10, 0(x13) # store in memory
li x10, 0xa3623faca29a4f93 # load another value into integer register
amoand.w x18, x10, (x13) # perform operation

# Testcase cp_rs2 (Test source rs2 = x11)
li x11, 0x17f9d00b07043d05 # load random value
la x22, scratch # base address
sd x11, 0(x22) # store in memory
li x11, 0x492a8cdd88b24dc9 # load another value into integer register
amoand.w x24, x11, (x22) # perform operation

# Testcase cp_rs2 (Test source rs2 = x12)
li x12, 0xf62a6c0ed3950b02 # load random value
la x5, scratch # base address
sd x12, 0(x5) # store in memory
li x12, 0xc5cb9b505eaa4dbb # load another value into integer register
amoand.w x17, x12, (x5) # perform operation

# Testcase cp_rs2 (Test source rs2 = x13)
li x13, 0x220a974619819c28 # load random value
la x6, scratch # base address
sd x13, 0(x6) # store in memory
li x13, 0xfda9ab045bef1fa8 # load another value into integer register
amoand.w x28, x13, (x6) # perform operation

# Testcase cp_rs2 (Test source rs2 = x14)
li x14, 0xa3ad60b01f48d6f2 # load random value
la x19, scratch # base address
sd x14, 0(x19) # store in memory
li x14, 0xbe146e3f514d358e # load another value into integer register
amoand.w x7, x14, (x19) # perform operation

# Testcase cp_rs2 (Test source rs2 = x15)
li x15, 0xefdef934d5711189 # load random value
la x8, scratch # base address
sd x15, 0(x8) # store in memory
li x15, 0xea033e377291e4ef # load another value into integer register
amoand.w x9, x15, (x8) # perform operation

# Testcase cp_rs2 (Test source rs2 = x16)
li x16, 0xb406122f326cda0d # load random value
la x30, scratch # base address
sd x16, 0(x30) # store in memory
li x16, 0x7704932413fa73eb # load another value into integer register
amoand.w x19, x16, (x30) # perform operation

# Testcase cp_rs2 (Test source rs2 = x17)
li x17, 0xcb28966616085df7 # load random value
la x6, scratch # base address
sd x17, 0(x6) # store in memory
li x17, 0x25a55b4fcc601932 # load another value into integer register
amoand.w x18, x17, (x6) # perform operation

# Testcase cp_rs2 (Test source rs2 = x18)
li x18, 0x12c05f191c2614ad # load random value
la x15, scratch # base address
sd x18, 0(x15) # store in memory
li x18, 0x21a6216becd123b3 # load another value into integer register
amoand.w x17, x18, (x15) # perform operation

# Testcase cp_rs2 (Test source rs2 = x19)
li x19, 0x1431875736956acf # load random value
la x26, scratch # base address
sd x19, 0(x26) # store in memory
li x19, 0x872ae1ff14ca9b0e # load another value into integer register
amoand.w x15, x19, (x26) # perform operation

# Testcase cp_rs2 (Test source rs2 = x20)
li x20, 0xaa41bf9011dd161c # load random value
la x5, scratch # base address
sd x20, 0(x5) # store in memory
li x20, 0xed2fd9314eaebf49 # load another value into integer register
amoand.w x23, x20, (x5) # perform operation

# Testcase cp_rs2 (Test source rs2 = x21)
li x21, 0x71b9522035a1b097 # load random value
la x3, scratch # base address
sd x21, 0(x3) # store in memory
li x21, 0x7f5805c5e88d4c0a # load another value into integer register
amoand.w x16, x21, (x3) # perform operation

# Testcase cp_rs2 (Test source rs2 = x22)
li x22, 0x56b190dcb2e670ab # load random value
la x20, scratch # base address
sd x22, 0(x20) # store in memory
li x22, 0xa9042db08d5dc080 # load another value into integer register
amoand.w x1, x22, (x20) # perform operation

# Testcase cp_rs2 (Test source rs2 = x23)
li x23, 0xd63682a6f4d34069 # load random value
la x1, scratch # base address
sd x23, 0(x1) # store in memory
li x23, 0xd70d01f82ce25073 # load another value into integer register
amoand.w x18, x23, (x1) # perform operation

# Testcase cp_rs2 (Test source rs2 = x24)
li x24, 0xa2dc3604bb634e0c # load random value
la x18, scratch # base address
sd x24, 0(x18) # store in memory
li x24, 0x6d7f942749cecfcd # load another value into integer register
amoand.w x16, x24, (x18) # perform operation

# Testcase cp_rs2 (Test source rs2 = x25)
li x25, 0xb2674cd7f1752cf1 # load random value
la x15, scratch # base address
sd x25, 0(x15) # store in memory
li x25, 0x6537c262f0d30526 # load another value into integer register
amoand.w x7, x25, (x15) # perform operation

# Testcase cp_rs2 (Test source rs2 = x26)
li x26, 0x1e98104660844662 # load random value
la x9, scratch # base address
sd x26, 0(x9) # store in memory
li x26, 0x23d8bd045845b471 # load another value into integer register
amoand.w x27, x26, (x9) # perform operation

# Testcase cp_rs2 (Test source rs2 = x27)
li x27, 0x88c6daf76a01bc84 # load random value
la x30, scratch # base address
sd x27, 0(x30) # store in memory
li x27, 0x6d41af48bb2e2154 # load another value into integer register
amoand.w x2, x27, (x30) # perform operation

# Testcase cp_rs2 (Test source rs2 = x28)
li x28, 0x0ed5c3996d596f71 # load random value
la x22, scratch # base address
sd x28, 0(x22) # store in memory
li x28, 0xb83e329bbc264a36 # load another value into integer register
amoand.w x27, x28, (x22) # perform operation

# Testcase cp_rs2 (Test source rs2 = x29)
li x29, 0x9e042339ebf2d097 # load random value
la x28, scratch # base address
sd x29, 0(x28) # store in memory
li x29, 0x1df777df118f332f # load another value into integer register
amoand.w x15, x29, (x28) # perform operation

# Testcase cp_rs2 (Test source rs2 = x30)
li x30, 0x223880cf1a1d879d # load random value
la x1, scratch # base address
sd x30, 0(x1) # store in memory
li x30, 0xe3231f47d78b8bb6 # load another value into integer register
amoand.w x20, x30, (x1) # perform operation

# Testcase cp_rs2 (Test source rs2 = x31)
li x31, 0xc73b0be78edaa236 # load random value
la x26, scratch # base address
sd x31, 0(x26) # store in memory
li x31, 0xe89aeb4e171e0f5a # load another value into integer register
amoand.w x20, x31, (x26) # perform operation

# Testcase cp_rd (Test destination rd = x0)
li x21, 0x5807b7259afcbdf3 # load random value
la x20, scratch # base address
sd x21, 0(x20) # store in memory
li x21, 0x545b36c651405f4f # load another value into integer register
amoand.w x0, x21, (x20) # perform operation

# Testcase cp_rd (Test destination rd = x1)
li x3, 0xde3bd4783b91a457 # load random value
la x17, scratch # base address
sd x3, 0(x17) # store in memory
li x3, 0x2b8c83c9c26a7cef # load another value into integer register
amoand.w x1, x3, (x17) # perform operation

# Testcase cp_rd (Test destination rd = x2)
li x12, 0xd030cb6e09b48aab # load random value
la x16, scratch # base address
sd x12, 0(x16) # store in memory
li x12, 0x7ee98343081277ab # load another value into integer register
amoand.w x2, x12, (x16) # perform operation

# Testcase cp_rd (Test destination rd = x3)
li x10, 0x9363b6198f184ef2 # load random value
la x24, scratch # base address
sd x10, 0(x24) # store in memory
li x10, 0xa176df3bc7759925 # load another value into integer register
amoand.w x3, x10, (x24) # perform operation

# Testcase cp_rd (Test destination rd = x4)
mv x5, x4 # switch signature pointer register to avoid conflict with test
li x13, 0x6320e367fd022096 # load random value
la x3, scratch # base address
sd x13, 0(x3) # store in memory
li x13, 0x67baba70d4a515cc # load another value into integer register
amoand.w x4, x13, (x3) # perform operation

# Testcase cp_rd (Test destination rd = x5)
mv x6, x5 # switch signature pointer register to avoid conflict with test
li x2, 0xd55eb75ba301ad2c # load random value
la x4, scratch # base address
sd x2, 0(x4) # store in memory
li x2, 0x6489c50918be023c # load another value into integer register
amoand.w x5, x2, (x4) # perform operation

# Testcase cp_rd (Test destination rd = x6)
mv x7, x6 # switch signature pointer register to avoid conflict with test
li x25, 0xfaa7f246f2a39ce0 # load random value
la x26, scratch # base address
sd x25, 0(x26) # store in memory
li x25, 0x0638d7e6513aed23 # load another value into integer register
amoand.w x6, x25, (x26) # perform operation

# Testcase cp_rd (Test destination rd = x7)
mv x4, x7 # switch signature pointer register to avoid conflict with test
li x21, 0xdc56a6ebfa95ea4f # load random value
la x17, scratch # base address
sd x21, 0(x17) # store in memory
li x21, 0xc2b60ec3e5b8e542 # load another value into integer register
amoand.w x7, x21, (x17) # perform operation

# Testcase cp_rd (Test destination rd = x8)
li x28, 0xad6f08e8adee5b49 # load random value
la x11, scratch # base address
sd x28, 0(x11) # store in memory
li x28, 0x300ecb5664774ddf # load another value into integer register
amoand.w x8, x28, (x11) # perform operation

# Testcase cp_rd (Test destination rd = x9)
li x6, 0x6e25bc7edbc59fcc # load random value
la x31, scratch # base address
sd x6, 0(x31) # store in memory
li x6, 0x6a704b23fc7ee9e7 # load another value into integer register
amoand.w x9, x6, (x31) # perform operation

# Testcase cp_rd (Test destination rd = x10)
li x27, 0x6def10d571f7fae1 # load random value
la x19, scratch # base address
sd x27, 0(x19) # store in memory
li x27, 0x0adb9b92eac4f01c # load another value into integer register
amoand.w x10, x27, (x19) # perform operation

# Testcase cp_rd (Test destination rd = x11)
li x9, 0x911246274fbb9004 # load random value
la x10, scratch # base address
sd x9, 0(x10) # store in memory
li x9, 0x586fac2774eb5cc7 # load another value into integer register
amoand.w x11, x9, (x10) # perform operation

# Testcase cp_rd (Test destination rd = x12)
li x24, 0x4b92898f7a7ddbfb # load random value
la x20, scratch # base address
sd x24, 0(x20) # store in memory
li x24, 0x0bfb75055ddac2c4 # load another value into integer register
amoand.w x12, x24, (x20) # perform operation

# Testcase cp_rd (Test destination rd = x13)
li x11, 0x8dd9275f938e60da # load random value
la x3, scratch # base address
sd x11, 0(x3) # store in memory
li x11, 0x7371f68c810bb3a1 # load another value into integer register
amoand.w x13, x11, (x3) # perform operation

# Testcase cp_rd (Test destination rd = x14)
li x21, 0x31646e148aea8263 # load random value
la x27, scratch # base address
sd x21, 0(x27) # store in memory
li x21, 0x383813898f473650 # load another value into integer register
amoand.w x14, x21, (x27) # perform operation

# Testcase cp_rd (Test destination rd = x15)
li x3, 0xe8d92dd92011fab4 # load random value
la x15, scratch # base address
sd x3, 0(x15) # store in memory
li x3, 0xa4a976bc92c1fb3b # load another value into integer register
amoand.w x15, x3, (x15) # perform operation

# Testcase cp_rd (Test destination rd = x16)
li x20, 0x5b1f7af6ac0e4666 # load random value
la x17, scratch # base address
sd x20, 0(x17) # store in memory
li x20, 0xb96e8e435fa82fae # load another value into integer register
amoand.w x16, x20, (x17) # perform operation

# Testcase cp_rd (Test destination rd = x17)
li x1, 0xc437722932d9cb03 # load random value
la x31, scratch # base address
sd x1, 0(x31) # store in memory
li x1, 0xcb6a88b5b60ea889 # load another value into integer register
amoand.w x17, x1, (x31) # perform operation

# Testcase cp_rd (Test destination rd = x18)
li x7, 0xd693cf67e3094a52 # load random value
la x28, scratch # base address
sd x7, 0(x28) # store in memory
li x7, 0xb90349026d01be14 # load another value into integer register
amoand.w x18, x7, (x28) # perform operation

# Testcase cp_rd (Test destination rd = x19)
li x7, 0x323257431fc95271 # load random value
la x6, scratch # base address
sd x7, 0(x6) # store in memory
li x7, 0x76f090e032714223 # load another value into integer register
amoand.w x19, x7, (x6) # perform operation

# Testcase cp_rd (Test destination rd = x20)
li x11, 0xd21de478dd75035d # load random value
la x17, scratch # base address
sd x11, 0(x17) # store in memory
li x11, 0xfa19d5769961fcc7 # load another value into integer register
amoand.w x20, x11, (x17) # perform operation

# Testcase cp_rd (Test destination rd = x21)
li x26, 0xe51f71a69a913433 # load random value
la x27, scratch # base address
sd x26, 0(x27) # store in memory
li x26, 0x92262c1257eb4bc0 # load another value into integer register
amoand.w x21, x26, (x27) # perform operation

# Testcase cp_rd (Test destination rd = x22)
li x1, 0x10b3687960387b5d # load random value
la x5, scratch # base address
sd x1, 0(x5) # store in memory
li x1, 0xf57ad5007bbb2b81 # load another value into integer register
amoand.w x22, x1, (x5) # perform operation

# Testcase cp_rd (Test destination rd = x23)
li x20, 0x6352c466485536ae # load random value
la x11, scratch # base address
sd x20, 0(x11) # store in memory
li x20, 0x0c0b2d3ab326404d # load another value into integer register
amoand.w x23, x20, (x11) # perform operation

# Testcase cp_rd (Test destination rd = x24)
li x19, 0x215df95892e7039b # load random value
la x27, scratch # base address
sd x19, 0(x27) # store in memory
li x19, 0x5886aa0ea9161db7 # load another value into integer register
amoand.w x24, x19, (x27) # perform operation

# Testcase cp_rd (Test destination rd = x25)
li x9, 0xf096d4d4b6b12781 # load random value
la x17, scratch # base address
sd x9, 0(x17) # store in memory
li x9, 0x317578e6e06d4dc9 # load another value into integer register
amoand.w x25, x9, (x17) # perform operation

# Testcase cp_rd (Test destination rd = x26)
li x28, 0x18b3e888e832349d # load random value
la x15, scratch # base address
sd x28, 0(x15) # store in memory
li x28, 0x5492edbf9574040f # load another value into integer register
amoand.w x26, x28, (x15) # perform operation

# Testcase cp_rd (Test destination rd = x27)
li x12, 0x1a5f808bee7fe4a0 # load random value
la x14, scratch # base address
sd x12, 0(x14) # store in memory
li x12, 0x82769df83d1e2fa6 # load another value into integer register
amoand.w x27, x12, (x14) # perform operation

# Testcase cp_rd (Test destination rd = x28)
li x8, 0xf7355657bf9e38f1 # load random value
la x21, scratch # base address
sd x8, 0(x21) # store in memory
li x8, 0x31326c7d8baeaded # load another value into integer register
amoand.w x28, x8, (x21) # perform operation

# Testcase cp_rd (Test destination rd = x29)
li x13, 0xd3bde5d176688c77 # load random value
la x31, scratch # base address
sd x13, 0(x31) # store in memory
li x13, 0x7ea5dcade7021d7d # load another value into integer register
amoand.w x29, x13, (x31) # perform operation

# Testcase cp_rd (Test destination rd = x30)
li x17, 0x074f3b4eceffbfcb # load random value
la x18, scratch # base address
sd x17, 0(x18) # store in memory
li x17, 0x313b9917063af287 # load another value into integer register
amoand.w x30, x17, (x18) # perform operation

# Testcase cp_rd (Test destination rd = x31)
li x10, 0x02b88616644f8891 # load random value
la x6, scratch # base address
sd x10, 0(x6) # store in memory
li x10, 0xab72effdc58ae70b # load another value into integer register
amoand.w x31, x10, (x6) # perform operation

# Testcase cp_rs2_corners (Test source rs2 value = 0x0)
li x24, 0xf767f1ad78c2f714 # load random value
la x9, scratch # base address
sd x24, 0(x9) # store in memory
li x24, 0x0000000000000000 # load another value into integer register
amoand.w x15, x24, (x9) # perform operation

# Testcase cp_rs2_corners (Test source rs2 value = 0x1)
li x6, 0x6c30b7b9726b26d4 # load random value
la x24, scratch # base address
sd x6, 0(x24) # store in memory
li x6, 0x0000000000000001 # load another value into integer register
amoand.w x13, x6, (x24) # perform operation

# Testcase cp_rs2_corners (Test source rs2 value = 0x2)
li x15, 0xd59512d85c94fe30 # load random value
la x14, scratch # base address
sd x15, 0(x14) # store in memory
li x15, 0x0000000000000002 # load another value into integer register
amoand.w x17, x15, (x14) # perform operation

# Testcase cp_rs2_corners (Test source rs2 value = 0x8000000000000000)
li x15, 0xdea2f889ba19c4f8 # load random value
la x1, scratch # base address
sd x15, 0(x1) # store in memory
li x15, 0x8000000000000000 # load another value into integer register
amoand.w x6, x15, (x1) # perform operation

# Testcase cp_rs2_corners (Test source rs2 value = 0x8000000000000001)
li x1, 0x2495b62fa9b87379 # load random value
la x9, scratch # base address
sd x1, 0(x9) # store in memory
li x1, 0x8000000000000001 # load another value into integer register
amoand.w x20, x1, (x9) # perform operation

# Testcase cp_rs2_corners (Test source rs2 value = 0x7fffffffffffffff)
li x31, 0xcec8af4f3b244e1d # load random value
la x24, scratch # base address
sd x31, 0(x24) # store in memory
li x31, 0x7fffffffffffffff # load another value into integer register
amoand.w x18, x31, (x24) # perform operation

# Testcase cp_rs2_corners (Test source rs2 value = 0x7ffffffffffffffe)
li x25, 0xd298e2ef4765dab5 # load random value
la x16, scratch # base address
sd x25, 0(x16) # store in memory
li x25, 0x7ffffffffffffffe # load another value into integer register
amoand.w x8, x25, (x16) # perform operation

# Testcase cp_rs2_corners (Test source rs2 value = 0xffffffffffffffff)
li x27, 0xb1371c3faf454d2c # load random value
la x2, scratch # base address
sd x27, 0(x2) # store in memory
li x27, 0xffffffffffffffff # load another value into integer register
amoand.w x24, x27, (x2) # perform operation

# Testcase cp_rs2_corners (Test source rs2 value = 0xfffffffffffffffe)
li x7, 0x844e1194a42f90a5 # load random value
la x30, scratch # base address
sd x7, 0(x30) # store in memory
li x7, 0xfffffffffffffffe # load another value into integer register
amoand.w x28, x7, (x30) # perform operation

# Testcase cp_rs2_corners (Test source rs2 value = 0x5bbc887763ae86f2)
li x3, 0x7de7f75e13e1351a # load random value
la x5, scratch # base address
sd x3, 0(x5) # store in memory
li x3, 0x5bbc887763ae86f2 # load another value into integer register
amoand.w x21, x3, (x5) # perform operation

# Testcase cp_rs2_corners (Test source rs2 value = 0xaaaaaaaaaaaaaaaa)
li x8, 0xf4c7b0a3ccdfb7ad # load random value
la x18, scratch # base address
sd x8, 0(x18) # store in memory
li x8, 0xaaaaaaaaaaaaaaaa # load another value into integer register
amoand.w x20, x8, (x18) # perform operation

# Testcase cp_rs2_corners (Test source rs2 value = 0x5555555555555555)
li x7, 0x08ee9c34c1c61e13 # load random value
la x11, scratch # base address
sd x7, 0(x11) # store in memory
li x7, 0x5555555555555555 # load another value into integer register
amoand.w x3, x7, (x11) # perform operation

# Testcase cp_rs2_corners (Test source rs2 value = 0xffffffff)
li x2, 0xb4e6f63acbab44b0 # load random value
la x13, scratch # base address
sd x2, 0(x13) # store in memory
li x2, 0x00000000ffffffff # load another value into integer register
amoand.w x6, x2, (x13) # perform operation

# Testcase cp_rs2_corners (Test source rs2 value = 0xfffffffe)
li x16, 0x7aa05e8d43213f75 # load random value
la x19, scratch # base address
sd x16, 0(x19) # store in memory
li x16, 0x00000000fffffffe # load another value into integer register
amoand.w x8, x16, (x19) # perform operation

# Testcase cp_rs2_corners (Test source rs2 value = 0x100000000)
li x23, 0x2d4fcc4291cee03e # load random value
la x20, scratch # base address
sd x23, 0(x20) # store in memory
li x23, 0x0000000100000000 # load another value into integer register
amoand.w x11, x23, (x20) # perform operation

# Testcase cp_rs2_corners (Test source rs2 value = 0x100000001)
li x6, 0x53f960b9b0430f75 # load random value
la x24, scratch # base address
sd x6, 0(x24) # store in memory
li x6, 0x0000000100000001 # load another value into integer register
amoand.w x17, x6, (x24) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x1)
li x1, 0xf6cb29eab93480b2 # load random value
la x1, scratch # base address
sd x1, 0(x1) # store in memory
amoand.w x20, x1, (x1) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x2)
li x2, 0xd904d68929f2e8a1 # load random value
la x2, scratch # base address
sd x2, 0(x2) # store in memory
amoand.w x7, x2, (x2) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x3)
li x3, 0x94b3e39e57ccfeaf # load random value
la x3, scratch # base address
sd x3, 0(x3) # store in memory
amoand.w x31, x3, (x3) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x4)
mv x5, x4 # switch signature pointer register to avoid conflict with test
li x4, 0x3a90de78ea6fc32b # load random value
la x4, scratch # base address
sd x4, 0(x4) # store in memory
amoand.w x3, x4, (x4) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x5)
mv x6, x5 # switch signature pointer register to avoid conflict with test
li x5, 0x0c20445edb47eba3 # load random value
la x5, scratch # base address
sd x5, 0(x5) # store in memory
amoand.w x23, x5, (x5) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x6)
mv x7, x6 # switch signature pointer register to avoid conflict with test
li x6, 0xf03e2e1734747f4e # load random value
la x6, scratch # base address
sd x6, 0(x6) # store in memory
amoand.w x29, x6, (x6) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x7)
mv x4, x7 # switch signature pointer register to avoid conflict with test
li x7, 0x76b442eacbcbc3da # load random value
la x7, scratch # base address
sd x7, 0(x7) # store in memory
amoand.w x31, x7, (x7) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x8)
li x8, 0x650417f2c6490d8e # load random value
la x8, scratch # base address
sd x8, 0(x8) # store in memory
amoand.w x22, x8, (x8) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x9)
li x9, 0x9b18fbba65a34fd2 # load random value
la x9, scratch # base address
sd x9, 0(x9) # store in memory
amoand.w x9, x9, (x9) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x10)
li x10, 0xa516d7c73f1a143f # load random value
la x10, scratch # base address
sd x10, 0(x10) # store in memory
amoand.w x13, x10, (x10) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x11)
li x11, 0x5cd53fa22122e1a3 # load random value
la x11, scratch # base address
sd x11, 0(x11) # store in memory
amoand.w x23, x11, (x11) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x12)
li x12, 0xcdba481add076c72 # load random value
la x12, scratch # base address
sd x12, 0(x12) # store in memory
amoand.w x19, x12, (x12) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x13)
li x13, 0xce23c065b8077baf # load random value
la x13, scratch # base address
sd x13, 0(x13) # store in memory
amoand.w x5, x13, (x13) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x14)
li x14, 0xc3af1ef93f362b40 # load random value
la x14, scratch # base address
sd x14, 0(x14) # store in memory
amoand.w x26, x14, (x14) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x15)
li x15, 0x4b4720e469a588e2 # load random value
la x15, scratch # base address
sd x15, 0(x15) # store in memory
amoand.w x8, x15, (x15) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x16)
li x16, 0xaf1aa3a4b869d114 # load random value
la x16, scratch # base address
sd x16, 0(x16) # store in memory
amoand.w x13, x16, (x16) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x17)
li x17, 0xc86936451d9cc226 # load random value
la x17, scratch # base address
sd x17, 0(x17) # store in memory
amoand.w x11, x17, (x17) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x18)
li x18, 0xdbe55badb9acafdc # load random value
la x18, scratch # base address
sd x18, 0(x18) # store in memory
amoand.w x14, x18, (x18) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x19)
li x19, 0xe55c3e996cd3070a # load random value
la x19, scratch # base address
sd x19, 0(x19) # store in memory
amoand.w x25, x19, (x19) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x20)
li x20, 0xf2698a7d3dbce779 # load random value
la x20, scratch # base address
sd x20, 0(x20) # store in memory
amoand.w x25, x20, (x20) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x21)
li x21, 0x437d15b3739cdd29 # load random value
la x21, scratch # base address
sd x21, 0(x21) # store in memory
amoand.w x25, x21, (x21) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x22)
li x22, 0x7b37f4d0abf9e9ea # load random value
la x22, scratch # base address
sd x22, 0(x22) # store in memory
amoand.w x19, x22, (x22) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x23)
li x23, 0x2b411fa469cab3b3 # load random value
la x23, scratch # base address
sd x23, 0(x23) # store in memory
amoand.w x19, x23, (x23) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x24)
li x24, 0x7e2d9a50928420e8 # load random value
la x24, scratch # base address
sd x24, 0(x24) # store in memory
amoand.w x1, x24, (x24) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x25)
li x25, 0x7a0b364441284a75 # load random value
la x25, scratch # base address
sd x25, 0(x25) # store in memory
amoand.w x29, x25, (x25) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x26)
li x26, 0x09d3f40612b2e263 # load random value
la x26, scratch # base address
sd x26, 0(x26) # store in memory
amoand.w x23, x26, (x26) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x27)
li x27, 0x14f1266dcf9f1071 # load random value
la x27, scratch # base address
sd x27, 0(x27) # store in memory
amoand.w x17, x27, (x27) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x28)
li x28, 0xe46d94118bd38c71 # load random value
la x28, scratch # base address
sd x28, 0(x28) # store in memory
amoand.w x12, x28, (x28) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x29)
li x29, 0x3ec29d9d4c67ce30 # load random value
la x29, scratch # base address
sd x29, 0(x29) # store in memory
amoand.w x6, x29, (x29) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x30)
li x30, 0xe2143df6475d46e6 # load random value
la x30, scratch # base address
sd x30, 0(x30) # store in memory
amoand.w x27, x30, (x30) # perform operation

# Testcase cmp_rs1_rs2 (Test rs1 = rs2 = x31)
li x31, 0xb3cd60b71da0a386 # load random value
la x31, scratch # base address
sd x31, 0(x31) # store in memory
amoand.w x14, x31, (x31) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x1)
li x21, 0x8559f50be621e59e # load random value
la x1, scratch # base address
sd x21, 0(x1) # store in memory
li x21, 0xb9a0d4ede68596fe # load another value into integer register
amoand.w x1, x21, (x1) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x2)
li x5, 0x3299973ed17a1a47 # load random value
la x2, scratch # base address
sd x5, 0(x2) # store in memory
li x5, 0xaee9fd1f98ec1555 # load another value into integer register
amoand.w x2, x5, (x2) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x3)
li x8, 0x08de874cf67bec85 # load random value
la x3, scratch # base address
sd x8, 0(x3) # store in memory
li x8, 0xfd1600ae301d8088 # load another value into integer register
amoand.w x3, x8, (x3) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x4)
mv x5, x4 # switch signature pointer register to avoid conflict with test
li x17, 0xb5c3d034517374d6 # load random value
la x4, scratch # base address
sd x17, 0(x4) # store in memory
li x17, 0xe20db16d24efcdd9 # load another value into integer register
amoand.w x4, x17, (x4) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x5)
mv x6, x5 # switch signature pointer register to avoid conflict with test
li x14, 0x67a18c5bb2801653 # load random value
la x5, scratch # base address
sd x14, 0(x5) # store in memory
li x14, 0xdf6510553fc7e8aa # load another value into integer register
amoand.w x5, x14, (x5) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x6)
mv x7, x6 # switch signature pointer register to avoid conflict with test
li x31, 0xd12678754fab70c5 # load random value
la x6, scratch # base address
sd x31, 0(x6) # store in memory
li x31, 0x59f052d0ba87cf5f # load another value into integer register
amoand.w x6, x31, (x6) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x7)
mv x4, x7 # switch signature pointer register to avoid conflict with test
li x27, 0x7e3fa3d2d37b475e # load random value
la x7, scratch # base address
sd x27, 0(x7) # store in memory
li x27, 0x92be0b946a313bf2 # load another value into integer register
amoand.w x7, x27, (x7) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x8)
li x27, 0x40b1a298a883dc26 # load random value
la x8, scratch # base address
sd x27, 0(x8) # store in memory
li x27, 0xb3ac280452e1c4fe # load another value into integer register
amoand.w x8, x27, (x8) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x9)
li x30, 0xbbf9d4434eac78e9 # load random value
la x9, scratch # base address
sd x30, 0(x9) # store in memory
li x30, 0xcabe2d811b369588 # load another value into integer register
amoand.w x9, x30, (x9) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x10)
li x30, 0x0fb46f824a664ebb # load random value
la x10, scratch # base address
sd x30, 0(x10) # store in memory
li x30, 0x4d6daafc80d2420e # load another value into integer register
amoand.w x10, x30, (x10) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x11)
li x30, 0x0e2c59c67c53666f # load random value
la x11, scratch # base address
sd x30, 0(x11) # store in memory
li x30, 0x4c273e59ed57f71b # load another value into integer register
amoand.w x11, x30, (x11) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x12)
li x15, 0x3a47800ef1ad18bc # load random value
la x12, scratch # base address
sd x15, 0(x12) # store in memory
li x15, 0xfd0574d4a9d69161 # load another value into integer register
amoand.w x12, x15, (x12) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x13)
li x7, 0x267d31cd7191022d # load random value
la x13, scratch # base address
sd x7, 0(x13) # store in memory
li x7, 0x4bdee9b55319c11d # load another value into integer register
amoand.w x13, x7, (x13) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x14)
li x22, 0xeb11c357c49a6560 # load random value
la x14, scratch # base address
sd x22, 0(x14) # store in memory
li x22, 0x0f585a7bf1340b95 # load another value into integer register
amoand.w x14, x22, (x14) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x15)
li x22, 0x1dbf0746a0237499 # load random value
la x15, scratch # base address
sd x22, 0(x15) # store in memory
li x22, 0x82ee980d548087b6 # load another value into integer register
amoand.w x15, x22, (x15) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x16)
li x7, 0xbac77c58256a823d # load random value
la x16, scratch # base address
sd x7, 0(x16) # store in memory
li x7, 0xc9d4fe7cf51277f1 # load another value into integer register
amoand.w x16, x7, (x16) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x17)
li x25, 0x1148a7a9b200cfbe # load random value
la x17, scratch # base address
sd x25, 0(x17) # store in memory
li x25, 0xa818eccda4acf3a2 # load another value into integer register
amoand.w x17, x25, (x17) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x18)
li x1, 0x1f31cbf38d4d0598 # load random value
la x18, scratch # base address
sd x1, 0(x18) # store in memory
li x1, 0xba96793e5c006925 # load another value into integer register
amoand.w x18, x1, (x18) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x19)
li x7, 0x27942ba31f6f76da # load random value
la x19, scratch # base address
sd x7, 0(x19) # store in memory
li x7, 0xbc9378287421681b # load another value into integer register
amoand.w x19, x7, (x19) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x20)
li x16, 0xa8946876581890a4 # load random value
la x20, scratch # base address
sd x16, 0(x20) # store in memory
li x16, 0x54272708a8bb7fea # load another value into integer register
amoand.w x20, x16, (x20) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x21)
li x3, 0x66cb65a276487beb # load random value
la x21, scratch # base address
sd x3, 0(x21) # store in memory
li x3, 0x355b5270471e056f # load another value into integer register
amoand.w x21, x3, (x21) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x22)
li x1, 0xb527740ef49ec565 # load random value
la x22, scratch # base address
sd x1, 0(x22) # store in memory
li x1, 0xce925b8b51611e62 # load another value into integer register
amoand.w x22, x1, (x22) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x23)
li x13, 0x1a915a3122818e55 # load random value
la x23, scratch # base address
sd x13, 0(x23) # store in memory
li x13, 0xf8ff4df5dec0b325 # load another value into integer register
amoand.w x23, x13, (x23) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x24)
li x5, 0xa83d0a264bdf58b5 # load random value
la x24, scratch # base address
sd x5, 0(x24) # store in memory
li x5, 0x170dcf3f31dd40f1 # load another value into integer register
amoand.w x24, x5, (x24) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x25)
li x23, 0xd41ec399b7a9f2cb # load random value
la x25, scratch # base address
sd x23, 0(x25) # store in memory
li x23, 0xbc0421047adbc198 # load another value into integer register
amoand.w x25, x23, (x25) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x26)
li x23, 0xb4cda153dd7b31a9 # load random value
la x26, scratch # base address
sd x23, 0(x26) # store in memory
li x23, 0x1cdd40d2e439634d # load another value into integer register
amoand.w x26, x23, (x26) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x27)
li x25, 0x3a2935f27ea22e4d # load random value
la x27, scratch # base address
sd x25, 0(x27) # store in memory
li x25, 0x468f00150e30f799 # load another value into integer register
amoand.w x27, x25, (x27) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x28)
li x22, 0x89683efa58b1dda0 # load random value
la x28, scratch # base address
sd x22, 0(x28) # store in memory
li x22, 0x42a8d3d153d3a8f9 # load another value into integer register
amoand.w x28, x22, (x28) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x29)
li x17, 0x73d8f8faa1530668 # load random value
la x29, scratch # base address
sd x17, 0(x29) # store in memory
li x17, 0xac75225ad7b26aab # load another value into integer register
amoand.w x29, x17, (x29) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x30)
li x16, 0xcce9370622015ad7 # load random value
la x30, scratch # base address
sd x16, 0(x30) # store in memory
li x16, 0x5a99ffa8f3360902 # load another value into integer register
amoand.w x30, x16, (x30) # perform operation

# Testcase cmp_rd_rs1 (Test rd = rs1 = x31)
li x6, 0x56f4d7a939d35bac # load random value
la x31, scratch # base address
sd x6, 0(x31) # store in memory
li x6, 0x1ab812c959678f74 # load another value into integer register
amoand.w x31, x6, (x31) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x0)
li x0, 0xb4a8c00d2756b46e # load random value
la x25, scratch # base address
sd x0, 0(x25) # store in memory
li x0, 0x460be3d9a1c5e883 # load another value into integer register
amoand.w x0, x0, (x25) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x1)
li x1, 0x20f968b534602fd6 # load random value
la x7, scratch # base address
sd x1, 0(x7) # store in memory
li x1, 0xd7b0d5221e609029 # load another value into integer register
amoand.w x1, x1, (x7) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x2)
li x2, 0x93affcaa695108df # load random value
la x6, scratch # base address
sd x2, 0(x6) # store in memory
li x2, 0xe7426320bd7c6342 # load another value into integer register
amoand.w x2, x2, (x6) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x3)
li x3, 0xf6dc02b7ac5c7415 # load random value
la x26, scratch # base address
sd x3, 0(x26) # store in memory
li x3, 0x255a7692d958a72c # load another value into integer register
amoand.w x3, x3, (x26) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x4)
mv x5, x4 # switch signature pointer register to avoid conflict with test
li x4, 0xce8b722d4f6ded36 # load random value
la x12, scratch # base address
sd x4, 0(x12) # store in memory
li x4, 0xa6a0688d0f5b46ff # load another value into integer register
amoand.w x4, x4, (x12) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x5)
mv x6, x5 # switch signature pointer register to avoid conflict with test
li x5, 0x9d7516e5962f51ef # load random value
la x25, scratch # base address
sd x5, 0(x25) # store in memory
li x5, 0x74ec2e8262bb60ad # load another value into integer register
amoand.w x5, x5, (x25) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x6)
mv x7, x6 # switch signature pointer register to avoid conflict with test
li x6, 0x0a980a4bb63945a6 # load random value
la x28, scratch # base address
sd x6, 0(x28) # store in memory
li x6, 0x005e83579620db92 # load another value into integer register
amoand.w x6, x6, (x28) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x7)
mv x4, x7 # switch signature pointer register to avoid conflict with test
li x7, 0x3876eebab935574c # load random value
la x26, scratch # base address
sd x7, 0(x26) # store in memory
li x7, 0xa7d29c32fdc69b5f # load another value into integer register
amoand.w x7, x7, (x26) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x8)
li x8, 0x8d18532b67d4f164 # load random value
la x15, scratch # base address
sd x8, 0(x15) # store in memory
li x8, 0xfec741bab11e04ff # load another value into integer register
amoand.w x8, x8, (x15) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x9)
li x9, 0xd3a9174191e83c1b # load random value
la x6, scratch # base address
sd x9, 0(x6) # store in memory
li x9, 0x3a34e6fc8c75f73d # load another value into integer register
amoand.w x9, x9, (x6) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x10)
li x10, 0xa3e2ee575d3d6a0e # load random value
la x26, scratch # base address
sd x10, 0(x26) # store in memory
li x10, 0xe0fa56978afcbdff # load another value into integer register
amoand.w x10, x10, (x26) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x11)
li x11, 0xfcda1cd62d76d2b6 # load random value
la x24, scratch # base address
sd x11, 0(x24) # store in memory
li x11, 0xddc5c1b87591ddd0 # load another value into integer register
amoand.w x11, x11, (x24) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x12)
li x12, 0x51e6954edfdacf4b # load random value
la x9, scratch # base address
sd x12, 0(x9) # store in memory
li x12, 0x6b5bfeacd36d11fb # load another value into integer register
amoand.w x12, x12, (x9) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x13)
li x13, 0x9b3684acc2c23da6 # load random value
la x9, scratch # base address
sd x13, 0(x9) # store in memory
li x13, 0x76cc5d8dc989991e # load another value into integer register
amoand.w x13, x13, (x9) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x14)
li x14, 0xeebaed89c122984a # load random value
la x5, scratch # base address
sd x14, 0(x5) # store in memory
li x14, 0xff8abf64d134eb72 # load another value into integer register
amoand.w x14, x14, (x5) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x15)
li x15, 0xcb08c9a13b979e1f # load random value
la x3, scratch # base address
sd x15, 0(x3) # store in memory
li x15, 0x4939477cc3651a94 # load another value into integer register
amoand.w x15, x15, (x3) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x16)
li x16, 0xc7c2e158e5524bdc # load random value
la x12, scratch # base address
sd x16, 0(x12) # store in memory
li x16, 0x2e903af0c5e4ae2e # load another value into integer register
amoand.w x16, x16, (x12) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x17)
li x17, 0x3ef8958b7ca05fe8 # load random value
la x21, scratch # base address
sd x17, 0(x21) # store in memory
li x17, 0x4e76145a36a9d6fd # load another value into integer register
amoand.w x17, x17, (x21) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x18)
li x18, 0xea6fa26d0dfbd342 # load random value
la x28, scratch # base address
sd x18, 0(x28) # store in memory
li x18, 0x246c05ea938b8098 # load another value into integer register
amoand.w x18, x18, (x28) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x19)
li x19, 0xa2d9f928190ad9ed # load random value
la x31, scratch # base address
sd x19, 0(x31) # store in memory
li x19, 0xb2265115baf4825f # load another value into integer register
amoand.w x19, x19, (x31) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x20)
li x20, 0x597188a3bc38ff43 # load random value
la x30, scratch # base address
sd x20, 0(x30) # store in memory
li x20, 0xd89ebf5e244e7a66 # load another value into integer register
amoand.w x20, x20, (x30) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x21)
li x21, 0x65a33a28dba701eb # load random value
la x28, scratch # base address
sd x21, 0(x28) # store in memory
li x21, 0x857d89cd07bb4cbe # load another value into integer register
amoand.w x21, x21, (x28) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x22)
li x22, 0x0d071efa89055207 # load random value
la x8, scratch # base address
sd x22, 0(x8) # store in memory
li x22, 0x60e373dad183623a # load another value into integer register
amoand.w x22, x22, (x8) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x23)
li x23, 0x19f9746a6e12327e # load random value
la x24, scratch # base address
sd x23, 0(x24) # store in memory
li x23, 0xc3d6febac792b024 # load another value into integer register
amoand.w x23, x23, (x24) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x24)
li x24, 0xed2cadbda3f5e3f8 # load random value
la x22, scratch # base address
sd x24, 0(x22) # store in memory
li x24, 0x8a4b059de2f743d3 # load another value into integer register
amoand.w x24, x24, (x22) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x25)
li x25, 0x606d39e1aaa9a05a # load random value
la x5, scratch # base address
sd x25, 0(x5) # store in memory
li x25, 0x7cd478efb95fb4d0 # load another value into integer register
amoand.w x25, x25, (x5) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x26)
li x26, 0x5c2b5f81b56081a3 # load random value
la x12, scratch # base address
sd x26, 0(x12) # store in memory
li x26, 0x40cea4e50017c4a3 # load another value into integer register
amoand.w x26, x26, (x12) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x27)
li x27, 0x3f56607f441d6203 # load random value
la x30, scratch # base address
sd x27, 0(x30) # store in memory
li x27, 0x76d7fe36a5aaf99e # load another value into integer register
amoand.w x27, x27, (x30) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x28)
li x28, 0x467030c73ee9f80a # load random value
la x27, scratch # base address
sd x28, 0(x27) # store in memory
li x28, 0x1a56f5b1dc94e8cb # load another value into integer register
amoand.w x28, x28, (x27) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x29)
li x29, 0x849a453116a4581f # load random value
la x25, scratch # base address
sd x29, 0(x25) # store in memory
li x29, 0xbafdb0b69f3e15c7 # load another value into integer register
amoand.w x29, x29, (x25) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x30)
li x30, 0x261605fc58269522 # load random value
la x9, scratch # base address
sd x30, 0(x9) # store in memory
li x30, 0x42e24bcca116bf38 # load another value into integer register
amoand.w x30, x30, (x9) # perform operation

# Testcase cmp_rd_rs2 (Test rd = rs2 = x31)
li x31, 0x7e2f5743acf5b801 # load random value
la x12, scratch # base address
sd x31, 0(x12) # store in memory
li x31, 0xebfb629c21470892 # load another value into integer register
amoand.w x31, x31, (x12) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x1)
li x1, 0x23673955d01a8247 # load random value
la x1, scratch # base address
sd x1, 0(x1) # store in memory
amoand.w x1, x1, (x1) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x2)
li x2, 0xad60fd3918ba69bf # load random value
la x2, scratch # base address
sd x2, 0(x2) # store in memory
amoand.w x2, x2, (x2) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x3)
li x3, 0x1dfd790b012c75e5 # load random value
la x3, scratch # base address
sd x3, 0(x3) # store in memory
amoand.w x3, x3, (x3) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x4)
mv x5, x4 # switch signature pointer register to avoid conflict with test
li x4, 0x41d22e8f5b4cb131 # load random value
la x4, scratch # base address
sd x4, 0(x4) # store in memory
amoand.w x4, x4, (x4) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x5)
mv x6, x5 # switch signature pointer register to avoid conflict with test
li x5, 0x37c20a0a297ca62b # load random value
la x5, scratch # base address
sd x5, 0(x5) # store in memory
amoand.w x5, x5, (x5) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x6)
mv x7, x6 # switch signature pointer register to avoid conflict with test
li x6, 0x5d193c2a43914242 # load random value
la x6, scratch # base address
sd x6, 0(x6) # store in memory
amoand.w x6, x6, (x6) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x7)
mv x4, x7 # switch signature pointer register to avoid conflict with test
li x7, 0x2d62b90a9e294e86 # load random value
la x7, scratch # base address
sd x7, 0(x7) # store in memory
amoand.w x7, x7, (x7) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x8)
li x8, 0x98df63864dd56445 # load random value
la x8, scratch # base address
sd x8, 0(x8) # store in memory
amoand.w x8, x8, (x8) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x9)
li x9, 0x5da04a1069deab59 # load random value
la x9, scratch # base address
sd x9, 0(x9) # store in memory
amoand.w x9, x9, (x9) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x10)
li x10, 0xcdd262b100eb1a3e # load random value
la x10, scratch # base address
sd x10, 0(x10) # store in memory
amoand.w x10, x10, (x10) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x11)
li x11, 0x47eb101c90f15fc2 # load random value
la x11, scratch # base address
sd x11, 0(x11) # store in memory
amoand.w x11, x11, (x11) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x12)
li x12, 0x5c3ad7253c9a2d7d # load random value
la x12, scratch # base address
sd x12, 0(x12) # store in memory
amoand.w x12, x12, (x12) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x13)
li x13, 0x84a928ffb9e876c0 # load random value
la x13, scratch # base address
sd x13, 0(x13) # store in memory
amoand.w x13, x13, (x13) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x14)
li x14, 0x1f5b4d5fb1b0a29b # load random value
la x14, scratch # base address
sd x14, 0(x14) # store in memory
amoand.w x14, x14, (x14) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x15)
li x15, 0x61bed364d21aede6 # load random value
la x15, scratch # base address
sd x15, 0(x15) # store in memory
amoand.w x15, x15, (x15) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x16)
li x16, 0x7dcd6871147189cb # load random value
la x16, scratch # base address
sd x16, 0(x16) # store in memory
amoand.w x16, x16, (x16) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x17)
li x17, 0xf2cae9aec3a4bb86 # load random value
la x17, scratch # base address
sd x17, 0(x17) # store in memory
amoand.w x17, x17, (x17) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x18)
li x18, 0x4050e01141d4b970 # load random value
la x18, scratch # base address
sd x18, 0(x18) # store in memory
amoand.w x18, x18, (x18) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x19)
li x19, 0xfb88cdf3e98b665f # load random value
la x19, scratch # base address
sd x19, 0(x19) # store in memory
amoand.w x19, x19, (x19) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x20)
li x20, 0x810f9df1097a3c31 # load random value
la x20, scratch # base address
sd x20, 0(x20) # store in memory
amoand.w x20, x20, (x20) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x21)
li x21, 0xc38174ddae2817e9 # load random value
la x21, scratch # base address
sd x21, 0(x21) # store in memory
amoand.w x21, x21, (x21) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x22)
li x22, 0x367851b4b805f1c9 # load random value
la x22, scratch # base address
sd x22, 0(x22) # store in memory
amoand.w x22, x22, (x22) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x23)
li x23, 0x82bfbeb0e5495122 # load random value
la x23, scratch # base address
sd x23, 0(x23) # store in memory
amoand.w x23, x23, (x23) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x24)
li x24, 0xe9a65c07dfec4fcb # load random value
la x24, scratch # base address
sd x24, 0(x24) # store in memory
amoand.w x24, x24, (x24) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x25)
li x25, 0x71a6a93097f7fe90 # load random value
la x25, scratch # base address
sd x25, 0(x25) # store in memory
amoand.w x25, x25, (x25) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x26)
li x26, 0x7928d9226d2e027b # load random value
la x26, scratch # base address
sd x26, 0(x26) # store in memory
amoand.w x26, x26, (x26) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x27)
li x27, 0x9e6130a83ebe79ea # load random value
la x27, scratch # base address
sd x27, 0(x27) # store in memory
amoand.w x27, x27, (x27) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x28)
li x28, 0x0da84b0c08b0f208 # load random value
la x28, scratch # base address
sd x28, 0(x28) # store in memory
amoand.w x28, x28, (x28) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x29)
li x29, 0x2c4dda39cb64c66f # load random value
la x29, scratch # base address
sd x29, 0(x29) # store in memory
amoand.w x29, x29, (x29) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x30)
li x30, 0x297a7629ee9daea7 # load random value
la x30, scratch # base address
sd x30, 0(x30) # store in memory
amoand.w x30, x30, (x30) # perform operation

# Testcase cmp_rd_rs1_rs2 (Test rd = rs1 = rs2 = x31)
li x31, 0x8a83988121b19474 # load random value
la x31, scratch # base address
sd x31, 0(x31) # store in memory
amoand.w x31, x31, (x31) # perform operation

# Testcase cp_gpr/fpr_hazard nohaz test
la x26, scratch
add x23, x17, x14 # perform first operation
amoand.w x21, x29, (x26) # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard nohaz test
la x25, scratch
add x9, x30, x28 # perform first operation
amoand.w x31, x21, (x25) # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard nohaz test
la x23, scratch
add x7, x30, x6 # perform first operation
amoand.w x5, x13, (x23) # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard raw test
la x30, scratch
add x5, x5, x0 # perform first operation
amoand.w x23, x5, (x30) # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard raw test
la x15, scratch
add x15, x15, x0 # perform first operation
amoand.w x12, x30, (x15) # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard raw test
la x27, scratch
add x6, x6, x0 # perform first operation
amoand.w x17, x8, (x27) # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard waw test
la x31, scratch
add x26, x9, x12 # perform first operation
amoand.w x26, x20, (x31) # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard waw test
la x7, scratch
add x27, x26, x22 # perform first operation
amoand.w x27, x23, (x7) # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard waw test
la x20, scratch
add x14, x24, x3 # perform first operation
amoand.w x14, x5, (x20) # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard war test
la x31, scratch
add x5, x25, x6 # perform first operation
amoand.w x25, x16, (x31) # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard war test
la x22, scratch
add x1, x3, x18 # perform first operation
amoand.w x18, x12, (x22) # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard war test
la x7, scratch
add x23, x29, x18 # perform first operation
amoand.w x17, x10, (x7) # perform second (triggering) operation

#.EQU SIGSIZE,0
.EQU SIGSIZE,0 #combined


write_tohost:
    la t1, tohost
    li t0, 1
    sw t0, 0(t1)
    sw zero, 4(t1)

self_loop:
    j self_loop

.data

.align 4
scratch:
    .bss 136

.data 

.section .tohost 
tohost: # write to HTIF
    .dword 0
fromhost:
    .dword 0

.align 4
begin_signature:
    .fill SIGSIZE*8/__riscv_xlen,__riscv_xlen/8,0xdeadbeef
end_signature:

.end
